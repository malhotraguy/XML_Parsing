<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="46801" />
    <CreationDate amount="2003-11-17 16:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Jobs] Progress in Wizard does not provide access to running jobs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When a wizard is showing a progress monitor, the user does not have access to 
the list of running jobs that may be interferring with the wizard operations. 
For examples of this, try a plugin import or Team&gt;Apply Patch while a 
background refresh is taking place.
*** Bug 47356 has been marked as a duplicate of this bug. ***
We now bring up a dialog when this locking occurs.
Tod, how does that address the issue I raised in bug 47356 which you marked as 
a duplicate of this one (your comment for making it a duplicate was to 
centralize the discussion about wizard issues).
When there is a blockage you will now get a dialog that shows you the running 
jobs.
Marking closed</WithStack>
    <WithOutStack>When a wizard is showing a progress monitor, the user does not have access to 
the list of running jobs that may be interferring with the wizard operations. 
For examples of this, try a plugin import or Team&gt;Apply Patch while a 
background refresh is taking place.
*** Bug 47356 has been marked as a duplicate of this bug. ***
We now bring up a dialog when this locking occurs.
Tod, how does that address the issue I raised in bug 47356 which you marked as 
a duplicate of this one (your comment for making it a duplicate was to 
centralize the discussion about wizard issues).
When there is a blockage you will now get a dialog that shows you the running 
jobs.
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46802" />
    <CreationDate amount="2003-11-17 16:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Making Eclipse Forms API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>1) To make it API i.e. accessible to others (it is internal currently)</Line>
          <Line>2) To move it away from PDE/Update into the more general name space</Line>
          <Line>3) To carefully incorporate interesting extensions to the original code done</Line>
          <Line>by product teams</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>- the new name of the plug-in would be 'Eclipse Forms'</Line>
          <Line>- it would have an ID 'org.eclipse.ui.forms'</Line>
          <Line>- it would be a part of the RCP workbench (having dependencies to JFace,</Line>
          <Line>editor code etc.) as an optional part of RCP offering.</Line>
          <Line>- it would contain API and internal packages.</Line>
          <Line>- API packages would be:</Line>
          <Line>org.eclipse.ui.forms - for classes that are used to assemble forms</Line>
          <Line>org.eclipse.ui.forms.parts - for building blocks like hyperlinks,</Line>
          <Line>collapsable sections etc.</Line>
          <Line>org.eclipse.ui.forms.editor - for code that hooks forms into multi-page</Line>
          <Line>editor part</Line>
          <Line>As the work on this item progresses, here is the revised list of API packages:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This defect will be used to track the effort of reworking the current forms UI 
(a.k.a. flat UI) with following goal:

1) To make it API i.e. accessible to others (it is internal currently)
2) To move it away from PDE/Update into the more general name space
3) To carefully incorporate interesting extensions to the original code done 
by product teams

A proposal will be written as to what will be done. While the proposal is 
written, please comment on some of the basic proposal points:

- the new name of the plug-in would be 'Eclipse Forms'
- it would have an ID 'org.eclipse.ui.forms'
- it would be a part of the RCP workbench (having dependencies to JFace, 
editor code etc.) as an optional part of RCP offering.
- it would contain API and internal packages.
- API packages would be:
    org.eclipse.ui.forms - for classes that are used to assemble forms
    org.eclipse.ui.forms.parts - for building blocks like hyperlinks, 
collapsable sections etc.
    org.eclipse.ui.forms.editor - for code that hooks forms into multi-page 
editor part
As the work on this item progresses, here is the revised list of API packages:

org.eclipse.ui.forms - the form classes, the toolkit, color management etc.
org.eclipse.ui.forms.editor - forms as part of a multi-page editor
org.eclipse.ui.forms.events - hyperlink and toggle events
org.eclipse.ui.forms.widgets - the custom widgets
Note that you can follow the evolution of the API in the current builds by 
observing the content of 'Eclipse Forms' source folder 
of 'org.eclipse.update.ui.forms' plug-in. This plug-in is currently in the 
Update UI name space but classes in the 'Eclipse Forms' source folder will be 
eventually moved into 'org.eclipse.ui.forms' plug-in.
The plug-in 'org.eclipse.ui.forms' is now in regular builds. Examples of 
Eclipse Forms usage can be found in HEAD under 'org.eclipse.ui.forms.examples' 
project.

The first draft of the user guide can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/EclipseForms/EclipseForms.html

We encourage feedback and suggestions before we cast APIs in stone.
I am closing this defect as fixed (you can still view it from the plan) 
because the code is in regular builds now. Any problems should be reported 
against Platform UI component. Please add [EclipseForms] prefix in the subject 
line.</WithStack>
    <WithOutStack>This defect will be used to track the effort of reworking the current forms UI 
(a.k.a. flat UI) with following goal:

1) To make it API i.e. accessible to others (it is internal currently)
2) To move it away from PDE/Update into the more general name space
3) To carefully incorporate interesting extensions to the original code done 
by product teams

A proposal will be written as to what will be done. While the proposal is 
written, please comment on some of the basic proposal points:

- the new name of the plug-in would be 'Eclipse Forms'
- it would have an ID 'org.eclipse.ui.forms'
- it would be a part of the RCP workbench (having dependencies to JFace, 
editor code etc.) as an optional part of RCP offering.
- it would contain API and internal packages.
- API packages would be:
    org.eclipse.ui.forms - for classes that are used to assemble forms
    org.eclipse.ui.forms.parts - for building blocks like hyperlinks, 
collapsable sections etc.
    org.eclipse.ui.forms.editor - for code that hooks forms into multi-page 
editor part
As the work on this item progresses, here is the revised list of API packages:

org.eclipse.ui.forms - the form classes, the toolkit, color management etc.
org.eclipse.ui.forms.editor - forms as part of a multi-page editor
org.eclipse.ui.forms.events - hyperlink and toggle events
org.eclipse.ui.forms.widgets - the custom widgets
Note that you can follow the evolution of the API in the current builds by 
observing the content of 'Eclipse Forms' source folder 
of 'org.eclipse.update.ui.forms' plug-in. This plug-in is currently in the 
Update UI name space but classes in the 'Eclipse Forms' source folder will be 
eventually moved into 'org.eclipse.ui.forms' plug-in.
The plug-in 'org.eclipse.ui.forms' is now in regular builds. Examples of 
Eclipse Forms usage can be found in HEAD under 'org.eclipse.ui.forms.examples' 
project.

The first draft of the user guide can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/EclipseForms/EclipseForms.html

We encourage feedback and suggestions before we cast APIs in stone.
I am closing this defect as fixed (you can still view it from the plan) 
because the code is in regular builds now. Any problems should be reported 
against Platform UI component. Please add [EclipseForms] prefix in the subject 
line.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46803" />
    <CreationDate amount="2003-11-17 16:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Improved customizability of proxy resolution</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. resource URI</Line>
          <Line>2. and location within the URI (fragment)</Line>
          <Line>of the resolved proxy.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When a resource is loaded and a proxy is created EMF’s design assumes that the
serialized proxy URI will identify the
1. resource URI 
2. and location within the URI (fragment)
of the resolved proxy. 

In a scenario where EMF is used to represent code such as Java the resolution of
a type reference is to be avoided. The scenario, a workaround and a possible
enhancement of EMF have been discussed in detail in this conversation
http://dev.eclipse.org/newslists/news.eclipse.tools.emf/msg02057.html

The enhancement suggested is to introduce a method 
EObject eResolveProxy(InternalEObject proxy) 
in InternalEObject.

In addition I would like to see a similar method on Resource where one can
override the resolution process for all objects at a central location.
Henrich, this feature will be available in the first drop of the 2.0 stream.
The fix is now available in 2.0.0.
The fix is now available in 2.0.0.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>When a resource is loaded and a proxy is created EMF’s design assumes that the
serialized proxy URI will identify the
1. resource URI 
2. and location within the URI (fragment)
of the resolved proxy. 

In a scenario where EMF is used to represent code such as Java the resolution of
a type reference is to be avoided. The scenario, a workaround and a possible
enhancement of EMF have been discussed in detail in this conversation
http://dev.eclipse.org/newslists/news.eclipse.tools.emf/msg02057.html

The enhancement suggested is to introduce a method 
EObject eResolveProxy(InternalEObject proxy) 
in InternalEObject.

In addition I would like to see a similar method on Resource where one can
override the resolution process for all objects at a central location.
Henrich, this feature will be available in the first drop of the 2.0 stream.
The fix is now available in 2.0.0.
The fix is now available in 2.0.0.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46804" />
    <CreationDate amount="2003-11-17 16:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl-C/-X/-V should work for SWT widgets that naturally support copy/paste</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently if a plugin developer uses a text widget of some sort in a view or
editor in the eclipse platform, the widget does not see CTRL-C/Ctrl-V etc,
although Ctrl-INS, Shift-INS etc do work and even thoug the widget has support
built in to handle these standard key bindings.

While there is a complex work around using a hook to the Global Actions, this is
complex and omitted by many plugin developers (some thing I was guilty of in my
own plufgins).  

The current behaviour makes good quality plugin development more difficult and
if not handled properly by the plugin developer lowers the useability of the
platform overall.
If an accelerator key is defined, then the accelerator runs before the key is 
seen by the widget.  This is the correct platform behavior and there is 
nothing much we can do about it.
Sorry.</WithStack>
    <WithOutStack>Currently if a plugin developer uses a text widget of some sort in a view or
editor in the eclipse platform, the widget does not see CTRL-C/Ctrl-V etc,
although Ctrl-INS, Shift-INS etc do work and even thoug the widget has support
built in to handle these standard key bindings.

While there is a complex work around using a hook to the Global Actions, this is
complex and omitted by many plugin developers (some thing I was guilty of in my
own plufgins).  

The current behaviour makes good quality plugin development more difficult and
if not handled properly by the plugin developer lowers the useability of the
platform overall.
If an accelerator key is defined, then the accelerator runs before the key is 
seen by the widget.  This is the correct platform behavior and there is 
nothing much we can do about it.
Sorry.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46805" />
    <CreationDate amount="2003-11-17 16:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>prepare Compare for encoding support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031111

The Compare plugin only supports the global workspace encoding.
It does not support encodings per file.
Added new interface org.eclipse.compare.IStreamContentAccessorExtension2
Clients implementing org.eclipse.compare.IStreamContentAccessor are urged to implement 
IStreamContentAccessorExtension2 in order to provide the correct encoding for the stream 
returned by IStreamContentAccessor.</WithStack>
    <WithOutStack>I20031111

The Compare plugin only supports the global workspace encoding.
It does not support encodings per file.
Added new interface org.eclipse.compare.IStreamContentAccessorExtension2
Clients implementing org.eclipse.compare.IStreamContentAccessor are urged to implement 
IStreamContentAccessorExtension2 in order to provide the correct encoding for the stream 
returned by IStreamContentAccessor.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46806" />
    <CreationDate amount="2003-11-17 17:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>API Change for Update: option to not include configured sites in seach</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="360" end="407" />
        <code>private boolean searchConfiguredSites = true;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="409" end="493" />
        <code>public boolean getSearchConfiguredSites() {
     return searchConfiguredSites;
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="494" end="594" />
        <code>public void setSearchConfiguredSites(boolean value) {
     this.searchConfiguredSites = value;
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Add a specific URL to the list of sites that are searched.  Optionally save</Line>
          <Line>that URL with the bookmarks.</Line>
          <Line>2. Search just a specific URL.  Optionally save it with the bookmarks.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When searching for updates, I would like to be able to choose weather or not 
the search will include the sites configured for each feature (url set in 
feature.xml). For example, I would like to use the update API to search a site 
bookmark for updates to all of my features without searching their configured 
sites.

Suggested new API for SeachObject.java:
  private boolean searchConfiguredSites = true;

  public boolean getSearchConfiguredSites() {
     return searchConfiguredSites;
  }
  public void setSearchConfiguredSites(boolean value) {
     this.searchConfiguredSites = value;
  }

searchConfiguredSites could then be used in doSearch() to determine weather or 
not to include the configured sites.
Check bug 37702, it may be good enough for your needs. 
Basically, you can set up a policy file that redirects all searches to a site 
(or sites) of your choosing.
Dorian,

The use-case Doug is trying to fulfill is purely programmatic and configured
dynamically during run-time.  Thus, the update-policy idea, while cool and
useful in other ways, is not quite applicable for this case.

Although the changes suggested are tiny, the resulting functionality is a pretty
important need for our group.

Mel

Note that search has been completely revised in 3.0: the mentioned class
(SearchObject) does not exist any more.
Its so much fun trying to code to 2.1 APIs while knowing we eventually will be
moving to 3.0 !  :-)

If this class is no longer existing in 3.0, then what that means is that we'll
need to figure out what the comparable functionality is.  Maybe the usecases we
are trying to satisfy are solveable with the existing 3.0 APIs?

Basically, we need to be able to do the following things programmatically (the
specific URL is derived dynamically):

1. Add a specific URL to the list of sites that are searched.  Optionally save
that URL with the bookmarks.
2. Search just a specific URL.  Optionally save it with the bookmarks.

As mentioned elsewhere (bug#45748) we'd also like the ability to do the
download/install of an update completely automatically and silently as well.

We are open to suggestions and guidance on the best way to achieve these goals.
 It is possible we are going about this wrong so far.  The Update Manager APIs
are not as well documented as we'd like.

We haven't yet ported to the 3.0 codebase but will be doing so over the next few
months.

Actually, (so far) we are not breaking any 2.1 Update API. The class in 
question (SearchObject) used to belong to Update UI and none of the Update UI 
classes were API (you can see that clearly in the fully qualified name of the 
class: 

org.eclipse.update.internal.ui.search.SearchObject.

You cannot make dependencies on classes in internal packages as they are 
subject to breaking changes without notice.

Perhaps you should step back from explicit API requirements and describe the 
problem you are trying to solve. It seems to be that you want to dynamically 
compute the actual URL of the update site every time a search is performed.
Closing, as I remember fixing this based on a patch you submitted a while ago.</WithStack>
    <WithOutStack>When searching for updates, I would like to be able to choose weather or not 
the search will include the sites configured for each feature (url set in 
feature.xml). For example, I would like to use the update API to search a site 
bookmark for updates to all of my features without searching their configured 
sites.

Suggested new API for SeachObject.java:
  private boolean searchConfiguredSites = true;

  public boolean getSearchConfiguredSites() {
     return searchConfiguredSites;
  }
  public void setSearchConfiguredSites(boolean value) {
     this.searchConfiguredSites = value;
  }

searchConfiguredSites could then be used in doSearch() to determine weather or 
not to include the configured sites.
Check bug 37702, it may be good enough for your needs. 
Basically, you can set up a policy file that redirects all searches to a site 
(or sites) of your choosing.
Dorian,

The use-case Doug is trying to fulfill is purely programmatic and configured
dynamically during run-time.  Thus, the update-policy idea, while cool and
useful in other ways, is not quite applicable for this case.

Although the changes suggested are tiny, the resulting functionality is a pretty
important need for our group.

Mel

Note that search has been completely revised in 3.0: the mentioned class
(SearchObject) does not exist any more.
Its so much fun trying to code to 2.1 APIs while knowing we eventually will be
moving to 3.0 !  :-)

If this class is no longer existing in 3.0, then what that means is that we'll
need to figure out what the comparable functionality is.  Maybe the usecases we
are trying to satisfy are solveable with the existing 3.0 APIs?

Basically, we need to be able to do the following things programmatically (the
specific URL is derived dynamically):

1. Add a specific URL to the list of sites that are searched.  Optionally save
that URL with the bookmarks.
2. Search just a specific URL.  Optionally save it with the bookmarks.

As mentioned elsewhere (bug#45748) we'd also like the ability to do the
download/install of an update completely automatically and silently as well.

We are open to suggestions and guidance on the best way to achieve these goals.
 It is possible we are going about this wrong so far.  The Update Manager APIs
are not as well documented as we'd like.

We haven't yet ported to the 3.0 codebase but will be doing so over the next few
months.

Actually, (so far) we are not breaking any 2.1 Update API. The class in 
question (SearchObject) used to belong to Update UI and none of the Update UI 
classes were API (you can see that clearly in the fully qualified name of the 
class: 

org.eclipse.update.internal.ui.search.SearchObject.

You cannot make dependencies on classes in internal packages as they are 
subject to breaking changes without notice.

Perhaps you should step back from explicit API requirements and describe the 
problem you are trying to solve. It seems to be that you want to dynamically 
compute the actual URL of the update site every time a search is performed.
Closing, as I remember fixing this based on a patch you submitted a while ago.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46807" />
    <CreationDate amount="2003-11-17 17:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Renamed JPanel bean does not show correctly in JFrame</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>This is propably related to bug 46798 but there are no exceptions in the log.

Test scenario JVEWRKB02 with two classes in separate projects and packages.

Here's a simpler case with two classes in the same project and package.
Create a class called MyJPanel that extends JPanel. Set it's background to blue 
and save it. Leave the VE open.
Create another class called MyJFrame that extends JFrame. Drop MyJPanel into 
its center region and save it. Leave the VE open for this class also.

From the package explorer, MB2 over MyJPanel and select Refactor--&gt;Rename to 
another class name (e.g. MyJPanelX).
The VMs are refreshed but MyJPanelX does not show the color or doesn't show 
anything on the canvas or in the BEans viewer (I had different results on 
several trys). MyJFrame no longer shows a content pane and doesn't refresh 
correctly either.
Sounds like the VMs are not refreshing correctly. 
In this state, if you change the background property in the source viewer to 
another color, the VM refreshes and both editors refresh and show correctly.
I don't know yet what the problem is, but this is valid. It shouldn't of done this.
I brought up my original workspace and tried to reproduce this problem but was 
unable to do do. Must have been a fluke in my workspace when I first came up 
with the problem because I could reproduce this several times.

Return for now...
Peter, I reproduced on my machine back on 11/18. So it is valid. So I'm
reopening it.
Well, something changed. Because using the same workspace and the same classes,
no change to them, I can no longer reproduce it. I must of fixed something and
didn't realize it, and now the problem is gone. I hate that.
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.</WithStack>
    <WithOutStack>This is propably related to bug 46798 but there are no exceptions in the log.

Test scenario JVEWRKB02 with two classes in separate projects and packages.

Here's a simpler case with two classes in the same project and package.
Create a class called MyJPanel that extends JPanel. Set it's background to blue 
and save it. Leave the VE open.
Create another class called MyJFrame that extends JFrame. Drop MyJPanel into 
its center region and save it. Leave the VE open for this class also.

From the package explorer, MB2 over MyJPanel and select Refactor--&gt;Rename to 
another class name (e.g. MyJPanelX).
The VMs are refreshed but MyJPanelX does not show the color or doesn't show 
anything on the canvas or in the BEans viewer (I had different results on 
several trys). MyJFrame no longer shows a content pane and doesn't refresh 
correctly either.
Sounds like the VMs are not refreshing correctly. 
In this state, if you change the background property in the source viewer to 
another color, the VM refreshes and both editors refresh and show correctly.
I don't know yet what the problem is, but this is valid. It shouldn't of done this.
I brought up my original workspace and tried to reproduce this problem but was 
unable to do do. Must have been a fluke in my workspace when I first came up 
with the problem because I could reproduce this several times.

Return for now...
Peter, I reproduced on my machine back on 11/18. So it is valid. So I'm
reopening it.
Well, something changed. Because using the same workspace and the same classes,
no change to them, I can no longer reproduce it. I must of fixed something and
didn't realize it, and now the problem is gone. I hate that.
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46808" />
    <CreationDate amount="2003-11-17 18:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows ME" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to create platform lock file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341074348">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="2">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="3">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341074348">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="2">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="3">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:1049)</Frame>
          <Frame depth="5">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:838)</Frame>
          <Frame depth="6">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
        </Frames>
      </Cause>
      <Cause timestamp="1437341074348">
        <Exception>org.eclipse.core.runtime.CoreException</Exception>
        <Reason>Unable to create platform 
lock file: C:\eclipse\workspace\.metadata\.lock.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.InternalPlatform.createLockFile(InternalPlatform.java:225)</Frame>
          <Frame depth="1">org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatform.java:677)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Error when attempting to start Eclipse under Windows ME on a PC w/ 256K RAM.  
Not sure whether this is a WinME problem? Semaphores, etc.?

Utilizing Sun JVM:

java version "1.4.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.0-b92)
Java HotSpot(TM) Client VM (build 1.4.0-b92, mixed mode)

This is my default VM (I get the same error when I explicitly specify using 
the -vm &lt;path&gt;\javaw.exe option.)

Here's the .log error message:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Nov 17, 2003 17:09:33.980
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.internal.boot.InternalBootLoader.startup
(InternalBootLoader.java:1049)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:838)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	... 7 more
Caused by: org.eclipse.core.runtime.CoreException: Unable to create platform 
lock file: C:\eclipse\workspace\.metadata\.lock.
	at org.eclipse.core.internal.runtime.InternalPlatform.createLockFile
(InternalPlatform.java:225)
	at org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup
(InternalPlatform.java:677)
	... 14 more

==============================================================================
Patrick, could you run the simple test case that appears in bug 44487 comment 9,
passing the lock file location as the only argument? Something like this:

&lt;JAVA_HOME&gt;\bin\java TestLock C:\eclipse\workspace\.metadata\.lock

(provided C:\eclipse\workspace\.metadata exists)

That should fail, and the cause should be more visible. Thanks.
Also, so you can run, you can specific -Dorg.eclipse.core.runtime.ignoreLockFile
in the VM args when running Eclipse:

eclipse &lt;other args&gt; -vmargs -Dorg.eclipse.core.runtime.ignoreLockFile

This is one workaround that disables the lock file (what leaves you unprotected). 

To understand what may be going on, we need more information (please see comment
1 above).
Rafael,

Here's the output of the TestLock application:

C:\tmp\download\Java\Eclipse&gt;java TestLock c:\eclipse\workspace\.metadata\.lock
trying to acquire lock once
Exception in thread "main" java.io.IOException: The parameter is incorrect
        at sun.nio.ch.FileChannelImpl.lock0(Native Method)
        at sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:528)
        at java.nio.channels.FileChannel.tryLock(FileChannel.java:967)
        at TestLock.acquireLock(TestLock.java:8)
        at TestLock.main(TestLock.java:13)

I also tried disabling the lock file as you suggested in comment#2.  But this 
generated an error. (See attached file error1.jpg.)
Created attachment 6923
Dialog error when attempting to ignore lockfile on startup

Error message generated when executing:

eclipse -vmargs -Dorg.eclipse.core.runtime.ignoreLockFile
What is in your log file after you run passing the ignoreLockFile property?

Also, could you try running with a newer VM (using the -vm option to specify the
java.exe or javaw.exe *inside the JDK/JRE install dir*)? We have had problems
reported with running on Sun JDK 1.4.0 (see bug 44687). 


No further information from the originator. Closing.</WithStack>
    <WithOutStack>Error when attempting to start Eclipse under Windows ME on a PC w/ 256K RAM.  
Not sure whether this is a WinME problem? Semaphores, etc.?

Utilizing Sun JVM:

java version "1.4.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.0-b92)
Java HotSpot(TM) Client VM (build 1.4.0-b92, mixed mode)

This is my default VM (I get the same error when I explicitly specify using 
the -vm &lt;path&gt;\javaw.exe option.)

Here's the .log error message:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Nov 17, 2003 17:09:33.980
!MESSAGE Exception launching the Eclipse Platform:
!STACK


	... 7 more

	... 14 more

==============================================================================
Patrick, could you run the simple test case that appears in bug 44487 comment 9,
passing the lock file location as the only argument? Something like this:

&lt;JAVA_HOME&gt;\bin\java TestLock C:\eclipse\workspace\.metadata\.lock

(provided C:\eclipse\workspace\.metadata exists)

That should fail, and the cause should be more visible. Thanks.
Also, so you can run, you can specific -Dorg.eclipse.core.runtime.ignoreLockFile
in the VM args when running Eclipse:

eclipse &lt;other args&gt; -vmargs -Dorg.eclipse.core.runtime.ignoreLockFile

This is one workaround that disables the lock file (what leaves you unprotected). 

To understand what may be going on, we need more information (please see comment
1 above).
Rafael,

Here's the output of the TestLock application:

C:\tmp\download\Java\Eclipse&gt;java TestLock c:\eclipse\workspace\.metadata\.lock
trying to acquire lock once
Exception in thread "main" java.io.IOException: The parameter is incorrect
        at sun.nio.ch.FileChannelImpl.lock0(Native Method)
        at sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:528)
        at java.nio.channels.FileChannel.tryLock(FileChannel.java:967)
        at TestLock.acquireLock(TestLock.java:8)
        at TestLock.main(TestLock.java:13)

I also tried disabling the lock file as you suggested in comment#2.  But this 
generated an error. (See attached file error1.jpg.)
Created attachment 6923
Dialog error when attempting to ignore lockfile on startup

Error message generated when executing:

eclipse -vmargs -Dorg.eclipse.core.runtime.ignoreLockFile
What is in your log file after you run passing the ignoreLockFile property?

Also, could you try running with a newer VM (using the -vm option to specify the
java.exe or javaw.exe *inside the JDK/JRE install dir*)? We have had problems
reported with running on Sun JDK 1.4.0 (see bug 44687). 


No further information from the originator. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46809" />
    <CreationDate amount="2003-11-17 18:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] "adviser" vs. "advisor"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- renamed "WorkbenchAdviser" to "WorkbenchAdvisor"</Line>
          <Line>- changed all text references of "adviser" to "advisor" in UI projects</Line>
          <Line>- changed browser example and posted a modified browserExample.zip</Line>
          <Line>- changed all references in platform-ui-home/rcp-proposal/*.html</Line>
          <Line>- changed all references in platform-ui-home/rcp-</Line>
          <Line>proposal/rcp_tutorial/index.html (except the ones in RcpTestProject.zip)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Ed Burnette writes:
&gt; By the way, is the correct spelling "Adviser" or "Advisor"
&gt; (for the WorkbenchAdviser class)? Both appear in the dictionary,
&gt; and most references say they are equivalent. However,
&gt; "advisor" seems to be a bit more common.

My initial reply:
&gt; Both the American Heritage Dictionary and the OED give the
&gt; edge to "adviser", although I must admit that I was surpised
&gt; they agreed on this (i.e., a classic American vs. British
&gt; thing with us Canadians straddling the fence). fyi, Eclipse
&gt; follows the American spellings.

After asking around, "advisor" has the edge. The most convincing
evidence was that Nick's browser example has a class named "BrowserAdvisor".

The class name should be changed to "WorkbenchAdvisor" and "adviser" replaced 
by "advisor" throughout.
Fixed in builds &gt; N20031117.

- renamed "WorkbenchAdviser" to "WorkbenchAdvisor"
- changed all text references of "adviser" to "advisor" in UI projects
- changed browser example and posted a modified browserExample.zip
- changed all references in platform-ui-home/rcp-proposal/*.html
- changed all references in platform-ui-home/rcp-
proposal/rcp_tutorial/index.html (except the ones in RcpTestProject.zip)</WithStack>
    <WithOutStack>Ed Burnette writes:
&gt; By the way, is the correct spelling "Adviser" or "Advisor"
&gt; (for the WorkbenchAdviser class)? Both appear in the dictionary,
&gt; and most references say they are equivalent. However,
&gt; "advisor" seems to be a bit more common.

My initial reply:
&gt; Both the American Heritage Dictionary and the OED give the
&gt; edge to "adviser", although I must admit that I was surpised
&gt; they agreed on this (i.e., a classic American vs. British
&gt; thing with us Canadians straddling the fence). fyi, Eclipse
&gt; follows the American spellings.

After asking around, "advisor" has the edge. The most convincing
evidence was that Nick's browser example has a class named "BrowserAdvisor".

The class name should be changed to "WorkbenchAdvisor" and "adviser" replaced 
by "advisor" throughout.
Fixed in builds &gt; N20031117.

- renamed "WorkbenchAdviser" to "WorkbenchAdvisor"
- changed all text references of "adviser" to "advisor" in UI projects
- changed browser example and posted a modified browserExample.zip
- changed all references in platform-ui-home/rcp-proposal/*.html
- changed all references in platform-ui-home/rcp-
proposal/rcp_tutorial/index.html (except the ones in RcpTestProject.zip)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46810" />
    <CreationDate amount="2003-11-17 19:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>unexpected behavior for TableItem.setBackground() when column is not left-aligned</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When a table column is not left-aligned(i.e. SWT.CENTER or SWT.RIGHT is used), 
calling TableItem.setBackground() will only set the background color of each 
cell from where the text starts to the end of the cell, not the entire cell.  
So when you select a row, instead of the whole row being colored the same 
continuously from left to right, you have all these white spaces on the left of 
each cell.
fixed &gt; 1126</WithStack>
    <WithOutStack>When a table column is not left-aligned(i.e. SWT.CENTER or SWT.RIGHT is used), 
calling TableItem.setBackground() will only set the background color of each 
cell from where the text starts to the end of the cell, not the entire cell.  
So when you select a row, instead of the whole row being colored the same 
continuously from left to right, you have all these white spaces on the left of 
each cell.
fixed &gt; 1126</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46811" />
    <CreationDate amount="2003-11-17 19:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Deadlock saving working copies</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Fairly consistently on 20031113 I have been hitting deadlocks saving 
LaunchConfigurationWorkingCopies.

The interesting stack traces:

Thread [main] (Suspended)
	Object.wait(long) line: not available [native method]
	Semaphore.acquire(long) line: 36
	JobManager.join(InternalJob) line: 385
	AutoBuildJob(InternalJob).join() line: 175
	AutoBuildJob(Job).join() line: 286
	BuildManager.interrupt() line: 311
	Workspace.prepareOperation(ISchedulingRule, IProgressMonitor) line: 1519
	Workspace.run(IWorkspaceRunnable, ISchedulingRule, int, 
IProgressMonitor) line: 1553
	Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1577
	LaunchConfigurationWorkingCopy.doSave() line: 169
	AntLaunchShortcut.createDefaultLaunchConfiguration(IFile) line: 233
	AntLaunchShortcut.launch(IFile, String, String) line: 130
	AntLaunchShortcut.launch(IResource, String) line: 110
	AntRunActionDelegate.run(IAction) line: 38
	AntRunActionDelegate(ActionDelegate).runWithEvent(IAction, Event) line: 
71
	ObjectPluginAction(PluginAction).runWithEvent(Event) line: 260
	PluginActionContributionItem
(ActionContributionItem).handleWidgetSelection(Event, boolean) line: 542
	ActionContributionItem.access$4(ActionContributionItem, Event, boolean) 
line: 494
	ActionContributionItem$6.handleEvent(Event) line: 466
	EventTable.sendEvent(Event) line: 82
	MenuItem(Widget).sendEvent(Event) line: 847
	Display.runDeferredEvents() line: 2187
	Display.readAndDispatch() line: 1877
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1402
	Workbench.runUI() line: 1378
	Workbench.createAndRunWorkbench(Display, WorkbenchAdviser) line: 234
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdviser) line: 139
	IDEApplication.run(Object) line: 47
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
858
	BootLoader.run(String, URL, String, String[], Runnable) line: 461
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 299
	Main.run(String[]) line: 767
	Main.main(String[]) line: 601

Thread [Worker-0] (Suspended)
	Object.wait(long) line: not available [native method]
	Semaphore.acquire(long) line: 37
	UISynchronizer.syncExec(Runnable) line: 42
	Display.syncExec(Runnable) line: 2504
	WorkbenchContentProvider.resourceChanged(IResourceChangeEvent) line: 107
	NotificationManager$2.run() line: 251
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	NotificationManager.notify(ResourceChangeListenerList$ListenerEntry[], 
IResourceChangeEvent, boolean) line: 244
	NotificationManager.broadcastChanges(ElementTree, int, boolean) line: 
138
	Workspace.broadcastChanges(int, boolean) line: 150
	Workspace.endOperation(ISchedulingRule, boolean, IProgressMonitor) 
line: 851
	File.create(InputStream, int, IProgressMonitor) line: 169
	BatchImageBuilder(AbstractImageBuilder).writeClassFileBytes(byte[], 
IFile, String, boolean, boolean) line: 462
	BatchImageBuilder(AbstractImageBuilder).writeClassFile(ClassFile, 
SourceFile, boolean) line: 445
	BatchImageBuilder(AbstractImageBuilder).acceptResult(CompilationResult) 
line: 117
	Compiler.compile(ICompilationUnit[]) line: 340
	BatchImageBuilder(AbstractImageBuilder).compile(SourceFile[], SourceFile
[]) line: 205
	BatchImageBuilder(AbstractImageBuilder).compile(SourceFile[]) line: 155
	BatchImageBuilder.build() line: 51
	JavaBuilder.buildAll() line: 212
	JavaBuilder.build(int, Map, IProgressMonitor) line: 140
	BuildManager$2.run() line: 484
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	BuildManager.basicBuild(int, IncrementalProjectBuilder, Map, 
MultiStatus, IProgressMonitor) line: 130
	BuildManager.basicBuild(IProject, int, String, Map, MultiStatus, 
IProgressMonitor) line: 201
	BuildManager.basicBuild(IProject, int, ICommand[], MultiStatus, 
IProgressMonitor) line: 156
	BuildManager$1.run() line: 182
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	BuildManager.basicBuild(IProject, int, MultiStatus, IProgressMonitor) 
line: 185
	BuildManager.basicBuildLoop(IProject[], IProject[], int, MultiStatus, 
IProgressMonitor) line: 219
	BuildManager.build(int, IProgressMonitor) line: 247
	AutoBuildJob.doBuild(IProgressMonitor) line: 76
	AutoBuildJob.run(IProgressMonitor) line: 109
	Worker.run() line: 62
Please investigate and assess priotiry for M5
We have improved this greatly for the build today.
For local launch configurations we no longer perform a workspace runnable.
For shared launch configs or a launch configuration that used to be shared, we 
still lock on the workspace. We had issues with getting the ISchedulingRules 
set up correctly in time for the build. 

Candidate for fix later in the week.
This is not a regression. The rest of the fix is moved to M6.
Fixed in LaunchConfigurationWorkingCopy. The parent(s) of the files that will 
be manipulated in the workspace are set as the scheduling rules.
Please verify Jared.
Looks good. Verified.</WithStack>
    <WithOutStack>Fairly consistently on 20031113 I have been hitting deadlocks saving 
LaunchConfigurationWorkingCopies.

The interesting stack traces:

Thread [main] (Suspended)
	Object.wait(long) line: not available [native method]
	Semaphore.acquire(long) line: 36
	JobManager.join(InternalJob) line: 385
	AutoBuildJob(InternalJob).join() line: 175
	AutoBuildJob(Job).join() line: 286
	BuildManager.interrupt() line: 311
	Workspace.prepareOperation(ISchedulingRule, IProgressMonitor) line: 1519
	Workspace.run(IWorkspaceRunnable, ISchedulingRule, int, 
IProgressMonitor) line: 1553
	Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1577
	LaunchConfigurationWorkingCopy.doSave() line: 169
	AntLaunchShortcut.createDefaultLaunchConfiguration(IFile) line: 233
	AntLaunchShortcut.launch(IFile, String, String) line: 130
	AntLaunchShortcut.launch(IResource, String) line: 110
	AntRunActionDelegate.run(IAction) line: 38
	AntRunActionDelegate(ActionDelegate).runWithEvent(IAction, Event) line: 
71
	ObjectPluginAction(PluginAction).runWithEvent(Event) line: 260
	PluginActionContributionItem
(ActionContributionItem).handleWidgetSelection(Event, boolean) line: 542
	ActionContributionItem.access$4(ActionContributionItem, Event, boolean) 
line: 494
	ActionContributionItem$6.handleEvent(Event) line: 466
	EventTable.sendEvent(Event) line: 82
	MenuItem(Widget).sendEvent(Event) line: 847
	Display.runDeferredEvents() line: 2187
	Display.readAndDispatch() line: 1877
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1402
	Workbench.runUI() line: 1378
	Workbench.createAndRunWorkbench(Display, WorkbenchAdviser) line: 234
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdviser) line: 139
	IDEApplication.run(Object) line: 47
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
858
	BootLoader.run(String, URL, String, String[], Runnable) line: 461
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 299
	Main.run(String[]) line: 767
	Main.main(String[]) line: 601

Thread [Worker-0] (Suspended)
	Object.wait(long) line: not available [native method]
	Semaphore.acquire(long) line: 37
	UISynchronizer.syncExec(Runnable) line: 42
	Display.syncExec(Runnable) line: 2504
	WorkbenchContentProvider.resourceChanged(IResourceChangeEvent) line: 107
	NotificationManager$2.run() line: 251
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	NotificationManager.notify(ResourceChangeListenerList$ListenerEntry[], 
IResourceChangeEvent, boolean) line: 244
	NotificationManager.broadcastChanges(ElementTree, int, boolean) line: 
138
	Workspace.broadcastChanges(int, boolean) line: 150
	Workspace.endOperation(ISchedulingRule, boolean, IProgressMonitor) 
line: 851
	File.create(InputStream, int, IProgressMonitor) line: 169
	BatchImageBuilder(AbstractImageBuilder).writeClassFileBytes(byte[], 
IFile, String, boolean, boolean) line: 462
	BatchImageBuilder(AbstractImageBuilder).writeClassFile(ClassFile, 
SourceFile, boolean) line: 445
	BatchImageBuilder(AbstractImageBuilder).acceptResult(CompilationResult) 
line: 117
	Compiler.compile(ICompilationUnit[]) line: 340
	BatchImageBuilder(AbstractImageBuilder).compile(SourceFile[], SourceFile
[]) line: 205
	BatchImageBuilder(AbstractImageBuilder).compile(SourceFile[]) line: 155
	BatchImageBuilder.build() line: 51
	JavaBuilder.buildAll() line: 212
	JavaBuilder.build(int, Map, IProgressMonitor) line: 140
	BuildManager$2.run() line: 484
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	BuildManager.basicBuild(int, IncrementalProjectBuilder, Map, 
MultiStatus, IProgressMonitor) line: 130
	BuildManager.basicBuild(IProject, int, String, Map, MultiStatus, 
IProgressMonitor) line: 201
	BuildManager.basicBuild(IProject, int, ICommand[], MultiStatus, 
IProgressMonitor) line: 156
	BuildManager$1.run() line: 182
	InternalPlatform.run(ISafeRunnable) line: 1123
	Platform.run(ISafeRunnable) line: 461
	BuildManager.basicBuild(IProject, int, MultiStatus, IProgressMonitor) 
line: 185
	BuildManager.basicBuildLoop(IProject[], IProject[], int, MultiStatus, 
IProgressMonitor) line: 219
	BuildManager.build(int, IProgressMonitor) line: 247
	AutoBuildJob.doBuild(IProgressMonitor) line: 76
	AutoBuildJob.run(IProgressMonitor) line: 109
	Worker.run() line: 62
Please investigate and assess priotiry for M5
We have improved this greatly for the build today.
For local launch configurations we no longer perform a workspace runnable.
For shared launch configs or a launch configuration that used to be shared, we 
still lock on the workspace. We had issues with getting the ISchedulingRules 
set up correctly in time for the build. 

Candidate for fix later in the week.
This is not a regression. The rest of the fix is moved to M6.
Fixed in LaunchConfigurationWorkingCopy. The parent(s) of the files that will 
be manipulated in the workspace are set as the scheduling rules.
Please verify Jared.
Looks good. Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46812" />
    <CreationDate amount="2003-11-17 19:18:00 -0500" />
    <DupId amount="46552" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Items in the synchronize view blinking after a 'refresh with remote'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I200311111216

I launched Eclipse, activated the synchronize view and click on 'refresh with
remote'.
At the end of the synchronize, the name of the projects started to blink (black
- gray out), the job to update the label decorator of the elements was running
(there was 242 incoming changes).

My guess is that for each elements, the label decorator job performs a 'team'
operation, so the view is gray-out, then the operation finishes, the view is
re-enable.
This should be fixed in the today's integration build. The problem was 

*** This bug has been marked as a duplicate of 46552 ***</WithStack>
    <WithOutStack>I200311111216

I launched Eclipse, activated the synchronize view and click on 'refresh with
remote'.
At the end of the synchronize, the name of the projects started to blink (black
- gray out), the job to update the label decorator of the elements was running
(there was 242 incoming changes).

My guess is that for each elements, the label decorator job performs a 'team'
operation, so the view is gray-out, then the operation finishes, the view is
re-enable.
This should be fixed in the today's integration build. The problem was 

*** This bug has been marked as a duplicate of 46552 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46813" />
    <CreationDate amount="2003-11-17 19:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Jobs] progress icon in left corner</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="49" end="264" />
        <code>public void preWindowOpen(final IWorkbenchWindowConfigurer configurer) {
        configurer.setShowShortcutBar(false);
        configurer.setShowToolBar(false);
        configurer.setShowStatusLine(false);
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I configured the following in my Advisor class:

    public void preWindowOpen(final IWorkbenchWindowConfigurer configurer) {
        configurer.setShowShortcutBar(false);
        configurer.setShowToolBar(false);
        configurer.setShowStatusLine(false);
    }

Now there's an ugly gray box on the bottom left corner where the "progress icon"
would be placed.
Created attachment 6823
pic showing the gray box
BTW, is there a way to set the initial values through XML instead of using the
configurer.setShowXXX methods in preWindowOpen?
This is due to the current layout being designed based on the presence of 
status and shortcut bars. This will be taken care of in the new look.

However if we decide to keep the WorkbenchWindow we will also need to handle 
this case.
Fixed in M7
Verified in 200403100800</WithStack>
    <WithOutStack>I configured the following in my Advisor class:

    public void preWindowOpen(final IWorkbenchWindowConfigurer configurer) {
        configurer.setShowShortcutBar(false);
        configurer.setShowToolBar(false);
        configurer.setShowStatusLine(false);
    }

Now there's an ugly gray box on the bottom left corner where the "progress icon"
would be placed.
Created attachment 6823
pic showing the gray box
BTW, is there a way to set the initial values through XML instead of using the
configurer.setShowXXX methods in preWindowOpen?
This is due to the current layout being designed based on the presence of 
status and shortcut bars. This will be taken care of in the new look.

However if we decide to keep the WorkbenchWindow we will also need to handle 
this case.
Fixed in M7
Verified in 200403100800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46814" />
    <CreationDate amount="2003-11-17 19:54:00 -0500" />
    <DupId amount="46704" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Background color from instruction pointer annotations not correctly cleaned up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I200311111216 + debug code from HEAD
Linux-GTK

The background color is not correctly reset when the instruction pointer
annotations are removed, the indentation part of the line stays green (see
attached screenshot).

It may be Linux-GTK specifique problem.
Created attachment 6824
an editor after a short debug session


*** This bug has been marked as a duplicate of 46704 ***</WithStack>
    <WithOutStack>I200311111216 + debug code from HEAD
Linux-GTK

The background color is not correctly reset when the instruction pointer
annotations are removed, the indentation part of the line stays green (see
attached screenshot).

It may be Linux-GTK specifique problem.
Created attachment 6824
an editor after a short debug session


*** This bug has been marked as a duplicate of 46704 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46815" />
    <CreationDate amount="2003-11-17 20:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VM widgets enabled when set to run in same VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Open the external tools launch config dialog.
Select a config that is set to happen in the same VM as eclipse

The VM arguments widgets are enabled. They should not be.
Fixed in AntJRETab.
Please verify Luc.
Verified.
Please update the build notes, Darin S.</WithStack>
    <WithOutStack>Open the external tools launch config dialog.
Select a config that is set to happen in the same VM as eclipse

The VM arguments widgets are enabled. They should not be.
Fixed in AntJRETab.
Please verify Luc.
Verified.
Please update the build notes, Darin S.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46816" />
    <CreationDate amount="2003-11-17 21:32:00 -0500" />
    <DupId amount="46671" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>ajc fails in solving class dependency</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341074360">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java:53)</Frame>
          <Frame depth="1">org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:52)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:291)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:228)</Frame>
          <Frame depth="4">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:109)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:310)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)</Frame>
          <Frame depth="7">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:373)</Frame>
          <Frame depth="8">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:125)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:70)</Frame>
          <Frame depth="10">org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)</Frame>
          <Frame depth="11">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)</Frame>
          <Frame depth="12">org.aspectj.tools.ajc.Main.run(Main.java:217)</Frame>
          <Frame depth="13">org.aspectj.tools.ajc.Main.runMain(Main.java:155)</Frame>
          <Frame depth="14">org.aspectj.tools.ajc.Main.main(Main.java:72)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074360">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java:53)</Frame>
          <Frame depth="1">org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:52)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:291)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:228)</Frame>
          <Frame depth="4">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:109)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:310)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)</Frame>
          <Frame depth="7">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:373)</Frame>
          <Frame depth="8">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:125)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:70)</Frame>
          <Frame depth="10">org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)</Frame>
          <Frame depth="11">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)</Frame>
          <Frame depth="12">org.aspectj.tools.ajc.Main.run(Main.java:217)</Frame>
          <Frame depth="13">org.aspectj.tools.ajc.Main.runMain(Main.java:155)</Frame>
          <Frame depth="14">org.aspectj.tools.ajc.Main.main(Main.java:72)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074360">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java:53)</Frame>
          <Frame depth="1">org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:52)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn                                            terTypeDeclarations(AjLookupEnvironment.java:291)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn                                            terTypeDeclarations(AjLookupEnvironment.java:228)</Frame>
          <Frame depth="4">org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet                                            eTypeBindings(AjLookupEnvironment.java:109)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja                                             va:310)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)</Frame>
          <Frame depth="7">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat                                             ion(AjBuildManager.java:373)</Frame>
          <Frame depth="8">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild                                             Manager.java:125)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu                                             ildManager.java:70)</Frame>
          <Frame depth="10">org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)</Frame>
          <Frame depth="11">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)</Frame>
          <Frame depth="12">org.aspectj.tools.ajc.Main.run(Main.java:217)</Frame>
          <Frame depth="13">org.aspectj.tools.ajc.Main.runMain(Main.java:155)</Frame>
          <Frame depth="14">org.aspectj.tools.ajc.Main.main(Main.java:72)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="4126" end="4150" />
        <code>Class1 a = new Class1();</code>
      </source_code>
      <source_code type="assignment">
        <location start="4249" end="4273" />
        <code>Class1 a = new Class1();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="50">
        <Lines>
          <Line>B.java" works fine ...</Line>
          <Line>Created attachment 6825</Line>
          <Line>the first class for a compilation</Line>
          <Line>Created attachment 6826</Line>
          <Line>the 2nd class for a compilation</Line>
          <Line>It seems that if both classes have non-empty aspects defined in them and one of</Line>
          <Line>them depends on the other, ajc cannot solve this dependency and ends up with a</Line>
          <Line>null pointer exception. The problem is most like be in ResolvedTypeMunger.java</Line>
          <Line>(line 53, where matchType.getWorld() returns null!), ResolvedTypeX.java and</Line>
          <Line>ConcreteTypeMunger.java.</Line>
          <Line>When I compile Class2 with "ajc Class2.java", I get:</Line>
          <Line />
          <Line>can't find type Class1</Line>
          <Line>/home/thomas/temp/tt/Class1.java:0 Internal compiler error</Line>
          <Line>java.lang.NullPointerException</Line>
          <Line>at org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java</Line>
          <Line>:53)</Line>
          <Line>at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java</Line>
          <Line>:52)</Line>
          <Line>at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn</Line>
          <Line>terTypeDeclarations(AjLookupEnvironment.java:291)</Line>
          <Line>at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn</Line>
          <Line>terTypeDeclarations(AjLookupEnvironment.java:228)</Line>
          <Line>at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet</Line>
          <Line>eTypeBindings(AjLookupEnvironment.java:109)</Line>
          <Line>at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja</Line>
          <Line>va:310)</Line>
          <Line>at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)</Line>
          <Line>at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat</Line>
          <Line>ion(AjBuildManager.java:373)</Line>
          <Line>at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild</Line>
          <Line>Manager.java:125)</Line>
          <Line>at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu</Line>
          <Line>ildManager.java:70)</Line>
          <Line>at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)</Line>
          <Line>at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)</Line>
          <Line>at org.aspectj.tools.ajc.Main.run(Main.java:217)</Line>
          <Line>at org.aspectj.tools.ajc.Main.runMain(Main.java:155)</Line>
          <Line>at org.aspectj.tools.ajc.Main.main(Main.java:72)</Line>
          <Line />
          <Line />
          <Line>!! no source information available !!</Line>
          <Line>ABORT</Line>
          <Line>Exception thrown from AspectJ 1.1.1</Line>
          <Line />
          <Line>This might be logged as a bug already -- find current bugs at</Line>
          <Line>http://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&amp;component=Compiler</Line>
          <Line />
          <Line>Bugs for exceptions thrown have titles File:line from the top stack,</Line>
          <Line>e.g., "SomeFile.java:243"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If class A refers to B and B refers to A, and both of A.java and B.java has
aspects defined in them, ajc throws an exception if one uses "ajc A.java" or
"ajc B.java" even if they are in the same directory. However, "ajc A.java
B.java" works fine ...
Created attachment 6825
the first class for a compilation
Created attachment 6826
the 2nd class for a compilation
It seems that if both classes have non-empty aspects defined in them and one of
them depends on the other, ajc cannot solve this dependency and ends up with a
null pointer exception. The problem is most like be in ResolvedTypeMunger.java
(line 53, where matchType.getWorld() returns null!), ResolvedTypeX.java and
ConcreteTypeMunger.java.
When I compile Class2 with "ajc Class2.java", I get:

can't find type Class1
java.lang.NullPointerException
        at org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java
:53)
        at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java
:52)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:291)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:228)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet
eTypeBindings(AjLookupEnvironment.java:109)
        at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja
va:310)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat
ion(AjBuildManager.java:373)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild
Manager.java:125)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu
ildManager.java:70)
        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)
        at org.aspectj.tools.ajc.Main.run(Main.java:217)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)
        at org.aspectj.tools.ajc.Main.main(Main.java:72)
/home/thomas/temp/tt/Class1.java:0 Internal compiler error
java.lang.NullPointerException
        at org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java
:53)
        at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java
:52)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:291)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:228)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet
eTypeBindings(AjLookupEnvironment.java:109)
        at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja
va:310)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat
ion(AjBuildManager.java:373)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild
Manager.java:125)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu
ildManager.java:70)
        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)
        at org.aspectj.tools.ajc.Main.run(Main.java:217)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)
        at org.aspectj.tools.ajc.Main.main(Main.java:72)


!! no source information available !!
ABORT
Exception thrown from AspectJ 1.1.1

This might be logged as a bug already -- find current bugs at
  http://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&amp;component=Compiler

Bugs for exceptions thrown have titles File:line from the top stack,
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
at http://bugs.eclipse.org/bugs/enter_bug.cgi?product=AspectJ
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
        at org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java
:53)
        at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java
:52)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
                                            
terTypeDeclarations(AjLookupEnvironment.java:291)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
                                            
terTypeDeclarations(AjLookupEnvironment.java:228)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet
                                            
eTypeBindings(AjLookupEnvironment.java:109)
        at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja
                                             va:310)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat
                                             ion(AjBuildManager.java:373)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild
                                             Manager.java:125)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu
                                             ildManager.java:70)
        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)
        at org.aspectj.tools.ajc.Main.run(Main.java:217)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)
        at org.aspectj.tools.ajc.Main.main(Main.java:72)


1 fail|abort, 2 errors

However, Class1 is in the same directory, and "ajc Class1.java Class2.java"
works fine!
Added to the list under the general category of "improve error messages from 
weaver"

Thomas - the AspectJ compiler doesn't support resolution of types from the 
sourcepath. If "." is in your classpath and you have previously compiled such 
that the .classs files are available, then you can compile successfully passing 
in just a single source file argument. If neither the source file nor the .class 
file is available to AspectJ, it will fail because it can't resolve the missing 
type.The error message you received does not explain this situation cleary!
This bug is the same problem as 46671.  What is actually happening is that the 
compiler is unable to locate 'Class1.class' so it looks on its classpath 
for 'Class1.java' - if it finds it (i.e. you have '.' on your CLASSPATH) then 
the compiler attempts to build it as well.  AspectJ doesn't currently support 
this kind of faulting in of source files, and the fix for 46671 prevents the 
NPE explosion shown in this bug report by deactivating the default JDT 
compiler faulting behavior.  With the fix in place, 'ajc Class2.java' produces:

C:\eclipse\aspectj_ws\tests\bugs\Class2.java:4 Class1 cannot be resolved (or 
is not a valid type) for the field Class2.a
Class1 a = new Class1();
^^^^^^
C:\eclipse\aspectj_ws\tests\bugs\Class2.java:4 Class1 cannot be resolved or is 
not a type
Class1 a = new Class1();
               ^^^^^^

2 errors



*** This bug has been marked as a duplicate of 46671 ***</WithStack>
    <WithOutStack>If class A refers to B and B refers to A, and both of A.java and B.java has
aspects defined in them, ajc throws an exception if one uses "ajc A.java" or
"ajc B.java" even if they are in the same directory. However, "ajc A.java
B.java" works fine ...
Created attachment 6825
the first class for a compilation
Created attachment 6826
the 2nd class for a compilation
It seems that if both classes have non-empty aspects defined in them and one of
them depends on the other, ajc cannot solve this dependency and ends up with a
null pointer exception. The problem is most like be in ResolvedTypeMunger.java
(line 53, where matchType.getWorld() returns null!), ResolvedTypeX.java and
ConcreteTypeMunger.java.
When I compile Class2 with "ajc Class2.java", I get:

can't find type Class1
/home/thomas/temp/tt/Class1.java:0 Internal compiler error
java.lang.NullPointerException
        at org.aspectj.weaver.ResolvedTypeMunger.matches(ResolvedTypeMunger.java
:53)
        at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java
:52)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:291)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIn
terTypeDeclarations(AjLookupEnvironment.java:228)
        at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet
eTypeBindings(AjLookupEnvironment.java:109)
        at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.ja
va:310)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:324)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat
ion(AjBuildManager.java:373)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild
Manager.java:125)
        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu
ildManager.java:70)
        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)
        at org.aspectj.tools.ajc.Main.run(Main.java:217)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)
        at org.aspectj.tools.ajc.Main.main(Main.java:72)


!! no source information available !!
ABORT
Exception thrown from AspectJ 1.1.1

This might be logged as a bug already -- find current bugs at
  http://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&amp;component=Compiler

Bugs for exceptions thrown have titles File:line from the top stack,
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
at http://bugs.eclipse.org/bugs/enter_bug.cgi?product=AspectJ
To make the bug a priority, please include a test program
that can reproduce this exception.
null



1 fail|abort, 2 errors

However, Class1 is in the same directory, and "ajc Class1.java Class2.java"
works fine!
Added to the list under the general category of "improve error messages from 
weaver"

Thomas - the AspectJ compiler doesn't support resolution of types from the 
sourcepath. If "." is in your classpath and you have previously compiled such 
that the .classs files are available, then you can compile successfully passing 
in just a single source file argument. If neither the source file nor the .class 
file is available to AspectJ, it will fail because it can't resolve the missing 
type.The error message you received does not explain this situation cleary!
This bug is the same problem as 46671.  What is actually happening is that the 
compiler is unable to locate 'Class1.class' so it looks on its classpath 
for 'Class1.java' - if it finds it (i.e. you have '.' on your CLASSPATH) then 
the compiler attempts to build it as well.  AspectJ doesn't currently support 
this kind of faulting in of source files, and the fix for 46671 prevents the 
NPE explosion shown in this bug report by deactivating the default JDT 
compiler faulting behavior.  With the fix in place, 'ajc Class2.java' produces:

C:\eclipse\aspectj_ws\tests\bugs\Class2.java:4 Class1 cannot be resolved (or 
is not a valid type) for the field Class2.a
Class1 a = new Class1();
^^^^^^
C:\eclipse\aspectj_ws\tests\bugs\Class2.java:4 Class1 cannot be resolved or is 
not a type
Class1 a = new Class1();
               ^^^^^^

2 errors



*** This bug has been marked as a duplicate of 46671 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46817" />
    <CreationDate amount="2003-11-17 21:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DnD] [EditorMgmt] DnD to open editors should search all registered editors for internal editors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>build N20031117 + latest from head

When opening an editor using DnD, if the default editor in the registry is not 
internal (and there's no OLE editor), it uses the default text editor.  
It would be better to check all registered editors, to handle the case where 
the default editor is external but there is still a registered internal editor.

For example, add "Word Document" as an external editor for .java files, and 
mark it as the default.  DnD on a .java file currently opens a plain text 
editor rather than a Java editor.

See IEditorRegistry.getEditors(String).

See bug 46747 for more context.

Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>build N20031117 + latest from head

When opening an editor using DnD, if the default editor in the registry is not 
internal (and there's no OLE editor), it uses the default text editor.  
It would be better to check all registered editors, to handle the case where 
the default editor is external but there is still a registered internal editor.

For example, add "Word Document" as an external editor for .java files, and 
mark it as the default.  DnD on a .java file currently opens a plain text 
editor rather than a Java editor.

See IEditorRegistry.getEditors(String).

See bug 46747 for more context.

Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46818" />
    <CreationDate amount="2003-11-17 21:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] IDE should have exact equivalents for old openEditor methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="943" end="983" />
        <code>-&gt; page.openEditor(input, editorId);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1105" end="1155" />
        <code>-&gt; page.openEditor(input, editorId, activate);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1264" end="1323" />
        <code>getEditorDescriptor(input).getId());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1409" end="1470" />
        <code>-&gt; page.openEditor(new FileEditorInput(input), editorId);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1585" end="1656" />
        <code>-&gt; page.openEditor(new FileEditorInput(input), editorId, activate);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1717" end="1760" />
        <code>-&gt; this.openEditor(page, marker, true);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build N20031117

The IDE class now has openEditor(IWorkbenchPage, IFile, boolean) and the 
equivalent method that takes an IMarker.  However, pre-RCP, all the openEditor 
methods on IWorkbenchPage had special handling for IFileEditorInputs.
Also, callers of the old openEditor(IFile) method should not be forced to add 
an extra argument for activation.

IDE should have direct equivalents for the old methods so that any call of the 
form:
page.openEditor([args])
can now do:
IDE.openEditor(page, [args])
and get the same behaviour as before.

See bug 46395 for more context.
*** Bug 52658 has been marked as a duplicate of this bug. ***
The compatibility fragment should also be updated to call these directly rather 
than doing any mapping itself.

This is not on the list for M8.  Deferring.... 
The API for IDE and what each method calls is now:

openEditor(IWorkbenchPage page,
           IEditorInput input,
           String editorId)
    -&gt; page.openEditor(input, editorId);

openEditor(IWorkbenchPage page,
           IEditorInput input,
           String editorId,
           boolean activate)
    -&gt; page.openEditor(input, editorId, activate);

openEditor(IWorkbenchPage page,
           IFile input)
    -&gt; page.openEditor(new FileEditorInput(input),
                       getEditorDescriptor(input).getId());

openEditor(IWorkbenchPage page,
           IFile input,
           String editorId)
    -&gt; page.openEditor(new FileEditorInput(input), editorId);

openEditor(IWorkbenchPage page,
           IFile input,
           String editorId,
           boolean activate)
    -&gt; page.openEditor(new FileEditorInput(input), editorId, activate);

openEditor(IWorkbenchPage page,
           IMarker marker)
    -&gt; this.openEditor(page, marker, true);

I didn't change the two existing methods:

openEditor(IWorkbenchPage page,
           IFile input,
           boolean activate)
 
openEditor(IWorkbenchPage page,
           IMarker marker,
           boolean activate)

The test cases have been updated.

This bug is still open because the 3.0 functions don't remember default editor 
changes in the same way as the 2.1 couterparts.
Also, the compatibility bundle still needs to be updated.
The API work has been done.  Still some implementation aspects to address as 
noted above.
The API is done, the behaviour for default selection needs to be fixed for 3.0.
For R3.0, we can live without the old behaviour of remembering the last editor 
used to open the file when using the openEditor(IEditorInput, ...) APIs.

That is, we shouldn't jump through hoops to get the compatibility fragment to 
work in ths case.  Could still have the IDE.openEditor equivalent provide the 
old behaviour.

We're missing an equivalent for the old IWorkbenchPage.openSystemEditor(IFile)
method (discovered by Jeem in bug 67950 comment #5).

*** Bug 58745 has been marked as a duplicate of this bug. ***
Not for 3.1

Reassigning bugs in component areas that are changing ownership.
Closing stale bug.</WithStack>
    <WithOutStack>build N20031117

The IDE class now has openEditor(IWorkbenchPage, IFile, boolean) and the 
equivalent method that takes an IMarker.  However, pre-RCP, all the openEditor 
methods on IWorkbenchPage had special handling for IFileEditorInputs.
Also, callers of the old openEditor(IFile) method should not be forced to add 
an extra argument for activation.

IDE should have direct equivalents for the old methods so that any call of the 
form:
page.openEditor([args])
can now do:
IDE.openEditor(page, [args])
and get the same behaviour as before.

See bug 46395 for more context.
*** Bug 52658 has been marked as a duplicate of this bug. ***
The compatibility fragment should also be updated to call these directly rather 
than doing any mapping itself.

This is not on the list for M8.  Deferring.... 
The API for IDE and what each method calls is now:

openEditor(IWorkbenchPage page,
           IEditorInput input,
           String editorId)
    -&gt; page.openEditor(input, editorId);

openEditor(IWorkbenchPage page,
           IEditorInput input,
           String editorId,
           boolean activate)
    -&gt; page.openEditor(input, editorId, activate);

openEditor(IWorkbenchPage page,
           IFile input)
    -&gt; page.openEditor(new FileEditorInput(input),
                       getEditorDescriptor(input).getId());

openEditor(IWorkbenchPage page,
           IFile input,
           String editorId)
    -&gt; page.openEditor(new FileEditorInput(input), editorId);

openEditor(IWorkbenchPage page,
           IFile input,
           String editorId,
           boolean activate)
    -&gt; page.openEditor(new FileEditorInput(input), editorId, activate);

openEditor(IWorkbenchPage page,
           IMarker marker)
    -&gt; this.openEditor(page, marker, true);

I didn't change the two existing methods:

openEditor(IWorkbenchPage page,
           IFile input,
           boolean activate)
 
openEditor(IWorkbenchPage page,
           IMarker marker,
           boolean activate)

The test cases have been updated.

This bug is still open because the 3.0 functions don't remember default editor 
changes in the same way as the 2.1 couterparts.
Also, the compatibility bundle still needs to be updated.
The API work has been done.  Still some implementation aspects to address as 
noted above.
The API is done, the behaviour for default selection needs to be fixed for 3.0.
For R3.0, we can live without the old behaviour of remembering the last editor 
used to open the file when using the openEditor(IEditorInput, ...) APIs.

That is, we shouldn't jump through hoops to get the compatibility fragment to 
work in ths case.  Could still have the IDE.openEditor equivalent provide the 
old behaviour.

We're missing an equivalent for the old IWorkbenchPage.openSystemEditor(IFile)
method (discovered by Jeem in bug 67950 comment #5).

*** Bug 58745 has been marked as a duplicate of this bug. ***
Not for 3.1

Reassigning bugs in component areas that are changing ownership.
Closing stale bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46819" />
    <CreationDate amount="2003-11-17 22:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>enable/disable builder bug - cannot cancel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>* Open the "Builders" properties on a project.
* Select the "java" builder and press disable
* press "Cancel"
* open the builder tab - the builder shows as dislabed, although cancel was 
pressed. It seems that the builder still runs too (until I actually press OK), 
which is doubly strange.
Fixed in BuilderPropertyPage.performCancel()
Please verify.
To explain the behavior you saw:
the commands are marked as disabled by adding an argument to them marking them 
as such. This change is not committed until performApply when we then wrapper 
the command as an external tool builder that is disabled.
I had forgot to code up in cancel to remove the temporary command arg.
Verified.</WithStack>
    <WithOutStack>* Open the "Builders" properties on a project.
* Select the "java" builder and press disable
* press "Cancel"
* open the builder tab - the builder shows as dislabed, although cancel was 
pressed. It seems that the builder still runs too (until I actually press OK), 
which is doubly strange.
Fixed in BuilderPropertyPage.performCancel()
Please verify.
To explain the behavior you saw:
the commands are marked as disabled by adding an argument to them marking them 
as such. This change is not committed until performApply when we then wrapper 
the command as an external tool builder that is disabled.
I had forgot to code up in cancel to remove the temporary command arg.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46820" />
    <CreationDate amount="2003-11-17 22:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Do not override existing JSR45 information</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>This is an evolution of 

    Bugzilla 36069: Correct source information while inlining

The fix to that bug left in a rare case.  Currently we don't handle
correctly the case of 

 an input file that has inlined around advice ALREADY with a JSR45 block

this hasn't been seen in the wild yet, but it's completely reasonable that
it could be.  The JSR45 spec says what to do here, so it's just engineering
work to get it right, but it's really low priority.
this would be a good self-contained "get to know the codebase" project for a new
person or starting grad student.  It combines close-reading of the JSR45 spec
and working with a cross-cutting feature of the weaver.</WithStack>
    <WithOutStack>This is an evolution of 

    Bugzilla 36069: Correct source information while inlining

The fix to that bug left in a rare case.  Currently we don't handle
correctly the case of 

 an input file that has inlined around advice ALREADY with a JSR45 block

this hasn't been seen in the wild yet, but it's completely reasonable that
it could be.  The JSR45 spec says what to do here, so it's just engineering
work to get it right, but it's really low priority.
this would be a good self-contained "get to know the codebase" project for a new
person or starting grad student.  It combines close-reading of the JSR45 spec
and working with a cross-cutting feature of the weaver.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46821" />
    <CreationDate amount="2003-11-17 23:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE in LinkedPositionUI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074365">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.leave(LinkedPositionUI.java:365)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.shellClosed(LinkedPositionUI.java:824)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1390)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:1282)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Control.windowProc(Control.java:2936)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="12">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="13">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1355)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Control.windowProc(Control.java:3014)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="18">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="19">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1355)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Control.windowProc(Control.java:3014)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="24">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="25">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1360)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="30">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="32">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="33">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="36">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="37">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build: N-20031116

I'm not sure what provoked this NPE.  But I know that I was unable to do 
anything afterwards.  I had to shut down my workbench.

Error Nov 17, 2003 23:40:33.872 java.lang.NullPointerException
java.lang.NullPointerException
at org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.leave
(LinkedPositionUI.java:365)
at org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.shellClosed
(LinkedPositionUI.java:824)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1390)
at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:1282)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:2936)
at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1355)
at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:3014)
at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1355)
at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:3014)
at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1334)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1360)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
at org.eclipse.core.launcher.Main.run(Main.java:767)
at org.eclipse.core.launcher.Main.main(Main.java:601)
M5 candidate
Looks like this happened when in linked mode and closing the workbench (shell
being closed.

Guarding the statement against the viewer's StyledText being null for now - will
get replaced in M6 by the new linked position stuff.
fixed &gt; 20031118
verify
verified</WithStack>
    <WithOutStack>Build: N-20031116

I'm not sure what provoked this NPE.  But I know that I was unable to do 
anything afterwards.  I had to shut down my workbench.

Error Nov 17, 2003 23:40:33.872 java.lang.NullPointerException

M5 candidate
Looks like this happened when in linked mode and closing the workbench (shell
being closed.

Guarding the statement against the viewer's StyledText being null for now - will
get replaced in M6 by the new linked position stuff.
fixed &gt; 20031118
verify
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46822" />
    <CreationDate amount="2003-11-18 03:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Outline flickers when opening/editing files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I'm editing a larger files with a lot of items to display in the 
outline window (a header file for instance with lot of defines),
the outline windows begins to flicker and begins to consume all processor 
time.
The effect is so strong that the UI is nearly unusable.
The only way is have the outline window closed.

I'm using eclipse 2.1.2 and CDT 1.2 GA.

Thanks
Yes this was fix in the head and the branch of CDT_12
you will need a new distribution

Doug are you still making new updates of the branch or
the head ?
This was fix in the head and the branch.

Thanks</WithStack>
    <WithOutStack>When I'm editing a larger files with a lot of items to display in the 
outline window (a header file for instance with lot of defines),
the outline windows begins to flicker and begins to consume all processor 
time.
The effect is so strong that the UI is nearly unusable.
The only way is have the outline window closed.

I'm using eclipse 2.1.2 and CDT 1.2 GA.

Thanks
Yes this was fix in the head and the branch of CDT_12
you will need a new distribution

Doug are you still making new updates of the branch or
the head ?
This was fix in the head and the branch.

Thanks</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46823" />
    <CreationDate amount="2003-11-18 04:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>highlight current line checkbox is invalid in preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>if I unchecked the highlight current line checkbox in preferences, In java 
editor the function "highlight current line" still work And in plain text 
editor it is right.
Java editor has different preferences (Java &gt; Editor).

Closing as invalid although I've been caught by this a few times as well.  It
would be nice if java editor just inherited preferences from text editor by
default (like the font prefs).  Also confusing that some text editor preferences
(such as quick diff), apply to both editors, while others don't.
Sorry, reopening to change owner
I had closed this as invalid, but I'll leave it to text component owner to
decide what to do with it.
We know about this. The current support to collect identical settings for
different components is limited to fonts. Also, there's no support for
porpagating preference stores.


It would be better if the gui designer can recatagoried the settings in some 
Preferences. This way can avoid misunderstanding. For example, the editors in 
Workbench and the one in Java can be taken out and set a new option for 
editors. In this new editor option, Plain Text and Java are set seperately as 
child options. 
Of course it does not matter if the adjustment won't be carried out.  When I 
have made a mistake once, I will not make the same mistake again.</WithStack>
    <WithOutStack>if I unchecked the highlight current line checkbox in preferences, In java 
editor the function "highlight current line" still work And in plain text 
editor it is right.
Java editor has different preferences (Java &gt; Editor).

Closing as invalid although I've been caught by this a few times as well.  It
would be nice if java editor just inherited preferences from text editor by
default (like the font prefs).  Also confusing that some text editor preferences
(such as quick diff), apply to both editors, while others don't.
Sorry, reopening to change owner
I had closed this as invalid, but I'll leave it to text component owner to
decide what to do with it.
We know about this. The current support to collect identical settings for
different components is limited to fonts. Also, there's no support for
porpagating preference stores.


It would be better if the gui designer can recatagoried the settings in some 
Preferences. This way can avoid misunderstanding. For example, the editors in 
Workbench and the one in Java can be taken out and set a new option for 
editors. In this new editor option, Plain Text and Java are set seperately as 
child options. 
Of course it does not matter if the adjustment won't be carried out.  When I 
have made a mistake once, I will not make the same mistake again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46824" />
    <CreationDate amount="2003-11-18 04:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ControlExample: scrolling Canvas leaves screencheese</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>- start ControlExample and open the canvas tab</Line>
          <Line>- scroll the canvas until the number is partially outside the view</Line>
          <Line>- scroll number number back into the view</Line>
          <Line>Observe: the number is redrawn incorrectly</Line>
          <Line>Note that this happens on other platforms. It might be a problem in the</Line>
          <Line>example. Car, could you check this? Thanks!</Line>
          <Line>I guess the number isn't very useful. It's actually the number of times that</Line>
          <Line>paint is called, and it is drawn in the center of the circle on paint, but</Line>
          <Line>only if that part of the Canvas (the centre of the circle) was damaged. When</Line>
          <Line>scrolling, the damage is restricted to just the teeny rectangle on the edge</Line>
          <Line>that was just scrolled back in. Of course, the number is now larger than the</Line>
          <Line>last time it happened to be in the damaged area, so if the new damage just</Line>
          <Line>happens to include a piece of the larger number, then that piece looks like</Line>
          <Line>cheese.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>N20031114

- start ControlExample and open the canvas tab
- scroll the canvas until the number is partially outside the view
- scroll number number back into the view
Observe: the number is redrawn incorrectly
Note that this happens on other platforms. It might be a problem in the 
example. Car, could you check this? Thanks!
I guess the number isn't very useful. It's actually the number of times that 
paint is called, and it is drawn in the center of the circle on paint, but 
only if that part of the Canvas (the centre of the circle) was damaged. When 
scrolling, the damage is restricted to just the teeny rectangle on the edge 
that was just scrolled back in. Of course, the number is now larger than the 
last time it happened to be in the damaged area, so if the new damage just 
happens to include a piece of the larger number, then that piece looks like 
cheese.

I will just remove the number completely, because it's too hard to explain to 
people that they have to damage the middle of the canvas to see the number 
increment. I found it interesting at the time (because it's always surprising 
how many paints are happening), but it's just too wierd. Also, it's easy 
enough to use the "Select Listeners" button to add a paint listener if you 
really want to count paint events.

Fixed &gt; 20040503.
(Decided to put a little 10 x 10 square in the center of the circle, for fun).</WithStack>
    <WithOutStack>N20031114

- start ControlExample and open the canvas tab
- scroll the canvas until the number is partially outside the view
- scroll number number back into the view
Observe: the number is redrawn incorrectly
Note that this happens on other platforms. It might be a problem in the 
example. Car, could you check this? Thanks!
I guess the number isn't very useful. It's actually the number of times that 
paint is called, and it is drawn in the center of the circle on paint, but 
only if that part of the Canvas (the centre of the circle) was damaged. When 
scrolling, the damage is restricted to just the teeny rectangle on the edge 
that was just scrolled back in. Of course, the number is now larger than the 
last time it happened to be in the damaged area, so if the new damage just 
happens to include a piece of the larger number, then that piece looks like 
cheese.

I will just remove the number completely, because it's too hard to explain to 
people that they have to damage the middle of the canvas to see the number 
increment. I found it interesting at the time (because it's always surprising 
how many paints are happening), but it's just too wierd. Also, it's easy 
enough to use the "Select Listeners" button to add a paint listener if you 
really want to count paint events.

Fixed &gt; 20040503.
(Decided to put a little 10 x 10 square in the center of the circle, for fun).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46825" />
    <CreationDate amount="2003-11-18 04:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Eclipse Hangs on Linux RH9 (gtk version)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Eclipse on RedHat 9 hangs quite a bit for me (about every 2 hours or so, but
sometimes it is more often) but I cannot figure out what's causing it, past the
fact that I am pretty sure it is caused by SWT. Neither can I reproduce the error.

I tried Eclipse 2.1, 2.1.1, 2.1.2, 3M2 M3 and M4, and am using 2.1.2 at the moment.

I have spoken to other developers and none have had problems on linux but I
wasn't able to find anybody using RedHat 9 and Gnome. Are there any known issues
with eclipse + RedHat 9?
Created attachment 6829
Dump1 (sun jdk1.4.2)
Created attachment 6830
Dump2 (sun jdk1.4.2)
Created attachment 6831
Dump3 (sun jdk1.4.2)
Created attachment 6832
Dump4 (ibm jdk1.4.1)
Created attachment 6833
Dump5 (ibm jdk1.4.1)
I have attached some dumps.

Also here are more details of my system:

Linux mylux 2.4.20-8 #1 Thu Mar 13 17:54:28 EST 2003 i686 i686 i386 GNU/Linux

[marchy@mylux marchy]$ rpm -q gtk2 glibc
gtk2-2.2.1-4
glibc-2.3.2-27.9.6

Eclipse should be running fine with RedHat 9.
Some system, for some unknown reason, hangs quite often. It is pretty hard to 
fix this problem without knowing what causes the hang or step to reproduce the 
problem.

My best guess is that you are using BlueCurve theme, try to work a couple days 
using Mist theme or Simple theme. Let me know if it helps.



Thank you Felipe, that works great now, for 2 days straight I have not had 1 crash.

I know this is probably somewhere in the FAQ's but should this fact not be more
widely advertised?

PS. I much prefer the other themes to BlueCurve.
I'll be sure this information is on FAQ.

Closing the PR.</WithStack>
    <WithOutStack>Eclipse on RedHat 9 hangs quite a bit for me (about every 2 hours or so, but
sometimes it is more often) but I cannot figure out what's causing it, past the
fact that I am pretty sure it is caused by SWT. Neither can I reproduce the error.

I tried Eclipse 2.1, 2.1.1, 2.1.2, 3M2 M3 and M4, and am using 2.1.2 at the moment.

I have spoken to other developers and none have had problems on linux but I
wasn't able to find anybody using RedHat 9 and Gnome. Are there any known issues
with eclipse + RedHat 9?
Created attachment 6829
Dump1 (sun jdk1.4.2)
Created attachment 6830
Dump2 (sun jdk1.4.2)
Created attachment 6831
Dump3 (sun jdk1.4.2)
Created attachment 6832
Dump4 (ibm jdk1.4.1)
Created attachment 6833
Dump5 (ibm jdk1.4.1)
I have attached some dumps.

Also here are more details of my system:

Linux mylux 2.4.20-8 #1 Thu Mar 13 17:54:28 EST 2003 i686 i686 i386 GNU/Linux

[marchy@mylux marchy]$ rpm -q gtk2 glibc
gtk2-2.2.1-4
glibc-2.3.2-27.9.6

Eclipse should be running fine with RedHat 9.
Some system, for some unknown reason, hangs quite often. It is pretty hard to 
fix this problem without knowing what causes the hang or step to reproduce the 
problem.

My best guess is that you are using BlueCurve theme, try to work a couple days 
using Mist theme or Simple theme. Let me know if it helps.



Thank you Felipe, that works great now, for 2 days straight I have not had 1 crash.

I know this is probably somewhere in the FAQ's but should this fact not be more
widely advertised?

PS. I much prefer the other themes to BlueCurve.
I'll be sure this information is on FAQ.

Closing the PR.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46826" />
    <CreationDate amount="2003-11-18 05:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Syncronize a folder syncronizes all of workspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In workspace on a folder within a (cvs shared) project- right click, team, 
syncronize. This syncronizes the whole workspace instead of just the selected 
folder.
In I20031113 it doesn't. It creates a working set for the selected folders and 
only synchronizes those. I confirm with a manual test.</WithStack>
    <WithOutStack>In workspace on a folder within a (cvs shared) project- right click, team, 
syncronize. This syncronizes the whole workspace instead of just the selected 
folder.
In I20031113 it doesn't. It creates a working set for the selected folders and 
only synchronizes those. I confirm with a manual test.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46827" />
    <CreationDate amount="2003-11-18 05:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Open a java file takes 5 to 10 times longer than previous build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using build I20031113 and I have noticied that it takes ten times longer to 
open a java file than with previous I20031105 build.

For example, using a Java perspective, I open the class 
org.eclipse.jdt.core.JavaCore. It takes around 20 seconds before I can edit the 
class (my box is a Thinkpad PIII 1GHz with 1Go of RAM)!

I have made some tests with previous builds and it takes around 3 seconds on my 
box using I20031105. Of course these times and especially the ratio may be 
different depending on the machine where the test is done...

What is really strange is that problem didn't appear with I20031111 build... 
Looking at map and replacing plugins which were changed between 1111 and 1113 
builds didn't solve the problem either?!

Finally, after several tries which took me a while, I noticed that plugin 
org.eclipse.jface.text was changed between these two builds but use the same 
version name!!!

Looking at differences between source of these two builds, it appears that the 
class org.eclipse.jface.text.source.AnnotationPainter was modified. This was 
undoubtly the origin of the problem as when I use build I20031113 with 
jface.text version of I20031111 build the problem now disappears...

It would have been more appropriate not to use the same version in text.map 
file but modify it to make this change easier to find and avoid me to lost so 
much time, thanks
fixed in latest
verified
really a dup of bug 46621</WithStack>
    <WithOutStack>I'm using build I20031113 and I have noticied that it takes ten times longer to 
open a java file than with previous I20031105 build.

For example, using a Java perspective, I open the class 
org.eclipse.jdt.core.JavaCore. It takes around 20 seconds before I can edit the 
class (my box is a Thinkpad PIII 1GHz with 1Go of RAM)!

I have made some tests with previous builds and it takes around 3 seconds on my 
box using I20031105. Of course these times and especially the ratio may be 
different depending on the machine where the test is done...

What is really strange is that problem didn't appear with I20031111 build... 
Looking at map and replacing plugins which were changed between 1111 and 1113 
builds didn't solve the problem either?!

Finally, after several tries which took me a while, I noticed that plugin 
org.eclipse.jface.text was changed between these two builds but use the same 
version name!!!

Looking at differences between source of these two builds, it appears that the 
class org.eclipse.jface.text.source.AnnotationPainter was modified. This was 
undoubtly the origin of the problem as when I use build I20031113 with 
jface.text version of I20031111 build the problem now disappears...

It would have been more appropriate not to use the same version in text.map 
file but modify it to make this change easier to find and avoid me to lost so 
much time, thanks
fixed in latest
verified
really a dup of bug 46621</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46828" />
    <CreationDate amount="2003-11-18 06:55:00 -0500" />
    <DupId amount="36554" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception loading jdt.ui plugin leaves things in a weird state</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Eclipse 2.1.0, Windows XP, Java version 1.4.0_01</Line>
          <Line />
          <Line>2. The plugin works fine for others using 2.1.0, 2.1.1, 2.1.2 and 3.0 M4</Line>
          <Line />
          <Line>3. My plugin is not set to load on startup.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi I have a plugin that includes wizards editors and LabelDecorators.
The plugin depends on org.eclipse.jdt.ui.

A user of my plugin is getting the following error during the loading of my 
LabelDecorator:

!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 12:13:06.848
!MESSAGE Plug-in com.iw.plugins.spindle.ui was unable to load class 
com.iw.plugins.spindle.ui.decorators.ProjectDecorator.
!STACK 0
org.eclipse.core.internal.boot.DelegatingLoaderException: 
org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-
in: "org.eclipse.jdt.ui".


Baseline Info.

This user's setup is:

1. Eclipse 2.1.0, Windows XP, Java version 1.4.0_01

2. The plugin works fine for others using 2.1.0, 2.1.1, 2.1.2 and 3.0 M4

3. My plugin is not set to load on startup.

I will attach the log file the user sent me, it appears that when the loading 
of org.eclipse.jdt.ui goes awry, all I get is unable to load class errors from 
my plugin.
Created attachment 6834
error log


*** This bug has been marked as a duplicate of 36554 ***
perfect, thanks.</WithStack>
    <WithOutStack>Hi I have a plugin that includes wizards editors and LabelDecorators.
The plugin depends on org.eclipse.jdt.ui.

A user of my plugin is getting the following error during the loading of my 
LabelDecorator:

!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 12:13:06.848
!MESSAGE Plug-in com.iw.plugins.spindle.ui was unable to load class 
com.iw.plugins.spindle.ui.decorators.ProjectDecorator.
!STACK 0
org.eclipse.core.internal.boot.DelegatingLoaderException: 
org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-
in: "org.eclipse.jdt.ui".


Baseline Info.

This user's setup is:

1. Eclipse 2.1.0, Windows XP, Java version 1.4.0_01

2. The plugin works fine for others using 2.1.0, 2.1.1, 2.1.2 and 3.0 M4

3. My plugin is not set to load on startup.

I will attach the log file the user sent me, it appears that when the loading 
of org.eclipse.jdt.ui goes awry, all I get is unable to load class errors from 
my plugin.
Created attachment 6834
error log


*** This bug has been marked as a duplicate of 36554 ***
perfect, thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46829" />
    <CreationDate amount="2003-11-18 06:55:00 -0500" />
    <DupId amount="46468" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] zip import wizard doen't honor java selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Create a java project</Line>
          <Line>2) in the package explorer, select the project$</Line>
          <Line>3) import from a zip file</Line>
          <Line>4) observe: in the Zip file page, the "Into folder:" text field is empty</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>N20031114 + jdt build input 11/18

1) Create a java project
2) in the package explorer, select the project$
3) import from a zip file
4) observe: in the Zip file page, the "Into folder:" text field is empty

Note: it works when selecting the same project in the resource navigator
Markus, can you please have a look. This should normally happen for free. The 
imported takes the selection from the active part.

If possible we should provide a fix for M5 since it is a regression.
Problem is commented-out code (from RCP_WORK_1) in
org.eclipse.ui.internal.dialogsWorkbenchWizardElement#convertToResources(.) .

The selected IJavaElement is not adapted to IResource.
Thanks for the pointer Markus. Removing the milestone tag so that the Ui team 
can prioiritize.
*** Bug 46947 has been marked as a duplicate of this bug. ***
The generic workbench can no longer do resource conversions, since it no longer 
depends on core resources.  This needs to be done by the concrete wizards.

Will check out the code snippet referred to above.


*** This bug has been marked as a duplicate of 46468 ***</WithStack>
    <WithOutStack>N20031114 + jdt build input 11/18

1) Create a java project
2) in the package explorer, select the project$
3) import from a zip file
4) observe: in the Zip file page, the "Into folder:" text field is empty

Note: it works when selecting the same project in the resource navigator
Markus, can you please have a look. This should normally happen for free. The 
imported takes the selection from the active part.

If possible we should provide a fix for M5 since it is a regression.
Problem is commented-out code (from RCP_WORK_1) in
org.eclipse.ui.internal.dialogsWorkbenchWizardElement#convertToResources(.) .

The selected IJavaElement is not adapted to IResource.
Thanks for the pointer Markus. Removing the milestone tag so that the Ui team 
can prioiritize.
*** Bug 46947 has been marked as a duplicate of this bug. ***
The generic workbench can no longer do resource conversions, since it no longer 
depends on core resources.  This needs to be done by the concrete wizards.

Will check out the code snippet referred to above.


*** This bug has been marked as a duplicate of 46468 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46830" />
    <CreationDate amount="2003-11-18 07:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Introudction of an IParser-Interface required</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Currently there exists no IParser-Interface and the Parser-Class design is
geared toward the parsing of Text-Files. This is an unnecessary restriction
which makes parsing binary-log-files an ugly buisness.

Hence, an Interface should be introduced and the Parser-Class should be
converted to something like a TextBasedParser-Class.

Seen in 1.0.3 and 1.1.0 (both not available under Versions)
We introduced this and aded some additional parser behaviours and tightly 
coupled these to the ICommonBaseEvent work.  This is available in 1.2.  Pease 
advise if you think there are other things that should be addressed.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Currently there exists no IParser-Interface and the Parser-Class design is
geared toward the parsing of Text-Files. This is an unnecessary restriction
which makes parsing binary-log-files an ugly buisness.

Hence, an Interface should be introduced and the Parser-Class should be
converted to something like a TextBasedParser-Class.

Seen in 1.0.3 and 1.1.0 (both not available under Versions)
We introduced this and aded some additional parser behaviours and tightly 
coupled these to the ICommonBaseEvent work.  This is available in 1.2.  Pease 
advise if you think there are other things that should be addressed.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46831" />
    <CreationDate amount="2003-11-18 08:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Draw2d [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Connections and anchors Demo in Programmer's guide wrong</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="68" end="117" />
        <code>conn.setStartAnchor(new ChopboxAnchor(node1));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="118" end="165" />
        <code>conn.setEndAnchor(new ChopboxAnchor(node2));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="166" end="216" />
        <code>conn.setEndDecoration(new PolygonDecoration());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="226" end="276" />
        <code>conn.setSourceAnchor(new ChopboxAnchor(node1));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="277" end="327" />
        <code>conn.setTargetAnchor(new ChopboxAnchor(node2));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="328" end="381" />
        <code>conn.setTargetDecoration(new PolygonDecoration());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>You have to change 3 statements in the demo4 class example
Current:
   conn.setStartAnchor(new ChopboxAnchor(node1));
   conn.setEndAnchor(new ChopboxAnchor(node2));
   conn.setEndDecoration(new PolygonDecoration());

Better:
   conn.setSourceAnchor(new ChopboxAnchor(node1));
   conn.setTargetAnchor(new ChopboxAnchor(node2));
   conn.setTargetDecoration(new PolygonDecoration());

Kind regards
Fixed in demo4.html</WithStack>
    <WithOutStack>You have to change 3 statements in the demo4 class example
Current:
   conn.setStartAnchor(new ChopboxAnchor(node1));
   conn.setEndAnchor(new ChopboxAnchor(node2));
   conn.setEndDecoration(new PolygonDecoration());

Better:
   conn.setSourceAnchor(new ChopboxAnchor(node1));
   conn.setTargetAnchor(new ChopboxAnchor(node2));
   conn.setTargetDecoration(new PolygonDecoration());

Kind regards
Fixed in demo4.html</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46832" />
    <CreationDate amount="2003-11-18 08:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Strange exception while performing JDT/UI tests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341074375">
        <Exception>java.lang.ExceptionInInitializerError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.JavaPlugin.registerAdapters(JavaPlugin.java:430)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.JavaPlugin.startup(JavaPlugin.java:238)</Frame>
          <Frame depth="2">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:758)</Frame>
          <Frame depth="3">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="4">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:770)</Frame>
          <Frame depth="5">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:200)</Frame>
          <Frame depth="6">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:109)</Frame>
          <Frame depth="7">org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSelf(PluginClassLoader.java:181)</Frame>
          <Frame depth="8">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf(DelegatingURLClassLoader.java:490)</Frame>
          <Frame depth="9">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:882)</Frame>
          <Frame depth="10">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:862)</Frame>
          <Frame depth="11">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="12">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.doSearchTypes(AllTypesCache.java:122)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.run(AllTypesCache.java:109)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341074375">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason>Workbench has not been created yet.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.PlatformUI.getWorkbench(PlatformUI.java:90)</Frame>
          <Frame depth="1">org.eclipse.ui.plugin.AbstractUIPlugin.getWorkbench(AbstractUIPlugin.java:595)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.&lt;init&gt;(JavaElementImageProvider.java:74)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.JavaWorkbenchAdapter.&lt;init&gt;(JavaWorkbenchAdapter.java:35)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.JavaElementAdapterFactory.&lt;clinit&gt;(JavaElementAdapterFactory.java:60)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341074375">
        <Exception>org.eclipse.core.internal.boot.DelegatingLoaderException</Exception>
        <Reason>org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-
in: "org.eclipse.jdt.ui".</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:776)</Frame>
          <Frame depth="1">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:200)</Frame>
          <Frame depth="2">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:109)</Frame>
          <Frame depth="3">org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSelf(PluginClassLoader.java:181)</Frame>
          <Frame depth="4">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf(DelegatingURLClassLoader.java:490)</Frame>
          <Frame depth="5">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:882)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:862)</Frame>
          <Frame depth="7">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="8">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.doSearchTypes(AllTypesCache.java:122)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.run(AllTypesCache.java:109)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Running the test cases for the build input for I20031118 produced the 
following exceptions in the console. The test cases succeed though.
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 12:29:34.937
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.ExceptionInInitializerError
	at org.eclipse.jdt.internal.ui.JavaPlugin.registerAdapters
(JavaPlugin.java:430)
	at org.eclipse.jdt.internal.ui.JavaPlugin.startup(JavaPlugin.java:238)
	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run
(PluginDescriptor.java:758)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1127)
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation
(PluginDescriptor.java:770)
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
(PluginDescriptor.java:200)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
(PluginClassLoader.java:109)
	at 
org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSel
f(PluginClassLoader.java:181)
	at 
org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf
(DelegatingURLClassLoader.java:490)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:882)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:862)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at 
org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.doSearchTypes
(AllTypesCache.java:122)
	at org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.run
(AllTypesCache.java:109)
Caused by: java.lang.IllegalStateException: Workbench has not been created yet.
	at org.eclipse.ui.PlatformUI.getWorkbench(PlatformUI.java:90)
	at org.eclipse.ui.plugin.AbstractUIPlugin.getWorkbench
(AbstractUIPlugin.java:595)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.&lt;init&gt;
(JavaElementImageProvider.java:74)
	at org.eclipse.jdt.internal.ui.JavaWorkbenchAdapter.&lt;init&gt;
(JavaWorkbenchAdapter.java:35)
	at org.eclipse.jdt.internal.ui.JavaElementAdapterFactory.&lt;clinit&gt;
(JavaElementAdapterFactory.java:60)
	... 15 more
org.eclipse.core.internal.boot.DelegatingLoaderException: 
org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-
in: "org.eclipse.jdt.ui".
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation
(PluginDescriptor.java:776)
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
(PluginDescriptor.java:200)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
(PluginClassLoader.java:109)
	at 
org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSel
f(PluginClassLoader.java:181)
	at 
org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf
(DelegatingURLClassLoader.java:490)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:882)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:862)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at 
org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.doSearchTypes
(AllTypesCache.java:122)
	at org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.run
(AllTypesCache.java:109)
AllTypesCache doesn't exist anymore.</WithStack>
    <WithOutStack>Running the test cases for the build input for I20031118 produced the 
following exceptions in the console. The test cases succeed though.
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 12:29:34.937
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
	... 15 more

AllTypesCache doesn't exist anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46833" />
    <CreationDate amount="2003-11-18 09:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Profile collection page shown in J2EE attach</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Profile collection wizard page is shown when attach local/remote to a J2EE 
Request profiler
code dropped to cvs on 18 Nov 2003 9:18:20am
closing bug
house keeping</WithStack>
    <WithOutStack>Profile collection wizard page is shown when attach local/remote to a J2EE 
Request profiler
code dropped to cvs on 18 Nov 2003 9:18:20am
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46834" />
    <CreationDate amount="2003-11-18 09:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't find CVS/Root for my non-binary projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074377">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>File not found: 
d:\EclipseEnvs\3.0\I20031113Data\eclipse\plugins\org.eclipse.jface\CVS\Root.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:434)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:212)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.File.getContents(File.java:202)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFirstLine(SyncFileWriter.java:398)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFolderSync(SyncFileWriter.java:171)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheFolderSync(EclipseSynchronizer.java:826)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:174)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange(CVSWorkspaceSubscriber.java:235)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync(CVSWorkspaceSubscriber.java:226)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit(CVSWorkspaceSubscriber.java:201)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)</Frame>
          <Frame depth="13">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)</Frame>
          <Frame depth="14">org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)</Frame>
          <Frame depth="15">org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)</Frame>
          <Frame depth="16">org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)</Frame>
          <Frame depth="17">org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)</Frame>
          <Frame depth="18">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:198)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:188)</Frame>
          <Frame depth="20">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:296)</Frame>
          <Frame depth="21">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:234)</Frame>
          <Frame depth="22">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:112)</Frame>
          <Frame depth="23">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20031113 with HEAD loaded for ui-related plugins
Got the following (several times for a variety of projects) when I tried to 
start up Eclipse this morning.  Yesterday, I re-retrieved all the ui-related 
projects from HEAD replacing the ones already in my environment (i.e. when it 
asked me if I wanted to overwrite the project, I clicked 'Yes to All').  Don't 
know if this is related.


!ENTRY org.eclipse.team.core 4 4 Nov 18, 2003 08:54:30.864
!MESSAGE Errors have occured while calculating the synchronization state. The 
Synchronize View may be out-of-date. Refresh the view or fix the errors and re-
run the Synchronize command.
!SUBENTRY 1 org.eclipse.core.resources 4 271 Nov 18, 2003 08:54:30.864
!MESSAGE File not found: d:\EclipseEnvs\3.0
\I20031113Data\eclipse\plugins\org.eclipse.jface\CVS\Root.
!STACK 1
org.eclipse.core.runtime.CoreException[271]: 
org.eclipse.core.internal.resources.ResourceException: File not found: 
d:\EclipseEnvs\3.0\I20031113Data\eclipse\plugins\org.eclipse.jface\CVS\Root.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read
(FileSystemResourceManager.java:434)
	at org.eclipse.core.internal.resources.File.getContents(File.java:212)
	at org.eclipse.core.internal.resources.File.getContents(File.java:202)
	at 
org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFirstLine
(SyncFileWriter.java:398)
	at 
org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFolderSync
(SyncFileWriter.java:171)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheFolderSy
nc(EclipseSynchronizer.java:826)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync
(EclipseSynchronizer.java:174)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder
(EclipseFolder.java:222)
	at 
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange
(CVSWorkspaceSubscriber.java:235)
	at 
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync
(CVSWorkspaceSubscriber.java:226)
	at org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit
(CVSWorkspaceSubscriber.java:201)
	at org.eclipse.core.internal.resources.Resource$2.visit
(Resource.java:103)
	at org.eclipse.core.internal.resources.Resource$1.visitElement
(Resource.java:53)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:76)
	at org.eclipse.core.internal.watson.ElementTreeIterator.iterate
(ElementTreeIterator.java:119)
	at org.eclipse.core.internal.resources.Resource.accept
(Resource.java:63)
	at org.eclipse.core.internal.resources.Resource.accept
(Resource.java:101)
	at org.eclipse.core.internal.resources.Resource.accept
(Resource.java:88)
	at 
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync
(CVSWorkspaceSubscriber.java:198)
	at 
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutO
fSync(SubscriberEventHandler.java:188)
	at 
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEve
nt(SubscriberEventHandler.java:296)
	at 
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents
(BackgroundEventHandler.java:234)
	at org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run
(BackgroundEventHandler.java:112)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
It looks like the CVS meta-files were not written to disk after the checkout. 
The failure must have happened between the checkout and the shutdown 
yesterday. Did the checkout succeed (i.e. no error in progress view and no 
error in the log)? Did you shutdown shortly after doing the checkout or did 
you perform other operations before shuting down?
The checkout did appear to succeed: there were no errors in the log and 
nothing spit out in the progress view.  I had done the checkout first thing 
yesterday and then shutdown before going home last night (so there were lots 
of operations between checkout and shutdown).  

One thing worthy of note, but possibly unrelated - I did have a number of 
quiet failures from the debugger yesterday (the failure showed up in the log 
file but there had been nothing to indicate to me that there was trouble).  I 
logged this as bug 46835 .


I've just had a look at Deb's machine and it appears that the hardrive is not 
well. Several files in the projects involved are corrupted in a way not 
possible through the Java API.</WithStack>
    <WithOutStack>I20031113 with HEAD loaded for ui-related plugins
Got the following (several times for a variety of projects) when I tried to 
start up Eclipse this morning.  Yesterday, I re-retrieved all the ui-related 
projects from HEAD replacing the ones already in my environment (i.e. when it 
asked me if I wanted to overwrite the project, I clicked 'Yes to All').  Don't 
know if this is related.


!ENTRY org.eclipse.team.core 4 4 Nov 18, 2003 08:54:30.864
!MESSAGE Errors have occured while calculating the synchronization state. The 
Synchronize View may be out-of-date. Refresh the view or fix the errors and re-
run the Synchronize command.
!SUBENTRY 1 org.eclipse.core.resources 4 271 Nov 18, 2003 08:54:30.864
!MESSAGE File not found: d:\EclipseEnvs\3.0
\I20031113Data\eclipse\plugins\org.eclipse.jface\CVS\Root.
!STACK 1
org.eclipse.core.runtime.CoreException[271]: 

It looks like the CVS meta-files were not written to disk after the checkout. 
The failure must have happened between the checkout and the shutdown 
yesterday. Did the checkout succeed (i.e. no error in progress view and no 
error in the log)? Did you shutdown shortly after doing the checkout or did 
you perform other operations before shuting down?
The checkout did appear to succeed: there were no errors in the log and 
nothing spit out in the progress view.  I had done the checkout first thing 
yesterday and then shutdown before going home last night (so there were lots 
of operations between checkout and shutdown).  

One thing worthy of note, but possibly unrelated - I did have a number of 
quiet failures from the debugger yesterday (the failure showed up in the log 
file but there had been nothing to indicate to me that there was trouble).  I 
logged this as bug 46835 .


I've just had a look at Deb's machine and it appears that the hardrive is not 
well. Several files in the projects involved are corrupted in a way not 
possible through the Java API.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46835" />
    <CreationDate amount="2003-11-18 09:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Quietly fail with jdi.InternalException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074382">
        <Exception>com.sun.jdi.InternalException</Exception>
        <Reason>Got error code in reply: 35</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler(MirrorImpl.java:260)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.StackFrameImpl.getValues(StackFrameImpl.java:131)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.StackFrameImpl.getValue(StackFrameImpl.java:72)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.retrieveValue(JDILocalVariable.java:56)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue(JDIVariable.java:67)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue(JDIVariable.java:89)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.views.variables.VariablesViewContentProvider.hasChildren(VariablesViewContentProvider.java:262)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:1152)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1436)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1058)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1065)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1036)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:999)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:987)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:870)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:810)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:868)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:830)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh(VariablesViewer.java:64)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.refresh(AbstractDebugEventHandler.java:146)</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandleSuspendEvent(VariablesViewEventHandler.java:103)</Frame>
          <Frame depth="21">org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandleDebugEvents(VariablesViewEventHandler.java:44)</Frame>
          <Frame depth="22">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:70)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:240)</Frame>
          <Frame depth="30">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="32">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="33">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="36">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="37">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="2530" end="2622" />
        <code>if (locationShouldBeFiltered(currentLocation) || shouldDoExtraStepInto(currentLocation)) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="35">
        <Lines>
          <Line>1. Place a breakpoint in JDIThread$StepHandler#handleEvent(...) on the line which reads:</Line>
          <Line />
          <Line>2. Debug to the breakpoint by performing a Step Into Selection in the target Eclipse.</Line>
          <Line>3. When the breakpoint is hit, select Step Into.</Line>
          <Line>4. An internal error with code 35 is dumped to the log repeatedly (I get it 6 times).</Line>
          <Line>*** Bug 58970 has been marked as a duplicate of this bug. ***</Line>
          <Line>Jared, I haven't been able to reproduce this with your test case. Does the test case still work for you?</Line>
          <Line>This is still an issue. Saw it happen this morning (i0528 0800) when stepping through VectorTest in</Line>
          <Line>host with Yourkit attached. Trying (unsuccessfully so far) to find a test case. Was using WinXP with Sun</Line>
          <Line>1.4.2_03.</Line>
          <Line>Created attachment 11290</Line>
          <Line>patch to reset frame depth</Line>
          <Line>stepping quickly through code can reproduce this. A stack frame's underlying stack frame is set lazily.</Line>
          <Line>If a variable updates after a thread suspends and before the frame index is reset, the variable causes</Line>
          <Line>causes the frame to retrieve an underlying frame at the wrong depth from the target. This can result in</Line>
          <Line>an INVALID_SLOT if the incorrect underlying frame has fewer locals than the correct frame.</Line>
          <Line>Attached patch resets the depth to -1 when the underlying frame is cleared upon resume. Prevents</Line>
          <Line>retrieval of incorrect underlying frame because -1 is not a valid depth.</Line>
          <Line>*** Bug 40838 has been marked as a duplicate of this bug. ***</Line>
          <Line>*** Bug 55331 has been marked as a duplicate of this bug. ***</Line>
          <Line>*** Bug 64263 has been marked as a duplicate of this bug. ***</Line>
          <Line>applied patch. Fix in JDIStackFrame.</Line>
          <Line>Darin, please verify</Line>
          <Line>*** Bug 65595 has been marked as a duplicate of this bug. ***</Line>
          <Line>Verified.</Line>
          <Line>In which build should I expect to see the fix in? I still see bug 40838 (which</Line>
          <Line>is supposed to be a duplicate of this one) with i200406070800.</Line>
          <Line>This should be fixed in the indicated build. Please annotate/re-open with</Line>
          <Line>relevant information.</Line>
          <Line>Not sure if should reopen this or bug 40838, since I am not seeing the JDI</Line>
          <Line>internal exception, only the effects described in bug 40838 (need to switch</Line>
          <Line>views to cause a new local variable to show up). Unfortunately I have no further</Line>
          <Line>information than "still happens" (not log entries, though). I will be willing to</Line>
          <Line>provide further details you may deem as relevant. Please advise.</Line>
          <Line>What I meant was:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20031113 with ui-related projects loaded from HEAD

Looked in my log file this morning for something unrelated and found the 
following error several times.  I had seen nothing yesterday to indicate that 
there was any problem.

!ENTRY org.eclipse.jdt.debug 4 5010 Nov 17, 2003 16:05:35.375
!MESSAGE com.sun.jdi.InternalException: Got error code in reply: 35 occurred 
while retrieving value.
!STACK 0
com.sun.jdi.InternalException: Got error code in reply: 35
	at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler
(MirrorImpl.java:260)
	at org.eclipse.jdi.internal.StackFrameImpl.getValues
(StackFrameImpl.java:131)
	at org.eclipse.jdi.internal.StackFrameImpl.getValue
(StackFrameImpl.java:72)
	at 
org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.retrieveValue
(JDILocalVariable.java:56)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue
(JDIVariable.java:67)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue
(JDIVariable.java:89)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewContentProvider.hasC
hildren(VariablesViewContentProvider.java:262)
	at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable
(AbstractTreeViewer.java:1152)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren
(AbstractTreeViewer.java:1436)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct
(AbstractTreeViewer.java:1058)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct
(AbstractTreeViewer.java:1065)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:1036)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:999)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:987)
	at org.eclipse.jface.viewers.StructuredViewer$7.run
(StructuredViewer.java:870)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:810)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:868)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:830)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh
(VariablesViewer.java:64)
	at 
org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.refresh
(AbstractDebugEventHandler.java:146)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandl
eSuspendEvent(VariablesViewEventHandler.java:103)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandl
eDebugEvents(VariablesViewEventHandler.java:44)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:70)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:240)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
Created attachment 6911
my log file

I have a .log file with 420Kb of stack traces like these, only 3 minutes
between the first and the last entry.

Is this normal? Should I increase a timeout limit, or something like that?

I am adding the log entries for the whole session (just 6kb zipped).
Created attachment 6912
my log file

Please ignore the previous attachment. This is the correct one.
It's definitely not normal.

What VM are you running ?

It's the first time I see an error 35 send back by the VM.
Error 35 means that we ask the VM for the value of a argument or local variable
at an invalid slot.
That would be nice if we have a test case for this problem.
Debbie, Rafael, are either of you still seeing this problem? These stack traces 
are generated when a thread suspends (for a breakpoint, step, or the end of an 
evaluation). If you're still seeing this problem, can you please run with the 
Error Log view open and take note of where you're suspended when this occurs?
I haven't seen this problem for some time now.  Will annotate this PR if I do 
see it as we test for M6 this week.

Marking as works for me, unless we can find a way to reproduce the problem.
*** Bug 50141 has been marked as a duplicate of this bug. ***
Re-opening, as someone else has had this problem.
*** Bug 53306 has been marked as a duplicate of this bug. ***
I seem to get these when I am stepping into methods contained in class files
from rt.jar.

I'm using build i0226.
j9sc20031212 for my dev.
sunjdk1.4.2 for my runtime workbench.
Hmmm. I wonder if we're trying to update variables for the wrong stack frame? 
That would better explain the exception. It could be that we try to update the 
locals, and then update for the newly selected stack frame (i.e. do the right 
locals). Luc, can you look into this?
fyi: This is happening again for me today but I'm stepping into my code and not
code from rt.jar.
Still happening for me with build i0317. Any ideas?
I just saw this myself in the 20040323 build. Here's a reproducible test case:

1. Place a breakpoint in JDIThread$StepHandler#handleEvent(...) on the line which reads:
  if (locationShouldBeFiltered(currentLocation) || shouldDoExtraStepInto(currentLocation)) {
2. Debug to the breakpoint by performing a Step Into Selection in the target Eclipse.
3. When the breakpoint is hit, select Step Into.
4. An internal error with code 35 is dumped to the log repeatedly (I get it 6 times).
*** Bug 58970 has been marked as a duplicate of this bug. ***
Jared, I haven't been able to reproduce this with your test case. Does the test case still work for you?
This is still an issue. Saw it happen this morning (i0528 0800) when stepping through VectorTest in 
host with Yourkit attached. Trying (unsuccessfully so far) to find a test case. Was using WinXP with Sun 
1.4.2_03. 
Created attachment 11290
patch to reset frame depth
stepping quickly through code can reproduce this. A stack frame's underlying stack frame is set lazily. 
If a variable updates after a thread suspends and before the frame index is reset, the variable causes 
causes the frame to retrieve an underlying frame at the wrong depth from the target. This can result in 
an INVALID_SLOT if the incorrect underlying frame has fewer locals than the correct frame.
Attached patch resets the depth to -1 when the underlying frame is cleared upon resume. Prevents 
retrieval of incorrect underlying frame because -1 is not a valid depth.
*** Bug 40838 has been marked as a duplicate of this bug. ***
*** Bug 55331 has been marked as a duplicate of this bug. ***
*** Bug 64263 has been marked as a duplicate of this bug. ***
applied patch. Fix in JDIStackFrame.
Darin, please verify
*** Bug 65595 has been marked as a duplicate of this bug. ***
Verified.
In which build should I expect to see the fix in? I still see bug 40838 (which
is supposed to be a duplicate of this one) with i200406070800.
This should be fixed in the indicated build. Please annotate/re-open with 
relevant information.
Not sure if should reopen this or bug 40838, since I am not seeing the JDI
internal exception, only the effects described in bug 40838 (need to switch
views to cause a new local variable to show up). Unfortunately I have no further
information than "still happens" (not log entries, though). I will be willing to
provide further details you may deem as relevant. Please advise.
What I meant was:

"Unfortunately I have no further information other than 'it still happens' (no
log entries)."

Sorry for the confusion...
OK - Please reopen bug 40838. If you have a code sample/location where we can 
try to reproduce this, it would be helpfull. I.e. what code were you stepping 
in?</WithStack>
    <WithOutStack>I20031113 with ui-related projects loaded from HEAD

Looked in my log file this morning for something unrelated and found the 
following error several times.  I had seen nothing yesterday to indicate that 
there was any problem.

!ENTRY org.eclipse.jdt.debug 4 5010 Nov 17, 2003 16:05:35.375
!MESSAGE com.sun.jdi.InternalException: Got error code in reply: 35 occurred 
while retrieving value.
!STACK 0

Created attachment 6911
my log file

I have a .log file with 420Kb of stack traces like these, only 3 minutes
between the first and the last entry.

Is this normal? Should I increase a timeout limit, or something like that?

I am adding the log entries for the whole session (just 6kb zipped).
Created attachment 6912
my log file

Please ignore the previous attachment. This is the correct one.
It's definitely not normal.

What VM are you running ?

It's the first time I see an error 35 send back by the VM.
Error 35 means that we ask the VM for the value of a argument or local variable
at an invalid slot.
That would be nice if we have a test case for this problem.
Debbie, Rafael, are either of you still seeing this problem? These stack traces 
are generated when a thread suspends (for a breakpoint, step, or the end of an 
evaluation). If you're still seeing this problem, can you please run with the 
Error Log view open and take note of where you're suspended when this occurs?
I haven't seen this problem for some time now.  Will annotate this PR if I do 
see it as we test for M6 this week.

Marking as works for me, unless we can find a way to reproduce the problem.
*** Bug 50141 has been marked as a duplicate of this bug. ***
Re-opening, as someone else has had this problem.
*** Bug 53306 has been marked as a duplicate of this bug. ***
I seem to get these when I am stepping into methods contained in class files
from rt.jar.

I'm using build i0226.
j9sc20031212 for my dev.
sunjdk1.4.2 for my runtime workbench.
Hmmm. I wonder if we're trying to update variables for the wrong stack frame? 
That would better explain the exception. It could be that we try to update the 
locals, and then update for the newly selected stack frame (i.e. do the right 
locals). Luc, can you look into this?
fyi: This is happening again for me today but I'm stepping into my code and not
code from rt.jar.
Still happening for me with build i0317. Any ideas?
I just saw this myself in the 20040323 build. Here's a reproducible test case:

1. Place a breakpoint in JDIThread$StepHandler#handleEvent(...) on the line which reads:
  if (locationShouldBeFiltered(currentLocation) || shouldDoExtraStepInto(currentLocation)) {
2. Debug to the breakpoint by performing a Step Into Selection in the target Eclipse.
3. When the breakpoint is hit, select Step Into.
4. An internal error with code 35 is dumped to the log repeatedly (I get it 6 times).
*** Bug 58970 has been marked as a duplicate of this bug. ***
Jared, I haven't been able to reproduce this with your test case. Does the test case still work for you?
This is still an issue. Saw it happen this morning (i0528 0800) when stepping through VectorTest in 
host with Yourkit attached. Trying (unsuccessfully so far) to find a test case. Was using WinXP with Sun 
1.4.2_03. 
Created attachment 11290
patch to reset frame depth
stepping quickly through code can reproduce this. A stack frame's underlying stack frame is set lazily. 
If a variable updates after a thread suspends and before the frame index is reset, the variable causes 
causes the frame to retrieve an underlying frame at the wrong depth from the target. This can result in 
an INVALID_SLOT if the incorrect underlying frame has fewer locals than the correct frame.
Attached patch resets the depth to -1 when the underlying frame is cleared upon resume. Prevents 
retrieval of incorrect underlying frame because -1 is not a valid depth.
*** Bug 40838 has been marked as a duplicate of this bug. ***
*** Bug 55331 has been marked as a duplicate of this bug. ***
*** Bug 64263 has been marked as a duplicate of this bug. ***
applied patch. Fix in JDIStackFrame.
Darin, please verify
*** Bug 65595 has been marked as a duplicate of this bug. ***
Verified.
In which build should I expect to see the fix in? I still see bug 40838 (which
is supposed to be a duplicate of this one) with i200406070800.
This should be fixed in the indicated build. Please annotate/re-open with 
relevant information.
Not sure if should reopen this or bug 40838, since I am not seeing the JDI
internal exception, only the effects described in bug 40838 (need to switch
views to cause a new local variable to show up). Unfortunately I have no further
information than "still happens" (not log entries, though). I will be willing to
provide further details you may deem as relevant. Please advise.
What I meant was:

"Unfortunately I have no further information other than 'it still happens' (no
log entries)."

Sorry for the confusion...
OK - Please reopen bug 40838. If you have a code sample/location where we can 
try to reproduce this, it would be helpfull. I.e. what code were you stepping 
in?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46836" />
    <CreationDate amount="2003-11-18 09:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>redundant codes in OrderedLayoutEditPolicy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="89" end="676" />
        <code>protected Command getAddCommand(Request req) {
	ChangeBoundsRequest request = (ChangeBoundsRequest)req;
	List editParts = request.getEditParts();
	Point where = request.getLocation();    //line 83
	IFigure f = ((GraphicalEditPart)getHost()).getFigure();  //line 84
	where = where.getTranslated(f.getBounds().getTopLeft()); //line 85
	CompoundCommand command = new CompoundCommand();
	for (int i = 0; i &lt; editParts.size(); i++) {
		EditPart child = (EditPart) editParts.get(i);
		command.add(
			createAddCommand(child,
				getInsertionReference(request)));
	}
	return command.unwrap();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>in {link OrderedLayoutEditPolicy#getAddCommand(Request)}, 
line 83,84,85 are redundant:

protected Command getAddCommand(Request req) {
	ChangeBoundsRequest request = (ChangeBoundsRequest)req;
	List editParts = request.getEditParts();
	Point where = request.getLocation();    //line 83
	IFigure f = ((GraphicalEditPart)getHost()).getFigure();  //line 84
	where = where.getTranslated(f.getBounds().getTopLeft()); //line 85
	CompoundCommand command = new CompoundCommand();
	for (int i = 0; i &lt; editParts.size(); i++) {
		EditPart child = (EditPart) editParts.get(i);
		command.add(
			createAddCommand(child,
				getInsertionReference(request)));
	}
	return command.unwrap();
}
fixed
Those codes are still there in cvs.
forgot to release the outgoing change.</WithStack>
    <WithOutStack>in {link OrderedLayoutEditPolicy#getAddCommand(Request)}, 
line 83,84,85 are redundant:

protected Command getAddCommand(Request req) {
	ChangeBoundsRequest request = (ChangeBoundsRequest)req;
	List editParts = request.getEditParts();
	Point where = request.getLocation();    //line 83
	IFigure f = ((GraphicalEditPart)getHost()).getFigure();  //line 84
	where = where.getTranslated(f.getBounds().getTopLeft()); //line 85
	CompoundCommand command = new CompoundCommand();
	for (int i = 0; i &lt; editParts.size(); i++) {
		EditPart child = (EditPart) editParts.get(i);
		command.add(
			createAddCommand(child,
				getInsertionReference(request)));
	}
	return command.unwrap();
}
fixed
Those codes are still there in cvs.
forgot to release the outgoing change.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46837" />
    <CreationDate amount="2003-11-18 10:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Navigator] Cannot delete Java project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>1. The project cannot be built until build path errors are resolved.</Line>
          <Line>2. Unable to read '.classpath' file of project Test.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- create new Java project</Line>
          <Line>- in file system, create a new Word doc, test.doc, and open it in Word</Line>
          <Line>- delete project, including contents</Line>
          <Line>- get the Delete Problems error dialog with details:</Line>
          <Line>Problems encountered while deleting resources.</Line>
          <Line>Could not delete: /Test.</Line>
          <Line>Could not delete: D:\eclipse-I20031121\eclipse\workspace\Test\Test.doc.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>N20031118

Start a fresh workspace, create a Java project, delete it INCLUDING its resources
==&gt; not possible

Works if I don't delete the contents.
Moving to Platform/UI. Deleting a project in the Package Explorer is done by 
using the corresponding DeleteResourceAction.
Look like there has been some RCP work in this area so am assigning to RCP 
instead of Contributions.
Anything in the log?

No. And we can no longer reproduce. But we had it several times. I did not see
it when I tried again using I20031119
Is it possible that there was a race condition with something processing files 
in the project, e.g. the indexer?

I'll look at the delete code to see if failure cases are getting properly 
logged.

That's possible. It happened in a small test workspace (no projects at the
beginning). Autobuild on.
Was not able to reproduce using the steps above on I20031121.

Also tried:
- create new Java project
- in file system, create a new Word doc, test.doc, and open it in Word
- delete project, including contents
- get the Delete Problems error dialog with details:
Problems encountered while deleting resources.
  Could not delete: /Test.
    Could not delete: D:\eclipse-I20031121\eclipse\workspace\Test\Test.doc.

Nothing in the log though.
Also, because the .classpath file was successfully deleted, the Problems view 
shows 2 errors:
1. The project cannot be built until build path errors are resolved.
2. Unable to read '.classpath' file of project Test.


On shutdown, also get the following warning:
Problems occurred while trying to save the state of the workbench.
  The project description file (.project) for Test was missing.  This file 
contains important information about the project.  A new project description 
file has been created, but some information about the project may have been 
lost.

Logged core bug 48321 and bug 48322.
Added extra logging in DeleteResourceAction.run().
Fixed in &gt;I20031209.</WithStack>
    <WithOutStack>N20031118

Start a fresh workspace, create a Java project, delete it INCLUDING its resources
==&gt; not possible

Works if I don't delete the contents.
Moving to Platform/UI. Deleting a project in the Package Explorer is done by 
using the corresponding DeleteResourceAction.
Look like there has been some RCP work in this area so am assigning to RCP 
instead of Contributions.
Anything in the log?

No. And we can no longer reproduce. But we had it several times. I did not see
it when I tried again using I20031119
Is it possible that there was a race condition with something processing files 
in the project, e.g. the indexer?

I'll look at the delete code to see if failure cases are getting properly 
logged.

That's possible. It happened in a small test workspace (no projects at the
beginning). Autobuild on.
Was not able to reproduce using the steps above on I20031121.

Also tried:
- create new Java project
- in file system, create a new Word doc, test.doc, and open it in Word
- delete project, including contents
- get the Delete Problems error dialog with details:
Problems encountered while deleting resources.
  Could not delete: /Test.
    Could not delete: D:\eclipse-I20031121\eclipse\workspace\Test\Test.doc.

Nothing in the log though.
Also, because the .classpath file was successfully deleted, the Problems view 
shows 2 errors:
1. The project cannot be built until build path errors are resolved.
2. Unable to read '.classpath' file of project Test.


On shutdown, also get the following warning:
Problems occurred while trying to save the state of the workbench.
  The project description file (.project) for Test was missing.  This file 
contains important information about the project.  A new project description 
file has been created, but some information about the project may have been 
lost.

Logged core bug 48321 and bug 48322.
Added extra logging in DeleteResourceAction.run().
Fixed in &gt;I20031209.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46838" />
    <CreationDate amount="2003-11-18 10:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] Schema docs need revisiting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build I20031118

Some of the extension point schema files in org.eclipse.ui refer to IDE 
concepts.  E.g. the one for editors mentions IFile and the default text editor.
Need to revise these.
Reassigning bugs in component areas that are changing ownership.
Closing stale bug.</WithStack>
    <WithOutStack>build I20031118

Some of the extension point schema files in org.eclipse.ui refer to IDE 
concepts.  E.g. the one for editors mentions IFile and the default text editor.
Need to revise these.
Reassigning bugs in component areas that are changing ownership.
Closing stale bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46839" />
    <CreationDate amount="2003-11-18 10:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] Auto-save on build leaves progress bar showing in status line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- turn on the Workbench pref to save changes on build</Line>
          <Line>- open a file</Line>
          <Line>- make some changes, but don't save</Line>
          <Line>- Ctrl+B</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build N20031117

- turn on the Workbench pref to save changes on build 
- open a file
- make some changes, but don't save
- Ctrl+B

The progress bar in the status line is left showing (at 100%).

Ctrl+S does not have the same problem.

This is a regression from M4.
The progress monitor's done() method is not being called.
We used to get a free done() from the call to workspace.run in 
EditorManager.saveAll, however this was removed due to the RCP changes (see bug 
46844).


Added explicit call to done() in saveAll.
Also reinstated used of EventLoopProgressMonitor.  See bug 46844.</WithStack>
    <WithOutStack>build N20031117

- turn on the Workbench pref to save changes on build 
- open a file
- make some changes, but don't save
- Ctrl+B

The progress bar in the status line is left showing (at 100%).

Ctrl+S does not have the same problem.

This is a regression from M4.
The progress monitor's done() method is not being called.
We used to get a free done() from the call to workspace.run in 
EditorManager.saveAll, however this was removed due to the RCP changes (see bug 
46844).


Added explicit call to done() in saveAll.
Also reinstated used of EventLoopProgressMonitor.  See bug 46844.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46840" />
    <CreationDate amount="2003-11-18 10:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>When I select "Create Ant Build file" I get a fatal error.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- download and extract RC3</Line>
          <Line>- start Eclipse</Line>
          <Line>- File -&gt; New -&gt; Plug-in Project</Line>
          <Line>- create a Hello World example</Line>
          <Line>- in the Packages view right click on the plugin.xml and choose Create Ant Build</Line>
          <Line>File...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I click on a plugin.xml and select "Create Ant build file", I get a
message-box that has a Red circle with a white X in it with the text,
"Cannot find plugin org.eclipse.core.boot".

An invalid build.xml file is then created.
Did you activate the plugins in the target platform?
Windows &gt; PDE &gt; Target Platform, click 'not in workspace'
This works ok for me with RC3 using the following steps:

- download and extract RC3
- start Eclipse
- File -&gt; New -&gt; Plug-in Project
- create a Hello World example
- in the Packages view right click on the plugin.xml and choose Create Ant Build
File...

Note that the build.xml file is created and there are no error messages or
warnings. Also the log file is empty.
Chris. None of us have been able to recreate your problem on 2.1.2. Do you have a standalone test 
that shows the problem
Clicking "Not in workspace" fixed the problem.

The projects were created by checking them out from CVS on a build machine
and I then wanted to rebuild the build.xml files for the build machine
environment.

It was not immediately apparent to me that this was the cause of this problem,
and I don't know if it would be possible to give a better message in this
scenario.
It is the best message that can be provided, given that the generator does not 
know if the script are being generated from inside a workspace or headless.</WithStack>
    <WithOutStack>When I click on a plugin.xml and select "Create Ant build file", I get a
message-box that has a Red circle with a white X in it with the text,
"Cannot find plugin org.eclipse.core.boot".

An invalid build.xml file is then created.
Did you activate the plugins in the target platform?
Windows &gt; PDE &gt; Target Platform, click 'not in workspace'
This works ok for me with RC3 using the following steps:

- download and extract RC3
- start Eclipse
- File -&gt; New -&gt; Plug-in Project
- create a Hello World example
- in the Packages view right click on the plugin.xml and choose Create Ant Build
File...

Note that the build.xml file is created and there are no error messages or
warnings. Also the log file is empty.
Chris. None of us have been able to recreate your problem on 2.1.2. Do you have a standalone test 
that shows the problem
Clicking "Not in workspace" fixed the problem.

The projects were created by checking them out from CVS on a build machine
and I then wanted to rebuild the build.xml files for the build machine
environment.

It was not immediately apparent to me that this was the cause of this problem,
and I don't know if it would be possible to give a better message in this
scenario.
It is the best message that can be provided, given that the generator does not 
know if the script are being generated from inside a workspace or headless.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46841" />
    <CreationDate amount="2003-11-18 10:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Import project does not reconnect Team CVS share</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When you import a project that was previously connected to a CVS repository, 
Eclipse does not reconnect it. To reproduce, check out a project, then delete 
it (but don't delete the contents). Then Import &gt; Existing Project and select 
the project you just deleted. It will be unshared. The workaround is to right 
click on the project, select Team &gt; Share project, double-click CVS, and press 
Finish.
This is by design. The problem is that, when a project is imported, the CVS 
plugin may or may not be started so it is impossible to do the mapping for 
free in all cases. For consistency, the mapping is left to the user.
Can it be reopened as an enhancement request then? Maybe it could just do the 
equivalent of Team &gt; Share after the Import is done. I've had a few users trip 
over this.
To clearify what I said earlier, if the CVS plugin is loaded, it could detect 
the import via the Core delta mechanism so a Share could happen automatically. 
Unfortunately, the CVS plugin only gets loaded when a CVS operation is 
performed. The Project Import operation is not a CVS operation so it is 
possible that the Import happened before the CVS plugin was loaded. In this 
case, there is no way to do a Share automatically after the import because 
there is no way for the CVS plugin to know that an import occurred. We don't 
want to have an automatic share in one case but not in another so the only 
option is to force the user to do the share manually. 

I don't mind if you reopen this as an enhancement request but there is no 
simple solution.
Team &gt; Share lists all current providers and lets the user pick, and if they 
pick CVS then it should definitely get loaded at that point. So if the import 
existing project wizard had a Next&gt; button at the end which went to the Team &gt; 
Share page then that would be cut out about 3 mouse gestures and provide a 
clue to the user that there is more to the process of importing. I think that 
would be sufficient.
I understand the use-case but it's not that easy to extend another plug-ins 
import extension. 
After importing already shared projects I had to reshare them. But then, after
sharing (and eclipse noticed that it was shared before and reconnected) the CVS
directories were not automatically hidden. I had to shutdown eclipse and restart
for the CVS directories to be hidden. 
This was fixed in 3.1. Imported CVS projects will be shared automatically.</WithStack>
    <WithOutStack>When you import a project that was previously connected to a CVS repository, 
Eclipse does not reconnect it. To reproduce, check out a project, then delete 
it (but don't delete the contents). Then Import &gt; Existing Project and select 
the project you just deleted. It will be unshared. The workaround is to right 
click on the project, select Team &gt; Share project, double-click CVS, and press 
Finish.
This is by design. The problem is that, when a project is imported, the CVS 
plugin may or may not be started so it is impossible to do the mapping for 
free in all cases. For consistency, the mapping is left to the user.
Can it be reopened as an enhancement request then? Maybe it could just do the 
equivalent of Team &gt; Share after the Import is done. I've had a few users trip 
over this.
To clearify what I said earlier, if the CVS plugin is loaded, it could detect 
the import via the Core delta mechanism so a Share could happen automatically. 
Unfortunately, the CVS plugin only gets loaded when a CVS operation is 
performed. The Project Import operation is not a CVS operation so it is 
possible that the Import happened before the CVS plugin was loaded. In this 
case, there is no way to do a Share automatically after the import because 
there is no way for the CVS plugin to know that an import occurred. We don't 
want to have an automatic share in one case but not in another so the only 
option is to force the user to do the share manually. 

I don't mind if you reopen this as an enhancement request but there is no 
simple solution.
Team &gt; Share lists all current providers and lets the user pick, and if they 
pick CVS then it should definitely get loaded at that point. So if the import 
existing project wizard had a Next&gt; button at the end which went to the Team &gt; 
Share page then that would be cut out about 3 mouse gestures and provide a 
clue to the user that there is more to the process of importing. I think that 
would be sufficient.
I understand the use-case but it's not that easy to extend another plug-ins 
import extension. 
After importing already shared projects I had to reshare them. But then, after
sharing (and eclipse noticed that it was shared before and reconnected) the CVS
directories were not automatically hidden. I had to shutdown eclipse and restart
for the CVS directories to be hidden. 
This was fixed in 3.1. Imported CVS projects will be shared automatically.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46842" />
    <CreationDate amount="2003-11-18 11:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>.class files in the default package in a jar are ignored</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I need to include some jar file into a project. That jar contains only .class
files - some are in the default package and some are in subpackages.

In my code, classes which are in a subpackage can be found. The classes in the
default package can, so thinks eclipse, not be resolved.

I'm running the M4 build of the 3.0 eclipse (200310101454) under winxp here. On
a different system with eclipse 2.1 (200302211557) under w2k, everything works
fine, all symbols can be resolved.

The project configuration is in both eclipse version, as far as I can tell, the
same.
Created attachment 6837
The jar file in question

In the code, the classes FlexibleConstants, FlexibleConstraints, FlexibleLayout
cannot be resolved. ptolemy.plot.Plot works fine
3.0 M4 is defaulting to compiler 1.4 compliant mode, whereas 2.1.1 defaults to 
1.3 compiler compliant mode. In 1.4, the default package is no longer 
accessible from the outside.

This is a language evolution.
I'm sorry, there's one thing I forgot to mention: 
 
in both configurations, eclipse was told to use a 1.1.7 jdk (it's an applet 
and everyone should be able to run it, even with the ms-jvm). 
What are your compliance settings?
Go to Preferences&gt;Java&gt;Compiler&gt;Compliance and Classfiles.
If this is 1.4, you need to change it to 1.3.
To clarify. Eclipse uses its own compiler which can be configured to either 
perform as a 1.3 or 1.4 compiler.

If you want to compile your code against a JDK1.1.7, this should work fine as 
long as you ensure the .class file compliance level is set to 1.1 (under 
Preferences&gt;Java&gt;Compiler&gt;Compliance and Classfiles).

If you also want to be able to compile against classes in default package, then 
you also need to turn the compiler compliance to 1.3, since as I said in 
previous comment, the language got changed around 1.4 so as to disallow these 
type of accesses.

Is it ok to close ?
Changing the Compiler compliance level solved the problem.

Thanks for your help
Should have been closed as workforme.
Closing</WithStack>
    <WithOutStack>I need to include some jar file into a project. That jar contains only .class
files - some are in the default package and some are in subpackages.

In my code, classes which are in a subpackage can be found. The classes in the
default package can, so thinks eclipse, not be resolved.

I'm running the M4 build of the 3.0 eclipse (200310101454) under winxp here. On
a different system with eclipse 2.1 (200302211557) under w2k, everything works
fine, all symbols can be resolved.

The project configuration is in both eclipse version, as far as I can tell, the
same.
Created attachment 6837
The jar file in question

In the code, the classes FlexibleConstants, FlexibleConstraints, FlexibleLayout
cannot be resolved. ptolemy.plot.Plot works fine
3.0 M4 is defaulting to compiler 1.4 compliant mode, whereas 2.1.1 defaults to 
1.3 compiler compliant mode. In 1.4, the default package is no longer 
accessible from the outside.

This is a language evolution.
I'm sorry, there's one thing I forgot to mention: 
 
in both configurations, eclipse was told to use a 1.1.7 jdk (it's an applet 
and everyone should be able to run it, even with the ms-jvm). 
What are your compliance settings?
Go to Preferences&gt;Java&gt;Compiler&gt;Compliance and Classfiles.
If this is 1.4, you need to change it to 1.3.
To clarify. Eclipse uses its own compiler which can be configured to either 
perform as a 1.3 or 1.4 compiler.

If you want to compile your code against a JDK1.1.7, this should work fine as 
long as you ensure the .class file compliance level is set to 1.1 (under 
Preferences&gt;Java&gt;Compiler&gt;Compliance and Classfiles).

If you also want to be able to compile against classes in default package, then 
you also need to turn the compiler compliance to 1.3, since as I said in 
previous comment, the language got changed around 1.4 so as to disallow these 
type of accesses.

Is it ok to close ?
Changing the Compiler compliance level solved the problem.

Thanks for your help
Should have been closed as workforme.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46843" />
    <CreationDate amount="2003-11-18 11:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add 'Search subfolders' option</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Add an option to recursively search the subfolders when searching for files in 
directory source locations.
Implemented in 1.2.1 and HEAD.</WithStack>
    <WithOutStack>Add an option to recursively search the subfolders when searching for files in 
directory source locations.
Implemented in 1.2.1 and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46844" />
    <CreationDate amount="2003-11-18 11:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] Save all does not batch operations or keep UI active</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="3">
        <Lines>
          <Line>(a) no longer runs as a workspace operation, and</Line>
          <Line>(b) no longer wraps the progress monitor in an EventLoopProgressMonitor to keep</Line>
          <Line>the UI active.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>(a) had to be done due to the RCP changes since the generic workbench cannot</Line>
          <Line>depend on the workspace.  However, this may result in multiple autobuilds.</Line>
          <Line>Background builds may reduce the impact of this change.</Line>
          <Line>(b) was not required by the RCP changes, and will result in the cancel button</Line>
          <Line>being unresponsive.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1) Delegate saveAll to the workbench advisor to do the batching.</Line>
          <Line>2) Delegate running a batch operation to the workbench advisor.</Line>
          <Line>3) Ask the workbench advisor for the IRunnableContext for running operations</Line>
          <Line>(equivalent to 2).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build I20031117

While tracking down bug 46839, I noticed that the implementation of 
EditorManager.saveAll:
(a) no longer runs as a workspace operation, and
(b) no longer wraps the progress monitor in an EventLoopProgressMonitor to keep 
the UI active.

(a) had to be done due to the RCP changes since the generic workbench cannot 
depend on the workspace.  However, this may result in multiple autobuilds.  
Background builds may reduce the impact of this change.
(b) was not required by the RCP changes, and will result in the cancel button 
being unresponsive.

There are a couple of options here:
1) Delegate saveAll to the workbench advisor to do the batching.
2) Delegate running a batch operation to the workbench advisor.
3) Ask the workbench advisor for the IRunnableContext for running operations 
(equivalent to 2).

Whatever we do, it should be consistent with what is done for 
EditorManager.savePart.

Note that for responsiveness, we don't want to lock the whole workspace when 
saving a single part.  We should also consider whether we can do better for 
save all as well (e.g. lock only the dirty files selected to be saved).
For the locking question, I think the right answer is to use new the
IWorkspace.run(IWorkspaceRunnable, null, IProgressMonitor).  By specifying
"null" as the locking rule, you're saying you don't need any locking at all
across the entire operation.  Individual API methods (such as setContents())
obtain their own locks to maintain self-consistency.
Reinstated use of EventLoopProgressMonitor as part of fix for bug 46839.

Is there any chance that this would result in inconsistency?
E.g. if multiple files are being modified in conjunction, it would be nice to 
be able to guarantee that the changes get saved atomically (barring filesystem 
errors).  E.g. if I change MyBean.java and MyBeanPersistence.java and then do 
Save All, without locking them both it's possible to have it save MyBean but 
then block on MyBeanPersistence.java, which the user could then cancel out of.

Perhaps if editors or editor inputs could provide their own scheduling rules.  
Then save all could collect these and pass these to the workspace.run (or some 
other model's run method).

The scheduling rules could be obtained using editorInput.getAdapter
(ISchedulingRule.class).  FileEditorInput would just return the file.

Feels to me like it's asking to much for "save all" to be transactional. I 
think this operation is simply a convenience that saves each of the editors in 
need of saving.
I agree with Jeem.  If the user cancels half way through (which presumably has
always been possible), I see no problem with only some of the editors having
been saved.
Reassigning bugs in component areas that are changing ownership.
Closing stale bug.  I don't think we need the batching.</WithStack>
    <WithOutStack>build I20031117

While tracking down bug 46839, I noticed that the implementation of 
EditorManager.saveAll:
(a) no longer runs as a workspace operation, and
(b) no longer wraps the progress monitor in an EventLoopProgressMonitor to keep 
the UI active.

(a) had to be done due to the RCP changes since the generic workbench cannot 
depend on the workspace.  However, this may result in multiple autobuilds.  
Background builds may reduce the impact of this change.
(b) was not required by the RCP changes, and will result in the cancel button 
being unresponsive.

There are a couple of options here:
1) Delegate saveAll to the workbench advisor to do the batching.
2) Delegate running a batch operation to the workbench advisor.
3) Ask the workbench advisor for the IRunnableContext for running operations 
(equivalent to 2).

Whatever we do, it should be consistent with what is done for 
EditorManager.savePart.

Note that for responsiveness, we don't want to lock the whole workspace when 
saving a single part.  We should also consider whether we can do better for 
save all as well (e.g. lock only the dirty files selected to be saved).
For the locking question, I think the right answer is to use new the
IWorkspace.run(IWorkspaceRunnable, null, IProgressMonitor).  By specifying
"null" as the locking rule, you're saying you don't need any locking at all
across the entire operation.  Individual API methods (such as setContents())
obtain their own locks to maintain self-consistency.
Reinstated use of EventLoopProgressMonitor as part of fix for bug 46839.

Is there any chance that this would result in inconsistency?
E.g. if multiple files are being modified in conjunction, it would be nice to 
be able to guarantee that the changes get saved atomically (barring filesystem 
errors).  E.g. if I change MyBean.java and MyBeanPersistence.java and then do 
Save All, without locking them both it's possible to have it save MyBean but 
then block on MyBeanPersistence.java, which the user could then cancel out of.

Perhaps if editors or editor inputs could provide their own scheduling rules.  
Then save all could collect these and pass these to the workspace.run (or some 
other model's run method).

The scheduling rules could be obtained using editorInput.getAdapter
(ISchedulingRule.class).  FileEditorInput would just return the file.

Feels to me like it's asking to much for "save all" to be transactional. I 
think this operation is simply a convenience that saves each of the editors in 
need of saving.
I agree with Jeem.  If the user cancels half way through (which presumably has
always been possible), I see no problem with only some of the editors having
been saved.
Reassigning bugs in component areas that are changing ownership.
Closing stale bug.  I don't think we need the batching.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46845" />
    <CreationDate amount="2003-11-18 11:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Deferred breakpoints support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Setting a breakpoint in a shared library should be transparent if 
the 'Automatically load shared library symbols' option is on.
Implemented in 1.2.1 and HEAD.</WithStack>
    <WithOutStack>Setting a breakpoint in a shared library should be transparent if 
the 'Automatically load shared library symbols' option is on.
Implemented in 1.2.1 and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46846" />
    <CreationDate amount="2003-11-18 11:35:00 -0500" />
    <DupId amount="47229" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Enhancement of the Core Model</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Review of the Core Model class hieararchy.


*** This bug has been marked as a duplicate of 47229 ***</WithStack>
    <WithOutStack>Review of the Core Model class hieararchy.


*** This bug has been marked as a duplicate of 47229 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46847" />
    <CreationDate amount="2003-11-18 11:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>create new server util import log wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>the import log wizard in pd.server.util is not longer working as log wizard 
code in log.ui was changed.
new wizard page will have to be created for pd.server as log.ui wizard cannot 
be extended in pd.server.util anymore.

other minor bugs(compilation error) in pd.server.util will also be cleaned up 
in this track record.
AC bug 30550 opened on IIOSB
there is changes in org.eclipse.hyades.log.ui for this bug
code dropped to cvs on 19Nov2003, 3:41pm
closing bug
house keeping</WithStack>
    <WithOutStack>the import log wizard in pd.server.util is not longer working as log wizard 
code in log.ui was changed.
new wizard page will have to be created for pd.server as log.ui wizard cannot 
be extended in pd.server.util anymore.

other minor bugs(compilation error) in pd.server.util will also be cleaned up 
in this track record.
AC bug 30550 opened on IIOSB
there is changes in org.eclipse.hyades.log.ui for this bug
code dropped to cvs on 19Nov2003, 3:41pm
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46848" />
    <CreationDate amount="2003-11-18 11:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Circumflex accent for characters does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All accent composition keys work correctly (acute+a gives á, acute+c gives ç,
tilde+a gives ã, etc.) but circumflex+vowel are ignored, i.e. the vowels appear
without the accent.
Can you enter those characters e.g. in the search dialog or do you only see this
using an editor? If so which Eclipse editor(s).
I cannot enter them neither in dialogs nor in the java text editor.
This should already be fixed &gt; 20031118.  Please reopen if this is not the 
case.  Thanks.
Additional Notes:

Tested with two computers, both running Windows 2000 Pro with same patches
applied, same OS language, same with same version of Eclipse. Main difference is
that one have a US keyboard without cedilla, circumflex is over the key 6 and
another a Brazilian ABNT2 keyboard, with cedilla close to the key L and
circumflex and tilde key. On the brazilian keyboard computer, it works. On the
US-keyboard it does not. 

I can type ê (circumflex-e) in any application on the computer with US keyboard,
except on Eclipse 3.0. It does not seems to be a font/glyph problem since I've
tried to change it.

Really, this looks like something we have already fixed.  Can you try it out 
in tonights build and reopen this problem report if it isn't fixed.  Thanks.
Checked, it is fixed on build 20031120. Thanks.</WithStack>
    <WithOutStack>All accent composition keys work correctly (acute+a gives á, acute+c gives ç,
tilde+a gives ã, etc.) but circumflex+vowel are ignored, i.e. the vowels appear
without the accent.
Can you enter those characters e.g. in the search dialog or do you only see this
using an editor? If so which Eclipse editor(s).
I cannot enter them neither in dialogs nor in the java text editor.
This should already be fixed &gt; 20031118.  Please reopen if this is not the 
case.  Thanks.
Additional Notes:

Tested with two computers, both running Windows 2000 Pro with same patches
applied, same OS language, same with same version of Eclipse. Main difference is
that one have a US keyboard without cedilla, circumflex is over the key 6 and
another a Brazilian ABNT2 keyboard, with cedilla close to the key L and
circumflex and tilde key. On the brazilian keyboard computer, it works. On the
US-keyboard it does not. 

I can type ê (circumflex-e) in any application on the computer with US keyboard,
except on Eclipse 3.0. It does not seems to be a font/glyph problem since I've
tried to change it.

Really, this looks like something we have already fixed.  Can you try it out 
in tonights build and reopen this problem report if it isn't fixed.  Thanks.
Checked, it is fixed on build 20031120. Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46849" />
    <CreationDate amount="2003-11-18 11:53:00 -0500" />
    <DupId amount="40333" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Configuring a branch refreshes entire repositories view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Expand HEAD</Line>
          <Line>2) Select a project</Line>
          <Line>3) Add a tag using Configure Branches and Versions</Line>
          <Line>4) Hit OK - view will refresh</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20031117

If I add a project to the list of branches using Configure Branches and 
Versions the Repositories View refreshes. 

STEPS
1) Expand HEAD
2) Select a project
3) Add a tag using Configure Branches and Versions
4) Hit OK - view will refresh


*** This bug has been marked as a duplicate of 40333 ***</WithStack>
    <WithOutStack>20031117

If I add a project to the list of branches using Configure Branches and 
Versions the Repositories View refreshes. 

STEPS
1) Expand HEAD
2) Select a project
3) Add a tag using Configure Branches and Versions
4) Hit OK - view will refresh


*** This bug has been marked as a duplicate of 40333 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46850" />
    <CreationDate amount="2003-11-18 11:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to report problems from the methods of 'ICDIRuntimeOptions'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All methods of 'ICDIRuntimeOptions' should throw exceptions in case of failure.
Fixed in 1.2.1 and HEAD.</WithStack>
    <WithOutStack>All methods of 'ICDIRuntimeOptions' should throw exceptions in case of failure.
Fixed in 1.2.1 and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46851" />
    <CreationDate amount="2003-11-18 12:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CbeFormatter does not format child extendedDataElements.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.hyades.logging.events.CbeFormatter does not format child 
extendedDataElements.
Formatting code checked-in on 18/11/2003.
Closing.
house keeping</WithStack>
    <WithOutStack>org.eclipse.hyades.logging.events.CbeFormatter does not format child 
extendedDataElements.
Formatting code checked-in on 18/11/2003.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46852" />
    <CreationDate amount="2003-11-18 12:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] remove should not try to preserve selection for removed elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- When calling AbstractTreeViewer.remove, it calls preservingSelection, which</Line>
          <Line>tries to preserve the selection and is also responsible for notifying listeners</Line>
          <Line>of changes to the selection.</Line>
          <Line>- It is often the case that the selection contains the elements being removed.</Line>
          <Line>- It should not try to restore the selection for these elements, since this</Line>
          <Line>causes extra work, and may lead to population of the parent from the model,</Line>
          <Line>which can lead to inconsistencies (see bug 44081).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>build N20031117

- When calling AbstractTreeViewer.remove, it calls preservingSelection, which 
tries to preserve the selection and is also responsible for notifying listeners 
of changes to the selection.
- It is often the case that the selection contains the elements being removed.
- It should not try to restore the selection for these elements, since this 
causes extra work, and may lead to population of the parent from the model, 
which can lead to inconsistencies (see bug 44081).

Should fix up all viewers, not just AbstractTreeViewer.
Need to be careful not to break contracts for protected API when fixing this.
Deferring
Reassigning bugs in component areas that are changing ownership.
Hitesh is now responsible for watching bugs in the [Viewers] component area.</WithStack>
    <WithOutStack>build N20031117

- When calling AbstractTreeViewer.remove, it calls preservingSelection, which 
tries to preserve the selection and is also responsible for notifying listeners 
of changes to the selection.
- It is often the case that the selection contains the elements being removed.
- It should not try to restore the selection for these elements, since this 
causes extra work, and may lead to population of the parent from the model, 
which can lead to inconsistencies (see bug 44081).

Should fix up all viewers, not just AbstractTreeViewer.
Need to be careful not to break contracts for protected API when fixing this.
Deferring
Reassigning bugs in component areas that are changing ownership.
Hitesh is now responsible for watching bugs in the [Viewers] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46853" />
    <CreationDate amount="2003-11-18 12:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NullpointerException in TypeBinding class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074394">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods(TypeBinding.java:325)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Here is what i got :

java.lang.NullPointerException
	at org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods
(TypeBinding.java:325)
Would you have any steps to reproduce?
What VM are you using?
Build number?

Thanks.
i am using Win XP, JDK 1.4.
eclipse version 2.1.2
Build id: 200311030802

I can't reproduce it because it just happen sometimes, not all the time. (I 
don't know why)

What I did is running the visitor in a BIG project.


What VM? Some VMs are known to have JIT problems that are causing NPE.
If you get it consistently, try to start your VM with a vm argument.
Use the -vmargs as the last argument on your command line and put:
-vmargs -Djava.compiler=NONE

Without steps to reproduce, it is almost impossible to track it down. Looking at
the code I don't see how it is possible to get null for the methods of a binding.
I really think this is a JIT issue.
Please reopen once steps to reproduce are available
Timed out
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Here is what i got :


Would you have any steps to reproduce?
What VM are you using?
Build number?

Thanks.
i am using Win XP, JDK 1.4.
eclipse version 2.1.2
Build id: 200311030802

I can't reproduce it because it just happen sometimes, not all the time. (I 
don't know why)

What I did is running the visitor in a BIG project.


What VM? Some VMs are known to have JIT problems that are causing NPE.
If you get it consistently, try to start your VM with a vm argument.
Use the -vmargs as the last argument on your command line and put:
-vmargs -Djava.compiler=NONE

Without steps to reproduce, it is almost impossible to track it down. Looking at
the code I don't see how it is possible to get null for the methods of a binding.
I really think this is a JIT issue.
Please reopen once steps to reproduce are available
Timed out
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46854" />
    <CreationDate amount="2003-11-18 13:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[DCR] Javadoc configuration setting needs more flexibility</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="998" end="1174" />
        <code>/**
 * @throws MyException between these range for this value
 * @throws MyException if this parameter has this type
 * @throws MyException ...
 * @throws MySecondException
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1239" end="1408" />
        <code>/**
 * @throws MyException
 *        1) between these range for this value
 *        2) if this parameter has this type
 *        3) ...
 * @throws MySecondException
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>There are a number of settings I'd love to set for the javadoc checks in the
compiler settings section, primarily:
   require all methods (regardless of visibility) to have javadocs
   allow multiple @throws per thrown exception

But the current UI doesn't allow for that kind of detail.  Are there any plans
for making the Javadoc checks more configurable?  If not, I'd like to request
more configuration options :-)
JDT/Core provides the "real" function.
Why would you need multiple @throws per thrown exception ? Is it to be able to 
add each scenario behind ?
I'm not sure I understand your second question, but as to why multiple @throws
per Exception, one example (the pattern I use most frequently) it to have one
@throws for type checks and one @throws for range checks (when a failure in
either will throw, for example, IllegalArgumentException)...
Marco,

I don't understand your second requirement. May you provide a example?
My assumption is that you want to have this kind of Javadoc:
/**
 * @throws MyException between these range for this value
 * @throws MyException if this parameter has this type
 * @throws MyException ...
 * @throws MySecondException
 */
At my point of view you can write the same using current model:
/**
 * @throws MyException
 *        1) between these range for this value
 *        2) if this parameter has this type
 *        3) ...
 * @throws MySecondException
 */

The model for Javadoc comment assumes that all lines following a line including 
a tag declaration owns to this tag until the next tag declaration (or the end 
of the comment of course).

Otherwise, OK for your first suggestion which can be a possible additional 
option for Javadoc checking...


Well, I'm not married to the exceptions thing, and your solution works just as
well. :-)  Thanks for the methods -- please extend to also include fields?
Of course, this would be extended for methods, constructors, fields and types

Should we consider packages?  Or should I enter another enhancement request for
that?
If package means that user can set the visibility level from which the javadoc 
checks will be performed, then we can use this bug.

First possibility would be that user had a radio button with four values: 
public, protected, package and private. Then, compiler would check only on 
methods, fields and types which would have a visibility equal or larger than 
the selected one.

Second possibility would be that user has a multi-selection choice with the 
same four values. Then compiler would check methods, fields and  types which  
would have been selected.

Actually, I was thinking along the lines of package-level javadocs... ie/
package.html.  But, of your two ideas, IMHO, the second one adds unwarranted
flexibility... (Again, this is merely my opinion, but I can't see the value of
selecting "enforce javadocs for package-visible members, but not public members"...
Current option 'Missing Javadoc tags' will be changed to let user enter level 
of visibility he wants to report this problem instead of having just the choice 
to enable/disable it.

Fix for this bug is ready but we need to synchronize with JDT-UI for release.

See also bug 46976.
Martin,

The existing compiler option COMPILER_PB_MISSING_JAVADOC will be changed as 
follow:
 * COMPILER / Reporting Missing Javadoc Comment
 *    Specify the level of visibility from which the compiler will signal cases
      where class, interface, method,
 *    constructor or field has no javadoc comment. When set to "never" value,
      the compiler will never complain
 *    about missing javadoc comment.
 *    The severity of the problem is controlled with
      option "org.eclipse.jdt.core.compiler.problem.invalidJavadoc".
 *     - option id:
      "org.eclipse.jdt.core.compiler.problem.missingJavadoc"
 *     - possible values: 
      { "never", "public", "protected", "default", "private" }
 *     - default:           "never"

As we need to be synchronized to release this change, I'll send you a JDT-Core 
jar file in order to have this bug and bug 46976 fixes and prepare 
corresponding change in JDT-UI to be able to display the new compiler options.

I assign the bug to you to follow the work about this. When you'll be ready, 
then please reassign the bug to me and we'll release together at this time...

Thanks
Marco,

We'll add several options to make compiler error report on javadoc easier to 
control for user.

For packages enhancement, please open a new bug, thanks

New options have been added for Javadoc problems.
 
Complete definition of these new options is done in JDT-Core release notes: 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%
7E/org.eclipse.jdt.core/buildnotes_jdt-core.html.

Invalid references, missing tags (bug 47940) or missing comments (this bug and 
bug 47319) problems can be now ignored below a specific visibility level.

Finally, user will also have the possibility to ignore missing tags and missing 
comments on overriding methods, assuming that complete Javadoc comments is done 
in superclass or interface declaration (see bug 46976).

Complete test cases created for this bug and related ones:
jdt.core.tests.compiler.regression.JavadocTestOptions

Tests of new Javadoc Preference page was also done using HEAD from jdt-ui.
All JDT-UI regression tests pass.

Verified for 3.0M6</WithStack>
    <WithOutStack>There are a number of settings I'd love to set for the javadoc checks in the
compiler settings section, primarily:
   require all methods (regardless of visibility) to have javadocs
   allow multiple @throws per thrown exception

But the current UI doesn't allow for that kind of detail.  Are there any plans
for making the Javadoc checks more configurable?  If not, I'd like to request
more configuration options :-)
JDT/Core provides the "real" function.
Why would you need multiple @throws per thrown exception ? Is it to be able to 
add each scenario behind ?
I'm not sure I understand your second question, but as to why multiple @throws
per Exception, one example (the pattern I use most frequently) it to have one
@throws for type checks and one @throws for range checks (when a failure in
either will throw, for example, IllegalArgumentException)...
Marco,

I don't understand your second requirement. May you provide a example?
My assumption is that you want to have this kind of Javadoc:
/**
 * @throws MyException between these range for this value
 * @throws MyException if this parameter has this type
 * @throws MyException ...
 * @throws MySecondException
 */
At my point of view you can write the same using current model:
/**
 * @throws MyException
 *        1) between these range for this value
 *        2) if this parameter has this type
 *        3) ...
 * @throws MySecondException
 */

The model for Javadoc comment assumes that all lines following a line including 
a tag declaration owns to this tag until the next tag declaration (or the end 
of the comment of course).

Otherwise, OK for your first suggestion which can be a possible additional 
option for Javadoc checking...


Well, I'm not married to the exceptions thing, and your solution works just as
well. :-)  Thanks for the methods -- please extend to also include fields?
Of course, this would be extended for methods, constructors, fields and types

Should we consider packages?  Or should I enter another enhancement request for
that?
If package means that user can set the visibility level from which the javadoc 
checks will be performed, then we can use this bug.

First possibility would be that user had a radio button with four values: 
public, protected, package and private. Then, compiler would check only on 
methods, fields and types which would have a visibility equal or larger than 
the selected one.

Second possibility would be that user has a multi-selection choice with the 
same four values. Then compiler would check methods, fields and  types which  
would have been selected.

Actually, I was thinking along the lines of package-level javadocs... ie/
package.html.  But, of your two ideas, IMHO, the second one adds unwarranted
flexibility... (Again, this is merely my opinion, but I can't see the value of
selecting "enforce javadocs for package-visible members, but not public members"...
Current option 'Missing Javadoc tags' will be changed to let user enter level 
of visibility he wants to report this problem instead of having just the choice 
to enable/disable it.

Fix for this bug is ready but we need to synchronize with JDT-UI for release.

See also bug 46976.
Martin,

The existing compiler option COMPILER_PB_MISSING_JAVADOC will be changed as 
follow:
 * COMPILER / Reporting Missing Javadoc Comment
 *    Specify the level of visibility from which the compiler will signal cases
      where class, interface, method,
 *    constructor or field has no javadoc comment. When set to "never" value,
      the compiler will never complain
 *    about missing javadoc comment.
 *    The severity of the problem is controlled with
      option "org.eclipse.jdt.core.compiler.problem.invalidJavadoc".
 *     - option id:
      "org.eclipse.jdt.core.compiler.problem.missingJavadoc"
 *     - possible values: 
      { "never", "public", "protected", "default", "private" }
 *     - default:           "never"

As we need to be synchronized to release this change, I'll send you a JDT-Core 
jar file in order to have this bug and bug 46976 fixes and prepare 
corresponding change in JDT-UI to be able to display the new compiler options.

I assign the bug to you to follow the work about this. When you'll be ready, 
then please reassign the bug to me and we'll release together at this time...

Thanks
Marco,

We'll add several options to make compiler error report on javadoc easier to 
control for user.

For packages enhancement, please open a new bug, thanks

New options have been added for Javadoc problems.
 
Complete definition of these new options is done in JDT-Core release notes: 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%
7E/org.eclipse.jdt.core/buildnotes_jdt-core.html.

Invalid references, missing tags (bug 47940) or missing comments (this bug and 
bug 47319) problems can be now ignored below a specific visibility level.

Finally, user will also have the possibility to ignore missing tags and missing 
comments on overriding methods, assuming that complete Javadoc comments is done 
in superclass or interface declaration (see bug 46976).

Complete test cases created for this bug and related ones:
jdt.core.tests.compiler.regression.JavadocTestOptions

Tests of new Javadoc Preference page was also done using HEAD from jdt-ui.
All JDT-UI regression tests pass.

Verified for 3.0M6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46855" />
    <CreationDate amount="2003-11-18 13:26:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>refresh after uninstall causes NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074398">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.PackageAdmin.computeAffectedBundles(PackageAdmin.java:812)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages(PackageAdmin.java:401)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.PackageAdmin$1.run(PackageAdmin.java:382)</Frame>
          <Frame depth="3">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I uninstall a resolved bundle and then refresh (no arguments passed), the NPE
below happens. The reason is that we rely on a bundle having a loader proxy,
what is not true for those that were already uninstalled.

java.lang.NullPointerException
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin.computeAffectedBundles(PackageAdmin.java:812)
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages(PackageAdmin.java:401)
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin$1.run(PackageAdmin.java:382)
	at java.lang.Thread.run(Thread.java:534)
This was fixed with the latest changes to the framework. Cannot reproduce anymore.</WithStack>
    <WithOutStack>If I uninstall a resolved bundle and then refresh (no arguments passed), the NPE
below happens. The reason is that we rely on a bundle having a loader proxy,
what is not true for those that were already uninstalled.


This was fixed with the latest changes to the framework. Cannot reproduce anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46856" />
    <CreationDate amount="2003-11-18 13:35:00 -0500" />
    <DupId amount="46203" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Emacs Key-Binding for Content Assist broken in GTK-Version</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Emacs Key-Binding for "Content Assist" "ALT-/" doesn't work with GTK-Version
but with Motif-Version. 

With "Comment/Uncomment-Binding" (STRG-/) and (STRG-\) its the same.

Best regards,

  Georg

Version: Eclipse 200311030802 GTK and Motif
Linux: Suse 9.0 KDE


*** This bug has been marked as a duplicate of 46203 ***</WithStack>
    <WithOutStack>The Emacs Key-Binding for "Content Assist" "ALT-/" doesn't work with GTK-Version
but with Motif-Version. 

With "Comment/Uncomment-Binding" (STRG-/) and (STRG-\) its the same.

Best regards,

  Georg

Version: Eclipse 200311030802 GTK and Motif
Linux: Suse 9.0 KDE


*** This bug has been marked as a duplicate of 46203 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46857" />
    <CreationDate amount="2003-11-18 13:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>ClassCastException and ResourceException opening an existing workspace with I20031118</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using today's integration build, I get numerous exceptions when I open my
existing workspace.
I will attach my .log file.
Created attachment 6838
.log file
Did this problem go away once the command line arguments were adjusted?
I didn't get them again when I removed all the merges.
Must have been related to that because I have been unable to reproduce.</WithStack>
    <WithOutStack>Using today's integration build, I get numerous exceptions when I open my
existing workspace.
I will attach my .log file.
Created attachment 6838
.log file
Did this problem go away once the command line arguments were adjusted?
I didn't get them again when I removed all the merges.
Must have been related to that because I have been unable to reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46858" />
    <CreationDate amount="2003-11-18 13:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>FileLink needs to resolve an editorId</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>our FileLink implementation accepts a null value for the editorId. With the 
changes in IWorkbenchPage, null is no longer an acceptable value for the 
editorId when opening an editor.

if the FileLink is passed a null editorId we should look up the default editor 
for the editor input.
Without this fix, all of the current file linking fails with an 
IllegalArgumentException when the link is activated.
Fixed in FileLink.
Please verify DarinW.
Easiest way to test is that Build failure links for Ant work correctly.
I think there are more NPEs possible here. The "findEditor" call can also 
return null according to the spec. Thus we should check for null on the "desc" 
in "getEditorId()", and this method may return null. In the case that we cannot 
find an editor, an error dialog shoule be displayed to the user.
findEditor can return null but not for 
IEditorRegistry.SYSTEM_EXTERNAL_EDITOR_ID. This editor is guaranteed to always 
be present on all platforms.
All right then.
Verified.</WithStack>
    <WithOutStack>our FileLink implementation accepts a null value for the editorId. With the 
changes in IWorkbenchPage, null is no longer an acceptable value for the 
editorId when opening an editor.

if the FileLink is passed a null editorId we should look up the default editor 
for the editor input.
Without this fix, all of the current file linking fails with an 
IllegalArgumentException when the link is activated.
Fixed in FileLink.
Please verify DarinW.
Easiest way to test is that Build failure links for Ant work correctly.
I think there are more NPEs possible here. The "findEditor" call can also 
return null according to the spec. Thus we should check for null on the "desc" 
in "getEditorId()", and this method may return null. In the case that we cannot 
find an editor, an error dialog shoule be displayed to the user.
findEditor can return null but not for 
IEditorRegistry.SYSTEM_EXTERNAL_EDITOR_ID. This editor is guaranteed to always 
be present on all platforms.
All right then.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46859" />
    <CreationDate amount="2003-11-18 14:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Combo API doc/problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>v3030

The add(String,int) method should throw an InvalidRange error when int is &lt; 0 
as the API states and to be consistent with List.  The test case for the add 
method includes this particular scenario (the code is currently commented out).

The documentation for the setItem(String) and setItems(String[]) methods should 
indicate that NullArgument exception thrown.
fixed &gt; 1121, and uncommented the test case</WithStack>
    <WithOutStack>v3030

The add(String,int) method should throw an InvalidRange error when int is &lt; 0 
as the API states and to be consistent with List.  The test case for the add 
method includes this particular scenario (the code is currently commented out).

The documentation for the setItem(String) and setItems(String[]) methods should 
indicate that NullArgument exception thrown.
fixed &gt; 1121, and uncommented the test case</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46860" />
    <CreationDate amount="2003-11-18 14:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>[RCP] NPE restarting an existing workspace with I20031118 build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341074405">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)</Frame>
          <Frame depth="1">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="4">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="5">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341074405">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.openWelcomeEditors(IDEWorkbenchAdvisor.java:704)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postStartup(IDEWorkbenchAdvisor.java:260)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1362)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="4">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341074405">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)</Frame>
          <Frame depth="1">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="4">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="5">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341074405">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.openWelcomeEditors(IDEWorkbenchAdvisor.java:704)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postStartup(IDEWorkbenchAdvisor.java:260)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1362)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="4">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="singlecomment">
        <location start="7938" end="8006" />
        <code>//we have detected feature changes ... see if we need to reconcile</code>
      </source_code>
      <source_code type="assignment">
        <location start="8006" end="8050" />
        <code>boolean update = !cmdNoUpdate || cmdUpdate;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. The platform configuration info has no features in it.  It generates a fake</Line>
          <Line>one for the primary feature mentioned in the welcome.ini, but it has a null</Line>
          <Line>version id.</Line>
          <Line />
          <Line>2. In IDEWorkbenchPlugin.readFeatureInfos(), we skip any features that have a</Line>
          <Line>null version id or null plugin id, so our list of AboutInfos is empty and</Line>
          <Line>getPrimaryInfo() returns null.  IDEWorkbenchAdvisor.openWelcomeEditors() does</Line>
          <Line>not check for this.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using today's integration build, I get a NPE restarting an existing workspace.
The workspace can be restarted without a problem using I20031105 build.
java.lang.reflect.InvocationTargetException
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
Caused by: java.lang.NullPointerException
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.openWelcomeEditors(IDEWorkbenchAdvisor.java:704)
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postStartup(IDEWorkbenchAdvisor.java:260)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1362)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	... 8 more
Trying to open a new workspace leads the same issue.
!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 nov. 18, 2003 14:19:55.203
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.reflect.InvocationTargetException
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
Caused by: java.lang.NullPointerException
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.openWelcomeEditors(IDEWorkbenchAdvisor.java:704)
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postStartup(IDEWorkbenchAdvisor.java:260)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1362)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	... 8 more


My command line is:
D:\eclipse1118\eclipse\eclipse.exe -os win32 -ws win32 -arch x86 -vm
D:\jdks\jdk1.4.1_05\bin\java.exe  -noupdate -data D:\workspaces\test1118
-showlocation -debug -vmargs -Xmx312M
There seems to be two problems here.

1. The platform configuration info has no features in it.  It generates a fake 
one for the primary feature mentioned in the welcome.ini, but it has a null 
version id.

2. In IDEWorkbenchPlugin.readFeatureInfos(), we skip any features that have a 
null version id or null plugin id, so our list of AboutInfos is empty and 
getPrimaryInfo() returns null.  IDEWorkbenchAdvisor.openWelcomeEditors() does 
not check for this.

Dejan or Wassim, do you know what's going on with (1)?

I just tried I20031118 on a new workspace, and it comes up OK.
I saw this earlier on Tod's machine running N20031118, when running the target.

In Tod's setup, we were creating a new workspace.

Using I20031118, I am able to open my old workspace as well (although the 
Welcome page appears again due to the new preference check).

Nick, does anything look suspicious in my command line? I tried several times 
and it is always failing the same way.
The command above has '-noupdate'. This command should not be used because it 
disables the reconciler, so it cannot compute features. Why are you using -
noupdate in your context?
Here is the contents of my platform.cfg file in the .config directory once it
failed.

# Tue Nov 18 15:31:27 EST 2003
version=2.1

stamp=1546122953
stamp.features=733172825
stamp.plugins=2006229648

feature.default.id=org.eclipse.platform

feature.0.id=org.eclipse.platform
feature.0.primary=true
feature.0.application=org.eclipse.ui.ide.workbench

site.0.url=platform:/base/
site.0.stamp=1277119700
site.0.stamp.features=733172825
site.0.stamp.plugins=2006229648
site.0.updateable=true
site.0.policy=USER-EXCLUDE
eof=eof

We don't put state in the workspace any more, so old or new workspace should 
not matter. What matters is the '.config' directory in the install location 
(eclipse). It contains the state and it is initially created by full 
reconciliation. If you use '-noupdate', you are blocking the reconciler from 
running, and it cannot find out what features are installed.
The first time I got it I had -noupdate on the command line and this created the
platform.cfg file that I pasted before. Once the boggus platform.cfg file is
created, all subsequent lanches will fail with the NPE.
Removing -noupdate after deleting the .config directory fixed it.
If the tests are failing, it means that they are using this -noupdate option
somehow.
I didn't change my command line for months. So something changed lately related 
to this -noupdate option.
This option is internal (check the Eclipse Help - not officially listed in 
the 'Run Eclipse doc). It was used for rare cases where reconciliation was not 
needed, and for driving Eclipse by PDE directly. I also think that -noupdate 
was used by MacOS team until they got the real native launcher up and running 
(because now they can react to return code 23 that means that Eclipse needs to 
be restarted).

Generally, you should not run Eclipse with -noupdate from the command line. I 
think that if '-noupdate' is present but there is no .config, we will 
reconcile and create it, but if there is .config, we will not test if it is 
bogus/out of date. Otherwise, we would notice that the state in .config is out 
of whack with the reality (i.e. features in the file system) and reconciler 
would kick in.

Since M4 (I think) state is not in the workspace so old/new workspace issues 
do not apply any more. Every time you remove old and install a new driver, you 
wipe out the state and we create a fresh state again (as we should, because 
update config is now linked with the product, not with your data).
If -noupdate is present and there is no .config, it doesn't work. You will get 
the NPE.
Ack. I was wrong then - it simply turns the reconciler off at all times.

Bottom line: -noupdate was an internal arg used to solve transient issues with 
Eclipse startup in special scenarios. It is not a supported and documented 
argument, and it can lead to problems because it disables the normal startup 
handshake between Eclipse and Update Core. It should not be used to start 
Eclipse in normal scenarios.

As you figured out yourself, you can recover by removing the method from the 
command line and deleting .config so that the correct one can be recreated.
Added a null check to IDEWorkbenchAdvisor.openWelcomeEditors() and a couple of 
other places.

Note that many of the test suites in I20031118 failed due to this, so they must 
be passing -noupdate.  I've filed bug 46881 for this issue.


And by 'method' I meant 'argument' :-).
I get the same problem and I don't use the -noupdate flag.
What are your command line args?
If you delete the .config directory in your install, does it work (copy it 
first so you can paste it here if needed)?

I use launch with: ./eclipse -vm $JRE -debug -dev bin -data $TARGET_DIR -vmargs $VMARGS

Deleting the .config directory has no effect.
Do you have access to the directory where eclipse is installed? If we cannot 
write there, we will go to user home to create .config directory.
Yep, I have full access to the Eclipse install dir. The following is the platform.cfg file that's written:

# Tue Nov 18 14:55:43 PST 2003
version=2.1
 
stamp=-1065994517091
stamp.features=1357080369
stamp.plugins=-1066810350932
 
feature.default.id=org.eclipse.platform
 
feature.0.id=org.eclipse.platform
feature.0.primary=true
feature.0.application=org.eclipse.ui.ide.workbench
 
site.0.url=platform:/base/
site.0.stamp=1066848417323
site.0.stamp.features=1357080369
site.0.stamp.plugins=-1066810350932
site.0.updateable=true
site.0.policy=USER-EXCLUDE
eof=eof

Is there a problem with features in this e-build? Maybe the reconciler chokes 
on feature manifests?
Downloaded 1118 - looks good. Open 'Help&gt;Software Updates&gt;Manage 
Configuration...' - all the features show up correctly.
Dejan, what effect does -dev bin have on the reconciler?

Jared, do you get the problem when creating a new workspace as well, or just 
when opening a new workspace?
Does the problem still occur if you delete the .config dir and run without -
dev bin?


-dev bin is a class loading statement that allows plug-in classes to be in 
the 'bin' directory in addition to the listed libraries. Reconciliation 
happens before plug-in registry loads plug-in information, so I don't think it 
matters.

Note that Update team didn't touch Update code for a while (we played in the 
branch), so something happened in the last week that made startup sequence 
unhappy.
I concur with this. Something has been changed in the last week. Before I could 
start my workspaces using -noupdate. See also bug 46954. It might be related.
To clarify, the NPE is in UI code and was not getting hit before.  It is 
getting hit now due to a change in UI code.  This is fixed in I20031119.

However, I'm still trying to understand Jared's case.  I thought -dev bin had 
an effect on the reconciler, e.g. giving you a free -noupdate.
I seem to recall being told that if I used -dev bin I also had to specify -
update.

Bing - that's it. Using '-dev' gives you free '-noupdate' because the 
assumption is that -dev' is only used for selfhosting. Once you do that, your 
feature information is useless. 
If you must use -dev, add -update to your command line. According to 
PlatformConfiguration.java:

//we have detected feature changes ... see if we need to reconcile
	boolean update = !cmdNoUpdate || cmdUpdate;

e.g. in case that both -noupdate and -update are found, -update is assumed.</WithStack>
    <WithOutStack>Using today's integration build, I get a NPE restarting an existing workspace.
The workspace can be restarted without a problem using I20031105 build.
	... 8 more
Trying to open a new workspace leads the same issue.
!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 nov. 18, 2003 14:19:55.203
!MESSAGE Exception launching the Eclipse Platform:
!STACK


	... 8 more


My command line is:
D:\eclipse1118\eclipse\eclipse.exe -os win32 -ws win32 -arch x86 -vm
D:\jdks\jdk1.4.1_05\bin\java.exe  -noupdate -data D:\workspaces\test1118
-showlocation -debug -vmargs -Xmx312M
There seems to be two problems here.

1. The platform configuration info has no features in it.  It generates a fake 
one for the primary feature mentioned in the welcome.ini, but it has a null 
version id.

2. In IDEWorkbenchPlugin.readFeatureInfos(), we skip any features that have a 
null version id or null plugin id, so our list of AboutInfos is empty and 
getPrimaryInfo() returns null.  IDEWorkbenchAdvisor.openWelcomeEditors() does 
not check for this.

Dejan or Wassim, do you know what's going on with (1)?

I just tried I20031118 on a new workspace, and it comes up OK.
I saw this earlier on Tod's machine running N20031118, when running the target.

In Tod's setup, we were creating a new workspace.

Using I20031118, I am able to open my old workspace as well (although the 
Welcome page appears again due to the new preference check).

Nick, does anything look suspicious in my command line? I tried several times 
and it is always failing the same way.
The command above has '-noupdate'. This command should not be used because it 
disables the reconciler, so it cannot compute features. Why are you using -
noupdate in your context?
Here is the contents of my platform.cfg file in the .config directory once it
failed.

# Tue Nov 18 15:31:27 EST 2003
version=2.1

stamp=1546122953
stamp.features=733172825
stamp.plugins=2006229648

feature.default.id=org.eclipse.platform

feature.0.id=org.eclipse.platform
feature.0.primary=true
feature.0.application=org.eclipse.ui.ide.workbench

site.0.url=platform:/base/
site.0.stamp=1277119700
site.0.stamp.features=733172825
site.0.stamp.plugins=2006229648
site.0.updateable=true
site.0.policy=USER-EXCLUDE
eof=eof

We don't put state in the workspace any more, so old or new workspace should 
not matter. What matters is the '.config' directory in the install location 
(eclipse). It contains the state and it is initially created by full 
reconciliation. If you use '-noupdate', you are blocking the reconciler from 
running, and it cannot find out what features are installed.
The first time I got it I had -noupdate on the command line and this created the
platform.cfg file that I pasted before. Once the boggus platform.cfg file is
created, all subsequent lanches will fail with the NPE.
Removing -noupdate after deleting the .config directory fixed it.
If the tests are failing, it means that they are using this -noupdate option
somehow.
I didn't change my command line for months. So something changed lately related 
to this -noupdate option.
This option is internal (check the Eclipse Help - not officially listed in 
the 'Run Eclipse doc). It was used for rare cases where reconciliation was not 
needed, and for driving Eclipse by PDE directly. I also think that -noupdate 
was used by MacOS team until they got the real native launcher up and running 
(because now they can react to return code 23 that means that Eclipse needs to 
be restarted).

Generally, you should not run Eclipse with -noupdate from the command line. I 
think that if '-noupdate' is present but there is no .config, we will 
reconcile and create it, but if there is .config, we will not test if it is 
bogus/out of date. Otherwise, we would notice that the state in .config is out 
of whack with the reality (i.e. features in the file system) and reconciler 
would kick in.

Since M4 (I think) state is not in the workspace so old/new workspace issues 
do not apply any more. Every time you remove old and install a new driver, you 
wipe out the state and we create a fresh state again (as we should, because 
update config is now linked with the product, not with your data).
If -noupdate is present and there is no .config, it doesn't work. You will get 
the NPE.
Ack. I was wrong then - it simply turns the reconciler off at all times.

Bottom line: -noupdate was an internal arg used to solve transient issues with 
Eclipse startup in special scenarios. It is not a supported and documented 
argument, and it can lead to problems because it disables the normal startup 
handshake between Eclipse and Update Core. It should not be used to start 
Eclipse in normal scenarios.

As you figured out yourself, you can recover by removing the method from the 
command line and deleting .config so that the correct one can be recreated.
Added a null check to IDEWorkbenchAdvisor.openWelcomeEditors() and a couple of 
other places.

Note that many of the test suites in I20031118 failed due to this, so they must 
be passing -noupdate.  I've filed bug 46881 for this issue.


And by 'method' I meant 'argument' :-).
I get the same problem and I don't use the -noupdate flag.
What are your command line args?
If you delete the .config directory in your install, does it work (copy it 
first so you can paste it here if needed)?

I use launch with: ./eclipse -vm $JRE -debug -dev bin -data $TARGET_DIR -vmargs $VMARGS

Deleting the .config directory has no effect.
Do you have access to the directory where eclipse is installed? If we cannot 
write there, we will go to user home to create .config directory.
Yep, I have full access to the Eclipse install dir. The following is the platform.cfg file that's written:

# Tue Nov 18 14:55:43 PST 2003
version=2.1
 
stamp=-1065994517091
stamp.features=1357080369
stamp.plugins=-1066810350932
 
feature.default.id=org.eclipse.platform
 
feature.0.id=org.eclipse.platform
feature.0.primary=true
feature.0.application=org.eclipse.ui.ide.workbench
 
site.0.url=platform:/base/
site.0.stamp=1066848417323
site.0.stamp.features=1357080369
site.0.stamp.plugins=-1066810350932
site.0.updateable=true
site.0.policy=USER-EXCLUDE
eof=eof

Is there a problem with features in this e-build? Maybe the reconciler chokes 
on feature manifests?
Downloaded 1118 - looks good. Open 'Help&gt;Software Updates&gt;Manage 
Configuration...' - all the features show up correctly.
Dejan, what effect does -dev bin have on the reconciler?

Jared, do you get the problem when creating a new workspace as well, or just 
when opening a new workspace?
Does the problem still occur if you delete the .config dir and run without -
dev bin?


-dev bin is a class loading statement that allows plug-in classes to be in 
the 'bin' directory in addition to the listed libraries. Reconciliation 
happens before plug-in registry loads plug-in information, so I don't think it 
matters.

Note that Update team didn't touch Update code for a while (we played in the 
branch), so something happened in the last week that made startup sequence 
unhappy.
I concur with this. Something has been changed in the last week. Before I could 
start my workspaces using -noupdate. See also bug 46954. It might be related.
To clarify, the NPE is in UI code and was not getting hit before.  It is 
getting hit now due to a change in UI code.  This is fixed in I20031119.

However, I'm still trying to understand Jared's case.  I thought -dev bin had 
an effect on the reconciler, e.g. giving you a free -noupdate.
I seem to recall being told that if I used -dev bin I also had to specify -
update.

Bing - that's it. Using '-dev' gives you free '-noupdate' because the 
assumption is that -dev' is only used for selfhosting. Once you do that, your 
feature information is useless. 
If you must use -dev, add -update to your command line. According to 
PlatformConfiguration.java:

//we have detected feature changes ... see if we need to reconcile
	boolean update = !cmdNoUpdate || cmdUpdate;

e.g. in case that both -noupdate and -update are found, -update is assumed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46861" />
    <CreationDate amount="2003-11-18 14:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Use a special image for arguments in the Variables view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Fixed in 1.2.1 and HEAD.</WithStack>
    <WithOutStack>Fixed in 1.2.1 and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46862" />
    <CreationDate amount="2003-11-18 14:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[api] exposing plug-in ids in a homogenous way</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We use two different styles to access the id of our text plug-ins. We should 
use the same style everywhere.
I suggest to use a constant since we run into trouble at those places where we
directly used the string.

Moving to M7.
fixed &gt; 20040116

replaced EditorsPlugin.getPluginId() with EditorsPluing.PLUGIN_ID
moved plugin id access to API class org.eclipse.editors.text.EditorsUI. The
class name might still change if we can think of something better.
Please reopen if you think that we should name the API class differently.</WithStack>
    <WithOutStack>We use two different styles to access the id of our text plug-ins. We should 
use the same style everywhere.
I suggest to use a constant since we run into trouble at those places where we
directly used the string.

Moving to M7.
fixed &gt; 20040116

replaced EditorsPlugin.getPluginId() with EditorsPluing.PLUGIN_ID
moved plugin id access to API class org.eclipse.editors.text.EditorsUI. The
class name might still change if we can think of something better.
Please reopen if you think that we should name the API class differently.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46863" />
    <CreationDate amount="2003-11-18 14:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] Window menu missing separator between Preferences and list of windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Window &gt; New Window</Line>
          <Line>- the Window menu correctly shows the list of windows when there is more than</Line>
          <Line>one, but it's missing the separator between Preferences and the list of windows</Line>
          <Line>- this is a regression from M4, most likely due to the RCP changes</Line>
          <Line>Fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build N20031117

- Window &gt; New Window
- the Window menu correctly shows the list of windows when there is more than 
one, but it's missing the separator between Preferences and the list of windows
- this is a regression from M4, most likely due to the RCP changes
Fixed.</WithStack>
    <WithOutStack>build N20031117

- Window &gt; New Window
- the Window menu correctly shows the list of windows when there is more than 
one, but it's missing the separator between Preferences and the list of windows
- this is a regression from M4, most likely due to the RCP changes
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46864" />
    <CreationDate amount="2003-11-18 14:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] cannot instantiate factory with existing workspace and latest build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using I20031118, I get the following errors when trying to open an existing 
workspace.  Close workspace and reopen it and no longer get the errors.


!SESSION Nov 18, 2003 14:04:29.271 --------------------------------------------
-
java.version=1.4.2-rc
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Command-line arguments: -os linux -ws gtk -arch x86 -showlocation -
data /bluebird/teamswt/torres/linux/gtk/workspacelaf -install 
file:/bluebird/teamswt/torres/linux/gtk/eclipse/
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:04:29.272
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:04:29.290
!MESSAGE Unable to restore page - cannot instantiate input factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.730
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.733
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.735
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.737
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.739
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.742
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
Several ids were changed from org.eclipse.ui.internal.* to 
org.eclipse.ui.internal.ide.* in the RCP refactoring, which caused this problem 
in I20031113.

In the current build, they've been changed back, but this will cause the 
problem again for those who saved their workspace with I20031113.  

Opening a pre-RCP workspace with the current build will work, though.

Sorry for the inconvenience.</WithStack>
    <WithOutStack>Using I20031118, I get the following errors when trying to open an existing 
workspace.  Close workspace and reopen it and no longer get the errors.


!SESSION Nov 18, 2003 14:04:29.271 --------------------------------------------
-
java.version=1.4.2-rc
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Command-line arguments: -os linux -ws gtk -arch x86 -showlocation -
data /bluebird/teamswt/torres/linux/gtk/workspacelaf -install 
file:/bluebird/teamswt/torres/linux/gtk/eclipse/
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:04:29.272
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:04:29.290
!MESSAGE Unable to restore page - cannot instantiate input factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.730
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.733
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.735
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.737
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.739
!MESSAGE Unable to find element factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 14:07:51.742
!MESSAGE Unable to restore working set item - cannot instantiate factory: 
org.eclipse.ui.internal.ide.model.ResourceFactory
Several ids were changed from org.eclipse.ui.internal.* to 
org.eclipse.ui.internal.ide.* in the RCP refactoring, which caused this problem 
in I20031113.

In the current build, they've been changed back, but this will cause the 
problem again for those who saved their workspace with I20031113.  

Opening a pre-RCP workspace with the current build will work, though.

Sorry for the inconvenience.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46865" />
    <CreationDate amount="2003-11-18 14:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Existing" projects filter ignores closed projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- start up with workspace that includes closed projects (which are part of SDK)</Line>
          <Line>- Import binary projects</Line>
          <Line>- choose "All Existing Projects"</Line>
          <Line>- choose "Swap"</Line>
          <Line>- hit Finish</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build i1118, winxp, sunjdk 1.4.2

- start up with workspace that includes closed projects (which are part of SDK)
- Import binary projects 
- choose "All Existing Projects"
- choose "Swap"
- hit Finish

Note that you will be prompted to overwrite your projects which were closed.
They were not added to the list when you hit "All Existing" and therefore were
added when you swapped the list.
The tricky thing here is that closed projects mean nothing to PDE.  They are 
not plug-ins, and they do not appear in the Plugins view, not used for 
launching, etc.

So to reduce the confusion, we have tochange the wording in the wizard 
from "Existing Projects" to "Existing Plug-ins".</WithStack>
    <WithOutStack>build i1118, winxp, sunjdk 1.4.2

- start up with workspace that includes closed projects (which are part of SDK)
- Import binary projects 
- choose "All Existing Projects"
- choose "Swap"
- hit Finish

Note that you will be prompted to overwrite your projects which were closed.
They were not added to the list when you hit "All Existing" and therefore were
added when you swapped the list.
The tricky thing here is that closed projects mean nothing to PDE.  They are 
not plug-ins, and they do not appear in the Plugins view, not used for 
launching, etc.

So to reduce the confusion, we have tochange the wording in the wizard 
from "Existing Projects" to "Existing Plug-ins".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46866" />
    <CreationDate amount="2003-11-18 14:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>help books are missing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- a messageless error dialog appears</Line>
          <Line>- log contains</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20031118 #2

- Help &gt; Help Contents

- a messageless error dialog appears
- log contains

!MESSAGE 
!ENTRY org.eclipse.help.ui 4 0 Nov 18, 2003 14:17:55.371
I was able to reproduce when reusing old workspace.
As a workaround, delete 
workspace\.metadata\.plugins\org.eclipse.help.base\pref_store.ini
Improved error reporting, and launching help problem.</WithStack>
    <WithOutStack>Build I20031118 #2

- Help &gt; Help Contents

- a messageless error dialog appears
- log contains

!MESSAGE 
!ENTRY org.eclipse.help.ui 4 0 Nov 18, 2003 14:17:55.371
I was able to reproduce when reusing old workspace.
As a workaround, delete 
workspace\.metadata\.plugins\org.eclipse.help.base\pref_store.ini
Improved error reporting, and launching help problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46867" />
    <CreationDate amount="2003-11-18 14:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[preferences] Text cursor is hard to see at high resolutions.  Cursor color, width configurability would help.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Please make cursor width and color configurable.
UI?
There must be some 3rd party OS-specific tools to do this.
I know Windows has a setting for large cursors for those who are vision-
impaired.

I'm sorry, the UI is Linux-GTK.  I mean the text cursor, not the mouse cursor. 
I haven't seen a GTK setting for cursor, but that doesn't mean there is one.  =)

I'm running at 1280x960 with custom colors and fonts.  The text cursor appears
to be a single pixel in width.  One of my favorite editors scite (based upon
scintilla) has a configurable cursor that I've come to appreciate.


The default caret is a thicker version.</WithStack>
    <WithOutStack>Please make cursor width and color configurable.
UI?
There must be some 3rd party OS-specific tools to do this.
I know Windows has a setting for large cursors for those who are vision-
impaired.

I'm sorry, the UI is Linux-GTK.  I mean the text cursor, not the mouse cursor. 
I haven't seen a GTK setting for cursor, but that doesn't mean there is one.  =)

I'm running at 1280x960 with custom colors and fonts.  The text cursor appears
to be a single pixel in width.  One of my favorite editors scite (based upon
scintilla) has a configurable cursor that I've come to appreciate.


The default caret is a thicker version.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46868" />
    <CreationDate amount="2003-11-18 14:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Changing text color via a MessageStream doesn't update colors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>via e-mail:

"Changing text color via a MessageStream doesn't update the existing colors. 
However, when another line is appended to the document, all text colors are 
changed."
Fixed. Added a "manual" test to the debug test suite. In a target workspace, 
you can add the "Message Console Test" action set to your window, and then 
select the "Test Message Console" action from the "Run" menu (last action in 
the menu). This will open a console and write test messages, and prompt you 
for a color change.
please verify, Darin (S)
When I select the Message Console Test action set as I am customizing my 
perspective I get the following in the log:

Error Dec 12, 2003 09:22:03.921 Invalid Menu Extension (Path is invalid): 
org.eclipse.jdt.debug.tests.testMessageConsoleAction

It would appear that:
  menubarPath="org.eclipse.ui.run/additions"
is not correct? Is there an additions group in a top level menu?

I can get the action set to work correctly by modifying the plugin.xml but 
then when I invoke the action all kinds of errors occur. It would appear that 
you did not release 
org.eclipse.jdt.debug.tests.console.TestMessageConsoleActionDelegate?

For some reason, the new source folder was not on the classpath. I have updated 
the buildpath &amp; released. This should add the delegate class.

You should add the action set when in the Java perspective (to ensure the run 
menu is already present).
Verified.
I tweaked the plugin.xml for the actionset and fixed a spelling mistake in the 
NULL_VARIABLE classpath variable initializer.</WithStack>
    <WithOutStack>via e-mail:

"Changing text color via a MessageStream doesn't update the existing colors. 
However, when another line is appended to the document, all text colors are 
changed."
Fixed. Added a "manual" test to the debug test suite. In a target workspace, 
you can add the "Message Console Test" action set to your window, and then 
select the "Test Message Console" action from the "Run" menu (last action in 
the menu). This will open a console and write test messages, and prompt you 
for a color change.
please verify, Darin (S)
When I select the Message Console Test action set as I am customizing my 
perspective I get the following in the log:

Error Dec 12, 2003 09:22:03.921 Invalid Menu Extension (Path is invalid): 
org.eclipse.jdt.debug.tests.testMessageConsoleAction

It would appear that:
  menubarPath="org.eclipse.ui.run/additions"
is not correct? Is there an additions group in a top level menu?

I can get the action set to work correctly by modifying the plugin.xml but 
then when I invoke the action all kinds of errors occur. It would appear that 
you did not release 
org.eclipse.jdt.debug.tests.console.TestMessageConsoleActionDelegate?

For some reason, the new source folder was not on the classpath. I have updated 
the buildpath &amp; released. This should add the delegate class.

You should add the action set when in the Java perspective (to ensure the run 
menu is already present).
Verified.
I tweaked the plugin.xml for the actionset and fixed a spelling mistake in the 
NULL_VARIABLE classpath variable initializer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46869" />
    <CreationDate amount="2003-11-18 14:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Message console does not buffer output</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The message console does not buffer output - it writes output to the 
document/viewer as it is received. This is not performant for large output 
scenarios and can flood the UI async queue. We should buffer and process output 
in a job (similar to the process console used by the debugger).
Deferred to M7
Created attachment 7414
patch
Applied patch &amp; verified. Console output is now queued and processed in a 
background thread.
Verified.</WithStack>
    <WithOutStack>The message console does not buffer output - it writes output to the 
document/viewer as it is received. This is not performant for large output 
scenarios and can flood the UI async queue. We should buffer and process output 
in a job (similar to the process console used by the debugger).
Deferred to M7
Created attachment 7414
patch
Applied patch &amp; verified. Console output is now queued and processed in a 
background thread.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46870" />
    <CreationDate amount="2003-11-18 14:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE when hovering over expression that is not in the current context</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Fixed in 1.2.1 and HEAD.
*** Bug 47524 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Fixed in 1.2.1 and HEAD.
*** Bug 47524 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46871" />
    <CreationDate amount="2003-11-18 14:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Console buffer size limit</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The MessageConsole needs a maximum buffer size (similar to the debugger process 
console). Otherwise, output grows unbounded.
Deferred to M7
Created attachment 7415
patch for Bugs 46871 and 46869
Applied patch. See MessageConsole.setWaterMarks(low, high). This sets the max 
buffer size of the console, and the way in which the console will be trimmed 
when the max size is exceeded.

Added (manual) TestBufferredOutput test to debug test suite.
Verified.
NOTE: currently we do not expose an UI for setting the buffer size. It 
defaults to low/high 80,000/100,000.

Option is for clients to expose in their app as a preference,  or (perhaps 
better), put a drop down action in the view to configure the size. I will 
enter a feature request on our side to allow UI configuration.</WithStack>
    <WithOutStack>The MessageConsole needs a maximum buffer size (similar to the debugger process 
console). Otherwise, output grows unbounded.
Deferred to M7
Created attachment 7415
patch for Bugs 46871 and 46869
Applied patch. See MessageConsole.setWaterMarks(low, high). This sets the max 
buffer size of the console, and the way in which the console will be trimmed 
when the max size is exceeded.

Added (manual) TestBufferredOutput test to debug test suite.
Verified.
NOTE: currently we do not expose an UI for setting the buffer size. It 
defaults to low/high 80,000/100,000.

Option is for clients to expose in their app as a preference,  or (perhaps 
better), put a drop down action in the view to configure the size. I will 
enter a feature request on our side to allow UI configuration.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46872" />
    <CreationDate amount="2003-11-18 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Package not displayed after creation [code manipulation] [render]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I select a package com.myco.app, which includes other types and packages,
and  create a new package with a right-click/New/Package called
com.myco.app.foo.bar, where neither foo or bar already exists, the new packages
are not displayed in the Packages view.

Workaround: select another source path entry, then select back the source path
entry which includes the package.

Version 3.0.m4.
Are you sure that your are not filtering empty packages? Check the filter 
settings of your package explorer.
Add CC'.
Well, this is a bit confusing. Here are my settings:

Check Off: empty packages.
Check On: empty parent packages.

What is confusing is that the empty packages appeared after I selected away and
back to the proper Project view path entry. Certainly the behavior should be
consistent?
Filtering is controlled by JDT/UI.

Moving to JDT/UI for comments.
Gary,

I can't reproduce this using the build input for tomorrows integration build. 
Do you have anything in the log ? Any special steps. I checked the filter 
settings and I have the same filter set as you do. 
Can't reproduce using build I20031216-1200</WithStack>
    <WithOutStack>When I select a package com.myco.app, which includes other types and packages,
and  create a new package with a right-click/New/Package called
com.myco.app.foo.bar, where neither foo or bar already exists, the new packages
are not displayed in the Packages view.

Workaround: select another source path entry, then select back the source path
entry which includes the package.

Version 3.0.m4.
Are you sure that your are not filtering empty packages? Check the filter 
settings of your package explorer.
Add CC'.
Well, this is a bit confusing. Here are my settings:

Check Off: empty packages.
Check On: empty parent packages.

What is confusing is that the empty packages appeared after I selected away and
back to the proper Project view path entry. Certainly the behavior should be
consistent?
Filtering is controlled by JDT/UI.

Moving to JDT/UI for comments.
Gary,

I can't reproduce this using the build input for tomorrows integration build. 
Do you have anything in the log ? Any special steps. I checked the filter 
settings and I have the same filter set as you do. 
Can't reproduce using build I20031216-1200</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46873" />
    <CreationDate amount="2003-11-18 15:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cvs Commit fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074414">
        <Exception>org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>The parent folder of managed 
file /XPWar-Flash/excel/spanish-problems.csv does not have sync info associated 
with it.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor(CVSWorkspaceRoot.java:475)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor(CVSWorkspaceRoot.java:456)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource(BaseSynchronizer.java:85)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource(CVSSyncTreeSubscriber.java:155)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo(CVSSyncTreeSubscriber.java:174)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.collect(SubscriberEventHandler.java:149)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:277)</Frame>
          <Frame depth="7">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:206)</Frame>
          <Frame depth="8">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:87)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. was the entire project already committed except for this one file?</Line>
          <Line>2. where there other outgoing additions that got committed?</Line>
          <Line>3. where you able to commit the file via the Team &gt; Commit action?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I added a file to the project, refreshed, synchronized and tried committing at 
the top level (the project name). CVS Console shows:

***
cvs -r ci -m "integrated spanish solutions" "/XPWar-Flash/excel/spanish-
problems.csv"
  cvs server: Examining .
ok (took 0:00.150)
Error: XPWar-Flash: cvs server: Examining .
***

The eclipse log shows:
!STACK 1
org.eclipse.team.internal.ccvs.core.CVSException: The parent folder of managed 
file /XPWar-Flash/excel/spanish-problems.csv does not have sync info associated 
with it.
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResource
For(CVSWorkspaceRoot.java:475)
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResource
For(CVSWorkspaceRoot.java:456)
	at 
org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource
(BaseSynchronizer.java:85)
	at 
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource
(CVSSyncTreeSubscriber.java:155)
	at org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo
(CVSSyncTreeSubscriber.java:174)
	at org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.collect
(SubscriberEventHandler.java:149)
	at 
org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.processEvent
(SubscriberEventHandler.java:277)
	at 
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents
(BackgroundEventHandler.java:206)
	at org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run
(BackgroundEventHandler.java:87)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.team.cvs.core 4 -6 Nov 18, 2003 11:38:39.09
!MESSAGE The parent folder of managed file /XPWar-Flash/excel/spanish-
problems.csv does not have sync info associated with it.


Regards,
Somik
What build? Can you give more details about the state of the project:
1. was the entire project already committed except for this one file?
2. where there other outgoing additions that got committed?
3. where you able to commit the file via the Team &gt; Commit action?

More details are needed.
&gt;What build? 
M4

&gt;Can you give more details about the state of the project:
&gt;1. was the entire project already committed except for this one file?

Yes.

&gt;2. where there other outgoing additions that got committed?

Yes. The other files were in the project root directory.

&gt;3. where you able to commit the file via the Team &gt; Commit action?
I tried it, but the synchronize view still shows the file I am trying to commit.

Regards,
Somik
Note: I did a Synchronize with Repository, and that updated the synch view 
correctly (the file was no longer there). However, when I was committing each 
time from the synch view, the file was going through, but the view wasn't 
getting updated.
We are unable to duplicate this failure. Was the excel directory new?
I have not been able to reproduce this in the latest builds. If you see this 
problem again, please reopen with the complete contents of the log.</WithStack>
    <WithOutStack>I added a file to the project, refreshed, synchronized and tried committing at 
the top level (the project name). CVS Console shows:

***
cvs -r ci -m "integrated spanish solutions" "/XPWar-Flash/excel/spanish-
problems.csv"
  cvs server: Examining .
ok (took 0:00.150)
Error: XPWar-Flash: cvs server: Examining .
***

The eclipse log shows:
!STACK 1

!ENTRY org.eclipse.team.cvs.core 4 -6 Nov 18, 2003 11:38:39.09
!MESSAGE The parent folder of managed file /XPWar-Flash/excel/spanish-
problems.csv does not have sync info associated with it.


Regards,
Somik
What build? Can you give more details about the state of the project:
1. was the entire project already committed except for this one file?
2. where there other outgoing additions that got committed?
3. where you able to commit the file via the Team &gt; Commit action?

More details are needed.
&gt;What build? 
M4

&gt;Can you give more details about the state of the project:
&gt;1. was the entire project already committed except for this one file?

Yes.

&gt;2. where there other outgoing additions that got committed?

Yes. The other files were in the project root directory.

&gt;3. where you able to commit the file via the Team &gt; Commit action?
I tried it, but the synchronize view still shows the file I am trying to commit.

Regards,
Somik
Note: I did a Synchronize with Repository, and that updated the synch view 
correctly (the file was no longer there). However, when I was committing each 
time from the synch view, the file was going through, but the view wasn't 
getting updated.
We are unable to duplicate this failure. Was the excel directory new?
I have not been able to reproduce this in the latest builds. If you see this 
problem again, please reopen with the complete contents of the log.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46874" />
    <CreationDate amount="2003-11-18 15:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RCP] NPE opening external editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074416">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:448)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:421)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:1974)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:1926)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1913)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1908)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1896)</Frame>
          <Frame depth="8">org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:258)</Frame>
          <Frame depth="9">org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:251)</Frame>
          <Frame depth="10">org.eclipse.ui.actions.OpenWithMenu$2.handleEvent(OpenWithMenu.java:166)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="18">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="20">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="21">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="24">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="25">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- using existing workspace with a file association *.html -&gt; MS FrontPage</Line>
          <Line>- open an html file</Line>
          <Line>- no editor opens</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- create a file association with an external editor</Line>
          <Line>- open a file using external editor</Line>
          <Line>- shut down</Line>
          <Line>- restart</Line>
          <Line>- open the file using external editor</Line>
          <Line>- NPE</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I200311181147

- using existing workspace with a file association *.html -&gt; MS FrontPage
- open an html file
- no editor opens

- log contains

!MESSAGE java.lang.IllegalStateException
!STACK 0
java.lang.IllegalStateException
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor
(EditorManager.java:448)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:421)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:1974)
	at org.eclipse.ui.internal.WorkbenchPage.access$6
(WorkbenchPage.java:1926)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1913)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1908)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1896)
	at org.eclipse.ui.actions.OpenWithMenu.openEditor
(OpenWithMenu.java:258)
	at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:251)
	at org.eclipse.ui.actions.OpenWithMenu$2.handleEvent
(OpenWithMenu.java:166)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
Could not reproduce trying to read an M4 workspace with an external editor 
association.

Could check for invalid editor descriptors earlier in the editor registry 
restoration code.

It's happening with current workspace:
- create a file association with an external editor
- open a file using external editor
- shut down
- restart
- open the file using external editor
- NPE

I should have said in comment #2 that this is happening with the I200311181147 
build that I'm using. It is not happening when I launch a runtime workbench 
from from workspace, however.

Looking at the workbench pref_store.ini I see 2 descriptors for FrontPage (the 
external editor that's been giving me the problem), the second of which is 
bogus (openMode = 0). I changed the openMode to 4 on the second descriptor and 
restarted - now works fine. So this is the culprit.

&lt;descriptor
   label\="Microsoft FrontPage HTML Document"
   openMode\="4"
   internal\="false"
   open_in_place\="false"
   program_name\="Microsoft FrontPage HTML Document"
/&gt;\r\n
&lt;descriptor
   label\="Microsoft FrontPage HTML Document"
   openMode\="0"
   internal\="false"
   open_in_place\="false"
   program_name\="Microsoft FrontPage HTML Document"
/&gt;\r\n

&lt;info name\="*" extension\="html"&gt;\r\n
   &lt;editor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
   &lt;deletedEditor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
   &lt;deletedEditor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
&lt;/info&gt;\r\n


Workaround is to 
delete .metadata\.plugins\org.eclipse.ui.workbench\pref_store.ini

Restore should skip any invalid descriptors.

Fixed by adding a check to EditorDescriptor.loadValues.
Also changed the place where IllegalStateException was being thrown above to
throw a PartInitException instead.</WithStack>
    <WithOutStack>Build I200311181147

- using existing workspace with a file association *.html -&gt; MS FrontPage
- open an html file
- no editor opens

- log contains

!MESSAGE java.lang.IllegalStateException
!STACK 0

Could not reproduce trying to read an M4 workspace with an external editor 
association.

Could check for invalid editor descriptors earlier in the editor registry 
restoration code.

It's happening with current workspace:
- create a file association with an external editor
- open a file using external editor
- shut down
- restart
- open the file using external editor
- NPE

I should have said in comment #2 that this is happening with the I200311181147 
build that I'm using. It is not happening when I launch a runtime workbench 
from from workspace, however.

Looking at the workbench pref_store.ini I see 2 descriptors for FrontPage (the 
external editor that's been giving me the problem), the second of which is 
bogus (openMode = 0). I changed the openMode to 4 on the second descriptor and 
restarted - now works fine. So this is the culprit.

&lt;descriptor
   label\="Microsoft FrontPage HTML Document"
   openMode\="4"
   internal\="false"
   open_in_place\="false"
   program_name\="Microsoft FrontPage HTML Document"
/&gt;\r\n
&lt;descriptor
   label\="Microsoft FrontPage HTML Document"
   openMode\="0"
   internal\="false"
   open_in_place\="false"
   program_name\="Microsoft FrontPage HTML Document"
/&gt;\r\n

&lt;info name\="*" extension\="html"&gt;\r\n
   &lt;editor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
   &lt;deletedEditor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
   &lt;deletedEditor id\="Microsoft FrontPage HTML Document"/&gt;\r\n
&lt;/info&gt;\r\n


Workaround is to 
delete .metadata\.plugins\org.eclipse.ui.workbench\pref_store.ini

Restore should skip any invalid descriptors.

Fixed by adding a check to EditorDescriptor.loadValues.
Also changed the place where IllegalStateException was being thrown above to
throw a PartInitException instead.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46875" />
    <CreationDate amount="2003-11-18 15:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[typing] Tabs are messed up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>e.g.</Line>
          <Line>String twoLines =</Line>
          <Line>"System Contains Many Defects,Systemet innehåller många</Line>
          <Line>fel\n"+"Stories Are Too Complicated,Stories är för komplicerade";</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I type code that has string literals in it, and press enter to move the 
string literal to the next line, the tab logic seems strange.

e.g. 
		String twoLines = 
			"System Contains Many Defects,Systemet innehåller många 
fel\n"+"Stories Are Too Complicated,Stories är för komplicerade";

Move the cursor after + and press enter.
It somehow moves the new line to column 0, while I'd expect it to align with 
the first line. If you try this with a single string, the bug will still be 
seen.
 
Interestingly, when I am within a method's parantheses, the behavior is 
different.

e.g. 
   assertEquals(
       "converted data",
       "Systemet+innehåller+många+fel|Stories+är+för+komplicerade",convertedData
.toString()
   );

Note, the two lines within have a single tab each. Now position the cursor on 
convertedData and press enter - while I'd expect it to line up with the 
previous line (two tabs), the IDE adds three tabs.

Now here's the one which really annoys me:

   assertEquals(

There is one tab before assertEquals.
Press enter after the paranthesis. Three tabs are inexplicably put in. I would 
expect only two.

I am assuming these are bugs as previous releases had the right behavior.
 
Regards,
Somik
Tom, I guess this problem will be gone when we use the (new) formatter
(preferences) to do the auto-indenting.

@ comment 1: not sure whether the formatting will ever be done by the new
formatter since it would possibly mess up the line breaks.

The first issue mentioned is a dup of bug 46518 (no indentation after operators).

The other issues (wrong parameter indentation a double indentation in parameter
lists) are open and should be fixed, if possible for M5.
fixed &gt; 20031124</WithStack>
    <WithOutStack>When I type code that has string literals in it, and press enter to move the 
string literal to the next line, the tab logic seems strange.

e.g. 
		String twoLines = 
			"System Contains Many Defects,Systemet innehåller många 
fel\n"+"Stories Are Too Complicated,Stories är för komplicerade";

Move the cursor after + and press enter.
It somehow moves the new line to column 0, while I'd expect it to align with 
the first line. If you try this with a single string, the bug will still be 
seen.
 
Interestingly, when I am within a method's parantheses, the behavior is 
different.

e.g. 
   assertEquals(
       "converted data",
       "Systemet+innehåller+många+fel|Stories+är+för+komplicerade",convertedData
.toString()
   );

Note, the two lines within have a single tab each. Now position the cursor on 
convertedData and press enter - while I'd expect it to line up with the 
previous line (two tabs), the IDE adds three tabs.

Now here's the one which really annoys me:

   assertEquals(

There is one tab before assertEquals.
Press enter after the paranthesis. Three tabs are inexplicably put in. I would 
expect only two.

I am assuming these are bugs as previous releases had the right behavior.
 
Regards,
Somik
Tom, I guess this problem will be gone when we use the (new) formatter
(preferences) to do the auto-indenting.

@ comment 1: not sure whether the formatting will ever be done by the new
formatter since it would possibly mess up the line breaks.

The first issue mentioned is a dup of bug 46518 (no indentation after operators).

The other issues (wrong parameter indentation a double indentation in parameter
lists) are open and should be fixed, if possible for M5.
fixed &gt; 20031124</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46876" />
    <CreationDate amount="2003-11-18 15:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[MPE] GotoMarkerAction after file search does not activate multi-page editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="991" end="1026" />
        <code>page.openEditor(marker, false);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1033" end="1067" />
        <code>page.openEditor(marker, true);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1433" end="1833" />
        <code>private void showWithoutReuse(IMarker marker) {
	IWorkbenchPage page= SearchPlugin.getActivePage();
	if (page == null)
		return;

	try {
		page.openEditor(marker, false);
	} catch (PartInitException ex) {
		ExceptionHandler.handle(ex, SearchMessages.getString
("Search.Error.openEditor.title"), SearchMessages.getString
("Search.Error.openEditor.message")); //$NON-NLS-2$ //$NON-NLS-1$
		return;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="17">
        <Lines>
          <Line>- invoke "Search-&gt;File..." to search for plugin.xml files in workspace</Line>
          <Line>- double-click on one result in Search Results View</Line>
          <Line>- PDE Editor opened without focus even if we click the cursor in the middle</Line>
          <Line>of the editor (note the white color editor title tab)</Line>
          <Line>- all editor accelerator keys (ctrl+x, ctrl+c, ctrl+v for cut/copy/paste) are</Line>
          <Line>disabled</Line>
          <Line>- PDE Editor receives focus when we select another view (for example, navigator)</Line>
          <Line>and back to PDE Editor, or when we switch to another application (like web</Line>
          <Line>browser) and back to Eclipse workbench</Line>
          <Line>- This is affecting all multi-page editors associated with the search result</Line>
          <Line>file (that's why I mark the severity of this defect as major). Single page</Line>
          <Line>editors (like the Java Editor) work okay.</Line>
          <Line>- Also, the same multi-page editor does not have any focus problem when opened</Line>
          <Line>by double-clicking in the Navigator View</Line>
          <Line>- tried changing the following line in</Line>
          <Line>org.eclipse.search.internal.ui.text.GotoMarkerAction#showWithoutReuse(IMarker)</Line>
          <Line>from:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>- invoke "Search-&gt;File..." to search for plugin.xml files in workspace
- double-click on one result in Search Results View
- PDE Editor opened without focus even if we click the cursor in the middle
  of the editor (note the white color editor title tab)
- all editor accelerator keys (ctrl+x, ctrl+c, ctrl+v for cut/copy/paste) are
  disabled
- PDE Editor receives focus when we select another view (for example, navigator)
  and back to PDE Editor, or when we switch to another application (like web
  browser) and back to Eclipse workbench
- This is affecting all multi-page editors associated with the search result
  file (that's why I mark the severity of this defect as major). Single page
  editors (like the Java Editor) work okay.
- Also, the same multi-page editor does not have any focus problem when opened
  by double-clicking in the Navigator View
- tried changing the following line in
  org.eclipse.search.internal.ui.text.GotoMarkerAction#showWithoutReuse(IMarker)
  from:
    page.openEditor(marker, false);
  to:
    page.openEditor(marker, true);
  seems to solve the problem. The second parameter tells the WorkbenchPage to
  active the editor.

p.s. if you don't see the problem the first time you double-click on the result
file in the Search Results View, try closing the editor and double-click on
the same result file again.
================================================================================
private void showWithoutReuse(IMarker marker) {
	IWorkbenchPage page= SearchPlugin.getActivePage();
	if (page == null)
		return;

	try {
		page.openEditor(marker, false);
	} catch (PartInitException ex) {
		ExceptionHandler.handle(ex, SearchMessages.getString
("Search.Error.openEditor.title"), SearchMessages.getString
("Search.Error.openEditor.message")); //$NON-NLS-2$ //$NON-NLS-1$
		return;
	}
}
Looks like a general issue since we are using Platform API.
Added "multi-page" to summary
Is this really an MPE issue?  I thought the PDE Editor used it's own multi-
page editor and didn't use our MPE support.  Or is this a general EditorMgmt 
issue?
Dejan, can you comment here?
PDE editors have their own implementation but will be switched to 
MultiPageEditorPart.
To be clear, the problem will probably go away when PDE switches to new editor 
architecture based on MultiPageEditorPart, but until then we cannot be sure.
I can't recreate this on either 3.0.1 or 3.1 M4.  Should this be closed or am 
I messing up a step.

I reported this problem in version 2.1.2. I cannot recreate this in 3.0.1 or 
3.1 M4 either. It's probably fix now. Please close this one. Thanks.
OK, thanks for letting us know.

closing old bug</WithStack>
    <WithOutStack>- invoke "Search-&gt;File..." to search for plugin.xml files in workspace
- double-click on one result in Search Results View
- PDE Editor opened without focus even if we click the cursor in the middle
  of the editor (note the white color editor title tab)
- all editor accelerator keys (ctrl+x, ctrl+c, ctrl+v for cut/copy/paste) are
  disabled
- PDE Editor receives focus when we select another view (for example, navigator)
  and back to PDE Editor, or when we switch to another application (like web
  browser) and back to Eclipse workbench
- This is affecting all multi-page editors associated with the search result
  file (that's why I mark the severity of this defect as major). Single page
  editors (like the Java Editor) work okay.
- Also, the same multi-page editor does not have any focus problem when opened
  by double-clicking in the Navigator View
- tried changing the following line in
  org.eclipse.search.internal.ui.text.GotoMarkerAction#showWithoutReuse(IMarker)
  from:
    page.openEditor(marker, false);
  to:
    page.openEditor(marker, true);
  seems to solve the problem. The second parameter tells the WorkbenchPage to
  active the editor.

p.s. if you don't see the problem the first time you double-click on the result
file in the Search Results View, try closing the editor and double-click on
the same result file again.
================================================================================
private void showWithoutReuse(IMarker marker) {
	IWorkbenchPage page= SearchPlugin.getActivePage();
	if (page == null)
		return;

	try {
		page.openEditor(marker, false);
	} catch (PartInitException ex) {
		ExceptionHandler.handle(ex, SearchMessages.getString
("Search.Error.openEditor.title"), SearchMessages.getString
("Search.Error.openEditor.message")); //$NON-NLS-2$ //$NON-NLS-1$
		return;
	}
}
Looks like a general issue since we are using Platform API.
Added "multi-page" to summary
Is this really an MPE issue?  I thought the PDE Editor used it's own multi-
page editor and didn't use our MPE support.  Or is this a general EditorMgmt 
issue?
Dejan, can you comment here?
PDE editors have their own implementation but will be switched to 
MultiPageEditorPart.
To be clear, the problem will probably go away when PDE switches to new editor 
architecture based on MultiPageEditorPart, but until then we cannot be sure.
I can't recreate this on either 3.0.1 or 3.1 M4.  Should this be closed or am 
I messing up a step.

I reported this problem in version 2.1.2. I cannot recreate this in 3.0.1 or 
3.1 M4 either. It's probably fix now. Please close this one. Thanks.
OK, thanks for letting us know.

closing old bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46877" />
    <CreationDate amount="2003-11-18 15:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Remove dependancies on Xerces</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build i1118, winxp, sunjdk1.4.2

As per bug 37696, we need to remove requirements from SDK plug-ins (including
tests and examples) on org.apache.xerces.

As of build i1118, org.eclipse.compare.examples.xml still has this dependancy.
Andre, note that the Xerces plug-in will NOT be removed for M5 (still awaiting
PMC approval) so don't feel that you have to fix this for tonight if its a rush.
fixed for M5</WithStack>
    <WithOutStack>build i1118, winxp, sunjdk1.4.2

As per bug 37696, we need to remove requirements from SDK plug-ins (including
tests and examples) on org.apache.xerces.

As of build i1118, org.eclipse.compare.examples.xml still has this dependancy.
Andre, note that the Xerces plug-in will NOT be removed for M5 (still awaiting
PMC approval) so don't feel that you have to fix this for tonight if its a rush.
fixed for M5</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46878" />
    <CreationDate amount="2003-11-18 15:29:00 -0500" />
    <DupId amount="46894" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Deadlock detected on I1118 build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074421">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock(DeadlockDetector.java:388)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.LockManager.addLockWaitThread(LockManager.java:100)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:151)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:109)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1516)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.createCVSSubdirectory(SyncFileWriter.java:378)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.writeFolderSync(SyncFileWriter.java:196)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.commitCache(EclipseSynchronizer.java:906)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer$1.run(EclipseSynchronizer.java:521)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.flush(EclipseSynchronizer.java:519)</Frame>
          <Frame depth="16">org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$ThreadInfo.flush(ReentrantLock.java:179)</Frame>
          <Frame depth="17">org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$ThreadInfo.popRule(ReentrantLock.java:105)</Frame>
          <Frame depth="18">org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock.release(ReentrantLock.java:289)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endBatching(EclipseSynchronizer.java:505)</Frame>
          <Frame depth="20">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1383)</Frame>
          <Frame depth="21">org.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.checkout(CheckoutProjectOperation.java:153)</Frame>
          <Frame depth="22">org.eclipse.team.internal.ccvs.ui.operations.CheckoutMultipleProjectsOperation.checkout(CheckoutMultipleProjectsOperation.java:52)</Frame>
          <Frame depth="23">org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.checkout(CheckoutOperation.java:46)</Frame>
          <Frame depth="24">org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.execute(CheckoutOperation.java:31)</Frame>
          <Frame depth="25">org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:128)</Frame>
          <Frame depth="26">org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext.run(CVSNonblockingRunnableContext.java:47)</Frame>
          <Frame depth="27">org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext$2.runInWorkspace(CVSNonblockingRunnableContext.java:67)</Frame>
          <Frame depth="28">org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:37)</Frame>
          <Frame depth="29">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I opened the new integration build for 11/18/03 on a new workspace and started 
taking files from CVS.  Afterwards, I was looking at my error log and came 
across an error that said, "Deadlock detected.  All locks owned by thread 
Worker-6 will be suspended."

Just thought I would let you guys know :)
(Stack trace below)


java.lang.IllegalStateException
at org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock
(DeadlockDetector.java:388)
at org.eclipse.core.internal.jobs.LockManager.addLockWaitThread
(LockManager.java:100)
at org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:151)
at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)
at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)
at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java:109)
at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java:1516)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)
at 
org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.createCVSSubdirectory
(SyncFileWriter.java:378)
at org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.writeFolderSync
(SyncFileWriter.java:196)
at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.commitCache
(EclipseSynchronizer.java:906)
at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer$1.run
(EclipseSynchronizer.java:521)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)
at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.flush
(EclipseSynchronizer.java:519)
at org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$ThreadInfo.flush
(ReentrantLock.java:179)
at 
org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$ThreadInfo.popRule
(ReentrantLock.java:105)
at org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock.release
(ReentrantLock.java:289)
at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endBatching
(EclipseSynchronizer.java:505)
at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run
(EclipseSynchronizer.java:1383)
at 
org.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.checkout
(CheckoutProjectOperation.java:153)
at 
org.eclipse.team.internal.ccvs.ui.operations.CheckoutMultipleProjectsOperation.
checkout(CheckoutMultipleProjectsOperation.java:52)
at org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.checkout
(CheckoutOperation.java:46)
at org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.execute
(CheckoutOperation.java:31)
at org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run
(CVSOperation.java:128)
at 
org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext.run
(CVSNonblockingRunnableContext.java:47)
at 
org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext$2.ru
nInWorkspace(CVSNonblockingRunnableContext.java:67)
at org.eclipse.core.internal.resources.InternalWorkspaceJob.run
(InternalWorkspaceJob.java:37)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
This thread looks OK to me (i.e. we obtain our locks in the proper order). 
There may be another thread that violated the lock ordering. Moving to Core. 
Would it be possible to get the trace of all threads involved in the deadlock?
Unfortunately that was the only trace I had in my log pertaining to this 
deadlock event :(

Sorry!
Sorry, my last question was a question to Platform Core and not to the 
reporter of the bug. I was asking if it was possible to have the Job mechanism 
write the traces for all threads involved in the deadlock to the log and not 
just the one that Core decides to terminate (since that thread may be innocent)


*** This bug has been marked as a duplicate of 46894 ***</WithStack>
    <WithOutStack>I opened the new integration build for 11/18/03 on a new workspace and started 
taking files from CVS.  Afterwards, I was looking at my error log and came 
across an error that said, "Deadlock detected.  All locks owned by thread 
Worker-6 will be suspended."

Just thought I would let you guys know :)
(Stack trace below)



This thread looks OK to me (i.e. we obtain our locks in the proper order). 
There may be another thread that violated the lock ordering. Moving to Core. 
Would it be possible to get the trace of all threads involved in the deadlock?
Unfortunately that was the only trace I had in my log pertaining to this 
deadlock event :(

Sorry!
Sorry, my last question was a question to Platform Core and not to the 
reporter of the bug. I was asking if it was possible to have the Job mechanism 
write the traces for all threads involved in the deadlock to the log and not 
just the one that Core decides to terminate (since that thread may be innocent)


*** This bug has been marked as a duplicate of 46894 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46879" />
    <CreationDate amount="2003-11-18 15:53:00 -0500" />
    <DupId amount="44759" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Suspend Execution on uncaught exceptions is always on</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When unchecking the "Suspend Execution on uncaught exceptions", it still 
suspends execution on uncaught exceptions.  This results in an unusual amount 
of breaks happening when trying to debug an app within eclipse.

The environment I'm using is:

Windows Eclipse (on java sun 1.4.1_01-b01)
Connecting via remote debugger to a process running on Linux with ibm's JDK 
version 1.3.1_03
What version of Eclipse?
3.0M4


*** This bug has been marked as a duplicate of 44759 ***</WithStack>
    <WithOutStack>When unchecking the "Suspend Execution on uncaught exceptions", it still 
suspends execution on uncaught exceptions.  This results in an unusual amount 
of breaks happening when trying to debug an app within eclipse.

The environment I'm using is:

Windows Eclipse (on java sun 1.4.1_01-b01)
Connecting via remote debugger to a process running on Linux with ibm's JDK 
version 1.3.1_03
What version of Eclipse?
3.0M4


*** This bug has been marked as a duplicate of 44759 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46880" />
    <CreationDate amount="2003-11-18 15:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Hang while adding interfaces to new class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>On the "New Java Class" dialog/wizard, I clicked on the "Add..." interface
button and a hang ensued.  The graphical components continue to repaint. 
Pressing "Cancel" has not effect.  Eclipse must be killed from the command-line.

I'm providing a thread-dump before and after the cancel button was pressed.

I'll try to reproduce after that.
Created attachment 6841
Thread dump before pressing "Cancel"
Created attachment 6842
Thread dump after pressing "Cancel"
Can't reproduce.
AllTypesCache.search(...) is passing a NullProgressMonitor to the SearchEngine. 
This progress monitor is not marked as 'cancelled'.

Another solution would be for AllTypesCache.getAllTypes(...) is to do an active 
wait checking for isCancelled() on the original progress monitor.

Moving to JDT/UI for comments.
Andre, can you please investigate.
Wasn't able to reproduce for M6.
*** Bug 42319 has been marked as a duplicate of this bug. ***
closing since it cannot be reproduced</WithStack>
    <WithOutStack>On the "New Java Class" dialog/wizard, I clicked on the "Add..." interface
button and a hang ensued.  The graphical components continue to repaint. 
Pressing "Cancel" has not effect.  Eclipse must be killed from the command-line.

I'm providing a thread-dump before and after the cancel button was pressed.

I'll try to reproduce after that.
Created attachment 6841
Thread dump before pressing "Cancel"
Created attachment 6842
Thread dump after pressing "Cancel"
Can't reproduce.
AllTypesCache.search(...) is passing a NullProgressMonitor to the SearchEngine. 
This progress monitor is not marked as 'cancelled'.

Another solution would be for AllTypesCache.getAllTypes(...) is to do an active 
wait checking for isCancelled() on the original progress monitor.

Moving to JDT/UI for comments.
Andre, can you please investigate.
Wasn't able to reproduce for M6.
*** Bug 42319 has been marked as a duplicate of this bug. ***
closing since it cannot be reproduced</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46881" />
    <CreationDate amount="2003-11-18 16:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Consider removing -noupdate from library.xml in org.eclipse.test</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build I20031118

The eclipse-test target in the library.xml file of org.eclipse.test specifies -
noupdate.  Should investigate whether this can be removed as per Dejan's 
comments in bug 46860.  One side effect of removing it is that plugin 
reconciling will happen on each test run, which could significantly slow down 
the tests.

Is there any safe way to get plugin reconciling to happen once on a particular 
install, but avoid checking it on subsequent runs?  This may not be an issue 
now that the .config is kept in the install location rather than in the 
workspace.  It was probably added originally because each test suite creates 
its own workspace.
I can see now why it was used. 

Since Eclipse state will not be in the workspace, reconciliation will happens 
once per test pass, not once per test CASE. I think you will be safe removing 
the argument.
Released fix to HEAD stream.
Fixed.</WithStack>
    <WithOutStack>build I20031118

The eclipse-test target in the library.xml file of org.eclipse.test specifies -
noupdate.  Should investigate whether this can be removed as per Dejan's 
comments in bug 46860.  One side effect of removing it is that plugin 
reconciling will happen on each test run, which could significantly slow down 
the tests.

Is there any safe way to get plugin reconciling to happen once on a particular 
install, but avoid checking it on subsequent runs?  This may not be an issue 
now that the .config is kept in the install location rather than in the 
workspace.  It was probably added originally because each test suite creates 
its own workspace.
I can see now why it was used. 

Since Eclipse state will not be in the workspace, reconciliation will happens 
once per test pass, not once per test CASE. I think you will be safe removing 
the argument.
Released fix to HEAD stream.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46882" />
    <CreationDate amount="2003-11-18 16:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>PST: lookup returns wrong function</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="24" end="65" />
        <code>class A {
  void f ( int i ) {}    //f1
}</code>
      </source_code>
      <source_code type="class">
        <location start="67" end="119" />
        <code>class B : public A {
   void f ( char c ) {}  //f2
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="124" end="133" />
        <code>b.f( 1 );</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Consider the following:
class A {
  void f ( int i ) {}    //f1
};
class B : public A {
   void f ( char c ) {}  //f2
} b;

b.f( 1 );

The lookup for b.f incorrectly returns f2 when it should return f1.
The symbol table needs to collect all non-hidden symbols from base classes to 
be considered the function resolution step.

This will need to be fixed in order for code-assist to work properly.
This is wrong.  See ANSI spec 10.2-2.
B::f hides A::f even though they have different parameters.

This becomes more noticable if you change A::f to have no parameters, and try 
calling b.f() (it won't compile).</WithStack>
    <WithOutStack>Consider the following:
class A {
  void f ( int i ) {}    //f1
};
class B : public A {
   void f ( char c ) {}  //f2
} b;

b.f( 1 );

The lookup for b.f incorrectly returns f2 when it should return f1.
The symbol table needs to collect all non-hidden symbols from base classes to 
be considered the function resolution step.

This will need to be fixed in order for code-assist to work properly.
This is wrong.  See ANSI spec 10.2-2.
B::f hides A::f even though they have different parameters.

This becomes more noticable if you change A::f to have no parameters, and try 
calling b.f() (it won't compile).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46883" />
    <CreationDate amount="2003-11-18 16:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ArrayIndexOutOfBoundsException from JobManager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341074424">
        <Exception>java.lang.IndexOutOfBoundsException</Exception>
        <Reason>Index: 1, Size: 1</Reason>
        <Frames>
          <Frame depth="0">java.util.ArrayList.RangeCheck(ArrayList.java:507)</Frame>
          <Frame depth="1">java.util.ArrayList.get(ArrayList.java:324)</Frame>
          <Frame depth="2">java.util.Collections$SynchronizedList.get(Collections.java:1786)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:104)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:281)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:120)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I believe this occurred while trying to execute a CVS synchronize while the user
interface was still in the process of coming up.

ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 15:58:19.212
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
        at java.util.ArrayList.RangeCheck(ArrayList.java:507)
        at java.util.ArrayList.get(ArrayList.java:324)
        at java.util.Collections$SynchronizedList.get(Collections.java:1786)
        at org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:104)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)
        at org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)
        at org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:281)
        at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:120)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)
Fixed.</WithStack>
    <WithOutStack>I believe this occurred while trying to execute a CVS synchronize while the user
interface was still in the process of coming up.

ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 15:58:19.212
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0

Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46884" />
    <CreationDate amount="2003-11-18 16:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add a preference page to set common source location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Add a preference page to specify a list of source locations common for all 
launch configurations.
Implemented in 1.2.1 and HEAD.</WithStack>
    <WithOutStack>Add a preference page to specify a list of source locations common for all 
launch configurations.
Implemented in 1.2.1 and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46885" />
    <CreationDate amount="2003-11-18 16:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Source refactoring loses event in JavaBean view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functiondef">
        <location start="167" end="323" />
        <code>java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="733" end="898" />
        <code>/*
 * Created on Nov 18, 2003
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */</code>
      </source_code>
      <source_code type="package">
        <location start="899" end="914" />
        <code>package my.gui;</code>
      </source_code>
      <source_code type="import">
        <location start="915" end="942" />
        <code>import javax.swing.JFrame;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="943" end="1108" />
        <code>/**
 * @author srich
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */</code>
      </source_code>
      <source_code type="class">
        <location start="1109" end="3468" />
        <code>public class Main extends JFrame {

	private javax.swing.JPanel jContentPane = null;

	private javax.swing.JLabel jLabel = null;
	private javax.swing.JTextField jTextField = null;
	private javax.swing.JButton jButton = null;
	/**
	 * This is the default constructor
	 */
	public Main() {
		super();
		initialize();
	}
	/**
	 * This method initializes this
	 * 
	 * @return void
	 */
	private void initialize() {
		this.setSize(300, 200);
		this.setContentPane(getJContentPane());
	}
	/**
	 * This method initializes jContentPane
	 * 
	 * @return javax.swing.JPanel
	 */
	private javax.swing.JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new javax.swing.JPanel();
			java.awt.GridBagConstraints consGridBagConstraints1 = 
new java.awt.GridBagConstraints();
			consGridBagConstraints1.weightx = 1.0;
			consGridBagConstraints1.fill = 
java.awt.GridBagConstraints.HORIZONTAL;
			jContentPane.setLayout(new java.awt.GridBagLayout());
			jContentPane.add(getJLabel(), new 
java.awt.GridBagConstraints());
			jContentPane.add(getJTextField(), 
consGridBagConstraints1);
			jContentPane.add(getJButton(), new 
java.awt.GridBagConstraints());
		}
		return jContentPane;
	}
	/**
	 * This method initializes jLabel
	 * 
	 * @return javax.swing.JLabel
	 */
	private javax.swing.JLabel getJLabel() {
		if(jLabel == null) {
			jLabel = new javax.swing.JLabel();
			jLabel.setText("Message: ");
		}
		return jLabel;
	}
	/**
	 * This method initializes jTextField
	 * 
	 * @return javax.swing.JTextField
	 */
	private javax.swing.JTextField getJTextField() {
		if(jTextField == null) {
			jTextField = new javax.swing.JTextField();
			jTextField.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					updateTitle();
				}
			});
		}
		return jTextField;
	}
	/**
	 * This method initializes jButton
	 * 
	 * @return javax.swing.JButton
	 */
	private javax.swing.JButton getJButton() {
		if(jButton == null) {
			jButton = new javax.swing.JButton();
			jButton.setText("Go...");
			jButton.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			});
		}
		return jButton;
	}
	private void updateTitle() {
		setTitle(getJTextField().getText());
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I have a simple view with a label, text field, and button.  I implemented a 
simple actionPerformed event for the button as follows:
			jButton.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			});

I wanted to reuse that setTitle() code elsewhere, so I did a refactor-&gt;Extract 
method.. on it, creating a doit() method in the anonymous listener here.  In 
order to really share the code, I cut and pasted it out to the main type.  At 
this point, my event disappeared from the JavaBeans view, and I suspect it was 
lost from the JavaBean model.

Here's the source of my view if you want to play with it:
/*
 * Created on Nov 18, 2003
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
package my.gui;

import javax.swing.JFrame;

/**
 * @author srich
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
public class Main extends JFrame {

	private javax.swing.JPanel jContentPane = null;

	private javax.swing.JLabel jLabel = null;
	private javax.swing.JTextField jTextField = null;
	private javax.swing.JButton jButton = null;
	/**
	 * This is the default constructor
	 */
	public Main() {
		super();
		initialize();
	}
	/**
	 * This method initializes this
	 * 
	 * @return void
	 */
	private void initialize() {
		this.setSize(300, 200);
		this.setContentPane(getJContentPane());
	}
	/**
	 * This method initializes jContentPane
	 * 
	 * @return javax.swing.JPanel
	 */
	private javax.swing.JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new javax.swing.JPanel();
			java.awt.GridBagConstraints consGridBagConstraints1 = 
new java.awt.GridBagConstraints();
			consGridBagConstraints1.weightx = 1.0;
			consGridBagConstraints1.fill = 
java.awt.GridBagConstraints.HORIZONTAL;
			jContentPane.setLayout(new java.awt.GridBagLayout());
			jContentPane.add(getJLabel(), new 
java.awt.GridBagConstraints());
			jContentPane.add(getJTextField(), 
consGridBagConstraints1);
			jContentPane.add(getJButton(), new 
java.awt.GridBagConstraints());
		}
		return jContentPane;
	}
	/**
	 * This method initializes jLabel
	 * 
	 * @return javax.swing.JLabel
	 */
	private javax.swing.JLabel getJLabel() {
		if(jLabel == null) {
			jLabel = new javax.swing.JLabel();
			jLabel.setText("Message: ");
		}
		return jLabel;
	}
	/**
	 * This method initializes jTextField
	 * 
	 * @return javax.swing.JTextField
	 */
	private javax.swing.JTextField getJTextField() {
		if(jTextField == null) {
			jTextField = new javax.swing.JTextField();
			jTextField.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					updateTitle();
				}
			});
		}
		return jTextField;
	}
	/**
	 * This method initializes jButton
	 * 
	 * @return javax.swing.JButton
	 */
	private javax.swing.JButton getJButton() {
		if(jButton == null) {
			jButton = new javax.swing.JButton();
			jButton.setText("Go...");
			jButton.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			});
		}
		return jButton;
	}
	private void updateTitle() {
		setTitle(getJTextField().getText());
	}
}
This is a problem with the way the current snippet compile works today.

When you cut the doit() method, you have generated an "error" in the anonymous
invocation class.  The snippet compiler considers the anonymous class as a
*single* statement with error, and "remove" it from its analysis.

When you paste the doit() back, you are generating a new class method for which
the code snippet does not pay any attention to .... not considering the fact
that this method indirectly "fixed" the event invocation.  ... if you make any
other changes in the anonymoue "statement" it will be reAdded.

For Version 1.0.0 we are totally reWriting the snippet analysis which will fix
this problem as well.
Sri... using this code sample, see if your latest changes to the snippet 
compiler fix this problem.
The new UI update process does a much better job of understanding these
scenarios, and I was unable to reproduce this problem in I20040311a build. The
problem seems to have occured as per Gili's explanation above. Please try to
recreate this defect using the latest I20040311a build as the UI update process
does a much better job of handling such cases.

Since M1 is now complete these are being retargeted to M2.
Removing target since 1.0.0 has already passed and these weren't fixed in it.
Since we are haven't heard of a continuing problem we are closing this defect.
Closing</WithStack>
    <WithOutStack>I have a simple view with a label, text field, and button.  I implemented a 
simple actionPerformed event for the button as follows:
			jButton.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			});

I wanted to reuse that setTitle() code elsewhere, so I did a refactor-&gt;Extract 
method.. on it, creating a doit() method in the anonymous listener here.  In 
order to really share the code, I cut and pasted it out to the main type.  At 
this point, my event disappeared from the JavaBeans view, and I suspect it was 
lost from the JavaBean model.

Here's the source of my view if you want to play with it:
/*
 * Created on Nov 18, 2003
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
package my.gui;

import javax.swing.JFrame;

/**
 * @author srich
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
public class Main extends JFrame {

	private javax.swing.JPanel jContentPane = null;

	private javax.swing.JLabel jLabel = null;
	private javax.swing.JTextField jTextField = null;
	private javax.swing.JButton jButton = null;
	/**
	 * This is the default constructor
	 */
	public Main() {
		super();
		initialize();
	}
	/**
	 * This method initializes this
	 * 
	 * @return void
	 */
	private void initialize() {
		this.setSize(300, 200);
		this.setContentPane(getJContentPane());
	}
	/**
	 * This method initializes jContentPane
	 * 
	 * @return javax.swing.JPanel
	 */
	private javax.swing.JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new javax.swing.JPanel();
			java.awt.GridBagConstraints consGridBagConstraints1 = 
new java.awt.GridBagConstraints();
			consGridBagConstraints1.weightx = 1.0;
			consGridBagConstraints1.fill = 
java.awt.GridBagConstraints.HORIZONTAL;
			jContentPane.setLayout(new java.awt.GridBagLayout());
			jContentPane.add(getJLabel(), new 
java.awt.GridBagConstraints());
			jContentPane.add(getJTextField(), 
consGridBagConstraints1);
			jContentPane.add(getJButton(), new 
java.awt.GridBagConstraints());
		}
		return jContentPane;
	}
	/**
	 * This method initializes jLabel
	 * 
	 * @return javax.swing.JLabel
	 */
	private javax.swing.JLabel getJLabel() {
		if(jLabel == null) {
			jLabel = new javax.swing.JLabel();
			jLabel.setText("Message: ");
		}
		return jLabel;
	}
	/**
	 * This method initializes jTextField
	 * 
	 * @return javax.swing.JTextField
	 */
	private javax.swing.JTextField getJTextField() {
		if(jTextField == null) {
			jTextField = new javax.swing.JTextField();
			jTextField.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					updateTitle();
				}
			});
		}
		return jTextField;
	}
	/**
	 * This method initializes jButton
	 * 
	 * @return javax.swing.JButton
	 */
	private javax.swing.JButton getJButton() {
		if(jButton == null) {
			jButton = new javax.swing.JButton();
			jButton.setText("Go...");
			jButton.addActionListener(new 
java.awt.event.ActionListener() { 
				public void actionPerformed
(java.awt.event.ActionEvent e) {    
					setTitle(getJTextField().getText());
				}
			});
		}
		return jButton;
	}
	private void updateTitle() {
		setTitle(getJTextField().getText());
	}
}
This is a problem with the way the current snippet compile works today.

When you cut the doit() method, you have generated an "error" in the anonymous
invocation class.  The snippet compiler considers the anonymous class as a
*single* statement with error, and "remove" it from its analysis.

When you paste the doit() back, you are generating a new class method for which
the code snippet does not pay any attention to .... not considering the fact
that this method indirectly "fixed" the event invocation.  ... if you make any
other changes in the anonymoue "statement" it will be reAdded.

For Version 1.0.0 we are totally reWriting the snippet analysis which will fix
this problem as well.
Sri... using this code sample, see if your latest changes to the snippet 
compiler fix this problem.
The new UI update process does a much better job of understanding these
scenarios, and I was unable to reproduce this problem in I20040311a build. The
problem seems to have occured as per Gili's explanation above. Please try to
recreate this defect using the latest I20040311a build as the UI update process
does a much better job of handling such cases.

Since M1 is now complete these are being retargeted to M2.
Removing target since 1.0.0 has already passed and these weren't fixed in it.
Since we are haven't heard of a continuing problem we are closing this defect.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46886" />
    <CreationDate amount="2003-11-18 16:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Build hangs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="8">
      <Enumeration lines="15">
        <Lines>
          <Line>- waiting on &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)</Line>
          <Line>- locked &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)</Line>
          <Line>at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)</Line>
          <Line>at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)</Line>
          <Line>at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)</Line>
          <Line>at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1573)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.debug.core.hcr.JavaHotCodeReplaceManager$3.run(JavaHotCodeReplaceManager.java:1105)</Line>
          <Line>at java.lang.Thread.run(Thread.java:534)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="15">
        <Lines>
          <Line>- waiting on &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)</Line>
          <Line>- locked &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:153)</Line>
          <Line>at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)</Line>
          <Line>at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:109)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1516)</Line>
          <Line>at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.events.NotificationManager$NotifyJob.run(NotificationManager.java:37)</Line>
          <Line>at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)</Line>
          <Line>at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:189)</Line>
          <Line>- locked &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)</Line>
          <Line>at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:215)</Line>
          <Line>at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- waiting on &lt;0x157b1538&gt; (a java.lang.Object)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:124)</Line>
          <Line>- locked &lt;0x157b1538&gt; (a java.lang.Object)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:99)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamMonitor.java:75)</Line>
          <Line>at java.lang.Thread.run(Thread.java:534)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x12c54ec8&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)</Line>
          <Line>- locked &lt;0x12c54ec8&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x12ac2500&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)</Line>
          <Line>- locked &lt;0x12ac2500&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- waiting on &lt;0x121b2348&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.core.search.indexing.IndexManager)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:325)</Line>
          <Line>- locked &lt;0x121b2348&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.core.search.indexing.IndexManager)</Line>
          <Line>at java.lang.Thread.run(Thread.java:534)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="76">
        <Lines>
          <Line>- waiting on &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)</Line>
          <Line>- locked &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)</Line>
          <Line>at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)</Line>
          <Line>at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)</Line>
          <Line>at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)</Line>
          <Line>at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Line>
          <Line>- locked &lt;0x16b3d4b8&gt; (a</Line>
          <Line>org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:388)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:597)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3140)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:821)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:885)</Line>
          <Line>- locked &lt;0x122bf510&gt; (a org.eclipse.jdt.internal.core.CompilationUnit)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1080)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:936)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Line>
          <Line>at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:444)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:441)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1458)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:942)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1085)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2267)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2279)</Line>
          <Line>at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:72)</Line>
          <Line>at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Line>
          <Line>at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1413)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1389)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:236)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Line>
          <Line>at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at</Line>
          <Line>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at</Line>
          <Line>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:767)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:601)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I use autobuild. Happened after pressing Ctrl+S (save)

Starting Eclipse  N20031114
***************************

The following JRE is used to launch Eclipse:
java version "1.4.2"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-b28)
Java HotSpot(TM) Client VM (build 1.4.2-b28, mixed mode)

VM Options=-Xms50M -Xmx350M

Target Workspace=c:\eclipse\workspaces\Development_2_2\plugins

C:\eclipse\drops\N20031114&gt;C:\JavaSDKs\jdk1.4.2\bin\java -Xms50M -Xmx350M
-verify -cp startup.jar org.eclipse.core.launcher.Main -update -application
org.eclipse.ui.ide.workbench -showlocation -data c
:\eclipse\workspaces\Development_2_2\plugins
Full thread dump Java HotSpot(TM) Client VM (1.4.2-b28 mixed mode):

"Thread-81" prio=5 tid=0x03ea1730 nid=0xe7c in Object.wait() [46ef000..46efd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)
        at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)
        at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)
        at
org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1573)
        at
org.eclipse.jdt.internal.debug.core.hcr.JavaHotCodeReplaceManager$3.run(JavaHotCodeReplaceManager.java:1105)
        at java.lang.Thread.run(Thread.java:534)

"Worker-40" prio=5 tid=0x03ea15a0 nid=0x34c in Object.wait() [47cf000..47cfd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at
org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:153)
        at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)
        at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)
        at
org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:109)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1516)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at
org.eclipse.core.internal.events.NotificationManager$NotifyJob.run(NotificationManager.java:37)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Worker-39" prio=5 tid=0x03edcc88 nid=0xee8 in Object.wait() [473f000..473fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:189)
        - locked &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:215)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

"Worker-38" prio=5 tid=0x03e2b300 nid=0x948 waiting on condition [388f000..388fd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.ui.internal.progress.AnimationManager.animateLoop(AnimationManager.java:318)
        at
org.eclipse.ui.internal.progress.AnimationManager$3.run(AnimationManager.java:467)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Worker-31" prio=5 tid=0x03e2d448 nid=0x1a0 waiting for monitor entry
[454f000..454fd94]
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotationModel.update(CompilationUnitDocumentProvider2.java:413)
        - waiting to lock &lt;0x122bf510&gt; (a
org.eclipse.jdt.internal.core.CompilationUnit)
        at
org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel$ResourceChangeListener.resourceChanged(ResourceMarkerAnnotationModel.java:53)
        at
org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:251)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:244)
        at
org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:138)
        at
org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:146)
        at
org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:847)
        at org.eclipse.core.internal.resources.File.setContents(File.java:283)
        at org.eclipse.core.internal.resources.File.setContents(File.java:323)
        at
org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileBytes(IncrementalImageBuilder.java:581)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:445)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:117)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:205)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:155)
        at
org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:113)
        at
org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:223)
        at
org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:151)
        at
org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:482)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:130)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:156)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Thread timer" prio=7 tid=0x03e9fdc0 nid=0xb78 waiting on condition
[4a1f000..4a1fd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.checkTimers(LaunchViewEventHandler.java:435)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.access$2(LaunchViewEventHandler.java:402)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$1.run(LaunchViewEventHandler.java:394)
        at java.lang.Thread.run(Thread.java:534)

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x03e2c7a0 nid=0xbe4 in
Object.wait() [4b1f000..4b1fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable(PacketReceiveManager.java:168)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(PacketReceiveManager.java:93)
        - locked &lt;0x157c8c88&gt; (a
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:276)
        at
org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:63)
        at
org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:48)
        at
org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:206)
        at java.lang.Thread.run(Thread.java:534)

"Packet Send Manager" prio=5 tid=0x03e2a9a0 nid=0xbd8 in Object.wait()
[4a9f000..4a9fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePackets(PacketSendManager.java:94)
        - locked &lt;0x157c8dd0&gt; (a org.eclipse.jdi.internal.connect.PacketSendManager)
        at
org.eclipse.jdi.internal.connect.PacketSendManager.run(PacketSendManager.java:54)
        at java.lang.Thread.run(Thread.java:534)

"Packet Receive Manager" prio=5 tid=0x03e66118 nid=0x310 runnable [4a5f000..4a5fd94]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at java.net.SocketInputStream.read(SocketInputStream.java:182)
        at java.io.DataInputStream.readInt(DataInputStream.java:443)
        at org.eclipse.jdi.internal.jdwp.JdwpPacket.read(JdwpPacket.java:124)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.readAvailablePacket(PacketReceiveManager.java:224)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.run(PacketReceiveManager.java:70)
        at java.lang.Thread.run(Thread.java:534)

"Console Polling Thread" prio=7 tid=0x03e66498 nid=0x888 waiting on condition
[49df000..49dfd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitioner.pollAndSleep(ConsoleDocumentPartitioner.java:563)
        at
org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitioner$1.run(ConsoleDocumentPartitioner.java:547)
        at java.lang.Thread.run(Thread.java:534)

"Input Stream Monitor" prio=5 tid=0x035c7d48 nid=0xbc4 in Object.wait()
[499f000..499fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x157b1538&gt; (a java.lang.Object)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:124)
        - locked &lt;0x157b1538&gt; (a java.lang.Object)
        at
org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:99)
        at
org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamMonitor.java:75)
        at java.lang.Thread.run(Thread.java:534)

"Output Stream Monitor" prio=5 tid=0x03e8bee8 nid=0xe44 runnable [495f000..495fd94]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:177)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:132)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:124)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:534)

"Output Stream Monitor" prio=5 tid=0x03edc728 nid=0xba8 runnable [491f000..491fd94]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:194)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:220)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:277)
        - locked &lt;0x157b0a30&gt; (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:132)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:124)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:534)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03e8c848
nid=0xbe8 in Object.wait() [48cf000..48cfd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456b28&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x034f0470
nid=0x890 in Object.wait() [478f000..478fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456b88&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03e666a8
nid=0xff4 in Object.wait() [463f000..463fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456d18&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03de28d8
nid=0xbe0 in Object.wait() [458f000..458fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x153dd118&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03d86648
nid=0xd1c in Object.wait() [45ff000..45ffd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x14f36df8&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x032a7620
nid=0x838 in Object.wait() [381f000..381fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x14daa2b0&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Worker-3" prio=5 tid=0x0354d3e0 nid=0xc30 runnable [443f000..443fd94]
        at java.lang.Win32Process.waitFor(Native Method)
        at
org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run(RuntimeProcess.java:347)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03570230
nid=0x2d8 in Object.wait() [3a6f000..3a6fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12c54ec8&gt; (a
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x12c54ec8&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x0349ef60
nid=0xfe4 in Object.wait() [38df000..38dfd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12ac2500&gt; (a
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x12ac2500&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Java indexing" daemon prio=4 tid=0x00a3d600 nid=0x9f0 in Object.wait()
[379f000..379fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x121b2348&gt; (a
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:325)
        - locked &lt;0x121b2348&gt; (a
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Thread.run(Thread.java:534)

"Signal Dispatcher" daemon prio=10 tid=0x00a13e88 nid=0x954 waiting on condition
[0..0]

"Finalizer" daemon prio=9 tid=0x00a0f0e8 nid=0xfb0 in Object.wait()
[2c6f000..2c6fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x11af0138&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=10 tid=0x009c1a20 nid=0xfac in Object.wait()
[2c2f000..2c2fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x11af01a0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x000350d8 nid=0xf18 in Object.wait() [7e000..7fc3c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)
        at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)
        at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)
        at
org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
        - locked &lt;0x16b3d4b8&gt; (a
org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation)
        at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)
        at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)
        at
org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:388)
        at
org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:597)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3140)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:821)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:885)
        - locked &lt;0x122bf510&gt; (a org.eclipse.jdt.internal.core.CompilationUnit)
        at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1080)
        at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:936)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:444)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at
org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:441)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1458)
        at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:942)
        at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1085)
        at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2267)
        at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2279)
        at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:72)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
        at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
        at
org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)
        at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1413)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1389)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:236)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
        at org.eclipse.core.launcher.Main.run(Main.java:767)
        at org.eclipse.core.launcher.Main.main(Main.java:601)

"VM Thread" prio=5 tid=0x009bd970 nid=0xf9c runnable

"VM Periodic Task Thread" prio=10 tid=0x00a10498 nid=0xfe8 waiting on condition
"Suspend Checker Thread" prio=10 tid=0x00a02540 nid=0x960 runnable
The editor's use of CompilationUnit object monitor is causing the deadlock.

-&gt; UI thread owns lock on CompilationUnit, and is waiting for the builder to
complete

-&gt; Builder thread (Worker-31) is waiting for lock on CompilationUnit (in
particular the text framework's resource change listener is trying to lock the
CompilationUnit.

Editors have to either avoid modifying the workspace while holding the CU
monitor, or avoid acquiring the monitor from the resource change listener.
Must fix for M5. I falsely introduced the sync block recently.
20031120.</WithStack>
    <WithOutStack>I use autobuild. Happened after pressing Ctrl+S (save)

Starting Eclipse  N20031114
***************************

The following JRE is used to launch Eclipse:
java version "1.4.2"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-b28)
Java HotSpot(TM) Client VM (build 1.4.2-b28, mixed mode)

VM Options=-Xms50M -Xmx350M

Target Workspace=c:\eclipse\workspaces\Development_2_2\plugins

C:\eclipse\drops\N20031114&gt;C:\JavaSDKs\jdk1.4.2\bin\java -Xms50M -Xmx350M
-verify -cp startup.jar org.eclipse.core.launcher.Main -update -application
org.eclipse.ui.ide.workbench -showlocation -data c
:\eclipse\workspaces\Development_2_2\plugins
Full thread dump Java HotSpot(TM) Client VM (1.4.2-b28 mixed mode):

"Thread-81" prio=5 tid=0x03ea1730 nid=0xe7c in Object.wait() [46ef000..46efd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x1030dd38&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)
        at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)
        at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)
        at
org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1573)
        at
org.eclipse.jdt.internal.debug.core.hcr.JavaHotCodeReplaceManager$3.run(JavaHotCodeReplaceManager.java:1105)
        at java.lang.Thread.run(Thread.java:534)

"Worker-40" prio=5 tid=0x03ea15a0 nid=0x34c in Object.wait() [47cf000..47cfd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x100bb150&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at
org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:153)
        at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)
        at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)
        at
org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:109)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1516)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at
org.eclipse.core.internal.events.NotificationManager$NotifyJob.run(NotificationManager.java:37)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Worker-39" prio=5 tid=0x03edcc88 nid=0xee8 in Object.wait() [473f000..473fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:189)
        - locked &lt;0x11c36c78&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:215)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

"Worker-38" prio=5 tid=0x03e2b300 nid=0x948 waiting on condition [388f000..388fd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.ui.internal.progress.AnimationManager.animateLoop(AnimationManager.java:318)
        at
org.eclipse.ui.internal.progress.AnimationManager$3.run(AnimationManager.java:467)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Worker-31" prio=5 tid=0x03e2d448 nid=0x1a0 waiting for monitor entry
[454f000..454fd94]
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotationModel.update(CompilationUnitDocumentProvider2.java:413)
        - waiting to lock &lt;0x122bf510&gt; (a
org.eclipse.jdt.internal.core.CompilationUnit)
        at
org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel$ResourceChangeListener.resourceChanged(ResourceMarkerAnnotationModel.java:53)
        at
org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:251)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:244)
        at
org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:138)
        at
org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:146)
        at
org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:847)
        at org.eclipse.core.internal.resources.File.setContents(File.java:283)
        at org.eclipse.core.internal.resources.File.setContents(File.java:323)
        at
org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.writeClassFileBytes(IncrementalImageBuilder.java:581)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:445)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:117)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:205)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:155)
        at
org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:113)
        at
org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:223)
        at
org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:151)
        at
org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:482)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:130)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:156)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
        at org.eclipse.core.runtime.Platform.run(Platform.java:464)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"Thread timer" prio=7 tid=0x03e9fdc0 nid=0xb78 waiting on condition
[4a1f000..4a1fd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.checkTimers(LaunchViewEventHandler.java:435)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.access$2(LaunchViewEventHandler.java:402)
        at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$1.run(LaunchViewEventHandler.java:394)
        at java.lang.Thread.run(Thread.java:534)

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x03e2c7a0 nid=0xbe4 in
Object.wait() [4b1f000..4b1fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable(PacketReceiveManager.java:168)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(PacketReceiveManager.java:93)
        - locked &lt;0x157c8c88&gt; (a
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:276)
        at
org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:63)
        at
org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:48)
        at
org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:206)
        at java.lang.Thread.run(Thread.java:534)

"Packet Send Manager" prio=5 tid=0x03e2a9a0 nid=0xbd8 in Object.wait()
[4a9f000..4a9fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePackets(PacketSendManager.java:94)
        - locked &lt;0x157c8dd0&gt; (a org.eclipse.jdi.internal.connect.PacketSendManager)
        at
org.eclipse.jdi.internal.connect.PacketSendManager.run(PacketSendManager.java:54)
        at java.lang.Thread.run(Thread.java:534)

"Packet Receive Manager" prio=5 tid=0x03e66118 nid=0x310 runnable [4a5f000..4a5fd94]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at java.net.SocketInputStream.read(SocketInputStream.java:182)
        at java.io.DataInputStream.readInt(DataInputStream.java:443)
        at org.eclipse.jdi.internal.jdwp.JdwpPacket.read(JdwpPacket.java:124)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.readAvailablePacket(PacketReceiveManager.java:224)
        at
org.eclipse.jdi.internal.connect.PacketReceiveManager.run(PacketReceiveManager.java:70)
        at java.lang.Thread.run(Thread.java:534)

"Console Polling Thread" prio=7 tid=0x03e66498 nid=0x888 waiting on condition
[49df000..49dfd94]
        at java.lang.Thread.sleep(Native Method)
        at
org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitioner.pollAndSleep(ConsoleDocumentPartitioner.java:563)
        at
org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitioner$1.run(ConsoleDocumentPartitioner.java:547)
        at java.lang.Thread.run(Thread.java:534)

"Input Stream Monitor" prio=5 tid=0x035c7d48 nid=0xbc4 in Object.wait()
[499f000..499fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x157b1538&gt; (a java.lang.Object)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:124)
        - locked &lt;0x157b1538&gt; (a java.lang.Object)
        at
org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:99)
        at
org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamMonitor.java:75)
        at java.lang.Thread.run(Thread.java:534)

"Output Stream Monitor" prio=5 tid=0x03e8bee8 nid=0xe44 runnable [495f000..495fd94]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:177)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:132)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:124)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:534)

"Output Stream Monitor" prio=5 tid=0x03edc728 nid=0xba8 runnable [491f000..491fd94]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:194)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:220)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:277)
        - locked &lt;0x157b0a30&gt; (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:132)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:124)
        at
org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:534)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03e8c848
nid=0xbe8 in Object.wait() [48cf000..48cfd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456b28&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x034f0470
nid=0x890 in Object.wait() [478f000..478fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456b88&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03e666a8
nid=0xff4 in Object.wait() [463f000..463fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x15456d18&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03de28d8
nid=0xbe0 in Object.wait() [458f000..458fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x153dd118&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03d86648
nid=0xd1c in Object.wait() [45ff000..45ffd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x14f36df8&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x032a7620
nid=0x838 in Object.wait() [381f000..381fd94]
        at java.lang.Object.wait(Native Method)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x14daa2b0&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Worker-3" prio=5 tid=0x0354d3e0 nid=0xc30 runnable [443f000..443fd94]
        at java.lang.Win32Process.waitFor(Native Method)
        at
org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run(RuntimeProcess.java:347)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x03570230
nid=0x2d8 in Object.wait() [3a6f000..3a6fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12c54ec8&gt; (a
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x12c54ec8&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x0349ef60
nid=0xfe4 in Object.wait() [38df000..38dfd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12ac2500&gt; (a
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
        - locked &lt;0x12ac2500&gt; (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Java indexing" daemon prio=4 tid=0x00a3d600 nid=0x9f0 in Object.wait()
[379f000..379fd94]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x121b2348&gt; (a
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:325)
        - locked &lt;0x121b2348&gt; (a
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Thread.run(Thread.java:534)

"Signal Dispatcher" daemon prio=10 tid=0x00a13e88 nid=0x954 waiting on condition
[0..0]

"Finalizer" daemon prio=9 tid=0x00a0f0e8 nid=0xfb0 in Object.wait()
[2c6f000..2c6fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x11af0138&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=10 tid=0x009c1a20 nid=0xfac in Object.wait()
[2c2f000..2c2fd94]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x11af01a0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x000350d8 nid=0xf18 in Object.wait() [7e000..7fc3c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:36)
        - locked &lt;0x16b3d468&gt; (a org.eclipse.core.internal.jobs.Semaphore)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:391)
        at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:175)
        at org.eclipse.core.runtime.jobs.Job.join(Job.java:286)
        at
org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:309)
        at
org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1515)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1549)
        at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
        - locked &lt;0x16b3d4b8&gt; (a
org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation)
        at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)
        at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)
        at
org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:388)
        at
org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:597)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3140)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:821)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:885)
        - locked &lt;0x122bf510&gt; (a org.eclipse.jdt.internal.core.CompilationUnit)
        at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1080)
        at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:936)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:444)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at
org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:441)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1458)
        at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:942)
        at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1085)
        at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2267)
        at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2279)
        at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:72)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
        at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
        at
org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)
        at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1413)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1389)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:236)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
        at org.eclipse.core.launcher.Main.run(Main.java:767)
        at org.eclipse.core.launcher.Main.main(Main.java:601)

"VM Thread" prio=5 tid=0x009bd970 nid=0xf9c runnable

"VM Periodic Task Thread" prio=10 tid=0x00a10498 nid=0xfe8 waiting on condition
"Suspend Checker Thread" prio=10 tid=0x00a02540 nid=0x960 runnable
The editor's use of CompilationUnit object monitor is causing the deadlock.

-&gt; UI thread owns lock on CompilationUnit, and is waiting for the builder to
complete

-&gt; Builder thread (Worker-31) is waiting for lock on CompilationUnit (in
particular the text framework's resource change listener is trying to lock the
CompilationUnit.

Editors have to either avoid modifying the workspace while holding the CU
monitor, or avoid acquiring the monitor from the resource change listener.
Must fix for M5. I falsely introduced the sync block recently.
20031120.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46887" />
    <CreationDate amount="2003-11-18 16:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>JVELAYT01: Button somehow dropped behind JPanel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>After setting the text and dragging the button around awhile, at one point it
appeared that the button just disappeared.  I couldn't find it anywhere.  Also,
everything in the Outline view disappeared.

I dragged another button onto the JPanel (starting the test from the beginning)
to see if I could reproduce the problem.  After changing the text, dragging the
button off the JPanel, then dragging it back on the JPanel, rather than the new
button being highlighted, the original one was highlighted, showing that it had
gotten dropped *behind* the JPanel.  It was entirely obscured by a good inch on
every side on my monitor.  After moving the JPanel, I was able to retrive the
"hiding" button.

I haven't been able to reproduce this behavior.
I tried but was unable to reproduce this problem. But I just want to make sure 
I'm going through the correct scenario. Since this is smoke test 01, I assume 
this is the case where you subclass a JPanel and randomly drop components onto 
the JPanel (which has a FlowLayout) and the canvas. Then move the components 
back and forth between the two to be sure they drop into the correct positions 
and the gen'd code is correct. I did this... just starting with a JButton and 
drag/dropping it all over.

One of observations I want to point out is initially when you open a new visual 
class (such as the JPanel), the position on the canvas is the default and not 
set until you actually move the JPanel on the canvas. And because of this the 
JPanel will "float" like a FlowLayout so if you drop another component above or 
to the left of it, it will move to another position when you drop the other 
component. Once you move the JPanel by explicitly dragging it to a position on 
the canvas, the position information is stored in a comment at the end of the 
class (e.g. //  @jve:visual-info  decl-index=0 visual-constraint="20,16") and 
it will no longer "float" since it has a fixed position. To reset it, just 
remove the comment in the sourece viewer.
This info is not used at runtime but simply at design time for the VE.

Perhaps this was some of the behavior you were seeing. But even when the 
components are dropped on the canvas, they should show up in the beans viewer.
If they disappear (is this what you meant "...everything in the Outline view 
disappeared..."?), then something went wrong and their should be some 
exceptions in the .log file.

For now I'll return this.. please reopen again if you experience this again. 
We'll try hammering it a bit to see if we can find what went wrong.
For what it's worth, 

- the JPanel was set to null layout (XYLayout) when this happened

- I dragged and dropped the button near the bottom border of the JPanel, maybe
even overlapping the bottom border.

I think my HD light was running at the time that this happened (I'd just saved
and Win2k was flushing the disk buffers or something like that.)

The behavior really looked like a race condition issue.  ie: the button up was
detected while the mouse was over the canvas, but the position for dropping the
button was taken later due to the latency introduced by the HD running.  I don't
know if this is possible, but if it is, it would explain the behavior...

(I do computer audio work in my spare time, so I see this sort of thing in that
line of work all the time.)


I tried your recommendation with a JPanel w/null layout but still can't 
recreate this problem... even with running unzip on a large zip file to keep my 
slow 4200rpm disk active. 

Part of reproducing this may have to do with timing and just the right 
environment (i.e. machine memory, speed, what's running at the time, etc.).
Since this may be somewhat rare in it's occurence, do you feel comfortable 
moving this to the "future" to look at... or do you feel this should be 
investigated in more detail (and fixed if a problem is found) for the 0.5.0 
release of VE? Or perhaps we can setup a NetMeeting so you can show me how to 
reproduce the problem. thx... Peter
Yeah; let's resolve it as "later" because I can't reliably reproduce it either.

Hopefully if we keep an eye out for it we'll learn more about it so we can
reproduce it more reliably.


Dave
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithStack>
    <WithOutStack>After setting the text and dragging the button around awhile, at one point it
appeared that the button just disappeared.  I couldn't find it anywhere.  Also,
everything in the Outline view disappeared.

I dragged another button onto the JPanel (starting the test from the beginning)
to see if I could reproduce the problem.  After changing the text, dragging the
button off the JPanel, then dragging it back on the JPanel, rather than the new
button being highlighted, the original one was highlighted, showing that it had
gotten dropped *behind* the JPanel.  It was entirely obscured by a good inch on
every side on my monitor.  After moving the JPanel, I was able to retrive the
"hiding" button.

I haven't been able to reproduce this behavior.
I tried but was unable to reproduce this problem. But I just want to make sure 
I'm going through the correct scenario. Since this is smoke test 01, I assume 
this is the case where you subclass a JPanel and randomly drop components onto 
the JPanel (which has a FlowLayout) and the canvas. Then move the components 
back and forth between the two to be sure they drop into the correct positions 
and the gen'd code is correct. I did this... just starting with a JButton and 
drag/dropping it all over.

One of observations I want to point out is initially when you open a new visual 
class (such as the JPanel), the position on the canvas is the default and not 
set until you actually move the JPanel on the canvas. And because of this the 
JPanel will "float" like a FlowLayout so if you drop another component above or 
to the left of it, it will move to another position when you drop the other 
component. Once you move the JPanel by explicitly dragging it to a position on 
the canvas, the position information is stored in a comment at the end of the 
class (e.g. //  @jve:visual-info  decl-index=0 visual-constraint="20,16") and 
it will no longer "float" since it has a fixed position. To reset it, just 
remove the comment in the sourece viewer.
This info is not used at runtime but simply at design time for the VE.

Perhaps this was some of the behavior you were seeing. But even when the 
components are dropped on the canvas, they should show up in the beans viewer.
If they disappear (is this what you meant "...everything in the Outline view 
disappeared..."?), then something went wrong and their should be some 
exceptions in the .log file.

For now I'll return this.. please reopen again if you experience this again. 
We'll try hammering it a bit to see if we can find what went wrong.
For what it's worth, 

- the JPanel was set to null layout (XYLayout) when this happened

- I dragged and dropped the button near the bottom border of the JPanel, maybe
even overlapping the bottom border.

I think my HD light was running at the time that this happened (I'd just saved
and Win2k was flushing the disk buffers or something like that.)

The behavior really looked like a race condition issue.  ie: the button up was
detected while the mouse was over the canvas, but the position for dropping the
button was taken later due to the latency introduced by the HD running.  I don't
know if this is possible, but if it is, it would explain the behavior...

(I do computer audio work in my spare time, so I see this sort of thing in that
line of work all the time.)


I tried your recommendation with a JPanel w/null layout but still can't 
recreate this problem... even with running unzip on a large zip file to keep my 
slow 4200rpm disk active. 

Part of reproducing this may have to do with timing and just the right 
environment (i.e. machine memory, speed, what's running at the time, etc.).
Since this may be somewhat rare in it's occurence, do you feel comfortable 
moving this to the "future" to look at... or do you feel this should be 
investigated in more detail (and fixed if a problem is found) for the 0.5.0 
release of VE? Or perhaps we can setup a NetMeeting so you can show me how to 
reproduce the problem. thx... Peter
Yeah; let's resolve it as "later" because I can't reliably reproduce it either.

Hopefully if we keep an eye out for it we'll learn more about it so we can
reproduce it more reliably.


Dave
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46888" />
    <CreationDate amount="2003-11-18 16:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>why 'Update Classpath' menu option is available on some plugin projects only</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have a large workspace with many plugin projects.
Frequently I have to perform update classpath on projects.
but in the java perspective, when I right click on some projects I see the option
Update Classpath but for other projects I dont see the option, for such projects
I have to select the plugin.xml and perform Update Classpath.

Is this a known problem ?
Only plug-in projects that hava a PDE nature have the context menu item.
PDE cannot clutter up projects that only have a Java nature with PDE-specific 
menu items.
Not every Java project is a plug-in project.
closed</WithStack>
    <WithOutStack>I have a large workspace with many plugin projects.
Frequently I have to perform update classpath on projects.
but in the java perspective, when I right click on some projects I see the option
Update Classpath but for other projects I dont see the option, for such projects
I have to select the plugin.xml and perform Update Classpath.

Is this a known problem ?
Only plug-in projects that hava a PDE nature have the context menu item.
PDE cannot clutter up projects that only have a Java nature with PDE-specific 
menu items.
Not every Java project is a plug-in project.
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46889" />
    <CreationDate amount="2003-11-18 16:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>ClasspathTests.testInvalidClasspath1 failing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="13">
        <Lines>
          <Line>1) Change spec and implmentation of IJobManager.join. Previously, it did this:</Line>
          <Line />
          <Line>- collect set of all running, waiting, and sleeping jobs in the family</Line>
          <Line>- wait until all jobs in that set complete</Line>
          <Line />
          <Line>This didn't account for jobs that reschedule themselves, or new jobs in that</Line>
          <Line>family that arrived after the join began.  The new behavior will be:</Line>
          <Line />
          <Line>- collect set of all running, waiting, and sleeping jobs in the family</Line>
          <Line>- if new jobs are scheduled that belong to the family, add them to the set</Line>
          <Line>- join returns when that set is empty</Line>
          <Line />
          <Line>2) Change autobuild cancelation behavior.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- there is no interesting background activity during the operation apart from</Line>
          <Line>autobuild</Line>
          <Line>- the test is modifying the .classpath and then checking for the presence of a</Line>
          <Line>marker</Line>
          <Line>- the test correctly waits for autobuild to complete before the checking the marker.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- collect set of all running, waiting, and sleeping jobs in the family</Line>
          <Line>- wait until all jobs in that set complete</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- collect set of all running, waiting, and sleeping jobs in the family</Line>
          <Line>- if new jobs are scheduled that belong to the family, add them to the set</Line>
          <Line>- join returns when that set is empty</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031118

Core team is investigating. The claim is that it's a concurrency problem (see
bug 46428).
I haven't come up with much so far...

- there is no interesting background activity during the operation apart from
autobuild
- the test is modifying the .classpath and then checking for the presence of a
marker
- the test correctly waits for autobuild to complete before the checking the marker.

- the failure is definitely timing related.  I've set up a script to keep
running the tests, and it only seems to fail in about 1 out of a hundred runs.

Interesting tidbit: this is the exact test that failed in JDT core when the
"join family" operation was not working (unfortunately there was never a bug
report for this, but there was email discussion between Philippe and I on
September 17. If I remove the join (waitForAutobuild), the test fails every
time.  This points to a failure in join but for the life of me I can't see how.
 Unfortunately I have to leave but I'll keep investigating tomorrow.  With any
luck it won't show up in tomorrow's builds ;)

My investigation was preempted by other issues, but I'll get back to this if I can.
I suspect this was also caused by the core bug described in bug 46428 comment
11, which was causing deltas to be fired when they shouldn't. Closing.  Please
reopen if it fails again.

Reopening as ClasspathTests.testDuplicateEntries() failed in I20031209 and this 
test is doing almost the same thing as ClasspathTests.testInvalidClasspath1(), 
namely modify the .classpath (introduce a problem), wait for autobuild, create 
a marker during auto build event, and check for the presence of the marker.
This needs to be fixed. 

We have to stop seeing comments like "This is the same old Platform Core intermittent failure" in the 
mailing list. It makes us look like idiots.

Either it is a bug, which Core needs to fix, or it represents a coding pattern which is no longer valid in 
R3.0, and the test (or the code that it is testing) needs to be changed. 
To recap the test, it does this:

Create a java project
Create a bogus .classpath file
Wait for autobuild to complete (using IJobManager.join)
Assert that the post autobuild listener added an error marker

Here is what happens when the job fails:

Project.create
  -&gt; snapshot job scheduled (delay: 0)
  -&gt; build job scheduled (delay: 100ms)
File.setContents
Begin join on autobuild
  -&gt; snapshot begins, canceling the waiting autobuild
Join method exits (since autobuild job ended)
  -&gt; snapshot ends, restarting the autobuild
Test assertion failure
  -&gt; Autobuild begins (too late)

I need to think about what the correct solution is
Interesting. Join on autobuild should only succeed if the workspace got built. 
If the autobuild job got canceled, then it should not be allowed to join, 
unless the workspace has no more changes to build.

Couldn't the cancel of autobuild immediately reschedule another one, a bit 
later ? So that clients waiting on autobuild still have something to wait on ? 
Alternatively, if clients are asking to join on autobuild, and you have none 
around, but have changes to build, then you could schedule one for free so they 
will wait.
*** Bug 52000 has been marked as a duplicate of this bug. ***
My plan is to make the following changes:

1) Change spec and implmentation of IJobManager.join. Previously, it did this:

  - collect set of all running, waiting, and sleeping jobs in the family
  - wait until all jobs in that set complete

This didn't account for jobs that reschedule themselves, or new jobs in that
family that arrived after the join began.  The new behavior will be:

  - collect set of all running, waiting, and sleeping jobs in the family
  - if new jobs are scheduled that belong to the family, add them to the set
  - join returns when that set is empty

2) Change autobuild cancelation behavior.

  - Currently, when autobuild is canceled, I don't bother adding it back to the
queue of waiting jobs.  The assumption is that whatever caused it to get
canceled will reschedule autobuild when it completes. This isn't nice for things
that are waiting for the autobuild to complete (both programmatic users of join,
and the poor user who is watching the progress view and is waiting for autobuild
to complete).

  - new invariant will be that autobuild is ALWAYS waiting or running as long as
the workspace is not in a fully built state.  If autobuild is canceled due to
further modifications to the workspace, the autobuild will be immediately
rescheduled.  This will make join() users happy, and will also look nicer from
an end user's perspective (who might have been  puzzled when the autobuild job
disappeared from the view before the workspace was fully built). For example,
this makes it possible to implement the idea (I think from Philippe) of a
JUnit-style indicator in the progress bar that only turns green when the
workspace is fully built.

The combination of these two changes should hopefully get rid of our "same old
platform core intermittent failure" for good (with no changes required in JDT
core tests).
I have released the two changes I describe above.  A dozen runs of
ClasspathTests after the changes does not find any failures. Last week it was
failing for me in about one out of five runs.
Marking as fixed.</WithStack>
    <WithOutStack>I20031118

Core team is investigating. The claim is that it's a concurrency problem (see
bug 46428).
I haven't come up with much so far...

- there is no interesting background activity during the operation apart from
autobuild
- the test is modifying the .classpath and then checking for the presence of a
marker
- the test correctly waits for autobuild to complete before the checking the marker.

- the failure is definitely timing related.  I've set up a script to keep
running the tests, and it only seems to fail in about 1 out of a hundred runs.

Interesting tidbit: this is the exact test that failed in JDT core when the
"join family" operation was not working (unfortunately there was never a bug
report for this, but there was email discussion between Philippe and I on
September 17. If I remove the join (waitForAutobuild), the test fails every
time.  This points to a failure in join but for the life of me I can't see how.
 Unfortunately I have to leave but I'll keep investigating tomorrow.  With any
luck it won't show up in tomorrow's builds ;)

My investigation was preempted by other issues, but I'll get back to this if I can.
I suspect this was also caused by the core bug described in bug 46428 comment
11, which was causing deltas to be fired when they shouldn't. Closing.  Please
reopen if it fails again.

Reopening as ClasspathTests.testDuplicateEntries() failed in I20031209 and this 
test is doing almost the same thing as ClasspathTests.testInvalidClasspath1(), 
namely modify the .classpath (introduce a problem), wait for autobuild, create 
a marker during auto build event, and check for the presence of the marker.
This needs to be fixed. 

We have to stop seeing comments like "This is the same old Platform Core intermittent failure" in the 
mailing list. It makes us look like idiots.

Either it is a bug, which Core needs to fix, or it represents a coding pattern which is no longer valid in 
R3.0, and the test (or the code that it is testing) needs to be changed. 
To recap the test, it does this:

Create a java project
Create a bogus .classpath file
Wait for autobuild to complete (using IJobManager.join)
Assert that the post autobuild listener added an error marker

Here is what happens when the job fails:

Project.create
  -&gt; snapshot job scheduled (delay: 0)
  -&gt; build job scheduled (delay: 100ms)
File.setContents
Begin join on autobuild
  -&gt; snapshot begins, canceling the waiting autobuild
Join method exits (since autobuild job ended)
  -&gt; snapshot ends, restarting the autobuild
Test assertion failure
  -&gt; Autobuild begins (too late)

I need to think about what the correct solution is
Interesting. Join on autobuild should only succeed if the workspace got built. 
If the autobuild job got canceled, then it should not be allowed to join, 
unless the workspace has no more changes to build.

Couldn't the cancel of autobuild immediately reschedule another one, a bit 
later ? So that clients waiting on autobuild still have something to wait on ? 
Alternatively, if clients are asking to join on autobuild, and you have none 
around, but have changes to build, then you could schedule one for free so they 
will wait.
*** Bug 52000 has been marked as a duplicate of this bug. ***
My plan is to make the following changes:

1) Change spec and implmentation of IJobManager.join. Previously, it did this:

  - collect set of all running, waiting, and sleeping jobs in the family
  - wait until all jobs in that set complete

This didn't account for jobs that reschedule themselves, or new jobs in that
family that arrived after the join began.  The new behavior will be:

  - collect set of all running, waiting, and sleeping jobs in the family
  - if new jobs are scheduled that belong to the family, add them to the set
  - join returns when that set is empty

2) Change autobuild cancelation behavior.

  - Currently, when autobuild is canceled, I don't bother adding it back to the
queue of waiting jobs.  The assumption is that whatever caused it to get
canceled will reschedule autobuild when it completes. This isn't nice for things
that are waiting for the autobuild to complete (both programmatic users of join,
and the poor user who is watching the progress view and is waiting for autobuild
to complete).

  - new invariant will be that autobuild is ALWAYS waiting or running as long as
the workspace is not in a fully built state.  If autobuild is canceled due to
further modifications to the workspace, the autobuild will be immediately
rescheduled.  This will make join() users happy, and will also look nicer from
an end user's perspective (who might have been  puzzled when the autobuild job
disappeared from the view before the workspace was fully built). For example,
this makes it possible to implement the idea (I think from Philippe) of a
JUnit-style indicator in the progress bar that only turns green when the
workspace is fully built.

The combination of these two changes should hopefully get rid of our "same old
platform core intermittent failure" for good (with no changes required in JDT
core tests).
I have released the two changes I describe above.  A dozen runs of
ClasspathTests after the changes does not find any failures. Last week it was
failing for me in about one out of five runs.
Marking as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46890" />
    <CreationDate amount="2003-11-18 16:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Link with editor button does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build: I-20031118
I'm not sure what the Link with editor button in the outline view of a Java 
editor is supposed to do.
Whether it's pressed or not, if you select an element in the view, it will 
always reset the highlight and selected range in the editor.
Link with Editor is available in several views and it means:

Link from editor to view

i.e. if this is checked the view's selection will be set in the view based on
the current editor (selection). For normal views this means clicking on the
editor tab will select the file and for the Outline view it means to select the
element where the caret is.

duh! :) Thanks.</WithStack>
    <WithOutStack>Build: I-20031118
I'm not sure what the Link with editor button in the outline view of a Java 
editor is supposed to do.
Whether it's pressed or not, if you select an element in the view, it will 
always reset the highlight and selected range in the editor.
Link with Editor is available in several views and it means:

Link from editor to view

i.e. if this is checked the view's selection will be set in the view based on
the current editor (selection). For normal views this means clicking on the
editor tab will select the file and for the Outline view it means to select the
element where the caret is.

duh! :) Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46891" />
    <CreationDate amount="2003-11-18 16:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Font] [ViewMgmt] Want standard 'view' font</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>We need to be able to change the font used in the Debug Views (notably the one 
with the stack frames) and for variables. 

Jared Burns asked me to enter a bug report saying "I believe our views *should* 
be using the font of the parent composite that's passed to them. But I just 
took a quick look through the code for the Variables View and it looks like 
we're neglecting to do this."

Our thought is that the font used should be on the list of fonts in the 
workbench preferences (along with the debug console font). Or it should use the 
Text Font from that list. Or there should be a way for us to set/change the 
font from the DebugTarget (or other appropriate place).
How do you configure this for other views?
We have our own Debug "Listener" view. It is like a console and provides a 
command-line interpreter for the Prolog language. So if a user wants to develop 
a Prolog module that uses special symbols (like set operators) or other 
languages, the output is displayed in our Listener View. We set the font for it 
from the text font in the workbench preferences.

Sorry, my question wasn't clear.

Your request is for a way to configure the font used in the Debug and Variables 
views. But these views are just "standard" Eclipse views. My question is, how 
do you configure the font in other views?

If the answer is, "I can't", then this report should probably be moved to 
Platform-UI. If we add support to set the font of views, that support should be 
added to *all* views, not just the two in this case.
Select Window | Preferences | Workbench | Fonts. You can specify the:
Text Font (for displaying source files)
Debug Console Font
Dialog Font (for dialog box text)
Detail Pane Text Font (The detail pane text font is used in the detail panes of 
debug views)

All of these are used in the debugging perspective. So I think there should be 
an additional entry under Fonts named:
Debug View Text (or something like that)

and it would control the font used for the stack frames and the variables, 
breakpoints, expressions and display.

Or the "Text Font" should be used for same.

It seems strange I can set the font for the detail pane, but not the main 
windows of the Debug Views.

Does that help?
Our take on this is that there should be a "view font" that can be applied to 
all views (tree views &amp; lists) - the package navigator, resource navigator, 
debug view... etc. It should not be somethings specific to the debugger.
We're happy with that. Our primary objective is that the user can set it within 
Eclipse like they can set the font for so many other things.

Do I need to make another bug, or will someone assign this to the right place
(s).
This is a feature request for a standard "view" font (i.e the fonts used in 
tree views in the workbench).
Changed the Summary to reflect what this PR now represents.

I would argue this is a bug for these reasons: 1) The user has control over all 
the other fonts in Eclipse and 2) The debugger (which works on Unicode source 
files) is unusable for many international users and anyone using logic or other 
special symbols in their programs because the stackframes and variables 
names/values lose all the non-ASCII characters and turn them into boxes.

I hope you will reconsider a means for us or the user to change the font as 
soon as practical.
Can you not change the overall font to an appropriate unicode font in the 
Windows appearance settings?

The user does have control over all other fonts - they are taken directly from 
the operating system. We decided that there would be no "View Font" as this is 
determined from user settings outside of Eclipse.

In Windows 2000 this is the "Message Text" font of your windows properties.
Thanks that works. Where is the corresponding font for Linux/Unix?</WithStack>
    <WithOutStack>We need to be able to change the font used in the Debug Views (notably the one 
with the stack frames) and for variables. 

Jared Burns asked me to enter a bug report saying "I believe our views *should* 
be using the font of the parent composite that's passed to them. But I just 
took a quick look through the code for the Variables View and it looks like 
we're neglecting to do this."

Our thought is that the font used should be on the list of fonts in the 
workbench preferences (along with the debug console font). Or it should use the 
Text Font from that list. Or there should be a way for us to set/change the 
font from the DebugTarget (or other appropriate place).
How do you configure this for other views?
We have our own Debug "Listener" view. It is like a console and provides a 
command-line interpreter for the Prolog language. So if a user wants to develop 
a Prolog module that uses special symbols (like set operators) or other 
languages, the output is displayed in our Listener View. We set the font for it 
from the text font in the workbench preferences.

Sorry, my question wasn't clear.

Your request is for a way to configure the font used in the Debug and Variables 
views. But these views are just "standard" Eclipse views. My question is, how 
do you configure the font in other views?

If the answer is, "I can't", then this report should probably be moved to 
Platform-UI. If we add support to set the font of views, that support should be 
added to *all* views, not just the two in this case.
Select Window | Preferences | Workbench | Fonts. You can specify the:
Text Font (for displaying source files)
Debug Console Font
Dialog Font (for dialog box text)
Detail Pane Text Font (The detail pane text font is used in the detail panes of 
debug views)

All of these are used in the debugging perspective. So I think there should be 
an additional entry under Fonts named:
Debug View Text (or something like that)

and it would control the font used for the stack frames and the variables, 
breakpoints, expressions and display.

Or the "Text Font" should be used for same.

It seems strange I can set the font for the detail pane, but not the main 
windows of the Debug Views.

Does that help?
Our take on this is that there should be a "view font" that can be applied to 
all views (tree views &amp; lists) - the package navigator, resource navigator, 
debug view... etc. It should not be somethings specific to the debugger.
We're happy with that. Our primary objective is that the user can set it within 
Eclipse like they can set the font for so many other things.

Do I need to make another bug, or will someone assign this to the right place
(s).
This is a feature request for a standard "view" font (i.e the fonts used in 
tree views in the workbench).
Changed the Summary to reflect what this PR now represents.

I would argue this is a bug for these reasons: 1) The user has control over all 
the other fonts in Eclipse and 2) The debugger (which works on Unicode source 
files) is unusable for many international users and anyone using logic or other 
special symbols in their programs because the stackframes and variables 
names/values lose all the non-ASCII characters and turn them into boxes.

I hope you will reconsider a means for us or the user to change the font as 
soon as practical.
Can you not change the overall font to an appropriate unicode font in the 
Windows appearance settings?

The user does have control over all other fonts - they are taken directly from 
the operating system. We decided that there would be no "View Font" as this is 
determined from user settings outside of Eclipse.

In Windows 2000 this is the "Message Text" font of your windows properties.
Thanks that works. Where is the corresponding font for Linux/Unix?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46892" />
    <CreationDate amount="2003-11-18 16:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JVELAYT01] Show distribute Box state not retained</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Show the alignment dialog</Line>
          <Line>2) Select some stuff</Line>
          <Line>3) Click the "Show distribute box" button</Line>
          <Line>4) Close the alignment dialog</Line>
          <Line>5) Reopen the alignment dialog</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>1) Show the alignment dialog
2) Select some stuff
3) Click the "Show distribute box" button
4) Close the alignment dialog
5) Reopen the alignment dialog

The "Show distribute box" button is no longer in the "on" position (pressed).
Problem was reproduced very easily... not a major problem but a minor usability 
problem. If you toggle the "Show distribute box" button twice, it will turn off 
the box. 

Hmmmm...I thought the DistributionController persisted this someplace. Sounds 
like the ShowDistributionBoxAction is picking this up. Need to look into this.

ShowDistributeBoxAction.setEditorPart(EditorPart) is responsible for 
check/unchecking this action based on the DisributeContoller.isBoxVisible() 
state. 

This method was originally overridden from GEF and the method has been replaced 
by GEF with setWorkBenchPart.

So I moved the code to this method in this action and everything's working 
again. Also removed obsolete method setEditorPart.
Verified in 0.5.0RC2
0.5.0 is out, so these are now closed.</WithStack>
    <WithOutStack>1) Show the alignment dialog
2) Select some stuff
3) Click the "Show distribute box" button
4) Close the alignment dialog
5) Reopen the alignment dialog

The "Show distribute box" button is no longer in the "on" position (pressed).
Problem was reproduced very easily... not a major problem but a minor usability 
problem. If you toggle the "Show distribute box" button twice, it will turn off 
the box. 

Hmmmm...I thought the DistributionController persisted this someplace. Sounds 
like the ShowDistributionBoxAction is picking this up. Need to look into this.

ShowDistributeBoxAction.setEditorPart(EditorPart) is responsible for 
check/unchecking this action based on the DisributeContoller.isBoxVisible() 
state. 

This method was originally overridden from GEF and the method has been replaced 
by GEF with setWorkBenchPart.

So I moved the code to this method in this action and everything's working 
again. Also removed obsolete method setEditorPart.
Verified in 0.5.0RC2
0.5.0 is out, so these are now closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46893" />
    <CreationDate amount="2003-11-18 16:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JVELAYT01]No resize feedback is displayed when grid is on</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>No resize feedback is displayed when the grid is turned on.
The grid capability was an extra bit of function added in the last minute for 
5.1 and needs lot of additional usability enhancements. One of these is 
providing feedback when dropping new components or moving components in the 
null layout grid.

Another enhancement is the capability to change the distance between the grid 
dots both in the horizontal and vertical direction... and provide a margin 
around the grid... sort of a "no-component zone" margin. (In fact.. a 
GridProperties dialog was released into the current code base to do this but 
isn't ready for prime time so is not hooked to anything yet).
For now we can look at adding this capability into our 1.0.0 base.
This function was implemented in 1.1.
There is grid spacing available on the Customize Layout window, Snap to grid as
a popup as well. Feedback shows when moving, resizing, and dropping.

I think it was in the M2 driver but definitely in the latest integration drivers.</WithStack>
    <WithOutStack>No resize feedback is displayed when the grid is turned on.
The grid capability was an extra bit of function added in the last minute for 
5.1 and needs lot of additional usability enhancements. One of these is 
providing feedback when dropping new components or moving components in the 
null layout grid.

Another enhancement is the capability to change the distance between the grid 
dots both in the horizontal and vertical direction... and provide a margin 
around the grid... sort of a "no-component zone" margin. (In fact.. a 
GridProperties dialog was released into the current code base to do this but 
isn't ready for prime time so is not hooked to anything yet).
For now we can look at adding this capability into our 1.0.0 base.
This function was implemented in 1.1.
There is grid spacing available on the Customize Layout window, Snap to grid as
a popup as well. Feedback shows when moving, resizing, and dropping.

I think it was in the M2 driver but definitely in the latest integration drivers.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46894" />
    <CreationDate amount="2003-11-18 16:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>&gt;20 error dialogs at once plus &gt; 20MB in .log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="9">
      <Stacktrace timestamp="1437341074496">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock(DeadlockDetector.java:388)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.LockManager.addLockWaitThread(LockManager.java:100)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:151)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.beginOperation(EclipseSynchronizer.java:539)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getDirtyIndicator(EclipseSynchronizer.java:1443)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getModificationState(EclipseSynchronizer.java:1518)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:346)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange(CVSWorkspaceSubscriber.java:244)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync(CVSWorkspaceSubscriber.java:226)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit(CVSWorkspaceSubscriber.java:201)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)</Frame>
          <Frame depth="14">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)</Frame>
          <Frame depth="15">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="16">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="17">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="18">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="19">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="20">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="21">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="22">org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)</Frame>
          <Frame depth="23">org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)</Frame>
          <Frame depth="25">org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)</Frame>
          <Frame depth="26">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:198)</Frame>
          <Frame depth="27">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)</Frame>
          <Frame depth="28">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)</Frame>
          <Frame depth="29">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)</Frame>
          <Frame depth="30">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="31">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getDirtyIndicator(EclipseSynchronizer.java:1446)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getModificationState(EclipseSynchronizer.java:1518)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:346)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange(CVSWorkspaceSubscriber.java:244)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync(CVSWorkspaceSubscriber.java:226)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit(CVSWorkspaceSubscriber.java:201)</Frame>
          <Frame depth="9">org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)</Frame>
          <Frame depth="11">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)</Frame>
          <Frame depth="12">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="13">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="14">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="15">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="16">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="17">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="18">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="19">org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)</Frame>
          <Frame depth="20">org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)</Frame>
          <Frame depth="21">org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)</Frame>
          <Frame depth="22">org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)</Frame>
          <Frame depth="23">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:198)</Frame>
          <Frame depth="24">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)</Frame>
          <Frame depth="25">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)</Frame>
          <Frame depth="26">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)</Frame>
          <Frame depth="27">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="28">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getSyncBytes(EclipseSynchronizer.java:300)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getSyncBytes(BaseSynchronizer.java:37)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.syncinfo.OptimizedRemoteSynchronizer.getSyncBytes(OptimizedRemoteSynchronizer.java:43)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.internalResourceSyncInfoChanged(CVSWorkspaceSubscriber.java:83)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.resourceSyncInfoChanged(CVSWorkspaceSubscriber.java:73)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$1.notify(ResourceStateChangeListeners.java:97)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$Notification.run(ResourceStateChangeListeners.java:54)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$Notification.run(ResourceStateChangeListeners.java:51)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners.fireNotification(ResourceStateChangeListeners.java:75)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners.resourceSyncInfoChanged(ResourceStateChangeListeners.java:95)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.ignoreFilesChanged(EclipseSynchronizer.java:626)</Frame>
          <Frame depth="16">org.eclipse.team.internal.ccvs.core.syncinfo.DeferredResourceChangeHandler.dispatchEvents(DeferredResourceChangeHandler.java:74)</Frame>
          <Frame depth="17">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:253)</Frame>
          <Frame depth="18">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="19">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason>Lock P/org.eclipse.text is involved in deadlock
but is not owned by any thread.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.jobs.DeadlockDetector.getThreadOwningLock(DeadlockDetector.java:145)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock(DeadlockDetector.java:381)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.LockManager.addLockWaitThread(LockManager.java:100)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.reportBlocked(ImplicitJobs.java:160)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:97)</Frame>
          <Frame depth="5">org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:232)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:114)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:197)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)</Frame>
          <Frame depth="10">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)</Frame>
          <Frame depth="11">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)</Frame>
          <Frame depth="8">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="25">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="26">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="31">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="32">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)</Frame>
          <Frame depth="33">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)</Frame>
          <Frame depth="34">org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)</Frame>
          <Frame depth="35">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)</Frame>
          <Frame depth="36">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)</Frame>
          <Frame depth="37">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="55">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="57">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="58">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="60">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="61">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="62">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)</Frame>
          <Frame depth="8">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="25">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="26">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="31">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="32">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="33">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)</Frame>
          <Frame depth="34">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="39">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="40">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="42">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="43">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="44">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="45">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="46">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="47">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="48">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="49">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="50">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="51">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="52">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="57">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="58">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)</Frame>
          <Frame depth="59">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)</Frame>
          <Frame depth="60">org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)</Frame>
          <Frame depth="61">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)</Frame>
          <Frame depth="62">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)</Frame>
          <Frame depth="63">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)</Frame>
          <Frame depth="64">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)</Frame>
          <Frame depth="73">org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="75">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="76">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)</Frame>
          <Frame depth="77">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="79">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="81">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="82">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="83">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="84">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="85">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="86">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="87">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="88">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="89">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="90">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="91">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored(EclipseFolder.java:264)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate(CVSLightweightDecorator.java:203)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:155)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:212)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:195)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:236)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored(EclipseFolder.java:264)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate(CVSLightweightDecorator.java:203)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:155)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:212)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:195)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:236)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074496">
        <Exception>org.eclipse.core.internal.runtime.AssertionFailedException</Exception>
        <Reason>assertion failed:
Lock cannot be released because it is not owned.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)</Frame>
          <Frame depth="8">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="25">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="26">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$2.run(TeamSubscriberParticipantLabelProvider.java:75)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="31">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="32">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="33">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)</Frame>
          <Frame depth="34">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="39">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="40">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="42">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="43">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="44">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="45">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="46">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="47">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="48">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="49">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="50">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="51">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="52">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="57">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="58">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="59">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)</Frame>
          <Frame depth="60">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="61">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)</Frame>
          <Frame depth="62">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)</Frame>
          <Frame depth="63">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)</Frame>
          <Frame depth="64">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="65">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="66">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)</Frame>
          <Frame depth="67">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)</Frame>
          <Frame depth="68">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)</Frame>
          <Frame depth="69">org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)</Frame>
          <Frame depth="70">org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)</Frame>
          <Frame depth="71">org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)</Frame>
          <Frame depth="72">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="73">org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)</Frame>
          <Frame depth="74">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="75">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="76">org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)</Frame>
          <Frame depth="77">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)</Frame>
          <Frame depth="78">org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)</Frame>
          <Frame depth="79">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="80">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="81">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="82">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="83">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="84">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)</Frame>
          <Frame depth="85">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)</Frame>
          <Frame depth="86">org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)</Frame>
          <Frame depth="87">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)</Frame>
          <Frame depth="88">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)</Frame>
          <Frame depth="89">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)</Frame>
          <Frame depth="90">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)</Frame>
          <Frame depth="91">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)</Frame>
          <Frame depth="92">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="93">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="94">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="95">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="96">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="97">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="98">org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)</Frame>
          <Frame depth="99">org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)</Frame>
          <Frame depth="100">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="101">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="102">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)</Frame>
          <Frame depth="103">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="104">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="105">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="106">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="107">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="108">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="109">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="110">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="111">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="112">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="113">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="114">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="115">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="116">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="117">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="5">
      <Enumeration lines="4">
        <Lines>
          <Line>1. started my old workspace (auto-build enabled)</Line>
          <Line>2. refreshed the workspace (F5)</Line>
          <Line>==&gt; got over 20 error dialogs (saying see error log) and the .log was larger</Line>
          <Line>than 20MB. It starts like this:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) Deadlock was detected (see bug 46960)</Line>
          <Line>2) Invalid assert was causing failure in finally block</Line>
          <Line>3) Cascading assertion error causing lock states to be invalid</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1. Set up a connection to dev.eclipse.org and begin a checkout of 15 projects.</Line>
          <Line>2. While the projects are being checked out in the background, use the PDE "External Plug-ins and</Line>
          <Line>Fragments" to import all plug-ins except the 15 that are being imported from CVS.</Line>
          <Line>3. The CVS checkout fails with a deadlock like the one reported above.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="28">
        <Lines>
          <Line>1) Job1 acquires P1</Line>
          <Line>2) Job2 acquires P2</Line>
          <Line>3) Job3 waits on Root (which is conflicting with P1, so Job3 is really waiting</Line>
          <Line>on P1 in the graph).  Graph is now:</Line>
          <Line />
          <Line>P1   P2</Line>
          <Line>J1  1     0</Line>
          <Line>J2  0     1</Line>
          <Line>J3  -1    0</Line>
          <Line />
          <Line>4) Job4 waits on P2</Line>
          <Line>5) Job1 releases P1</Line>
          <Line>6) Job2 releases P2</Line>
          <Line>7) Job3 can now proceed.  Replaces P1 in graph with Root</Line>
          <Line />
          <Line>Root   P2</Line>
          <Line>J3    1      0</Line>
          <Line>J4    0     -1</Line>
          <Line />
          <Line>8) Job5 waits on P2, which conflicts with Root, so Job5 is waiting for Root in graph</Line>
          <Line />
          <Line>Root   P2</Line>
          <Line>J3    1      0</Line>
          <Line>J4    0     -1</Line>
          <Line>J5   -1      0</Line>
          <Line />
          <Line>9) Job3 releases Root</Line>
          <Line>10) Job4 acquires P2, but is recorded in graph as Root since they conflict</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Assume rules Root, P1, P2</Line>
          <Line>- Root conflicts with P1 and P2</Line>
          <Line>- P1 and P2 do not conflict with each other</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031118

1. started my old workspace (auto-build enabled)
2. refreshed the workspace (F5)
==&gt; got over 20 error dialogs (saying see error log) and the .log was larger
than 20MB. It starts like this:

!SESSION Nov 18, 2003 22:13:07.21 ----------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -update -showlocation -data
c:\eclipse\workspaces\Development_2_2\plugins -install
file:C:/eclipse/drops/N20031114/
!ENTRY org.eclipse.jdt.debug 4 5010 Nov 18, 2003 22:13:07.21
!MESSAGE At least one target failed to drop to frame after successful hot code
replace.
!SUBENTRY 1 org.eclipse.jdt.debug 4 100 Nov 18, 2003 22:13:07.21
!MESSAGE Unable to retrieve stack frame - thread not suspended.
!SESSION Nov 18, 2003 22:36:52.205 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -update -showlocation -data
c:\eclipse\workspaces\Development_2_2\plugins -install
file:C:/eclipse/drops/I20031118/
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE Deadlock detected. All locks owned by thread Worker-2 will be suspended.
!STACK 0
java.lang.IllegalStateException
	at
org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock(DeadlockDetector.java:388)
	at
org.eclipse.core.internal.jobs.LockManager.addLockWaitThread(LockManager.java:100)
	at org.eclipse.core.internal.jobs.OrderedLock.doAcquire(OrderedLock.java:151)
	at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:98)
	at org.eclipse.core.internal.jobs.OrderedLock.acquire(OrderedLock.java:74)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.beginOperation(EclipseSynchronizer.java:539)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getDirtyIndicator(EclipseSynchronizer.java:1443)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getModificationState(EclipseSynchronizer.java:1518)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:346)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange(CVSWorkspaceSubscriber.java:244)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync(CVSWorkspaceSubscriber.java:226)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit(CVSWorkspaceSubscriber.java:201)
	at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)
	at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:198)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!SUBENTRY 1 org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE ThreadWorker-2 has locks: P/org.eclipse.search and is waiting for lock
SpecialLock(2)
!SUBENTRY 1 org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE ThreadWorker-3 has locks: P/com.oti.zrh.eclipse.doc.tools-feature,
SpecialLock(2) and is waiting for lock P/org.eclipse.search
!ENTRY org.eclipse.core.resources 4 566 Nov 18, 2003 22:36:52.225
!MESSAGE An error occurred while traversing resources.
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getDirtyIndicator(EclipseSynchronizer.java:1446)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getModificationState(EclipseSynchronizer.java:1518)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:346)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.hasOutgoingChange(CVSWorkspaceSubscriber.java:244)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.isOutOfSync(CVSWorkspaceSubscriber.java:226)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit(CVSWorkspaceSubscriber.java:201)
	at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)
	at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)
	at
org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:198)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.team.cvs.core 4 2 Nov 18, 2003 22:36:52.235
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.team.cvs.core".
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getSyncBytes(EclipseSynchronizer.java:300)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getSyncBytes(BaseSynchronizer.java:37)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.OptimizedRemoteSynchronizer.getSyncBytes(OptimizedRemoteSynchronizer.java:43)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.internalResourceSyncInfoChanged(CVSWorkspaceSubscriber.java:83)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.resourceSyncInfoChanged(CVSWorkspaceSubscriber.java:73)
	at
org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$1.notify(ResourceStateChangeListeners.java:97)
	at
org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$Notification.run(ResourceStateChangeListeners.java:54)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners$Notification.run(ResourceStateChangeListeners.java:51)
	at
org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners.fireNotification(ResourceStateChangeListeners.java:75)
	at
org.eclipse.team.internal.ccvs.core.util.ResourceStateChangeListeners.resourceSyncInfoChanged(ResourceStateChangeListeners.java:95)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.ignoreFilesChanged(EclipseSynchronizer.java:626)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.DeferredResourceChangeHandler.dispatchEvents(DeferredResourceChangeHandler.java:74)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:253)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:55.347
!MESSAGE An internal error occurred during: "Updating synchronization states in
the Synchronize view.".
!STACK 0
java.lang.IllegalStateException: Lock P/org.eclipse.text is involved in deadlock
but is not owned by any thread.
	at
org.eclipse.core.internal.jobs.DeadlockDetector.getThreadOwningLock(DeadlockDetector.java:145)
	at
org.eclipse.core.internal.jobs.DeadlockDetector.reportDeadlock(DeadlockDetector.java:381)
	at
org.eclipse.core.internal.jobs.LockManager.addLockWaitThread(LockManager.java:100)
	at
org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.reportBlocked(ImplicitJobs.java:160)
	at
org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:97)
	at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:232)
	at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:114)
	at
org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync(CVSWorkspaceSubscriber.java:197)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync(SubscriberEventHandler.java:183)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:291)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)
	at
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)
	at org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
	at org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)
	at
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)
	at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)
	at
org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)
	at org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
	at org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
!ENTRY org.eclipse.ui.workbench 4 2 Nov 18, 2003 22:36:55.417
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored(EclipseFolder.java:264)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate(CVSLightweightDecorator.java:203)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:155)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:212)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:195)
	at
org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:236)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 22:36:55.437
!MESSAGE Exception in Decorator
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 22:36:55.437
!MESSAGE assertion failed: Lock cannot be released because it is not owned.
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored(EclipseFolder.java:264)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate(CVSLightweightDecorator.java:203)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:155)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:212)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:195)
	at
org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:236)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.447
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:192)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.getTagToShow(CVSLightweightDecorator.java:321)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorateTextLabel(CVSLightweightDecorator.java:261)
	at
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSynchronizeViewPage$1.decorateText(CVSSynchronizeViewPage.java:99)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.getText(TeamSubscriberParticipantLabelProvider.java:117)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$2.run(TeamSubscriberParticipantLabelProvider.java:75)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)
	at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)
	at
org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)
	at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)
	at
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.handleException(AbstractTreeViewer.java:90)
	at
org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:420)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1129)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1029)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1044)
	at
org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:1160)
	at
org.eclipse.jface.viewers.ContentViewer.handleLabelProviderChanged(ContentViewer.java:161)
	at
org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:650)
	at
org.eclipse.team.internal.ui.synchronize.views.SyncTreeViewer.handleLabelProviderChanged(SyncTreeViewer.java:88)
	at
org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)
	at org.eclipse.jface.viewers.LabelProvider$1.run(LabelProvider.java:65)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.jface.viewers.LabelProvider.fireLabelProviderChanged(LabelProvider.java:63)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider.access$1(TeamSubscriberParticipantLabelProvider.java:1)
	at
org.eclipse.team.ui.synchronize.TeamSubscriberParticipantLabelProvider$3.run(TeamSubscriberParticipantLabelProvider.java:85)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)
	at org.eclipse.jdt.ui.actions.RefreshAction.run(RefreshAction.java:137)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:328)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:925)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
	at org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:3548)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2960)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
This is an issue with the locking mechanism.
A number of problems:

1) Deadlock was detected (see bug 46960)
2) Invalid assert was causing failure in finally block
3) Cascading assertion error causing lock states to be invalid

Fixed 2) and 3).  Deadlock remains and VCM team is investigating.
The current fix seems to make it less likely but still possible (we had about 20
parallel checkouts before it failed).
*** Bug 46907 has been marked as a duplicate of this bug. ***
*** Bug 46960 has been marked as a duplicate of this bug. ***
*** Bug 46878 has been marked as a duplicate of this bug. ***
I got this on 200311192030 with the following steps:

1. Set up a connection to dev.eclipse.org and begin a checkout of 15 projects.
2. While the projects are being checked out in the background, use the PDE "External Plug-ins and 
Fragments" to import all plug-ins except the 15 that are being imported from CVS.
3. The CVS checkout fails with a deadlock like the one reported above.

Stack traces available.
Here are the steps to reproduce:

- Assume rules Root, P1, P2
- Root conflicts with P1 and P2
- P1 and P2 do not conflict with each other

1) Job1 acquires P1
2) Job2 acquires P2
3) Job3 waits on Root (which is conflicting with P1, so Job3 is really waiting
on P1 in the graph).  Graph is now:

    P1   P2
J1  1     0
J2  0     1
J3  -1    0

4) Job4 waits on P2
5) Job1 releases P1
6) Job2 releases P2
7) Job3 can now proceed.  Replaces P1 in graph with Root

     Root   P2
J3    1      0
J4    0     -1

8) Job5 waits on P2, which conflicts with Root, so Job5 is waiting for Root in graph

     Root   P2
J3    1      0
J4    0     -1
J5   -1      0

9) Job3 releases Root
10) Job4 acquires P2, but is recorded in graph as Root since they conflict

-&gt; Now graph is in a bad state.  It looks like this:

    Root   P2
J4   1      -1
J5   -1     0

The J4/P2 value is stale and will never be removed!
Leaving open for now because further testing is required.  However, a fix and
regression tests have been submitted for 3.0 M5.
An improved fix has been released and it has been running for a week or so with
no further problems.  New regression tests have been added to test these
conflicting rule cases.</WithStack>
    <WithOutStack>I20031118

1. started my old workspace (auto-build enabled)
2. refreshed the workspace (F5)
==&gt; got over 20 error dialogs (saying see error log) and the .log was larger
than 20MB. It starts like this:

!SESSION Nov 18, 2003 22:13:07.21 ----------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -update -showlocation -data
c:\eclipse\workspaces\Development_2_2\plugins -install
file:C:/eclipse/drops/N20031114/
!ENTRY org.eclipse.jdt.debug 4 5010 Nov 18, 2003 22:13:07.21
!MESSAGE At least one target failed to drop to frame after successful hot code
replace.
!SUBENTRY 1 org.eclipse.jdt.debug 4 100 Nov 18, 2003 22:13:07.21
!MESSAGE Unable to retrieve stack frame - thread not suspended.
!SESSION Nov 18, 2003 22:36:52.205 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -update -showlocation -data
c:\eclipse\workspaces\Development_2_2\plugins -install
file:C:/eclipse/drops/I20031118/
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE Deadlock detected. All locks owned by thread Worker-2 will be suspended.
!STACK 0
!SUBENTRY 1 org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE ThreadWorker-2 has locks: P/org.eclipse.search and is waiting for lock
SpecialLock(2)
!SUBENTRY 1 org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:52.215
!MESSAGE ThreadWorker-3 has locks: P/com.oti.zrh.eclipse.doc.tools-feature,
SpecialLock(2) and is waiting for lock P/org.eclipse.search
!ENTRY org.eclipse.core.resources 4 566 Nov 18, 2003 22:36:52.225
!MESSAGE An error occurred while traversing resources.
!STACK 0
!ENTRY org.eclipse.team.cvs.core 4 2 Nov 18, 2003 22:36:52.235
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.team.cvs.core".
!STACK 0
!ENTRY org.eclipse.core.runtime 4 2 Nov 18, 2003 22:36:55.347
!MESSAGE An internal error occurred during: "Updating synchronization states in
the Synchronize view.".
!STACK 0
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
!ENTRY org.eclipse.ui.workbench 4 2 Nov 18, 2003 22:36:55.417
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 22:36:55.437
!MESSAGE Exception in Decorator
!ENTRY org.eclipse.ui 4 4 Nov 18, 2003 22:36:55.437
!MESSAGE assertion failed: Lock cannot be released because it is not owned.
!STACK 0
org.eclipse.core.internal.runtime.AssertionFailedException: assertion failed:
Lock cannot be released because it is not owned.
	at org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:101)
	at org.eclipse.core.internal.jobs.OrderedLock.release(OrderedLock.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endOperation(EclipseSynchronizer.java:546)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:177)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder(EclipseFolder.java:222)
	at
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored(EclipseFolder.java:264)
	at
org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate(CVSLightweightDecorator.java:203)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:155)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)
	at org.eclipse.core.runtime.Platform.run(Platform.java:464)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:212)
	at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:195)
	at
org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:236)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.jface 4 2 Nov 18, 2003 22:36:55.447
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0

This is an issue with the locking mechanism.
A number of problems:

1) Deadlock was detected (see bug 46960)
2) Invalid assert was causing failure in finally block
3) Cascading assertion error causing lock states to be invalid

Fixed 2) and 3).  Deadlock remains and VCM team is investigating.
The current fix seems to make it less likely but still possible (we had about 20
parallel checkouts before it failed).
*** Bug 46907 has been marked as a duplicate of this bug. ***
*** Bug 46960 has been marked as a duplicate of this bug. ***
*** Bug 46878 has been marked as a duplicate of this bug. ***
I got this on 200311192030 with the following steps:

1. Set up a connection to dev.eclipse.org and begin a checkout of 15 projects.
2. While the projects are being checked out in the background, use the PDE "External Plug-ins and 
Fragments" to import all plug-ins except the 15 that are being imported from CVS.
3. The CVS checkout fails with a deadlock like the one reported above.

Stack traces available.
Here are the steps to reproduce:

- Assume rules Root, P1, P2
- Root conflicts with P1 and P2
- P1 and P2 do not conflict with each other

1) Job1 acquires P1
2) Job2 acquires P2
3) Job3 waits on Root (which is conflicting with P1, so Job3 is really waiting
on P1 in the graph).  Graph is now:

    P1   P2
J1  1     0
J2  0     1
J3  -1    0

4) Job4 waits on P2
5) Job1 releases P1
6) Job2 releases P2
7) Job3 can now proceed.  Replaces P1 in graph with Root

     Root   P2
J3    1      0
J4    0     -1

8) Job5 waits on P2, which conflicts with Root, so Job5 is waiting for Root in graph

     Root   P2
J3    1      0
J4    0     -1
J5   -1      0

9) Job3 releases Root
10) Job4 acquires P2, but is recorded in graph as Root since they conflict

-&gt; Now graph is in a bad state.  It looks like this:

    Root   P2
J4   1      -1
J5   -1     0

The J4/P2 value is stale and will never be removed!
Leaving open for now because further testing is required.  However, a fix and
regression tests have been submitted for 3.0 M5.
An improved fix has been released and it has been running for a week or so with
no further problems.  New regression tests have been added to test these
conflicting rule cases.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46895" />
    <CreationDate amount="2003-11-18 16:57:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>should the state represent the framework point of view?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>a) to allow other interested parties to play with a copy of the framework state</Line>
          <Line>without damaging it, and later committing the changes done in batch mode;</Line>
          <Line>b) to represent the graph of dependencies between bundle from where the</Line>
          <Line>framework would be able to build its internal structures during runtime.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>- we consider the state as something that knows about how to resolve</Line>
          <Line>dependencies between bundles, and nothing more. The framework could use it for</Line>
          <Line>initialization during startup, but changes occurring during the framework</Line>
          <Line>execution would require special handling by the framework (to handle the cases</Line>
          <Line>the framework cares about). In this case, the current implementation of the</Line>
          <Line>state could be said as good.</Line>
          <Line>- we commit to make the state reflect exactly the view the framework has of the</Line>
          <Line>world, such as runtime bindings between bundles, and things like that. In this</Line>
          <Line>case, the state would have to provide support for some idiosyncrasies that only</Line>
          <Line>make sense when the client is the framework. When doing this, it would make</Line>
          <Line>sense not to make the necessary functionality part of the state/resolver API</Line>
          <Line>(unless we plan to make the framework's state pluggable).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is regarding a talk I had with Thomas and Pascal:

We need to better define what intent we have for the State objects.

The original goals for the state were:
a) to allow other interested parties to play with a copy of the framework state
without damaging it, and later committing the changes done in batch mode;
b) to represent the graph of dependencies between bundle from where the
framework would be able to build its internal structures during runtime.

But it seems that although we achieved "a", we missed "b" (at least partially).
The framework has a few requirements, mostly regarding what to do with a bundle
in use that has been uninstalled/updated, that are not currently satisfied (or
were satisfied after some rework, such as State.resolve(BundleDescriptor[])).
The state has no knowledge about what is in use, and what is not. For these
cases, the framework must keep its own data. For the startup case, we are fine
(the state tells exactly what the framework needs to know).

That being said, I see two directions:
- we consider the state as something that knows about how to resolve
dependencies between bundles, and nothing more. The framework could use it for
initialization during startup, but changes occurring during the framework
execution would require special handling by the framework (to handle the cases
the framework cares about). In this case, the current implementation of the
state could be said as good.
- we commit to make the state reflect exactly the view the framework has of the
world, such as runtime bindings between bundles, and things like that. In this
case, the state would have to provide support for some idiosyncrasies that only
make sense when the client is the framework. When doing this, it would make
sense not to make the necessary functionality part of the state/resolver API
(unless we plan to make the framework's state pluggable).

So, I need feedback on this subject. Any thoughts?
I'm in favour of the first direction.  It seems that b is actually satisfied in 
that the framework can/does use the state to build its internal structures.  
The fact that it needs to retain some information when bundles are updated etc 
is, in effect, an implementation issue for the framework.  States are meant to 
be independent representations of what the framework should look like.  So the 
state immediately after an update and that state after starting the framework 
should look the same.  If we follow the second path then the state after the 
update would contain information about the previous connections etc and then 
after a restart of the framework, it would not.  This seems inconsistent.

Side/context question:  Are we still seeing problems related to maintaining the 
bundle loader connections after an update? 
I'm leaning toward the first direction as well.

I have updated the Framework to now keep track of bundle dependencies before an 
install/update/uninstall operation is performed.  This means that before an 
install/update/uninstall is performed, the state is interagated to figure out 
what the current linkages are for all the bundles (this is only done at the 
time of install/update/uninstall and not at startup).  Since that state has not 
been altered yet this should be the same linkages as the ones present in the 
state at startup.

So here are the three scenarios:

Install:  
When a bundle is installed it is put into the state and the framework as 
installed and not resolved.  If the bundle is then started the framework will 
notice the bundle in unresolved and will ask the state to resolve.  This 
operation should attempt to resolve all currently unresolved bundles in the 
framework (but it should not unresolve any bundles).  One way of doing this is 
to ask the state to do a full resolution of all bundles and then the framework 
can go through the bundles in the runtime and find the ones that are currently 
unresolved and then ask the state if they are now resolved after full 
resolution.  If the bundle is resolved then the runtime sets them to resolved.  
Currently the framework just asks the state to resolve the one bundle that is 
being started.  I think this should be changed to full resolution.

Uninstall:
Before an uninstall is performed the framework ensures that all 
BundleLoaderProxy dependencies are marked.  If the BundleLoaderProxy for the 
uninstalled bundle is marked as used then that BundleLoaderProxy is put into 
the removal pending list and all packages exported/provided are still available 
to the runtime bundles.  After the uninstall the state is not interagated 
because the uninstall operation must not unresolve any bundles in the runtime 
framework (accept the uninstalled bundle state is set to UNINSTALLED).

Update:
Before an update is performed the framework ensures that all BundleLoaderProxy 
dependencies are marked.  If the BundleLoaderProxy for the updated bundle is 
marked as used then the BundleLoaderProxy is put into the removal pending list 
and all packages exported/provided are still available to the runtime bundles.  
After the update the state is not integragated because the update operation 
must not unresolve any bundles except for the updated bundle in the runtime.  
If the updated bundle was ACTIVE before the update then the framework attempts 
to resolve the bundle.  This operation should attempt to resolve all currently 
unresolved bundles in the framework (but it should not unresolve any bundles).  
This can be done in the same way as described in the install scenario.

Refresh packages/bundles
During the refresh package/bundles operation is the only time a bundle may 
become unresolved in the runtime framework.  If null is passed to this 
operation then all bundles that are dependent on any BundleLoaderProxies in the 
removal pending list should be refreshed.  If a non-null array of bundles is 
passed to this operation then all bundles that are dependent on the list of 
bundles should be refreshed.  Since the runtime framework has marked the 
dependencies it is easy for the framework to determine what bundles should be 
included in the refresh graph.  After the graph has been constructed the 
framework can ask the state to do a full resolution.  Then the state can be 
asked if all the bundles are resolved in the graph.  For each bundle in the 
graph that is resolved the runtime will refresh them and resolve them.  For 
each bundle that is in the graph that is unresolved the runtime will refresh 
and unresolve them.

The problem I was having with the state API was that I was trying to use the 
StateDelta object returned from State.resolve() to mark the bundles in the 
runtime as resolved or not.  This can not work because the runtime needs to 
keep track of dependencies even after a bundle has been updated or uninstalled 
and it also has to have strict control over when a bundle can become unresolved.

I will update the framework to do full resolution as described above.  This 
should solve most/all of the problems.
This bug was about discussing requirements for the state. Bug 47028 is about
actually implementing deltas according to what is discussed in here.

Closing.</WithStack>
    <WithOutStack>This is regarding a talk I had with Thomas and Pascal:

We need to better define what intent we have for the State objects.

The original goals for the state were:
a) to allow other interested parties to play with a copy of the framework state
without damaging it, and later committing the changes done in batch mode;
b) to represent the graph of dependencies between bundle from where the
framework would be able to build its internal structures during runtime.

But it seems that although we achieved "a", we missed "b" (at least partially).
The framework has a few requirements, mostly regarding what to do with a bundle
in use that has been uninstalled/updated, that are not currently satisfied (or
were satisfied after some rework, such as State.resolve(BundleDescriptor[])).
The state has no knowledge about what is in use, and what is not. For these
cases, the framework must keep its own data. For the startup case, we are fine
(the state tells exactly what the framework needs to know).

That being said, I see two directions:
- we consider the state as something that knows about how to resolve
dependencies between bundles, and nothing more. The framework could use it for
initialization during startup, but changes occurring during the framework
execution would require special handling by the framework (to handle the cases
the framework cares about). In this case, the current implementation of the
state could be said as good.
- we commit to make the state reflect exactly the view the framework has of the
world, such as runtime bindings between bundles, and things like that. In this
case, the state would have to provide support for some idiosyncrasies that only
make sense when the client is the framework. When doing this, it would make
sense not to make the necessary functionality part of the state/resolver API
(unless we plan to make the framework's state pluggable).

So, I need feedback on this subject. Any thoughts?
I'm in favour of the first direction.  It seems that b is actually satisfied in 
that the framework can/does use the state to build its internal structures.  
The fact that it needs to retain some information when bundles are updated etc 
is, in effect, an implementation issue for the framework.  States are meant to 
be independent representations of what the framework should look like.  So the 
state immediately after an update and that state after starting the framework 
should look the same.  If we follow the second path then the state after the 
update would contain information about the previous connections etc and then 
after a restart of the framework, it would not.  This seems inconsistent.

Side/context question:  Are we still seeing problems related to maintaining the 
bundle loader connections after an update? 
I'm leaning toward the first direction as well.

I have updated the Framework to now keep track of bundle dependencies before an 
install/update/uninstall operation is performed.  This means that before an 
install/update/uninstall is performed, the state is interagated to figure out 
what the current linkages are for all the bundles (this is only done at the 
time of install/update/uninstall and not at startup).  Since that state has not 
been altered yet this should be the same linkages as the ones present in the 
state at startup.

So here are the three scenarios:

Install:  
When a bundle is installed it is put into the state and the framework as 
installed and not resolved.  If the bundle is then started the framework will 
notice the bundle in unresolved and will ask the state to resolve.  This 
operation should attempt to resolve all currently unresolved bundles in the 
framework (but it should not unresolve any bundles).  One way of doing this is 
to ask the state to do a full resolution of all bundles and then the framework 
can go through the bundles in the runtime and find the ones that are currently 
unresolved and then ask the state if they are now resolved after full 
resolution.  If the bundle is resolved then the runtime sets them to resolved.  
Currently the framework just asks the state to resolve the one bundle that is 
being started.  I think this should be changed to full resolution.

Uninstall:
Before an uninstall is performed the framework ensures that all 
BundleLoaderProxy dependencies are marked.  If the BundleLoaderProxy for the 
uninstalled bundle is marked as used then that BundleLoaderProxy is put into 
the removal pending list and all packages exported/provided are still available 
to the runtime bundles.  After the uninstall the state is not interagated 
because the uninstall operation must not unresolve any bundles in the runtime 
framework (accept the uninstalled bundle state is set to UNINSTALLED).

Update:
Before an update is performed the framework ensures that all BundleLoaderProxy 
dependencies are marked.  If the BundleLoaderProxy for the updated bundle is 
marked as used then the BundleLoaderProxy is put into the removal pending list 
and all packages exported/provided are still available to the runtime bundles.  
After the update the state is not integragated because the update operation 
must not unresolve any bundles except for the updated bundle in the runtime.  
If the updated bundle was ACTIVE before the update then the framework attempts 
to resolve the bundle.  This operation should attempt to resolve all currently 
unresolved bundles in the framework (but it should not unresolve any bundles).  
This can be done in the same way as described in the install scenario.

Refresh packages/bundles
During the refresh package/bundles operation is the only time a bundle may 
become unresolved in the runtime framework.  If null is passed to this 
operation then all bundles that are dependent on any BundleLoaderProxies in the 
removal pending list should be refreshed.  If a non-null array of bundles is 
passed to this operation then all bundles that are dependent on the list of 
bundles should be refreshed.  Since the runtime framework has marked the 
dependencies it is easy for the framework to determine what bundles should be 
included in the refresh graph.  After the graph has been constructed the 
framework can ask the state to do a full resolution.  Then the state can be 
asked if all the bundles are resolved in the graph.  For each bundle in the 
graph that is resolved the runtime will refresh them and resolve them.  For 
each bundle that is in the graph that is unresolved the runtime will refresh 
and unresolve them.

The problem I was having with the state API was that I was trying to use the 
StateDelta object returned from State.resolve() to mark the bundles in the 
runtime as resolved or not.  This can not work because the runtime needs to 
keep track of dependencies even after a bundle has been updated or uninstalled 
and it also has to have strict control over when a bundle can become unresolved.

I will update the framework to do full resolution as described above.  This 
should solve most/all of the problems.
This bug was about discussing requirements for the state. Bug 47028 is about
actually implementing deltas according to what is discussed in here.

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46896" />
    <CreationDate amount="2003-11-18 17:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CCombo setEnabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="297" end="434" />
        <code>public void setEnabled(boolean enable)
{
    super.setEnabled( enable );
    text.setEnabled( enable );
    arrow.setEnabled( enable );
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When using CCombo and setting it to be disabled the Text and button do not
appear disabled (using swt-win32-2135.dll)
I've created a similar control (a composite that includes a Text and a
Button) which pops up a calendar dialog and found that I had to implement
setEnabled in the following way:

public void setEnabled(boolean enable)
{
    super.setEnabled( enable );
    text.setEnabled( enable );
    arrow.setEnabled( enable );
}

Can the previous code be added to the CCombo class so the text field and
button appear disabled like a normal Combo?
Vikki to fix this.
Added to HEAD for 3.0</WithStack>
    <WithOutStack>When using CCombo and setting it to be disabled the Text and button do not
appear disabled (using swt-win32-2135.dll)
I've created a similar control (a composite that includes a Text and a
Button) which pops up a calendar dialog and found that I had to implement
setEnabled in the following way:

public void setEnabled(boolean enable)
{
    super.setEnabled( enable );
    text.setEnabled( enable );
    arrow.setEnabled( enable );
}

Can the previous code be added to the CCombo class so the text field and
button appear disabled like a normal Combo?
Vikki to fix this.
Added to HEAD for 3.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46897" />
    <CreationDate amount="2003-11-18 17:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ant view not sorted after a project is renamed.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Ant view nodes for projects that display names are not sorted after you
change the XML name attribute of the Ant XML project element. Saving the
build.xml with such changes correctly displays the new name, but not sorted with
the other build.xml's in the view.

Version 3.0.m4
Move to Platform/Ant.
Fixed in AntView.
Please verify Jared.
Verified.</WithStack>
    <WithOutStack>The Ant view nodes for projects that display names are not sorted after you
change the XML name attribute of the Ant XML project element. Saving the
build.xml with such changes correctly displays the new name, but not sorted with
the other build.xml's in the view.

Version 3.0.m4
Move to Platform/Ant.
Fixed in AntView.
Please verify Jared.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46898" />
    <CreationDate amount="2003-11-18 17:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ant view should allow nodes to be renamed and have the change reflected in the build file.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Ant view should allow nodes like projects and targets to be renamed and have
the changes reflected in the build.xml file.
(Version 3.0.m4)
Moving to Platform/Ant.
Currently no plans to do this in 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The Ant view should allow nodes like projects and targets to be renamed and have
the changes reflected in the build.xml file.
(Version 3.0.m4)
Moving to Platform/Ant.
Currently no plans to do this in 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46899" />
    <CreationDate amount="2003-11-18 17:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>IllegalArgumentException editing text file, Attempted to endRule</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341074506">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Attempted to endRule: null, does not match 
most recent begin: P/tkolap.  See log for trace information if rule tracing is 
enabled.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop(ImplicitJobs.java:63)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop(ImplicitJobs.java:130)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.ImplicitJobs.end(ImplicitJobs.java:248)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.JobManager.endRule(JobManager.java:284)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.WorkManager.checkOut(WorkManager.java:136)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:859)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1563)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run(EclipseFolder.java:297)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:347)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.client.Version.execute(Version.java:85)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.core.client.Session.open(Session.java:235)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ccvs.core.CVSTeamProvider.editors(CVSTeamProvider.java:1412)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ccvs.ui.actions.EditorsAction.execute(EditorsAction.java:57)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ccvs.ui.actions.EditorsAction.run(EditorsAction.java:96)</Frame>
          <Frame depth="16">org.eclipse.team.internal.ui.Utils$1.run(Utils.java:167)</Frame>
          <Frame depth="17">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="18">org.eclipse.team.internal.ui.Utils.runWithProgress(Utils.java:164)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ccvs.ui.CVSUIPlugin$2.run(CVSUIPlugin.java:281)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:131)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:25)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.syncExec(Display.java:2504)</Frame>
          <Frame depth="23">org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.runWithProgress(CVSUIPlugin.java:300)</Frame>
          <Frame depth="24">org.eclipse.team.internal.ccvs.ui.FileModificationValidator.run(FileModificationValidator.java:176)</Frame>
          <Frame depth="25">org.eclipse.team.internal.ccvs.ui.FileModificationValidator.promptToEditFiles(FileModificationValidator.java:160)</Frame>
          <Frame depth="26">org.eclipse.team.internal.ccvs.ui.FileModificationValidator.edit(FileModificationValidator.java:124)</Frame>
          <Frame depth="27">org.eclipse.team.internal.ccvs.ui.FileModificationValidator.validateEdit(FileModificationValidator.java:51)</Frame>
          <Frame depth="28">org.eclipse.team.internal.core.FileModificationValidatorManager.validateEdit(FileModificationValidatorManager.java:70)</Frame>
          <Frame depth="29">org.eclipse.core.internal.resources.Workspace$5.run(Workspace.java:1752)</Frame>
          <Frame depth="30">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1127)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.Platform.run(Platform.java:464)</Frame>
          <Frame depth="32">org.eclipse.core.internal.resources.Workspace.validateEdit(Workspace.java:1758)</Frame>
          <Frame depth="33">org.eclipse.core.internal.filebuffers.ResourceFileBuffer.validateState(ResourceFileBuffer.java:312)</Frame>
          <Frame depth="34">org.eclipse.ui.editors.text.TextFileDocumentProvider$4.execute(TextFileDocumentProvider.java:799)</Frame>
          <Frame depth="35">org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:94)</Frame>
          <Frame depth="36">org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:67)</Frame>
          <Frame depth="37">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="38">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)</Frame>
          <Frame depth="39">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="40">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)</Frame>
          <Frame depth="41">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)</Frame>
          <Frame depth="42">org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:388)</Frame>
          <Frame depth="43">org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState(TextFileDocumentProvider.java:811)</Frame>
          <Frame depth="44">org.eclipse.ui.texteditor.AbstractTextEditor.validateState(AbstractTextEditor.java:3035)</Frame>
          <Frame depth="45">org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:3080)</Frame>
          <Frame depth="46">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="47">org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState(AbstractTextEditor.java:3075)</Frame>
          <Frame depth="48">org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.verifyText(AbstractTextEditor.java:212)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:193)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)</Frame>
          <Frame depth="55">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5947)</Frame>
          <Frame depth="56">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6931)</Frame>
          <Frame depth="57">org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554)</Frame>
          <Frame depth="58">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5300)</Frame>
          <Frame depth="59">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5323)</Frame>
          <Frame depth="60">org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3029)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Control.windowProc(Control.java:2932)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="70">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="71">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="76">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="77">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="78">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="79">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="81">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="82">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="83">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="86">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341074506">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Attempted to endRule: F/tkolap/src, does 
not match most recent begin: P/tkolap.  See log for trace information if rule 
tracing is enabled.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop(ImplicitJobs.java:63)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop(ImplicitJobs.java:130)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.ImplicitJobs.end(ImplicitJobs.java:248)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.JobManager.endRule(JobManager.java:284)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.WorkManager.checkOut(WorkManager.java:136)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:859)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1563)</Frame>
          <Frame depth="8">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="9">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)</Frame>
          <Frame depth="10">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)</Frame>
          <Frame depth="11">org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:388)</Frame>
          <Frame depth="12">org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState(TextFileDocumentProvider.java:811)</Frame>
          <Frame depth="13">org.eclipse.ui.texteditor.AbstractTextEditor.validateState(AbstractTextEditor.java:3035)</Frame>
          <Frame depth="14">org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:3080)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="16">org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState(AbstractTextEditor.java:3075)</Frame>
          <Frame depth="17">org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.verifyText(AbstractTextEditor.java:212)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:193)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5947)</Frame>
          <Frame depth="25">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6931)</Frame>
          <Frame depth="26">org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5300)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5323)</Frame>
          <Frame depth="29">org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3029)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:2932)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)</Frame>
          <Frame depth="45">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="47">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="48">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="49">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="50">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="51">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="52">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.run(Main.java:767)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.main(Main.java:601)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Trying to edit a text file with N20031118 I get this crash, and then the 
editor goes blank except for "Exception running validator code".

Unhandled event loop exception
Reason:
Attempted to endRule: F/tkolap/src, does not match most recent begin: 
P/tkolap.  See log for trace information if rule tracing is enabled.

Error Nov 18, 2003 17:33:09.264 Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".
java.lang.IllegalArgumentException: Attempted to endRule: null, does not match 
most recent begin: P/tkolap.  See log for trace information if rule tracing is 
enabled.
at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)
at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop
(ImplicitJobs.java:63)
at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop
(ImplicitJobs.java:130)
at org.eclipse.core.internal.jobs.ImplicitJobs.end(ImplicitJobs.java:248)
at org.eclipse.core.internal.jobs.JobManager.endRule(JobManager.java:284)
at org.eclipse.core.internal.resources.WorkManager.checkOut
(WorkManager.java:136)
at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:859)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1563)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1579)
at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run
(EclipseFolder.java:297)
at org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:347)
at org.eclipse.team.internal.ccvs.core.client.Version.execute(Version.java:85)
at org.eclipse.team.internal.ccvs.core.client.Session.open(Session.java:235)
at org.eclipse.team.internal.ccvs.core.CVSTeamProvider.editors
(CVSTeamProvider.java:1412)
at org.eclipse.team.internal.ccvs.ui.actions.EditorsAction.execute
(EditorsAction.java:57)
at org.eclipse.team.internal.ccvs.ui.actions.EditorsAction.run
(EditorsAction.java:96)
at org.eclipse.team.internal.ui.Utils$1.run(Utils.java:167)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.team.internal.ui.Utils.runWithProgress(Utils.java:164)
at org.eclipse.team.internal.ccvs.ui.CVSUIPlugin$2.run(CVSUIPlugin.java:281)
at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:131)
at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:25)
at org.eclipse.swt.widgets.Display.syncExec(Display.java:2504)
at org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.runWithProgress
(CVSUIPlugin.java:300)
at org.eclipse.team.internal.ccvs.ui.FileModificationValidator.run
(FileModificationValidator.java:176)
at 
org.eclipse.team.internal.ccvs.ui.FileModificationValidator.promptToEditFiles
(FileModificationValidator.java:160)
at org.eclipse.team.internal.ccvs.ui.FileModificationValidator.edit
(FileModificationValidator.java:124)
at org.eclipse.team.internal.ccvs.ui.FileModificationValidator.validateEdit
(FileModificationValidator.java:51)
at org.eclipse.team.internal.core.FileModificationValidatorManager.validateEdit
(FileModificationValidatorManager.java:70)
at org.eclipse.core.internal.resources.Workspace$5.run(Workspace.java:1752)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1127)
at org.eclipse.core.runtime.Platform.run(Platform.java:464)
at org.eclipse.core.internal.resources.Workspace.validateEdit
(Workspace.java:1758)
at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.validateState
(ResourceFileBuffer.java:312)
at org.eclipse.ui.editors.text.TextFileDocumentProvider$4.execute
(TextFileDocumentProvider.java:799)
at 
org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.
run(TextFileDocumentProvider.java:94)
at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute
(WorkspaceModifyDelegatingOperation.java:67)
at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:91)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)
at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:105)
at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:72)
at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:62)
at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation
(TextFileDocumentProvider.java:388)
at org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState
(TextFileDocumentProvider.java:811)
at org.eclipse.ui.texteditor.AbstractTextEditor.validateState
(AbstractTextEditor.java:3035)
at org.eclipse.ui.texteditor.AbstractTextEditor$16.run
(AbstractTextEditor.java:3080)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState
(AbstractTextEditor.java:3075)
at 
org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.ver
ifyText(AbstractTextEditor.java:212)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:193)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)
at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5947)
at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6931)
at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554)
at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5300)
at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5323)
at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3029)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:2932)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:234)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
at org.eclipse.core.launcher.Main.run(Main.java:767)
at org.eclipse.core.launcher.Main.main(Main.java:601)



Error Nov 18, 2003 17:33:09.296 Unhandled event loop exception


Error Nov 18, 2003 17:33:09.296 Attempted to endRule: F/tkolap/src, does not 
match most recent begin: P/tkolap.  See log for trace information if rule 
tracing is enabled.
java.lang.IllegalArgumentException: Attempted to endRule: F/tkolap/src, does 
not match most recent begin: P/tkolap.  See log for trace information if rule 
tracing is enabled.
	at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)
	at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop
(ImplicitJobs.java:63)
	at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop
(ImplicitJobs.java:130)
	at org.eclipse.core.internal.jobs.ImplicitJobs.end
(ImplicitJobs.java:248)
	at org.eclipse.core.internal.jobs.JobManager.endRule
(JobManager.java:284)
	at org.eclipse.core.internal.resources.WorkManager.checkOut
(WorkManager.java:136)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:859)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1563)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:105)
	at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:72)
	at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:62)
	at 
org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation
(TextFileDocumentProvider.java:388)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState
(TextFileDocumentProvider.java:811)
	at org.eclipse.ui.texteditor.AbstractTextEditor.validateState
(AbstractTextEditor.java:3035)
	at org.eclipse.ui.texteditor.AbstractTextEditor$16.run
(AbstractTextEditor.java:3080)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState
(AbstractTextEditor.java:3075)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.ver
ifyText(AbstractTextEditor.java:212)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:193)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)
	at org.eclipse.swt.custom.StyledText.modifyContent
(StyledText.java:5947)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6931)
	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5300)
	at org.eclipse.swt.custom.StyledText.handleKeyDown
(StyledText.java:5323)
	at org.eclipse.swt.custom.StyledText$8.handleEvent
(StyledText.java:5070)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3029)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2932)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2712)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1361)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:234)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:767)
	at org.eclipse.core.launcher.Main.main(Main.java:601)
We already reverted that code (see bug 46753 comment 6 for more details).
verified</WithStack>
    <WithOutStack>Trying to edit a text file with N20031118 I get this crash, and then the 
editor goes blank except for "Exception running validator code".

Unhandled event loop exception
Reason:
Attempted to endRule: F/tkolap/src, does not match most recent begin: 
P/tkolap.  See log for trace information if rule tracing is enabled.

Error Nov 18, 2003 17:33:09.264 Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".



Error Nov 18, 2003 17:33:09.296 Unhandled event loop exception


Error Nov 18, 2003 17:33:09.296 Attempted to endRule: F/tkolap/src, does not 
match most recent begin: P/tkolap.  See log for trace information if rule 
tracing is enabled.

We already reverted that code (see bug 46753 comment 6 for more details).
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46900" />
    <CreationDate amount="2003-11-18 17:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Lost all my Installed JREs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Started my old workspace.</Line>
          <Line>2. could no longer start the workbench</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20031118

1. Started my old workspace.
2. could no longer start the workbench

After checking it I saw that all my installed JREs were gone!

No indication in the UI. Maybe there was something in my log, but I could it is
larger than 20Mb (see bug 46894).
Closing for now. Unable to reproduce, and may have been a side effect of a 
different catastrophic bug.</WithStack>
    <WithOutStack>I20031118

1. Started my old workspace.
2. could no longer start the workbench

After checking it I saw that all my installed JREs were gone!

No indication in the UI. Maybe there was something in my log, but I could it is
larger than 20Mb (see bug 46894).
Closing for now. Unable to reproduce, and may have been a side effect of a 
different catastrophic bug.</WithOutStack>
  </Bug>
</infozilla-output>

