<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="48901" />
    <CreationDate amount="2003-12-16 14:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>What should removing all roots of a Merge subscriber do?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Created a merge subscriber on 1 project.</Line>
          <Line>2) Quit and restarted Eclipse</Line>
          <Line>3) Deleted the project and the merge subscriber left the view</Line>
          <Line>3.5) I may have restarted again at this point</Line>
          <Line>4) Recreated the project</Line>
          <Line>5) Restarted Eclipse and the Merge subscriber reappeared</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I did the following:

1) Created a merge subscriber on 1 project.
2) Quit and restarted Eclipse
3) Deleted the project and the merge subscriber left the view
3.5) I may have restarted again at this point
4) Recreated the project
5) Restarted Eclipse and the Merge subscriber reappeared

The merge subscriber probably should have been totally removed in step 3.
Don't mind keeping it around. The synchronize will show that there are no roots
but I would rather keep it around then automatically remove it. This doesn't
happen very often anyway.</WithStack>
    <WithOutStack>I did the following:

1) Created a merge subscriber on 1 project.
2) Quit and restarted Eclipse
3) Deleted the project and the merge subscriber left the view
3.5) I may have restarted again at this point
4) Recreated the project
5) Restarted Eclipse and the Merge subscriber reappeared

The merge subscriber probably should have been totally removed in step 3.
Don't mind keeping it around. The synchronize will show that there are no roots
but I would rather keep it around then automatically remove it. This doesn't
happen very often anyway.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48902" />
    <CreationDate amount="2003-12-16 14:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Checkout with sync view open fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341079974">
        <Exception>org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>Synchronization bytes are 
missing for parent of resource '/org.eclipse.vcm.core/plugin.xml' in 
synchronization partner 'org.eclipse.team.cvs:remote-resource-key' on get.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.getRemoteResource(CVSRemoteSynchronizer.java:47)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getRemoteResource(CVSSyncTreeSubscriber.java:166)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getRemoteResource(CVSWorkspaceSubscriber.java:269)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo(CVSSyncTreeSubscriber.java:187)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect(SubscriberEventHandler.java:153)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:281)</Frame>
          <Frame depth="6">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)</Frame>
          <Frame depth="7">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341079974">
        <Exception>org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>The parent folder of managed 
file /org.eclipse.vcm.core/plugin.xml does not have sync info associated with 
it.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor(CVSWorkspaceRoot.java:403)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor(CVSWorkspaceRoot.java:384)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource(BaseSynchronizer.java:85)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource(CVSSyncTreeSubscriber.java:170)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo(CVSSyncTreeSubscriber.java:189)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect(SubscriberEventHandler.java:153)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:281)</Frame>
          <Frame depth="7">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:248)</Frame>
          <Frame depth="8">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:122)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) checkout org.eclipse.vcm.core from dev.eclipse.org</Line>
          <Line>2) Perform a merge on ths project</Line>
          <Line>3) checkout the project again</Line>
          <Line>4) cancel the merge immediately</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I performed the following steps

1) checkout org.eclipse.vcm.core from dev.eclipse.org
2) Perform a merge on ths project
3) checkout the project again
4) cancel the merge immediately

I get the following exceptions and the project that was checked out has no CVS 
information and is not shared.

org.eclipse.team.internal.ccvs.core.CVSException: Synchronization bytes are 
missing for parent of resource '/org.eclipse.vcm.core/plugin.xml' in 
synchronization partner 'org.eclipse.team.cvs:remote-resource-key' on get.
at 
org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.getRemoteRes
ource(CVSRemoteSynchronizer.java:47)
at org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getRemoteResource
(CVSSyncTreeSubscriber.java:166)
at org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getRemoteResource
(CVSWorkspaceSubscriber.java:269)
at org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo
(CVSSyncTreeSubscriber.java:187)
at org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect
(SubscriberEventHandler.java:153)
at 
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEve
nt(SubscriberEventHandler.java:281)
at org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents
(BackgroundEventHandler.java:248)
at org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run
(BackgroundEventHandler.java:122)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
org.eclipse.team.internal.ccvs.core.CVSException: The parent folder of managed 
file /org.eclipse.vcm.core/plugin.xml does not have sync info associated with 
it.
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourc
eFor(CVSWorkspaceRoot.java:403)
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourc
eFor(CVSWorkspaceRoot.java:384)
	at 
org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource
(BaseSynchronizer.java:85)
	at 
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource
(CVSSyncTreeSubscriber.java:170)
	at 
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo
(CVSSyncTreeSubscriber.java:189)
	at 
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect
(SubscriberEventHandler.java:153)
	at 
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEve
nt(SubscriberEventHandler.java:281)
	at 
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents
(BackgroundEventHandler.java:248)
	at org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run
(BackgroundEventHandler.java:122)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
Actually, this has nothing to do with the merge subscriber cancel. The 
existance of the merge subscriber causes the checkout to fail. The problem is 
in the StatisHandler/StickyHandler where the sync info is only set if it is 
different. somehow the existance of a merge subscriber causes the sync info 
for the project to stick around and not be set. Not sure why though.
Actually, this will happen if the sync view is open and contains only the CVS 
workspace subscriber. It appears that the sync view reacts to an intermittant 
delta from the checkout which causes the folder sync info for the project to 
be retained. This, in turn, causes the checkout to fail to set the sync info 
(optimization in static/sticky handlers) so the new folder sync info is not 
written to disk.

If the sync view in closed in all perspectives, the problem does not occur.
Fix released to HEAD</WithStack>
    <WithOutStack>I performed the following steps

1) checkout org.eclipse.vcm.core from dev.eclipse.org
2) Perform a merge on ths project
3) checkout the project again
4) cancel the merge immediately

I get the following exceptions and the project that was checked out has no CVS 
information and is not shared.


Actually, this has nothing to do with the merge subscriber cancel. The 
existance of the merge subscriber causes the checkout to fail. The problem is 
in the StatisHandler/StickyHandler where the sync info is only set if it is 
different. somehow the existance of a merge subscriber causes the sync info 
for the project to stick around and not be set. Not sure why though.
Actually, this will happen if the sync view is open and contains only the CVS 
workspace subscriber. It appears that the sync view reacts to an intermittant 
delta from the checkout which causes the folder sync info for the project to 
be retained. This, in turn, causes the checkout to fail to set the sync info 
(optimization in static/sticky handlers) so the new folder sync info is not 
written to disk.

If the sync view in closed in all perspectives, the problem does not occur.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48903" />
    <CreationDate amount="2003-12-16 14:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DCR: Clone / Copy On Drag using control key</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The ctrl key can be depressed to enable cloning of the objects being dragged.

Add support to DragEditPartsTracker to use a new request type for cloning.
Added support to DragEditPartsTracker for cloning, implemented in Logic Example.</WithStack>
    <WithOutStack>The ctrl key can be depressed to enable cloning of the objects being dragged.

Add support to DragEditPartsTracker to use a new request type for cloning.
Added support to DragEditPartsTracker for cloning, implemented in Logic Example.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48904" />
    <CreationDate amount="2003-12-16 15:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AbstactTool should update input modifiers on key events</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Fixed.</WithStack>
    <WithOutStack>Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48905" />
    <CreationDate amount="2003-12-16 15:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Separator ToolItem is displayed even when used to make room for a Control</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="45">
      <source_code type="import">
        <location start="395" end="425" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="426" end="464" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="465" end="502" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="504" end="1776" />
        <code>public class ToolBarCombo {

    public static void main (String [] args) {
      Display display = new Display ();
      Shell shell = new Shell (display);
      ToolBar bar = new ToolBar (shell, SWT.FLAT);
      for (int i=0; i&lt;4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
      }
      Image image = new Image (display, 10, 23);
      Color color = display.getSystemColor (SWT.COLOR_RED);
      GC gc = new GC (image);
      gc.setBackground (color);
      gc.fillRectangle (image.getBounds ());
      gc.dispose ();
      ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);
      int start = bar.getItemCount ();
      for (int i=start; i&lt;start+4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
        item.setImage(image);
      }
      Combo combo = new Combo (bar, SWT.READ_ONLY);
      for (int i=0; i&lt;4; i++) {
        combo.add ("Item " + i);
      }
      combo.pack ();
      sep.setWidth (combo.getSize ().x);
      sep.setControl (combo);
      bar.pack ();
      shell.pack ();
      shell.open ();
      while (!shell.isDisposed ()) {
        if (!display.readAndDispatch ()) display.sleep ();
      }
      display.dispose ();
      image.dispose();
    }
    }</code>
      </source_code>
      <source_code type="import">
        <location start="2353" end="2383" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2384" end="2422" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2423" end="2459" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2460" end="2503" />
        <code>import org.eclipse.swt.layout.GridData;</code>
      </source_code>
      <source_code type="import">
        <location start="2504" end="2541" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2638" end="2679" />
        <code>Display display = new Display ();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2680" end="2722" />
        <code>Shell shell = new Shell (display);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2723" end="2775" />
        <code>ToolBar bar = new ToolBar (shell, SWT.FLAT);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2818" end="2866" />
        <code>ToolItem item = new ToolItem (bar, 0);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2867" end="2904" />
        <code>item.setText ("Item " + i);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2915" end="2965" />
        <code>Image image = new Image (display, 10, 23);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2966" end="3027" />
        <code>Color color = display.getSystemColor (SWT.COLOR_RED);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3028" end="3059" />
        <code>GC gc = new GC (image);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3060" end="3093" />
        <code>gc.setBackground (color);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3094" end="3140" />
        <code>gc.fillRectangle (image.getBounds ());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3141" end="3163" />
        <code>gc.dispose ();</code>
      </source_code>
      <source_code type="assignment">
        <location start="3164" end="3221" />
        <code>ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3222" end="3262" />
        <code>int start = bar.getItemCount ();</code>
      </source_code>
      <source_code type="assignment">
        <location start="3315" end="3363" />
        <code>ToolItem item = new ToolItem (bar, 0);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3364" end="3401" />
        <code>item.setText ("Item " + i);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3402" end="3433" />
        <code>item.setImage(image);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3444" end="3498" />
        <code>Composite comp = new Composite(bar, SWT.NONE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3499" end="3540" />
        <code>comp.setLayout(new GridLayout());</code>
      </source_code>
      <source_code type="assignment">
        <location start="3541" end="3595" />
        <code>Combo combo = new Combo (comp, SWT.READ_ONLY);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3596" end="3633" />
        <code>GridData gd = new GridData();</code>
      </source_code>
      <source_code type="assignment">
        <location start="3634" end="3681" />
        <code>gd.horizontalAlignment = GridData.FILL;</code>
      </source_code>
      <source_code type="assignment">
        <location start="3682" end="3729" />
        <code>gd.verticalAlignment = GridData.CENTER;</code>
      </source_code>
      <source_code type="assignment">
        <location start="3730" end="3774" />
        <code>gd.grabExcessHorizontalSpace = true;</code>
      </source_code>
      <source_code type="assignment">
        <location start="3775" end="3817" />
        <code>gd.grabExcessVerticalSpace = true;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3818" end="3850" />
        <code>combo.setLayoutData(gd);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3851" end="3907" />
        <code>for (int i=0; i&lt;4; i++) combo.add ("Item " + i);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3908" end="3930" />
        <code>combo.pack ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3931" end="3951" />
        <code>comp.pack();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3952" end="3993" />
        <code>sep.setWidth (comp.getSize ().x);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3994" end="4024" />
        <code>sep.setControl (comp);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4025" end="4045" />
        <code>bar.pack ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4046" end="4068" />
        <code>shell.pack ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4069" end="4091" />
        <code>shell.open ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4139" end="4199" />
        <code>if (!display.readAndDispatch ()) display.sleep ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4210" end="4237" />
        <code>display.dispose ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4238" end="4262" />
        <code>image.dispose();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When a ToolItem with style = SWT.SEPARATOR is placed on a ToolBar to make room
for a non-ToolItem widget (as shown in
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-home/snippits/snippet58.html),
parts of the separator may be visible behind (actually above and below) the
widget if it is not as tall as the ToolBar. The following modified snippet
demonstrates the problem:

    import org.eclipse.swt.*;
    import org.eclipse.swt.graphics.*;
    import org.eclipse.swt.widgets.*;

    public class ToolBarCombo {

    public static void main (String [] args) {
      Display display = new Display ();
      Shell shell = new Shell (display);
      ToolBar bar = new ToolBar (shell, SWT.FLAT);
      for (int i=0; i&lt;4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
      }
      Image image = new Image (display, 10, 23);
      Color color = display.getSystemColor (SWT.COLOR_RED);
      GC gc = new GC (image);
      gc.setBackground (color);
      gc.fillRectangle (image.getBounds ());
      gc.dispose ();
      ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);
      int start = bar.getItemCount ();
      for (int i=start; i&lt;start+4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
        item.setImage(image);
      }
      Combo combo = new Combo (bar, SWT.READ_ONLY);
      for (int i=0; i&lt;4; i++) {
        combo.add ("Item " + i);
      }
      combo.pack ();
      sep.setWidth (combo.getSize ().x);
      sep.setControl (combo);
      bar.pack ();
      shell.pack ();
      shell.open ();
      while (!shell.isDisposed ()) {
        if (!display.readAndDispatch ()) display.sleep ();
      }
      display.dispose ();
      image.dispose();
    }
    } 

In this snippet, the images make the ToolBar taller than usual. You can see the
separator above and below the center of the Combo widget.

Confirmed with 2.1 and 3.0M5 on Windows XP.
I have now implemented the following workaround in my toolbar creation routines.
Instead of putting a control directly onto a toolbar (under the control of a
separator toolitem), I now add a composite to the toolbar and then add the
control to this composite. The composite scales to the full height of the
toolbar and centers non-resizable controls vertically. Here's the modified snippet:

    import org.eclipse.swt.*;
    import org.eclipse.swt.graphics.*;
    import org.eclipse.swt.layout.*;
    import org.eclipse.swt.layout.GridData;
    import org.eclipse.swt.widgets.*;
    
    public class ToolBarCombo
    {
      public static void main (String [] args)
      {
        Display display = new Display ();
        Shell shell = new Shell (display);
        ToolBar bar = new ToolBar (shell, SWT.FLAT);
        for (int i=0; i&lt;4; i++)
        {
          ToolItem item = new ToolItem (bar, 0);
          item.setText ("Item " + i);
        }
        Image image = new Image (display, 10, 23);
        Color color = display.getSystemColor (SWT.COLOR_RED);
        GC gc = new GC (image);
        gc.setBackground (color);
        gc.fillRectangle (image.getBounds ());
        gc.dispose ();
        ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);
        int start = bar.getItemCount ();
        for (int i=start; i&lt;start+4; i++)
        {
          ToolItem item = new ToolItem (bar, 0);
          item.setText ("Item " + i);
          item.setImage(image);
        }
        Composite comp = new Composite(bar, SWT.NONE);
        comp.setLayout(new GridLayout());
        Combo combo = new Combo (comp, SWT.READ_ONLY);
        GridData gd = new GridData();
        gd.horizontalAlignment = GridData.FILL;
        gd.verticalAlignment = GridData.CENTER;
        gd.grabExcessHorizontalSpace = true;
        gd.grabExcessVerticalSpace = true;
        combo.setLayoutData(gd);
        for (int i=0; i&lt;4; i++) combo.add ("Item " + i);
        combo.pack ();
        comp.pack();
        sep.setWidth (comp.getSize ().x);
        sep.setControl (comp);
        bar.pack ();
        shell.pack ();
        shell.open ();
        while (!shell.isDisposed ())
        {
          if (!display.readAndDispatch ()) display.sleep ();
        }
        display.dispose ();
        image.dispose();
      }
    } 

SN, is there a way to reduce the height of the separator or make it not appear 
at all if style == SEPARATOR and control != null?  I didn't see a way on MSDN 
to do either of these, but you know your way around there better.

And if there isn't a way to do one of these, should our example snippet be 
updated to use the additional Composite as in comment #1?  It's a workaround, 
but it's not hackish in nature.

The SEPARATOR is the official Microsoft way to do it so all Windows programs 
should have the same problem. If you use a SWT.FLAT tool bar, then no 
separator is drawn.

We are unlikely to do anything about this.  Grant, please check the MSDN to 
confirm my statements.  Thanks.
I'm going to have to mark this as WONTFIX.  If you don't use the SWT.FLAT 
style on XP, then a separator isn't drawn.  The problem is in Windows.</WithStack>
    <WithOutStack>When a ToolItem with style = SWT.SEPARATOR is placed on a ToolBar to make room
for a non-ToolItem widget (as shown in
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-home/snippits/snippet58.html),
parts of the separator may be visible behind (actually above and below) the
widget if it is not as tall as the ToolBar. The following modified snippet
demonstrates the problem:

    import org.eclipse.swt.*;
    import org.eclipse.swt.graphics.*;
    import org.eclipse.swt.widgets.*;

    public class ToolBarCombo {

    public static void main (String [] args) {
      Display display = new Display ();
      Shell shell = new Shell (display);
      ToolBar bar = new ToolBar (shell, SWT.FLAT);
      for (int i=0; i&lt;4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
      }
      Image image = new Image (display, 10, 23);
      Color color = display.getSystemColor (SWT.COLOR_RED);
      GC gc = new GC (image);
      gc.setBackground (color);
      gc.fillRectangle (image.getBounds ());
      gc.dispose ();
      ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);
      int start = bar.getItemCount ();
      for (int i=start; i&lt;start+4; i++) {
        ToolItem item = new ToolItem (bar, 0);
        item.setText ("Item " + i);
        item.setImage(image);
      }
      Combo combo = new Combo (bar, SWT.READ_ONLY);
      for (int i=0; i&lt;4; i++) {
        combo.add ("Item " + i);
      }
      combo.pack ();
      sep.setWidth (combo.getSize ().x);
      sep.setControl (combo);
      bar.pack ();
      shell.pack ();
      shell.open ();
      while (!shell.isDisposed ()) {
        if (!display.readAndDispatch ()) display.sleep ();
      }
      display.dispose ();
      image.dispose();
    }
    } 

In this snippet, the images make the ToolBar taller than usual. You can see the
separator above and below the center of the Combo widget.

Confirmed with 2.1 and 3.0M5 on Windows XP.
I have now implemented the following workaround in my toolbar creation routines.
Instead of putting a control directly onto a toolbar (under the control of a
separator toolitem), I now add a composite to the toolbar and then add the
control to this composite. The composite scales to the full height of the
toolbar and centers non-resizable controls vertically. Here's the modified snippet:

    import org.eclipse.swt.*;
    import org.eclipse.swt.graphics.*;
    import org.eclipse.swt.layout.*;
    import org.eclipse.swt.layout.GridData;
    import org.eclipse.swt.widgets.*;
    
    public class ToolBarCombo
    {
      public static void main (String [] args)
      {
        Display display = new Display ();
        Shell shell = new Shell (display);
        ToolBar bar = new ToolBar (shell, SWT.FLAT);
        for (int i=0; i&lt;4; i++)
        {
          ToolItem item = new ToolItem (bar, 0);
          item.setText ("Item " + i);
        }
        Image image = new Image (display, 10, 23);
        Color color = display.getSystemColor (SWT.COLOR_RED);
        GC gc = new GC (image);
        gc.setBackground (color);
        gc.fillRectangle (image.getBounds ());
        gc.dispose ();
        ToolItem sep = new ToolItem (bar, SWT.SEPARATOR);
        int start = bar.getItemCount ();
        for (int i=start; i&lt;start+4; i++)
        {
          ToolItem item = new ToolItem (bar, 0);
          item.setText ("Item " + i);
          item.setImage(image);
        }
        Composite comp = new Composite(bar, SWT.NONE);
        comp.setLayout(new GridLayout());
        Combo combo = new Combo (comp, SWT.READ_ONLY);
        GridData gd = new GridData();
        gd.horizontalAlignment = GridData.FILL;
        gd.verticalAlignment = GridData.CENTER;
        gd.grabExcessHorizontalSpace = true;
        gd.grabExcessVerticalSpace = true;
        combo.setLayoutData(gd);
        for (int i=0; i&lt;4; i++) combo.add ("Item " + i);
        combo.pack ();
        comp.pack();
        sep.setWidth (comp.getSize ().x);
        sep.setControl (comp);
        bar.pack ();
        shell.pack ();
        shell.open ();
        while (!shell.isDisposed ())
        {
          if (!display.readAndDispatch ()) display.sleep ();
        }
        display.dispose ();
        image.dispose();
      }
    } 

SN, is there a way to reduce the height of the separator or make it not appear 
at all if style == SEPARATOR and control != null?  I didn't see a way on MSDN 
to do either of these, but you know your way around there better.

And if there isn't a way to do one of these, should our example snippet be 
updated to use the additional Composite as in comment #1?  It's a workaround, 
but it's not hackish in nature.

The SEPARATOR is the official Microsoft way to do it so all Windows programs 
should have the same problem. If you use a SWT.FLAT tool bar, then no 
separator is drawn.

We are unlikely to do anything about this.  Grant, please check the MSDN to 
confirm my statements.  Thanks.
I'm going to have to mark this as WONTFIX.  If you don't use the SWT.FLAT 
style on XP, then a separator isn't drawn.  The problem is in Windows.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48906" />
    <CreationDate amount="2003-12-16 15:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[New Look] Progress Indicator not showing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Open the CVS repositories view</Line>
          <Line>2) Expand the tree - no progress</Line>
          <Line>Fixed</Line>
          <Line>Verified in new look in build 200402101600</Line>
          <Line>verified on MOTIF (some bugs logged however)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20031216

The progress indicator is not showing in the new look.

STEPS
1) Open the CVS repositories view 
2) Expand the tree - no progress
Fixed
Verified in new look in build 200402101600
verified on MOTIF (some bugs logged however)</WithStack>
    <WithOutStack>20031216

The progress indicator is not showing in the new look.

STEPS
1) Open the CVS repositories view 
2) Expand the tree - no progress
Fixed
Verified in new look in build 200402101600
verified on MOTIF (some bugs logged however)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48907" />
    <CreationDate amount="2003-12-16 15:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[New Look] Dropping on the perspective control creates a fast view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20031216

If you drop a view on the perspective control it becomes fast. It should 
likely become detached.
Fixed in the recent drag-and-drop refactoring. The perspective bar is no longer
a valid drop target for views.
Fixed
Verified in new look in build 200402101600
unable to test on MOTIF due to 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=51773</WithStack>
    <WithOutStack>20031216

If you drop a view on the perspective control it becomes fast. It should 
likely become detached.
Fixed in the recent drag-and-drop refactoring. The perspective bar is no longer
a valid drop target for views.
Fixed
Verified in new look in build 200402101600
unable to test on MOTIF due to 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=51773</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48908" />
    <CreationDate amount="2003-12-16 15:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Export Feature w/2 libraries in plugin fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0M5

I'm trying to export a feature that has two libraries (i.e. &lt;library&gt; stmt). The
second depends on the first and the build.properties has the correct build
order. And I have a feature that has the plugin in it.

If I do an export of just the plugin it works fine. If I try to do an export of
the feature itself, there are build errors. The logs show that the second jar
can't find anything from the first jar.
Created attachment 7192
Zip of the feature and plugin projects

This is the zip file containing the complete projects for the feature and the
plugin. It is a very simple test case.
Created attachment 7193
Build output zip

This is the zip file that is created.
Created attachment 7194
Log output from build

And this is the logs zip file from the export feature.
Created attachment 7195
Example of 2nd case where feature has two plugins

Here's the second example where you have two plugins in the feature, where the
second plugin depends on the first.
I've got the same thing trying to build the CDT with M6. Our org.eclipse.cdt.core plugin has two 
jars and won't PDE Export Deployable Feature or build from an Update Site project.

This is blocking our attempt to release our matching M6 milestone build.
I found a workaround, i.e., build with 2.1.2. Reducing from blocking to critical.
Seems to work now in recent builds, including M7.
Moving to PDE-UI.
This is the problem we talked about last week, which is that when exporting a
set of plugins or features the order in which they are exported matters.

This should get fixed as we move to the new pde build / pde-ui.
This one certainly works on recent builds.</WithStack>
    <WithOutStack>3.0M5

I'm trying to export a feature that has two libraries (i.e. &lt;library&gt; stmt). The
second depends on the first and the build.properties has the correct build
order. And I have a feature that has the plugin in it.

If I do an export of just the plugin it works fine. If I try to do an export of
the feature itself, there are build errors. The logs show that the second jar
can't find anything from the first jar.
Created attachment 7192
Zip of the feature and plugin projects

This is the zip file containing the complete projects for the feature and the
plugin. It is a very simple test case.
Created attachment 7193
Build output zip

This is the zip file that is created.
Created attachment 7194
Log output from build

And this is the logs zip file from the export feature.
Created attachment 7195
Example of 2nd case where feature has two plugins

Here's the second example where you have two plugins in the feature, where the
second plugin depends on the first.
I've got the same thing trying to build the CDT with M6. Our org.eclipse.cdt.core plugin has two 
jars and won't PDE Export Deployable Feature or build from an Update Site project.

This is blocking our attempt to release our matching M6 milestone build.
I found a workaround, i.e., build with 2.1.2. Reducing from blocking to critical.
Seems to work now in recent builds, including M7.
Moving to PDE-UI.
This is the problem we talked about last week, which is that when exporting a
set of plugins or features the order in which they are exported matters.

This should get fixed as we move to the new pde build / pde-ui.
This one certainly works on recent builds.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48909" />
    <CreationDate amount="2003-12-16 15:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Wrong completion node after a . or an -&gt;</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The parser is not sending the correct completion kind after a . or an -&gt;
The prefix is wrong too ( it is the . or the -&gt; itself ).
The context is null.
The example I used had no prefix. The completion was required right after 
the . or the -&gt;
Andrew said this was working, I never checked myself.  
I'll look into it shortly ... 
It only works if there was a prefix after the . or the -&gt;, but it does not 
workif there is no prefix.
Actually, the no prefix problem appears also within a code block or a 
function/method body.
The wrong context is also sent within a constructor/destructor body (with or 
without a prefix).
Actually the constructor/destructor and code block problem is not a context 
problem. It is sending the wrong completion kind problem. Moving it to a 
different bug.
Should be resolved in HEAD now.</WithStack>
    <WithOutStack>The parser is not sending the correct completion kind after a . or an -&gt;
The prefix is wrong too ( it is the . or the -&gt; itself ).
The context is null.
The example I used had no prefix. The completion was required right after 
the . or the -&gt;
Andrew said this was working, I never checked myself.  
I'll look into it shortly ... 
It only works if there was a prefix after the . or the -&gt;, but it does not 
workif there is no prefix.
Actually, the no prefix problem appears also within a code block or a 
function/method body.
The wrong context is also sent within a constructor/destructor body (with or 
without a prefix).
Actually the constructor/destructor and code block problem is not a context 
problem. It is sending the wrong completion kind problem. Moving it to a 
different bug.
Should be resolved in HEAD now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48910" />
    <CreationDate amount="2003-12-16 15:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>reconliing message includes missing NLS strings {1}</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>share a project with a repo that has an existing project with the same name.
Progress shows:

reconciling {1} with {0}..
Oops, I keep forgetting to NLS before committing. At least I make them easy to 
spot;-)
Fixed in HEAD</WithStack>
    <WithOutStack>share a project with a repo that has an existing project with the same name.
Progress shows:

reconciling {1} with {0}..
Oops, I keep forgetting to NLS before committing. At least I make them easy to 
spot;-)
Fixed in HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48911" />
    <CreationDate amount="2003-12-16 15:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>log.ui.LogContentProvider.getElements (refresh) is called more then required from TraceViewer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- 7 times on open new log view</Line>
          <Line>- 3 times on part activate</Line>
          <Line>- 2 times on selection change</Line>
          <Line>code dropped to cvs on Dec 30, 6:50pm</Line>
          <Line>code checked in, please close defect. THANKS</Line>
          <Line>I checked in the latest fixes.</Line>
          <Line>Closed</Line>
          <Line>house keeping</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>- 7 times on open new log view
- 3 times on part activate
- 2 times on selection change
code dropped to cvs on Dec 30, 6:50pm
code checked in, please close defect. THANKS
I checked in the latest fixes.
Closed
house keeping</WithStack>
    <WithOutStack>- 7 times on open new log view
- 3 times on part activate
- 2 times on selection change
code dropped to cvs on Dec 30, 6:50pm
code checked in, please close defect. THANKS
I checked in the latest fixes.
Closed
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48912" />
    <CreationDate amount="2003-12-16 15:59:00 -0500" />
    <DupId amount="30826" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Pullup / Extract interface combination [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>A extends B implemnts C

I have a method in A that needs to be part of interface C.  There is not
refactoring that does that (that I can find).  I could see justifications for
adding this capbility to EITHER Pullup or ExtractInterface.


*** This bug has been marked as a duplicate of 30826 ***</WithStack>
    <WithOutStack>A extends B implemnts C

I have a method in A that needs to be part of interface C.  There is not
refactoring that does that (that I can find).  I could see justifications for
adding this capbility to EITHER Pullup or ExtractInterface.


*** This bug has been marked as a duplicate of 30826 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48913" />
    <CreationDate amount="2003-12-16 16:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refresh fails after re-attach agent:  need to re-link view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>1. Launch StartStop in controlled mode</Line>
          <Line>java -XrunpiAgent:server=controlled StartStop</Line>
          <Line>2. Use the workbench to Attach and start monitoring StartStop.</Line>
          <Line>Ensure "Boundary class included" box is NOT checked.</Line>
          <Line>3. Open the Method Statistics view after the entry prompt is displayed in the</Line>
          <Line>Profiling Console.  Refresh until no additional data is shown.</Line>
          <Line>4. Detach the agent</Line>
          <Line>5. Press enter in the terminal window.  Refresh the method statistics view and</Line>
          <Line>verify no additional data is shown.</Line>
          <Line>6. Attach the agent</Line>
          <Line>7. Press enter in the terminal window.</Line>
          <Line>8. Open the method statistics view to verify that there is no call to methodA()</Line>
          <Line>but there is a call to methodB().</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Instructions:

1. Launch StartStop in controlled mode
	java -XrunpiAgent:server=controlled StartStop
2. Use the workbench to Attach and start monitoring StartStop.  
Ensure "Boundary class included" box is NOT checked.
3. Open the Method Statistics view after the entry prompt is displayed in the 
Profiling Console.  Refresh until no additional data is shown.
4. Detach the agent
5. Press enter in the terminal window.  Refresh the method statistics view and 
verify no additional data is shown.
6. Attach the agent
7. Press enter in the terminal window. 
8. Open the method statistics view to verify that there is no call to methodA() 
but there is a call to methodB().


Problem:
After reattaching the agent, restarting monitoring, and pressing enter (Step 7
above), the refresh button fails to refresh the data in the method statistics 
view. The data shows up only if we switch away from and back to this view and 
then refresh it *or* if we re-link with the viewer.

This was encountered on W2K with the 20031216_1217 Hyades 1.2 driver.
Created attachment 7196
Testcase

Test class to be used with the above instructions.
Created attachment 7197
Java for the StartStop testcase
I have encountered the same problem when testing attach, detach and reattach 
scenarios on the same driver (WIN2K 20031216_1217).

code dropped to cvs on 18dec2003, 6:50pm
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Instructions:

1. Launch StartStop in controlled mode
	java -XrunpiAgent:server=controlled StartStop
2. Use the workbench to Attach and start monitoring StartStop.  
Ensure "Boundary class included" box is NOT checked.
3. Open the Method Statistics view after the entry prompt is displayed in the 
Profiling Console.  Refresh until no additional data is shown.
4. Detach the agent
5. Press enter in the terminal window.  Refresh the method statistics view and 
verify no additional data is shown.
6. Attach the agent
7. Press enter in the terminal window. 
8. Open the method statistics view to verify that there is no call to methodA() 
but there is a call to methodB().


Problem:
After reattaching the agent, restarting monitoring, and pressing enter (Step 7
above), the refresh button fails to refresh the data in the method statistics 
view. The data shows up only if we switch away from and back to this view and 
then refresh it *or* if we re-link with the viewer.

This was encountered on W2K with the 20031216_1217 Hyades 1.2 driver.
Created attachment 7196
Testcase

Test class to be used with the above instructions.
Created attachment 7197
Java for the StartStop testcase
I have encountered the same problem when testing attach, detach and reattach 
scenarios on the same driver (WIN2K 20031216_1217).

code dropped to cvs on 18dec2003, 6:50pm
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48914" />
    <CreationDate amount="2003-12-16 16:10:00 -0500" />
    <DupId amount="193318" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Make drop-down ToolItems behave more like real menus</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1632" end="2666" />
        <code>public static void main(String[] args) {
	final Display display = new Display();
	Shell shell = new Shell(display);
	shell.setBounds(10, 10, 400, 200);
	final Menu menu = new Menu(shell, SWT.POP_UP);
	for (int i = 0; i &lt; 8; i++) {
		MenuItem item = new MenuItem(menu, SWT.PUSH);
		item.setText("menu item " + i);
	}
	final ToolBar bar = new ToolBar(shell, SWT.FLAT | SWT.BORDER);
	bar.setBounds(10, 10, 380, 30);
	final ToolItem[] items = new ToolItem[6];
	for (int i = 0; i &lt; 6; i++) {
		items[i] = new ToolItem(bar, SWT.PUSH);
		items[i].setText("tool item " + i);
	}
	bar.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			ToolItem item = bar.getItem(new Point(event.x, 
event.y));
			Rectangle rect = item.getBounds();
			Point pt = new Point(rect.x, rect.y + rect.height);
			pt = bar.toDisplay(pt);
			menu.setLocation(pt.x, pt.y);
			menu.setVisible(true);
		}
	});
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. After a mouseDown on a ToolItem's arrow, a mouseUp must occur before an item</Line>
          <Line>from the subsequent popup can be invoked.  This is annoying.</Line>
          <Line>2. As you say, the only way to show a ToolItem's popup on mouseDown is if the</Line>
          <Line>user clicks on the arrow, not the item itself.  This is correct native ToolItem</Line>
          <Line>behaviour, but can be worked around by listening for mouseDown on the ToolBar,</Line>
          <Line>as shown below.  This will have the same issue as #1 though.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be nice if SWT allowed real dropdown menus (not ToolItems with style =
SWT.DROPDOWN; see below) to be used on ToolBars. Modern applications for Windows
 (e.g. Internet Explorer, Microsoft Word, DirectoryOpus) often allow menu and
tool bars to be customized to the extent that they behave almost identically.
Menu and tool bars can be arranged together in a single row and they can both
contain a mix of menus and tool items.

With SWT, I can put a push buttton on a tool bar and open a popup menu when the
button is pressed, but there are differences to a real menu (at least on Win32),
most importantly the menu is opened when the button is released and not when it
is pressed down.

ToolItems with style = SWT.DROPDOWN suffer from a similar problem. I can only
attach a menu to the arrow part if I want it to open when the button is pressed
down. The event for the non-arrow part is not fired until the button is released.
I don't think that real menus can be put into ToolBars; what you're probably 
seeing in other apps are similar drop-down mechanisms that are more tuned to 
behave like menus.

I see two main differences (on win32) between Menus and drop-down ToolItems:

1. After a mouseDown on a ToolItem's arrow, a mouseUp must occur before an item 
from the subsequent popup can be invoked.  This is annoying.
2. As you say, the only way to show a ToolItem's popup on mouseDown is if the 
user clicks on the arrow, not the item itself.  This is correct native ToolItem 
behaviour, but can be worked around by listening for mouseDown on the ToolBar, 
as shown below.  This will have the same issue as #1 though.

public static void main(String[] args) {
	final Display display = new Display();
	Shell shell = new Shell(display);
	shell.setBounds(10, 10, 400, 200);
	final Menu menu = new Menu(shell, SWT.POP_UP);
	for (int i = 0; i &lt; 8; i++) {
		MenuItem item = new MenuItem(menu, SWT.PUSH);
		item.setText("menu item " + i);
	}
	final ToolBar bar = new ToolBar(shell, SWT.FLAT | SWT.BORDER);
	bar.setBounds(10, 10, 380, 30);
	final ToolItem[] items = new ToolItem[6];
	for (int i = 0; i &lt; 6; i++) {
		items[i] = new ToolItem(bar, SWT.PUSH);
		items[i].setText("tool item " + i);
	}
	bar.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			ToolItem item = bar.getItem(new Point(event.x, 
event.y));
			Rectangle rect = item.getBounds();
			Point pt = new Point(rect.x, rect.y + rect.height);
			pt = bar.toDisplay(pt);
			menu.setLocation(pt.x, pt.y);
			menu.setVisible(true);
		}
	});
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}

Changing the report's title to better reflect the issue.  Perhaps #1 can be 
addressed by releasing the grab (?).  Will investigate.

Created attachment 8887
Screenshot of toolbar besides menu in IE 6

I think the OP wanted to be able to crate a setup like in the attached
screenshot. In some Windows applications, the menu bar is just one toolbar,
which can be arranged with other toolbars at the user's will.
(And of course, the menus in the menu-toolbar drop down on mousedown and
menuitems are executed on the mouseup after dragging.)
Created attachment 8955
Toolbars in Word which contain tool items and menus

I remember seeing another feature request asking for a way to put MenuBars on
CoolBars. That's what MSIE is doing and what you can see on Markus' screenshot.
My original idea was to go even further and allow Menus to be put on ToolBars,
so that you can mix Menus with other ToolItems on a single ToolBar, thus
allowing even greater flexibility (especially if an application allows the user
to change the menu/tool bars). The Microsoft Office applications are using this
kind of tool bars. I've attached a screenshot of (badly) reconfigured tool bars
in Word where you can see this.


*** This bug has been marked as a duplicate of bug 193318 ***</WithStack>
    <WithOutStack>It would be nice if SWT allowed real dropdown menus (not ToolItems with style =
SWT.DROPDOWN; see below) to be used on ToolBars. Modern applications for Windows
 (e.g. Internet Explorer, Microsoft Word, DirectoryOpus) often allow menu and
tool bars to be customized to the extent that they behave almost identically.
Menu and tool bars can be arranged together in a single row and they can both
contain a mix of menus and tool items.

With SWT, I can put a push buttton on a tool bar and open a popup menu when the
button is pressed, but there are differences to a real menu (at least on Win32),
most importantly the menu is opened when the button is released and not when it
is pressed down.

ToolItems with style = SWT.DROPDOWN suffer from a similar problem. I can only
attach a menu to the arrow part if I want it to open when the button is pressed
down. The event for the non-arrow part is not fired until the button is released.
I don't think that real menus can be put into ToolBars; what you're probably 
seeing in other apps are similar drop-down mechanisms that are more tuned to 
behave like menus.

I see two main differences (on win32) between Menus and drop-down ToolItems:

1. After a mouseDown on a ToolItem's arrow, a mouseUp must occur before an item 
from the subsequent popup can be invoked.  This is annoying.
2. As you say, the only way to show a ToolItem's popup on mouseDown is if the 
user clicks on the arrow, not the item itself.  This is correct native ToolItem 
behaviour, but can be worked around by listening for mouseDown on the ToolBar, 
as shown below.  This will have the same issue as #1 though.

public static void main(String[] args) {
	final Display display = new Display();
	Shell shell = new Shell(display);
	shell.setBounds(10, 10, 400, 200);
	final Menu menu = new Menu(shell, SWT.POP_UP);
	for (int i = 0; i &lt; 8; i++) {
		MenuItem item = new MenuItem(menu, SWT.PUSH);
		item.setText("menu item " + i);
	}
	final ToolBar bar = new ToolBar(shell, SWT.FLAT | SWT.BORDER);
	bar.setBounds(10, 10, 380, 30);
	final ToolItem[] items = new ToolItem[6];
	for (int i = 0; i &lt; 6; i++) {
		items[i] = new ToolItem(bar, SWT.PUSH);
		items[i].setText("tool item " + i);
	}
	bar.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			ToolItem item = bar.getItem(new Point(event.x, 
event.y));
			Rectangle rect = item.getBounds();
			Point pt = new Point(rect.x, rect.y + rect.height);
			pt = bar.toDisplay(pt);
			menu.setLocation(pt.x, pt.y);
			menu.setVisible(true);
		}
	});
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}

Changing the report's title to better reflect the issue.  Perhaps #1 can be 
addressed by releasing the grab (?).  Will investigate.

Created attachment 8887
Screenshot of toolbar besides menu in IE 6

I think the OP wanted to be able to crate a setup like in the attached
screenshot. In some Windows applications, the menu bar is just one toolbar,
which can be arranged with other toolbars at the user's will.
(And of course, the menus in the menu-toolbar drop down on mousedown and
menuitems are executed on the mouseup after dragging.)
Created attachment 8955
Toolbars in Word which contain tool items and menus

I remember seeing another feature request asking for a way to put MenuBars on
CoolBars. That's what MSIE is doing and what you can see on Markus' screenshot.
My original idea was to go even further and allow Menus to be put on ToolBars,
so that you can mix Menus with other ToolItems on a single ToolBar, thus
allowing even greater flexibility (especially if an application allows the user
to change the menu/tool bars). The Microsoft Office applications are using this
kind of tool bars. I've attached a screenshot of (badly) reconfigured tool bars
in Word where you can see this.


*** This bug has been marked as a duplicate of bug 193318 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48915" />
    <CreationDate amount="2003-12-16 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Typo in org.eclipse.team.core.repository extension point doc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you go to the documentation page for org.eclipse.team.core.repository, it
lists the extension point as:

org.eclipse.team.core.org.eclipse.team.core.repository

This should be fixed in the schema.  Just use the extension point's "simple
name" in the "appInfo" section at the top.
Fix released to HEAD</WithStack>
    <WithOutStack>If you go to the documentation page for org.eclipse.team.core.repository, it
lists the extension point as:

org.eclipse.team.core.org.eclipse.team.core.repository

This should be fixed in the schema.  Just use the extension point's "simple
name" in the "appInfo" section at the top.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48916" />
    <CreationDate amount="2003-12-16 16:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move of Java class generated exception [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Created a new class in the default package.</Line>
          <Line>2) Created two new folders (source, test) in my Java project.</Line>
          <Line>3) Added both folders as source folders.</Line>
          <Line>4) Created a new package in each source folder, with the same name.</Line>
          <Line>5) Moved my class to one of the new packages.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Version: 3.0.0
Build id: 200309170800

1) Created a new class in the default package.
2) Created two new folders (source, test) in my Java project.
3) Added both folders as source folders.
4) Created a new package in each source folder, with the same name.
5) Moved my class to one of the new packages.

This is what I got:
Java Model Exception: Java Model Status [&lt;project root&gt; [in TestProject] does 
not exist.]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java:476)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure
(PackageFragmentRoot.java:168)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:200)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:487)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:264)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind
(PackageFragmentRoot.java:503)
	at org.eclipse.jdt.internal.core.PackageFragment.getKind
(PackageFragment.java:264)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:89)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:200)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:487)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:264)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java:219)
	at org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType
(JavaElement.java:233)
	at org.eclipse.jdt.internal.core.CompilationUnit.getTypes
(CompilationUnit.java:768)
	at org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes
(CompilationUnit.java:512)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:208)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:147)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:133)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:97)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1418)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkInput(ReorgPolicyFactory.java:1531)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput
(MoveRefactoring.java:109)
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:65)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:100)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run
(PerformChangeOperation.java:138)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
	at 
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactori
ng(PerformRefactoringUtil.java:53)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:409)
	at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish
(UserInputWizardPage.java:119)
	at 
org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveWizard$MoveInputPage.per
formFinish(ReorgMoveWizard.java:91)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:472)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed
(RefactoringWizardDialog2.java:395)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:56)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:82)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:207)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:131)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:112)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:79)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:507)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:428)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:363)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:232)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:115)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:263)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:157)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:295)
	at org.eclipse.core.launcher.Main.run(Main.java:751)
	at org.eclipse.core.launcher.Main.main(Main.java:587)
Tried to reproduce following the provided steps using the upcoming M6 mile 
stone build. Wasn't able to do so.

Closing as works for me.</WithStack>
    <WithOutStack>Version: 3.0.0
Build id: 200309170800

1) Created a new class in the default package.
2) Created two new folders (source, test) in my Java project.
3) Added both folders as source folders.
4) Created a new package in each source folder, with the same name.
5) Moved my class to one of the new packages.

This is what I got:
Java Model Exception: Java Model Status [&lt;project root&gt; [in TestProject] does 
not exist.]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java:476)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure
(PackageFragmentRoot.java:168)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:200)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:487)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:264)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind
(PackageFragmentRoot.java:503)
	at org.eclipse.jdt.internal.core.PackageFragment.getKind
(PackageFragment.java:264)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:89)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:200)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:487)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:264)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java:219)
	at org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType
(JavaElement.java:233)
	at org.eclipse.jdt.internal.core.CompilationUnit.getTypes
(CompilationUnit.java:768)
	at org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes
(CompilationUnit.java:512)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:208)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:147)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:133)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:97)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1418)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkInput(ReorgPolicyFactory.java:1531)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput
(MoveRefactoring.java:109)
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:65)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:100)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run
(PerformChangeOperation.java:138)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
	at 
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactori
ng(PerformRefactoringUtil.java:53)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:409)
	at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish
(UserInputWizardPage.java:119)
	at 
org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveWizard$MoveInputPage.per
formFinish(ReorgMoveWizard.java:91)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:472)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed
(RefactoringWizardDialog2.java:395)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:56)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:82)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:207)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:131)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:112)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:79)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:507)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:428)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:363)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:232)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:115)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:263)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:157)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:295)
	at org.eclipse.core.launcher.Main.run(Main.java:751)
	at org.eclipse.core.launcher.Main.main(Main.java:587)
Tried to reproduce following the provided steps using the upcoming M6 mile 
stone build. Wasn't able to do so.

Closing as works for me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48917" />
    <CreationDate amount="2003-12-16 16:34:00 -0500" />
    <DupId amount="48919" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NoSuchMethodError on build Managed Make project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Create a Managed Make C++ Project</Line>
          <Line>2. In that project, create a New C++ Class</Line>
          <Line>Finishing the class starts the build.</Line>
          <Line>The build aborts with a dialog:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On Win 2000, using Sun JRE 1.3.1_03
on CDT 1.2.1M1 + Eclipse 2.1.2.

1. Create a Managed Make C++ Project
2. In that project, create a New C++ Class 
Finishing the class starts the build.
The build aborts with a dialog:

Creation of new element failed.
Reason:

Errors during build.
  java.lang.NoSuchMethodError encountered while running 
org.eclipse.cdt.managedbuilder.internal.core.GeneratedMakefileBuilder.

Alternate ways of adding stuff to a Managed Make project and
invoking the builder also fail similarly.
Problaby the same problem as PR 48919. i.e. the distribution
was compiled with JDK-1.4.x instead of 1.3.x

Cc to Doug, Reassing to Sean.


*** This bug has been marked as a duplicate of 44159 ***
Marked it as duplicate of the wrong bug
This is a problem with the JVM that the project was built under.

*** This bug has been marked as a duplicate of 48919 ***</WithStack>
    <WithOutStack>On Win 2000, using Sun JRE 1.3.1_03
on CDT 1.2.1M1 + Eclipse 2.1.2.

1. Create a Managed Make C++ Project
2. In that project, create a New C++ Class 
Finishing the class starts the build.
The build aborts with a dialog:

Creation of new element failed.
Reason:

Errors during build.
  java.lang.NoSuchMethodError encountered while running 
org.eclipse.cdt.managedbuilder.internal.core.GeneratedMakefileBuilder.

Alternate ways of adding stuff to a Managed Make project and
invoking the builder also fail similarly.
Problaby the same problem as PR 48919. i.e. the distribution
was compiled with JDK-1.4.x instead of 1.3.x

Cc to Doug, Reassing to Sean.


*** This bug has been marked as a duplicate of 44159 ***
Marked it as duplicate of the wrong bug
This is a problem with the JVM that the project was built under.

*** This bug has been marked as a duplicate of 48919 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48918" />
    <CreationDate amount="2003-12-16 16:45:00 -0500" />
    <DupId amount="50144" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ant - xdoclet task generates NullPointerException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In an Ant build script I declared the task xdoclet. I included xdoclet jars in
the Ant runtime properties. When I run the build file I get a
NullPointerException without additional information.

Here is the list of jars I have in the Ant classpath:
.../xdoclet/lib/commons-collections.jar
.../xdoclet/lib/commons-logging.jar
.../xdoclet/lib/log4j.jar
.../xdoclet/lib/xdoclet-1.2b2.jar
.../xdoclet/lib/xdoclet-xjavadoc-1.2b2.jar

In the properties of the Ant file, I defined the ant property "path.project".

Here are the messages I get when I run the "classes" target:
Buildfile:
/home/gpothier/eclipse/workbench/INA/GAProto/src/com/redcrea/ina/svg/codegen/build.xml
init:
clean-gen:
   [delete] Deleting 46 files from
/home/gpothier/eclipse/workbench/INA/GAProto/svgcodegen/com/redcrea/ina/svg
classes:
BUILD FAILED:
file:/home/gpothier/eclipse/workbench/INA/GAProto/src/com/redcrea/ina/svg/codegen/build.xml:34:
Could not create task of type: xdoclet due to java.lang.NullPointerException
Total time: 1 second


Here is the full build file:
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="SVGEditorGeneration" default="classes" &gt;
	&lt;property name="path.sources" value="${path.project}/GAProto/src"/&gt;
	&lt;property name="path.sources.svg" value="${path.sources}/com/redcrea/ina/svg"/&gt;
	&lt;property name="path.codegen.src" value="${path.sources.svg}/codegen"/&gt;

	&lt;property name="path.generated" value="${path.project}/GAProto/svgcodegen"/&gt;
	&lt;property name="path.generated.src" value="${path.generated}/com/redcrea/ina/svg"/&gt;

	&lt;path id="project.class.path"&gt;
	&lt;/path&gt;

	&lt;target name="init"&gt;
		&lt;!--&lt;uptodate property="codegen.classes.uptodate"&gt;
			&lt;srcfiles dir="${path.codegen.src}"/&gt;
			&lt;mapper type="regexp" from="${path.codegen.src}/^(.*)\.java$$"
to="${path.codegen.class}\1.class"/&gt;
		&lt;/uptodate&gt;--&gt;
	&lt;/target&gt;


	&lt;taskdef
		name="xdoclet"
		classname="xdoclet.DocletTask"
		classpath="/mnt/win_c/java/xdoclet/lib/xdoclet-1.2b2.jar"
		/&gt;


	&lt;target name="classes" depends="clean-gen"&gt;

		&lt;mkdir dir="${path.generated.src}"/&gt;
		&lt;xdoclet
			destdir="${path.sources}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/BridgesList.xdt"
				destdir="${path.generated.src}"
				destinationFile="/bridge/BridgesList.java"
				/&gt;

&lt;!--
			&lt;template
				templateFile="${path.codegen.src}/ElementMapperVisitor.xdt"
				destdir="${path.generated.src}"
				destinationFile="ElementMapperVisitor.java"
				/&gt;
--&gt;

			&lt;template
				templateFile="${path.codegen.src}/DOMFactories.xdt"
				destdir="${path.generated.src}"
				destinationFile="DOMFactories.java"
				/&gt;

			&lt;template
				templateFile="${path.codegen.src}/NodeEnablerVisitor.xdt"
				destdir="${path.generated.src}"
				destinationFile="NodeEnablerVisitor.java"
				/&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/ElementBridge.xdt"
				destinationFile="{0}ElementBridge.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="bridge"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/ElementFactory.xdt"
				destinationFile="{0}ElementFactory.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="factory"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/GraphicObject.xdt"
				destinationFile="{0}SVGGraphicObject.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="graphicobject"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/Element.xdt"
				destinationFile="{0}Element.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="element"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;


	&lt;/target&gt;

	&lt;target name="xdoclet-xml" depends="compile-gen, init"&gt;
		&lt;xdoclet
			destdir="${path.codegen.src}"
			verbose="true"
		&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/xdoclet-xml.xdt"
				destinationFile="xdoclet.xml"
				/&gt;
		&lt;/xdoclet&gt;
	&lt;/target&gt;

	&lt;target name="compile-gen" unless="codegen.classes.uptodate"
depends="clean-gen, init" &gt;
		&lt;javac srcdir="${path.codegen.src}/classes"
			destdir="${path.classes}"/&gt;
	&lt;/target&gt;

	&lt;target name="clean-gen" depends="init"&gt;
		&lt;delete file="${path.codegen.src}/xdoclet.xml"/&gt;
		&lt;delete quiet="true"&gt;
			&lt;fileset dir="${path.generated.src}"&gt;
				&lt;include name="**/*.java"/&gt;
			&lt;/fileset&gt;
		&lt;/delete&gt;
	&lt;/target&gt;
&lt;/project&gt;
I can reproduce the NPE...now to figure out what is causing it
I am assuming that you are specifying for the build to occur in a separate VM 
(JRE tab of the Ant launch configuration for the build)?

We are having problems with classes having their classloader as null.
The NPE is from line 93 of ModuleFinder.initClasspath(Class) in the xdoclet 
code.

It would appear to be our bug when running in a separate VM. If I specify for 
the build to occur in the same VM as Eclipse I do not get the null pointer. 
This is the current workaround
This appears to be essentially a duplicate of bug 37070.
I have had success doing an XDoclet build and specifying the 
xdoclet.class.path in the VM arguments of the Ant launch configuration
xdoclet.class.path specified like the following:
-Dxdoclet.class.path=C:/XDoclet1.2b2/lib/

I would like to investigate this further as to why no classloader is 
associated with the loaded class...it is spec'd that a class loaded by the 
bootstrap classloader can return null for this call..but I doubt this doclet 
task class is getting loaded by the bootstrap classloader.
I believe this is basically a bug in the implementation of XDoclet as the same 
problem occurs in JBuilder.
See 
http://opensource.atlassian.com/projects/xdoclet/secure/ViewIssue.jspa?id=11014
I think the problem is that XDoclet uses the classpath to populate its tag
handlers library. The problem can be, hem, modified, by specifying a system
property xdoclet.class.path. As launching Ant in a separate VM causes a distinct
problem, I wanted to try launching it from the same VM and setting the
xdoclet.class.path property, but I didn´t figure out how to tell the eclipse
executable to set java system properties (-Dxdoclet.class.path=...)
Use the -vmArgs commandline parameter when starting Eclipse.
With the change I just made for bug 50144 this problem should no longer occur 
in Eclipse. We were incorrectly duplicating the classpath on putting it on the 
bootpath. Need to verify this (any help would be appreciated..the fix will be 
in the integration build produced on Jan 20th, 2004).
The NPE no longer occurs as we no longer are specifying the classes on the 
bootpath so classes have a classloader.
Duplicate of 50144.

*** This bug has been marked as a duplicate of 50144 ***</WithStack>
    <WithOutStack>In an Ant build script I declared the task xdoclet. I included xdoclet jars in
the Ant runtime properties. When I run the build file I get a
NullPointerException without additional information.

Here is the list of jars I have in the Ant classpath:
.../xdoclet/lib/commons-collections.jar
.../xdoclet/lib/commons-logging.jar
.../xdoclet/lib/log4j.jar
.../xdoclet/lib/xdoclet-1.2b2.jar
.../xdoclet/lib/xdoclet-xjavadoc-1.2b2.jar

In the properties of the Ant file, I defined the ant property "path.project".

Here are the messages I get when I run the "classes" target:
Buildfile:
/home/gpothier/eclipse/workbench/INA/GAProto/src/com/redcrea/ina/svg/codegen/build.xml
init:
clean-gen:
   [delete] Deleting 46 files from
/home/gpothier/eclipse/workbench/INA/GAProto/svgcodegen/com/redcrea/ina/svg
classes:
BUILD FAILED:
file:/home/gpothier/eclipse/workbench/INA/GAProto/src/com/redcrea/ina/svg/codegen/build.xml:34:
Could not create task of type: xdoclet due to java.lang.NullPointerException
Total time: 1 second


Here is the full build file:
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="SVGEditorGeneration" default="classes" &gt;
	&lt;property name="path.sources" value="${path.project}/GAProto/src"/&gt;
	&lt;property name="path.sources.svg" value="${path.sources}/com/redcrea/ina/svg"/&gt;
	&lt;property name="path.codegen.src" value="${path.sources.svg}/codegen"/&gt;

	&lt;property name="path.generated" value="${path.project}/GAProto/svgcodegen"/&gt;
	&lt;property name="path.generated.src" value="${path.generated}/com/redcrea/ina/svg"/&gt;

	&lt;path id="project.class.path"&gt;
	&lt;/path&gt;

	&lt;target name="init"&gt;
		&lt;!--&lt;uptodate property="codegen.classes.uptodate"&gt;
			&lt;srcfiles dir="${path.codegen.src}"/&gt;
			&lt;mapper type="regexp" from="${path.codegen.src}/^(.*)\.java$$"
to="${path.codegen.class}\1.class"/&gt;
		&lt;/uptodate&gt;--&gt;
	&lt;/target&gt;


	&lt;taskdef
		name="xdoclet"
		classname="xdoclet.DocletTask"
		classpath="/mnt/win_c/java/xdoclet/lib/xdoclet-1.2b2.jar"
		/&gt;


	&lt;target name="classes" depends="clean-gen"&gt;

		&lt;mkdir dir="${path.generated.src}"/&gt;
		&lt;xdoclet
			destdir="${path.sources}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/BridgesList.xdt"
				destdir="${path.generated.src}"
				destinationFile="/bridge/BridgesList.java"
				/&gt;

&lt;!--
			&lt;template
				templateFile="${path.codegen.src}/ElementMapperVisitor.xdt"
				destdir="${path.generated.src}"
				destinationFile="ElementMapperVisitor.java"
				/&gt;
--&gt;

			&lt;template
				templateFile="${path.codegen.src}/DOMFactories.xdt"
				destdir="${path.generated.src}"
				destinationFile="DOMFactories.java"
				/&gt;

			&lt;template
				templateFile="${path.codegen.src}/NodeEnablerVisitor.xdt"
				destdir="${path.generated.src}"
				destinationFile="NodeEnablerVisitor.java"
				/&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/ElementBridge.xdt"
				destinationFile="{0}ElementBridge.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="bridge"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/ElementFactory.xdt"
				destinationFile="{0}ElementFactory.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="factory"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/GraphicObject.xdt"
				destinationFile="{0}SVGGraphicObject.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="graphicobject"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;

		&lt;xdoclet
			destdir="${path.generated}"
			verbose="true"
			&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/Element.xdt"
				destinationFile="{0}Element.java"&gt;
				&lt;packageSubstitution
					packages="codegen.classes"
					substituteWith="element"/&gt;
			&lt;/template&gt;
		&lt;/xdoclet&gt;


	&lt;/target&gt;

	&lt;target name="xdoclet-xml" depends="compile-gen, init"&gt;
		&lt;xdoclet
			destdir="${path.codegen.src}"
			verbose="true"
		&gt;
			&lt;fileset dir="${path.sources}"&gt;
				&lt;include name="**/codegen/classes/*.java"/&gt;
			&lt;/fileset&gt;

			&lt;template
				templateFile="${path.codegen.src}/xdoclet-xml.xdt"
				destinationFile="xdoclet.xml"
				/&gt;
		&lt;/xdoclet&gt;
	&lt;/target&gt;

	&lt;target name="compile-gen" unless="codegen.classes.uptodate"
depends="clean-gen, init" &gt;
		&lt;javac srcdir="${path.codegen.src}/classes"
			destdir="${path.classes}"/&gt;
	&lt;/target&gt;

	&lt;target name="clean-gen" depends="init"&gt;
		&lt;delete file="${path.codegen.src}/xdoclet.xml"/&gt;
		&lt;delete quiet="true"&gt;
			&lt;fileset dir="${path.generated.src}"&gt;
				&lt;include name="**/*.java"/&gt;
			&lt;/fileset&gt;
		&lt;/delete&gt;
	&lt;/target&gt;
&lt;/project&gt;
I can reproduce the NPE...now to figure out what is causing it
I am assuming that you are specifying for the build to occur in a separate VM 
(JRE tab of the Ant launch configuration for the build)?

We are having problems with classes having their classloader as null.
The NPE is from line 93 of ModuleFinder.initClasspath(Class) in the xdoclet 
code.

It would appear to be our bug when running in a separate VM. If I specify for 
the build to occur in the same VM as Eclipse I do not get the null pointer. 
This is the current workaround
This appears to be essentially a duplicate of bug 37070.
I have had success doing an XDoclet build and specifying the 
xdoclet.class.path in the VM arguments of the Ant launch configuration
xdoclet.class.path specified like the following:
-Dxdoclet.class.path=C:/XDoclet1.2b2/lib/

I would like to investigate this further as to why no classloader is 
associated with the loaded class...it is spec'd that a class loaded by the 
bootstrap classloader can return null for this call..but I doubt this doclet 
task class is getting loaded by the bootstrap classloader.
I believe this is basically a bug in the implementation of XDoclet as the same 
problem occurs in JBuilder.
See 
http://opensource.atlassian.com/projects/xdoclet/secure/ViewIssue.jspa?id=11014
I think the problem is that XDoclet uses the classpath to populate its tag
handlers library. The problem can be, hem, modified, by specifying a system
property xdoclet.class.path. As launching Ant in a separate VM causes a distinct
problem, I wanted to try launching it from the same VM and setting the
xdoclet.class.path property, but I didn´t figure out how to tell the eclipse
executable to set java system properties (-Dxdoclet.class.path=...)
Use the -vmArgs commandline parameter when starting Eclipse.
With the change I just made for bug 50144 this problem should no longer occur 
in Eclipse. We were incorrectly duplicating the classpath on putting it on the 
bootpath. Need to verify this (any help would be appreciated..the fix will be 
in the integration build produced on Jan 20th, 2004).
The NPE no longer occurs as we no longer are specifying the classes on the 
bootpath so classes have a classloader.
Duplicate of 50144.

*** This bug has been marked as a duplicate of 50144 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48919" />
    <CreationDate amount="2003-12-16 17:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Debug fails to launch on 1.2.1M1 build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341080016">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason>java.lang.NoSuchMethodError</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.cdt.debug.mi.core.command.MICommand.parametersToString(MICommand.java:120)</Frame>
          <Frame depth="1">org.eclipse.cdt.debug.mi.core.command.MICommand.toString(MICommand.java:132)</Frame>
          <Frame depth="2">org.eclipse.cdt.debug.mi.core.MISession.postCommand(MISession.java:310)</Frame>
          <Frame depth="3">org.eclipse.cdt.debug.mi.core.MISession.&lt;init&gt;(MISession.java:141)</Frame>
          <Frame depth="4">org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession(MIPlugin.java:76)</Frame>
          <Frame depth="5">org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession(MIPlugin.java:92)</Frame>
          <Frame depth="6">org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession(MIPlugin.java:172)</Frame>
          <Frame depth="7">org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession(MIPlugin.java:111)</Frame>
          <Frame depth="8">org.eclipse.cdt.debug.mi.core.GDBDebugger.createLaunchSession(GDBDebugger.java:70)</Frame>
          <Frame depth="9">org.eclipse.cdt.debug.mi.core.CygwinGDBDebugger.createLaunchSession(CygwinGDBDebugger.java:73)</Frame>
          <Frame depth="10">org.eclipse.cdt.launch.internal.LocalCLaunchConfigurationDelegate.launch(LocalCLaunchConfigurationDelegate.java:83)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="13">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="15">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080016">
        <Exception>java.lang.NoSuchMethodError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.debug.mi.core.command.MICommand.parametersToString(MICommand.java:120)</Frame>
          <Frame depth="1">org.eclipse.cdt.debug.mi.core.command.MICommand.toString(MICommand.java:132)</Frame>
          <Frame depth="2">org.eclipse.cdt.debug.mi.core.MISession.postCommand(MISession.java:310)</Frame>
          <Frame depth="3">org.eclipse.cdt.debug.mi.core.MISession.&lt;init&gt;(MISession.java:141)</Frame>
          <Frame depth="4">org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession(MIPlugin.java:76)</Frame>
          <Frame depth="5">org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession(MIPlugin.java:92)</Frame>
          <Frame depth="6">org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession(MIPlugin.java:172)</Frame>
          <Frame depth="7">org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession(MIPlugin.java:111)</Frame>
          <Frame depth="8">org.eclipse.cdt.debug.mi.core.GDBDebugger.createLaunchSession(GDBDebugger.java:70)</Frame>
          <Frame depth="9">org.eclipse.cdt.debug.mi.core.CygwinGDBDebugger.createLaunchSession(CygwinGDBDebugger.java:73)</Frame>
          <Frame depth="10">org.eclipse.cdt.launch.internal.LocalCLaunchConfigurationDelegate.launch(LocalCLaunchConfigurationDelegate.java:83)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="12">org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.launch(CApplicationLaunchShortcut.java:68)</Frame>
          <Frame depth="13">org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.searchAndLaunch(CApplicationLaunchShortcut.java:324)</Frame>
          <Frame depth="14">org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.launch(CApplicationLaunchShortcut.java:59)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launch(LaunchShortcutExtension.java:198)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run(LaunchShortcutAction.java:56)</Frame>
          <Frame depth="17">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="29">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Create a simple Hello World project</Line>
          <Line>2. Compile (using Cygwin toolset) to produce HelloWorld.exe</Line>
          <Line>Make sure program is compiled with -g flag for debuggability.</Line>
          <Line>3. Create a debug configuration (Cygwin GDB Debugger).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>On Win 2000, using Sun JRE 1.3.1_03
on CDT 1.2.1M1 on Eclipse 2.1.2

1. Create a simple Hello World project
2. Compile (using Cygwin toolset) to produce HelloWorld.exe
Make sure program is compiled with -g flag for debuggability.
3. Create a debug configuration (Cygwin GDB Debugger).

A dialog appears:
Exception occurred while launching.

When the dialog is dismissed, the Debug Perspective is shown but
with nothing in the Debug pane.

The following messages were in my ECLIPSE/workspace/.metadata/.log file:

!ENTRY org.eclipse.debug.ui 4 120 Dec 16, 2003 16:32:18.359
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.NoSuchMethodError
	at org.eclipse.cdt.debug.mi.core.command.MICommand.parametersToString
(MICommand.java:120)
	at org.eclipse.cdt.debug.mi.core.command.MICommand.toString
(MICommand.java:132)
	at org.eclipse.cdt.debug.mi.core.MISession.postCommand
(MISession.java:310)
	at org.eclipse.cdt.debug.mi.core.MISession.&lt;init&gt;(MISession.java:141)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession
(MIPlugin.java:76)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession
(MIPlugin.java:92)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession
(MIPlugin.java:172)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession
(MIPlugin.java:111)
	at org.eclipse.cdt.debug.mi.core.GDBDebugger.createLaunchSession
(GDBDebugger.java:70)
	at org.eclipse.cdt.debug.mi.core.CygwinGDBDebugger.createLaunchSession
(CygwinGDBDebugger.java:73)
	at 
org.eclipse.cdt.launch.internal.LocalCLaunchConfigurationDelegate.launch
(LocalCLaunchConfigurationDelegate.java:83)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.ui 4 4 Dec 16, 2003 16:43:09.78
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Dec 16, 2003 16:43:09.78
!MESSAGE java.lang.NoSuchMethodError
!STACK 0
java.lang.NoSuchMethodError
	at org.eclipse.cdt.debug.mi.core.command.MICommand.parametersToString
(MICommand.java:120)
	at org.eclipse.cdt.debug.mi.core.command.MICommand.toString
(MICommand.java:132)
	at org.eclipse.cdt.debug.mi.core.MISession.postCommand
(MISession.java:310)
	at org.eclipse.cdt.debug.mi.core.MISession.&lt;init&gt;(MISession.java:141)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession
(MIPlugin.java:76)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createMISession
(MIPlugin.java:92)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession
(MIPlugin.java:172)
	at org.eclipse.cdt.debug.mi.core.MIPlugin.createCSession
(MIPlugin.java:111)
	at org.eclipse.cdt.debug.mi.core.GDBDebugger.createLaunchSession
(GDBDebugger.java:70)
	at org.eclipse.cdt.debug.mi.core.CygwinGDBDebugger.createLaunchSession
(CygwinGDBDebugger.java:73)
	at 
org.eclipse.cdt.launch.internal.LocalCLaunchConfigurationDelegate.launch
(LocalCLaunchConfigurationDelegate.java:83)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.launch
(CApplicationLaunchShortcut.java:68)
	at 
org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.searchAndLaunch
(CApplicationLaunchShortcut.java:324)
	at org.eclipse.cdt.launch.internal.CApplicationLaunchShortcut.launch
(CApplicationLaunchShortcut.java:59)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launc
h(LaunchShortcutExtension.java:198)
	at org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run
(LaunchShortcutAction.java:56)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Doug, I think you are compiling the 1_2_1 with JDK-1.4.x
when doing the distribution.  It needs to be with JDK-1.3.x
for this to work.

A new method was put in the JDK-1.4.x that the compiler will pick
first.

I can fix this by forcing the overloading the StringBuffer.append(),
for the debugger, but they may be other place.  The good
fix is to compile with JDK-1.3.x

Fix in the debugger, but Reassign to Doug
*** Bug 48917 has been marked as a duplicate of this bug. ***
Yup, building with wrong JDK bad.</WithStack>
    <WithOutStack>On Win 2000, using Sun JRE 1.3.1_03
on CDT 1.2.1M1 on Eclipse 2.1.2

1. Create a simple Hello World project
2. Compile (using Cygwin toolset) to produce HelloWorld.exe
Make sure program is compiled with -g flag for debuggability.
3. Create a debug configuration (Cygwin GDB Debugger).

A dialog appears:
Exception occurred while launching.

When the dialog is dismissed, the Debug Perspective is shown but
with nothing in the Debug pane.

The following messages were in my ECLIPSE/workspace/.metadata/.log file:

!ENTRY org.eclipse.debug.ui 4 120 Dec 16, 2003 16:32:18.359
!MESSAGE Error logged from Debug UI: 
!STACK 0
!ENTRY org.eclipse.ui 4 4 Dec 16, 2003 16:43:09.78
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Dec 16, 2003 16:43:09.78
!MESSAGE java.lang.NoSuchMethodError
!STACK 0

Doug, I think you are compiling the 1_2_1 with JDK-1.4.x
when doing the distribution.  It needs to be with JDK-1.3.x
for this to work.

A new method was put in the JDK-1.4.x that the compiler will pick
first.

I can fix this by forcing the overloading the StringBuffer.append(),
for the debugger, but they may be other place.  The good
fix is to compile with JDK-1.3.x

Fix in the debugger, but Reassign to Doug
*** Bug 48917 has been marked as a duplicate of this bug. ***
Yup, building with wrong JDK bad.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48920" />
    <CreationDate amount="2003-12-16 17:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>When a test is user-aborted, stop time is not noted in the overivew of the Execution Result</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When a test is user-aborted, stop time is not noted in the overivew of the 
Execution Result
This was fixed in Hyades 1.2.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>When a test is user-aborted, stop time is not noted in the overivew of the 
Execution Result
This was fixed in Hyades 1.2.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48921" />
    <CreationDate amount="2003-12-16 17:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PE Windows parser does not identify object files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Create a new Standard Make project</Line>
          <Line>2. Create a "helloworld.cpp"</Line>
          <Line>3. Add a Makefile which builds "helloworld.o" then "helloworld.exe"</Line>
          <Line>4. Build it.</Line>
          <Line>In the C/C++ Projects pane, the file icons for the built files is</Line>
          <Line>generic.</Line>
          <Line>5. Change the project's binary parser to "PE Windows Parser".</Line>
          <Line>The helloworld.exe icon changes appropriate to a bug.</Line>
          <Line>The helloworld.o icon remains generic.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On Win2000, using JRE 1.3.1_03, Cygwin, CDT 1.2.1M1, Eclipse 2.1.2.

1. Create a new Standard Make project
2. Create a "helloworld.cpp"
3. Add a Makefile which builds "helloworld.o" then "helloworld.exe"
4. Build it.
In the C/C++ Projects pane, the file icons for the built files is
generic.
5. Change the project's binary parser to "PE Windows Parser".
The helloworld.exe icon changes appropriate to a bug.
The helloworld.o icon remains generic.

EXPECTED: This is a regression from 1.2 behaviour.
The PE Windows Parser used to identify object (.o) files as "[x86le]"
and change the icon appropriately

(This also needs to be fixed in the 2.0 stream.)
Should be fix in the Branch too as Brent noticed.
Fixed in the head and branch.

thanks for noticed this.</WithStack>
    <WithOutStack>On Win2000, using JRE 1.3.1_03, Cygwin, CDT 1.2.1M1, Eclipse 2.1.2.

1. Create a new Standard Make project
2. Create a "helloworld.cpp"
3. Add a Makefile which builds "helloworld.o" then "helloworld.exe"
4. Build it.
In the C/C++ Projects pane, the file icons for the built files is
generic.
5. Change the project's binary parser to "PE Windows Parser".
The helloworld.exe icon changes appropriate to a bug.
The helloworld.o icon remains generic.

EXPECTED: This is a regression from 1.2 behaviour.
The PE Windows Parser used to identify object (.o) files as "[x86le]"
and change the icon appropriately

(This also needs to be fixed in the 2.0 stream.)
Should be fix in the Branch too as Brent noticed.
Fixed in the head and branch.

thanks for noticed this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48922" />
    <CreationDate amount="2003-12-16 17:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>When a test is user-aborted, stop time is not noted in the overivew of the Execution Result</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When a test is user-aborted, stop time is not noted in the overivew of the 
Execution Result
Fixed.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>When a test is user-aborted, stop time is not noted in the overivew of the 
Execution Result
Fixed.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48923" />
    <CreationDate amount="2003-12-16 17:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Fix XML Fragment generation for multi-threaded access from asynchronous loops</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The existing XML fragment generation code (which uses notifications from the 
JUnit listener interace in conjunction with data stored in test instances and 
in the AsynchronousThread class) simply didn't work.  You couldn't tell, 
because the hierarchy was never shown in the execution history view.
This fix is arduous and difficult to follow.  As soon as possible, this should 
be extensively refactored (hopefully starting with the assumptions made at 
code-gen time about the structure of our JUnit based tests, and the method by 
which we implement asynchronous actions and loops.)  But for now, it all works 
and has been tested.
house keeping
Closing...</WithStack>
    <WithOutStack>The existing XML fragment generation code (which uses notifications from the 
JUnit listener interace in conjunction with data stored in test instances and 
in the AsynchronousThread class) simply didn't work.  You couldn't tell, 
because the hierarchy was never shown in the execution history view.
This fix is arduous and difficult to follow.  As soon as possible, this should 
be extensively refactored (hopefully starting with the assumptions made at 
code-gen time about the structure of our JUnit based tests, and the method by 
which we implement asynchronous actions and loops.)  But for now, it all works 
and has been tested.
house keeping
Closing...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48924" />
    <CreationDate amount="2003-12-16 17:24:00 -0500" />
    <DupId amount="45138" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>CVS 1.11.10 Server breaks - error - problem CVS Repositories View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Upgraded CVS server from 1.11.5 to 1.11.10 and this breaks the CVS Repositories
view. By break I mean nothing is appearing underneath the HEAD, Branches or
Versions nodes. I can create the repository location without problems.

Client Environment:

  OS: Windows 2000
  JRE: build 1.4.1_06-b01
  Connection method: ext

CVS Server:

  OS: SunOS build 5.9 Generic_112233-03 sun4u sparc SUNW,Sun-Fire-280R
  CVS: 1.11.10

Note: this problem is not happening in 3.0M5 [same exact setup].

Also note: cvs command line is working and a project that was previously
"hooked-up" is working from within Eclipse.
Fix will be in 2.1.3.

*** This bug has been marked as a duplicate of 45138 ***</WithStack>
    <WithOutStack>Upgraded CVS server from 1.11.5 to 1.11.10 and this breaks the CVS Repositories
view. By break I mean nothing is appearing underneath the HEAD, Branches or
Versions nodes. I can create the repository location without problems.

Client Environment:

  OS: Windows 2000
  JRE: build 1.4.1_06-b01
  Connection method: ext

CVS Server:

  OS: SunOS build 5.9 Generic_112233-03 sun4u sparc SUNW,Sun-Fire-280R
  CVS: 1.11.10

Note: this problem is not happening in 3.0M5 [same exact setup].

Also note: cvs command line is working and a project that was previously
"hooked-up" is working from within Eclipse.
Fix will be in 2.1.3.

*** This bug has been marked as a duplicate of 45138 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48925" />
    <CreationDate amount="2003-12-16 17:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add Refactor-&gt;Delete [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="279" end="305" />
        <code>public void foo(int y)
{
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Refactor-&gt;Delete should examine the marked area and allow deleting all 
items that are no longer referenced after the deletion. Possibly tie the 
Refactor-&gt;Delete to the "del" key in "smart insert mode".

E.g.

int x;

foo(x); // when Refector-&gt;Delete'd, x can be removed.


public void foo(int y)
{
}


When the "int y" parameters is deleted, all invocations should be fixed.

Øyvind
Removing the parameter can be done with change method signature. 


Special delete refactoring will very likely not happen for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The Refactor-&gt;Delete should examine the marked area and allow deleting all 
items that are no longer referenced after the deletion. Possibly tie the 
Refactor-&gt;Delete to the "del" key in "smart insert mode".

E.g.

int x;

foo(x); // when Refector-&gt;Delete'd, x can be removed.


public void foo(int y)
{
}


When the "int y" parameters is deleted, all invocations should be fixed.

Øyvind
Removing the parameter can be done with change method signature. 


Special delete refactoring will very likely not happen for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48926" />
    <CreationDate amount="2003-12-16 17:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Invalid diff for map files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>For today's build (i1216:1717) I got an email saying that the core.map file has
been updated for the build. This is incorrect and it is the same as the previous
build (i1216:1600).

The previous build failed, so perhaps the "builder map file cache" is in an out
of sync state.
The purpose of diffing the map files is to determine what has changed between 
builds that teams can validate.  So for today, the diff occurred between the 
noon build and the 5:17 build.  By comparing versions v200312161200 and 
v200312161717 of org.eclipse.releng on dev.eclipse.org, you will see that the 
diff result is indeed valid.</WithStack>
    <WithOutStack>For today's build (i1216:1717) I got an email saying that the core.map file has
been updated for the build. This is incorrect and it is the same as the previous
build (i1216:1600).

The previous build failed, so perhaps the "builder map file cache" is in an out
of sync state.
The purpose of diffing the map files is to determine what has changed between 
builds that teams can validate.  So for today, the diff occurred between the 
noon build and the 5:17 build.  By comparing versions v200312161200 and 
v200312161717 of org.eclipse.releng on dev.eclipse.org, you will see that the 
diff result is indeed valid.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48927" />
    <CreationDate amount="2003-12-16 18:03:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>clean up command line args</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current/old runtime has a mess of command line args for various special 
cases etc.  Some of these are obsolete, and others can/should be handled 
differently in the code.  This bug report is to track the changes and will be 
resolved when we have a complete list of command line args and their uses.
done.  cleaned up.</WithStack>
    <WithOutStack>The current/old runtime has a mess of command line args for various special 
cases etc.  Some of these are obsolete, and others can/should be handled 
differently in the code.  This bug report is to track the changes and will be 
resolved when we have a complete list of command line args and their uses.
done.  cleaned up.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48928" />
    <CreationDate amount="2003-12-16 18:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE starting runtime workbench</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341080026">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(PlatformURLConnection.java:319)</Frame>
          <Frame depth="1">org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:63)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.protocol.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)</Frame>
          <Frame depth="3">java.net.URL.openConnection(URL.java:943)</Frame>
          <Frame depth="4">org.eclipse.update.internal.configurator.PlatformConfiguration.resolvePlatformURL(PlatformConfiguration.java:1669)</Frame>
          <Frame depth="5">org.eclipse.update.internal.configurator.SiteEntry.&lt;init&gt;(SiteEntry.java:68)</Frame>
          <Frame depth="6">org.eclipse.update.internal.configurator.PlatformConfiguration.createSiteEntry(PlatformConfiguration.java:174)</Frame>
          <Frame depth="7">org.eclipse.update.internal.configurator.PlatformConfiguration.getRootSite(PlatformConfiguration.java:752)</Frame>
          <Frame depth="8">org.eclipse.update.internal.configurator.PlatformConfiguration.load(PlatformConfiguration.java:1103)</Frame>
          <Frame depth="9">org.eclipse.update.internal.configurator.PlatformConfiguration.initializeCurrent(PlatformConfiguration.java:701)</Frame>
          <Frame depth="10">org.eclipse.update.internal.configurator.PlatformConfiguration.&lt;init&gt;(PlatformConfiguration.java:138)</Frame>
          <Frame depth="11">org.eclipse.update.internal.configurator.PlatformConfiguration.startup(PlatformConfiguration.java:633)</Frame>
          <Frame depth="12">org.eclipse.update.internal.configurator.ConfigurationActivator.getPlatformConfiguration(ConfigurationActivator.java:242)</Frame>
          <Frame depth="13">org.eclipse.update.internal.configurator.ConfigurationActivator.initialize(ConfigurationActivator.java:82)</Frame>
          <Frame depth="14">org.eclipse.update.internal.configurator.ConfigurationActivator.start(ConfigurationActivator.java:53)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1185)</Frame>
          <Frame depth="16">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1178)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:1110)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:458)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.Bundle.resume(Bundle.java:407)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1338)</Frame>
          <Frame depth="22">org.eclipse.osgi.framework.internal.core.StartLevelImpl.resumeBundles(StartLevelImpl.java:633)</Frame>
          <Frame depth="23">org.eclipse.osgi.framework.internal.core.StartLevelImpl.incFWSL(StartLevelImpl.java:537)</Frame>
          <Frame depth="24">org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:294)</Frame>
          <Frame depth="25">org.eclipse.osgi.framework.internal.core.StartLevelImpl.dispatchEvent(StartLevelImpl.java:492)</Frame>
          <Frame depth="26">org.eclipse.osgi.framework.eventmgr.ListenerList.dispatchEvent(ListenerList.java:150)</Frame>
          <Frame depth="27">org.eclipse.osgi.framework.eventmgr.EventThread$EventThreadItem.dispatchEvent(EventThread.java:61)</Frame>
          <Frame depth="28">org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:120)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080026">
        <Exception>java.lang.RuntimeException</Exception>
        <Reason>Unable to locate application extension:
org.eclipse.ui.ide.workbench</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:212)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:84)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="4">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="5">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20031216 (1717)

If I try to start a runtime workbench on my existing workspace with this build,
I get a NullPointerException.  This happens regardless of whether I have
org.eclipse.platform in my workspace.

!SESSION Dec 16, 2003 18:09:09.335 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -pdelaunch -feature org.eclipse.platform -dev bin -debug
file:d:\1target\plugins\.metadata\.plugins\org.eclipse.pde.core\d___eclipse_test/.options
-os win32 -ws win32 -arch x86 -debug -configuration
file:d:/1target/plugins/.metadata/.plugins/org.eclipse.pde.core/d___eclipse_test
!ENTRY org.eclipse.core.runtime 4 0 Dec 16, 2003 18:09:09.350
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(PlatformURLConnection.java:319)
	at
org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:63)
	at
org.eclipse.osgi.framework.internal.protocol.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.net.URL.openConnection(URL.java:943)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.resolvePlatformURL(PlatformConfiguration.java:1669)
	at org.eclipse.update.internal.configurator.SiteEntry.&lt;init&gt;(SiteEntry.java:68)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.createSiteEntry(PlatformConfiguration.java:174)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.getRootSite(PlatformConfiguration.java:752)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.load(PlatformConfiguration.java:1103)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.initializeCurrent(PlatformConfiguration.java:701)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.&lt;init&gt;(PlatformConfiguration.java:138)
	at
org.eclipse.update.internal.configurator.PlatformConfiguration.startup(PlatformConfiguration.java:633)
	at
org.eclipse.update.internal.configurator.ConfigurationActivator.getPlatformConfiguration(ConfigurationActivator.java:242)
	at
org.eclipse.update.internal.configurator.ConfigurationActivator.initialize(ConfigurationActivator.java:82)
	at
org.eclipse.update.internal.configurator.ConfigurationActivator.start(ConfigurationActivator.java:53)
	at
org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1185)
	at java.security.AccessController.doPrivileged(Native Method)
	at
org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1178)
	at
org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:1110)
	at
org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:458)
	at org.eclipse.osgi.framework.internal.core.Bundle.resume(Bundle.java:407)
	at
org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1338)
	at
org.eclipse.osgi.framework.internal.core.StartLevelImpl.resumeBundles(StartLevelImpl.java:633)
	at
org.eclipse.osgi.framework.internal.core.StartLevelImpl.incFWSL(StartLevelImpl.java:537)
	at
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:294)
	at
org.eclipse.osgi.framework.internal.core.StartLevelImpl.dispatchEvent(StartLevelImpl.java:492)
	at
org.eclipse.osgi.framework.eventmgr.ListenerList.dispatchEvent(ListenerList.java:150)
	at
org.eclipse.osgi.framework.eventmgr.EventThread$EventThreadItem.dispatchEvent(EventThread.java:61)
	at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:120)
!ENTRY org.eclipse.core.runtime 4 13 Dec 16, 2003 18:09:09.366
!MESSAGE Unable to locate application extension: org.eclipse.ui.ide.workbench
!STACK 0
java.lang.RuntimeException: Unable to locate application extension:
org.eclipse.ui.ide.workbench
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:212)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
I wasted caught up to latest changes</WithStack>
    <WithOutStack>I20031216 (1717)

If I try to start a runtime workbench on my existing workspace with this build,
I get a NullPointerException.  This happens regardless of whether I have
org.eclipse.platform in my workspace.

!SESSION Dec 16, 2003 18:09:09.335 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -pdelaunch -feature org.eclipse.platform -dev bin -debug
file:d:\1target\plugins\.metadata\.plugins\org.eclipse.pde.core\d___eclipse_test/.options
-os win32 -ws win32 -arch x86 -debug -configuration
file:d:/1target/plugins/.metadata/.plugins/org.eclipse.pde.core/d___eclipse_test
!ENTRY org.eclipse.core.runtime 4 0 Dec 16, 2003 18:09:09.350
!MESSAGE 
!STACK 0
!ENTRY org.eclipse.core.runtime 4 13 Dec 16, 2003 18:09:09.366
!MESSAGE Unable to locate application extension: org.eclipse.ui.ide.workbench
!STACK 0

I wasted caught up to latest changes</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48929" />
    <CreationDate amount="2003-12-16 18:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>z/OS:  Remote Log Import does not work because of incorrect encoding in adapter file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>a) have a separate set of adapter files for z/OS with IBM-1047 encoding - (Pro:</Line>
          <Line>user can easily modify the files on z/.OS    Con: extra work required in terms</Line>
          <Line>of maintenance and packaging)</Line>
          <Line>b) package the adapter files as binary on z/OS  (Pro: one set of adapter files</Line>
          <Line>for all platforms  Con: user cannot easily modify the adaptor files)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1) XML parsing of the adapter file failed because of the incorrect encoding.</Line>
          <Line>We currently package the adapter file as a text file on z/OS so to read it with</Line>
          <Line>the SAX parser the encoding specifed in the file needs to be IBM-1047.</Line>
          <Line />
          <Line>2) The StaticParserWrapper class updates the adapter configuration with</Line>
          <Line>properties specified by the user on the UI and then saves the configuration in</Line>
          <Line>a new temporary adapter file.  When it saves the configuration, currently it</Line>
          <Line>saves it as a text file with the default UTF-8 encoding.  The adapter running</Line>
          <Line>on z/OS can't parse the new adapter file because of its incorrect encoding.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Remote import of logs on z/OS does not work.  I found two problems:

1) XML parsing of the adapter file failed because of the incorrect encoding.  
We currently package the adapter file as a text file on z/OS so to read it with 
the SAX parser the encoding specifed in the file needs to be IBM-1047.  

2) The StaticParserWrapper class updates the adapter configuration with 
properties specified by the user on the UI and then saves the configuration in 
a new temporary adapter file.  When it saves the configuration, currently it 
saves it as a text file with the default UTF-8 encoding.  The adapter running 
on z/OS can't parse the new adapter file because of its incorrect encoding.

There are two solutions for problem 1)
a) have a separate set of adapter files for z/OS with IBM-1047 encoding - (Pro: 
user can easily modify the files on z/.OS    Con: extra work required in terms 
of maintenance and packaging)
b) package the adapter files as binary on z/OS  (Pro: one set of adapter files 
for all platforms  Con: user cannot easily modify the adaptor files) 

The solution to problem 2) is a small code change to 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.saveConfigFile 
for z/OS to save the file with IBM-1047 encoding.
These problems were fixed in 1.2.1.  Problem 1 was fixed with solution b)
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Remote import of logs on z/OS does not work.  I found two problems:

1) XML parsing of the adapter file failed because of the incorrect encoding.  
We currently package the adapter file as a text file on z/OS so to read it with 
the SAX parser the encoding specifed in the file needs to be IBM-1047.  

2) The StaticParserWrapper class updates the adapter configuration with 
properties specified by the user on the UI and then saves the configuration in 
a new temporary adapter file.  When it saves the configuration, currently it 
saves it as a text file with the default UTF-8 encoding.  The adapter running 
on z/OS can't parse the new adapter file because of its incorrect encoding.

There are two solutions for problem 1)
a) have a separate set of adapter files for z/OS with IBM-1047 encoding - (Pro: 
user can easily modify the files on z/.OS    Con: extra work required in terms 
of maintenance and packaging)
b) package the adapter files as binary on z/OS  (Pro: one set of adapter files 
for all platforms  Con: user cannot easily modify the adaptor files) 

The solution to problem 2) is a small code change to 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.saveConfigFile 
for z/OS to save the file with IBM-1047 encoding.
These problems were fixed in 1.2.1.  Problem 1 was fixed with solution b)
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48930" />
    <CreationDate amount="2003-12-16 18:53:00 -0500" />
    <DupId amount="47927" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>[Contributions] RegistryReader errors cause widespread problems in the workbench</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341080034">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.registry.RegistryReader$1.compare(RegistryReader.java:102)</Frame>
          <Frame depth="1">java.util.Arrays.mergeSort(Arrays.java:1237)</Frame>
          <Frame depth="2">java.util.Arrays.mergeSort(Arrays.java:1245)</Frame>
          <Frame depth="3">java.util.Arrays.mergeSort(Arrays.java:1245)</Frame>
          <Frame depth="4">java.util.Arrays.sort(Arrays.java:1185)</Frame>
          <Frame depth="5">java.util.Collections.sort(Collections.java:151)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.registry.RegistryReader.orderExtensions(RegistryReader.java:107)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.registry.RegistryReader.readRegistry(RegistryReader.java:158)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PluginActionBuilder.readContributions(PluginActionBuilder.java:100)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ViewerActionBuilder.readViewerContributions(ViewerActionBuilder.java:113)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PopupMenuExtender.readStaticActions(PopupMenuExtender.java:97)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PopupMenuExtender.&lt;init&gt;(PopupMenuExtender.java:50)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.PartSite.registerContextMenu(PartSite.java:181)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PartSite.registerContextMenu(PartSite.java:187)</Frame>
          <Frame depth="14">org.eclipse.ui.views.navigator.ResourceNavigator.initContextMenu(ResourceNavigator.java:295)</Frame>
          <Frame depth="15">org.eclipse.ui.views.navigator.ResourceNavigator.createPartControl(ResourceNavigator.java:238)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:161)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:157)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:211)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:206)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:253)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:225)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:192)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:130)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:731)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1884)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:1754)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1741)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1363)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1325)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.access$8(Workbench.java:1293)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1215)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1171)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.init(Workbench.java:870)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1459)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="42">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="44">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="48">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="49">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080034">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.registry.RegistryReader$1.compare(RegistryReader.java:102)</Frame>
          <Frame depth="1">java.util.Arrays.mergeSort(Arrays.java:1237)</Frame>
          <Frame depth="2">java.util.Arrays.mergeSort(Arrays.java:1245)</Frame>
          <Frame depth="3">java.util.Arrays.mergeSort(Arrays.java:1245)</Frame>
          <Frame depth="4">java.util.Arrays.sort(Arrays.java:1185)</Frame>
          <Frame depth="5">java.util.Collections.sort(Collections.java:151)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.registry.RegistryReader.orderExtensions(RegistryReader.java:107)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.registry.RegistryReader.readRegistry(RegistryReader.java:158)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PluginActionBuilder.readContributions(PluginActionBuilder.java:100)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ViewerActionBuilder.readViewerContributions(ViewerActionBuilder.java:113)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PopupMenuExtender.readStaticActions(PopupMenuExtender.java:97)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PopupMenuExtender.&lt;init&gt;(PopupMenuExtender.java:50)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.PartSite.registerContextMenu(PartSite.java:181)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PartSite.registerContextMenu(PartSite.java:187)</Frame>
          <Frame depth="14">org.eclipse.ui.views.markers.internal.TableView.createPartControl(TableView.java:156)</Frame>
          <Frame depth="15">org.eclipse.ui.views.markers.internal.MarkerView.createPartControl(MarkerView.java:256)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:161)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:157)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:211)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:206)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:253)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:225)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:192)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:130)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:731)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1884)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:1754)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1741)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1363)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1325)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.access$8(Workbench.java:1293)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1215)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1171)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.init(Workbench.java:870)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1459)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="42">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="44">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="48">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="49">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="2259" end="2336" />
        <code>IExtensionPoint point = registry.getExtensionPoint(pluginId, extensionPoint);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2337" end="2385" />
        <code>IExtension[] extensions = point.getExtensions();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2447" end="2501" />
        <code>.getDeclaringPluginDescriptor().getUniqueIdentifier();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>M6 candidate, Wed. 4pm build

I installed the new M6 build, and also unzipped the releng plugin on top.
I launched eclipse on an existing workspace that I've been using for a week or 
so, and the workbench came up fine.
I then closed eclipse, removed the releng plugin, and launched eclipse again 
(same workspace). The workbench came up, but all the views had no content (I 
was in the Java Browser perspective) and were gray.

Here is the .log:

!SESSION Dec 16, 2003 18:40:01.944 --------------------------------------------
-
java.version=1.4.1_03-ea
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -configuration 
file:d:\eclipse/.config -install file:d:/eclipse/
!ENTRY org.eclipse.core.runtime 2 0 Dec 16, 2003 18:40:01.944
!MESSAGE Legacy plug-in "org.eclipse.jdt.launching" must not be automatically 
activated on startup. This is probably caused by a previous crash in Eclipse.
!ENTRY org.eclipse.core.runtime 2 0 Dec 16, 2003 18:40:01.984
!MESSAGE Legacy plug-in "org.eclipse.pde.core" must not be automatically 
activated on startup. This is probably caused by a previous crash in Eclipse.
!ENTRY org.eclipse.core.runtime 4 2 Dec 16, 2003 18:40:08.744
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.registry.RegistryReader$1.compare
(RegistryReader.java:102)
	at java.util.Arrays.mergeSort(Arrays.java:1237)
	at java.util.Arrays.mergeSort(Arrays.java:1245)
	at java.util.Arrays.mergeSort(Arrays.java:1245)
	at java.util.Arrays.sort(Arrays.java:1185)
	at java.util.Collections.sort(Collections.java:151)
	at org.eclipse.ui.internal.registry.RegistryReader.orderExtensions
(RegistryReader.java:107)
	at org.eclipse.ui.internal.registry.RegistryReader.readRegistry
(RegistryReader.java:158)
	at org.eclipse.ui.internal.PluginActionBuilder.readContributions
(PluginActionBuilder.java:100)
	at org.eclipse.ui.internal.ViewerActionBuilder.readViewerContributions
(ViewerActionBuilder.java:113)
	at org.eclipse.ui.internal.PopupMenuExtender.readStaticActions
(PopupMenuExtender.java:97)
	at org.eclipse.ui.internal.PopupMenuExtender.&lt;init&gt;
(PopupMenuExtender.java:50)
	at org.eclipse.ui.internal.PartSite.registerContextMenu
(PartSite.java:181)
	at org.eclipse.ui.internal.PartSite.registerContextMenu
(PartSite.java:187)
	at org.eclipse.ui.views.navigator.ResourceNavigator.initContextMenu
(ResourceNavigator.java:295)
	at org.eclipse.ui.views.navigator.ResourceNavigator.createPartControl
(ResourceNavigator.java:238)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:161)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
	at org.eclipse.core.runtime.Platform.run(Platform.java:447)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:157)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:211)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:206)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:253)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:225)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:192)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:130)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:731)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1884)
	at org.eclipse.ui.internal.WorkbenchWindow$6.run
(WorkbenchWindow.java:1754)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1741)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1363)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.access$8(Workbench.java:1293)
	at org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1215)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
	at org.eclipse.core.runtime.Platform.run(Platform.java:447)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1171)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:870)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1459)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.core.runtime 4 2 Dec 16, 2003 18:40:09.104
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.registry.RegistryReader$1.compare
(RegistryReader.java:102)
	at java.util.Arrays.mergeSort(Arrays.java:1237)
	at java.util.Arrays.mergeSort(Arrays.java:1245)
	at java.util.Arrays.mergeSort(Arrays.java:1245)
	at java.util.Arrays.sort(Arrays.java:1185)
	at java.util.Collections.sort(Collections.java:151)
	at org.eclipse.ui.internal.registry.RegistryReader.orderExtensions
(RegistryReader.java:107)
	at org.eclipse.ui.internal.registry.RegistryReader.readRegistry
(RegistryReader.java:158)
	at org.eclipse.ui.internal.PluginActionBuilder.readContributions
(PluginActionBuilder.java:100)
	at org.eclipse.ui.internal.ViewerActionBuilder.readViewerContributions
(ViewerActionBuilder.java:113)
	at org.eclipse.ui.internal.PopupMenuExtender.readStaticActions
(PopupMenuExtender.java:97)
	at org.eclipse.ui.internal.PopupMenuExtender.&lt;init&gt;
(PopupMenuExtender.java:50)
	at org.eclipse.ui.internal.PartSite.registerContextMenu
(PartSite.java:181)
	at org.eclipse.ui.internal.PartSite.registerContextMenu
(PartSite.java:187)
	at org.eclipse.ui.views.markers.internal.TableView.createPartControl
(TableView.java:156)
	at org.eclipse.ui.views.markers.internal.MarkerView.createPartControl
(MarkerView.java:256)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:161)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
	at org.eclipse.core.runtime.Platform.run(Platform.java:447)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:157)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:211)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:206)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:253)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:225)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:192)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:130)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:731)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1884)
	at org.eclipse.ui.internal.WorkbenchWindow$6.run
(WorkbenchWindow.java:1754)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1741)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1363)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.access$8(Workbench.java:1293)
	at org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1215)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
	at org.eclipse.core.runtime.Platform.run(Platform.java:447)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1171)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:870)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1459)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.core.resources 2 1 Dec 16, 2003 18:40:12.28
!MESSAGE Skipping builder org.eclipse.pde.ui.ManifestBuilder for project 
org.eclipse.update.tests.core. Either the builder is missing from the install, 
or it belongs to a project nature that is missing or disabled.
!ENTRY org.eclipse.core.resources 2 1 Dec 16, 2003 18:40:12.48
!MESSAGE Skipping builder org.eclipse.pde.ui.SchemaBuilder for project 
org.eclipse.update.tests.core. Either the builder is missing from the install, 
or it belongs to a project nature that is missing or disabled.


It looks like the error handling in the registry reader is not robust enough 
to deal with missing actions, etc.
we have a break in some older code. it seems that a call to:

IExtensionPoint point = registry.getExtensionPoint(pluginId, extensionPoint);
IExtension[] extensions = point.getExtensions();

one or more of the extensions in this array throw NPE when:
.getDeclaringPluginDescriptor().getUniqueIdentifier();

moving to core for comment. should this be possible?
Looks like a dup of bug 47927.



*** This bug has been marked as a duplicate of 47927 ***


*** This bug has been marked as a duplicate of 47927 ***

*** This bug has been marked as a duplicate of 47927 ***</WithStack>
    <WithOutStack>M6 candidate, Wed. 4pm build

I installed the new M6 build, and also unzipped the releng plugin on top.
I launched eclipse on an existing workspace that I've been using for a week or 
so, and the workbench came up fine.
I then closed eclipse, removed the releng plugin, and launched eclipse again 
(same workspace). The workbench came up, but all the views had no content (I 
was in the Java Browser perspective) and were gray.

Here is the .log:

!SESSION Dec 16, 2003 18:40:01.944 --------------------------------------------
-
java.version=1.4.1_03-ea
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -configuration 
file:d:\eclipse/.config -install file:d:/eclipse/
!ENTRY org.eclipse.core.runtime 2 0 Dec 16, 2003 18:40:01.944
!MESSAGE Legacy plug-in "org.eclipse.jdt.launching" must not be automatically 
activated on startup. This is probably caused by a previous crash in Eclipse.
!ENTRY org.eclipse.core.runtime 2 0 Dec 16, 2003 18:40:01.984
!MESSAGE Legacy plug-in "org.eclipse.pde.core" must not be automatically 
activated on startup. This is probably caused by a previous crash in Eclipse.
!ENTRY org.eclipse.core.runtime 4 2 Dec 16, 2003 18:40:08.744
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
!ENTRY org.eclipse.core.runtime 4 2 Dec 16, 2003 18:40:09.104
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0

!ENTRY org.eclipse.core.resources 2 1 Dec 16, 2003 18:40:12.28
!MESSAGE Skipping builder org.eclipse.pde.ui.ManifestBuilder for project 
org.eclipse.update.tests.core. Either the builder is missing from the install, 
or it belongs to a project nature that is missing or disabled.
!ENTRY org.eclipse.core.resources 2 1 Dec 16, 2003 18:40:12.48
!MESSAGE Skipping builder org.eclipse.pde.ui.SchemaBuilder for project 
org.eclipse.update.tests.core. Either the builder is missing from the install, 
or it belongs to a project nature that is missing or disabled.


It looks like the error handling in the registry reader is not robust enough 
to deal with missing actions, etc.
we have a break in some older code. it seems that a call to:

IExtensionPoint point = registry.getExtensionPoint(pluginId, extensionPoint);
IExtension[] extensions = point.getExtensions();

one or more of the extensions in this array throw NPE when:
.getDeclaringPluginDescriptor().getUniqueIdentifier();

moving to core for comment. should this be possible?
Looks like a dup of bug 47927.



*** This bug has been marked as a duplicate of 47927 ***


*** This bug has been marked as a duplicate of 47927 ***

*** This bug has been marked as a duplicate of 47927 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48931" />
    <CreationDate amount="2003-12-16 18:58:00 -0500" />
    <DupId amount="69675" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VE shows warning for valid code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="103" end="129" />
        <code>(itgpBasePanel, 0, true));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="351" end="420" />
        <code>jTextField1.setInputVerifier(new com.itgp.gui.itgpNumberVerifier());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1580" end="1636" />
        <code>myPanel.setObjectRecordSets(new ObjectRecordSet[]{});</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>For JTextField, one of the lines is:
 jTextField1.setInputVerifier(new com.itgp.gui.itgpNumberVerifier
(itgpBasePanel, 0, true));

This line (which by the way has the correct syntax, compiles, and runs 
correctly) causes the following warning:
    inputVerifier: java.lang.ClassNotFoundException(itgpBasePanel..0..true.)

Now if I change the line to 
 jTextField1.setInputVerifier(new com.itgp.gui.itgpNumberVerifier());
then everything looks good.

Could it be that VE cannot instantiate the constructor if it's not empty?

Thanks
The problem is using an instance (itgpBasePanel) in the constructor.  At this
point we do not support a constructor with intances.

We are in the process of modeling/supporting none null custructors with
instances to support SWT for the 1.0.0 release.
I apologize but I don't understand what you mean here:

"We are in the process of modeling/supporting none null custructors with
instances to support SWT for the 1.0.0 release."

Am I to assume that you're working on allowing constructors OTHER than empty 
constructors to be instantiated (for EVERYTHING, not just SWT) in version 1? It 
would make sense, since they are a very common item in regular code.

Thanks
Yes, and would be required in instatiating SWT components.
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
Guys, 

Any movement on this one? We really need to have the visual editor recognize
these more complex properties so the property editor(s) can visually edit them.

For example something as simple as :

   myPanel.setObjectRecordSets(new ObjectRecordSet[]{});

does not work. It returns "IWAV0125E is too complicated to be evaluated"
I have a pretty complex property editor constructing the code for this property,
and the above works flawlessly in Netbeans, and JBuilder.

Could you please give me a workaround at least?


*** This bug has been marked as a duplicate of 69675 ***
verified and closed for 1.0.2</WithStack>
    <WithOutStack>For JTextField, one of the lines is:
 jTextField1.setInputVerifier(new com.itgp.gui.itgpNumberVerifier
(itgpBasePanel, 0, true));

This line (which by the way has the correct syntax, compiles, and runs 
correctly) causes the following warning:
    inputVerifier: java.lang.ClassNotFoundException(itgpBasePanel..0..true.)

Now if I change the line to 
 jTextField1.setInputVerifier(new com.itgp.gui.itgpNumberVerifier());
then everything looks good.

Could it be that VE cannot instantiate the constructor if it's not empty?

Thanks
The problem is using an instance (itgpBasePanel) in the constructor.  At this
point we do not support a constructor with intances.

We are in the process of modeling/supporting none null custructors with
instances to support SWT for the 1.0.0 release.
I apologize but I don't understand what you mean here:

"We are in the process of modeling/supporting none null custructors with
instances to support SWT for the 1.0.0 release."

Am I to assume that you're working on allowing constructors OTHER than empty 
constructors to be instantiated (for EVERYTHING, not just SWT) in version 1? It 
would make sense, since they are a very common item in regular code.

Thanks
Yes, and would be required in instatiating SWT components.
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
Guys, 

Any movement on this one? We really need to have the visual editor recognize
these more complex properties so the property editor(s) can visually edit them.

For example something as simple as :

   myPanel.setObjectRecordSets(new ObjectRecordSet[]{});

does not work. It returns "IWAV0125E is too complicated to be evaluated"
I have a pretty complex property editor constructing the code for this property,
and the above works flawlessly in Netbeans, and JBuilder.

Could you please give me a workaround at least?


*** This bug has been marked as a duplicate of 69675 ***
verified and closed for 1.0.2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48932" />
    <CreationDate amount="2003-12-16 18:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Lots of false unused dependencies in PDE UI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) Start with a new repository</Line>
          <Line>2) Checkout PDE Core, PDE and PDE UI plug-ins from CVS</Line>
          <Line>3) Open plugin.xml, switch to Dependencies</Line>
          <Line>4) Compute unused dependencies</Line>
          <Line />
          <Line>A long list of (external) plug-ins show up that are actualy used.</Line>
          <Line />
          <Line>5) Import all external plug-ins (except PDE) into the workspace as binary</Line>
          <Line>projects.</Line>
          <Line>60 Compute unused dependencies</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Scenario (build I1226):

1) Start with a new repository
2) Checkout PDE Core, PDE and PDE UI plug-ins from CVS
3) Open plugin.xml, switch to Dependencies
4) Compute unused dependencies

A long list of (external) plug-ins show up that are actualy used.

5) Import all external plug-ins (except PDE) into the workspace as binary 
projects.
60 Compute unused dependencies

0 unused dependencies found

Looks like search for unused dependencies does not work well with external 
plug-ins for some reason.
OSGi aftershock.

the install location as returned by the registry model resolver is a path 
whose device is lowercase (e.g. d:)

JDT core uppercases the device name when computing the absolute path for a JAR 
entry. 

When you compare d:/temp/... with D:/temp/..., the result is false.  That is 
why we were getting false unused dependencies.  All comparisons of external 
JAR names with package fragment roots used by the project were returning false.

Fixed by uppercasing the device value returned by the plugin registry model.

Not sure if it would be better if this were handled in OSGi code.
but for now, the uppercasing goes on in pde's RegistryLoader and BundleLoader.</WithStack>
    <WithOutStack>Scenario (build I1226):

1) Start with a new repository
2) Checkout PDE Core, PDE and PDE UI plug-ins from CVS
3) Open plugin.xml, switch to Dependencies
4) Compute unused dependencies

A long list of (external) plug-ins show up that are actualy used.

5) Import all external plug-ins (except PDE) into the workspace as binary 
projects.
60 Compute unused dependencies

0 unused dependencies found

Looks like search for unused dependencies does not work well with external 
plug-ins for some reason.
OSGi aftershock.

the install location as returned by the registry model resolver is a path 
whose device is lowercase (e.g. d:)

JDT core uppercases the device name when computing the absolute path for a JAR 
entry. 

When you compare d:/temp/... with D:/temp/..., the result is false.  That is 
why we were getting false unused dependencies.  All comparisons of external 
JAR names with package fragment roots used by the project were returning false.

Fixed by uppercasing the device value returned by the plugin registry model.

Not sure if it would be better if this were handled in OSGi code.
but for now, the uppercasing goes on in pde's RegistryLoader and BundleLoader.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48933" />
    <CreationDate amount="2003-12-16 19:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move to use the Platform UI color support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From the platform ui mailing list, there is now Color support much like the 
Font support. Debug should move to using the new extension points and the color 
support.
Changes to MonitorView, TestMessageConsoleActionDelegate, ColorManager 
(deleted), DebugUIPlugin, ConsolePreferencePage, DebugPreferencePage, 
IDebugPreferenceConstants, ConsoleViewer, ExpressionView, VariablesView, 
ConsoleColorProvider, plugin.properties and plugin.xml in org.eclipse.debug.ui
Please verify Jared
The debug colors are now defined in the Workbench&gt;Colors and Fonts preference 
page.
Verified.</WithStack>
    <WithOutStack>From the platform ui mailing list, there is now Color support much like the 
Font support. Debug should move to using the new extension points and the color 
support.
Changes to MonitorView, TestMessageConsoleActionDelegate, ColorManager 
(deleted), DebugUIPlugin, ConsolePreferencePage, DebugPreferencePage, 
IDebugPreferenceConstants, ConsoleViewer, ExpressionView, VariablesView, 
ConsoleColorProvider, plugin.properties and plugin.xml in org.eclipse.debug.ui
Please verify Jared
The debug colors are now defined in the Workbench&gt;Colors and Fonts preference 
page.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48934" />
    <CreationDate amount="2003-12-16 19:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move to use the Platform UI color support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From the platform ui mailing list, there is now Color support much like the 
Font support. Ant should move to using the new extension points and the color 
support.
Mailing list entry:
http://dev.eclipse.org/mhonarc/lists/platform-ui-dev/msg01454.html
Note see bug 54554.
A few changes here :-)
Changes to AntEditor, AntEditorSourceViewerConfiguration, 
AntEditorDocumentProvider, AntEditorProcInstScanner, AntEditorTagScanner, 
IAntEditorColorConstants, AntConsoleColorProvider, AntProcess, AntUIPlugin, 
ColorManager (deleted), IAntUIPreferenceConstants, 
AntEditorPreferenceConstants, AntEditorPreferencePage, AntPreferencePage, 
plugin.xml and the plugin.properties for org.eclipse.ant.ui
The color and fonts preferences are under the workbench preferences.

Please verify Luc.
Verified.
Please update the build notes, Darin S.
Build notes updated.</WithStack>
    <WithOutStack>From the platform ui mailing list, there is now Color support much like the 
Font support. Ant should move to using the new extension points and the color 
support.
Mailing list entry:
http://dev.eclipse.org/mhonarc/lists/platform-ui-dev/msg01454.html
Note see bug 54554.
A few changes here :-)
Changes to AntEditor, AntEditorSourceViewerConfiguration, 
AntEditorDocumentProvider, AntEditorProcInstScanner, AntEditorTagScanner, 
IAntEditorColorConstants, AntConsoleColorProvider, AntProcess, AntUIPlugin, 
ColorManager (deleted), IAntUIPreferenceConstants, 
AntEditorPreferenceConstants, AntEditorPreferencePage, AntPreferencePage, 
plugin.xml and the plugin.properties for org.eclipse.ant.ui
The color and fonts preferences are under the workbench preferences.

Please verify Luc.
Verified.
Please update the build notes, Darin S.
Build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48935" />
    <CreationDate amount="2003-12-16 20:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[variables] UI/Model allows to change the value of final variables</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="144" end="644" />
        <code>public class Test001 {
  final int finalInstanceVariable= 3;
  final static int finalStaticVariable= 3;
  public static void main(String[] args) {
    new Test001().foo();
  }
  public void foo() {
    final int finalLocalVariable= 3;
    int localVariable= 3;
    System.out.println("test");   // &lt;--- breakpoint here 
    System.out.println(finalInstanceVariable);
    System.out.println(finalStaticVariable);
    System.out.println(finalLocalVariable);
    System.out.println(localVariable);
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>the 'change variable value' pop-up menu item is available for all primitive type
variables, appears to work, but has no real effect on the VM.

public class Test001 {
  final int finalInstanceVariable= 3;
  final static int finalStaticVariable= 3;
  public static void main(String[] args) {
    new Test001().foo();
  }
  public void foo() {
    final int finalLocalVariable= 3;
    int localVariable= 3;
    System.out.println("test");   // &lt;--- breakpoint here 
    System.out.println(finalInstanceVariable);
    System.out.println(finalStaticVariable);
    System.out.println(finalLocalVariable);
    System.out.println(localVariable);
  }
}

Run the test program. When the breakpoint is hit, change the value of the 4
variables. Do a step over, the variable view display the new values. Resume to
terminate the test program, check the consol, only the value of the non-final
variable has been effectively changed.
I believe we can only test the "final" attribute on member variables. (JDI) 
Locals do not actually reveal this information. However, we can fix the member 
case.
Fixed for member variables. Could not see a way to fix for locals.
Please verify, Luc.
A solution for the local variables may to test if the value has been 
effectively changed in the VM, and display an error message if it didn't work.
True. We can add the test.
Low priority.
Deferred
*** Bug 94223 has been marked as a duplicate of this bug. ***
no plans.</WithStack>
    <WithOutStack>the 'change variable value' pop-up menu item is available for all primitive type
variables, appears to work, but has no real effect on the VM.

public class Test001 {
  final int finalInstanceVariable= 3;
  final static int finalStaticVariable= 3;
  public static void main(String[] args) {
    new Test001().foo();
  }
  public void foo() {
    final int finalLocalVariable= 3;
    int localVariable= 3;
    System.out.println("test");   // &lt;--- breakpoint here 
    System.out.println(finalInstanceVariable);
    System.out.println(finalStaticVariable);
    System.out.println(finalLocalVariable);
    System.out.println(localVariable);
  }
}

Run the test program. When the breakpoint is hit, change the value of the 4
variables. Do a step over, the variable view display the new values. Resume to
terminate the test program, check the consol, only the value of the non-final
variable has been effectively changed.
I believe we can only test the "final" attribute on member variables. (JDI) 
Locals do not actually reveal this information. However, we can fix the member 
case.
Fixed for member variables. Could not see a way to fix for locals.
Please verify, Luc.
A solution for the local variables may to test if the value has been 
effectively changed in the VM, and display an error message if it didn't work.
True. We can add the test.
Low priority.
Deferred
*** Bug 94223 has been marked as a duplicate of this bug. ***
no plans.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48936" />
    <CreationDate amount="2003-12-16 21:26:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>splash screen flicker</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>There appears to be some splash screen flicker on startup.  I also noticed that 
there are two eclipse.exes in the task manager.  Not sure if this is the normal 
behaviour.  It is possible that we are launching it twice.
I haven't seen the flickering, but the presence of two instance of eclipse.exe 
is normal.

The first one is the one starting the VM launching eclipse (executed when you 
double click on the icon);

The second one is the one displaying the splash screen as a result of the 
execution of the Main.handleSplash() method.
I cannot be sure but from time to time I swear I see the splash flicker.  This 
happened to me the other day when running (likely I0121).  This is only 
interesting if we are indeed running things twice etc. as that will take more 
time.
worked through all the splash code in Java and can guarantee that the splash is 
only going up once...

closing</WithStack>
    <WithOutStack>There appears to be some splash screen flicker on startup.  I also noticed that 
there are two eclipse.exes in the task manager.  Not sure if this is the normal 
behaviour.  It is possible that we are launching it twice.
I haven't seen the flickering, but the presence of two instance of eclipse.exe 
is normal.

The first one is the one starting the VM launching eclipse (executed when you 
double click on the icon);

The second one is the one displaying the splash screen as a result of the 
execution of the Main.handleSplash() method.
I cannot be sure but from time to time I swear I see the splash flicker.  This 
happened to me the other day when running (likely I0121).  This is only 
interesting if we are indeed running things twice etc. as that will take more 
time.
worked through all the splash code in Java and can guarantee that the splash is 
only going up once...

closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48937" />
    <CreationDate amount="2003-12-16 21:47:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>extra arguments added to the command line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341080047">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.start()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1009)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:971)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:404)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:304)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:89)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:315)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:346)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:116)</Frame>
          <Frame depth="8">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:251)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:332)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.Bundle.loadClass(Bundle.java:1294)</Frame>
          <Frame depth="12">org.eclipse.core.internal.plugins.PluginClassLoader.findClass(PluginClassLoader.java:85)</Frame>
          <Frame depth="13">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="14">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="15">org.eclipse.ant.internal.core.AntClassLoader.loadClassPlugins(AntClassLoader.java:59)</Frame>
          <Frame depth="16">org.eclipse.ant.internal.core.AntClassLoader.findClass(AntClassLoader.java:33)</Frame>
          <Frame depth="17">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="18">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="19">org.eclipse.ant.core.AntRunner.run(AntRunner.java:476)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:288)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:214)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:115)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="25">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="26">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.basicRun(Main.java:315)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.run(Main.java:740)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.main(Main.java:724)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080047">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2651)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2555)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.createDisplay(Display.java:580)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.create(Display.java:565)</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.Device.&lt;init&gt;(Device.java:113)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Display.&lt;init&gt;(Display.java:379)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.&lt;init&gt;(Display.java:375)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.getDefault(Display.java:965)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display$1.run(Display.java:341)</Frame>
          <Frame depth="9">org.eclipse.swt.graphics.Device.getDevice(Device.java:86)</Frame>
          <Frame depth="10">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:419)</Frame>
          <Frame depth="11">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:169)</Frame>
          <Frame depth="12">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:115)</Frame>
          <Frame depth="13">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:97)</Frame>
          <Frame depth="14">org.eclipse.pde.internal.ui.editor.feature.FeatureAdapterFactory.&lt;init&gt;(FeatureAdapterFactory.java:23)</Frame>
          <Frame depth="15">org.eclipse.pde.internal.ui.PDEPlugin.startup(PDEPlugin.java:193)</Frame>
          <Frame depth="16">org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:49)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:992)</Frame>
          <Frame depth="18">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:988)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:971)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:404)</Frame>
          <Frame depth="22">org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:304)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:89)</Frame>
          <Frame depth="24">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:315)</Frame>
          <Frame depth="25">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:346)</Frame>
          <Frame depth="26">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:116)</Frame>
          <Frame depth="27">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="28">org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:251)</Frame>
          <Frame depth="29">org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:332)</Frame>
          <Frame depth="30">org.eclipse.osgi.framework.internal.core.Bundle.loadClass(Bundle.java:1294)</Frame>
          <Frame depth="31">org.eclipse.core.internal.plugins.PluginClassLoader.findClass(PluginClassLoader.java:85)</Frame>
          <Frame depth="32">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="33">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="34">org.eclipse.ant.internal.core.AntClassLoader.loadClassPlugins(AntClassLoader.java:59)</Frame>
          <Frame depth="35">org.eclipse.ant.internal.core.AntClassLoader.findClass(AntClassLoader.java:33)</Frame>
          <Frame depth="36">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="37">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="38">org.eclipse.ant.core.AntRunner.run(AntRunner.java:476)</Frame>
          <Frame depth="39">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:288)</Frame>
          <Frame depth="40">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:214)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:115)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="43">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="44">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="45">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.basicRun(Main.java:315)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.run(Main.java:740)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.main(Main.java:724)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In various launching scenarios the new startup code is adding -install and -
configuration arguments to the command line.  Unfortunately, they are added to 
the end of the command line and things like the AntRunner get confused because 
they expect to consume the arguments found there.  The result is errors such as

D:\eclipse-testing\eclipse&gt;java -cp startup.jar org.eclipse.core.launcher.Main -
application org.eclipse.ant.core.antRunner -f d:\eclipse-testing\build.xml test

This gets printed to the console:
Unknown argument: -application org.eclipse.ant.core.antRunner test -
configuration file:d:\eclipse-testing\eclipse/.config -install file:d:/eclipse-
testing/eclipse/


This is a hold over from the old startup sequence where this information wsa 
apparently needed somehow by downstream components like PDE and Update.  We are 
working with those teams to see if they still need these args and thus whether 
or not this special handling can be removed.

This issue has pretty much always been there.  For example, if you ran with -
dev (or was it -debug) AntRunner would get those args and get confused.  The 
contention here is between args destine for Eclipse vs those destine for the 
application.  We attempt to remove the Eclipse args but some need to flow 
through.  

More work is needed to fully solve this problem but for now we will insert the -
confgiuration and -install args at the beginning of the command line rather 
than at the end. This should eliminate the immediate issue.
fixed
Adding Veronika to cc since eclipse executable may need to remove some now 
unsupported arguments to Main (ie. -os, -ws).  The antRunner application does 
not process command line arguments properly when launched through the eclipse 
executable.
Jeff, can you please clarify.  Are -os and -ws no longer supported arguments?  
If so, how do we distinguish between gtk and motif on linux?

The tests results from the nightly builds show:

Unknown argument: -noupdate -ws gtk -os linux -arch x86
Buildfile: test.xml

e.g. see:

http://download.eclipse.org/downloads/drops/N-N20040105-
200401050010/testresults/consolelogs/linux.gtk_consolelog.txt
There are no changes to the -ws/-os/-arch/-nl planned.  They are still 
processed by the startup sequence.  The key here is whether or not that 
processing strips the args from the command line that is later passed to the 
application (in this case the AntRunner).

I'm going to reopen this bug as we had to do some last minute backout at the 
end of M6 and we should ensure that it the current state is what we really want.

sidenote/question: is SWT relying on looking at the command line?  How does 
this work?

org.eclipse.swt does not depend on the scanning the command line arguments - 
it relies on core to find the jar and dlls and do the right thing.

Hwoever, SWT also owns platform-launcher so if there are changes to be made to 
how the eclipse.exe operates, we need to know.
For headless use of the antRunner in the builds, replaced -ws, -os, -arch 
parameters to Main with vm args -Dosgi.ws=$ws -Dosgi.os=$os -Dosgi.arch=$arch 
as workaround.
Believed to be fixed now.  Needs verification.
Does not appear to be fixed in I20040322(0800).  Will verify in the M8 test 
candidate builds tomorrow.
Ok, so I think I have now actually gotten my act together and done this right.  
Tomorrow's integration build input should be good.  I may have missed an arg or 
two in the filtering.  It is proving very hard to track them all down
In the I20040323 (0010) build, I am able to execute specified targets in an 
Ant script using the following command:

 ~/jdk1.4.2_03/jre/bin/java -cp startup.jar org.eclipse.core.launcher.Main -os 
linux -ws gtk -application org.eclipse.ant.core.antRunner test

However, I also get the following stack trace:

org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.start()
        at 
org.eclipse.osgi.framework.internal.core.BundleContext.startActivator
(BundleContext.java:1009)
        at org.eclipse.osgi.framework.internal.core.BundleContext.start
(BundleContext.java:971)
        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(BundleHost.java:404)
        at org.eclipse.osgi.framework.internal.core.Bundle.start
(Bundle.java:304)
        at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:89)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:315)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:346)
        at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:116)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(BundleLoader.java:251)
        at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(BundleHost.java:332)
        at org.eclipse.osgi.framework.internal.core.Bundle.loadClass
(Bundle.java:1294)
        at org.eclipse.core.internal.plugins.PluginClassLoader.findClass
(PluginClassLoader.java:85)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.ant.internal.core.AntClassLoader.loadClassPlugins
(AntClassLoader.java:59)
        at org.eclipse.ant.internal.core.AntClassLoader.findClass
(AntClassLoader.java:33)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.ant.core.AntRunner.run(AntRunner.java:476)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:288)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:214)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:115)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:315)
        at org.eclipse.core.launcher.Main.run(Main.java:740)
        at org.eclipse.core.launcher.Main.main(Main.java:724)
org.eclipse.swt.SWTError: No more handles
        at org.eclipse.swt.SWT.error(SWT.java:2651)
        at org.eclipse.swt.SWT.error(SWT.java:2555)
        at org.eclipse.swt.widgets.Display.createDisplay(Display.java:580)
        at org.eclipse.swt.widgets.Display.create(Display.java:565)
        at org.eclipse.swt.graphics.Device.&lt;init&gt;(Device.java:113)
        at org.eclipse.swt.widgets.Display.&lt;init&gt;(Display.java:379)
        at org.eclipse.swt.widgets.Display.&lt;init&gt;(Display.java:375)
        at org.eclipse.swt.widgets.Display.getDefault(Display.java:965)
        at org.eclipse.swt.widgets.Display$1.run(Display.java:341)
        at org.eclipse.swt.graphics.Device.getDevice(Device.java:86)
        at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:419)
        at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:169)
        at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:115)
        at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:97)
        at 
org.eclipse.pde.internal.ui.editor.feature.FeatureAdapterFactory.&lt;init&gt;
(FeatureAdapterFactory.java:23)
        at org.eclipse.pde.internal.ui.PDEPlugin.startup(PDEPlugin.java:193)
        at org.eclipse.core.internal.compatibility.PluginActivator.start
(PluginActivator.java:49)
        at org.eclipse.osgi.framework.internal.core.BundleContext$1.run
(BundleContext.java:992)
        at java.security.AccessController.doPrivileged(Native Method)
        at 
org.eclipse.osgi.framework.internal.core.BundleContext.startActivator
(BundleContext.java:988)
        at org.eclipse.osgi.framework.internal.core.BundleContext.start
(BundleContext.java:971)
        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(BundleHost.java:404)
        at org.eclipse.osgi.framework.internal.core.Bundle.start
(Bundle.java:304)
        at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:89)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:315)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:346)
        at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:116)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(BundleLoader.java:251)
        at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(BundleHost.java:332)
        at org.eclipse.osgi.framework.internal.core.Bundle.loadClass
(Bundle.java:1294)
        at org.eclipse.core.internal.plugins.PluginClassLoader.findClass
(PluginClassLoader.java:85)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.ant.internal.core.AntClassLoader.loadClassPlugins
(AntClassLoader.java:59)
        at org.eclipse.ant.internal.core.AntClassLoader.findClass
(AntClassLoader.java:33)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.eclipse.ant.core.AntRunner.run(AntRunner.java:476)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:288)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:214)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:115)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:315)
        at org.eclipse.core.launcher.Main.run(Main.java:740)
        at org.eclipse.core.launcher.Main.main(Main.java:724)

I don't think the trace in comment 10 is not related to this issue.

Closing.
Shouldn't that be M8?
I am marking all of the command line ones as M9 as the final changes just got 
released to HEAD and are not going in M8.  Much of this work is in M8 however.</WithStack>
    <WithOutStack>In various launching scenarios the new startup code is adding -install and -
configuration arguments to the command line.  Unfortunately, they are added to 
the end of the command line and things like the AntRunner get confused because 
they expect to consume the arguments found there.  The result is errors such as

D:\eclipse-testing\eclipse&gt;java -cp startup.jar org.eclipse.core.launcher.Main -
application org.eclipse.ant.core.antRunner -f d:\eclipse-testing\build.xml test

This gets printed to the console:
Unknown argument: -application org.eclipse.ant.core.antRunner test -
configuration file:d:\eclipse-testing\eclipse/.config -install file:d:/eclipse-
testing/eclipse/


This is a hold over from the old startup sequence where this information wsa 
apparently needed somehow by downstream components like PDE and Update.  We are 
working with those teams to see if they still need these args and thus whether 
or not this special handling can be removed.

This issue has pretty much always been there.  For example, if you ran with -
dev (or was it -debug) AntRunner would get those args and get confused.  The 
contention here is between args destine for Eclipse vs those destine for the 
application.  We attempt to remove the Eclipse args but some need to flow 
through.  

More work is needed to fully solve this problem but for now we will insert the -
confgiuration and -install args at the beginning of the command line rather 
than at the end. This should eliminate the immediate issue.
fixed
Adding Veronika to cc since eclipse executable may need to remove some now 
unsupported arguments to Main (ie. -os, -ws).  The antRunner application does 
not process command line arguments properly when launched through the eclipse 
executable.
Jeff, can you please clarify.  Are -os and -ws no longer supported arguments?  
If so, how do we distinguish between gtk and motif on linux?

The tests results from the nightly builds show:

Unknown argument: -noupdate -ws gtk -os linux -arch x86
Buildfile: test.xml

e.g. see:

http://download.eclipse.org/downloads/drops/N-N20040105-
200401050010/testresults/consolelogs/linux.gtk_consolelog.txt
There are no changes to the -ws/-os/-arch/-nl planned.  They are still 
processed by the startup sequence.  The key here is whether or not that 
processing strips the args from the command line that is later passed to the 
application (in this case the AntRunner).

I'm going to reopen this bug as we had to do some last minute backout at the 
end of M6 and we should ensure that it the current state is what we really want.

sidenote/question: is SWT relying on looking at the command line?  How does 
this work?

org.eclipse.swt does not depend on the scanning the command line arguments - 
it relies on core to find the jar and dlls and do the right thing.

Hwoever, SWT also owns platform-launcher so if there are changes to be made to 
how the eclipse.exe operates, we need to know.
For headless use of the antRunner in the builds, replaced -ws, -os, -arch 
parameters to Main with vm args -Dosgi.ws=$ws -Dosgi.os=$os -Dosgi.arch=$arch 
as workaround.
Believed to be fixed now.  Needs verification.
Does not appear to be fixed in I20040322(0800).  Will verify in the M8 test 
candidate builds tomorrow.
Ok, so I think I have now actually gotten my act together and done this right.  
Tomorrow's integration build input should be good.  I may have missed an arg or 
two in the filtering.  It is proving very hard to track them all down
In the I20040323 (0010) build, I am able to execute specified targets in an 
Ant script using the following command:

 ~/jdk1.4.2_03/jre/bin/java -cp startup.jar org.eclipse.core.launcher.Main -os 
linux -ws gtk -application org.eclipse.ant.core.antRunner test

However, I also get the following stack trace:



I don't think the trace in comment 10 is not related to this issue.

Closing.
Shouldn't that be M8?
I am marking all of the command line ones as M9 as the final changes just got 
released to HEAD and are not going in M8.  Much of this work is in M8 however.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48938" />
    <CreationDate amount="2003-12-16 22:39:00 -0500" />
    <DupId amount="47510" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Workbench hangs during search/replace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>About half the time when I use the search/replace dialog, the workbench hangs.  
I turned off all label decorations and it is still a problem.  In one 
particular case, I'm using a few hundred files in a Java working set in the 
search scope.  I'm using the M5 driver.
I noticed also that this was happening to me consistently when I left the 
synchronize view open.  After I closed it, it did not hang and the replace was 
extremely fast.
What build were you using?
M5
fixed in M6

*** This bug has been marked as a duplicate of 47510 ***</WithStack>
    <WithOutStack>About half the time when I use the search/replace dialog, the workbench hangs.  
I turned off all label decorations and it is still a problem.  In one 
particular case, I'm using a few hundred files in a Java working set in the 
search scope.  I'm using the M5 driver.
I noticed also that this was happening to me consistently when I left the 
synchronize view open.  After I closed it, it did not hang and the replace was 
extremely fast.
What build were you using?
M5
fixed in M6

*** This bug has been marked as a duplicate of 47510 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48939" />
    <CreationDate amount="2003-12-16 22:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[WorkingSets] New working set should preselect with UI selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I select 3 projects in the package explorer, then create a new working set, 
it would be nice if the working set dialog would have those 3 projects 
preselected.  Or if there were a "Create working set" action from the selection 
in the view.
This works for me already in Eclipse Version: 3.3.0
Build id: N20061012-0010

Hehe, don't believe me ;)

It's working for Java WS and some others (like PHP from PDT) but it's not working for the Resources WS type.

I'll look a bit more on this in some hours.
should just be a matter of priming the tree with the workbench page selection.
Created attachment 56412
resourceworkingsetpreselect.diff

Here's a little patch to preselect resources in the Resource Working Set page which are selected in the workbench itself. Works for all types of Resources, not only for projects.
Created attachment 56414
resourceworkingsetpreselect.diff

Updated patch, added check before casting to IAdaptable
Fix in head.  Thanks Benny!
Reopening to reassign
Reassigning
Marking as fixed</WithStack>
    <WithOutStack>If I select 3 projects in the package explorer, then create a new working set, 
it would be nice if the working set dialog would have those 3 projects 
preselected.  Or if there were a "Create working set" action from the selection 
in the view.
This works for me already in Eclipse Version: 3.3.0
Build id: N20061012-0010

Hehe, don't believe me ;)

It's working for Java WS and some others (like PHP from PDT) but it's not working for the Resources WS type.

I'll look a bit more on this in some hours.
should just be a matter of priming the tree with the workbench page selection.
Created attachment 56412
resourceworkingsetpreselect.diff

Here's a little patch to preselect resources in the Resource Working Set page which are selected in the workbench itself. Works for all types of Resources, not only for projects.
Created attachment 56414
resourceworkingsetpreselect.diff

Updated patch, added check before casting to IAdaptable
Fix in head.  Thanks Benny!
Reopening to reassign
Reassigning
Marking as fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48940" />
    <CreationDate amount="2003-12-17 00:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launching runtime workbench does not show splash</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When launching a runtime workbench against an OSGi platform, PDE must set the 
osgi.splashPath key in the config.ini.
The -feature argument that it used to pass is not processed in startup.jar to 
look for the primary feature anymore.
Given a primary feature id, we search for the corresponding plugin from the 
list of plugins to launch.  If found, we set osgi.splashPath to the location 
of this plugin.</WithStack>
    <WithOutStack>When launching a runtime workbench against an OSGi platform, PDE must set the 
osgi.splashPath key in the config.ini.
The -feature argument that it used to pass is not processed in startup.jar to 
look for the primary feature anymore.
Given a primary feature id, we search for the corresponding plugin from the 
list of plugins to launch.  If found, we set osgi.splashPath to the location 
of this plugin.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48941" />
    <CreationDate amount="2003-12-17 01:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE during source lookup binding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341080052">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields(SourceTypeBinding.java:354)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods(SourceTypeBinding.java:342)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:350)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:666)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:495)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes(HierarchyBuilder.java:120)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:133)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:319)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1230)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:90)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:364)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:703)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:524)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:550)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:502)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache.getTypeHierarchy(SuperTypeHierarchyCache.java:73)</Frame>
          <Frame depth="16">org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:151)</Frame>
          <Frame depth="17">org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:121)</Frame>
          <Frame depth="18">org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorateImage(OverrideIndicatorLabelDecorator.java:93)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage(JavaUILabelProvider.java:119)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage(JavaUILabelProvider.java:134)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:73)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.viewsupport.DecoratingJavaLabelProvider.getImage(DecoratingJavaLabelProvider.java:103)</Frame>
          <Frame depth="23">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:99)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="25">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="27">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="28">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:119)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="31">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1285)</Frame>
          <Frame depth="32">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:383)</Frame>
          <Frame depth="33">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:363)</Frame>
          <Frame depth="34">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:349)</Frame>
          <Frame depth="36">org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:926)</Frame>
          <Frame depth="37">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.internalExpandToLevel(JavaOutlinePage.java:423)</Frame>
          <Frame depth="38">org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:935)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.internalExpandToLevel(JavaOutlinePage.java:423)</Frame>
          <Frame depth="40">org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:809)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:810)</Frame>
          <Frame depth="42">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:798)</Frame>
          <Frame depth="43">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="44">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1004)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.createControl(JavaOutlinePage.java:1056)</Frame>
          <Frame depth="46">org.eclipse.ui.views.contentoutline.ContentOutline.doCreatePage(ContentOutline.java:125)</Frame>
          <Frame depth="47">org.eclipse.ui.part.PageBookView.createPage(PageBookView.java:306)</Frame>
          <Frame depth="48">org.eclipse.ui.part.PageBookView.partActivated(PageBookView.java:561)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:49)</Frame>
          <Frame depth="50">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:47)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.WorkbenchPage.firePartActivated(WorkbenchPage.java:1251)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2513)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:448)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2061)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:1990)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1977)</Frame>
          <Frame depth="59">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1972)</Frame>
          <Frame depth="61">org.eclipse.ui.ide.IDE.openEditor(IDE.java:265)</Frame>
          <Frame depth="62">org.eclipse.ui.ide.IDE.openEditor(IDE.java:317)</Frame>
          <Frame depth="63">org.eclipse.ui.views.markers.internal.ActionOpenMarker.run(ActionOpenMarker.java:76)</Frame>
          <Frame depth="64">org.eclipse.ui.views.markers.internal.MarkerView.handleOpenEvent(MarkerView.java:422)</Frame>
          <Frame depth="65">org.eclipse.ui.views.markers.internal.TableView$2.open(TableView.java:162)</Frame>
          <Frame depth="66">org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:406)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:813)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.Platform.run(Platform.java:447)</Frame>
          <Frame depth="69">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:404)</Frame>
          <Frame depth="70">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:614)</Frame>
          <Frame depth="71">org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:703)</Frame>
          <Frame depth="72">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:209)</Frame>
          <Frame depth="73">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:204)</Frame>
          <Frame depth="74">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:233)</Frame>
          <Frame depth="75">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="76">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="77">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="78">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="79">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="81">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="82">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="83">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="84">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="85">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="86">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="87">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="88">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="89">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="90">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="91">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="92">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build: I-20031216 (1717)

I have a Hello world plugin in my workspace.  I also have 
org.eclipse.runtime.compatibility and all its prereqs imported as binary.

I deleted org.eclipse.core.runtime.compatibility from the list of dependencies 
of the Hello world plugin and saved.

This caused compilation errors.

I double-clicked on one of the errors in the Problems view, and I got the 
following NPE:

Error Dec 17, 2003 00:58:44.872 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
java.lang.NullPointerException
at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields
(SourceTypeBinding.java:354)
at 
org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForField
sAndMethods(SourceTypeBinding.java:342)
at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes
(CompilationUnitScope.java:350)
at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve
(HierarchyResolver.java:666)
at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve
(HierarchyResolver.java:495)
at org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes
(HierarchyBuilder.java:120)
at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build
(IndexBasedHierarchyBuilder.java:133)
at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute
(TypeHierarchy.java:319)
at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh
(TypeHierarchy.java:1230)
at org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation
(CreateTypeHierarchyOperation.java:90)
at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:364)
at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:703)
at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:524)
at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy
(SourceType.java:550)
at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy
(SourceType.java:502)
at 
org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache.getTypeHierarchy
(SuperTypeHierarchyCache.java:73)
at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators
(OverrideIndicatorLabelDecorator.java:151)
at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags
(OverrideIndicatorLabelDecorator.java:121)
at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorateImage
(OverrideIndicatorLabelDecorator.java:93)
at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage
(JavaUILabelProvider.java:119)
at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage
(JavaUILabelProvider.java:134)
at org.eclipse.jface.viewers.DecoratingLabelProvider.getImage
(DecoratingLabelProvider.java:73)
at org.eclipse.jdt.internal.ui.viewsupport.DecoratingJavaLabelProvider.getImage
(DecoratingJavaLabelProvider.java:103)
at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:99)
at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run
(AbstractTreeViewer.java:87)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
at org.eclipse.core.runtime.Platform.run(Platform.java:447)
at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:469)
at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:119)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
at org.eclipse.core.runtime.Platform.run(Platform.java:447)
at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1285)
at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:383)
at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:363)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:349)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel
(AbstractTreeViewer.java:926)
at 
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.intern
alExpandToLevel(JavaOutlinePage.java:423)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel
(AbstractTreeViewer.java:935)
at 
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.intern
alExpandToLevel(JavaOutlinePage.java:423)
at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:809)
at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:810)
at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:798)
at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1004)
at org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.createControl
(JavaOutlinePage.java:1056)
at org.eclipse.ui.views.contentoutline.ContentOutline.doCreatePage
(ContentOutline.java:125)
at org.eclipse.ui.part.PageBookView.createPage(PageBookView.java:306)
at org.eclipse.ui.part.PageBookView.partActivated(PageBookView.java:561)
at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:49)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
at org.eclipse.core.runtime.Platform.run(Platform.java:447)
at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java:47)
at org.eclipse.ui.internal.WorkbenchPage.firePartActivated
(WorkbenchPage.java:1251)
at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2513)
at org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:448)
at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2061)
at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:1990)
at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1977)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1972)
at org.eclipse.ui.ide.IDE.openEditor(IDE.java:265)
at org.eclipse.ui.ide.IDE.openEditor(IDE.java:317)
at org.eclipse.ui.views.markers.internal.ActionOpenMarker.run
(ActionOpenMarker.java:76)
at org.eclipse.ui.views.markers.internal.MarkerView.handleOpenEvent
(MarkerView.java:422)
at org.eclipse.ui.views.markers.internal.TableView$2.open(TableView.java:162)
at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:406)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:813)
at org.eclipse.core.runtime.Platform.run(Platform.java:447)
at org.eclipse.jface.viewers.StructuredViewer.fireOpen
(StructuredViewer.java:404)
at org.eclipse.jface.viewers.StructuredViewer.handleOpen
(StructuredViewer.java:614)
at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen
(StructuredViewer.java:703)
at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:209)
at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:204)
at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:233)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:233)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
at org.eclipse.core.launcher.Main.run(Main.java:744)
at org.eclipse.core.launcher.Main.main(Main.java:583)
Same issue as bug 48459.

Added protection for uninitialized fields &amp; methods.
Kent, looking at the code it looks like we're always building field and method 
bindings in the hierarchy resolver. I don't find where we don't?
I don't see it either.

Could containsLocalType be screwing things up?
How would containsLocalType interfer with field binding creation?
It controls whether you parse methods or not.

Can a local type be created without first parsing its enclosing method?
No, I don't see how this would be possible.
Workaround by Kent should be enough. Closing.</WithStack>
    <WithOutStack>Build: I-20031216 (1717)

I have a Hello world plugin in my workspace.  I also have 
org.eclipse.runtime.compatibility and all its prereqs imported as binary.

I deleted org.eclipse.core.runtime.compatibility from the list of dependencies 
of the Hello world plugin and saved.

This caused compilation errors.

I double-clicked on one of the errors in the Problems view, and I got the 
following NPE:

Error Dec 17, 2003 00:58:44.872 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".

Same issue as bug 48459.

Added protection for uninitialized fields &amp; methods.
Kent, looking at the code it looks like we're always building field and method 
bindings in the hierarchy resolver. I don't find where we don't?
I don't see it either.

Could containsLocalType be screwing things up?
How would containsLocalType interfer with field binding creation?
It controls whether you parse methods or not.

Can a local type be created without first parsing its enclosing method?
No, I don't see how this would be possible.
Workaround by Kent should be enough. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48942" />
    <CreationDate amount="2003-12-17 01:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Package explorer does not refresh [package explorer]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Fresh workspace.</Line>
          <Line>2. Open the PDE perspective.</Line>
          <Line>2. In the filters of the Package explorer view, show ".*" files.</Line>
          <Line>3. Create a Hello world plugin.</Line>
          <Line>4. Expand the project.  You will see the libray classpath entries.</Line>
          <Line>5. Right-click on plugin.xml.  Select PDE Tools -&gt; Update Classpath...</Line>
          <Line>6. In the wizard, select the 'Use dynamic classpaths' checkbox and press</Line>
          <Line>finish.</Line>
          <Line>7. You will see that the package explorer does not refresh, i.e. it is still</Line>
          <Line>showing the library classpath entries.  yet, when you open the .classpath</Line>
          <Line>file, it correctly shows the dynamic classpath entry.</Line>
          <Line>Closing and reopening the project renders the projetc tree correctly. So the</Line>
          <Line>Java model seems to be OK. The bug might be related to bug 46428 (Delta is</Line>
          <Line>missing class path change).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>2. In the filters of the Package explorer view, show ".*" files.</Line>
          <Line>3. Create a Hello world plugin.</Line>
          <Line>4. Expand the project.  You will see the libray classpath entries.</Line>
          <Line>5. Right-click on plugin.xml.  Select PDE Tools -&gt; Update Classpath...</Line>
          <Line>6. In the wizard, select the 'Use dynamic classpaths' checkbox and press</Line>
          <Line>finish.</Line>
          <Line>7. You will see that the package explorer does not refresh, i.e. it is still</Line>
          <Line>showing the library classpath entries.  yet, when you open the .classpath</Line>
          <Line>file, it correctly shows the dynamic classpath entry.</Line>
          <Line>Closing and reopening the project renders the projetc tree correctly. So the</Line>
          <Line>Java model seems to be OK. The bug might be related to bug 46428 (Delta is</Line>
          <Line>missing class path change).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I-20031216(1717)

1. Fresh workspace.
2. Open the PDE perspective.
2. In the filters of the Package explorer view, show ".*" files.
3. Create a Hello world plugin.
4. Expand the project.  You will see the libray classpath entries.
5. Right-click on plugin.xml.  Select PDE Tools -&gt; Update Classpath...
6. In the wizard, select the 'Use dynamic classpaths' checkbox and press 
finish.
7. You will see that the package explorer does not refresh, i.e. it is still 
showing the library classpath entries.  yet, when you open the .classpath 
file, it correctly shows the dynamic classpath entry.
Closing and reopening the project renders the projetc tree correctly. So the 
Java model seems to be OK. The bug might be related to bug 46428 (Delta is 
missing class path change).



Erich, please investigate
class path update issue - fixed by leveraging the new Java delta flag: 
F_CLASSPATH_CHANGED</WithStack>
    <WithOutStack>Build: I-20031216(1717)

1. Fresh workspace.
2. Open the PDE perspective.
2. In the filters of the Package explorer view, show ".*" files.
3. Create a Hello world plugin.
4. Expand the project.  You will see the libray classpath entries.
5. Right-click on plugin.xml.  Select PDE Tools -&gt; Update Classpath...
6. In the wizard, select the 'Use dynamic classpaths' checkbox and press 
finish.
7. You will see that the package explorer does not refresh, i.e. it is still 
showing the library classpath entries.  yet, when you open the .classpath 
file, it correctly shows the dynamic classpath entry.
Closing and reopening the project renders the projetc tree correctly. So the 
Java model seems to be OK. The bug might be related to bug 46428 (Delta is 
missing class path change).



Erich, please investigate
class path update issue - fixed by leveraging the new Java delta flag: 
F_CLASSPATH_CHANGED</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48943" />
    <CreationDate amount="2003-12-17 02:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.4" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't clear errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I had an AJ project that I closed when it had build errors. I reopened it and 
fixed them. However, the compiler continues to keep errors around in the list 
the only workaround I know of to clear them is to delete the project and 
reimport it.
Created attachment 7198
screen snapshot of the erroneous condition
Could not reproduce bug in current AJDT. Maybe already fixed.
Is this fixed in M8?  If so, could you close it Andy?

I believe this is fixed in M8 / 1.1.8. Closing the bug.</WithStack>
    <WithOutStack>I had an AJ project that I closed when it had build errors. I reopened it and 
fixed them. However, the compiler continues to keep errors around in the list 
the only workaround I know of to clear them is to delete the project and 
reimport it.
Created attachment 7198
screen snapshot of the erroneous condition
Could not reproduce bug in current AJDT. Maybe already fixed.
Is this fixed in M8?  If so, could you close it Andy?

I believe this is fixed in M8 / 1.1.8. Closing the bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48944" />
    <CreationDate amount="2003-12-17 02:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[expressions] Unable to create a watch expression for an array element from the variable view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When creating a watch expression from array element item in the variable view,
it creates a watch expression for "[1]" instead of "array[1]".
Deferred
*** Bug 48945 has been marked as a duplicate of this bug. ***
in 3.3, the 'create watch expression' action is now disabled for array entries. However, we could have it do the right thing for java arrays and create the proper expression.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When creating a watch expression from array element item in the variable view,
it creates a watch expression for "[1]" instead of "array[1]".
Deferred
*** Bug 48945 has been marked as a duplicate of this bug. ***
in 3.3, the 'create watch expression' action is now disabled for array entries. However, we could have it do the right thing for java arrays and create the proper expression.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48945" />
    <CreationDate amount="2003-12-17 02:20:00 -0500" />
    <DupId amount="48944" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad label for Inspect expression of array element created from the variable view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When creating a inspect expression from array element item in the variable view,
it creates a inspect expression with "[1]" as label instead of "array[1]".
Deferred
dup


*** This bug has been marked as a duplicate of 48944 ***</WithStack>
    <WithOutStack>When creating a inspect expression from array element item in the variable view,
it creates a inspect expression with "[1]" as label instead of "array[1]".
Deferred
dup


*** This bug has been marked as a duplicate of 48944 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48946" />
    <CreationDate amount="2003-12-17 02:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JavaClasspathTab.hasClasspathChanged</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341080056">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab.performApply(JavaClasspathTab.java:262)</Frame>
          <Frame depth="1">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:98)</Frame>
          <Frame depth="2">org.jboss.ide.eclipse.launcher.ui.configuration.AbstractServerTabGroup.performApply(AbstractServerTabGroup.java:29)</Frame>
          <Frame depth="3">org.jboss.ide.eclipse.launcher.ui.configuration.jboss.JBoss30xTabGroup.performApply(JBoss30xTabGroup.java:64)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.handleApplyPressed(LaunchConfigurationTabGroupViewer.java:1153)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchPressed(LaunchConfigurationsDialog.java:1084)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.buttonPressed(LaunchConfigurationsDialog.java:295)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:430)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:442)</Frame>
          <Frame depth="16">org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:390)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="157" end="226" />
        <code>IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="227" end="262" />
        <code>for (;i &lt; entries.length; i++) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="263" end="321" />
        <code>if (i &gt;= userEntries.length) {
					return true;
				}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="589" end="636" />
        <code>/**
	 * @param configuration
	 * @return
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="637" end="1519" />
        <code>private boolean hasClasspathChanged(ILaunchConfiguration configuration) {
		try {
			IRuntimeClasspathEntry[] entries=
JavaRuntime.computeUnresolvedRuntimeClasspath(configuration);
			IClasspathEntry[] bootEntries= model.getEntries(ClasspathModel.BOOTSTRAP);
			IClasspathEntry entry;
			int i;
			for (i = 0; i &lt; bootEntries.length; i++) {
				if (i == entries.length) {
					return true;
				}
				entry = bootEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
			
			IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);
			for (;i &lt; entries.length; i++) {
				if (i &gt;= userEntries.length) {
					return true;
				}
				entry = userEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
		} catch (CoreException e) {
			return true;
		}
		
		return false;
	}</code>
      </source_code>
      <source_code type="assignment">
        <location start="1675" end="1748" />
        <code>IClasspathEntry[] boot = model.getEntries(ClasspathModel.BOOTSTRAP);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1749" end="1817" />
        <code>IClasspathEntry[] user = model.getEntries(ClasspathModel.USER);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1818" end="1880" />
        <code>List mementos = new ArrayList(boot.length + user.length);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Running 3.0M5. I don't know if this's a bug or me just missing something from
the internal stuff. I'm wondering if this method is ok?

Especially this part:
IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);
			for (;i &lt; entries.length; i++) {
				if (i &gt;= userEntries.length) {
					return true;
				}
In my setup i = 9 when arriving to the loop for (;i &lt; entries.length; i++)...
and it doesn't look like bootEntries and userEntries are ever from the same
array. In (ClasspathModel)model.getEntries(entryType) there're separate arrays
bootstrapEntries and userEntries.


/**
	 * @param configuration
	 * @return
	 */
	private boolean hasClasspathChanged(ILaunchConfiguration configuration) {
		try {
			IRuntimeClasspathEntry[] entries=
JavaRuntime.computeUnresolvedRuntimeClasspath(configuration);
			IClasspathEntry[] bootEntries= model.getEntries(ClasspathModel.BOOTSTRAP);
			IClasspathEntry entry;
			int i;
			for (i = 0; i &lt; bootEntries.length; i++) {
				if (i == entries.length) {
					return true;
				}
				entry = bootEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
			
			IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);
			for (;i &lt; entries.length; i++) {
				if (i &gt;= userEntries.length) {
					return true;
				}
				entry = userEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
		} catch (CoreException e) {
			return true;
		}
		
		return false;
	}

The actual reason i was looking JavaClassPath was due to NPE in public void
performApply(ILaunchConfigurationWorkingCopy configuration) caused by 
	try {
					IClasspathEntry[] boot = model.getEntries(ClasspathModel.BOOTSTRAP);
					IClasspathEntry[] user = model.getEntries(ClasspathModel.USER);
					List mementos = new ArrayList(boot.length + user.length);
					IClasspathEntry bootEntry;

user being null.
The problem with default classpath attribute setting is already reported (bug 
46030). Can you provide a stack trace for the NPE? 
Full story available at
http://www.jboss.org/index.html?module=bb&amp;op=viewtopic&amp;t=43657

java.lang.NullPointerException
at
org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab.performApply(JavaClasspathTab.java:262)
at
org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:98)
at
org.jboss.ide.eclipse.launcher.ui.configuration.AbstractServerTabGroup.performApply(AbstractServerTabGroup.java:29)
at
org.jboss.ide.eclipse.launcher.ui.configuration.jboss.JBoss30xTabGroup.performApply(JBoss30xTabGroup.java:64)
at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.handleApplyPressed(LaunchConfigurationTabGroupViewer.java:1153)
at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchPressed(LaunchConfigurationsDialog.java:1084)
at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.buttonPressed(LaunchConfigurationsDialog.java:295)
at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:430)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
at org.eclipse.jface.window.Window.open(Window.java:566)
at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:442)
at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:390) 


Looks like we are exposed to several NPEs here. The method 
ClasspathModel.getEntries(..) can return null, and we never check for it. 
Instead, I propose to change the return value to an empty array, rather than 
changing all the clients to check for null.

Marking as M6 candidate
Fixed in ClasspathModel (in Ant and in JDT). I also removed unused methods 
from the AntClasspathContentProvider (when I was tracking down clients of the 
method I changed).
Please verify, Darin (S).
Verified.</WithStack>
    <WithOutStack>Running 3.0M5. I don't know if this's a bug or me just missing something from
the internal stuff. I'm wondering if this method is ok?

Especially this part:
IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);
			for (;i &lt; entries.length; i++) {
				if (i &gt;= userEntries.length) {
					return true;
				}
In my setup i = 9 when arriving to the loop for (;i &lt; entries.length; i++)...
and it doesn't look like bootEntries and userEntries are ever from the same
array. In (ClasspathModel)model.getEntries(entryType) there're separate arrays
bootstrapEntries and userEntries.


/**
	 * @param configuration
	 * @return
	 */
	private boolean hasClasspathChanged(ILaunchConfiguration configuration) {
		try {
			IRuntimeClasspathEntry[] entries=
JavaRuntime.computeUnresolvedRuntimeClasspath(configuration);
			IClasspathEntry[] bootEntries= model.getEntries(ClasspathModel.BOOTSTRAP);
			IClasspathEntry entry;
			int i;
			for (i = 0; i &lt; bootEntries.length; i++) {
				if (i == entries.length) {
					return true;
				}
				entry = bootEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
			
			IClasspathEntry[] userEntries= model.getEntries(ClasspathModel.USER);
			for (;i &lt; entries.length; i++) {
				if (i &gt;= userEntries.length) {
					return true;
				}
				entry = userEntries[i];
				if (i &gt; entries.length || !entry.equals(entries[i])) {
					return true;
				}
				
			}
		} catch (CoreException e) {
			return true;
		}
		
		return false;
	}

The actual reason i was looking JavaClassPath was due to NPE in public void
performApply(ILaunchConfigurationWorkingCopy configuration) caused by 
	try {
					IClasspathEntry[] boot = model.getEntries(ClasspathModel.BOOTSTRAP);
					IClasspathEntry[] user = model.getEntries(ClasspathModel.USER);
					List mementos = new ArrayList(boot.length + user.length);
					IClasspathEntry bootEntry;

user being null.
The problem with default classpath attribute setting is already reported (bug 
46030). Can you provide a stack trace for the NPE? 
Full story available at
http://www.jboss.org/index.html?module=bb&amp;op=viewtopic&amp;t=43657

 


Looks like we are exposed to several NPEs here. The method 
ClasspathModel.getEntries(..) can return null, and we never check for it. 
Instead, I propose to change the return value to an empty array, rather than 
changing all the clients to check for null.

Marking as M6 candidate
Fixed in ClasspathModel (in Ant and in JDT). I also removed unused methods 
from the AntClasspathContentProvider (when I was tracking down clients of the 
method I changed).
Please verify, Darin (S).
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48947" />
    <CreationDate amount="2003-12-17 02:55:00 -0500" />
    <DupId amount="44234" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Extra primitive information not displayed for top-level element of watch expression</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Create an inspect expression and a watch expression on the same primitive
(number) variable. Play with the primitive display option, the inspect
expression changes accordingly, not the watch expression.
This appears fixed in M8.
please verify, Luc.
it's a dup
fix for bug 44234 solve this problem.

*** This bug has been marked as a duplicate of 44234 ***</WithStack>
    <WithOutStack>Create an inspect expression and a watch expression on the same primitive
(number) variable. Play with the primitive display option, the inspect
expression changes accordingly, not the watch expression.
This appears fixed in M8.
please verify, Luc.
it's a dup
fix for bug 44234 solve this problem.

*** This bug has been marked as a duplicate of 44234 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48948" />
    <CreationDate amount="2003-12-17 03:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>g++/gcc should be lounched with less priority</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>g++/gcc process should be lounched in the background with less priority,
otherwise editor is very unresponsive during background compilations.
Agreed except, Make spawns gcc not IDE.

Maybe we can find a way to do this, with spawner.
OK, But Is it possible to increase priority of eclipse itself? I tried this
manually, and it works perfect. Background compilation doesn't metter to editor
at all. This could be optional (default), becouse maybe someone needs to run
eclipse with "normal" pririty for whatever reason.
Only root is allowed to raise process priorities, so that's not possible.  

However, when spawning the Make process, Eclipse could call nice() before
exec()ing the Make process.  That should lower the priorities of the gcc
processes  started by Make as well.

PR was not targeted to any particular release. Changing target milestone to 2.1
I would extend this point not only to gcc, but to all threads except editor.
There are different threads and processes running here and there during eclipse
session,  but editor/ui thread should be always highest priority. Slow
indexer/gcc/linker is not that big problem if you dont have to watch them worknig.
You can always change your build command to be 'nice make' to adjust it's priority. I don't think we should be doing this in the spawner.</WithStack>
    <WithOutStack>g++/gcc process should be lounched in the background with less priority,
otherwise editor is very unresponsive during background compilations.
Agreed except, Make spawns gcc not IDE.

Maybe we can find a way to do this, with spawner.
OK, But Is it possible to increase priority of eclipse itself? I tried this
manually, and it works perfect. Background compilation doesn't metter to editor
at all. This could be optional (default), becouse maybe someone needs to run
eclipse with "normal" pririty for whatever reason.
Only root is allowed to raise process priorities, so that's not possible.  

However, when spawning the Make process, Eclipse could call nice() before
exec()ing the Make process.  That should lower the priorities of the gcc
processes  started by Make as well.

PR was not targeted to any particular release. Changing target milestone to 2.1
I would extend this point not only to gcc, but to all threads except editor.
There are different threads and processes running here and there during eclipse
session,  but editor/ui thread should be always highest priority. Slow
indexer/gcc/linker is not that big problem if you dont have to watch them worknig.
You can always change your build command to be 'nice make' to adjust it's priority. I don't think we should be doing this in the spawner.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48949" />
    <CreationDate amount="2003-12-17 04:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>No mnemonics on Type Filter preference page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

summary says it all
resolution says it all (20031219)</WithStack>
    <WithOutStack>I200312162000

summary says it all
resolution says it all (20031219)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48950" />
    <CreationDate amount="2003-12-17 04:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[formatting] Comment formatter: Header detection error prone</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="multicomment">
        <location start="156" end="320" />
        <code>/**
 * An example for comment formatting. This example is meant to illustrate the
various possiblilities offered by &lt;i&gt;Eclipse&lt;/i&gt; in order to format comments.
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="341" end="490" />
        <code>/**
     *
     * These possibilities include:
     * &lt;ul&gt;&lt;li&gt;Formatting of header comments.&lt;/li&gt;&lt;li&gt;Formatting of Javadoc
tags&lt;/li&gt;&lt;/ul&gt;
     */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="491" end="505" />
        <code>int bar();</code>
      </source_code>
      <source_code type="multicomment">
        <location start="506" end="931" />
        <code>/**
     * The following is some sample code which illustrates source formatting
within javadoc comments:
     * &lt;pre&gt;public class Example {final int a= 1;final boolean b= true;}&lt;/pre&gt;
     * @param a The first parameter. For an optimum result, this should be an
odd number
     * between 0 and 100.
     * @param b The second parameter.
     * @result The result of the foo operation, usually within 0 and 1000.
     */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="932" end="958" />
        <code>int foo(int a, int b);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- adding an import statement</Line>
          <Line>- adding a package declaration</Line>
          <Line>- setting format header comment to "true" for the preview.</Line>
          <Line>As discussed and decided with Tom, the current header detection scheme is quite</Line>
          <Line>error prone and should be replaced by the following heuristic: treat everything</Line>
          <Line>as header from 0 to beginning of first top level type's source range offset.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Changing the "Format header comment" affects the interface's Javadoc in the
following code (taken from new code formatter comment preview): 

/**
 * An example for comment formatting. This example is meant to illustrate the
various possiblilities offered by &lt;i&gt;Eclipse&lt;/i&gt; in order to format comments.
 */
interface Example {
    /**
     *
     * These possibilities include:
     * &lt;ul&gt;&lt;li&gt;Formatting of header comments.&lt;/li&gt;&lt;li&gt;Formatting of Javadoc
tags&lt;/li&gt;&lt;/ul&gt;
     */
    int bar();

    /**
     * The following is some sample code which illustrates source formatting
within javadoc comments:
     * &lt;pre&gt;public class Example {final int a= 1;final boolean b= true;}&lt;/pre&gt;
     * @param a The first parameter. For an optimum result, this should be an
odd number
     * between 0 and 100.
     * @param b The second parameter.
     * @result The result of the foo operation, usually within 0 and 1000.
     */
    int foo(int a, int b);
}
the "format header comment" feature just checks for comments at position 0. A
solution would be to add an empty line before the javadoc comment, or a package
declaration or so.
I disagree and would say it is a bug that the file header comment can't start
with empty lines.

See also bug 49527
So the real problem is that the type comment of a type in the default package
that specifies no imports is not formatted when "format header comments" is
unchecked. 

Seems not like a very frequent problem - workaround for the preference page by
- adding an import statement
- adding a package declaration
- setting format header comment to "true" for the preview.
As discussed and decided with Tom, the current header detection scheme is quite
error prone and should be replaced by the following heuristic: treat everything
as header from 0 to beginning of first top level type's source range offset.

Adapted summary and increased priority.

How should we handle the case where we don't have an editor? E.g., in previewers
we do not have a Java model. Right?
you could make temporary working copy using the preview source
There is a problem with the proposal from comment 4: Given a CU with a header
comment and a top-level type's comment with nothing but whitespace in-between,
the source range of the top-level type starts at the offset of the header
comment, not the type's comment.
See bug 56532.
As a workaround you could use a Java code scanner and do it yourself (see
JavaDocAccess as a hint).


Fixed (released modified patch by Christof)
Available in builds &gt; 20040330
*** Bug 57161 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I200312162000

Changing the "Format header comment" affects the interface's Javadoc in the
following code (taken from new code formatter comment preview): 

/**
 * An example for comment formatting. This example is meant to illustrate the
various possiblilities offered by &lt;i&gt;Eclipse&lt;/i&gt; in order to format comments.
 */
interface Example {
    /**
     *
     * These possibilities include:
     * &lt;ul&gt;&lt;li&gt;Formatting of header comments.&lt;/li&gt;&lt;li&gt;Formatting of Javadoc
tags&lt;/li&gt;&lt;/ul&gt;
     */
    int bar();

    /**
     * The following is some sample code which illustrates source formatting
within javadoc comments:
     * &lt;pre&gt;public class Example {final int a= 1;final boolean b= true;}&lt;/pre&gt;
     * @param a The first parameter. For an optimum result, this should be an
odd number
     * between 0 and 100.
     * @param b The second parameter.
     * @result The result of the foo operation, usually within 0 and 1000.
     */
    int foo(int a, int b);
}
the "format header comment" feature just checks for comments at position 0. A
solution would be to add an empty line before the javadoc comment, or a package
declaration or so.
I disagree and would say it is a bug that the file header comment can't start
with empty lines.

See also bug 49527
So the real problem is that the type comment of a type in the default package
that specifies no imports is not formatted when "format header comments" is
unchecked. 

Seems not like a very frequent problem - workaround for the preference page by
- adding an import statement
- adding a package declaration
- setting format header comment to "true" for the preview.
As discussed and decided with Tom, the current header detection scheme is quite
error prone and should be replaced by the following heuristic: treat everything
as header from 0 to beginning of first top level type's source range offset.

Adapted summary and increased priority.

How should we handle the case where we don't have an editor? E.g., in previewers
we do not have a Java model. Right?
you could make temporary working copy using the preview source
There is a problem with the proposal from comment 4: Given a CU with a header
comment and a top-level type's comment with nothing but whitespace in-between,
the source range of the top-level type starts at the offset of the header
comment, not the type's comment.
See bug 56532.
As a workaround you could use a Java code scanner and do it yourself (see
JavaDocAccess as a hint).


Fixed (released modified patch by Christof)
Available in builds &gt; 20040330
*** Bug 57161 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48951" />
    <CreationDate amount="2003-12-17 04:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Code Formatter comment preview is wrong [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

The new code formatter's comment preview does not contain any header. It only
has Javadoc for the interface.

Note: Changing the "Format header" affects the interface's Javadoc which is a
bug (see bug 48950).
fixed &gt; 200312182000</WithStack>
    <WithOutStack>I200312162000

The new code formatter's comment preview does not contain any header. It only
has Javadoc for the interface.

Note: Changing the "Format header" affects the interface's Javadoc which is a
bug (see bug 48950).
fixed &gt; 200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48952" />
    <CreationDate amount="2003-12-17 04:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[preferences] Allow to edit formatter previews</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>1) I would like to be able to see what happens to my existing code (style) when</Line>
          <Line>changing some preferences. Currently I have to</Line>
          <Line>- open the preferences</Line>
          <Line>- change it</Line>
          <Line>- apply it</Line>
          <Line>- leave the preferences</Line>
          <Line>- format my file</Line>
          <Line>and it is hard to see what gets changed.</Line>
          <Line />
          <Line>2) The preview might not show all cases (see e.g. bug 48951).</Line>
          <Line>Another idea is to take the current file as the preview file. Doing so would</Line>
          <Line>give you better feedback on what you are changing.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- open the preferences</Line>
          <Line>- change it</Line>
          <Line>- apply it</Line>
          <Line>- leave the preferences</Line>
          <Line>- format my file</Line>
          <Line>and it is hard to see what gets changed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I200312162000

Allow to edit code formatter preview.

Reason:
1) I would like to be able to see what happens to my existing code (style) when
changing some preferences. Currently I have to
- open the preferences
- change it
- apply it
- leave the preferences
- format my file
and it is hard to see what gets changed.

2) The preview might not show all cases (see e.g. bug 48951).
Another idea is to take the current file as the preview file. Doing so would 
give you better feedback on what you are changing.</WithStack>
    <WithOutStack>I200312162000

Allow to edit code formatter preview.

Reason:
1) I would like to be able to see what happens to my existing code (style) when
changing some preferences. Currently I have to
- open the preferences
- change it
- apply it
- leave the preferences
- format my file
and it is hard to see what gets changed.

2) The preview might not show all cases (see e.g. bug 48951).
Another idea is to take the current file as the preview file. Doing so would 
give you better feedback on what you are changing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48953" />
    <CreationDate amount="2003-12-17 04:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Code Formatter Pref page preview too simple [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I200312162000

The preview on the new code formatter page is way too simple: I see almost
nothing when switching profiles.

Note: I like the approach that when editing the profile I only see a
subset/specific preview so that I can see what changes when I change the settings.
Using a preview that gives you feedback on all options will be way to 
compilcated (e.g. all white space options). Dani, what exactly would you like 
to see ?


Assume I only use comment formatting. This renders the preview useless for me.

My argument is: either show a "real" file where I can see what happens when I
switch profile. I don't expect to see all 1000 (or so) options, but at least
most of them (e.g. comment formatting options can't be seen at all).
I agree that the preview should "demonstrate" more options. Silvio, can you 
please improve this.
Ok, I'm looking for a suitable file. Any suggestions are welcome btw, thanks.
later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I200312162000

The preview on the new code formatter page is way too simple: I see almost
nothing when switching profiles.

Note: I like the approach that when editing the profile I only see a
subset/specific preview so that I can see what changes when I change the settings.
Using a preview that gives you feedback on all options will be way to 
compilcated (e.g. all white space options). Dani, what exactly would you like 
to see ?


Assume I only use comment formatting. This renders the preview useless for me.

My argument is: either show a "real" file where I can see what happens when I
switch profile. I don't expect to see all 1000 (or so) options, but at least
most of them (e.g. comment formatting options can't be seen at all).
I agree that the preview should "demonstrate" more options. Silvio, can you 
please improve this.
Ok, I'm looking for a suitable file. Any suggestions are welcome btw, thanks.
later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48954" />
    <CreationDate amount="2003-12-17 04:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>New Code Formatter pref page: Edit should be allowed for predefined profiles [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- I can change a predefined perspective and save it under that name</Line>
          <Line>- I can edit existing templates and either save it under that name or a new one</Line>
          <Line>Time permitted.</Line>
          <Line>No further action planned.</Line>
          <Line>Wrong resolution.</Line>
          <Line>Got fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

To create a new profile I have to create a new one first. I would like to edit
an existing one and maybe even override it. This would also be more consistent
with what we have:
- I can change a predefined perspective and save it under that name
- I can edit existing templates and either save it under that name or a new one
Time permitted. 
No further action planned.
Wrong resolution.
Got fixed. 

you can now edit a default profile and save it under a different name.</WithStack>
    <WithOutStack>I200312162000

To create a new profile I have to create a new one first. I would like to edit
an existing one and maybe even override it. This would also be more consistent
with what we have:
- I can change a predefined perspective and save it under that name
- I can edit existing templates and either save it under that name or a new one
Time permitted. 
No further action planned.
Wrong resolution.
Got fixed. 

you can now edit a default profile and save it under a different name.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48955" />
    <CreationDate amount="2003-12-17 04:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>New Code Formatter pref page: Buttons layout</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20031216

Why is the new button on the left side and not with the other buttons?
All left buttons are related to the selected item in the combo box whereas the 
new button is releated to the "combo box" itself.</WithStack>
    <WithOutStack>I20031216

Why is the new button on the left side and not with the other buttons?
All left buttons are related to the selected item in the combo box whereas the 
new button is releated to the "combo box" itself.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48956" />
    <CreationDate amount="2003-12-17 04:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>New Code Formatter pref page: Connection between items not visible [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I200312162000

When editing comment formatting prefs on the new Code Formatter pref page there
are the following two preferences:

[ ] Indent Javadoc tags
[ ] Indent description after @param

If I uncheck the first one then the second one gets disabled. This connection
should be reflected in the UI:
[ ] Indent Javadoc tags
    [ ] Indent description after @param


Note: same bug was on old pref page
Although I agree with Dani I opt to do nothing here. In this case the UI will 
look more cluttered if we indent the second check box and they are surrounded 
by a group which somehow indicates that the belong together.</WithStack>
    <WithOutStack>I200312162000

When editing comment formatting prefs on the new Code Formatter pref page there
are the following two preferences:

[ ] Indent Javadoc tags
[ ] Indent description after @param

If I uncheck the first one then the second one gets disabled. This connection
should be reflected in the UI:
[ ] Indent Javadoc tags
    [ ] Indent description after @param


Note: same bug was on old pref page
Although I agree with Dani I opt to do nothing here. In this case the UI will 
look more cluttered if we indent the second check box and they are surrounded 
by a group which somehow indicates that the belong together.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48957" />
    <CreationDate amount="2003-12-17 04:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>New Code Formatter prefs: Line Wrapping: missing mnemonic [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Edit a profile using the new code formatter prefs: The "Set line width for
preview window" has no mnemonic.
fixed &gt; 200312182000</WithStack>
    <WithOutStack>I200312162000

Edit a profile using the new code formatter prefs: The "Set line width for
preview window" has no mnemonic.
fixed &gt; 200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48958" />
    <CreationDate amount="2003-12-17 04:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Code Formatter prefs: New Lines: Preserve... not visible [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Edit New Lines pref using new code formatter prefs. Nothing happens in the
preview when changing the The following preference:

[ ] Preserve existing new line breaks

In addition, it is not clear whether this only affects empty lines or whether
this means it preserves the line delimiter style (e.g. keeps CR in my file even
though I format on Windows where line break is CRLF).
Can you please comment.
Olivier, can you explain what this option does? Thanks.
The constant I know is FORMATTER_PRESERVE_USER_LINEBREAKS.
This preserves existing line breaks in the code. It converts them to the line 
delimiter specified to the code formatter. In general it makes the formatted 
string very ugly, because it is mixing formatting and preservation of existing 
line breaks.
&gt; 20040129

The preview has been adapted.</WithStack>
    <WithOutStack>I200312162000

Edit New Lines pref using new code formatter prefs. Nothing happens in the
preview when changing the The following preference:

[ ] Preserve existing new line breaks

In addition, it is not clear whether this only affects empty lines or whether
this means it preserves the line delimiter style (e.g. keeps CR in my file even
though I format on Windows where line break is CRLF).
Can you please comment.
Olivier, can you explain what this option does? Thanks.
The constant I know is FORMATTER_PRESERVE_USER_LINEBREAKS.
This preserves existing line breaks in the code. It converts them to the line 
delimiter specified to the code formatter. In general it makes the formatted 
string very ugly, because it is mixing formatting and preservation of existing 
line breaks.
&gt; 20040129

The preview has been adapted.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48959" />
    <CreationDate amount="2003-12-17 04:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Code formatter prefs: Blank Lines uses mnemonic on space [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Edit "Blank Lines" using new code formatter prefs: the following preference uses
mnemonic on space which I think is uncommon and looks ugly:

[ ] Before field declarations
We should not use blank as a mnemonic. This is really uncommon.
fixed &gt; 200312182000</WithStack>
    <WithOutStack>I200312162000

Edit "Blank Lines" using new code formatter prefs: the following preference uses
mnemonic on space which I think is uncommon and looks ugly:

[ ] Before field declarations
We should not use blank as a mnemonic. This is really uncommon.
fixed &gt; 200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48960" />
    <CreationDate amount="2003-12-17 04:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>New Code Formatter pref page: White Space: Mixed capitalization [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- top level node: first word capitalized and bold (will be possible in the</Line>
          <Line>future)</Line>
          <Line>- sub nodes: all lower case.</Line>
          <Line>fixed &gt; 200312182000</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031216

Edit a profile using the new code formatter pref page, go to "White Space" tab:
some terms are fully capitalized (e.g. Member Functions) while others only start
with a big letter (e.g. Control statements).

The page should use everywhere the same pattern.
Same applies to the line wrapping page.
The rule we should use is as follows:

- top level node: first word capitalized and bold (will be possible in the 
  future)
- sub nodes: all lower case.
fixed &gt; 200312182000</WithStack>
    <WithOutStack>I20031216

Edit a profile using the new code formatter pref page, go to "White Space" tab:
some terms are fully capitalized (e.g. Member Functions) while others only start
with a big letter (e.g. Control statements).

The page should use everywhere the same pattern.
Same applies to the line wrapping page.
The rule we should use is as follows:

- top level node: first word capitalized and bold (will be possible in the 
  future)
- sub nodes: all lower case.
fixed &gt; 200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48961" />
    <CreationDate amount="2003-12-17 04:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Code Formatter pref: handling of illegal values [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- show an status when an invalid value get entered</Line>
          <Line>- disable the OK button.</Line>
          <Line>fixed &gt; 200312182000</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

In Eclipse prefs and wizards the style is to show a status when wrong data is
entered. The new code formatter pref fields don't do so but directly modify the
user's input and apply some default.
It is also not intuitive which default is applied:

When entering -1 it sometime gets replaced by 0 and sometimes by 1 (even though
0 would be a valid value as well)
Agree, we should do the following:

- show an status when an invalid value get entered
- disable the OK button.
fixed &gt; 200312182000</WithStack>
    <WithOutStack>I200312162000

In Eclipse prefs and wizards the style is to show a status when wrong data is
entered. The new code formatter pref fields don't do so but directly modify the
user's input and apply some default.
It is also not intuitive which default is applied:

When entering -1 it sometime gets replaced by 0 and sometimes by 1 (even though
0 would be a valid value as well)
Agree, we should do the following:

- show an status when an invalid value get entered
- disable the OK button.
fixed &gt; 200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48962" />
    <CreationDate amount="2003-12-17 04:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>No migration path to switch to new code formatter [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="846" end="892" />
        <code>public static Map getEmulatedOldSettings() {
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3280" end="3506" />
        <code>/**
 * Return a configuration for the new formatter emulating the currently set
 * old formatter settings. 
 * @return A valid configuration if the old settings are present, null if 
 * no old settings have been detected.
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3507" end="3541" />
        <code>Map getEmulatedOldSettings() {...}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1) query whether the options are present</Line>
          <Line>2) getting a map of options, analogous to getJavaConventionSettings() and</Line>
          <Line>getDefaultSettings().</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- a separate action</Line>
          <Line>- manually convert the old preferences</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I200312162000

I have tuned the existing/old code formatter and am happy. Given the amount of
preferences with the new code formatter it will take me lots of time to achieve
the same. I would expect that I can (or even better: it is done for me
automatically maybe by adding a profile: "Old/Existing Preferences") initialize
the new code formatter prefs based on the my prefs for the old/existing code
formatter.
Silvio, how expensive would it be to implement this. May be there could be a 
third default profile at the beginning containing the old settings.
Olivier, until recently you emulated the old formatter by configuring the new
one appropriately, depending on the old options. We could provide the old
settings as an additional 'build-in' profile in a similar way. 

Im thinking of adding a new method to DefaultCodeFormatterConstants:

public static Map getEmulatedOldSettings() {
}

What do you think?


We can do an automatic conversion from old options to new options. We need to 
determine how we can make it easy for the user. I thought the idea was to 
remove old constants once the new formatter is enabled by default.
Yes the constants will be removed but nevertheless the users will still have 
these old settings in their workspaces once they migrate to 3.0.

So we should add a profile with the old settings iff the old settings are 
present. Is this possible to do in core?

We could then specify an API which allows to 1) query whether the old settings 
are present and 2) get a map with new settings emulating the old ones.
I would suggest that we simply convert the old options to a new profile.
We can provide a method to convert the old options to the new options. We need 
to define the signature of that method. It could be added in the 
DefaultCodeFormatterConstants class.
Let me comment about the UI:

What we need is a profile reflecting my existing old code formatter preferences.
I think the simplest solution would be to create (overwrite if it already
exists) a profile "Old Formatter". This profile should be read-only but
*removable* by the user since once the old formatter is removed I don't want to
have a read-only profile called "Old Formatter" (and we cannot remove it
automatically of course). I guess when I switch back from new to old formatter
and then again to the new formatter the profile can be created/overwritten again.

I would not want/need
- a separate action
- manually convert the old preferences

The old code formatter will be removed (at least from the UI). Martin is 
working on this. I wouldn't name the profile Old Formatter. I think "Current 
settings" is a better name. We should only create it if the old settings 
differ from the default settings. IMO the profile should be writeable.
Olivier: Can you move the options from JavaCore to some place in your internals?
Then the public API would be clean but you could still detect whether the
options are assigned in the preference store of a user, allowing you to set up a
new configuration based on these old settings.

From a UI side, in order to present a profile as Dani suggested, I need an API
as follows:

1) query whether the options are present
2) getting a map of options, analogous to getJavaConventionSettings() and
getDefaultSettings().

I propose:

/**
 * Return a configuration for the new formatter emulating the currently set
 * old formatter settings. 
 * @return A valid configuration if the old settings are present, null if 
 * no old settings have been detected.
 */
Map getEmulatedOldSettings() {...}



Dani: Making the profile removable is a good idea, I will do that.
Current Settings sounds a bit to general for me and I doubt that users will know
that those are the setting taken from the old formatter.
Moving to core in order to enhance DefaultCodeFormatterConstants.java. 
Silvio, what do you expect from me exactly?
What I described in comment 8:

* Detect whether the old formatter settings are present in the JavaCore
preference store (e.g. when a user migrates his workspace from 2.x to 3.0 build).

* If they are present, provide a set of new formatter options which emulate the
behaviour of the currently set options.

* This needs two API functions: one to query whether the old settings are
available, the other to retrieve a map which contains new settings to emulate
the old ones.
Where do you want this API to be defined?
It would be nice to have this in M7. I have picked up an integration build to
replace my M6 installation and was quite surprised the first time I did a format.

Arbitrary format changes in code are annoying since they create large diffs at
merge time.

I don't think this is doable for M7 since we are frozen. Only critical problems
might be fixed.

I don't see why we need an API to to query whether the old settings are
available. This could be done directly inside the UI code using the constants
defined on JavaCore.

I can add a method on the DefaultCodeFormatterConstants to convert old options
to new options.
Created attachment 7705
Conversion code

I don't see why we need an API for something that can be written on the UI
side.
Here is a piece of code that would do the trick.
Move to JDT/UI for comment. From my point of view, there is no need for an API.
This would be a temporary solution anyway.
I agree that this could be done just in the UI code. However, the advantage of
having an API would be e.g. to covert formatter configuration maps for test
cases that were written for old constants. 

I'll have a look at this after M7.

*** Bug 53965 has been marked as a duplicate of this bug. ***
not for 3.0
Why not just close it WONT_FIX then. If you don't release this in 3.0 nobobdy
will ever need it anyway.
*** Bug 69982 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I200312162000

I have tuned the existing/old code formatter and am happy. Given the amount of
preferences with the new code formatter it will take me lots of time to achieve
the same. I would expect that I can (or even better: it is done for me
automatically maybe by adding a profile: "Old/Existing Preferences") initialize
the new code formatter prefs based on the my prefs for the old/existing code
formatter.
Silvio, how expensive would it be to implement this. May be there could be a 
third default profile at the beginning containing the old settings.
Olivier, until recently you emulated the old formatter by configuring the new
one appropriately, depending on the old options. We could provide the old
settings as an additional 'build-in' profile in a similar way. 

Im thinking of adding a new method to DefaultCodeFormatterConstants:

public static Map getEmulatedOldSettings() {
}

What do you think?


We can do an automatic conversion from old options to new options. We need to 
determine how we can make it easy for the user. I thought the idea was to 
remove old constants once the new formatter is enabled by default.
Yes the constants will be removed but nevertheless the users will still have 
these old settings in their workspaces once they migrate to 3.0.

So we should add a profile with the old settings iff the old settings are 
present. Is this possible to do in core?

We could then specify an API which allows to 1) query whether the old settings 
are present and 2) get a map with new settings emulating the old ones.
I would suggest that we simply convert the old options to a new profile.
We can provide a method to convert the old options to the new options. We need 
to define the signature of that method. It could be added in the 
DefaultCodeFormatterConstants class.
Let me comment about the UI:

What we need is a profile reflecting my existing old code formatter preferences.
I think the simplest solution would be to create (overwrite if it already
exists) a profile "Old Formatter". This profile should be read-only but
*removable* by the user since once the old formatter is removed I don't want to
have a read-only profile called "Old Formatter" (and we cannot remove it
automatically of course). I guess when I switch back from new to old formatter
and then again to the new formatter the profile can be created/overwritten again.

I would not want/need
- a separate action
- manually convert the old preferences

The old code formatter will be removed (at least from the UI). Martin is 
working on this. I wouldn't name the profile Old Formatter. I think "Current 
settings" is a better name. We should only create it if the old settings 
differ from the default settings. IMO the profile should be writeable.
Olivier: Can you move the options from JavaCore to some place in your internals?
Then the public API would be clean but you could still detect whether the
options are assigned in the preference store of a user, allowing you to set up a
new configuration based on these old settings.

From a UI side, in order to present a profile as Dani suggested, I need an API
as follows:

1) query whether the options are present
2) getting a map of options, analogous to getJavaConventionSettings() and
getDefaultSettings().

I propose:

/**
 * Return a configuration for the new formatter emulating the currently set
 * old formatter settings. 
 * @return A valid configuration if the old settings are present, null if 
 * no old settings have been detected.
 */
Map getEmulatedOldSettings() {...}



Dani: Making the profile removable is a good idea, I will do that.
Current Settings sounds a bit to general for me and I doubt that users will know
that those are the setting taken from the old formatter.
Moving to core in order to enhance DefaultCodeFormatterConstants.java. 
Silvio, what do you expect from me exactly?
What I described in comment 8:

* Detect whether the old formatter settings are present in the JavaCore
preference store (e.g. when a user migrates his workspace from 2.x to 3.0 build).

* If they are present, provide a set of new formatter options which emulate the
behaviour of the currently set options.

* This needs two API functions: one to query whether the old settings are
available, the other to retrieve a map which contains new settings to emulate
the old ones.
Where do you want this API to be defined?
It would be nice to have this in M7. I have picked up an integration build to
replace my M6 installation and was quite surprised the first time I did a format.

Arbitrary format changes in code are annoying since they create large diffs at
merge time.

I don't think this is doable for M7 since we are frozen. Only critical problems
might be fixed.

I don't see why we need an API to to query whether the old settings are
available. This could be done directly inside the UI code using the constants
defined on JavaCore.

I can add a method on the DefaultCodeFormatterConstants to convert old options
to new options.
Created attachment 7705
Conversion code

I don't see why we need an API for something that can be written on the UI
side.
Here is a piece of code that would do the trick.
Move to JDT/UI for comment. From my point of view, there is no need for an API.
This would be a temporary solution anyway.
I agree that this could be done just in the UI code. However, the advantage of
having an API would be e.g. to covert formatter configuration maps for test
cases that were written for old constants. 

I'll have a look at this after M7.

*** Bug 53965 has been marked as a duplicate of this bug. ***
not for 3.0
Why not just close it WONT_FIX then. If you don't release this in 3.0 nobobdy
will ever need it anyway.
*** Bug 69982 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48963" />
    <CreationDate amount="2003-12-17 04:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc compiler preference page: Include checkbox misleading</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20031216

If the Include check boxes are unchecked, then the compiler checks java doc of 
overriding methods. This technically correct (since the javadoc 
compiler "include"/"copies" javadoc from the overridden method to the 
overriding method), but confusing for the user. 

For M6 we should change this to "Ignore overriding methods". 
For M7 we should invert the checkbox and name it: "Check overriding methods"
changed to 'Check overriding methods' &gt; 20031217

jdt.core changes to use this.
Verified in I200312180010</WithStack>
    <WithOutStack>I20031216

If the Include check boxes are unchecked, then the compiler checks java doc of 
overriding methods. This technically correct (since the javadoc 
compiler "include"/"copies" javadoc from the overridden method to the 
overriding method), but confusing for the user. 

For M6 we should change this to "Ignore overriding methods". 
For M7 we should invert the checkbox and name it: "Check overriding methods"
changed to 'Check overriding methods' &gt; 20031217

jdt.core changes to use this.
Verified in I200312180010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48964" />
    <CreationDate amount="2003-12-17 04:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Would like to scope Javadoc checking to a set of packages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20031216

Given that we distinguish between API and non API it would be nice if the 
Javadoc checking can be scope to a set of packages. This would allow only 
checking Javadoc for API packages.
Why would non API packages have Javadoc? Regular comment should be enough.
Dirk is saying that he'd like to be able to distinguish between API and non-API 
code so that the Javadoc validation would skip entirely non interesting areas.

I start to think that the API vs. non-API is a useful notion, which would 
impact many more diagnosis or behavior. For instance, we could flag external 
references to non-API code (from dependent projects).
Deferred post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I20031216

Given that we distinguish between API and non API it would be nice if the 
Javadoc checking can be scope to a set of packages. This would allow only 
checking Javadoc for API packages.
Why would non API packages have Javadoc? Regular comment should be enough.
Dirk is saying that he'd like to be able to distinguish between API and non-API 
code so that the Javadoc validation would skip entirely non interesting areas.

I start to think that the API vs. non-API is a useful notion, which would 
impact many more diagnosis or behavior. For instance, we could flag external 
references to non-API code (from dependent projects).
Deferred post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48965" />
    <CreationDate amount="2003-12-17 04:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc problem preference settings: Use 'include' instead of 'ignore'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20031217

The 'Ignore Javadoc of overriding methods' shoudl be change to 'Include...', to 
be compaitble with all other 'problems' settings:
You get problem annotations when they are checked.

see also bug 48834
Our logic is wrong. Should fix for M6. 
Option names are not to be changed, only the logic behind (since only logic is 
wrong).
We decided to just change to labels for M6 to 'Ignore', and do the real fix for 
M7.
I already have the screenshots for the new and noteworthy ect.
changed labels back again 'Check overrriden methods'.
screen shot updated
Fixed.

back to standard jdt-core options behavior. When checked, then compiler will 
report corresponding problems.

Test cases of jdt.core.tests.regression.compiler.JavadocTestOptions modified to 
take into account this behavior change.

Verified for 3.0M6</WithStack>
    <WithOutStack>20031217

The 'Ignore Javadoc of overriding methods' shoudl be change to 'Include...', to 
be compaitble with all other 'problems' settings:
You get problem annotations when they are checked.

see also bug 48834
Our logic is wrong. Should fix for M6. 
Option names are not to be changed, only the logic behind (since only logic is 
wrong).
We decided to just change to labels for M6 to 'Ignore', and do the real fix for 
M7.
I already have the screenshots for the new and noteworthy ect.
changed labels back again 'Check overrriden methods'.
screen shot updated
Fixed.

back to standard jdt-core options behavior. When checked, then compiler will 
report corresponding problems.

Test cases of jdt.core.tests.regression.compiler.JavadocTestOptions modified to 
take into account this behavior change.

Verified for 3.0M6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48966" />
    <CreationDate amount="2003-12-17 05:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[preferences] Should be able to export from 'Formatter' preference page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

I am used that I can press Export and Import on the preference dialog and get
the formatter prefs as well. We now introduced another page where the user has
to do this manually.

This might change with the new settings story.

In addition, I cannot export my formatter prefs at once: I have to export every
single profile manually.
Agree that exporting/importing should consider the formatter as well. However 
having different profiles that can be managed separatly allows easy sharing of 
formatter settings. 


Nothing we can do here for 3.0 since core's preference story got postponed &gt; 
3.0 and introducing out own implementation doesn't make to much sense.
The page should have an Export... button.
See also bug 279415.
The Export... button on the 'Formatter' preference page would export ALL current profiles while the Export... button in the Edit dialog only exports the current one.
Same applies to 'Clean Up' page.
Created attachment 140866
Patch with the fix.

Added a new Export All... button to the formatter page which exports all the current profiles to a new file. Also modified the Import... code to import multiple profiles at once.
First time try of the patch causes a NPE and hence which is really bad. Please always try/test all the (new) options/buttons before you attach a patch.

Why do you use the term 'save' in the code for the export functionality? Either it is 'save' or it is 'export' but mixing it is not good.

I quickly glanced over the existing 'Export' buttons and all of them have 'x' as their mnemonic. What is the reason for changing this in your button?
Created attachment 141296
Improved patch
(In reply to comment #8)
&gt; First time try of the patch causes a NPE and hence which is really bad. Please
&gt; always try/test all the (new) options/buttons before you attach a patch.

It was NPE coming from file creation. I fixed that. 

&gt; Why do you use the term 'save' in the code for the export functionality? Either
&gt; it is 'save' or it is 'export' but mixing it is not good.

I saw that all of the existing import related terms named 'load' and export related terms named 'save', in methods and NLS strings. So i named Export All as 'saveAll' in all cases to maintain consistency.

&gt; I quickly glanced over the existing 'Export' buttons and all of them have 'x'
&gt; as their mnemonic. What is the reason for changing this in your button?
&gt; 

Oh i overlooked that point. I have changed it back to 'x'. Thanks!
&gt; Either it is 'save' or it is 'export' but mixing it is not good.
It's still mixed which is bad in this case. Maybe I wasn't clear enough about this. Often there are several patterns that could be followed and it's sort of a gut feeling which one to follow. In this case when adding a button that does 'X' then all corresponding code must be named that way. The mismatch in the current code is most likely for historical reasons where it was decided to relabel the button from "Save" to "Export" but wanted to keep the code changes minimal.

You are reusing a string from the export profile functionality/dialog. This is not a good idea. Please use a new key for the overwrite message.

In addition, it is more readable if you group all the strings and constants for the new functionality together instead of spreading them all over the file:
CodingStyleConfigurationBlock_save_profile_* belongs to one functionality/dialog with its messages and CodingStyleConfigurationBlock_save_profiles_* is another. They should be kept in separate blocks.

&gt;Oh i overlooked that point. I have changed it back to 'x'. Thanks!
OK, but my initial question was *why* you used 'e' in the first place ;-)
Created attachment 142359
Patch with changes

Changed all "save" to "export" for Export All... and grouped them together.
Patch is good. I only removed the following code:
    dialog.setFileName("formatterprofiles"); //$NON-NLS-1$
because that code is also used to export clean up profiles and formatterprofiles" is not good there. This could be improved by getting the initial name from the subclasses.

Fixed in HEAD.
Available in builds &gt;= N20090731-2000.
&gt;Verified for 3.6 M1 using I20090803-1800 on Linux-GTK.</WithStack>
    <WithOutStack>I200312162000

I am used that I can press Export and Import on the preference dialog and get
the formatter prefs as well. We now introduced another page where the user has
to do this manually.

This might change with the new settings story.

In addition, I cannot export my formatter prefs at once: I have to export every
single profile manually.
Agree that exporting/importing should consider the formatter as well. However 
having different profiles that can be managed separatly allows easy sharing of 
formatter settings. 


Nothing we can do here for 3.0 since core's preference story got postponed &gt; 
3.0 and introducing out own implementation doesn't make to much sense.
The page should have an Export... button.
See also bug 279415.
The Export... button on the 'Formatter' preference page would export ALL current profiles while the Export... button in the Edit dialog only exports the current one.
Same applies to 'Clean Up' page.
Created attachment 140866
Patch with the fix.

Added a new Export All... button to the formatter page which exports all the current profiles to a new file. Also modified the Import... code to import multiple profiles at once.
First time try of the patch causes a NPE and hence which is really bad. Please always try/test all the (new) options/buttons before you attach a patch.

Why do you use the term 'save' in the code for the export functionality? Either it is 'save' or it is 'export' but mixing it is not good.

I quickly glanced over the existing 'Export' buttons and all of them have 'x' as their mnemonic. What is the reason for changing this in your button?
Created attachment 141296
Improved patch
(In reply to comment #8)
&gt; First time try of the patch causes a NPE and hence which is really bad. Please
&gt; always try/test all the (new) options/buttons before you attach a patch.

It was NPE coming from file creation. I fixed that. 

&gt; Why do you use the term 'save' in the code for the export functionality? Either
&gt; it is 'save' or it is 'export' but mixing it is not good.

I saw that all of the existing import related terms named 'load' and export related terms named 'save', in methods and NLS strings. So i named Export All as 'saveAll' in all cases to maintain consistency.

&gt; I quickly glanced over the existing 'Export' buttons and all of them have 'x'
&gt; as their mnemonic. What is the reason for changing this in your button?
&gt; 

Oh i overlooked that point. I have changed it back to 'x'. Thanks!
&gt; Either it is 'save' or it is 'export' but mixing it is not good.
It's still mixed which is bad in this case. Maybe I wasn't clear enough about this. Often there are several patterns that could be followed and it's sort of a gut feeling which one to follow. In this case when adding a button that does 'X' then all corresponding code must be named that way. The mismatch in the current code is most likely for historical reasons where it was decided to relabel the button from "Save" to "Export" but wanted to keep the code changes minimal.

You are reusing a string from the export profile functionality/dialog. This is not a good idea. Please use a new key for the overwrite message.

In addition, it is more readable if you group all the strings and constants for the new functionality together instead of spreading them all over the file:
CodingStyleConfigurationBlock_save_profile_* belongs to one functionality/dialog with its messages and CodingStyleConfigurationBlock_save_profiles_* is another. They should be kept in separate blocks.

&gt;Oh i overlooked that point. I have changed it back to 'x'. Thanks!
OK, but my initial question was *why* you used 'e' in the first place ;-)
Created attachment 142359
Patch with changes

Changed all "save" to "export" for Export All... and grouped them together.
Patch is good. I only removed the following code:
    dialog.setFileName("formatterprofiles"); //$NON-NLS-1$
because that code is also used to export clean up profiles and formatterprofiles" is not good there. This could be improved by getting the initial name from the subclasses.

Fixed in HEAD.
Available in builds &gt;= N20090731-2000.
&gt;Verified for 3.6 M1 using I20090803-1800 on Linux-GTK.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48967" />
    <CreationDate amount="2003-12-17 05:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New code formatter prefs: No feedback when loading invalid profiel [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

When loading an XML file which contains no or invalid syntax nothing happens (at
least that's my impression). The user should get feedback.
A dialog saying, that the profile couldn't be read would be indeed helpful.
fixed &gt; I200312182000</WithStack>
    <WithOutStack>I200312162000

When loading an XML file which contains no or invalid syntax nothing happens (at
least that's my impression). The user should get feedback.
A dialog saying, that the profile couldn't be read would be indeed helpful.
fixed &gt; I200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48968" />
    <CreationDate amount="2003-12-17 05:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Focus on" in typehierarchy doesn't show name for anonymous inners [type hiearchy]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) Import Junit</Line>
          <Line>2) Create a Java working set containing junit.framework</Line>
          <Line>3) open a type hierarchy on junit.framework.Protectable.</Line>
          <Line>4) In the type hierarchy, select the working set created in step 2).</Line>
          <Line>5) Observe: Protectable has an anonymous inner subclass</Line>
          <Line>6) open the context menu on the anonymous class</Line>
          <Line>7) observe: the menu contains an entry like this: "Focus on ''". I.e. there is</Line>
          <Line>no label for the anonymous inner class.</Line>
          <Line>PS: JUnit 3.8.1</Line>
          <Line>Fixed for build &gt; I20030209</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I2003-12-16-20:00

1) Import Junit
2) Create a Java working set containing junit.framework
3) open a type hierarchy on junit.framework.Protectable.
4) In the type hierarchy, select the working set created in step 2).
5) Observe: Protectable has an anonymous inner subclass
6) open the context menu on the anonymous class
7) observe: the menu contains an entry like this: "Focus on ''". I.e. there is
no label for the anonymous inner class.
PS: JUnit 3.8.1
Fixed for build &gt; I20030209</WithStack>
    <WithOutStack>I2003-12-16-20:00

1) Import Junit
2) Create a Java working set containing junit.framework
3) open a type hierarchy on junit.framework.Protectable.
4) In the type hierarchy, select the working set created in step 2).
5) Observe: Protectable has an anonymous inner subclass
6) open the context menu on the anonymous class
7) observe: the menu contains an entry like this: "Focus on ''". I.e. there is
no label for the anonymous inner class.
PS: JUnit 3.8.1
Fixed for build &gt; I20030209</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48969" />
    <CreationDate amount="2003-12-17 05:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inconsistent handling of  types "external" to working set. [type hierarchy]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) Import Junit</Line>
          <Line>2) Create a Java working set containing junit.framework</Line>
          <Line>3) open a type hierarchy on junit.framework.Protectable.</Line>
          <Line>4) In the type hierarchy, select the working set created in step 2).</Line>
          <Line>5) Focus the type hierarchy on the anonymous inner subclass of Protectable</Line>
          <Line>6) Make sure you're int the "full hierarchy".</Line>
          <Line>7) observe: you see Object as the inner classes' superclass (grayed out).</Line>
          <Line>8) switch to the "supertypes" mode</Line>
          <Line>9) observe: Object does not show up.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1) Import Junit
2) Create a Java working set containing junit.framework
3) open a type hierarchy on junit.framework.Protectable.
4) In the type hierarchy, select the working set created in step 2).
5) Focus the type hierarchy on the anonymous inner subclass of Protectable
6) Make sure you're int the "full hierarchy".
7) observe: you see Object as the inner classes' superclass (grayed out).
8) switch to the "supertypes" mode
9) observe: Object does not show up.

I understand why Object doesn't show up in step 9), but why aren't we filtering
it in step 7)?
IMO both hierarchies (step 7 and 9) should have a grayed out Object. We 
shouldn't filter superclasses. The should always appear in gary. 

Martin, any comments ?
elements are filtered if they are not in the working set, except if they are 
needed as parent nodes to complete the tree.

Would you suggest is that the working set filter is not applied to the super 
types view. Not sure if that would not result in other bug reports...
No, I suggest that you don't need to show object. The "Full hierarchy" shows
classes only, so we can prune Object from the tree. Nodes "between" a
non-filtered class and another must be shown, but Object is not one of them.
My argument was not to show always Object. It was more about if we should 
always show filtered out super types in gray, even if they are not needed to 
render the tree structure.
it's the nature of the 'traditional hierarchy view' to start the tree with
object -&gt; would be confusing to remove it

discussed with dirk and we decided that the current solution makes sense.</WithStack>
    <WithOutStack>1) Import Junit
2) Create a Java working set containing junit.framework
3) open a type hierarchy on junit.framework.Protectable.
4) In the type hierarchy, select the working set created in step 2).
5) Focus the type hierarchy on the anonymous inner subclass of Protectable
6) Make sure you're int the "full hierarchy".
7) observe: you see Object as the inner classes' superclass (grayed out).
8) switch to the "supertypes" mode
9) observe: Object does not show up.

I understand why Object doesn't show up in step 9), but why aren't we filtering
it in step 7)?
IMO both hierarchies (step 7 and 9) should have a grayed out Object. We 
shouldn't filter superclasses. The should always appear in gary. 

Martin, any comments ?
elements are filtered if they are not in the working set, except if they are 
needed as parent nodes to complete the tree.

Would you suggest is that the working set filter is not applied to the super 
types view. Not sure if that would not result in other bug reports...
No, I suggest that you don't need to show object. The "Full hierarchy" shows
classes only, so we can prune Object from the tree. Nodes "between" a
non-filtered class and another must be shown, but Object is not one of them.
My argument was not to show always Object. It was more about if we should 
always show filtered out super types in gray, even if they are not needed to 
render the tree structure.
it's the nature of the 'traditional hierarchy view' to start the tree with
object -&gt; would be confusing to remove it

discussed with dirk and we decided that the current solution makes sense.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48970" />
    <CreationDate amount="2003-12-17 05:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move dialog shows too many possible destinations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- Select a CU in the Package Explorer</Line>
          <Line>- Refactoring &gt; Move...</Line>
          <Line>- observe: can select way too many targets (e.g. import declarations, methods,</Line>
          <Line>...). If I select a method, the refactoring silently changes the target to be</Line>
          <Line>the enclosing package!</Line>
          <Line>- expected: only applicable targets are shown in the tree</Line>
          <Line>Fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031216-2000

- Select a CU in the Package Explorer
- Refactoring &gt; Move...
- observe: can select way too many targets (e.g. import declarations, methods,
...). If I select a method, the refactoring silently changes the target to be
the enclosing package!
- expected: only applicable targets are shown in the tree
Fixed.</WithStack>
    <WithOutStack>I20031216-2000

- Select a CU in the Package Explorer
- Refactoring &gt; Move...
- observe: can select way too many targets (e.g. import declarations, methods,
...). If I select a method, the refactoring silently changes the target to be
the enclosing package!
- expected: only applicable targets are shown in the tree
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48971" />
    <CreationDate amount="2003-12-17 05:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>New code formatter prefs: can't look at predefined profiles [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

I am forced to create a new copy of predefined profiles to see the settings.
Would be nice if we can open the predefined profiles in read-only mode. Is an 
enhacement and time permitted.
fixed &gt; 20040129</WithStack>
    <WithOutStack>I200312162000

I am forced to create a new copy of predefined profiles to see the settings.
Would be nice if we can open the predefined profiles in read-only mode. Is an 
enhacement and time permitted.
fixed &gt; 20040129</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48972" />
    <CreationDate amount="2003-12-17 05:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Linked Position UI Enter == Exit ?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="54" end="175" />
        <code>public class A {
	String field1;
	String field2;
	public String foo(String s, String s2) {
		foo&lt;cursor&gt;
		return s;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- open code assist</Line>
          <Line>- foo(s, s2) gets inserted</Line>
          <Line>- s is in linked mode</Line>
          <Line>- press enter</Line>
          <Line>observe: linked mode moves to s2. I would expect that enter leaves the link</Line>
          <Line>mode since tab also takes you to S2</Line>
          <Line>Enter will exit linked mode if no proposal popup is shown. If a proposal popup</Line>
          <Line>is showing, enter serves to select an entry. You have to press &lt;escape&gt; to</Line>
          <Line>dismiss the popup and then press &lt;enter&gt; to exit linked mode so you continue</Line>
          <Line>typing.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20031216

- enable fill argument names and guessing

public class A {
	String field1;
	String field2;
	public String foo(String s, String s2) {
		foo&lt;cursor&gt;
		return s;
	}
}

- open code assist
- foo(s, s2) gets inserted
- s is in linked mode
- press enter 
observe: linked mode moves to s2. I would expect that enter leaves the link 
mode since tab also takes you to S2
Enter will exit linked mode if no proposal popup is shown. If a proposal popup
is showing, enter serves to select an entry. You have to press &lt;escape&gt; to
dismiss the popup and then press &lt;enter&gt; to exit linked mode so you continue
typing. 

Another option to exit linked mode is to use Shift-Enter (adds a new line and
jumps to it) or smart semicolon.</WithStack>
    <WithOutStack>I20031216

- enable fill argument names and guessing

public class A {
	String field1;
	String field2;
	public String foo(String s, String s2) {
		foo&lt;cursor&gt;
		return s;
	}
}

- open code assist
- foo(s, s2) gets inserted
- s is in linked mode
- press enter 
observe: linked mode moves to s2. I would expect that enter leaves the link 
mode since tab also takes you to S2
Enter will exit linked mode if no proposal popup is shown. If a proposal popup
is showing, enter serves to select an entry. You have to press &lt;escape&gt; to
dismiss the popup and then press &lt;enter&gt; to exit linked mode so you continue
typing. 

Another option to exit linked mode is to use Shift-Enter (adds a new line and
jumps to it) or smart semicolon.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48973" />
    <CreationDate amount="2003-12-17 05:24:00 -0500" />
    <DupId amount="48975" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New comment formatter prefs: comment tab is delayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I200312162000

Edit a profile using new code formatter prefs. Click on the tabs. Observe:
there's a delay when clicking on "Comment".
This is due to a bug in the comment formatter.

see #48975
Marking as dup then.

*** This bug has been marked as a duplicate of 48975 ***</WithStack>
    <WithOutStack>I200312162000

Edit a profile using new code formatter prefs. Click on the tabs. Observe:
there's a delay when clicking on "Comment".
This is due to a bug in the comment formatter.

see #48975
Marking as dup then.

*** This bug has been marked as a duplicate of 48975 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48974" />
    <CreationDate amount="2003-12-17 05:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[content assist] more convenient behaviour when triggered by space key</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>As the content assist is very usefull for suggesting variable names etc., I 
configured it to also automatically become triggered by pressing the space bar.

Unfortunately, in some circumstances this is more inconvenient than it needs to 
be, as completion is triggered by some keys such as "=".

For example, consider writing an assignment. Just write

List list

Now, if you press the spacebar after "list", imagine the content assist 
automatically being triggered. Now, if you just press "=", it also inserts the 
first entry from the proposal list in front of it - which obviously isn't what 
I want.

I tried to workaround this behaviour by defining a "=" template, but this 
didn't work either.
Isn't the real problem that there are any proposals at all at this position:

List list | // | shows caret position

It is confusing to get any proposals here since there is no proposal that would
make sense.
That's true - besides "=", which would be a quite reasonable (though not really 
necessary) proposal, I can't think of anything I would want to have proposed 
there.
moving to core for comments:
- would it be possible to return no proposals if that does not make sense in the
current typing context?
Will reconsider post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>As the content assist is very usefull for suggesting variable names etc., I 
configured it to also automatically become triggered by pressing the space bar.

Unfortunately, in some circumstances this is more inconvenient than it needs to 
be, as completion is triggered by some keys such as "=".

For example, consider writing an assignment. Just write

List list

Now, if you press the spacebar after "list", imagine the content assist 
automatically being triggered. Now, if you just press "=", it also inserts the 
first entry from the proposal list in front of it - which obviously isn't what 
I want.

I tried to workaround this behaviour by defining a "=" template, but this 
didn't work either.
Isn't the real problem that there are any proposals at all at this position:

List list | // | shows caret position

It is confusing to get any proposals here since there is no proposal that would
make sense.
That's true - besides "=", which would be a quite reasonable (though not really 
necessary) proposal, I can't think of anything I would want to have proposed 
there.
moving to core for comments:
- would it be possible to return no proposals if that does not make sense in the
current typing context?
Will reconsider post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48975" />
    <CreationDate amount="2003-12-17 05:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Comment Formatter should compare values using equals()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, the preference values are read and compared by reference, which only
works in special circumstances.
Created attachment 7200
This fixes it

Patch against ui/org/eclipse/jdt/internal/ui/text/comment
*** Bug 48973 has been marked as a duplicate of this bug. ***
Build &gt; 20031217.
Verified using I200312180010. Also verified that duplicate bug 48973 is fixed.</WithStack>
    <WithOutStack>Currently, the preference values are read and compared by reference, which only
works in special circumstances.
Created attachment 7200
This fixes it

Patch against ui/org/eclipse/jdt/internal/ui/text/comment
*** Bug 48973 has been marked as a duplicate of this bug. ***
Build &gt; 20031217.
Verified using I200312180010. Also verified that duplicate bug 48973 is fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48976" />
    <CreationDate amount="2003-12-17 05:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Remove superfluous $NON-NLS comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>$NON-NLS comments without corresponding String literals in the same line should 
optionally produce a compiler warning with an accompanied quick fix to remove 
it.
Moving to JDT/Core since we first need the compiler warning to do so.
Will reconsider post 3.0
Reopen for 3.2 consideration.
*** Bug 83399 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression tests added in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiteralsTest.test001/003

All projects have been tagged as v600_before_48976 prior to releasing these changes.
Reopen. Will be released post 3.2M1.
Fixed and released in HEAD.
Regression test added in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiteralsTest.test001/004
Verified in I20050920-0010 for 3.2M2</WithStack>
    <WithOutStack>$NON-NLS comments without corresponding String literals in the same line should 
optionally produce a compiler warning with an accompanied quick fix to remove 
it.
Moving to JDT/Core since we first need the compiler warning to do so.
Will reconsider post 3.0
Reopen for 3.2 consideration.
*** Bug 83399 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression tests added in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiteralsTest.test001/003

All projects have been tagged as v600_before_48976 prior to releasing these changes.
Reopen. Will be released post 3.2M1.
Fixed and released in HEAD.
Regression test added in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiteralsTest.test001/004
Verified in I20050920-0010 for 3.2M2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48977" />
    <CreationDate amount="2003-12-17 05:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Refactor-&gt;generalize type unavailable on type in editor context menu [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Select a class in the editor (i.e. TestCase).</Line>
          <Line>2) From the editor context menu, select Refactor-&gt;Generalize Type</Line>
          <Line>3) You get an operation unavailable message.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1) Select a class in the editor (i.e. TestCase).
2) From the editor context menu, select Refactor-&gt;Generalize Type
3) You get an operation unavailable message.

If its' unavailable it shouldn't be in the menu.
This only happens if you select type names in class declarations, class 
literals, import statements.

Should check if we can be smarter here.
Did n't make it into 3.0
Postponing &gt; 3.1
Will not make it into 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>1) Select a class in the editor (i.e. TestCase).
2) From the editor context menu, select Refactor-&gt;Generalize Type
3) You get an operation unavailable message.

If its' unavailable it shouldn't be in the menu.
This only happens if you select type names in class declarations, class 
literals, import statements.

Should check if we can be smarter here.
Did n't make it into 3.0
Postponing &gt; 3.1
Will not make it into 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48978" />
    <CreationDate amount="2003-12-17 05:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>New code formatter prefs: java.lang.ArithmeticException: / by zero</Summery>
    <Patches amount="0" />
    <Stacktraces amount="10">
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$CheckboxPreference.checkboxChecked(ModifyDialogTabPage.java:81)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$2.widgetSelected(ModifyDialogTabPage.java:71)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="29">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="30">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="38">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="39">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="41">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="42">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="43">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="44">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="52">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="54">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="55">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="57">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="58">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="59">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341080131">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)</Frame>
          <Frame depth="14">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)</Frame>
          <Frame depth="15">org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)</Frame>
          <Frame depth="16">org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)</Frame>
          <Frame depth="20">java.util.Observable.notifyObservers(Observable.java:142)</Frame>
          <Frame depth="21">java.util.Observable.notifyObservers(Observable.java:98)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="39">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="43">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="51">org.eclipse.jface.window.Window.runEventLoop(Window.java:586)</Frame>
          <Frame depth="52">org.eclipse.jface.window.Window.open(Window.java:566)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="54">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="57">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Sorry no steps. Happened while playing with the preferences.

!SESSION Dez 17, 2003 11:22:47.461 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -os win32 -ws win32 -arch x86 -configuration
file:c:\eclipse\drops\I200312162000/.config -install
file:c:/eclipse/drops/I200312162000/
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:47.461
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:47.511
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$CheckboxPreference.checkboxChecked(ModifyDialogTabPage.java:81)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$2.widgetSelected(ModifyDialogTabPage.java:71)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.58
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.68
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.570
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.580
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.610
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.620
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.640
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.650
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.680
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.690
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.710
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.720
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.760
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.770
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.780
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.790
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.821
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.831
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
The formatter performs a division by the tab size, so we should not allow it to
be 0.
Created attachment 7201
this fixes it by requiring the tab size to be min. 1
M6 candidate.
patch released &gt; 20031217
Verified in I200312180010 that tab field (code formatter preferences, Other) no
longer allows 0.</WithStack>
    <WithOutStack>I200312162000

Sorry no steps. Happened while playing with the preferences.

!SESSION Dez 17, 2003 11:22:47.461 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Command-line arguments: -os win32 -ws win32 -arch x86 -configuration
file:c:\eclipse\drops\I200312162000/.config -install
file:c:/eclipse/drops/I200312162000/
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:47.461
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:47.511
!MESSAGE / by zero
!STACK 0
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.58
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.68
!MESSAGE / by zero
!STACK 0
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.570
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.580
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.610
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.620
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.640
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.650
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.680
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.690
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.710
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.720
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.760
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.770
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.780
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.790
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
	at
org.eclipse.jdt.internal.formatter.Scribe.getNextIndentationLevel(Scribe.java:327)
	at
org.eclipse.jdt.internal.formatter.align.Alignment.checkColumn(Alignment.java:199)
	at org.eclipse.jdt.internal.formatter.Scribe.alignFragment(Scribe.java:178)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:517)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.formatTypeMembers(CodeFormatterVisitor.java:1566)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:925)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.visit(CodeFormatterVisitor.java:2372)
	at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:292)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterVisitor.format(CodeFormatterVisitor.java:726)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatCompilationUnit(DefaultCodeFormatter.java:238)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:205)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:95)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:806)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.formatMaster(ContentFormatter2.java:661)
	at
org.eclipse.jface.text.formatter.ContentFormatter2.format(ContentFormatter2.java:487)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.update(JavaPreview.java:165)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.updatePreview(ModifyDialogTabPage.java:378)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$1.update(ModifyDialogTabPage.java:46)
	at java.util.Observable.notifyObservers(Observable.java:142)
	at java.util.Observable.notifyObservers(Observable.java:98)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.updatePreferences(ModifyDialogTabPage.java:246)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$NumberPreference.numberChanged(ModifyDialogTabPage.java:238)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$5.modifyText(ModifyDialogTabPage.java:225)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:2007)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:3069)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2942)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1293)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:127)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3019)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.modifyButtonPressed(CodingStyleConfigurationBlock.java:202)
	at
org.eclipse.jdt.internal.ui.preferences.formatter.CodingStyleConfigurationBlock$ButtonController.widgetSelected(CodingStyleConfigurationBlock.java:177)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:586)
	at org.eclipse.jface.window.Window.open(Window.java:566)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Dez 17, 2003 11:22:49.821
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Dez 17, 2003 11:22:49.831
!MESSAGE / by zero
!STACK 0

The formatter performs a division by the tab size, so we should not allow it to
be 0.
Created attachment 7201
this fixes it by requiring the tab size to be min. 1
M6 candidate.
patch released &gt; 20031217
Verified in I200312180010 that tab field (code formatter preferences, Other) no
longer allows 0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48979" />
    <CreationDate amount="2003-12-17 05:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Silent failure in "Generalize Type" on field declaration [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341080137">
        <Exception>org.eclipse.ltk.internal.ui.refactoring.AssertionFailedException</Exception>
        <Reason>null argument:</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">org.eclipse.ltk.internal.ui.refactoring.AssertionFailedException.&lt;init&gt;(AssertionFailedException.java:36)</Frame>
          <Frame depth="3">org.eclipse.ltk.internal.ui.refactoring.Assert.isNotNull(Assert.java:79)</Frame>
          <Frame depth="4">org.eclipse.ltk.internal.ui.refactoring.Assert.isNotNull(Assert.java:67)</Frame>
          <Frame depth="5">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:99)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)</Frame>
          <Frame depth="7">org.eclipse.jdt.ui.actions.ChangeTypeAction.run(ChangeTypeAction.java:174)</Frame>
          <Frame depth="8">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)</Frame>
          <Frame depth="9">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="10">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="11">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="21">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="25">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="28">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="29">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Import JUnit 3.8.1 as per smoke test</Line>
          <Line>2) Open TestCase.java</Line>
          <Line>3) Put the cursor in the declaration of "fName".</Line>
          <Line>4) From the refactoring context menu, select "Generalize Type".</Line>
          <Line>5) observe: nothing happens, in the error log you get:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1) Import JUnit 3.8.1 as per smoke test
2) Open TestCase.java
3) Put the cursor in the declaration of "fName".
4) From the refactoring context menu, select "Generalize Type".
5) observe: nothing happens, in the error log you get:

java.lang.Error: No constraint variable matches the selected ASTNode.
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.findConstraintVariableForSelectedNode(ChangeTypeRefactoring.java:798)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection(ChangeTypeRefactoring.java:322)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkActivation(ChangeTypeRefactoring.java:280)
at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:63)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:113)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:80)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.checkActivation(RefactoringStarter.java:66)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:46)
at org.eclipse.jdt.ui.actions.ChangeTypeAction.run(ChangeTypeAction.java:167)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java)
at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
at java.lang.reflect.Method.invoke(Method.java:386)
at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
at org.eclipse.core.launcher.Main.run(Main.java:744)
at org.eclipse.core.launcher.Main.main(Main.java:583)
Not critical for M6. 
Frank, we should address this for M9.
Thomas, Dirk,

I just tried reproducing this bug with I2004-0423, and the Generalize Type
refactoring appears to work fine. I tried selecting "fName" and its type
"String", and in both cases, the wizard correctly comes up, shows the
hierarchy, and says "The type of the selected declaration cannot be changed".

Can you pls. try to reproduce? If you cannot reproduce the problem, I suggest
we close the bug.

  -Frank
With the 2004-04-13 build, I get the same behaviour, but with a new exception:

org.eclipse.ltk.internal.ui.refactoring.AssertionFailedException: null argument:
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at
org.eclipse.ltk.internal.ui.refactoring.AssertionFailedException.&lt;init&gt;(AssertionFailedException.java:36)
	at org.eclipse.ltk.internal.ui.refactoring.Assert.isNotNull(Assert.java:79)
	at org.eclipse.ltk.internal.ui.refactoring.Assert.isNotNull(Assert.java:67)
	at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:99)
	at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)
	at org.eclipse.jdt.ui.actions.ChangeTypeAction.run(ChangeTypeAction.java:174)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
	at org.eclipse.core.launcher.Main.run(Main.java:692)
	at org.eclipse.core.launcher.Main.main(Main.java:676)

Dirk,

I could not reproduce this bug on my machine. During our last phone call,
you said you would try to reproduce it. Could you please do that, and let
me know if the bug happens for you?  If so, please let me know exactly
how to set up my environment.

  -Frank
Can't reproduce the bug using build I20040512_0010</WithStack>
    <WithOutStack>1) Import JUnit 3.8.1 as per smoke test
2) Open TestCase.java
3) Put the cursor in the declaration of "fName".
4) From the refactoring context menu, select "Generalize Type".
5) observe: nothing happens, in the error log you get:

java.lang.Error: No constraint variable matches the selected ASTNode.
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.findConstraintVariableForSelectedNode(ChangeTypeRefactoring.java:798)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection(ChangeTypeRefactoring.java:322)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkActivation(ChangeTypeRefactoring.java:280)
at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:63)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:113)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:80)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java)
at
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.checkActivation(RefactoringStarter.java:66)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:46)
at org.eclipse.jdt.ui.actions.ChangeTypeAction.run(ChangeTypeAction.java:167)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)
at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java)
at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
at java.lang.reflect.Method.invoke(Method.java:386)
at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
at org.eclipse.core.launcher.Main.run(Main.java:744)
at org.eclipse.core.launcher.Main.main(Main.java:583)
Not critical for M6. 
Frank, we should address this for M9.
Thomas, Dirk,

I just tried reproducing this bug with I2004-0423, and the Generalize Type
refactoring appears to work fine. I tried selecting "fName" and its type
"String", and in both cases, the wizard correctly comes up, shows the
hierarchy, and says "The type of the selected declaration cannot be changed".

Can you pls. try to reproduce? If you cannot reproduce the problem, I suggest
we close the bug.

  -Frank
With the 2004-04-13 build, I get the same behaviour, but with a new exception:



Dirk,

I could not reproduce this bug on my machine. During our last phone call,
you said you would try to reproduce it. Could you please do that, and let
me know if the bug happens for you?  If so, please let me know exactly
how to set up my environment.

  -Frank
Can't reproduce the bug using build I20040512_0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48980" />
    <CreationDate amount="2003-12-17 05:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Exception in 'Change then statement to block' QuickFix</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341080138">
        <Exception>org.eclipse.text.edits.MalformedTreeException</Exception>
        <Reason>Range of child edit lies outside
of parent edit</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:675)</Frame>
          <Frame depth="1">org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:275)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:202)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1061)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1351)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:247)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:241)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteBodyNode(ASTRewriteAnalyzer.java:604)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1823)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:91)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.dom.NewASTRewrite.rewriteAST(NewASTRewrite.java:106)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode(ASTRewrite.java:125)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.correction.ASTRewriteCorrectionProposal.createCompilationUnitChange(ASTRewriteCorrectionProposal.java:53)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getChange(CUCorrectionProposal.java:94)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getCompilationUnitChange(CUCorrectionProposal.java:319)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:122)</Frame>
          <Frame depth="17">org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformation(AdditionalInfoController.java:208)</Frame>
          <Frame depth="18">org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:661)</Frame>
          <Frame depth="19">org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:651)</Frame>
          <Frame depth="20">org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run(AdditionalInfoController.java:164)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2288)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1996)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="28">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="30">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="16" end="195" />
        <code>class A {
	void doit() {
		int var;
		if (true)
			var= 17;
		else if (var == 18) //&lt;- caret here
			if (1 &lt; var &amp;&amp; var &lt; 17)
				var= 1;
			else
				var++;
		else
			return;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031216-2000

class A {
	void doit() {
		int var;
		if (true)
			var= 17;
		else if (var == 18) //&lt;- caret here
			if (1 &lt; var &amp;&amp; var &lt; 17)
				var= 1;
			else
				var++;
		else
			return;
	}
}

- choose Edit &gt; Quick Fix
-&gt; log:
Error Dec 17, 2003 11:51:33.854 Range of child edit lies outside of parent edit
org.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside
of parent edit
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:675)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:275)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:202)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1061)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1351)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:247)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:241)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteBodyNode(ASTRewriteAnalyzer.java:604)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1823)
	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:91)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)
	at
org.eclipse.jdt.internal.corext.dom.NewASTRewrite.rewriteAST(NewASTRewrite.java:106)
	at org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode(ASTRewrite.java:125)
	at
org.eclipse.jdt.internal.ui.text.correction.ASTRewriteCorrectionProposal.createCompilationUnitChange(ASTRewriteCorrectionProposal.java:53)
	at
org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getChange(CUCorrectionProposal.java:94)
	at
org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getCompilationUnitChange(CUCorrectionProposal.java:319)
	at
org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:122)
	at
org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformation(AdditionalInfoController.java:208)
	at
org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:661)
	at
org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:651)
	at
org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run(AdditionalInfoController.java:164)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2288)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1996)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
This seems to be a bug in ASTRewriteAnalyzer. I get the same exception trace
when trying to do an "Extract Method" to the 4 lines after the marked line in
comment 0. Increasing severity.
fixed fo M6</WithStack>
    <WithOutStack>I20031216-2000

class A {
	void doit() {
		int var;
		if (true)
			var= 17;
		else if (var == 18) //&lt;- caret here
			if (1 &lt; var &amp;&amp; var &lt; 17)
				var= 1;
			else
				var++;
		else
			return;
	}
}

- choose Edit &gt; Quick Fix
-&gt; log:
Error Dec 17, 2003 11:51:33.854 Range of child edit lies outside of parent edit

This seems to be a bug in ASTRewriteAnalyzer. I get the same exception trace
when trying to do an "Extract Method" to the 4 lines after the marked line in
comment 0. Increasing severity.
fixed fo M6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48981" />
    <CreationDate amount="2003-12-17 05:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>New Code Formatter profile dialog has no mnemonics [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

summary says it all
fixed &gt; I200312182000</WithStack>
    <WithOutStack>I200312162000

summary says it all
fixed &gt; I200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48982" />
    <CreationDate amount="2003-12-17 05:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>New Code Formatter profile dialog does not remember settings [code formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

On the New Code Formatter Profile dialog I desire not to open the edit dialog.
Therefore I unchecked the checkbox. Unfortunately the next time I add a new
profile the box is checked again.
We typically try to remember the dialog state. Time dependent since usually a 
user doesn't create to many profiles.
fixed &gt; I200312182000</WithStack>
    <WithOutStack>I200312162000

On the New Code Formatter Profile dialog I desire not to open the edit dialog.
Therefore I unchecked the checkbox. Unfortunately the next time I add a new
profile the box is checked again.
We typically try to remember the dialog state. Time dependent since usually a 
user doesn't create to many profiles.
fixed &gt; I200312182000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48983" />
    <CreationDate amount="2003-12-17 05:58:00 -0500" />
    <DupId amount="26914" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Replace With... should not attempt replace with non existing version</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. Check out version v20031215 of org.eclipse.jdt.ui.tests and</Line>
          <Line>org.eclipse.jdt.ui.tests.refactoring</Line>
          <Line>2. Select both project</Line>
          <Line>3. Replace With...-&gt;Another Branch or Version...</Line>
          <Line>4. Select version v200312161200</Line>
          <Line>Observe: After the replacing has complete, org.eclipse.jdt.ui.tests.refactoring</Line>
          <Line>is empty. This is because there is no version v200312161200 for this project.</Line>
          <Line>Welcome to CVS. There is no easy to find out if a 'project', and I use the</Line>
          <Line>term loosely because CVS has no concept of one, is part of a particular</Line>
          <Line>version. Files are tagged and as far as a client knows, anyone of the files in</Line>
          <Line>the project could be tagged.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 200312162000

1. Check out version v20031215 of org.eclipse.jdt.ui.tests and 
org.eclipse.jdt.ui.tests.refactoring
2. Select both project
3. Replace With...-&gt;Another Branch or Version...
4. Select version v200312161200
Observe: After the replacing has complete, org.eclipse.jdt.ui.tests.refactoring 
is empty. This is because there is no version v200312161200 for this project.
Welcome to CVS. There is no easy to find out if a 'project', and I use the 
term loosely because CVS has no concept of one, is part of a particular 
version. Files are tagged and as far as a client knows, anyone of the files in 
the project could be tagged. 

However, we may be able to implement the behaviour you expected, and make our 
client a bit nicer, by checking-out into our remote cache first, then if there 
are contents swap them with the real project.
Of course I don't know anything about the CVS support, but don't you already 
have the tags cached locally for each project (if the user used 'Refresh from 
Repository' in the 'Replace with Branch or Version' dialog)?
Post 3.0


*** This bug has been marked as a duplicate of 26914 ***</WithStack>
    <WithOutStack>Build 200312162000

1. Check out version v20031215 of org.eclipse.jdt.ui.tests and 
org.eclipse.jdt.ui.tests.refactoring
2. Select both project
3. Replace With...-&gt;Another Branch or Version...
4. Select version v200312161200
Observe: After the replacing has complete, org.eclipse.jdt.ui.tests.refactoring 
is empty. This is because there is no version v200312161200 for this project.
Welcome to CVS. There is no easy to find out if a 'project', and I use the 
term loosely because CVS has no concept of one, is part of a particular 
version. Files are tagged and as far as a client knows, anyone of the files in 
the project could be tagged. 

However, we may be able to implement the behaviour you expected, and make our 
client a bit nicer, by checking-out into our remote cache first, then if there 
are contents swap them with the real project.
Of course I don't know anything about the CVS support, but don't you already 
have the tags cached locally for each project (if the user used 'Refresh from 
Repository' in the 'Replace with Branch or Version' dialog)?
Post 3.0


*** This bug has been marked as a duplicate of 26914 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48984" />
    <CreationDate amount="2003-12-17 06:02:00 -0500" />
    <DupId amount="21159" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing Outline when editing from CVS Resource History</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Open a .java file</Line>
          <Line>2. Open the CVS Resource History view on this .java file</Line>
          <Line>3. Select a previous revision and open it</Line>
          <Line>Observe: The Outline view is empty.</Line>
          <Line>Opening a java editor with a IStorageEditorInput has always resulted in syntax</Line>
          <Line>highlighting but nothing else. I supose that because the file can't be</Line>
          <Line>compiled the outline is disabled. You could argue that a fuszy parse could</Line>
          <Line>still be available?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 200312162000

1. Open a .java file
2. Open the CVS Resource History view on this .java file
3. Select a previous revision and open it
Observe: The Outline view is empty.
Opening a java editor with a IStorageEditorInput has always resulted in syntax 
highlighting but nothing else. I supose that because the file can't be 
compiled the outline is disabled. You could argue that a fuszy parse could 
still be available?


*** This bug has been marked as a duplicate of 21159 ***</WithStack>
    <WithOutStack>Build 200312162000

1. Open a .java file
2. Open the CVS Resource History view on this .java file
3. Select a previous revision and open it
Observe: The Outline view is empty.
Opening a java editor with a IStorageEditorInput has always resulted in syntax 
highlighting but nothing else. I supose that because the file can't be 
compiled the outline is disabled. You could argue that a fuszy parse could 
still be available?


*** This bug has been marked as a duplicate of 21159 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48985" />
    <CreationDate amount="2003-12-17 06:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Vague error message for "Pull up" on anonymous inner method [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Import Junit 3.8.1 as per smoke test</Line>
          <Line>2) Select the "protect()" method on the inner class in TestResult.run(TestCase)</Line>
          <Line>in the java editor</Line>
          <Line>3) from the context menu, select "Pull Up".</Line>
          <Line>4) You get an error message saying: "Pull up is not allowed on elements declared</Line>
          <Line>in this type".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) Import Junit 3.8.1 as per smoke test
2) Select the "protect()" method on the inner class in TestResult.run(TestCase)
in the java editor
3) from the context menu, select "Pull Up".
4) You get an error message saying: "Pull up is not allowed on elements declared
in this type".

I would expect a reason why it's not allowed. Is it because it's an inner class?
Agree, that we have to improve this. I am aware of another case were this 
generic error message is shown: if the super class is binary. 


Ok, that explains a couple of other cases I've just found. I'll annotate this PR
if I find cases where the superclas is not binary.
The error message in the case that the super class is binary got improved for 
3.0.</WithStack>
    <WithOutStack>1) Import Junit 3.8.1 as per smoke test
2) Select the "protect()" method on the inner class in TestResult.run(TestCase)
in the java editor
3) from the context menu, select "Pull Up".
4) You get an error message saying: "Pull up is not allowed on elements declared
in this type".

I would expect a reason why it's not allowed. Is it because it's an inner class?
Agree, that we have to improve this. I am aware of another case were this 
generic error message is shown: if the super class is binary. 


Ok, that explains a couple of other cases I've just found. I'll annotate this PR
if I find cases where the superclas is not binary.
The error message in the case that the super class is binary got improved for 
3.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48986" />
    <CreationDate amount="2003-12-17 06:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>'Change then statement to block' QuickFix: should appear if caret is after then statement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="16" end="116" />
        <code>void m1() {
		double ans = -1;
		if ("e" != "mc^2")
			ans= 3.1415; //&lt;- caret here
		if (true);
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031612-2000

	void m1() {
		double ans = -1;
		if ("e" != "mc^2")
			ans= 3.1415; //&lt;- caret here
		if (true);
	}

Edit &gt; Quick Fix at the specified position doesn't show the 'Change then
statement to block' QuickFix.

That's unfortunate, since my standard usage pattern for the QuickFix is this: I
want to add a second statement to an 'if' clause, but before adding it, I see
that I need to have a block for it. In that case, my caret is already at the
position I where want to add a statement.

The QuickFix should also be active if the caret is after the then statement.
After applying the QuickFix, the caret should be at the previous position (after
the existing then statement.
fixed &gt; 20031219</WithStack>
    <WithOutStack>I20031612-2000

	void m1() {
		double ans = -1;
		if ("e" != "mc^2")
			ans= 3.1415; //&lt;- caret here
		if (true);
	}

Edit &gt; Quick Fix at the specified position doesn't show the 'Change then
statement to block' QuickFix.

That's unfortunate, since my standard usage pattern for the QuickFix is this: I
want to add a second statement to an 'if' clause, but before adding it, I see
that I need to have a block for it. In that case, my caret is already at the
position I where want to add a statement.

The QuickFix should also be active if the caret is after the then statement.
After applying the QuickFix, the caret should be at the previous position (after
the existing then statement.
fixed &gt; 20031219</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48987" />
    <CreationDate amount="2003-12-17 06:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Trouble inling anonymous inner method [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1) Import JUnit 3.8.1 as per smoke test</Line>
          <Line>2) select "protect" in the anonymous inner class in TestResult.run(TestCase) in</Line>
          <Line>the java editor</Line>
          <Line>3) select "Refactor-&gt;Inline" from the context menu.</Line>
          <Line>4) Press the "Preview" button</Line>
          <Line>5) Select the "Delete Method Declaration" node in the change tree</Line>
          <Line>6) Observe: on the left side of the diff viewer below, you see: "package</Line>
          <Line>junit.framework". On the right side you correctly see the run method with the</Line>
          <Line>protect() method deleted.</Line>
          <Line />
          <Line>7) press ok.</Line>
          <Line>8) It deletes the method declaration only (doesn't compile anymore). Shouldn't</Line>
          <Line>we give a warning? After all, it's not behaviour conserving.</Line>
          <Line>In 3.2, you get an error that 'protect' is from an interface. Only if you continue, you see the compiler error.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1) Import JUnit 3.8.1 as per smoke test
2) select "protect" in the anonymous inner class in TestResult.run(TestCase) in
the java editor
3) select "Refactor-&gt;Inline" from the context menu.
4) Press the "Preview" button
5) Select the "Delete Method Declaration" node in the change tree
6) Observe: on the left side of the diff viewer below, you see: "package
junit.framework". On the right side you correctly see the run method with the
protect() method deleted.

7) press ok.
8) It deletes the method declaration only (doesn't compile anymore). Shouldn't
we give a warning? After all, it's not behaviour conserving.
In 3.2, you get an error that 'protect' is from an interface. Only if you continue, you see the compiler error.</WithStack>
    <WithOutStack>1) Import JUnit 3.8.1 as per smoke test
2) select "protect" in the anonymous inner class in TestResult.run(TestCase) in
the java editor
3) select "Refactor-&gt;Inline" from the context menu.
4) Press the "Preview" button
5) Select the "Delete Method Declaration" node in the change tree
6) Observe: on the left side of the diff viewer below, you see: "package
junit.framework". On the right side you correctly see the run method with the
protect() method deleted.

7) press ok.
8) It deletes the method declaration only (doesn't compile anymore). Shouldn't
we give a warning? After all, it's not behaviour conserving.
In 3.2, you get an error that 'protect' is from an interface. Only if you continue, you see the compiler error.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48988" />
    <CreationDate amount="2003-12-17 06:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Quick fix throws IllegalArgumentException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341080145">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:125)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:1219)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createTryCatchStatement(SurroundWithTryCatchRefactoring.java:327)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createChange(SurroundWithTryCatchRefactoring.java:178)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addUncaughtExceptionProposals(LocalCorrectionsSubProcessor.java:275)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:223)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:154)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:246)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.processProblemAnnotations(JavaCorrectionProcessor.java:234)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompletionProposals(JavaCorrectionProcessor.java:192)</Frame>
          <Frame depth="10">org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1406)</Frame>
          <Frame depth="11">org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:231)</Frame>
          <Frame depth="12">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:227)</Frame>
          <Frame depth="13">org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:190)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="15">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:185)</Frame>
          <Frame depth="16">org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1258)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleCompletions(JavaCorrectionAssistant.java:160)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:169)</Frame>
          <Frame depth="19">org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)</Frame>
          <Frame depth="20">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="21">org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)</Frame>
          <Frame depth="22">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.commands.ActionHandler.execute(ActionHandler.java:40)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:394)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:762)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:802)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:490)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$0(WorkbenchKeyboard.java:425)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:219)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.filterEvent(Display.java:692)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3469)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Control.windowProc(Control.java:2966)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="41">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="46">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="48">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)</Frame>
          <Frame depth="49">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="50">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="51">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="52">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="53">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.basicRun(Main.java:281)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.run(Main.java:744)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="48" end="94" />
        <code>public class A {
	void test() {
		wait();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

Enter A.java with:
--- begin ---
public class A {
	void test() {
		wait();
	}
}
--- end ---
Invoke quick fix using Ctrl+1 after "wait();"

==&gt;
Error Dez 17, 2003 12:21:38.689 Internal Error
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:125)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:1219)
	at
org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createTryCatchStatement(SurroundWithTryCatchRefactoring.java:327)
	at
org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createChange(SurroundWithTryCatchRefactoring.java:178)
	at
org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addUncaughtExceptionProposals(LocalCorrectionsSubProcessor.java:275)
	at
org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:223)
	at
org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:154)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:246)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.processProblemAnnotations(JavaCorrectionProcessor.java:234)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompletionProposals(JavaCorrectionProcessor.java:192)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1406)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:231)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:227)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:185)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1258)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleCompletions(JavaCorrectionAssistant.java:160)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:169)
	at
org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.ui.internal.commands.ActionHandler.execute(ActionHandler.java:40)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:394)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:762)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:802)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:490)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$0(WorkbenchKeyboard.java:425)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:219)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:692)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3469)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2966)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:233)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:281)
	at org.eclipse.core.launcher.Main.run(Main.java:744)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Note: this happened because when testing
  Exception variable name in catch blocks (Dirk, Dani)
    Test this new option on the Code Generation preference page

I entered "" (empty) as name.

This shouldn't be possible in the first place. After doing so quick fix is unusable.

Martin, can you please investigate in a fix. Not really critical since people 
will not change this to empty or 111. Depends on other fixes we have.

M6 candidate.
Created attachment 7207
patch
fixed &gt; 20031217
verified in I200312180010 that input is now validated.</WithStack>
    <WithOutStack>I200312162000

Enter A.java with:
--- begin ---
public class A {
	void test() {
		wait();
	}
}
--- end ---
Invoke quick fix using Ctrl+1 after "wait();"

==&gt;
Error Dez 17, 2003 12:21:38.689 Internal Error

Note: this happened because when testing
  Exception variable name in catch blocks (Dirk, Dani)
    Test this new option on the Code Generation preference page

I entered "" (empty) as name.

This shouldn't be possible in the first place. After doing so quick fix is unusable.

Martin, can you please investigate in a fix. Not really critical since people 
will not change this to empty or 111. Depends on other fixes we have.

M6 candidate.
Created attachment 7207
patch
fixed &gt; 20031217
verified in I200312180010 that input is now validated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48989" />
    <CreationDate amount="2003-12-17 06:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Change Method Signature dialog: key bindings on linux</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- F2 for editing</Line>
          <Line>- caught TRAVERSE_RETURN (Tom, please verify on GTK that the dialog doesn't</Line>
          <Line>close on &lt;Return&gt;)</Line>
          <Line>- for the added parameter, see bug 49230</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000 (M6 test pass)

see also bug 46926

- on gtk, &lt;Return&gt; does start to edit a cell, but the default button of the
dialog is still pressed

-&gt; need to not invoke the default button
-&gt; a different edit key stroke (F2!) wouldn not hurt

- adding a parameter using 'Add' and then pressing &lt;Esc&gt; does not cancel the
addition, leaving an empty row which can hardly be distinguished from a non-row.
The only indication of an empty row is the error message telling to 'Enter the
type for the new parameter'.

-&gt; indicate empty rows by filling some default values (e.g. '[type]').
Tom, what do you mean with "the default button is still pressed".

Markus, Canceling ADD should indeed not add a parameter.
Fixed &gt; 2004-01-05:
- F2 for editing
- caught TRAVERSE_RETURN (Tom, please verify on GTK that the dialog doesn't
close on &lt;Return&gt;)
- for the added parameter, see bug 49230</WithStack>
    <WithOutStack>I200312162000 (M6 test pass)

see also bug 46926

- on gtk, &lt;Return&gt; does start to edit a cell, but the default button of the
dialog is still pressed

-&gt; need to not invoke the default button
-&gt; a different edit key stroke (F2!) wouldn not hurt

- adding a parameter using 'Add' and then pressing &lt;Esc&gt; does not cancel the
addition, leaving an empty row which can hardly be distinguished from a non-row.
The only indication of an empty row is the error message telling to 'Enter the
type for the new parameter'.

-&gt; indicate empty rows by filling some default values (e.g. '[type]').
Tom, what do you mean with "the default button is still pressed".

Markus, Canceling ADD should indeed not add a parameter.
Fixed &gt; 2004-01-05:
- F2 for editing
- caught TRAVERSE_RETURN (Tom, please verify on GTK that the dialog doesn't
close on &lt;Return&gt;)
- for the added parameter, see bug 49230</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48990" />
    <CreationDate amount="2003-12-17 06:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Special case if(false) to not require a dynamic test</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="2031" end="2086" />
        <code>if (this.expr.getClass()==FalseLiteral.class) return;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>FastMatch, the efficient pattern matching for pointcuts on the constant pool, is
currrently only implemented for the within pointcut. I am planning to provide
further oimplementations for other pointcuts by release 1.2.
I've marked this bug as target 1.2 so that we remember to track anything you can 
do here as part of the 1.2 release.
Created attachment 8114
Implements recognition of if(false) during FastMatch

With this patch if(false) is evaluated to FuzzyBoolean.NEVER during FastMatch.
I submitted a small patch for FastMatch of IfPointcut. This adresses the idiom 
"somePointcut() &amp;&amp; if(false)" which is often used to temporarily exclude certain 
pointcuts for debug purposes. Such a pointcut is now automatically evaluated to  
"NEVER" match.
Created attachment 8118
Part two of the patch for handling of if(false)

This prevents a method to be generated at all for if(false).
First off I've renamed this bug to reflect what you're working on.  This is 
not a fast match issue and that's somewhat confused your solution.

The right way to implement this feature is to modify IfPseudoToken to return a 
Pointcut.MatchesNothing object for the special case of if(false).  This will 
produce a pointcut that has all of its methods correctly implemented to handle 
a pcd that can matches no join points.

There are several problems with your solution.  Starting with the fastMatch 
change:

FuzzyBoolean.NEVER is a very special value that isn't correct here.  You 
should just use FuzzyBoolean.NO as is used in the WithinPointcut that I 
pointed you at as the canonical example for fastmatch.  This is important for 
the case where someone uses !if(false) either directly or through a named 
pointcut.

You also can't just modify fastMatch without making similar modifications to 
the core match routine.  Because of things like !if(false) you need to be 
prepared to handle a normal match call -- I believe your solution would create 
a call to a non-existant method in this case.

I can't believe that you wrote this code:
  if (this.expr.getClass()==FalseLiteral.class) return;

Reflection should be used sparingly and only when really needed.  
Use "this.expr instanceof FalseLiteral" if you must test for type.  Even 
better would be to use methods on Expression if those are available.
I've implemented a variation on Jim's suggestion for if(false) and if(true).
Will resolve the bug as fixed once these are available in a build.
Fix available in latest build from www.eclipse.org/aspectj.
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>FastMatch, the efficient pattern matching for pointcuts on the constant pool, is
currrently only implemented for the within pointcut. I am planning to provide
further oimplementations for other pointcuts by release 1.2.
I've marked this bug as target 1.2 so that we remember to track anything you can 
do here as part of the 1.2 release.
Created attachment 8114
Implements recognition of if(false) during FastMatch

With this patch if(false) is evaluated to FuzzyBoolean.NEVER during FastMatch.
I submitted a small patch for FastMatch of IfPointcut. This adresses the idiom 
"somePointcut() &amp;&amp; if(false)" which is often used to temporarily exclude certain 
pointcuts for debug purposes. Such a pointcut is now automatically evaluated to  
"NEVER" match.
Created attachment 8118
Part two of the patch for handling of if(false)

This prevents a method to be generated at all for if(false).
First off I've renamed this bug to reflect what you're working on.  This is 
not a fast match issue and that's somewhat confused your solution.

The right way to implement this feature is to modify IfPseudoToken to return a 
Pointcut.MatchesNothing object for the special case of if(false).  This will 
produce a pointcut that has all of its methods correctly implemented to handle 
a pcd that can matches no join points.

There are several problems with your solution.  Starting with the fastMatch 
change:

FuzzyBoolean.NEVER is a very special value that isn't correct here.  You 
should just use FuzzyBoolean.NO as is used in the WithinPointcut that I 
pointed you at as the canonical example for fastmatch.  This is important for 
the case where someone uses !if(false) either directly or through a named 
pointcut.

You also can't just modify fastMatch without making similar modifications to 
the core match routine.  Because of things like !if(false) you need to be 
prepared to handle a normal match call -- I believe your solution would create 
a call to a non-existant method in this case.

I can't believe that you wrote this code:
  if (this.expr.getClass()==FalseLiteral.class) return;

Reflection should be used sparingly and only when really needed.  
Use "this.expr instanceof FalseLiteral" if you must test for type.  Even 
better would be to use methods on Expression if those are available.
I've implemented a variation on Jim's suggestion for if(false) and if(true).
Will resolve the bug as fixed once these are available in a build.
Fix available in latest build from www.eclipse.org/aspectj.
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48991" />
    <CreationDate amount="2003-12-17 06:30:00 -0500" />
    <DupId amount="32992" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Template dialog: content assist does not eat &lt;Escape&gt;</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Go to preferences, Java-&gt;Editor-&gt;Templates</Line>
          <Line>2. Choose "New"</Line>
          <Line>3. In the Pattern area, invoke content assist (Ctrl+Space)</Line>
          <Line>4. Press &lt;Escape&gt; to cancel the popup</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I200312162000 (M6 test pass)


1. Go to preferences, Java-&gt;Editor-&gt;Templates
2. Choose "New"
3. In the Pattern area, invoke content assist (Ctrl+Space)
4. Press &lt;Escape&gt; to cancel the popup

-&gt; Note: the "New template" dialog closes
-&gt; Expected result: only the proposal popup is canceled, but not the dialog
The same is true for pressing &lt;Return&gt;


*** This bug has been marked as a duplicate of 32992 ***</WithStack>
    <WithOutStack>I200312162000 (M6 test pass)


1. Go to preferences, Java-&gt;Editor-&gt;Templates
2. Choose "New"
3. In the Pattern area, invoke content assist (Ctrl+Space)
4. Press &lt;Escape&gt; to cancel the popup

-&gt; Note: the "New template" dialog closes
-&gt; Expected result: only the proposal popup is canceled, but not the dialog
The same is true for pressing &lt;Return&gt;


*** This bug has been marked as a duplicate of 32992 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48992" />
    <CreationDate amount="2003-12-17 06:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need to type &lt;ctrl&gt;space twice to get list of templates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Import JUnit as per smoke test</Line>
          <Line>2) In TestCase.java, insert a new line at the beginning of the "toString()" method.</Line>
          <Line>3) press &lt;ctrl&gt;-space</Line>
          <Line>4) type "for" (with the code assist open)</Line>
          <Line>5) observe: you don't see the for-loop template in the list.</Line>
          <Line>6) press &lt;ctrl&gt;-space again</Line>
          <Line>7) observe: now you see the for-loop template in the code-assist window.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- the type proposals are given by jdt core</Line>
          <Line>- the template proposals are decided by jdt text</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1) Import JUnit as per smoke test
2) In TestCase.java, insert a new line at the beginning of the "toString()" method.
3) press &lt;ctrl&gt;-space
4) type "for" (with the code assist open)
5) observe: you don't see the for-loop template in the list.
6) press &lt;ctrl&gt;-space again
7) observe: now you see the for-loop template in the code-assist window.

I would expect the templates to show up without pressing &lt;ctrl&gt;-space again.
In I200312180010 it works using Ctrl+Space.
But the behavior can now be seen using Shift+Space.

Tom, please comment.

has nothing to do with incremental completion (Shift+Space). Templates and
(anonymous) class proposals are only shown if there is a matching prefix in the
document. If there is no prefix, only local completions are shown.

Moving to jdt-ui for comments.
ah, moving to jdt-ui was wrong...
- the type proposals are given by jdt core
- the template proposals are decided by jdt text

taking back.
Type are also not available e.g. start content assist the type Date: you will
not see it. Adding the world at the end of the list isn't a good idea either.</WithStack>
    <WithOutStack>1) Import JUnit as per smoke test
2) In TestCase.java, insert a new line at the beginning of the "toString()" method.
3) press &lt;ctrl&gt;-space
4) type "for" (with the code assist open)
5) observe: you don't see the for-loop template in the list.
6) press &lt;ctrl&gt;-space again
7) observe: now you see the for-loop template in the code-assist window.

I would expect the templates to show up without pressing &lt;ctrl&gt;-space again.
In I200312180010 it works using Ctrl+Space.
But the behavior can now be seen using Shift+Space.

Tom, please comment.

has nothing to do with incremental completion (Shift+Space). Templates and
(anonymous) class proposals are only shown if there is a matching prefix in the
document. If there is no prefix, only local completions are shown.

Moving to jdt-ui for comments.
ah, moving to jdt-ui was wrong...
- the type proposals are given by jdt core
- the template proposals are decided by jdt text

taking back.
Type are also not available e.g. start content assist the type Date: you will
not see it. Adding the world at the end of the list isn't a good idea either.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48993" />
    <CreationDate amount="2003-12-17 06:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist] different template behaviour after setting selection in code assist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1) Import JUnit as per smoke test</Line>
          <Line>2) In TestCase.java, insert a new line at the beginning of the "toString()" method.</Line>
          <Line>3) type "for"</Line>
          <Line>4) press &lt;ctrl&gt;-space and insert "iterate over an array" for loop template</Line>
          <Line>5) tab to the "array.length" field</Line>
          <Line>6) &lt;ctrl&gt;space</Line>
          <Line>7) press escape</Line>
          <Line>8) tab around the template until you're on the "array.length" field again</Line>
          <Line>9) &lt;ctrl&gt;space</Line>
          <Line>10) press tab</Line>
          <Line>11) observe: the first entry in the code assist window is selected</Line>
          <Line>12) press escape</Line>
          <Line>13) press tab</Line>
          <Line>14) observe: the word "array" is deleted in the text.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>1) Import JUnit as per smoke test
2) In TestCase.java, insert a new line at the beginning of the "toString()" method.
3) type "for" 
4) press &lt;ctrl&gt;-space and insert "iterate over an array" for loop template
5) tab to the "array.length" field
6) &lt;ctrl&gt;space
7) press escape
8) tab around the template until you're on the "array.length" field again
9) &lt;ctrl&gt;space
10) press tab
11) observe: the first entry in the code assist window is selected
12) press escape
13) press tab
14) observe: the word "array" is deleted in the text.

I wouldn't expect the fact that something was selected in the code assist list
(but not accepted/inserted) to make a difference in the behaviour.</WithStack>
    <WithOutStack>1) Import JUnit as per smoke test
2) In TestCase.java, insert a new line at the beginning of the "toString()" method.
3) type "for" 
4) press &lt;ctrl&gt;-space and insert "iterate over an array" for loop template
5) tab to the "array.length" field
6) &lt;ctrl&gt;space
7) press escape
8) tab around the template until you're on the "array.length" field again
9) &lt;ctrl&gt;space
10) press tab
11) observe: the first entry in the code assist window is selected
12) press escape
13) press tab
14) observe: the word "array" is deleted in the text.

I wouldn't expect the fact that something was selected in the code assist list
(but not accepted/inserted) to make a difference in the behaviour.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48994" />
    <CreationDate amount="2003-12-17 07:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Compiler &gt; Javadoc pref page has no mnemonics [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200312162000

summary says it all
fixed &gt; 20031219</WithStack>
    <WithOutStack>I200312162000

summary says it all
fixed &gt; 20031219</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48995" />
    <CreationDate amount="2003-12-17 07:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Types aren't filtered for 'explicit import' QuickFix [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="import">
        <location start="45" end="65" />
        <code>import java.util.*;</code>
      </source_code>
      <source_code type="import">
        <location start="66" end="99" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="101" end="179" />
        <code>public class Import {
	public static void main(String[] args) {
		List l;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20031216

With this snippet use QF on List:

import java.util.*;
import org.eclipse.swt.widgets.*;

public class Import {
	public static void main(String[] args) {
		List l;
	}
}
A spot we missed ;-)
fixed &gt; 20031219</WithStack>
    <WithOutStack>I20031216

With this snippet use QF on List:

import java.util.*;
import org.eclipse.swt.widgets.*;

public class Import {
	public static void main(String[] args) {
		List l;
	}
}
A spot we missed ;-)
fixed &gt; 20031219</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48996" />
    <CreationDate amount="2003-12-17 07:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Find &gt; Subtypes as a more general case of Find &gt; Implementors [search]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="397" end="430" />
        <code>abstract class y implements x { }</code>
      </source_code>
      <source_code type="class">
        <location start="432" end="453" />
        <code>class z extends x { }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi,

The implementors for an interface x search seams to find all classes, which 
have the concrete "implements x" in their declaration. What I would suggest is 
to extend this behaviour, so that you can find the direct childs of a type 
(the situation as is) as well as all subtypes (results like isAsignable() in 
the reflection API).

A example to demonstrate what I suggest:

interface x { }

abstract class y implements x { }

class z extends x { }

With this structure, the search for all implementors results in a single type 
y. The enhancement would result in y and z.
This can be done using type hierarchies.

No action planned for 3.0.
I'm requesting this feature more for a plugin of mine. I'm searching all non-
abstrace classes, which implement a specific interface. So currently i'm using 
the JavaSearch API. Is there a way to use the type hierarchies 
programmatically? The suggested feature should be also accessible via the 
search API.
I'm requesting this feature more for a plugin of mine. I'm searching all non-
abstrace classes, which implement a specific interface. So currently i'm using 
the JavaSearch API. Is there a way to use the type hierarchies 
programmatically? The suggested feature should be also accessible via the 
search API. I don't know if this changes the state, so I reopend this issue.
The API to use is IType.newTypeHierarchy. This gives you access to all sub 
types of a given type. So call that method on the IType object representing 
the specific interface.</WithStack>
    <WithOutStack>Hi,

The implementors for an interface x search seams to find all classes, which 
have the concrete "implements x" in their declaration. What I would suggest is 
to extend this behaviour, so that you can find the direct childs of a type 
(the situation as is) as well as all subtypes (results like isAsignable() in 
the reflection API).

A example to demonstrate what I suggest:

interface x { }

abstract class y implements x { }

class z extends x { }

With this structure, the search for all implementors results in a single type 
y. The enhancement would result in y and z.
This can be done using type hierarchies.

No action planned for 3.0.
I'm requesting this feature more for a plugin of mine. I'm searching all non-
abstrace classes, which implement a specific interface. So currently i'm using 
the JavaSearch API. Is there a way to use the type hierarchies 
programmatically? The suggested feature should be also accessible via the 
search API.
I'm requesting this feature more for a plugin of mine. I'm searching all non-
abstrace classes, which implement a specific interface. So currently i'm using 
the JavaSearch API. Is there a way to use the type hierarchies 
programmatically? The suggested feature should be also accessible via the 
search API. I don't know if this changes the state, so I reopend this issue.
The API to use is IType.newTypeHierarchy. This gives you access to all sub 
types of a given type. So call that method on the IType object representing 
the specific interface.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48997" />
    <CreationDate amount="2003-12-17 08:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Incremental Code completion need defaul keybinding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Add Ctrl+Shift as default key binding for incremental completion.
I mean Shift+Space, not Ctrl+Shift... :-)
Build &gt; 20031217.
verified using I200312180010</WithStack>
    <WithOutStack>Add Ctrl+Shift as default key binding for incremental completion.
I mean Shift+Space, not Ctrl+Shift... :-)
Build &gt; 20031217.
verified using I200312180010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48998" />
    <CreationDate amount="2003-12-17 08:14:00 -0500" />
    <DupId amount="124182" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[misc] Go To Next Annotation: Message in StatusLine doesn't persist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="368" end="507" />
        <code>class A {
	double ans= -1;
	void m1() {
		do {
		ans= 3.1415;
		} while ("e" != "mc^2");
		ans= 12;
		if (ans == ans);
		;
		//TODO it
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20031216-2000

I have 'Mark occurrences in file' switched on and all annotation types enabled
for jumping around with Go To Next/Previous Annotation. In this example: place
the caret on the first 'ans'. Then click 'Go To Next Annotation' repeatedly.
Observe: for most of the annotations, the StatusLine displays the message only
very shortly, and then blanks again.

class A {
	double ans= -1;
	void m1() {
		do {
		ans= 3.1415;
		} while ("e" != "mc^2");
		ans= 12;
		if (ans == ans);
		;
		//TODO it
	}
}
Minor since it works for problems. "Only" the search annotations' text is cleared.

Not 100% exactly a duplicate of bug 124182 but the fix for bug 124182 will also resolve this one.

*** This bug has been marked as a duplicate of 124182 ***</WithStack>
    <WithOutStack>I20031216-2000

I have 'Mark occurrences in file' switched on and all annotation types enabled
for jumping around with Go To Next/Previous Annotation. In this example: place
the caret on the first 'ans'. Then click 'Go To Next Annotation' repeatedly.
Observe: for most of the annotations, the StatusLine displays the message only
very shortly, and then blanks again.

class A {
	double ans= -1;
	void m1() {
		do {
		ans= 3.1415;
		} while ("e" != "mc^2");
		ans= 12;
		if (ans == ans);
		;
		//TODO it
	}
}
Minor since it works for problems. "Only" the search annotations' text is cleared.

Not 100% exactly a duplicate of bug 124182 but the fix for bug 124182 will also resolve this one.

*** This bug has been marked as a duplicate of 124182 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="48999" />
    <CreationDate amount="2003-12-17 08:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Anonym type can have field as parent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>JavaElementLabels does only the 'is parent method' test
fixed &gt; 20031219</WithStack>
    <WithOutStack>JavaElementLabels does only the 'is parent method' test
fixed &gt; 20031219</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="49000" />
    <CreationDate amount="2003-12-17 08:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Starnge formatting after 'create local' in static initializer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="18" end="301" />
        <code>new InvocationSite(){	
			public boolean isSuperAccess(){ return false; }
			public boolean isTypeAccess() { return false; }
			public void setActualReceiverType(ReferenceBinding 
receiverType) {}
			public void setDepth(int depth) {}
			public void setFieldIndex(int depth){}
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>static {
		bla = 
			new InvocationSite(){	
			public boolean isSuperAccess(){ return false; }
			public boolean isTypeAccess() { return false; }
			public void setActualReceiverType(ReferenceBinding 
receiverType) {}
			public void setDepth(int depth) {}
			public void setFieldIndex(int depth){}
		};
	}
ast rewriter problem
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>static {
		bla = 
			new InvocationSite(){	
			public boolean isSuperAccess(){ return false; }
			public boolean isTypeAccess() { return false; }
			public void setActualReceiverType(ReferenceBinding 
receiverType) {}
			public void setDepth(int depth) {}
			public void setFieldIndex(int depth){}
		};
	}
ast rewriter problem
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
</infozilla-output>

