<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="53901" />
    <CreationDate amount="2004-03-05 12:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code Formatter Dialog cut off in Extra Large fonts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Set your fonts to Extra large</Line>
          <Line>2) Open the Code Formatter preference page</Line>
          <Line>3) Select Show</Line>
          <Line>4) Select the Blank Lines tab</Line>
          <Line>We have to limit the dialog's size and can't let it grow so all is visible.</Line>
          <Line>We added a sash between the controls and the preview and also the dialog window</Line>
          <Line>is resizable.</Line>
          <Line>I have just rechecked and if you maximize the dialog it all fits fine.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="WONTFIX" />
    <WithStack>20040303

If you open the code formatter page with extra large fonts the Blank lines 
page is cut off

STEPS
1) Set your fonts to Extra large 
2) Open the Code Formatter preference page
3) Select Show
4) Select the Blank Lines tab
We have to limit the dialog's size and can't let it grow so all is visible.
We added a sash between the controls and the preview and also the dialog window
is resizable. 
I have just rechecked and if you maximize the dialog it all fits fine.</WithStack>
    <WithOutStack>20040303

If you open the code formatter page with extra large fonts the Blank lines 
page is cut off

STEPS
1) Set your fonts to Extra large 
2) Open the Code Formatter preference page
3) Select Show
4) Select the Blank Lines tab
We have to limit the dialog's size and can't let it grow so all is visible.
We added a sash between the controls and the preview and also the dialog window
is resizable. 
I have just rechecked and if you maximize the dialog it all fits fine.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53902" />
    <CreationDate amount="2004-03-05 12:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE when editing build.properties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I2004-03-04 + JDT-Head
Created attachment 8354
stacktrace
Fixed in the new editor.</WithStack>
    <WithOutStack>I2004-03-04 + JDT-Head
Created attachment 8354
stacktrace
Fixed in the new editor.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53903" />
    <CreationDate amount="2004-03-05 12:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Presentations] Perspective switcher cut off in High Constrast with single line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Go to Accessibility Options in you control panel</Line>
          <Line>2) Select Display -&gt; High Contrast</Line>
          <Line>3) Restart Eclipse</Line>
          <Line>4) Switch to the Resource Perspective</Line>
          <Line>5) Size the window so that there is only one line of tool items</Line>
          <Line>6) Cut off Perspective switcher</Line>
          <Line>Is this still a problem in 3.3?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>20040303

If you resize the workbench window so that there is only one line of tool bar 
the perspective switcher will get cut off in High Constrast mode.

STEPS
1) Go to Accessibility Options in you control panel
2) Select Display -&gt; High Contrast
3) Restart Eclipse
4) Switch to the Resource Perspective
5) Size the window so that there is only one line of tool items
6) Cut off Perspective switcher
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithStack>
    <WithOutStack>20040303

If you resize the workbench window so that there is only one line of tool bar 
the perspective switcher will get cut off in High Constrast mode.

STEPS
1) Go to Accessibility Options in you control panel
2) Select Display -&gt; High Contrast
3) Restart Eclipse
4) Switch to the Resource Perspective
5) Size the window so that there is only one line of tool items
6) Cut off Perspective switcher
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53904" />
    <CreationDate amount="2004-03-05 12:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] Editors with long names don't get close button</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The new editor tab tries to show the entire name of the file. This is nice, but 
the close button at the far right should have priority. :)
Created attachment 8355
closebutton.png - a screenshot of the problem
Bug 54317 is a duplicate of this bug but also references another issue in the 
Colour/Font area.
fixed</WithStack>
    <WithOutStack>The new editor tab tries to show the entire name of the file. This is nice, but 
the close button at the far right should have priority. :)
Created attachment 8355
closebutton.png - a screenshot of the problem
Bug 54317 is a duplicate of this bug but also references another issue in the 
Colour/Font area.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53905" />
    <CreationDate amount="2004-03-05 12:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IAE in JobManager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="1022" end="1097" />
        <code>IResourceRuleFactory fac = ResourcesPlugin.getWorkspace().getRuleFactory();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1121" end="1183" />
        <code>MultiRule.combine(fac.copyRule(src,dest),fac.deleteRule(src));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1184" end="1202" />
        <code>job.setRule(rule);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>20040304

We're changing our code to use IScheduleRule. We're trying to have a schedul
rule as narrow as possible. But it seems that we have to know the locking
behaviour of all infrastructure that we use.

Caused by: java.lang.IllegalArgumentException: Attempted to beginRule: P/JUnit,
does not match outer scope rule: L/JUnit/A.java

The new type wizard locks only the file it will create. We're using jdt.core's
method packageFragment.createCompilationUnit which seems to lock more than just
the file.

Of course jdt.core could fix that but it is a general problem: You can't require
us to know what an infrastucture will lock. Otherwise we would have to spec that
in all API's.
The resources plug-in encapsulates the rule requirements of all of its API in
IResourceRuleFactory.  This isolates you from having to know the exact rules
that are used by various operations. The returned rules can be combined using
MultiRule. For example, say your job is copying file src to dest, and then
deleting src:

IFile src, dest;
IResourceRuleFactory fac = ResourcesPlugin.getWorkspace().getRuleFactory();
ISchedulingRule rule =
MultiRule.combine(fac.copyRule(src,dest),fac.deleteRule(src));
job.setRule(rule);

Other comments:

- in general we have not made a complete overhaul of the entire platform to be
as fine-grained as possible.  Often there are just a few workflows where finer
rules are highly valuable. For complex operations that potentially make many
changes (e.g., refactoring), you are probably better off sticking with the
IWorkspaceRoot rule. I'd say the most important operations to streamline are
those that happen directly within a single editor.

- a scheduling rule of "null" can be used. With this rule, you are allowed to
obtain any nested rule you want. The consequence is that you have no locking.
Sometimes locking is not needed (for example, when you only make a single change
to the workspace in an operation).


Closing.  Let me know if the scheduling rule factory works for you. Platform UI
and JDT Text are already using this and it seems to be working well.
Will file a new bug report against jdt.core to also offer such a class like 
IResourceRuleFactory.</WithStack>
    <WithOutStack>20040304

We're changing our code to use IScheduleRule. We're trying to have a schedul
rule as narrow as possible. But it seems that we have to know the locking
behaviour of all infrastructure that we use.

Caused by: java.lang.IllegalArgumentException: Attempted to beginRule: P/JUnit,
does not match outer scope rule: L/JUnit/A.java

The new type wizard locks only the file it will create. We're using jdt.core's
method packageFragment.createCompilationUnit which seems to lock more than just
the file.

Of course jdt.core could fix that but it is a general problem: You can't require
us to know what an infrastucture will lock. Otherwise we would have to spec that
in all API's.
The resources plug-in encapsulates the rule requirements of all of its API in
IResourceRuleFactory.  This isolates you from having to know the exact rules
that are used by various operations. The returned rules can be combined using
MultiRule. For example, say your job is copying file src to dest, and then
deleting src:

IFile src, dest;
IResourceRuleFactory fac = ResourcesPlugin.getWorkspace().getRuleFactory();
ISchedulingRule rule =
MultiRule.combine(fac.copyRule(src,dest),fac.deleteRule(src));
job.setRule(rule);

Other comments:

- in general we have not made a complete overhaul of the entire platform to be
as fine-grained as possible.  Often there are just a few workflows where finer
rules are highly valuable. For complex operations that potentially make many
changes (e.g., refactoring), you are probably better off sticking with the
IWorkspaceRoot rule. I'd say the most important operations to streamline are
those that happen directly within a single editor.

- a scheduling rule of "null" can be used. With this rule, you are allowed to
obtain any nested rule you want. The consequence is that you have no locking.
Sometimes locking is not needed (for example, when you only make a single change
to the workspace in an operation).


Closing.  Let me know if the scheduling rule factory works for you. Platform UI
and JDT Text are already using this and it seems to be working well.
Will file a new bug report against jdt.core to also offer such a class like 
IResourceRuleFactory.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53906" />
    <CreationDate amount="2004-03-05 12:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>highlight exception-throwing expressions when 'catch' selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>3.0m7
when i select a catch clause, i'd like to be able to see what can cause that
exception to happen.

with unchecked exceptions it is hard (i.e. "catch (OutOfMemoryError)") 
but with checked ones it it easy and it'd be of much help
enable Preferences &gt; Java &gt; Editor &gt; Appearance &gt; 'Mark occurences in file' and
set the cursor on the catch clause to get all invocations highlighted that can
cause that exception.</WithStack>
    <WithOutStack>3.0m7
when i select a catch clause, i'd like to be able to see what can cause that
exception to happen.

with unchecked exceptions it is hard (i.e. "catch (OutOfMemoryError)") 
but with checked ones it it easy and it'd be of much help
enable Preferences &gt; Java &gt; Editor &gt; Appearance &gt; 'Mark occurences in file' and
set the cursor on the catch clause to get all invocations highlighted that can
cause that exception.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53907" />
    <CreationDate amount="2004-03-05 12:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Remove sd.ui and sd.trace from Hyades 1.3</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Since the sequence diagram was ported to the new uml2sd.ui framework, we don't 
need the two plugins anymore.
Please return the defect if this is fixed
Close the defect if already fixed
Fixed.
Fixed.
house keeping</WithStack>
    <WithOutStack>Since the sequence diagram was ported to the new uml2sd.ui framework, we don't 
need the two plugins anymore.
Please return the defect if this is fixed
Close the defect if already fixed
Fixed.
Fixed.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53908" />
    <CreationDate amount="2004-03-05 12:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>highlight exit points when method's return type is selected [occurrences]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0m7
when reading long methods (i.e. somebody else's :-))
it would be useful to immediately see exit points - i'd like to be able to
highlight the method's declard return type and have the exit points highlighted 
(i mean, the normal, 'return' or 'end of method' or 'explicit throw' exit points
- not possible exceptions thrown)
Nice idea.
you can now choose the color of the return keyword.
Got implemented for M9.</WithStack>
    <WithOutStack>3.0m7
when reading long methods (i.e. somebody else's :-))
it would be useful to immediately see exit points - i'd like to be able to
highlight the method's declard return type and have the exit points highlighted 
(i mean, the normal, 'return' or 'end of method' or 'explicit throw' exit points
- not possible exceptions thrown)
Nice idea.
you can now choose the color of the return keyword.
Got implemented for M9.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53909" />
    <CreationDate amount="2004-03-05 12:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>quick assist to put braces in 'while', 'for', ...while, 'if'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>3.0 m7

i have this (someone else's code :))

while (......)
  while (......)
    dosomething(....,
           ,.... dosomethingelse(...,
        ....,...)
           ....,.....);

it would be great to be able to select the while (either one), press ctrl+1
and have the option to put the loop body into braces

same applies to 'for', do..while, 'if'
its already there and seems to work:
Place the cursor in the 'while' keyword, ctrl + 1 offers: 'change body statement
to block'.</WithStack>
    <WithOutStack>3.0 m7

i have this (someone else's code :))

while (......)
  while (......)
    dosomething(....,
           ,.... dosomethingelse(...,
        ....,...)
           ....,.....);

it would be great to be able to select the while (either one), press ctrl+1
and have the option to put the loop body into braces

same applies to 'for', do..while, 'if'
its already there and seems to work:
Place the cursor in the 'while' keyword, ctrl + 1 offers: 'change body statement
to block'.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53910" />
    <CreationDate amount="2004-03-05 13:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>quick assist to unfold * import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.0 m7

i'd like to be able to select a * import in my code, press ctrl+1 and have it
unfolded i.e. turned into explicit imports
why not using organize imports? The feature you're requesting is quite a bit of
work and I don't see it's usefulness that much if we already have organize imports.
Convince me and I'll reopen.</WithStack>
    <WithOutStack>3.0 m7

i'd like to be able to select a * import in my code, press ctrl+1 and have it
unfolded i.e. turned into explicit imports
why not using organize imports? The feature you're requesting is quite a bit of
work and I don't see it's usefulness that much if we already have organize imports.
Convince me and I'll reopen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53911" />
    <CreationDate amount="2004-03-05 13:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>highlight uses ot types when * import selected [occurrences]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.0 m7

when i select a * import, then references to types from that package could get
highlighted
Not for 3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>3.0 m7

when i select a * import, then references to types from that package could get
highlighted
Not for 3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53912" />
    <CreationDate amount="2004-03-05 13:42:00 -0500" />
    <DupId amount="19252" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Fatal error on launch of Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341095466">
        <Exception>java.lang.ExceptionInInitializerError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.plugins.RegistryLoader.processManifestFile(RegistryLoader.java:89)</Frame>
          <Frame depth="1">org.eclipse.core.internal.plugins.RegistryLoader.processPluginPathFile(RegistryLoader.java:136)</Frame>
          <Frame depth="2">org.eclipse.core.internal.plugins.RegistryLoader.processPluginPathEntry(RegistryLoader.java:127)</Frame>
          <Frame depth="3">org.eclipse.core.internal.plugins.RegistryLoader.processManifestFiles(RegistryLoader.java:104)</Frame>
          <Frame depth="4">org.eclipse.core.internal.plugins.RegistryLoader.parseRegistry(RegistryLoader.java:63)</Frame>
          <Frame depth="5">org.eclipse.core.internal.plugins.RegistryLoader.parseRegistry(RegistryLoader.java:71)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.parsePlugins(InternalPlatform.java:890)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.InternalPlatform.loadRegistry(InternalPlatform.java:834)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatform.java:684)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="13">org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:1040)</Frame>
          <Frame depth="14">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:838)</Frame>
          <Frame depth="15">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341095466">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.apache.xerces.parsers.SAXParser.&lt;init&gt;(SAXParser.java:95)</Frame>
          <Frame depth="1">org.eclipse.core.internal.plugins.PluginParser.initializeParser(PluginParser.java:80)</Frame>
          <Frame depth="2">org.eclipse.core.internal.plugins.PluginParser.&lt;clinit&gt;(PluginParser.java:44)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi!

I can't launch Eclipse. This error pops up:


!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 05, 2004 19:32:19.888
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.ExceptionInInitializerError
	at
org.eclipse.core.internal.plugins.RegistryLoader.processManifestFile(RegistryLoader.java:89)
	at
org.eclipse.core.internal.plugins.RegistryLoader.processPluginPathFile(RegistryLoader.java:136)
	at
org.eclipse.core.internal.plugins.RegistryLoader.processPluginPathEntry(RegistryLoader.java:127)
	at
org.eclipse.core.internal.plugins.RegistryLoader.processManifestFiles(RegistryLoader.java:104)
	at
org.eclipse.core.internal.plugins.RegistryLoader.parseRegistry(RegistryLoader.java:63)
	at
org.eclipse.core.internal.plugins.RegistryLoader.parseRegistry(RegistryLoader.java:71)
	at
org.eclipse.core.internal.runtime.InternalPlatform.parsePlugins(InternalPlatform.java:890)
	at
org.eclipse.core.internal.runtime.InternalPlatform.loadRegistry(InternalPlatform.java:834)
	at
org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatform.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at
org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:1040)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:838)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.ClassCastException
	at org.apache.xerces.parsers.SAXParser.&lt;init&gt;(SAXParser.java:95)
	at
org.eclipse.core.internal.plugins.PluginParser.initializeParser(PluginParser.java:80)
	at org.eclipse.core.internal.plugins.PluginParser.&lt;clinit&gt;(PluginParser.java:44)
	... 23 more

I've got the same problem with version 2.1.1 .
I 've tried two jvm's: Suns j2sdk v1.4.1_01 and IBMs Java2-SDK v1.3.1,
but they both produce the same error.
My CLASSPATH variable is set empty. 

I use Debian-woody and have KDE 2.2.2 as a windowmanager.


*** This bug has been marked as a duplicate of 19252 ***</WithStack>
    <WithOutStack>Hi!

I can't launch Eclipse. This error pops up:


!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 05, 2004 19:32:19.888
!MESSAGE Exception launching the Eclipse Platform:
!STACK


	... 23 more

I've got the same problem with version 2.1.1 .
I 've tried two jvm's: Suns j2sdk v1.4.1_01 and IBMs Java2-SDK v1.3.1,
but they both produce the same error.
My CLASSPATH variable is set empty. 

I use Debian-woody and have KDE 2.2.2 as a windowmanager.


*** This bug has been marked as a duplicate of 19252 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53913" />
    <CreationDate amount="2004-03-05 13:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit launcher and bootpath deprecations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In response to bug 50909, the Junit launcher is now using deprecated methods 
that we plan to remove.
Created attachment 8357
patch

Here's the simple patch
Please let us know when the patch is applied so we can remove the deprecated 
methods. Thanks.
applied the patch &gt; 20040308
The patch was half-bad.
Created attachment 9069
bug-53913.patch - complementary patch

The previous patch was supposing your were correctly setting the VM specifique
attributes, but you were not.
This patch solve this problem (and correctly set the extra data for the
bootpath).
applied patch - thanks</WithStack>
    <WithOutStack>In response to bug 50909, the Junit launcher is now using deprecated methods 
that we plan to remove.
Created attachment 8357
patch

Here's the simple patch
Please let us know when the patch is applied so we can remove the deprecated 
methods. Thanks.
applied the patch &gt; 20040308
The patch was half-bad.
Created attachment 9069
bug-53913.patch - complementary patch

The previous patch was supposing your were correctly setting the VM specifique
attributes, but you were not.
This patch solve this problem (and correctly set the extra data for the
bootpath).
applied patch - thanks</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53914" />
    <CreationDate amount="2004-03-05 13:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Content-assist fails w/ missing new [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="0" end="96" />
        <code>public class Test {

    public void main() {
        Long l = Long(&lt;place cursor here&gt;)
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>public class Test {

    public void main() {
        Long l = Long(&lt;place cursor here&gt;)
    }
}

Now press Ctrl-Space ... no corrections available.

It should be clever enough to figure out that "new" is missing.
CodeAssist is not meant to provide corrections, only completions.
The error message during build should indicate the missing keyword likely.
What about a QuickFix then?
I'll pass it on.
Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>public class Test {

    public void main() {
        Long l = Long(&lt;place cursor here&gt;)
    }
}

Now press Ctrl-Space ... no corrections available.

It should be clever enough to figure out that "new" is missing.
CodeAssist is not meant to provide corrections, only completions.
The error message during build should indicate the missing keyword likely.
What about a QuickFix then?
I'll pass it on.
Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53915" />
    <CreationDate amount="2004-03-05 13:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] The editor system menu can pop-up at an inconvenient location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) work in single tab style</Line>
          <Line>2) open a file with a long path</Line>
          <Line>3) press the right mouse button at the very right of the tab</Line>
          <Line>-&gt;the menu pops-up below the icon on the left.</Line>
          <Line>Annoying to move the mouse all the way, the pop-up should appear near where</Line>
          <Line>the mouse button is pressed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) work in single tab style
2) open a file with a long path
3) press the right mouse button at the very right of the tab
-&gt;the menu pops-up below the icon on the left.
Annoying to move the mouse all the way, the pop-up should appear near where 
the mouse button is pressed.

(the view system menu doesn't have this behaviour)
fixed. context menu appears at mouse position at the time of right-clicking.</WithStack>
    <WithOutStack>1) work in single tab style
2) open a file with a long path
3) press the right mouse button at the very right of the tab
-&gt;the menu pops-up below the icon on the left.
Annoying to move the mouse all the way, the pop-up should appear near where 
the mouse button is pressed.

(the view system menu doesn't have this behaviour)
fixed. context menu appears at mouse position at the time of right-clicking.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53916" />
    <CreationDate amount="2004-03-05 13:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Class Wizard to reuse the OpenType when selecting base class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The OpenType is coming along very nicely.

It would be good for the Class Wizard to reuse the work
when selecting a base class.

Cc: Hoda "queen of the (class) wizard".

Reassign to chris.
*** Bug 54034 has been marked as a duplicate of this bug. ***
Implemented.</WithStack>
    <WithOutStack>The OpenType is coming along very nicely.

It would be good for the Class Wizard to reuse the work
when selecting a base class.

Cc: Hoda "queen of the (class) wizard".

Reassign to chris.
*** Bug 54034 has been marked as a duplicate of this bug. ***
Implemented.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53917" />
    <CreationDate amount="2004-03-05 14:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Run dialog's tab view reset to first tab each time a config is selected.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Select a class or unit test.</Line>
          <Line>- Choose classpath or any tab other than the 1st.</Line>
          <Line>- Select another class or unit test.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Version 3.0.m7.

In the Run dialog: 
- Select a class or unit test. 
- Choose classpath or any tab other than the 1st.
- Select another class or unit test.

The tab selected is reset to the first tab "Test" for example, when switching
betwen unit test configurations.

This makes it a great pain to compare and work with classpaths for different
unit tests. The selected tab should stay the same when a new configuration is
selected.
Move to JDT/Debug.
Moving between configs of the same type does not reselect the first tab. 
Moving between configs of different types does reselect the first tab. Unable 
to reproduce the problem when moving between configs of the same type (in 
I20040304). Selecting the first tab when changing config types is intentional -
 however, we could optimize this for tab groups that share the same tabs (i.e. 
keep selected tab if the same tab exists in the next tab group).

Deferred
open
Fixed in LaunchConfigurationTabGroupViewer.
Please verify, Kevin.
verified
verified, this time I mean it :-)</WithStack>
    <WithOutStack>Version 3.0.m7.

In the Run dialog: 
- Select a class or unit test. 
- Choose classpath or any tab other than the 1st.
- Select another class or unit test.

The tab selected is reset to the first tab "Test" for example, when switching
betwen unit test configurations.

This makes it a great pain to compare and work with classpaths for different
unit tests. The selected tab should stay the same when a new configuration is
selected.
Move to JDT/Debug.
Moving between configs of the same type does not reselect the first tab. 
Moving between configs of different types does reselect the first tab. Unable 
to reproduce the problem when moving between configs of the same type (in 
I20040304). Selecting the first tab when changing config types is intentional -
 however, we could optimize this for tab groups that share the same tabs (i.e. 
keep selected tab if the same tab exists in the next tab group).

Deferred
open
Fixed in LaunchConfigurationTabGroupViewer.
Please verify, Kevin.
verified
verified, this time I mean it :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53918" />
    <CreationDate amount="2004-03-05 14:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] "Window-&gt;Keyboard Shortcuts-&gt;Show System Menu" menu item is missing a valid keyboard shortcut</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="4338" end="4354" />
        <code>path.separator=;</code>
      </source_code>
      <source_code type="assignment">
        <location start="26755" end="26768" />
        <code>al\=JCIESIEL;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse Integration build 200403040800

The keyboard shortcut assigned to the menu item "Window-&gt;Keyboard
Shortcuts-&gt;Show System Menu" is a square character, I think it should read "Alt+-".
On my machine, using I200403040800, "Show System Menu" is "Alt+-".  This is how 
it appears in the menu, and on the keys preference page. 
 
Can you give any additional information about what might make your machine 
different?  If in doubt, please attach the output of "Help &gt; About Eclipse 
Platform &gt; Configuration Details".  Thanks. 
To add to the confusion: when I restarted eclipse, the key binding was 
displayed as "Alt+-" as expected. However, after keeping it open and going 
about my regular utilization, it disappeared again...

Please see the attached screen capture (for proof that I am not going 
insane ;) ).

Here is my configuration details:

*** Date: 3/8/04 3:43 PM

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
eclipse.application=org.eclipse.ui.ide.workbench
eclipse.debug.startupTime=1078778349031
eclipse.noLazyRegistryCacheLoading=true
eof=eof
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
ibm.system.encoding=Cp1252
invokedviajava=
java.assistive=ON
java.awt.fonts=
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=Z:\Workbench\I20040304\startup.jar
java.class.version=48.0
java.compiler=jitc
java.endorsed.dirs=Z:\Workbench\I20040304\jre\lib\endorsed
java.ext.dirs=Z:\Workbench\I20040304\jre\lib\ext
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: 
jitc)
java.home=Z:\Workbench\I20040304\jre
java.io.tmpdir=C:\DOCUME~1\jciesiel\LOCALS~1\Temp\
java.library.path=Z:\Workbench\I20040304
\jre\bin;.;C:\WINDOWS\System32;C:\WINDOWS;C:\cygwin1\bin;c:\Perl\bin;D:\PROGRA~1
\RATIONAL\RATION~1\NUTCROOT\bin;D:\PROGRA~1\RATIONAL\RATION~1
\NUTCROOT\bin\x11;D:\PROGRA~1\RATIONAL\RATION~1
\NUTCROOT\mksnt;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32
\Wbem;C:\Program Files\IBM\Trace Facility;C:\Program Files\Personal 
Communications;C:\jdk1.3.1_09\bin;D:\Program Files\Rational\common;D:\Program 
Files\Rational\ClearQuest;D:\Program Files\Rational\Rational Test;C:\Program 
Files\SSH Communications Security\SSH Secure Shell
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.2
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=IBM Corporation
java.vendor.url=http://www.ibm.com/
java.vendor.url.bug=
java.version=1.4.2
java.vm.info=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: jitc)
java.vm.name=Classic VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=IBM Corporation
java.vm.version=1.4.2
line.separator=

org.eclipse.osgi.framework.defaultadaptor.bundledir=z:/Workbench/I20040304/confi
guration/bundles
org.osgi.framework.executionenvironment=
org.osgi.framework.language=en
org.osgi.framework.os.name=Windows XP
org.osgi.framework.os.version=5.1
org.osgi.framework.processor=x86
org.osgi.framework.vendor=Eclipse
org.osgi.framework.version=1.2.0
os.arch=x86
os.name=Windows XP
os.version=5.1
osgi.arch=x86
osgi.bundles=org.eclipse.osgi.services, org.eclipse.osgi.util, 
org.eclipse.core.runtime@2, org.eclipse.update.configurator@3
osgi.bundlestore=z:\Workbench\I20040304\configuration\org.eclipse.osgi\bundles
osgi.configuration.area=file:z:/Workbench/I20040304/configuration/
osgi.framework=file:z:/Workbench/I20040304/plugins/org.eclipse.osgi_3.0.0/
osgi.framework.beginningstartlevel=1
osgi.framework.version=3.0.0
osgi.frameworkClassPath=core.jar, console.jar, osgi.jar, resolver.jar, 
defaultAdaptor.jar, eclipseAdaptor.jar
osgi.install.area=file:z:/Workbench/I20040304/
osgi.installLocation=file:z:/Workbench/I20040304/
osgi.instance.area=file:Z:/Workbench/I20040304/workspace/
osgi.manifest.cache=z:/Workbench/I20040304/configuration/manifests
osgi.nl=en_US
osgi.os=win32
osgi.splashLocation=z:\Workbench\I20040304\plugins\org.eclipse.platform_3.0.0
\splash.bmp
osgi.splashPath=platform:/base/plugins/org.eclipse.platform
osgi.ws=win32
path.separator=;
sun.arch.data.model=32
sun.boot.class.path=Z:\Workbench\I20040304
\jre\lib\core.jar;Z:\Workbench\I20040304
\jre\lib\graphics.jar;Z:\Workbench\I20040304
\jre\lib\security.jar;Z:\Workbench\I20040304
\jre\lib\server.jar;Z:\Workbench\I20040304
\jre\lib\xml.jar;Z:\Workbench\I20040304
\jre\lib\charsets.jar;Z:\Workbench\I20040304
\jre\lib\ibmcertpathprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjaasactivelm.jar;Z:\Workbench\I20040304
\jre\lib\ibmjaaslm.jar;Z:\Workbench\I20040304
\jre\lib\ibmjcefw.jar;Z:\Workbench\I20040304
\jre\lib\ibmjgssprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjssefips.jar;Z:\Workbench\I20040304
\jre\lib\ibmjsseprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjsseprovider2.jar;Z:\Workbench\I20040304\jre\lib\ibmpkcs.jar
sun.boot.library.path=Z:\Workbench\I20040304\jre\bin
sun.io.unicode.encoding=UnicodeLittle
sun.java2d.fontpath=
sun.os.patch.level=Service Pack 1
user.country=US
user.dir=Z:\Workbench\I20040304
user.home=C:\Documents and Settings\jciesiel
user.language=en
user.name=jciesiel
user.timezone=America/New_York
user.variant=

*** Features:
com.ibm.etools.systems.core (6.1.0) "Remote System Explorer"
com.ibm.etools.systems.source (6.1.0) "Remote Systems Source"
com.ibm.lpex (2.0.0) "LPEX Editor"
com.ibm.wswb (3.0.0) "com.ibm.wswb"
com.ibm.wswb.sdk (3.0.0) "com.ibm.wswb.sdk"
com.ibm.wtp.emf.integration (1.0.0) "com.ibm.wtp.emf.integration"
org.eclipse.cdt (2.0.0) "Eclipse C/C++ Development Tools"
org.eclipse.cdt.make (2.0.0) "org.eclipse.cdt.make"
org.eclipse.cdt.managedbuilder (2.0.0) "org.eclipse.cdt.managedbuilder"
org.eclipse.emf (2.0.0) "Eclipse Modeling Framework (EMF)"
org.eclipse.emf.doc (2.0.0) "EMF Programmers Guide"
org.eclipse.emf.ecore.sdo (2.0.0) "EMF Service Data Objects (SDO)"
org.eclipse.emf.ecore.sdo.doc (2.0.0) "EMF Service Data Objects (SDO) 
Programmers Guide"
org.eclipse.emf.ecore.sdo.source (2.0.0) "EMF Service Data Objects (SDO) Source"
org.eclipse.emf.source (2.0.0) "Eclipse Modeling Framework (EMF) Source"
org.eclipse.gef (3.0.0) "Graphical Editing Framework"
org.eclipse.gef.source (3.0.0) "Graphical Editing Framework SDK"
org.eclipse.hyades (3.0.0) "Hyades"
org.eclipse.hyades.core (3.0.0) "Hyades Core"
org.eclipse.hyades.examples (3.0.0) "Hyades Core Examples"
org.eclipse.hyades.memory.analysis (3.0.0) "Hyades Memory Analysis"
org.eclipse.hyades.models (3.0.0) "Hyades Models"
org.eclipse.hyades.probekit (3.0.0) "Probekit Plug-in"
org.eclipse.hyades.sdk (3.0.0) "org.eclipse.hyades.sdk"
org.eclipse.hyades.source (3.0.0) "Hyades SDK"
org.eclipse.jdt (3.0.0) "Eclipse Java Development Tools"
org.eclipse.jdt.source (3.0.0) "Eclipse Java Development Tools SDK"
org.eclipse.jem (1.0.0) "Java EMF Model"
org.eclipse.jem.source (1.0.0) "Java EMF Model Source"
org.eclipse.pde (3.0.0) "Eclipse Plug-in Development Environment"
org.eclipse.platform (3.0.0) "Eclipse Platform"
org.eclipse.platform.source (3.0.0) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.uml2 (1.0.0) "UML2"
org.eclipse.ve (1.0.0) "Visual Editor"
org.eclipse.ve.sdk (1.0.0) "Visual Editor SDK"
org.eclipse.ve.source (1.0.0) "Visual Editor Source"
org.eclipse.xsd (2.0.0) "XML Schema Infoset Model"
org.eclipse.xsd.doc (2.0.0) "XSD Documentation"
org.eclipse.xsd.source (2.0.0) "XML Schema Infoset Model Source"

*** Plug-in Registry:
com.ibm.etools.emf.event (3.0.0.1) "Event Model"
com.ibm.etools.systems.core (6.1.0) "Remote System Explorer"
com.ibm.etools.systems.doc.isv (6.1.0) "Remote Systems ISV Documentation"
com.ibm.etools.systems.doc.user (6.1.0) "Remote System Explorer documentation"
com.ibm.etools.systems.dstore.core (6.1.0) "Remote Systems DataStore Core"
com.ibm.etools.systems.dstore.doc.isv (6.1.0) "DataStore ISV Documentation"
com.ibm.etools.systems.dstore.extra (6.1.0) "Remote Systems DataStore Extra"
com.ibm.etools.systems.dstore.miners (6.1.0) "Remote Systems DataStore Miners"
com.ibm.etools.systems.editor (6.1.0) "Remote System Editor"
com.ibm.etools.systems.logging (6.1.0) "Remote Systems Logging"
com.ibm.etools.systems.source (6.1.0) "Remote Systems Source"
com.ibm.etools.systems.universal (6.1.0) "Universal Remote Systems"
com.ibm.lpex (2.0.0) "LPEX Editor"
com.ibm.lpex.doc.isv (2.0.0) "LPEX Editor Developer Guide"
com.ibm.lpex.doc.user (2.0.0) "LPEX Editor User Guide"
com.ibm.wtp.common (1.0.0) "com.ibm.wtp.common"
com.ibm.wtp.emf (0.5.0) "EMF Utilities"
com.ibm.wtp.emf.workbench (0.5.0) "EMF Workbench"
org.apache.ant (1.6.1) "Apache Ant"
org.apache.jakarta_oro (2.0.7) "Jakarta ORO"
org.apache.lucene (1.3.0) "Apache Lucene"
org.apache.xerces (4.0.13) "Xerces Based XML Parser"
org.eclipse.ant.core (3.0.0) "Ant Build Tool Core"
org.eclipse.ant.ui (3.0.0) "Ant UI"
org.eclipse.cdt (2.0.0) "Eclipse C/C++ Development Tools"
org.eclipse.cdt.core (2.0.0) "C/C++ Development Tools Core"
org.eclipse.cdt.debug.core (2.0.0) "C/C++ Development Tools Debug Model"
org.eclipse.cdt.debug.mi.core (2.0.0) "C/C++ Development Tools GDB/MI CDI 
Debugger Core"
org.eclipse.cdt.debug.mi.ui (2.0.0) "C/C++ Development Tools GDB/MI CDI 
Debugger UI"
org.eclipse.cdt.debug.ui (2.0.0) "C/C++ Development Tools Debugger UI"
org.eclipse.cdt.doc.user (2.0.0) "C/C++ Development User Guide"
org.eclipse.cdt.launch (2.0.0) "C/C++ Development Tools Launching Support"
org.eclipse.cdt.make.core (2.0.0) "C/C++ Standard make Build Core"
org.eclipse.cdt.make.ui (2.0.0) "C/C++ Standard make Build UI"
org.eclipse.cdt.managedbuilder.core (2.0.0) "C/C++ Managed Builder Core"
org.eclipse.cdt.managedbuilder.ui (2.0.0) "C/C++ Managed Builder UI"
org.eclipse.cdt.ui (2.0.0) "C/C++ Development Tools UI"
org.eclipse.compare (3.0.0) "Compare Support"
org.eclipse.core.boot (3.0.0) "Core Boot"
org.eclipse.core.expressions (3.0.0) "Expression Language"
org.eclipse.core.filebuffers (3.0.0) "File Buffers"
org.eclipse.core.resources (3.0.0) "Core Resource Management"
org.eclipse.core.runtime (3.0.0) "Core Runtime"
org.eclipse.core.runtime.compatibility (3.0.0) "Core Runtime Plug-in 
Compatibility"
org.eclipse.core.variables (3.0.0) "Core Variables"
org.eclipse.debug.core (3.0.0) "Debug Core"
org.eclipse.debug.ui (3.0.0) "Debug UI"
org.eclipse.draw2d (3.0.0) "Draw2d"
org.eclipse.draw2d.doc.isv (3.0.0) "Draw2d Documentation"
org.eclipse.emf (2.0.0) "Eclipse Modeling Framework (EMF)"
org.eclipse.emf.codegen (2.0.0) "EMF Template Code Generator"
org.eclipse.emf.codegen.ecore (2.0.0) "EMF Ecore Code Generation"
org.eclipse.emf.codegen.ecore.ui (2.0.0) "EMF Ecore Code Generation UI"
org.eclipse.emf.codegen.ui (2.0.0) "EMF Template Code Generator UI"
org.eclipse.emf.common (2.0.0) "EMF Common"
org.eclipse.emf.common.ui (2.0.0) "EMF Common UI"
org.eclipse.emf.commonj.sdo (2.0.0) "CommomJ SDO"
org.eclipse.emf.doc (2.0.0) "EMF Programmers Guide"
org.eclipse.emf.ecore (2.0.0) "EMF Ecore"
org.eclipse.emf.ecore.change (2.0.0) "EMF Ecore Change Model"
org.eclipse.emf.ecore.change.edit (2.0.0) "EMF Ecore Change Edit Support"
org.eclipse.emf.ecore.edit (2.0.0) "EMF Ecore Edit Support"
org.eclipse.emf.ecore.editor (2.0.0) "Sample Ecore Editor"
org.eclipse.emf.ecore.sdo (2.0.0) "EMF Service Data Objects (SDO)"
org.eclipse.emf.ecore.sdo.doc (2.0.0) "EMF Service Data Objects (SDO) 
Programmers Guide"
org.eclipse.emf.ecore.sdo.edit (2.0.0) "EMF Service Data Objects (SDO) Edit 
Support"
org.eclipse.emf.ecore.sdo.editor (2.0.0) "EMF Service Data Objects (SDO) Editor"
org.eclipse.emf.ecore.sdo.source (2.0.0) "EMF Service Data Objects (SDO) Source"
org.eclipse.emf.ecore.xmi (2.0.0) "EMF XMI"
org.eclipse.emf.edit (2.0.0) "EMF Edit"
org.eclipse.emf.edit.ui (2.0.0) "EMF Edit UI"
org.eclipse.emf.mapping (2.0.0) "EMF Mapping "
org.eclipse.emf.mapping.ui (2.0.0) "EMF Mapping UI"
org.eclipse.emf.mapping.xsd2ecore (2.0.0) "XSD to Ecore Mapping"
org.eclipse.emf.mapping.xsd2ecore.editor (2.0.0) "XSD to Ecore Mapping Editor"
org.eclipse.emf.source (2.0.0) "Eclipse Modeling Framework (EMF) Source"
org.eclipse.gef (3.0.0) "Graphical Editing Framework"
org.eclipse.gef.doc.isv (3.0.0) "Graphical Editing Framework Documentation"
org.eclipse.gef.source (3.0.0) "Graphical Editing Framework SDK"
org.eclipse.help (3.0.0) "Help System Core"
org.eclipse.help.appserver (3.0.0) "Help Application Server"
org.eclipse.help.base (3.0.0) "Help System Base"
org.eclipse.help.ide (3.0.0) "Help System IDE"
org.eclipse.help.ui (3.0.0) "Help System UI"
org.eclipse.help.webapp (3.0.0) "Help System Webapp"
org.eclipse.hyades (3.0.0) "Hyades"
org.eclipse.hyades.analysis.engine (3.0.0) "Hyades Analysis Engine"
org.eclipse.hyades.collection.framework (3.0.0) "Hyades Data Collection 
Framework"
org.eclipse.hyades.collection.framework.java.doc.user (3.0.0) "Agent Controller"
org.eclipse.hyades.core (3.0.0) "Hyades Core"
org.eclipse.hyades.examples (3.0.0) "Hyades Core Examples"
org.eclipse.hyades.execution.core (3.0.0) "Hyades Execution Environment"
org.eclipse.hyades.execution.correlation (3.0.0) "Hyades Runtime Correlation 
Engine"
org.eclipse.hyades.execution.local (3.0.0) "Hyades Execution Local"
org.eclipse.hyades.execution.remote (3.0.0) "Hyades Remote Execution Component 
Core"
org.eclipse.hyades.execution.trace (3.0.0) "org.eclipse.hyades.execution.trace"
org.eclipse.hyades.execution.trace.sample (3.0.0) "Sample for Hyades Execution 
Trace"
org.eclipse.hyades.log.ui (3.0.0) "Hyades Log UI"
org.eclipse.hyades.log.ui.doc.user (3.0.0) "Help for logging tools"
org.eclipse.hyades.log.ui.infopop (3.0.0) "Infopops for logging tools"
org.eclipse.hyades.logc (3.0.0) "Hyades Correlation Engine"
org.eclipse.hyades.logging.adapter (3.0.0) "Hyades Generic Log Adapter Runtime"
org.eclipse.hyades.logging.adapter.config 
(3.0.0) "org.eclipse.hyades.logging.adapter.config"
org.eclipse.hyades.logging.adapter.model (3.0.0) "Logging Adapter Model"
org.eclipse.hyades.logging.adapter.ui (3.0.0) "Generic Adapter UI"
org.eclipse.hyades.logging.adapter.ui.doc.user 
(3.0.0) "org.eclipse.hyades.logging.adapter.ui.doc.user"
org.eclipse.hyades.logging.adapter.ui.infopop 
(3.0.0) "org.eclipse.hyades.logging.adapter.ui.infopop"
org.eclipse.hyades.logging.commons (3.0.0) "Hyades Apache Commons Logger"
org.eclipse.hyades.logging.commons.sample (3.0.0) "Sample for Hyades Apache 
Commons Logging"
org.eclipse.hyades.logging.core (3.0.0) "Hyades Logging Events and Core"
org.eclipse.hyades.logging.java14 (3.0.0) "Hyades JSR-047 Logging"
org.eclipse.hyades.logging.java14.sample (3.0.0) "Sample for Hyades JSR-047 
Logging"
org.eclipse.hyades.logging.parsers (3.0.0) "Hyades Log File Parsers"
org.eclipse.hyades.memory.analysis (3.0.0) "Hyades Memory Analysis"
org.eclipse.hyades.models (3.0.0) "Hyades Models"
org.eclipse.hyades.models.cbe (3.0.0) "Hyades Common Base Event Model"
org.eclipse.hyades.models.common (3.0.0) "Hyades Common Model"
org.eclipse.hyades.models.hierarchy (3.0.0) "Hyades Hierarchy Model"
org.eclipse.hyades.models.probekit (3.0.0) "Probekit Model"
org.eclipse.hyades.models.sdb (3.0.0) "Hyades Symptom Database Model"
org.eclipse.hyades.models.statistical (3.0.0) "Hyades Statistical Model"
org.eclipse.hyades.models.test (3.0.0) "Hyades Test Model"
org.eclipse.hyades.models.trace (3.0.0) "Hyades Trace Model"
org.eclipse.hyades.probekit (3.0.0) "Probekit Plug-in"
org.eclipse.hyades.probekit.doc.user (3.0.0) "Hyades Probekit Help"
org.eclipse.hyades.probekit.ui (3.0.0) "Probekit UI"
org.eclipse.hyades.sd.logc (3.0.0) "Hyades Logging Sequence Diagrams"
org.eclipse.hyades.sd.trace (3.0.0) "Hyades Profiling Sequence Diagrams"
org.eclipse.hyades.sd.ui (3.0.0) "Hyades Sequence Diagram UI"
org.eclipse.hyades.sdb (3.0.0) "Symptom Database tool"
org.eclipse.hyades.sdb.doc.user (3.0.0) "Online help for trace analyzer"
org.eclipse.hyades.sdb.infopop (3.0.0) "Infopops for the symptom database"
org.eclipse.hyades.security (3.0.0) "Hyades Security UI Plugin"
org.eclipse.hyades.source (3.0.0) "Hyades SDK"
org.eclipse.hyades.statistical.ui (3.0.0) "Hyades Statistical Console"
org.eclipse.hyades.trace.sample (3.0.0) "Sample for the Hyades Trace Plugin"
org.eclipse.hyades.trace.ui (3.0.0) "Hyades Trace Core UI"
org.eclipse.hyades.trace.ui.doc.user (3.0.0) "Profiling Tools Documentation"
org.eclipse.hyades.trace.ui.infopop (3.0.0) "Infopops for the profiling tools"
org.eclipse.hyades.trace.views (3.0.0) "Hyades Trace Views Plugin"
org.eclipse.hyades.trace.views.doc.user (3.0.0) "Online help for trace analyzer"
org.eclipse.hyades.trace.views.execution.doc.user (3.0.0) "Help for Profiling 
Tools - Execution Views"
org.eclipse.hyades.trace.views.infopop (3.0.0) "Infopops for profiling tools"
org.eclipse.hyades.trace.views.reference.doc.user (3.0.0) "Help for Profiling 
Tools - Reference Views"
org.eclipse.hyades.ui (3.0.0) "Hyades UI"
org.eclipse.jdt (3.0.0) "Eclipse Java Development Tools"
org.eclipse.jdt.core (3.0.0) "Java Development Tools Core"
org.eclipse.jdt.debug (3.0.0) "JDI Debug Model"
org.eclipse.jdt.debug.ui (3.0.0) "JDI Debug UI"
org.eclipse.jdt.doc.isv (3.0.0) "Eclipse JDT Plug-in Developer Guide"
org.eclipse.jdt.doc.user (3.0.0) "Eclipse Java Development User Guide"
org.eclipse.jdt.junit (3.0.0) "Java Development Tools JUnit support"
org.eclipse.jdt.junit.runtime (3.0.0) "Java Development Tools JUnit runtime 
support"
org.eclipse.jdt.launching (3.0.0) "Java Development Tools Launching Support"
org.eclipse.jdt.source (3.0.0) "Eclipse Java Development Tools SDK"
org.eclipse.jdt.ui (3.0.0) "Java Development Tools UI"
org.eclipse.jem (1.0.0) "Java EMF Model"
org.eclipse.jem.beaninfo (1.0.0) "Java EMF Model BeanInfo (Introspection) 
Support"
org.eclipse.jem.beaninfo.ui (1.0.0) "Java EMF Model BeanInfo (Introspection) UI"
org.eclipse.jem.proxy (1.0.0) "Java EMF Model Proxy Support"
org.eclipse.jem.source (1.0.0) "Java EMF Model Source"
org.eclipse.jem.workbench (1.0.0) "Java EMF Model Workbench Support"
org.eclipse.jface (3.0.0) "JFace"
org.eclipse.jface.text (3.0.0) "JFace Text"
org.eclipse.osgi (3.0.0) "OSGi System Bundle"
org.eclipse.osgi.services (3.0.0) "Eclipse OSGi Services"
org.eclipse.osgi.util (3.0.0) "Eclipse OSGi Utilities"
org.eclipse.pde (3.0.0) "Eclipse Plug-in Development Environment"
org.eclipse.pde.build (3.0.0) "Plug-in Development Environment Build Support"
org.eclipse.pde.core (3.0.0) "Plug-in Development Core"
org.eclipse.pde.doc.user (3.0.0) "Eclipse Plug-in Development User Guide"
org.eclipse.pde.junit.runtime (3.0.0) "PDE JUnit Plug-in Test"
org.eclipse.pde.runtime (3.0.0) "Plug-in Development Environment Runtime"
org.eclipse.pde.source (3.0.0) "Eclipse Plug-in Development Environment Source 
Code"
org.eclipse.pde.ui (3.0.0) "Plug-in Development UI"
org.eclipse.platform (3.0.0) "Eclipse Platform"
org.eclipse.platform.doc.isv (3.0.0) "Eclipse Platform Plug-in Developer Guide"
org.eclipse.platform.doc.user (3.0.0) "Eclipse Workbench User Guide"
org.eclipse.platform.source (3.0.0) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.search (3.0.0) "Search Support"
org.eclipse.swt (3.0.0) "Standard Widget Toolkit"
org.eclipse.team.core (3.0.0) "Team Support Core"
org.eclipse.team.cvs.core (3.0.0) "CVS Team Provider Core"
org.eclipse.team.cvs.ssh (3.0.0) "CVS SSH Core"
org.eclipse.team.cvs.ssh2 (3.0.0) "CVS SSH2"
org.eclipse.team.cvs.ui (3.0.0) "CVS Team Provider UI"
org.eclipse.team.ui (3.0.0) "Team Support UI"
org.eclipse.text (3.0.0) "Text"
org.eclipse.tomcat (4.1.29) "Tomcat Wrapper"
org.eclipse.ui (3.0.0) "Eclipse UI"
org.eclipse.ui.console (3.0.0) "Console"
org.eclipse.ui.editors (3.0.0) "Default Text Editor"
org.eclipse.ui.externaltools (3.0.0) "External Tools"
org.eclipse.ui.forms (3.0.0) "Eclipse Forms"
org.eclipse.ui.ide (3.0.0) "Eclipse IDE UI"
org.eclipse.ui.versioncheck (3.0.0) "Eclipse Version Check"
org.eclipse.ui.views (3.0.0) "Views"
org.eclipse.ui.workbench (3.0.0) "Workbench"
org.eclipse.ui.workbench.texteditor (3.0.0) "Text Editor Framework"
org.eclipse.uml2 (1.0.0) "UML2"
org.eclipse.uml2.edit (1.0.0) "UML2 Edit Support"
org.eclipse.uml2.editor (1.0.0) "UML2 Editor"
org.eclipse.uml2.resources (1.0.0) "UML2 Resources"
org.eclipse.update.configurator (3.0.0) "Install/Update Configurator"
org.eclipse.update.core (3.0.0) "Install/Update Core"
org.eclipse.update.scheduler (3.0.0) "Automatic Updates Scheduler"
org.eclipse.update.ui (3.0.0) "Install/Update UI"
org.eclipse.update.ui.forms (3.0.0) "Install/Update Forms"
org.eclipse.ve (1.0.0) "Visual Editor"
org.eclipse.ve.cde (1.0.0) "Visual Editor Common Data Editor"
org.eclipse.ve.doc (1.0.0) "Visual Editor User Guide"
org.eclipse.ve.java.core (1.0.0) "Visual Editor Java Core"
org.eclipse.ve.jfc (1.0.0) "Visual Editor for Java Foundation Classes"
org.eclipse.ve.propertysheet (1.0.0) "Visual Editor PropertySheet"
org.eclipse.ve.sdk (1.0.0) "Visual Editor SDK"
org.eclipse.ve.source (1.0.0) "Visual Editor Source"
org.eclipse.ve.swt (1.0.0) "Visual Editor for Standard Widget Toolkit"
org.eclipse.xsd (2.0.0) "XML Schema Infoset Model"
org.eclipse.xsd.doc (2.0.0) "XSD Documentation"
org.eclipse.xsd.edit (2.0.0) "XML Schema Edit Framework"
org.eclipse.xsd.editor (2.0.0) "XML Schema Editor"
org.eclipse.xsd.source (2.0.0) "XML Schema Infoset Model Source"
org.eclipse.xsd.test (2.0.0) "XML Schema Infoset Model Test"
org.junit (3.8.1) "JUnit Testing Framework"

*** User Preferences:
#Mon Mar 08 15:43:31 EST 2004
org.eclipse.core.resources=3.0.0
org.eclipse.debug.ui/org.eclipse.debug.ui.lastLaunchConfigSelection=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;launchConfiguration local\="true" 
path\="MgdCpp.launch"/&gt;\r\n
org.eclipse.jdt.ui/tabWidthPropagated=true
org.eclipse.ui.workbench/SCHEME_TAB_BACKGROUND=212,208,200
org.eclipse.ui.ide/SAVE_ALL_BEFORE_BUILD=true
org.eclipse.jdt.ui/fontPropagated=true
org.eclipse.jdt.core=3.0.0
org.eclipse.ui.workbench/VIEW_TAB_POSITION=1024
com.ibm.etools.systems.core=6.1.0
org.eclipse.core.resources/description.autobuilding=false
org.eclipse.ui.workbench=3.0.0
org.eclipse.jdt.core/org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled
org.eclipse.jdt.launching/org.eclipse.jdt.launching.PREF_VM_XML=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;vmSettings 
defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType1,0" 
defaultVMConnector\=""&gt;\r\n&lt;vmType 
id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType"&gt;\r\n&lt;vm id\="0" 
javadocURL\="http\://java.sun.com/j2se/1.4.2/docs/api" name\="I20040304" 
path\="Z\:\\Workbench\\I20040304"/&gt;\r\n&lt;/vmType&gt;\r\n&lt;/vmSettings&gt;\r\n
org.eclipse.ui.ide=3.0.0
org.eclipse.jdt.ui=3.0.0
org.eclipse.cdt.ui=2.0.0
org.eclipse.ui.ide/WELCOME_DIALOG=false
com.ibm.etools.systems.core/com.ibm.etools.systems.preferences.order.connections
=Private.Local
org.eclipse.jdt.ui/org.eclipse.jface.textfont=1|Courier 
New|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier 
New;1|Courier|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier;1|Lucida 
Console|9|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Lucida Console;
org.eclipse.cdt.ui/org.eclipse.cdt.ui.editor.CUChildren=false
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.JavaProject|org.ecl
ipse.jdt.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\r\n&lt;classpath&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/core.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/graphics.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/security.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/server.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/xml.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/charsets.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmcertpathprovider.jar"/&gt;\r\n&lt;classpathe
ntry sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" 
rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaasactivelm.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaaslm.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjcefw.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjgssprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjssefips.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider2.jar"/&gt;\r\n&lt;classpathentr
y sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmpkcs.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/dumpfmt.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/gskikm.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjcefips.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjceprovider.jar"/&gt;\r\n&lt;classpathen
try kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmpkcs11impl.jar"/&gt;\r\n&lt;classpathent
ry kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/indicim.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/jaccess.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/JawBridge.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ldapsec.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/oldcertpath.jar"/&gt;\r\n&lt;/classpath&gt;\r\
n
com.ibm.etools.systems.core/com.ibm.etools.systems.preferences.useridpertype=Loc
al\=JCIESIEL;
org.eclipse.jdt.launching=3.0.0
org.eclipse.ui.workbench/SHOW_MULTIPLE_EDITOR_TABS=true
org.eclipse.debug.ui=3.0.0
org.eclipse.ui.workbench/SCHEME_TAB_SELECTION_BACKGROUND=166,202,240
org.eclipse.ui.ide/INTRO=false
org.eclipse.ui.workbench/CLOSE_EDITORS_ON_EXIT=true
org.eclipse.jdt.core/org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.
launch
org.eclipse.cdt.ui/content_assist_autoactivation_delay=9999
org.eclipse.ui.workbench/COLOR_ICONS=true
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.Java|org.eclipse.jd
t.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\r\n&lt;classpath&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/core.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/graphics.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/security.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/server.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/xml.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/charsets.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmcertpathprovider.jar"/&gt;\r\n&lt;classpathe
ntry sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" 
rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaasactivelm.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaaslm.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjcefw.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjgssprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjssefips.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider2.jar"/&gt;\r\n&lt;classpathentr
y sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmpkcs.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/dumpfmt.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/gskikm.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjcefips.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjceprovider.jar"/&gt;\r\n&lt;classpathen
try kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmpkcs11impl.jar"/&gt;\r\n&lt;classpathent
ry kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/indicim.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/jaccess.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/JawBridge.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ldapsec.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/oldcertpath.jar"/&gt;\r\n&lt;/classpath&gt;\r\
n
org.eclipse.debug.ui/org.eclipse.debug.ui.DebugView+org.eclipse.debug.ui.debugvi
ew.toolbar.toggleAutoManageViews=true

*** Update Manager Log:

Configuration=Mar 4, 2004 4:55:41 PM
Is current configuration=false

*** Error Log:

Created attachment 8409
Screen shot
Okay, you're not crazy, but you do have a lot of plug-ins loaded.  Could you 
wait until the box appears in your menu, and then go to the keys preference 
page.  Select "Window &gt; Show System Menu", and let me know what appears in the 
top-most table on the preference page.  Thanks.... 
Oops, sorry, I meant to include that tid bit of info before: it appears 
as "Alt+-".

I have reproduced this behaviour on a Windows2000 machine as well.

*** Bug 55530 has been marked as a duplicate of this bug. ***
Has anyone seen this recently? 
Nope.  Not for ages...
Closing as WORKSFORME.  I'd assume an SWT bug specific to Microsoft Windows, 
but I'm not sure.... 
Moving to verified to get them out of my list of bugs to verify for M9.</WithStack>
    <WithOutStack>Eclipse Integration build 200403040800

The keyboard shortcut assigned to the menu item "Window-&gt;Keyboard
Shortcuts-&gt;Show System Menu" is a square character, I think it should read "Alt+-".
On my machine, using I200403040800, "Show System Menu" is "Alt+-".  This is how 
it appears in the menu, and on the keys preference page. 
 
Can you give any additional information about what might make your machine 
different?  If in doubt, please attach the output of "Help &gt; About Eclipse 
Platform &gt; Configuration Details".  Thanks. 
To add to the confusion: when I restarted eclipse, the key binding was 
displayed as "Alt+-" as expected. However, after keeping it open and going 
about my regular utilization, it disappeared again...

Please see the attached screen capture (for proof that I am not going 
insane ;) ).

Here is my configuration details:

*** Date: 3/8/04 3:43 PM

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
eclipse.application=org.eclipse.ui.ide.workbench
eclipse.debug.startupTime=1078778349031
eclipse.noLazyRegistryCacheLoading=true
eof=eof
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
ibm.system.encoding=Cp1252
invokedviajava=
java.assistive=ON
java.awt.fonts=
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=Z:\Workbench\I20040304\startup.jar
java.class.version=48.0
java.compiler=jitc
java.endorsed.dirs=Z:\Workbench\I20040304\jre\lib\endorsed
java.ext.dirs=Z:\Workbench\I20040304\jre\lib\ext
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: 
jitc)
java.home=Z:\Workbench\I20040304\jre
java.io.tmpdir=C:\DOCUME~1\jciesiel\LOCALS~1\Temp\
java.library.path=Z:\Workbench\I20040304
\jre\bin;.;C:\WINDOWS\System32;C:\WINDOWS;C:\cygwin1\bin;c:\Perl\bin;D:\PROGRA~1
\RATIONAL\RATION~1\NUTCROOT\bin;D:\PROGRA~1\RATIONAL\RATION~1
\NUTCROOT\bin\x11;D:\PROGRA~1\RATIONAL\RATION~1
\NUTCROOT\mksnt;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32
\Wbem;C:\Program Files\IBM\Trace Facility;C:\Program Files\Personal 
Communications;C:\jdk1.3.1_09\bin;D:\Program Files\Rational\common;D:\Program 
Files\Rational\ClearQuest;D:\Program Files\Rational\Rational Test;C:\Program 
Files\SSH Communications Security\SSH Secure Shell
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.2
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=IBM Corporation
java.vendor.url=http://www.ibm.com/
java.vendor.url.bug=
java.version=1.4.2
java.vm.info=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: jitc)
java.vm.name=Classic VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=IBM Corporation
java.vm.version=1.4.2
line.separator=

org.eclipse.osgi.framework.defaultadaptor.bundledir=z:/Workbench/I20040304/confi
guration/bundles
org.osgi.framework.executionenvironment=
org.osgi.framework.language=en
org.osgi.framework.os.name=Windows XP
org.osgi.framework.os.version=5.1
org.osgi.framework.processor=x86
org.osgi.framework.vendor=Eclipse
org.osgi.framework.version=1.2.0
os.arch=x86
os.name=Windows XP
os.version=5.1
osgi.arch=x86
osgi.bundles=org.eclipse.osgi.services, org.eclipse.osgi.util, 
org.eclipse.core.runtime@2, org.eclipse.update.configurator@3
osgi.bundlestore=z:\Workbench\I20040304\configuration\org.eclipse.osgi\bundles
osgi.configuration.area=file:z:/Workbench/I20040304/configuration/
osgi.framework=file:z:/Workbench/I20040304/plugins/org.eclipse.osgi_3.0.0/
osgi.framework.beginningstartlevel=1
osgi.framework.version=3.0.0
osgi.frameworkClassPath=core.jar, console.jar, osgi.jar, resolver.jar, 
defaultAdaptor.jar, eclipseAdaptor.jar
osgi.install.area=file:z:/Workbench/I20040304/
osgi.installLocation=file:z:/Workbench/I20040304/
osgi.instance.area=file:Z:/Workbench/I20040304/workspace/
osgi.manifest.cache=z:/Workbench/I20040304/configuration/manifests
osgi.nl=en_US
osgi.os=win32
osgi.splashLocation=z:\Workbench\I20040304\plugins\org.eclipse.platform_3.0.0
\splash.bmp
osgi.splashPath=platform:/base/plugins/org.eclipse.platform
osgi.ws=win32
path.separator=;
sun.arch.data.model=32
sun.boot.class.path=Z:\Workbench\I20040304
\jre\lib\core.jar;Z:\Workbench\I20040304
\jre\lib\graphics.jar;Z:\Workbench\I20040304
\jre\lib\security.jar;Z:\Workbench\I20040304
\jre\lib\server.jar;Z:\Workbench\I20040304
\jre\lib\xml.jar;Z:\Workbench\I20040304
\jre\lib\charsets.jar;Z:\Workbench\I20040304
\jre\lib\ibmcertpathprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjaasactivelm.jar;Z:\Workbench\I20040304
\jre\lib\ibmjaaslm.jar;Z:\Workbench\I20040304
\jre\lib\ibmjcefw.jar;Z:\Workbench\I20040304
\jre\lib\ibmjgssprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjssefips.jar;Z:\Workbench\I20040304
\jre\lib\ibmjsseprovider.jar;Z:\Workbench\I20040304
\jre\lib\ibmjsseprovider2.jar;Z:\Workbench\I20040304\jre\lib\ibmpkcs.jar
sun.boot.library.path=Z:\Workbench\I20040304\jre\bin
sun.io.unicode.encoding=UnicodeLittle
sun.java2d.fontpath=
sun.os.patch.level=Service Pack 1
user.country=US
user.dir=Z:\Workbench\I20040304
user.home=C:\Documents and Settings\jciesiel
user.language=en
user.name=jciesiel
user.timezone=America/New_York
user.variant=

*** Features:
com.ibm.etools.systems.core (6.1.0) "Remote System Explorer"
com.ibm.etools.systems.source (6.1.0) "Remote Systems Source"
com.ibm.lpex (2.0.0) "LPEX Editor"
com.ibm.wswb (3.0.0) "com.ibm.wswb"
com.ibm.wswb.sdk (3.0.0) "com.ibm.wswb.sdk"
com.ibm.wtp.emf.integration (1.0.0) "com.ibm.wtp.emf.integration"
org.eclipse.cdt (2.0.0) "Eclipse C/C++ Development Tools"
org.eclipse.cdt.make (2.0.0) "org.eclipse.cdt.make"
org.eclipse.cdt.managedbuilder (2.0.0) "org.eclipse.cdt.managedbuilder"
org.eclipse.emf (2.0.0) "Eclipse Modeling Framework (EMF)"
org.eclipse.emf.doc (2.0.0) "EMF Programmers Guide"
org.eclipse.emf.ecore.sdo (2.0.0) "EMF Service Data Objects (SDO)"
org.eclipse.emf.ecore.sdo.doc (2.0.0) "EMF Service Data Objects (SDO) 
Programmers Guide"
org.eclipse.emf.ecore.sdo.source (2.0.0) "EMF Service Data Objects (SDO) Source"
org.eclipse.emf.source (2.0.0) "Eclipse Modeling Framework (EMF) Source"
org.eclipse.gef (3.0.0) "Graphical Editing Framework"
org.eclipse.gef.source (3.0.0) "Graphical Editing Framework SDK"
org.eclipse.hyades (3.0.0) "Hyades"
org.eclipse.hyades.core (3.0.0) "Hyades Core"
org.eclipse.hyades.examples (3.0.0) "Hyades Core Examples"
org.eclipse.hyades.memory.analysis (3.0.0) "Hyades Memory Analysis"
org.eclipse.hyades.models (3.0.0) "Hyades Models"
org.eclipse.hyades.probekit (3.0.0) "Probekit Plug-in"
org.eclipse.hyades.sdk (3.0.0) "org.eclipse.hyades.sdk"
org.eclipse.hyades.source (3.0.0) "Hyades SDK"
org.eclipse.jdt (3.0.0) "Eclipse Java Development Tools"
org.eclipse.jdt.source (3.0.0) "Eclipse Java Development Tools SDK"
org.eclipse.jem (1.0.0) "Java EMF Model"
org.eclipse.jem.source (1.0.0) "Java EMF Model Source"
org.eclipse.pde (3.0.0) "Eclipse Plug-in Development Environment"
org.eclipse.platform (3.0.0) "Eclipse Platform"
org.eclipse.platform.source (3.0.0) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.uml2 (1.0.0) "UML2"
org.eclipse.ve (1.0.0) "Visual Editor"
org.eclipse.ve.sdk (1.0.0) "Visual Editor SDK"
org.eclipse.ve.source (1.0.0) "Visual Editor Source"
org.eclipse.xsd (2.0.0) "XML Schema Infoset Model"
org.eclipse.xsd.doc (2.0.0) "XSD Documentation"
org.eclipse.xsd.source (2.0.0) "XML Schema Infoset Model Source"

*** Plug-in Registry:
com.ibm.etools.emf.event (3.0.0.1) "Event Model"
com.ibm.etools.systems.core (6.1.0) "Remote System Explorer"
com.ibm.etools.systems.doc.isv (6.1.0) "Remote Systems ISV Documentation"
com.ibm.etools.systems.doc.user (6.1.0) "Remote System Explorer documentation"
com.ibm.etools.systems.dstore.core (6.1.0) "Remote Systems DataStore Core"
com.ibm.etools.systems.dstore.doc.isv (6.1.0) "DataStore ISV Documentation"
com.ibm.etools.systems.dstore.extra (6.1.0) "Remote Systems DataStore Extra"
com.ibm.etools.systems.dstore.miners (6.1.0) "Remote Systems DataStore Miners"
com.ibm.etools.systems.editor (6.1.0) "Remote System Editor"
com.ibm.etools.systems.logging (6.1.0) "Remote Systems Logging"
com.ibm.etools.systems.source (6.1.0) "Remote Systems Source"
com.ibm.etools.systems.universal (6.1.0) "Universal Remote Systems"
com.ibm.lpex (2.0.0) "LPEX Editor"
com.ibm.lpex.doc.isv (2.0.0) "LPEX Editor Developer Guide"
com.ibm.lpex.doc.user (2.0.0) "LPEX Editor User Guide"
com.ibm.wtp.common (1.0.0) "com.ibm.wtp.common"
com.ibm.wtp.emf (0.5.0) "EMF Utilities"
com.ibm.wtp.emf.workbench (0.5.0) "EMF Workbench"
org.apache.ant (1.6.1) "Apache Ant"
org.apache.jakarta_oro (2.0.7) "Jakarta ORO"
org.apache.lucene (1.3.0) "Apache Lucene"
org.apache.xerces (4.0.13) "Xerces Based XML Parser"
org.eclipse.ant.core (3.0.0) "Ant Build Tool Core"
org.eclipse.ant.ui (3.0.0) "Ant UI"
org.eclipse.cdt (2.0.0) "Eclipse C/C++ Development Tools"
org.eclipse.cdt.core (2.0.0) "C/C++ Development Tools Core"
org.eclipse.cdt.debug.core (2.0.0) "C/C++ Development Tools Debug Model"
org.eclipse.cdt.debug.mi.core (2.0.0) "C/C++ Development Tools GDB/MI CDI 
Debugger Core"
org.eclipse.cdt.debug.mi.ui (2.0.0) "C/C++ Development Tools GDB/MI CDI 
Debugger UI"
org.eclipse.cdt.debug.ui (2.0.0) "C/C++ Development Tools Debugger UI"
org.eclipse.cdt.doc.user (2.0.0) "C/C++ Development User Guide"
org.eclipse.cdt.launch (2.0.0) "C/C++ Development Tools Launching Support"
org.eclipse.cdt.make.core (2.0.0) "C/C++ Standard make Build Core"
org.eclipse.cdt.make.ui (2.0.0) "C/C++ Standard make Build UI"
org.eclipse.cdt.managedbuilder.core (2.0.0) "C/C++ Managed Builder Core"
org.eclipse.cdt.managedbuilder.ui (2.0.0) "C/C++ Managed Builder UI"
org.eclipse.cdt.ui (2.0.0) "C/C++ Development Tools UI"
org.eclipse.compare (3.0.0) "Compare Support"
org.eclipse.core.boot (3.0.0) "Core Boot"
org.eclipse.core.expressions (3.0.0) "Expression Language"
org.eclipse.core.filebuffers (3.0.0) "File Buffers"
org.eclipse.core.resources (3.0.0) "Core Resource Management"
org.eclipse.core.runtime (3.0.0) "Core Runtime"
org.eclipse.core.runtime.compatibility (3.0.0) "Core Runtime Plug-in 
Compatibility"
org.eclipse.core.variables (3.0.0) "Core Variables"
org.eclipse.debug.core (3.0.0) "Debug Core"
org.eclipse.debug.ui (3.0.0) "Debug UI"
org.eclipse.draw2d (3.0.0) "Draw2d"
org.eclipse.draw2d.doc.isv (3.0.0) "Draw2d Documentation"
org.eclipse.emf (2.0.0) "Eclipse Modeling Framework (EMF)"
org.eclipse.emf.codegen (2.0.0) "EMF Template Code Generator"
org.eclipse.emf.codegen.ecore (2.0.0) "EMF Ecore Code Generation"
org.eclipse.emf.codegen.ecore.ui (2.0.0) "EMF Ecore Code Generation UI"
org.eclipse.emf.codegen.ui (2.0.0) "EMF Template Code Generator UI"
org.eclipse.emf.common (2.0.0) "EMF Common"
org.eclipse.emf.common.ui (2.0.0) "EMF Common UI"
org.eclipse.emf.commonj.sdo (2.0.0) "CommomJ SDO"
org.eclipse.emf.doc (2.0.0) "EMF Programmers Guide"
org.eclipse.emf.ecore (2.0.0) "EMF Ecore"
org.eclipse.emf.ecore.change (2.0.0) "EMF Ecore Change Model"
org.eclipse.emf.ecore.change.edit (2.0.0) "EMF Ecore Change Edit Support"
org.eclipse.emf.ecore.edit (2.0.0) "EMF Ecore Edit Support"
org.eclipse.emf.ecore.editor (2.0.0) "Sample Ecore Editor"
org.eclipse.emf.ecore.sdo (2.0.0) "EMF Service Data Objects (SDO)"
org.eclipse.emf.ecore.sdo.doc (2.0.0) "EMF Service Data Objects (SDO) 
Programmers Guide"
org.eclipse.emf.ecore.sdo.edit (2.0.0) "EMF Service Data Objects (SDO) Edit 
Support"
org.eclipse.emf.ecore.sdo.editor (2.0.0) "EMF Service Data Objects (SDO) Editor"
org.eclipse.emf.ecore.sdo.source (2.0.0) "EMF Service Data Objects (SDO) Source"
org.eclipse.emf.ecore.xmi (2.0.0) "EMF XMI"
org.eclipse.emf.edit (2.0.0) "EMF Edit"
org.eclipse.emf.edit.ui (2.0.0) "EMF Edit UI"
org.eclipse.emf.mapping (2.0.0) "EMF Mapping "
org.eclipse.emf.mapping.ui (2.0.0) "EMF Mapping UI"
org.eclipse.emf.mapping.xsd2ecore (2.0.0) "XSD to Ecore Mapping"
org.eclipse.emf.mapping.xsd2ecore.editor (2.0.0) "XSD to Ecore Mapping Editor"
org.eclipse.emf.source (2.0.0) "Eclipse Modeling Framework (EMF) Source"
org.eclipse.gef (3.0.0) "Graphical Editing Framework"
org.eclipse.gef.doc.isv (3.0.0) "Graphical Editing Framework Documentation"
org.eclipse.gef.source (3.0.0) "Graphical Editing Framework SDK"
org.eclipse.help (3.0.0) "Help System Core"
org.eclipse.help.appserver (3.0.0) "Help Application Server"
org.eclipse.help.base (3.0.0) "Help System Base"
org.eclipse.help.ide (3.0.0) "Help System IDE"
org.eclipse.help.ui (3.0.0) "Help System UI"
org.eclipse.help.webapp (3.0.0) "Help System Webapp"
org.eclipse.hyades (3.0.0) "Hyades"
org.eclipse.hyades.analysis.engine (3.0.0) "Hyades Analysis Engine"
org.eclipse.hyades.collection.framework (3.0.0) "Hyades Data Collection 
Framework"
org.eclipse.hyades.collection.framework.java.doc.user (3.0.0) "Agent Controller"
org.eclipse.hyades.core (3.0.0) "Hyades Core"
org.eclipse.hyades.examples (3.0.0) "Hyades Core Examples"
org.eclipse.hyades.execution.core (3.0.0) "Hyades Execution Environment"
org.eclipse.hyades.execution.correlation (3.0.0) "Hyades Runtime Correlation 
Engine"
org.eclipse.hyades.execution.local (3.0.0) "Hyades Execution Local"
org.eclipse.hyades.execution.remote (3.0.0) "Hyades Remote Execution Component 
Core"
org.eclipse.hyades.execution.trace (3.0.0) "org.eclipse.hyades.execution.trace"
org.eclipse.hyades.execution.trace.sample (3.0.0) "Sample for Hyades Execution 
Trace"
org.eclipse.hyades.log.ui (3.0.0) "Hyades Log UI"
org.eclipse.hyades.log.ui.doc.user (3.0.0) "Help for logging tools"
org.eclipse.hyades.log.ui.infopop (3.0.0) "Infopops for logging tools"
org.eclipse.hyades.logc (3.0.0) "Hyades Correlation Engine"
org.eclipse.hyades.logging.adapter (3.0.0) "Hyades Generic Log Adapter Runtime"
org.eclipse.hyades.logging.adapter.config 
(3.0.0) "org.eclipse.hyades.logging.adapter.config"
org.eclipse.hyades.logging.adapter.model (3.0.0) "Logging Adapter Model"
org.eclipse.hyades.logging.adapter.ui (3.0.0) "Generic Adapter UI"
org.eclipse.hyades.logging.adapter.ui.doc.user 
(3.0.0) "org.eclipse.hyades.logging.adapter.ui.doc.user"
org.eclipse.hyades.logging.adapter.ui.infopop 
(3.0.0) "org.eclipse.hyades.logging.adapter.ui.infopop"
org.eclipse.hyades.logging.commons (3.0.0) "Hyades Apache Commons Logger"
org.eclipse.hyades.logging.commons.sample (3.0.0) "Sample for Hyades Apache 
Commons Logging"
org.eclipse.hyades.logging.core (3.0.0) "Hyades Logging Events and Core"
org.eclipse.hyades.logging.java14 (3.0.0) "Hyades JSR-047 Logging"
org.eclipse.hyades.logging.java14.sample (3.0.0) "Sample for Hyades JSR-047 
Logging"
org.eclipse.hyades.logging.parsers (3.0.0) "Hyades Log File Parsers"
org.eclipse.hyades.memory.analysis (3.0.0) "Hyades Memory Analysis"
org.eclipse.hyades.models (3.0.0) "Hyades Models"
org.eclipse.hyades.models.cbe (3.0.0) "Hyades Common Base Event Model"
org.eclipse.hyades.models.common (3.0.0) "Hyades Common Model"
org.eclipse.hyades.models.hierarchy (3.0.0) "Hyades Hierarchy Model"
org.eclipse.hyades.models.probekit (3.0.0) "Probekit Model"
org.eclipse.hyades.models.sdb (3.0.0) "Hyades Symptom Database Model"
org.eclipse.hyades.models.statistical (3.0.0) "Hyades Statistical Model"
org.eclipse.hyades.models.test (3.0.0) "Hyades Test Model"
org.eclipse.hyades.models.trace (3.0.0) "Hyades Trace Model"
org.eclipse.hyades.probekit (3.0.0) "Probekit Plug-in"
org.eclipse.hyades.probekit.doc.user (3.0.0) "Hyades Probekit Help"
org.eclipse.hyades.probekit.ui (3.0.0) "Probekit UI"
org.eclipse.hyades.sd.logc (3.0.0) "Hyades Logging Sequence Diagrams"
org.eclipse.hyades.sd.trace (3.0.0) "Hyades Profiling Sequence Diagrams"
org.eclipse.hyades.sd.ui (3.0.0) "Hyades Sequence Diagram UI"
org.eclipse.hyades.sdb (3.0.0) "Symptom Database tool"
org.eclipse.hyades.sdb.doc.user (3.0.0) "Online help for trace analyzer"
org.eclipse.hyades.sdb.infopop (3.0.0) "Infopops for the symptom database"
org.eclipse.hyades.security (3.0.0) "Hyades Security UI Plugin"
org.eclipse.hyades.source (3.0.0) "Hyades SDK"
org.eclipse.hyades.statistical.ui (3.0.0) "Hyades Statistical Console"
org.eclipse.hyades.trace.sample (3.0.0) "Sample for the Hyades Trace Plugin"
org.eclipse.hyades.trace.ui (3.0.0) "Hyades Trace Core UI"
org.eclipse.hyades.trace.ui.doc.user (3.0.0) "Profiling Tools Documentation"
org.eclipse.hyades.trace.ui.infopop (3.0.0) "Infopops for the profiling tools"
org.eclipse.hyades.trace.views (3.0.0) "Hyades Trace Views Plugin"
org.eclipse.hyades.trace.views.doc.user (3.0.0) "Online help for trace analyzer"
org.eclipse.hyades.trace.views.execution.doc.user (3.0.0) "Help for Profiling 
Tools - Execution Views"
org.eclipse.hyades.trace.views.infopop (3.0.0) "Infopops for profiling tools"
org.eclipse.hyades.trace.views.reference.doc.user (3.0.0) "Help for Profiling 
Tools - Reference Views"
org.eclipse.hyades.ui (3.0.0) "Hyades UI"
org.eclipse.jdt (3.0.0) "Eclipse Java Development Tools"
org.eclipse.jdt.core (3.0.0) "Java Development Tools Core"
org.eclipse.jdt.debug (3.0.0) "JDI Debug Model"
org.eclipse.jdt.debug.ui (3.0.0) "JDI Debug UI"
org.eclipse.jdt.doc.isv (3.0.0) "Eclipse JDT Plug-in Developer Guide"
org.eclipse.jdt.doc.user (3.0.0) "Eclipse Java Development User Guide"
org.eclipse.jdt.junit (3.0.0) "Java Development Tools JUnit support"
org.eclipse.jdt.junit.runtime (3.0.0) "Java Development Tools JUnit runtime 
support"
org.eclipse.jdt.launching (3.0.0) "Java Development Tools Launching Support"
org.eclipse.jdt.source (3.0.0) "Eclipse Java Development Tools SDK"
org.eclipse.jdt.ui (3.0.0) "Java Development Tools UI"
org.eclipse.jem (1.0.0) "Java EMF Model"
org.eclipse.jem.beaninfo (1.0.0) "Java EMF Model BeanInfo (Introspection) 
Support"
org.eclipse.jem.beaninfo.ui (1.0.0) "Java EMF Model BeanInfo (Introspection) UI"
org.eclipse.jem.proxy (1.0.0) "Java EMF Model Proxy Support"
org.eclipse.jem.source (1.0.0) "Java EMF Model Source"
org.eclipse.jem.workbench (1.0.0) "Java EMF Model Workbench Support"
org.eclipse.jface (3.0.0) "JFace"
org.eclipse.jface.text (3.0.0) "JFace Text"
org.eclipse.osgi (3.0.0) "OSGi System Bundle"
org.eclipse.osgi.services (3.0.0) "Eclipse OSGi Services"
org.eclipse.osgi.util (3.0.0) "Eclipse OSGi Utilities"
org.eclipse.pde (3.0.0) "Eclipse Plug-in Development Environment"
org.eclipse.pde.build (3.0.0) "Plug-in Development Environment Build Support"
org.eclipse.pde.core (3.0.0) "Plug-in Development Core"
org.eclipse.pde.doc.user (3.0.0) "Eclipse Plug-in Development User Guide"
org.eclipse.pde.junit.runtime (3.0.0) "PDE JUnit Plug-in Test"
org.eclipse.pde.runtime (3.0.0) "Plug-in Development Environment Runtime"
org.eclipse.pde.source (3.0.0) "Eclipse Plug-in Development Environment Source 
Code"
org.eclipse.pde.ui (3.0.0) "Plug-in Development UI"
org.eclipse.platform (3.0.0) "Eclipse Platform"
org.eclipse.platform.doc.isv (3.0.0) "Eclipse Platform Plug-in Developer Guide"
org.eclipse.platform.doc.user (3.0.0) "Eclipse Workbench User Guide"
org.eclipse.platform.source (3.0.0) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.search (3.0.0) "Search Support"
org.eclipse.swt (3.0.0) "Standard Widget Toolkit"
org.eclipse.team.core (3.0.0) "Team Support Core"
org.eclipse.team.cvs.core (3.0.0) "CVS Team Provider Core"
org.eclipse.team.cvs.ssh (3.0.0) "CVS SSH Core"
org.eclipse.team.cvs.ssh2 (3.0.0) "CVS SSH2"
org.eclipse.team.cvs.ui (3.0.0) "CVS Team Provider UI"
org.eclipse.team.ui (3.0.0) "Team Support UI"
org.eclipse.text (3.0.0) "Text"
org.eclipse.tomcat (4.1.29) "Tomcat Wrapper"
org.eclipse.ui (3.0.0) "Eclipse UI"
org.eclipse.ui.console (3.0.0) "Console"
org.eclipse.ui.editors (3.0.0) "Default Text Editor"
org.eclipse.ui.externaltools (3.0.0) "External Tools"
org.eclipse.ui.forms (3.0.0) "Eclipse Forms"
org.eclipse.ui.ide (3.0.0) "Eclipse IDE UI"
org.eclipse.ui.versioncheck (3.0.0) "Eclipse Version Check"
org.eclipse.ui.views (3.0.0) "Views"
org.eclipse.ui.workbench (3.0.0) "Workbench"
org.eclipse.ui.workbench.texteditor (3.0.0) "Text Editor Framework"
org.eclipse.uml2 (1.0.0) "UML2"
org.eclipse.uml2.edit (1.0.0) "UML2 Edit Support"
org.eclipse.uml2.editor (1.0.0) "UML2 Editor"
org.eclipse.uml2.resources (1.0.0) "UML2 Resources"
org.eclipse.update.configurator (3.0.0) "Install/Update Configurator"
org.eclipse.update.core (3.0.0) "Install/Update Core"
org.eclipse.update.scheduler (3.0.0) "Automatic Updates Scheduler"
org.eclipse.update.ui (3.0.0) "Install/Update UI"
org.eclipse.update.ui.forms (3.0.0) "Install/Update Forms"
org.eclipse.ve (1.0.0) "Visual Editor"
org.eclipse.ve.cde (1.0.0) "Visual Editor Common Data Editor"
org.eclipse.ve.doc (1.0.0) "Visual Editor User Guide"
org.eclipse.ve.java.core (1.0.0) "Visual Editor Java Core"
org.eclipse.ve.jfc (1.0.0) "Visual Editor for Java Foundation Classes"
org.eclipse.ve.propertysheet (1.0.0) "Visual Editor PropertySheet"
org.eclipse.ve.sdk (1.0.0) "Visual Editor SDK"
org.eclipse.ve.source (1.0.0) "Visual Editor Source"
org.eclipse.ve.swt (1.0.0) "Visual Editor for Standard Widget Toolkit"
org.eclipse.xsd (2.0.0) "XML Schema Infoset Model"
org.eclipse.xsd.doc (2.0.0) "XSD Documentation"
org.eclipse.xsd.edit (2.0.0) "XML Schema Edit Framework"
org.eclipse.xsd.editor (2.0.0) "XML Schema Editor"
org.eclipse.xsd.source (2.0.0) "XML Schema Infoset Model Source"
org.eclipse.xsd.test (2.0.0) "XML Schema Infoset Model Test"
org.junit (3.8.1) "JUnit Testing Framework"

*** User Preferences:
#Mon Mar 08 15:43:31 EST 2004
org.eclipse.core.resources=3.0.0
org.eclipse.debug.ui/org.eclipse.debug.ui.lastLaunchConfigSelection=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;launchConfiguration local\="true" 
path\="MgdCpp.launch"/&gt;\r\n
org.eclipse.jdt.ui/tabWidthPropagated=true
org.eclipse.ui.workbench/SCHEME_TAB_BACKGROUND=212,208,200
org.eclipse.ui.ide/SAVE_ALL_BEFORE_BUILD=true
org.eclipse.jdt.ui/fontPropagated=true
org.eclipse.jdt.core=3.0.0
org.eclipse.ui.workbench/VIEW_TAB_POSITION=1024
com.ibm.etools.systems.core=6.1.0
org.eclipse.core.resources/description.autobuilding=false
org.eclipse.ui.workbench=3.0.0
org.eclipse.jdt.core/org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled
org.eclipse.jdt.launching/org.eclipse.jdt.launching.PREF_VM_XML=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;vmSettings 
defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType1,0" 
defaultVMConnector\=""&gt;\r\n&lt;vmType 
id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType"&gt;\r\n&lt;vm id\="0" 
javadocURL\="http\://java.sun.com/j2se/1.4.2/docs/api" name\="I20040304" 
path\="Z\:\\Workbench\\I20040304"/&gt;\r\n&lt;/vmType&gt;\r\n&lt;/vmSettings&gt;\r\n
org.eclipse.ui.ide=3.0.0
org.eclipse.jdt.ui=3.0.0
org.eclipse.cdt.ui=2.0.0
org.eclipse.ui.ide/WELCOME_DIALOG=false
com.ibm.etools.systems.core/com.ibm.etools.systems.preferences.order.connections
=Private.Local
org.eclipse.jdt.ui/org.eclipse.jface.textfont=1|Courier 
New|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier 
New;1|Courier|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier;1|Lucida 
Console|9|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Lucida Console;
org.eclipse.cdt.ui/org.eclipse.cdt.ui.editor.CUChildren=false
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.JavaProject|org.ecl
ipse.jdt.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\r\n&lt;classpath&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/core.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/graphics.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/security.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/server.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/xml.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/charsets.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmcertpathprovider.jar"/&gt;\r\n&lt;classpathe
ntry sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" 
rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaasactivelm.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaaslm.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjcefw.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjgssprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjssefips.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider2.jar"/&gt;\r\n&lt;classpathentr
y sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmpkcs.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/dumpfmt.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/gskikm.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjcefips.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjceprovider.jar"/&gt;\r\n&lt;classpathen
try kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmpkcs11impl.jar"/&gt;\r\n&lt;classpathent
ry kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/indicim.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/jaccess.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/JawBridge.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ldapsec.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/oldcertpath.jar"/&gt;\r\n&lt;/classpath&gt;\r\
n
com.ibm.etools.systems.core/com.ibm.etools.systems.preferences.useridpertype=Loc
al\=JCIESIEL;
org.eclipse.jdt.launching=3.0.0
org.eclipse.ui.workbench/SHOW_MULTIPLE_EDITOR_TABS=true
org.eclipse.debug.ui=3.0.0
org.eclipse.ui.workbench/SCHEME_TAB_SELECTION_BACKGROUND=166,202,240
org.eclipse.ui.ide/INTRO=false
org.eclipse.ui.workbench/CLOSE_EDITORS_ON_EXIT=true
org.eclipse.jdt.core/org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.
launch
org.eclipse.cdt.ui/content_assist_autoactivation_delay=9999
org.eclipse.ui.workbench/COLOR_ICONS=true
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.Java|org.eclipse.jd
t.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\r\n&lt;classpath&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/core.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/graphics.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/security.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/server.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/xml.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/charsets.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmcertpathprovider.jar"/&gt;\r\n&lt;classpathe
ntry sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" 
rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaasactivelm.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjaaslm.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjcefw.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjgssprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjssefips.jar"/&gt;\r\n&lt;classpathentry 
sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider.jar"/&gt;\r\n&lt;classpathentry
 sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmjsseprovider2.jar"/&gt;\r\n&lt;classpathentr
y sourcepath\="Z\:/Workbench/I20040304/jre/src.jar" kind\="lib" rootpath\="src" 
path\="Z\:/Workbench/I20040304/jre/lib/ibmpkcs.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/dumpfmt.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/gskikm.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjcefips.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmjceprovider.jar"/&gt;\r\n&lt;classpathen
try kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ibmpkcs11impl.jar"/&gt;\r\n&lt;classpathent
ry kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/indicim.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/jaccess.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/JawBridge.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/ldapsec.jar"/&gt;\r\n&lt;classpathentry 
kind\="lib" 
path\="Z\:/Workbench/I20040304/jre/lib/ext/oldcertpath.jar"/&gt;\r\n&lt;/classpath&gt;\r\
n
org.eclipse.debug.ui/org.eclipse.debug.ui.DebugView+org.eclipse.debug.ui.debugvi
ew.toolbar.toggleAutoManageViews=true

*** Update Manager Log:

Configuration=Mar 4, 2004 4:55:41 PM
Is current configuration=false

*** Error Log:

Created attachment 8409
Screen shot
Okay, you're not crazy, but you do have a lot of plug-ins loaded.  Could you 
wait until the box appears in your menu, and then go to the keys preference 
page.  Select "Window &gt; Show System Menu", and let me know what appears in the 
top-most table on the preference page.  Thanks.... 
Oops, sorry, I meant to include that tid bit of info before: it appears 
as "Alt+-".

I have reproduced this behaviour on a Windows2000 machine as well.

*** Bug 55530 has been marked as a duplicate of this bug. ***
Has anyone seen this recently? 
Nope.  Not for ages...
Closing as WORKSFORME.  I'd assume an SWT bug specific to Microsoft Windows, 
but I'm not sure.... 
Moving to verified to get them out of my list of bugs to verify for M9.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53919" />
    <CreationDate amount="2004-03-05 14:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[misc] Editor sometimes loses changes after switching windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. Create a Java file.</Line>
          <Line>2. Save the file with Ctrl+S.</Line>
          <Line>3. Type a line that contains compiler errors. (I don't actually know if the new</Line>
          <Line>code must contain compiler errors to trigger the problem.)</Line>
          <Line>4. Switch to a different window. (Specific ways of switching that have triggered</Line>
          <Line>the problem include Ctrl-clicking on an identifier, pressing F3 on an</Line>
          <Line>identifier, and even switching to a different Windows application.)</Line>
          <Line>5. Switch back to the Eclipse editor window. (If step 4 switched to a different</Line>
          <Line>Java file, click on the tab for the original file or close the new Java file. If</Line>
          <Line>step 4 switched to a different Window, click on Eclipse.)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I can't reliably reproduce the bug, but I can intermittenly reproduce it with
the following procedure. This procedure is similar to the usage scenarios in
which I originally encountered the problem.

1. Create a Java file.
2. Save the file with Ctrl+S.
3. Type a line that contains compiler errors. (I don't actually know if the new
code must contain compiler errors to trigger the problem.)
4. Switch to a different window. (Specific ways of switching that have triggered
the problem include Ctrl-clicking on an identifier, pressing F3 on an
identifier, and even switching to a different Windows application.)
5. Switch back to the Eclipse editor window. (If step 4 switched to a different
Java file, click on the tab for the original file or close the new Java file. If
step 4 switched to a different Window, click on Eclipse.)

The result is that the edits made since the last save in step 2 are lost.
I encountered this in Eclipse 3.0M7.
works for me using I20040304</WithStack>
    <WithOutStack>I can't reliably reproduce the bug, but I can intermittenly reproduce it with
the following procedure. This procedure is similar to the usage scenarios in
which I originally encountered the problem.

1. Create a Java file.
2. Save the file with Ctrl+S.
3. Type a line that contains compiler errors. (I don't actually know if the new
code must contain compiler errors to trigger the problem.)
4. Switch to a different window. (Specific ways of switching that have triggered
the problem include Ctrl-clicking on an identifier, pressing F3 on an
identifier, and even switching to a different Windows application.)
5. Switch back to the Eclipse editor window. (If step 4 switched to a different
Java file, click on the tab for the original file or close the new Java file. If
step 4 switched to a different Window, click on Eclipse.)

The result is that the edits made since the last save in step 2 are lost.
I encountered this in Eclipse 3.0M7.
works for me using I20040304</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53920" />
    <CreationDate amount="2004-03-05 14:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Slow performance updating target</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="5401" end="5449" />
        <code>viewer = new CheckboxTableViewer(table);</code>
      </source_code>
      <source_code type="assignment">
        <location start="5457" end="5505" />
        <code>viewer = new CheckboxTableViewer(shell);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have a target platform with ~400 plugins.  I'm using dynamic classpaths.  
When I go to the PDE preferences, reload a new target, click not in workspace, 
and hit ok, it takes a very long time before I have control again.

Seems like some refresh is going on as well as threads in the job queue.  This 
is using M7 as the development environment.
Is this reproducible or a bad concidence that you updated your target platform 
while other jobs were going on in the background?

The code that parses and resolves the target platform has not changed in about 
a year.
It seems to be this way most of the time.
how many seconds are we talking about?  It is a costly operation to parse and 
resolve hundreds of plug-ins, but in the past, when I was doing my testing 
against WSADIE's 1200 plug-ins, it used to take 6 seconds.
On a recent trial it took 15 seconds to load the plugins after I changed the 
target location, and another 20 after applied the preference.  This was with 
the Java perspective open.  When I opened the defect, it took what seemed like 
minutes but I can't recreate that at the moment.
*** Bug 62922 has been marked as a duplicate of this bug. ***
cc Pascal to keep him up-to-date on my findings.
cc Jeff, JohnW
Also cc Nick as the bottleneck in 3.0 appears to be the refreshing of a table 
viewer.

Will attach several profiles.
Created attachment 12100
Profile of updating the target platform using 2.1.3

In all my test cases, the target platform was WSADIE-5.1.1 which contains 1708
plug-ins and fragments.
In all the profiles that I am attaching, we will be showing the amount of time
it takes to load such a target.  That is, the amount of time elapsed between
the time you hit 'Reload' until the time the table viewer refreshes with the
new content.

In this first profile, I am using Eclipse 2.1.3 as my host platform.  This is
the old world with the old runtime, old PDE, old platform, etc.

The method that invokes everything is the one highlighted in blue:
ExternalPluginsBlock.handleReload().

In this profile, it takes 8.964 seconds for the whole reload operation to
complete:
5.489 seconds to load the target platform
3.105 seconds to refresh the table viewer.
Created attachment 12101
Profile using 3.0RC2

Now let's look at the exact same operation using 3.0RC2 as the host platform.

You will see that ExternalPluginsBlock.handleReload now takes 17.547 seconds.
But note that the amount of time taken to parse the target platform (with all
its 1708 plugins) is 3.064 seconds.
The rest of the time is spent refreshing the table viewer (&gt;10 seconds).

This is really obvious too when you see it in action.  You will see that the
progress monitor dialog goes to completion (i.e. the parsing finished), but the
UI hangs for a long time waiting for the table viewer to refresh.

I will attach another profile showing where the time is spent when refreshing
the table viewer.
Created attachment 12102
Inside table viewer in 3.0

This is an expansion of what is happening during the refreshing of the table
viewer in 3.0
Created attachment 12104
Inside table viewer in 2.1.3

On the other hand, here is what the expansion inside the refreshing of a table
viewer looked like in 2.1.3.
Note that, although the screenshots are of profiles made using Yourkit, I also 
performed the same runs using the heavy OptimizeIt.  Although the numbers were 
higher, because OptimizeIt is more accurate and intensive, the same slowness 
with the table viewer was still a key.

I also put debug statements in the code to see how long it takes to refresh 
the tree and the numbers were still alarmingly high.  Much higher than the 
time it takes to resolve, parse and populate the target platform in 3.0.
The reason why resolving and parsing the target platform is super fast using 
3.0RC2 is because of improvements made when addressing bug 66525.
Created attachment 12107
3.0 Profiles

OptimizeIt profiles for loading WSADIE 5.1.1 on the target platform preference
page using Eclipse 3.0RC2
Created attachment 12108
Profile using 2.1.3

Profiles using 2.1.3 and OptimizeIt.

The problem is in SWT.

Compare 2.1.3 with 3.0, and you will see how 
in 3.0: Display.windowProc() gets invoked 1,465,962 times,
while in 2.1: Display.windowProc() gets invoked 3,140 times.
Created attachment 12109
Inside Control.windowProc

Did another run to capture the expansion of Control.windowProc().
Moving to SWT and raising severity to Critical.
In the meantime, Nick suggested to wrap the refresh call on the viewer with 
setRedraw(false), setRedraw(true) to alleviate the problem.
Alternatively, you can update the viewer via viewer.setInput(Object), which does
a setRedraw(false) around a refresh().
Created attachment 12110
Standalone JFace example showing the problem

This uses a plain CheckBoxTableViewer around a Table with no TableColumns and
adds 2000 items.  Press Set Input, Clear, then Refresh.  The main difference
between Set Input and Refresh is that the former does a setRedraw(false).

On 2.1.3:
Set Input (2000) took 450ms
Clear took 150ms
Refresh (2000) took 1672ms

On 3.0 RC2:
Set Input (2000) took 240ms
Clear took 30ms
Refresh (2000) took 26348ms
Time on RC2 if there is a TableColumn:

Set Input (2000) took 220ms
Clear took 30ms
Refresh (2000) took 191ms

To see this, replace:
        Table table = new Table(shell, SWT.CHECK | SWT.H_SCROLL | SWT.V_SCROLL |
SWT.BORDER);
        viewer = new CheckboxTableViewer(table);

with:
        viewer = new CheckboxTableViewer(shell);

Created attachment 12159
Standalone SWT example showing the problem

Here are the times on RC2:

Add 2000 (redraw off) took 81ms
Clear took 20ms
Add 2000 (redraw on) took 23303ms
Add 2000 (redraw on) took 60387ms

Note that the second batch of 2000 takes over twice as long as the first.

Time on 2.1.3:
Add 2000 (redraw off) took 150ms
Add 2000 (redraw off) took 171ms
Clear took 20ms
Add 2000 (redraw on) took 1602ms
Add 2000 (redraw on) took 4277ms
I have a fix but am just checking it twice (like Santa) before releasing it.
Fixed &gt; 20040617
Using 20040618-1804, I verified that the table viewer on the Target Platform 
preference page now refreshes instantly when it contains 1708 plugins.  This 
happens when I refresh it using either viewer.refresh() or viewer.setInput(..).</WithStack>
    <WithOutStack>I have a target platform with ~400 plugins.  I'm using dynamic classpaths.  
When I go to the PDE preferences, reload a new target, click not in workspace, 
and hit ok, it takes a very long time before I have control again.

Seems like some refresh is going on as well as threads in the job queue.  This 
is using M7 as the development environment.
Is this reproducible or a bad concidence that you updated your target platform 
while other jobs were going on in the background?

The code that parses and resolves the target platform has not changed in about 
a year.
It seems to be this way most of the time.
how many seconds are we talking about?  It is a costly operation to parse and 
resolve hundreds of plug-ins, but in the past, when I was doing my testing 
against WSADIE's 1200 plug-ins, it used to take 6 seconds.
On a recent trial it took 15 seconds to load the plugins after I changed the 
target location, and another 20 after applied the preference.  This was with 
the Java perspective open.  When I opened the defect, it took what seemed like 
minutes but I can't recreate that at the moment.
*** Bug 62922 has been marked as a duplicate of this bug. ***
cc Pascal to keep him up-to-date on my findings.
cc Jeff, JohnW
Also cc Nick as the bottleneck in 3.0 appears to be the refreshing of a table 
viewer.

Will attach several profiles.
Created attachment 12100
Profile of updating the target platform using 2.1.3

In all my test cases, the target platform was WSADIE-5.1.1 which contains 1708
plug-ins and fragments.
In all the profiles that I am attaching, we will be showing the amount of time
it takes to load such a target.  That is, the amount of time elapsed between
the time you hit 'Reload' until the time the table viewer refreshes with the
new content.

In this first profile, I am using Eclipse 2.1.3 as my host platform.  This is
the old world with the old runtime, old PDE, old platform, etc.

The method that invokes everything is the one highlighted in blue:
ExternalPluginsBlock.handleReload().

In this profile, it takes 8.964 seconds for the whole reload operation to
complete:
5.489 seconds to load the target platform
3.105 seconds to refresh the table viewer.
Created attachment 12101
Profile using 3.0RC2

Now let's look at the exact same operation using 3.0RC2 as the host platform.

You will see that ExternalPluginsBlock.handleReload now takes 17.547 seconds.
But note that the amount of time taken to parse the target platform (with all
its 1708 plugins) is 3.064 seconds.
The rest of the time is spent refreshing the table viewer (&gt;10 seconds).

This is really obvious too when you see it in action.  You will see that the
progress monitor dialog goes to completion (i.e. the parsing finished), but the
UI hangs for a long time waiting for the table viewer to refresh.

I will attach another profile showing where the time is spent when refreshing
the table viewer.
Created attachment 12102
Inside table viewer in 3.0

This is an expansion of what is happening during the refreshing of the table
viewer in 3.0
Created attachment 12104
Inside table viewer in 2.1.3

On the other hand, here is what the expansion inside the refreshing of a table
viewer looked like in 2.1.3.
Note that, although the screenshots are of profiles made using Yourkit, I also 
performed the same runs using the heavy OptimizeIt.  Although the numbers were 
higher, because OptimizeIt is more accurate and intensive, the same slowness 
with the table viewer was still a key.

I also put debug statements in the code to see how long it takes to refresh 
the tree and the numbers were still alarmingly high.  Much higher than the 
time it takes to resolve, parse and populate the target platform in 3.0.
The reason why resolving and parsing the target platform is super fast using 
3.0RC2 is because of improvements made when addressing bug 66525.
Created attachment 12107
3.0 Profiles

OptimizeIt profiles for loading WSADIE 5.1.1 on the target platform preference
page using Eclipse 3.0RC2
Created attachment 12108
Profile using 2.1.3

Profiles using 2.1.3 and OptimizeIt.

The problem is in SWT.

Compare 2.1.3 with 3.0, and you will see how 
in 3.0: Display.windowProc() gets invoked 1,465,962 times,
while in 2.1: Display.windowProc() gets invoked 3,140 times.
Created attachment 12109
Inside Control.windowProc

Did another run to capture the expansion of Control.windowProc().
Moving to SWT and raising severity to Critical.
In the meantime, Nick suggested to wrap the refresh call on the viewer with 
setRedraw(false), setRedraw(true) to alleviate the problem.
Alternatively, you can update the viewer via viewer.setInput(Object), which does
a setRedraw(false) around a refresh().
Created attachment 12110
Standalone JFace example showing the problem

This uses a plain CheckBoxTableViewer around a Table with no TableColumns and
adds 2000 items.  Press Set Input, Clear, then Refresh.  The main difference
between Set Input and Refresh is that the former does a setRedraw(false).

On 2.1.3:
Set Input (2000) took 450ms
Clear took 150ms
Refresh (2000) took 1672ms

On 3.0 RC2:
Set Input (2000) took 240ms
Clear took 30ms
Refresh (2000) took 26348ms
Time on RC2 if there is a TableColumn:

Set Input (2000) took 220ms
Clear took 30ms
Refresh (2000) took 191ms

To see this, replace:
        Table table = new Table(shell, SWT.CHECK | SWT.H_SCROLL | SWT.V_SCROLL |
SWT.BORDER);
        viewer = new CheckboxTableViewer(table);

with:
        viewer = new CheckboxTableViewer(shell);

Created attachment 12159
Standalone SWT example showing the problem

Here are the times on RC2:

Add 2000 (redraw off) took 81ms
Clear took 20ms
Add 2000 (redraw on) took 23303ms
Add 2000 (redraw on) took 60387ms

Note that the second batch of 2000 takes over twice as long as the first.

Time on 2.1.3:
Add 2000 (redraw off) took 150ms
Add 2000 (redraw off) took 171ms
Clear took 20ms
Add 2000 (redraw on) took 1602ms
Add 2000 (redraw on) took 4277ms
I have a fix but am just checking it twice (like Santa) before releasing it.
Fixed &gt; 20040617
Using 20040618-1804, I verified that the table viewer on the Target Platform 
preference page now refreshes instantly when it contains 1708 plugins.  This 
happens when I refresh it using either viewer.refresh() or viewer.setInput(..).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53921" />
    <CreationDate amount="2004-03-05 14:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>warning on reused temps</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="114" end="143" />
        <code>int foo = computeSomething();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.0 m7

it's a bad smell when a temp is used for more that 1 purpose - it could be
flagged as a warning

example:
int foo = computeSomething();
..use foo here....
...
..use foo again here....
foo  = computeSomethingElse();  //nasty - should create a separate temp
..use foo once more here....
Not for 3.0. Not convinced this is that useful, there are lots of patterns 
where you provide a default value, then assign a different one under certain 
conditions.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>3.0 m7

it's a bad smell when a temp is used for more that 1 purpose - it could be
flagged as a warning

example:
int foo = computeSomething();
..use foo here....
...
..use foo again here....
foo  = computeSomethingElse();  //nasty - should create a separate temp
..use foo once more here....
Not for 3.0. Not convinced this is that useful, there are lots of patterns 
where you provide a default value, then assign a different one under certain 
conditions.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53922" />
    <CreationDate amount="2004-03-05 14:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="trivial" />
    <Summery>[java launching] JAR selection dialog does not remember it's size.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Version 3.0.m7.

The JAR selection dialog does not remember it's size. This dialog is opened from
the Add Jar... button in the Run dialog.
it's in the run dialog
Deferred
open
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Version 3.0.m7.

The JAR selection dialog does not remember it's size. This dialog is opened from
the Add Jar... button in the Run dialog.
it's in the run dialog
Deferred
open
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53923" />
    <CreationDate amount="2004-03-05 14:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Changing table font causes table gridlines to be misaligned.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have a table that allows the user to change the table's font.
If the font is changed when the table's top index is set to zero, the gridlines 
in the table will be aligned properly.

However, if the font is changed when the table is scrolled to the middle (i.e 
when top index is non-zero), the gridlines will be misaligned.

I will attach a screen capture and testcase for reproducinging the problem.
Created attachment 8362
Testcase for reproducing the problem.
Created attachment 8363
Screen capture showing the problem
The problem happens because Windows gets messed up when Table.setTopIndex() is 
called on a table that has a header that is zero sized (or very small).
*** Bug 69082 has been marked as a duplicate of this bug. ***
Fixed &gt; 20040113</WithStack>
    <WithOutStack>I have a table that allows the user to change the table's font.
If the font is changed when the table's top index is set to zero, the gridlines 
in the table will be aligned properly.

However, if the font is changed when the table is scrolled to the middle (i.e 
when top index is non-zero), the gridlines will be misaligned.

I will attach a screen capture and testcase for reproducinging the problem.
Created attachment 8362
Testcase for reproducing the problem.
Created attachment 8363
Screen capture showing the problem
The problem happens because Windows gets messed up when Table.setTopIndex() is 
called on a table that has a header that is zero sized (or very small).
*** Bug 69082 has been marked as a duplicate of this bug. ***
Fixed &gt; 20040113</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53924" />
    <CreationDate amount="2004-03-05 14:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Scalability] Indexing a large project prevents the managed build of a small project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We have decided to keep track on this.

Let's say I have a large project that takes 5 minutes to index and let's say 
that I just opened it in Eclipse.  It will trigger the indexing.  If I want 
build another opened project (managed build project), there is a wait until the 
indexing is done since the Managed Build depends on the indexing.

This might frustrate a user.
Again, priority dispatching of events.
Is the existing project fully indexed already?  i.e. do we wait for all 
indexing to finish, or just wait for the "required" indexing to finish?
I'll put this clearer.

I have Managed project A and Managed project B.  Project A is small and is 
already in the workspace.  It is also fully indexed.   I've imported the 
bigger Project B into the workspace.  The indexing starts and goes on for 5 
minutes.  I can't build Project A until the indexing (of the workspace) is 
finished.

Understood and agreed. The dependency service should be run before the 
indexer...


I'll take a look at this ... 
Sean has agreed to take a look at this for 2.0 ...

I think this can be avoided by using the dependency service IFF a toolchain 
does not specify its own dependency calculation scheme.
The default behaviour of the makefile generator we supply now is to rely on the 
preprocessor to generate dependencies. The builder no longer relies on the 
index being up-to-date so this problem should be resolved now.
Verified Eclipse 200406030854  CDT 200406030301</WithStack>
    <WithOutStack>We have decided to keep track on this.

Let's say I have a large project that takes 5 minutes to index and let's say 
that I just opened it in Eclipse.  It will trigger the indexing.  If I want 
build another opened project (managed build project), there is a wait until the 
indexing is done since the Managed Build depends on the indexing.

This might frustrate a user.
Again, priority dispatching of events.
Is the existing project fully indexed already?  i.e. do we wait for all 
indexing to finish, or just wait for the "required" indexing to finish?
I'll put this clearer.

I have Managed project A and Managed project B.  Project A is small and is 
already in the workspace.  It is also fully indexed.   I've imported the 
bigger Project B into the workspace.  The indexing starts and goes on for 5 
minutes.  I can't build Project A until the indexing (of the workspace) is 
finished.

Understood and agreed. The dependency service should be run before the 
indexer...


I'll take a look at this ... 
Sean has agreed to take a look at this for 2.0 ...

I think this can be avoided by using the dependency service IFF a toolchain 
does not specify its own dependency calculation scheme.
The default behaviour of the makefile generator we supply now is to rely on the 
preprocessor to generate dependencies. The builder no longer relies on the 
index being up-to-date so this problem should be resolved now.
Verified Eclipse 200406030854  CDT 200406030301</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53925" />
    <CreationDate amount="2004-03-05 14:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Provide helper method in CorrelationHelper class: getCorrelationByName</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>getCorrelationByName returns IConfigurationElement given name value of the 
extension point org.eclipse.hyades.logc.logInteractionView.
code checked in 1.3.0 and HEAD
Updated trace sample with the new method.
closing bug
house keeping</WithStack>
    <WithOutStack>getCorrelationByName returns IConfigurationElement given name value of the 
extension point org.eclipse.hyades.logc.logInteractionView.
code checked in 1.3.0 and HEAD
Updated trace sample with the new method.
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53926" />
    <CreationDate amount="2004-03-05 14:53:00 -0500" />
    <DupId amount="49545" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Allow launching processes at lower priority</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I would like to be able to launch processes using "Run" at lower priority. I
often write long-running, processor-intensive, batch programs and I need to
launch them at lower priority so I can use other programs while waiting for the
results.
As far as we are aware, there is no way to set to priority of an OS process 
from Java.

*** This bug has been marked as a duplicate of 49545 ***</WithStack>
    <WithOutStack>I would like to be able to launch processes using "Run" at lower priority. I
often write long-running, processor-intensive, batch programs and I need to
launch them at lower priority so I can use other programs while waiting for the
results.
As far as we are aware, there is no way to set to priority of an OS process 
from Java.

*** This bug has been marked as a duplicate of 49545 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53927" />
    <CreationDate amount="2004-03-05 15:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>CVS Update locks all projects being updated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. From the synchronize view, select a bunch of projects and choose Update to bring in changes</Line>
          <Line>from the repository.</Line>
          <Line>2. While the update operation is working on one project, try to change a file (by typing in an editor</Line>
          <Line>and saving) in another project.</Line>
          <Line>3. The dialog that tells you when a UI operation is blocked by a workspace lock pops up. From the</Line>
          <Line>progress information reported by the CVS operation in the dialog, you can see that it's updating</Line>
          <Line>other projects, but the save still won't proceed.</Line>
          <Line>I've changed the title to reflect that the update only locks all projects</Line>
          <Line>involved in the update. This is a bit less serious but not much. We intend to</Line>
          <Line>change this behavior in this milestone.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It's my understanding that the CVS operations are only supposed to lock the projects that they're 
currently altering. But it seems to me that they actually lock the entire workspace. For example:

1. From the synchronize view, select a bunch of projects and choose Update to bring in changes 
from the repository.
2. While the update operation is working on one project, try to change a file (by typing in an editor 
and saving) in another project.
3. The dialog that tells you when a UI operation is blocked by a workspace lock pops up. From the 
progress information reported by the CVS operation in the dialog, you can see that it's updating 
other projects, but the save still won't proceed.
I've changed the title to reflect that the update only locks all projects 
involved in the update. This is a bit less serious but not much. We intend to 
change this behavior in this milestone.

However, I also happen to know that typing in an editor can lock the entire 
workspace if a validateEdit is required. I'm not sure if that is happening 
here or not. There is already a bug report against the text component for this.
In my case, I was able to type just fine. It was the save that was blocked.
The CVS update from the sync view now locks a project at a time.</WithStack>
    <WithOutStack>It's my understanding that the CVS operations are only supposed to lock the projects that they're 
currently altering. But it seems to me that they actually lock the entire workspace. For example:

1. From the synchronize view, select a bunch of projects and choose Update to bring in changes 
from the repository.
2. While the update operation is working on one project, try to change a file (by typing in an editor 
and saving) in another project.
3. The dialog that tells you when a UI operation is blocked by a workspace lock pops up. From the 
progress information reported by the CVS operation in the dialog, you can see that it's updating 
other projects, but the save still won't proceed.
I've changed the title to reflect that the update only locks all projects 
involved in the update. This is a bit less serious but not much. We intend to 
change this behavior in this milestone.

However, I also happen to know that typing in an editor can lock the entire 
workspace if a validateEdit is required. I'm not sure if that is happening 
here or not. There is already a bug report against the text component for this.
In my case, I was able to type just fine. It was the save that was blocked.
The CVS update from the sync view now locks a project at a time.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53928" />
    <CreationDate amount="2004-03-05 15:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debugger not working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Environment:
Server: Solaris 8, Weblogic 8.1 sp2
Client: Windows XP, Eclipse 2.1.2

The debugger is attaching to the server, but when the breakpoint is reached, 
it hangs and the client does not step throught the code. 

Mark Hankey
mark.hankey@cingular.com
Is the Debug view open?
Note: you must have a debug view open in the perspective that you are 
debugging in. As well, if you are debuggin in a perspective that is not 
the "Debug" perspective, you will need to turn on the "Debug" action set via 
the "Window &gt; Customize" dialog.</WithStack>
    <WithOutStack>Environment:
Server: Solaris 8, Weblogic 8.1 sp2
Client: Windows XP, Eclipse 2.1.2

The debugger is attaching to the server, but when the breakpoint is reached, 
it hangs and the client does not step throught the code. 

Mark Hankey
mark.hankey@cingular.com
Is the Debug view open?
Note: you must have a debug view open in the perspective that you are 
debugging in. As well, if you are debuggin in a perspective that is not 
the "Debug" perspective, you will need to turn on the "Debug" action set via 
the "Window &gt; Customize" dialog.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53929" />
    <CreationDate amount="2004-03-05 15:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Run/Classpath tree entries need to show FULL path.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Verion 3.0.m7.

The Run/Classpath tree entries need to show FULL path to a jar/resource, not
just the file name. Otherwise, there is you cannot tell which version of a jar
you are using. Worse, if you have multiple jars with the same name as it often
happens when using 3rd party libraries (resources.zip is a common one) you
cannot tell which one is which.

The project properties dialog does it right IMO by showing the full path to a
jar/resource.

Thanks you.
Move to JDT/Debug.
Fixed in RuntimeClasspathEntryLabelProvider. A workspace relative path is 
shown for archives that are resources, and a full local file system path is 
shown for entries that are external to the workspace.
Please verify, Luc.
The leading '/' is not displayed on *nix systems.
I modified the code to add the first '/' in all cases.
Changes in RuntimeClasspathEntryLabelProvider#getText(Object).
Please verify, Darin W.
Luc, the code does not appear released
Yes, I forgot. It is now.
Verified.</WithStack>
    <WithOutStack>Verion 3.0.m7.

The Run/Classpath tree entries need to show FULL path to a jar/resource, not
just the file name. Otherwise, there is you cannot tell which version of a jar
you are using. Worse, if you have multiple jars with the same name as it often
happens when using 3rd party libraries (resources.zip is a common one) you
cannot tell which one is which.

The project properties dialog does it right IMO by showing the full path to a
jar/resource.

Thanks you.
Move to JDT/Debug.
Fixed in RuntimeClasspathEntryLabelProvider. A workspace relative path is 
shown for archives that are resources, and a full local file system path is 
shown for entries that are external to the workspace.
Please verify, Luc.
The leading '/' is not displayed on *nix systems.
I modified the code to add the first '/' in all cases.
Changes in RuntimeClasspathEntryLabelProvider#getText(Object).
Please verify, Darin W.
Luc, the code does not appear released
Yes, I forgot. It is now.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53930" />
    <CreationDate amount="2004-03-05 15:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error while clearing cache directory on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095510">
        <Exception>org.eclipse.team.core.TeamException</Exception>
        <Reason>An I/O error performing an operation on
/PAG/g6/users/akiezun/eclipse/workspaces/eclipseWangSmith/.metada</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.core.sync.RemoteContentsCache.deleteFile(RemoteContentsCache.java:198)</Frame>
          <Frame depth="1">org.eclipse.team.core.sync.RemoteContentsCache.createCacheDirectory(RemoteContentsCache.java:164)</Frame>
          <Frame depth="2">org.eclipse.team.core.sync.RemoteContentsCache.enableCaching(RemoteContentsCache.java:60)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.CVSProviderPlugin.startup(CVSProviderPlugin.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:49)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1054)</Frame>
          <Frame depth="6">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1050)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:991)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:403)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:312)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:58)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:326)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass(BundleLoader.java:291)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass(BundleLoader.java:915)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:352)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.adaptor.BundleClassLoader.loadClass(BundleClassLoader.java:115)</Frame>
          <Frame depth="17">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="18">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ccvs.ui.model.CVSAdapterFactory.&lt;init&gt;(CVSAdapterFactory.java:25)</Frame>
          <Frame depth="20">org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.startup(CVSUIPlugin.java:674)</Frame>
          <Frame depth="21">org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:49)</Frame>
          <Frame depth="22">org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1054)</Frame>
          <Frame depth="23">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="24">org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1050)</Frame>
          <Frame depth="25">org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:991)</Frame>
          <Frame depth="26">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:403)</Frame>
          <Frame depth="27">org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:312)</Frame>
          <Frame depth="28">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:133)</Frame>
          <Frame depth="29">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:125)</Frame>
          <Frame depth="30">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:114)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:171)</Frame>
          <Frame depth="32">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:51)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:168)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition$1.run(LightweightDecoratorDefinition.java:83)</Frame>
          <Frame depth="35">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:819)</Frame>
          <Frame depth="36">org.eclipse.core.runtime.Platform.run(Platform.java:493)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.internalGetDecorator(LightweightDecoratorDefinition.java:79)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:153)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)</Frame>
          <Frame depth="40">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:819)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.Platform.run(Platform.java:493)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:245)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:228)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:245)</Frame>
          <Frame depth="45">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 m7
i found this in the log - not sure what caused it

org.eclipse.team.core.TeamException: An I/O error performing an operation on
/PAG/g6/users/akiezun/eclipse/workspaces/eclipseWangSmith/.metada
        at
org.eclipse.team.core.sync.RemoteContentsCache.deleteFile(RemoteContentsCache.java:198)
        at
org.eclipse.team.core.sync.RemoteContentsCache.createCacheDirectory(RemoteContentsCache.java:164)
        at
org.eclipse.team.core.sync.RemoteContentsCache.enableCaching(RemoteContentsCache.java:60)
        at
org.eclipse.team.internal.ccvs.core.CVSProviderPlugin.startup(CVSProviderPlugin.java:324)
        at
org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:49)
        at
org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1054)
        at java.security.AccessController.doPrivileged(Native Method)
        at
org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1050)
        at
org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:991)
        at
org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:403)
        at org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:312)
        at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:58)
        at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:326)
        at
org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass(BundleLoader.java:291)
        at
org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass(BundleLoader.java:915)
        at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:352)
        at
org.eclipse.osgi.framework.adaptor.BundleClassLoader.loadClass(BundleClassLoader.java:115)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
        at
org.eclipse.team.internal.ccvs.ui.model.CVSAdapterFactory.&lt;init&gt;(CVSAdapterFactory.java:25)
        at
org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.startup(CVSUIPlugin.java:674)
        at
org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:49)
        at
org.eclipse.osgi.framework.internal.core.BundleContext$1.run(BundleContext.java:1054)
        at java.security.AccessController.doPrivileged(Native Method)
        at
org.eclipse.osgi.framework.internal.core.BundleContext.startActivator(BundleContext.java:1050)
        at
org.eclipse.osgi.framework.internal.core.BundleContext.start(BundleContext.java:991)
        at
org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:403)
        at org.eclipse.osgi.framework.internal.core.Bundle.start(Bundle.java:312)
        at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:133)
        at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:125)
        at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:114)
        at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:171)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:51)
        at
org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:168)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition$1.run(LightweightDecoratorDefinition.java:83)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:819)
        at org.eclipse.core.runtime.Platform.run(Platform.java:493)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.internalGetDecorator(LightweightDecoratorDefinition.java:79)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:153)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:59)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:819)
        at org.eclipse.core.runtime.Platform.run(Platform.java:493)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:245)
        at
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:228)
        at
org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:245)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
Looks likes the remote content caching mechanism cannot clear out the cache 
directory on startup. It probably won't cause any problem. For some reason the 
filename is truncated in the stacktrace so I can't see which directory or file 
couldn't be deleted. Also, this code has been changed quite a bit since then. 
I have fixed a few cases of streams being left open which may have caused this 
problem. We'll keep this open for a while to see if other cases occur and to 
think about how this failure should be handled.
sorry, my bad:
here's the first line of the stack trace

org.eclipse.team.core.TeamException: An I/O error performing an operation on
/PAG/g6/users/akiezun/eclipse/workspaces/eclipseWangSmith/.metadata/.plugins/org.eclipse.team.core/.cache/org.eclipse.team.cvs.core.
It looks like it is just the directory that could not be deleted. Since that 
is the case, we could actually proceed with no problem so we shouldn't log 
anything.
Fix released to HEAD</WithStack>
    <WithOutStack>3.0 m7
i found this in the log - not sure what caused it

Looks likes the remote content caching mechanism cannot clear out the cache 
directory on startup. It probably won't cause any problem. For some reason the 
filename is truncated in the stacktrace so I can't see which directory or file 
couldn't be deleted. Also, this code has been changed quite a bit since then. 
I have fixed a few cases of streams being left open which may have caused this 
problem. We'll keep this open for a while to see if other cases occur and to 
think about how this failure should be handled.
sorry, my bad:
here's the first line of the stack trace

org.eclipse.team.core.TeamException: An I/O error performing an operation on
/PAG/g6/users/akiezun/eclipse/workspaces/eclipseWangSmith/.metadata/.plugins/org.eclipse.team.core/.cache/org.eclipse.team.cvs.core.
It looks like it is just the directory that could not be deleted. Since that 
is the case, we could actually proceed with no problem so we shouldn't log 
anything.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53931" />
    <CreationDate amount="2004-03-05 15:15:00 -0500" />
    <DupId amount="34095" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Run/Classpath dialog needs an Edit button</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Version 3.0.m7.

The Run/Classpath dialog needs an Edit button, just like the Project
Properties/Java Build Path pane does.

Thanks.


*** This bug has been marked as a duplicate of 34095 ***</WithStack>
    <WithOutStack>Version 3.0.m7.

The Run/Classpath dialog needs an Edit button, just like the Project
Properties/Java Build Path pane does.

Thanks.


*** This bug has been marked as a duplicate of 34095 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53932" />
    <CreationDate amount="2004-03-05 15:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] Activating system menu via Alt+Space enters a space in text editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I use the hot key combo "Alt+Space N" to minimize windows constantly.  Eclipse
3.0M7 does minimize correctly but also thinks that I typed a space into the
editor.  To reproduce, open a source file then use the above key combo to
minimize the window.  When you restore the Eclipse window, you should notice a
"*" next to the classname (denoting modification) and an extra space where the
cursor was.
In M7, I see this behaviour as well, but in I200303040800, I do not see this 
behaviour.  Since I don't know what's caused this to happen in M7, I'm closing 
this bug as WORKSFORME.  If you see this again, please re-open this bug. 
Moving duplicate resolved (but not fixed) bugs to verified for M8.</WithStack>
    <WithOutStack>I use the hot key combo "Alt+Space N" to minimize windows constantly.  Eclipse
3.0M7 does minimize correctly but also thinks that I typed a space into the
editor.  To reproduce, open a source file then use the above key combo to
minimize the window.  When you restore the Eclipse window, you should notice a
"*" next to the classname (denoting modification) and an extra space where the
cursor was.
In M7, I see this behaviour as well, but in I200303040800, I do not see this 
behaviour.  Since I don't know what's caused this to happen in M7, I'm closing 
this bug as WORKSFORME.  If you see this again, please re-open this bug. 
Moving duplicate resolved (but not fixed) bugs to verified for M8.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53933" />
    <CreationDate amount="2004-03-05 15:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>move the Log interaction perference as a child of SD perference</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>as well as enriching the log interaction page with more information about what 
page size is about
changes checked in 1.3.0 and HEAD

keep bug open for any string changes after view by Nellie
fixed
closing bug
house keeping</WithStack>
    <WithOutStack>as well as enriching the log interaction page with more information about what 
page size is about
changes checked in 1.3.0 and HEAD

keep bug open for any string changes after view by Nellie
fixed
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53934" />
    <CreationDate amount="2004-03-05 15:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>generated fetch script incorrect for org.eclipse.swt.gtk64 fragment</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The generated org.eclipse.plagform feature fetch script only fetches the 
fragment.xml for the org.eclipse.swt.gtk64 fragment.

&lt;ant antfile="../fetch_org.eclipse.platform.xml" 
dir="${buildDirectory}/plugins" target="getFromCVS"&gt;
&lt;property name="tag" value="HEAD"/&gt;
&lt;property name="destination" value="org.eclipse.swt.gtk64"/&gt;
&lt;property name="quiet" value="${quiet}"/&gt;
&lt;property name="cvsRoot" 
value=":pserver:anonymous@dev.eclipse.org:/home/eclipse"/&gt;
&lt;property name="package" value="org.eclipse.swt.gtk64/fragment.xml"/&gt;
&lt;property name="fileToCheck" 
value="${buildDirectory}/plugins/org.eclipse.swt.gtk64/fragment.xml"/&gt;
&lt;/ant&gt;
Did you set the new configuration in the build.properties of your builder?
Something like linux, gtk, amd64?

As far as I can tell this can of situation only occurs when you do not include 
the proper config (note that I haven't checked anything yet)
Yes, see files in platform64 and sdk64 here:  
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.releng.eclipsebuilder/
Could you please give a try to this one with the new pde build and without your
workaround?
The platform fetch script now looks correct, however, it appears that the 
fetch fails when building the amd64 components because the fragment.xml in 
org.eclipse.swt.gtk64 has already been fetched at some previous point in the 
build.
Nothing else can be done to support this problem.</WithStack>
    <WithOutStack>The generated org.eclipse.plagform feature fetch script only fetches the 
fragment.xml for the org.eclipse.swt.gtk64 fragment.

&lt;ant antfile="../fetch_org.eclipse.platform.xml" 
dir="${buildDirectory}/plugins" target="getFromCVS"&gt;
&lt;property name="tag" value="HEAD"/&gt;
&lt;property name="destination" value="org.eclipse.swt.gtk64"/&gt;
&lt;property name="quiet" value="${quiet}"/&gt;
&lt;property name="cvsRoot" 
value=":pserver:anonymous@dev.eclipse.org:/home/eclipse"/&gt;
&lt;property name="package" value="org.eclipse.swt.gtk64/fragment.xml"/&gt;
&lt;property name="fileToCheck" 
value="${buildDirectory}/plugins/org.eclipse.swt.gtk64/fragment.xml"/&gt;
&lt;/ant&gt;
Did you set the new configuration in the build.properties of your builder?
Something like linux, gtk, amd64?

As far as I can tell this can of situation only occurs when you do not include 
the proper config (note that I haven't checked anything yet)
Yes, see files in platform64 and sdk64 here:  
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.releng.eclipsebuilder/
Could you please give a try to this one with the new pde build and without your
workaround?
The platform fetch script now looks correct, however, it appears that the 
fetch fails when building the amd64 components because the fragment.xml in 
org.eclipse.swt.gtk64 has already been fetched at some previous point in the 
build.
Nothing else can be done to support this problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53935" />
    <CreationDate amount="2004-03-05 15:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>add compiler warning for fully qualified references to types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="134" end="279" />
        <code>void foo(){
   java.util.Set set=                              //warning here
     new java.util.Collections.singleton("string");//warning here
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.0 m7
i think using fully qualified references to types is bad style - it would be
nice to have a compiler flag for those

example:

void foo(){
   java.util.Set set=                              //warning here
     new java.util.Collections.singleton("string");//warning here
}
Many corner cases where qualification is required (collisions) or to make your 
code more robust (e.g. Scanner got added to java.lang in 1.5).

Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>3.0 m7
i think using fully qualified references to types is bad style - it would be
nice to have a compiler flag for those

example:

void foo(){
   java.util.Set set=                              //warning here
     new java.util.Collections.singleton("string");//warning here
}
Many corner cases where qualification is required (collisions) or to make your 
code more robust (e.g. Scanner got added to java.lang in 1.5).

Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53936" />
    <CreationDate amount="2004-03-05 15:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] "Build Project" should use the project containing the current editor input</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>3.0 m7
(not sure if it's text or ui)

i have ctrl+p bound to 'build project'
i'd like to build the project which hosts the currently edited file - but the
project menu is disabled and i have to raise my hand, give focus to the package
explorer, all only to be able to build the project

very frustrating
I believe the current implementation of the build actions is done by 
Platform-Core.  Please re-assign if I'm wrong.... 
Although I did some work during 3.0 to add UI for the new "clean" and "build
working set" actions, I am not the appropriate owner of all build actions. I
implemented similar functionality to that requested below for the clean action,
so that could be used as a reference to make this work for other build actions
(see BuildCleanAction.run). It would just involve making BuildAction listen for
part selection changes and update the selection accordingly when an editor
becomes the active part.
This is actually a retargetable action. 
Could this be added to TextEditor?

In JDT UI, this is hooked in BuildActionGroup.
It also hooks IDEActionFactory.REBUILD_PROJECT, which is no longer used in the UI.
See bug 77486.

Nick, we can do this (I actually have the code in my workspace) but would like
to extend BuildAction and override getActionResources(). Currently the
BuildAction's Javadoc says: This class may be instantiated; it is not intended
to be subclassed.

Dani, if you supply a patch for opening up BuildAction as you need, I will
review it.

The other option is for us to replace the existing actions with non-retargetable
actions that look to the current part's selection and/or editor input, rather
than requiring each resource-oriented view and editor to provide a handling action.

Nick, it already works for me without a code change. The only restriction for me
is the comment in the Javadoc which says  it is not intended to be subclassed.

The solution proposed in comment 7 might be better though.
I've filed bug 77871 to consider this.

Marking as remind. Depending on the outcome of bug 77871 we will either mark it
as fixed or reopen to fix.
Get rid of deprecated state.
.</WithStack>
    <WithOutStack>3.0 m7
(not sure if it's text or ui)

i have ctrl+p bound to 'build project'
i'd like to build the project which hosts the currently edited file - but the
project menu is disabled and i have to raise my hand, give focus to the package
explorer, all only to be able to build the project

very frustrating
I believe the current implementation of the build actions is done by 
Platform-Core.  Please re-assign if I'm wrong.... 
Although I did some work during 3.0 to add UI for the new "clean" and "build
working set" actions, I am not the appropriate owner of all build actions. I
implemented similar functionality to that requested below for the clean action,
so that could be used as a reference to make this work for other build actions
(see BuildCleanAction.run). It would just involve making BuildAction listen for
part selection changes and update the selection accordingly when an editor
becomes the active part.
This is actually a retargetable action. 
Could this be added to TextEditor?

In JDT UI, this is hooked in BuildActionGroup.
It also hooks IDEActionFactory.REBUILD_PROJECT, which is no longer used in the UI.
See bug 77486.

Nick, we can do this (I actually have the code in my workspace) but would like
to extend BuildAction and override getActionResources(). Currently the
BuildAction's Javadoc says: This class may be instantiated; it is not intended
to be subclassed.

Dani, if you supply a patch for opening up BuildAction as you need, I will
review it.

The other option is for us to replace the existing actions with non-retargetable
actions that look to the current part's selection and/or editor input, rather
than requiring each resource-oriented view and editor to provide a handling action.

Nick, it already works for me without a code change. The only restriction for me
is the comment in the Javadoc which says  it is not intended to be subclassed.

The solution proposed in comment 7 might be better though.
I've filed bug 77871 to consider this.

Marking as remind. Depending on the outcome of bug 77871 we will either mark it
as fixed or reopen to fix.
Get rid of deprecated state.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53937" />
    <CreationDate amount="2004-03-05 15:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JVM Thread dump agent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>This will provide a mechanism for users to generate a JVM thread dump 
(javacore) and produce common base events for thread ananysis.
Feature already implemented as of 2004/04/07.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>This will provide a mechanism for users to generate a JVM thread dump 
(javacore) and produce common base events for thread ananysis.
Feature already implemented as of 2004/04/07.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53938" />
    <CreationDate amount="2004-03-05 15:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Option query feature of the Hyades Data Collection Engine</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>This will allow the data collection engine to load up any agent based on the 
configuration file setting.
Changed the summary line to reflect the actual implementation.
Code checked into head stream as of 2004/04/13 3:16pm
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>This will allow the data collection engine to load up any agent based on the 
configuration file setting.
Changed the summary line to reflect the actual implementation.
Code checked into head stream as of 2004/04/13 3:16pm
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53939" />
    <CreationDate amount="2004-03-05 15:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add context menu to Project properties Libraries Jar list</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Version 3.0.m7.

Please add a context menu to the Project properties/Libraries/Jar list. At least
Edit... and Remove.

Thanks.
None of our configuaration dialogs has context menus. Having a quick look at MS
Windows options dialogs they mostly only have a 'What's this' in there.
I think your point is valid but we won't be able to introduce that for 3.0
Got it, thank YOU. From a user's POV (mine ;-), the distinction b/w a "window"
and a "dialog", the fact that you can make a window go to the background and a
dialog not, should not affect the UI features of that dialog. Granted the
Eclipse dialogs  are very fancy and feature rich, maybe beyond what a standard
dialog usualy is but that should not matter for this issue. Thanks!
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Version 3.0.m7.

Please add a context menu to the Project properties/Libraries/Jar list. At least
Edit... and Remove.

Thanks.
None of our configuaration dialogs has context menus. Having a quick look at MS
Windows options dialogs they mostly only have a 'What's this' in there.
I think your point is valid but we won't be able to introduce that for 3.0
Got it, thank YOU. From a user's POV (mine ;-), the distinction b/w a "window"
and a "dialog", the fact that you can make a window go to the background and a
dialog not, should not affect the UI features of that dialog. Granted the
Eclipse dialogs  are very fancy and feature rich, maybe beyond what a standard
dialog usualy is but that should not matter for this issue. Thanks!
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53940" />
    <CreationDate amount="2004-03-05 15:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Update Manager help out of date</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I just updated to Eclipse 3.0 M6 and was trying to figure out how to download
new features. The help page for installing new features appears to still be for
v2.1 because it is still making references to the update manager.
Yes, the update manager UI has been (almost) completely redesigned and the 
docs have not been updated,but they will be the end of the release. 
If you are having specific problems with the current UI, please add your 
comments here and we'll help you out. 
*** Bug 63017 has been marked as a duplicate of this bug. ***
Guess then I'm after the answer to the question posed in duplicate Bug 63017. 
Is the web type of site supported for an update site?  If so, what is the use 
case - a push site?
the web update site is no longer supported.
Nobody has used it or expressed any interest in this kind of work, and it was 
a bit clumsy.
With the new browser widget available, we may try to implement it differently 
post 3.0, provided there is enough interest.
The update help has been updated to reflect changes in this version.
Along with the doc team, we will be polishing the docs, but currently, the 
content is there.</WithStack>
    <WithOutStack>I just updated to Eclipse 3.0 M6 and was trying to figure out how to download
new features. The help page for installing new features appears to still be for
v2.1 because it is still making references to the update manager.
Yes, the update manager UI has been (almost) completely redesigned and the 
docs have not been updated,but they will be the end of the release. 
If you are having specific problems with the current UI, please add your 
comments here and we'll help you out. 
*** Bug 63017 has been marked as a duplicate of this bug. ***
Guess then I'm after the answer to the question posed in duplicate Bug 63017. 
Is the web type of site supported for an update site?  If so, what is the use 
case - a push site?
the web update site is no longer supported.
Nobody has used it or expressed any interest in this kind of work, and it was 
a bit clumsy.
With the new browser widget available, we may try to implement it differently 
post 3.0, provided there is enough interest.
The update help has been updated to reflect changes in this version.
Along with the doc team, we will be polishing the docs, but currently, the 
content is there.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53941" />
    <CreationDate amount="2004-03-05 15:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>the Import external plugins from workspace  needs a filter field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>currently the checkboxtable viewer displays all plugins from a location that you
can import, in a big product with
500-1000 plugins its hard to locate your plugin and check it,
it would be easy if on top of the list, you have a text field where I can type
prefixes lik org.eclipse.* and only those plugins are shown.
similarly if I type org.eclipse.jdt.* I only see those plugins and I am able to
easily locate the plugin I am searching.
Although I could see the usefulness of this feature, I'm afraid it will make 
the whole page more confusing and difficult to use.

Here is why:
If you type org.eclipse.jdt.* in the text field, and this shows 20 plug-ins 
out of 1000 in the left viewer.  What would the function keys (Swap, Existing 
Binary, Existing, Add Required Plug-ins) mean?  Are we now swapping/choosing 
from the whole list of 1000 plug-ins or just the 20 visible ones?
When people press "Add Required Plug-ins", are we adding from the full list of 
1000, or from the 20 that fill the filter criteria.

I'm not sure what the answer is to those questions? 

Different people will probably expect different things to happen upon pressing 
those function keys.

Unless you provide a compelling argument that no confusion will arise from 
this filtering, we will resolve this request as WONTFIX.
oh ok I see the problem you are anticipating, 
I guess I would be satisfied with 
anything that helps me locate the plugins I am searching for instead of
scrolling which is very tedious,

I can suggest a smaller solution, The names are sorted in the table, so how
about adding a text field where I type in the string and the tableviewer scrolls
to the first plugin starting with that name as I type,

 

if I type org.eclipse.jdt, it would scroll to the first occurence of that name.

I think I have seen such a feature in browsers where you set focus on the page
and type a text and the page scrolls to the first occurence of the text.


In this case it could look like below

Scroll to plugins starting from  : TEXTFIELD
or
Locate plugin statring from :      TEXTFIELD
Created attachment 8848
The new scroll-to-and-select search options
Changed and released to head :-)
Apologies -- code has been reverted and this enhancement will target M9.

It will still appear as the attached jpeg so feel free to comment on it for M9
changes.
Created attachment 9024
New Import Wizard Detailed Page

Here's the new scroll-to-and-select-all-that-match functionality.

Thanks to Wassim for fixing up the wording in external strings :)
Marking as fixed.
closed</WithStack>
    <WithOutStack>currently the checkboxtable viewer displays all plugins from a location that you
can import, in a big product with
500-1000 plugins its hard to locate your plugin and check it,
it would be easy if on top of the list, you have a text field where I can type
prefixes lik org.eclipse.* and only those plugins are shown.
similarly if I type org.eclipse.jdt.* I only see those plugins and I am able to
easily locate the plugin I am searching.
Although I could see the usefulness of this feature, I'm afraid it will make 
the whole page more confusing and difficult to use.

Here is why:
If you type org.eclipse.jdt.* in the text field, and this shows 20 plug-ins 
out of 1000 in the left viewer.  What would the function keys (Swap, Existing 
Binary, Existing, Add Required Plug-ins) mean?  Are we now swapping/choosing 
from the whole list of 1000 plug-ins or just the 20 visible ones?
When people press "Add Required Plug-ins", are we adding from the full list of 
1000, or from the 20 that fill the filter criteria.

I'm not sure what the answer is to those questions? 

Different people will probably expect different things to happen upon pressing 
those function keys.

Unless you provide a compelling argument that no confusion will arise from 
this filtering, we will resolve this request as WONTFIX.
oh ok I see the problem you are anticipating, 
I guess I would be satisfied with 
anything that helps me locate the plugins I am searching for instead of
scrolling which is very tedious,

I can suggest a smaller solution, The names are sorted in the table, so how
about adding a text field where I type in the string and the tableviewer scrolls
to the first plugin starting with that name as I type,

 

if I type org.eclipse.jdt, it would scroll to the first occurence of that name.

I think I have seen such a feature in browsers where you set focus on the page
and type a text and the page scrolls to the first occurence of the text.


In this case it could look like below

Scroll to plugins starting from  : TEXTFIELD
or
Locate plugin statring from :      TEXTFIELD
Created attachment 8848
The new scroll-to-and-select search options
Changed and released to head :-)
Apologies -- code has been reverted and this enhancement will target M9.

It will still appear as the attached jpeg so feel free to comment on it for M9
changes.
Created attachment 9024
New Import Wizard Detailed Page

Here's the new scroll-to-and-select-all-that-match functionality.

Thanks to Wassim for fixing up the wording in external strings :)
Marking as fixed.
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53942" />
    <CreationDate amount="2004-03-05 15:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>update probekit model and editor based on the latest schema</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Fix in CVS (Hyades_1_3_0).

I also fixed the compile errors in org.eclipse.hyades.probekit.Compiler class.
Closed
house keeping</WithStack>
    <WithOutStack>Fix in CVS (Hyades_1_3_0).

I also fixed the compile errors in org.eclipse.hyades.probekit.Compiler class.
Closed
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53943" />
    <CreationDate amount="2004-03-05 16:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] would be helpful if turn off auto build option is available as a toolbar item,</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>then I can turn off &amp; on the preference easily, without going to the preferences
menu, especially because the preference menu remembers the last preference page
and if that page takes time to load I have to wait all the time just to set the
auto build preference.
is it already there through some customizations like customize perspective ?
This is a decision for the IDE
There is currently no plan to work on this
closed
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>then I can turn off &amp; on the preference easily, without going to the preferences
menu, especially because the preference menu remembers the last preference page
and if that page takes time to load I have to wait all the time just to set the
auto build preference.
is it already there through some customizations like customize perspective ?
This is a decision for the IDE
There is currently no plan to work on this
closed
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53944" />
    <CreationDate amount="2004-03-05 16:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Extend hard stop functionality in Context to Controller and Adapter for use by Adapter Editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When rerunning the adapter in the Adapter Editor, Adapter.stop() is called to 
stop the previously running adapter.  Due to a timing issue, sometimes the 
previous adapter is still stopping, flushing the data in the context 
components, when the new one starts.  During the flushing it still calls the 
calls the context listener which populates the result queue but the result 
queue has been replaced by the new one.  When the new adapter runs and there is 
data in the result queue alread and it starts appending to it.  This results in 
inconsistent data between the Template Log view and the Ouputter Result view in 
the editor.

A solution is to add a hardStop method to the Adapter class that the Adapter 
editor can call that will result in the hardStop flag being set in the context 
which turns off flushing the data to the context listener.  A hardStop method 
is required in the Controller class that will set the hardStop flag in the 
contexts before calling their stop methods.
Made the code changes to Adapter.java and BasicContext.java, Context.java and 
Controller.java in the impl package to support the hardStop() method.
Also replaced the call to adapter.stop() in 
org.eclipse.hyades.logging.adapter.ui.internal.views.AcadGuiModel with 
adapter.hardStop()
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>When rerunning the adapter in the Adapter Editor, Adapter.stop() is called to 
stop the previously running adapter.  Due to a timing issue, sometimes the 
previous adapter is still stopping, flushing the data in the context 
components, when the new one starts.  During the flushing it still calls the 
calls the context listener which populates the result queue but the result 
queue has been replaced by the new one.  When the new adapter runs and there is 
data in the result queue alread and it starts appending to it.  This results in 
inconsistent data between the Template Log view and the Ouputter Result view in 
the editor.

A solution is to add a hardStop method to the Adapter class that the Adapter 
editor can call that will result in the hardStop flag being set in the context 
which turns off flushing the data to the context listener.  A hardStop method 
is required in the Controller class that will set the hardStop flag in the 
contexts before calling their stop methods.
Made the code changes to Adapter.java and BasicContext.java, Context.java and 
Controller.java in the impl package to support the hardStop() method.
Also replaced the call to adapter.stop() in 
org.eclipse.hyades.logging.adapter.ui.internal.views.AcadGuiModel with 
adapter.hardStop()
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53945" />
    <CreationDate amount="2004-03-05 16:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Plugins from 2.1.2 workspace do not load when launching 3.0.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Launch Eclipse 2.1.1 pointing to a workspace that includes some Eclipse plug-ins.</Line>
          <Line>2. In PDE's "Target Platform" preference page, point it to an installation of Eclipse 3.0 M6.</Line>
          <Line>3. Launch a runtime workbench. Eclipse 3.0 M6 starts up, including the plug-ins in your</Line>
          <Line>workspace.</Line>
          <Line>4. In PDE's "Target Platform preference page, point it to an installation of Eclipse 3.0 M7.</Line>
          <Line>5. Launch a runtime workbench. Eclipse 3.0 M7 starts up, but doesn't include the plug-ins in your</Line>
          <Line>workspace.</Line>
          <Line>6. Setting breakpoints will hit the breakpoints in the Eclipse 3.0 M7 installation, not the breakpoints</Line>
          <Line>in your workspace version of the plug-ins.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have a workspace on a 2.1.2 workbench it has several plugins that also exist
in jars in the target image (May not be relevant).  If I target an M6 eclipse
with PDE, the workspace plugins load properly.  If I target an M7 build the
plugins no longer load.  I can set breakpoints while editing the source in the
workspace, but these are actually set in the target version of the plugins not
in the ones that would load from the workspace.  If the versions are
substantially different you can see the installed breakpoint marker appear on
non-executable lines and vice versa.

The problem could be in PDE, but I suspect a runtime problem is more likely.
Hi, Dave. I'm not sure I follow the description of your setup. Tell me if my interpretation is wrong.

1. Launch Eclipse 2.1.1 pointing to a workspace that includes some Eclipse plug-ins.
2. In PDE's "Target Platform" preference page, point it to an installation of Eclipse 3.0 M6.
3. Launch a runtime workbench. Eclipse 3.0 M6 starts up, including the plug-ins in your 
workspace.
4. In PDE's "Target Platform preference page, point it to an installation of Eclipse 3.0 M7.
5. Launch a runtime workbench. Eclipse 3.0 M7 starts up, but doesn't include the plug-ins in your 
workspace.
6. Setting breakpoints will hit the breakpoints in the Eclipse 3.0 M7 installation, not the breakpoints 
in your workspace version of the plug-ins.

Is this accurate?
Jared --

You've got it.  The breakpoint issue is just highlighting the fact that the 
loaded plugin is really just the one already in the target when it should be 
the one in the workspace, so its a symptom of the problem.  The problem is 
that the plugins in the workspace aren't loading.

-- Dave
Moving to PDE - PDE determines what plug-ins are loaded - i.e. from where in 
what order.
The runtime in 3.0 has changed drastically, and launching an OSGi-based 
runtime like the one in 3.0M7 requires a whole new set of rules.

In your case you are using a 2.x host platform to target a 3.0 platform.  Of 
course, one couldn't expect this to work, since this falls under forward-
compatibility ;-), which obviously isn't/couldn't be supported.

Back in the 2.x cycle, PDE could not predict the future.  Therefore, the PDE 
that comes with your 2.x platform cannot produce a runtime launch 
configuration that will be understood by the 3.0 OSGi runtime.

If you want to target a 3.0 platform, you must of course use a 3.0 platform as 
your host platform as well.

Of course, backward-compatibility is supported, so you could use a 3.0 
platform to target a 2.x platform.</WithStack>
    <WithOutStack>I have a workspace on a 2.1.2 workbench it has several plugins that also exist
in jars in the target image (May not be relevant).  If I target an M6 eclipse
with PDE, the workspace plugins load properly.  If I target an M7 build the
plugins no longer load.  I can set breakpoints while editing the source in the
workspace, but these are actually set in the target version of the plugins not
in the ones that would load from the workspace.  If the versions are
substantially different you can see the installed breakpoint marker appear on
non-executable lines and vice versa.

The problem could be in PDE, but I suspect a runtime problem is more likely.
Hi, Dave. I'm not sure I follow the description of your setup. Tell me if my interpretation is wrong.

1. Launch Eclipse 2.1.1 pointing to a workspace that includes some Eclipse plug-ins.
2. In PDE's "Target Platform" preference page, point it to an installation of Eclipse 3.0 M6.
3. Launch a runtime workbench. Eclipse 3.0 M6 starts up, including the plug-ins in your 
workspace.
4. In PDE's "Target Platform preference page, point it to an installation of Eclipse 3.0 M7.
5. Launch a runtime workbench. Eclipse 3.0 M7 starts up, but doesn't include the plug-ins in your 
workspace.
6. Setting breakpoints will hit the breakpoints in the Eclipse 3.0 M7 installation, not the breakpoints 
in your workspace version of the plug-ins.

Is this accurate?
Jared --

You've got it.  The breakpoint issue is just highlighting the fact that the 
loaded plugin is really just the one already in the target when it should be 
the one in the workspace, so its a symptom of the problem.  The problem is 
that the plugins in the workspace aren't loading.

-- Dave
Moving to PDE - PDE determines what plug-ins are loaded - i.e. from where in 
what order.
The runtime in 3.0 has changed drastically, and launching an OSGi-based 
runtime like the one in 3.0M7 requires a whole new set of rules.

In your case you are using a 2.x host platform to target a 3.0 platform.  Of 
course, one couldn't expect this to work, since this falls under forward-
compatibility ;-), which obviously isn't/couldn't be supported.

Back in the 2.x cycle, PDE could not predict the future.  Therefore, the PDE 
that comes with your 2.x platform cannot produce a runtime launch 
configuration that will be understood by the 3.0 OSGi runtime.

If you want to target a 3.0 platform, you must of course use a 3.0 platform as 
your host platform as well.

Of course, backward-compatibility is supported, so you could use a 3.0 
platform to target a 2.x platform.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53946" />
    <CreationDate amount="2004-03-05 16:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>[Keys] stack overflow on start up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="5">
      <Stacktrace timestamp="1437341095529">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1045)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:580)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1047)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:480)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)</Frame>
          <Frame depth="10">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341095529">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.debug.internal.core.LaunchManager.shutdown(LaunchManager.java:480)</Frame>
          <Frame depth="1">org.eclipse.debug.core.DebugPlugin.shutdown(DebugPlugin.java:435)</Frame>
          <Frame depth="2">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
          <Frame depth="4">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1025)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:580)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1047)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:480)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)</Frame>
          <Frame depth="15">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341095529">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1045)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:580)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1047)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:480)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)</Frame>
          <Frame depth="10">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341095529">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.launching.LaunchingPlugin.shutdown(LaunchingPlugin.java:359)</Frame>
          <Frame depth="1">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
          <Frame depth="3">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1025)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:580)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1047)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:480)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)</Frame>
          <Frame depth="14">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341095529">
        <Exception>ava.lang.StackOverflowError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.WeakHashMap.expungeStaleEntries(WeakHashMap.java:263)</Frame>
          <Frame depth="1">java.util.WeakHashMap.getTable(WeakHashMap.java:292)</Frame>
          <Frame depth="2">java.util.WeakHashMap.get(WeakHashMap.java:336)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.activities.MutableActivityManager.getIdentifier(MutableActivityManager.java:126)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.activities.ProxyActivityManager.getIdentifier(ProxyActivityManager.java:68)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench$13.isActive(Workbench.java:843)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.isCommandActive(ActionContributionItem.java:588)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.isVisible(ActionContributionItem.java:637)</Frame>
          <Frame depth="8">org.eclipse.jface.action.MenuManager.isVisible(MenuManager.java:446)</Frame>
          <Frame depth="9">org.eclipse.jface.action.MenuManager.update(MenuManager.java:547)</Frame>
          <Frame depth="10">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="11">org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)</Frame>
          <Frame depth="12">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager(Workbench.java:1977)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench$1.commandManagerChanged(Workbench.java:1934)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged(CommandManager.java:283)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId(CommandManager.java:766)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmissions(WorkbenchCommandSupport.java:304)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.addHandlerSubmissions(WorkbenchCommandSupport.java:166)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.KeyBindingService.registerAction(KeyBindingService.java:385)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:41)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:28)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu(BuildMenuAction.java:35)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu(BuildMenuAction.java:58)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu(WWinPluginPulldown.java:38)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:297)</Frame>
          <Frame depth="27">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58)</Frame>
          <Frame depth="28">org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)</Frame>
          <Frame depth="29">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="30">org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)</Frame>
          <Frame depth="31">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager(Workbench.java:1977)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench$1.commandManagerChanged(Workbench.java:1934)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged(CommandManager.java:283)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId(CommandManager.java:766)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmissions(WorkbenchCommandSupport.java:304)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.removeHandlerSubmissions(WorkbenchCommandSupport.java:338)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.KeyBindingService.unregisterAction(KeyBindingService.java:464)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.KeyBindingService.registerAction(KeyBindingService.java:359)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:41)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:28)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu(BuildMenuAction.java:35)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu(BuildMenuAction.java:58)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu(WWinPluginPulldown.java:38)</Frame>
          <Frame depth="46">org.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:297)</Frame>
          <Frame depth="47">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58)</Frame>
          <Frame depth="48">org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)</Frame>
          <Frame depth="49">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="50">org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)</Frame>
          <Frame depth="51">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager(Workbench.java:1977)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.Workbench$1.commandManagerChanged(Workbench.java:1934)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged(CommandManager.java:283)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId(CommandManager.java:766)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmissions(WorkbenchCommandSupport.java:304)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.addHandlerSubmissions(WorkbenchCommandSupport.java:166)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.KeyBindingService.registerAction(KeyBindingService.java:385)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:41)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;(BuildAllAction.java:28)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu(BuildMenuAction.java:35)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu(BuildMenuAction.java:58)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu(WWinPluginPulldown.java:38)</Frame>
          <Frame depth="65">org.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:297)</Frame>
          <Frame depth="66">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58)</Frame>
          <Frame depth="67">org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)</Frame>
          <Frame depth="68">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="69">org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)</Frame>
          <Frame depth="70">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager(Workbench.java:1977)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench$1.commandManagerChanged(Workbench.java:1934)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- install I0304 in an empty location and make sure that this location is</Line>
          <Line>writable</Line>
          <Line>- install the org.eclipse.ui.newbuild plugin (bug #53565)</Line>
          <Line>- create a shortcut that points to a non existing workspace.</Line>
          <Line>- run.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build I20040304  Sun JDK 1.4.2 -Xmx150M

I have an existing workspace that I had been using with I20040226. I'm unable 
to start Eclipse with this workspace:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 05, 2004 16:16:05.31
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.StackOverflowError
I have a further incident to report, this time with I20040304 (Sun JDK 1.4.2 -
Xmx256M) and a different workspace. I had started, done a bunch of cleanup. 
After doing a built I got a stack overflow; I immedaitely existed the 
workspace. Now I'm unable to restart Eclipse. Here's the excerpt from the log. 
I conjecture two things: (1) when you immediately exit after a stack overflow 
exception, you corrupt your workspace (somehow); (2) the corruption causes the 
core.runtime to freak out on start up (it should be more robust).

!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
!SESSION Mar 09, 2004 08:05:51.957 --------------------------------------------
-
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -data d:\junquews\plugins
!ENTRY reference:file:d:/eclipse-SDK-I20040304-
win32/eclipse/plugins/org.eclipse.debug.core_3.0.0/ 0 0 Mar 09, 2004 
08:05:51.957
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend
(Bundle.java:580)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle
(Framework.java:1047)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL
(StartLevelImpl.java:626)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel
(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown
(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend
(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:480)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:534)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.debug.internal.core.LaunchManager.shutdown
(LaunchManager.java:480)
	at org.eclipse.debug.core.DebugPlugin.shutdown(DebugPlugin.java:435)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1025)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend
(Bundle.java:580)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle
(Framework.java:1047)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL
(StartLevelImpl.java:626)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel
(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown
(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend
(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:480)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:534)
!ENTRY reference:file:d:/eclipse-SDK-I20040304-
win32/eclipse/plugins/org.eclipse.jdt.launching_3.0.0/ 0 0 Mar 09, 2004 
08:05:52.04
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend
(Bundle.java:580)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle
(Framework.java:1047)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL
(StartLevelImpl.java:626)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel
(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown
(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend
(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:480)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:534)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.jdt.internal.launching.LaunchingPlugin.shutdown
(LaunchingPlugin.java:359)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1025)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend
(Bundle.java:580)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle
(Framework.java:1047)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL
(StartLevelImpl.java:626)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel
(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown
(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend
(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:480)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:534)

The experimental org.eclipse.core.newbuild plug-in seems to be the culprit 
(somehow).  If I rename org.eclipse.core.newbuild/plugin.xml to plugin.xmloff,
delete the workspace, delete eclipse/configuration, and relaunch, it comes up.

I've been able to reproduce the problem. Here are the steps:
- install I0304 in an empty location and make sure that this location is 
writable
- install the org.eclipse.ui.newbuild plugin (bug #53565)
- create a shortcut that points to a non existing workspace.
- run.

You'll get the following stackOverFlow.
ava.lang.StackOverflowError
	at java.util.WeakHashMap.expungeStaleEntries(WeakHashMap.java:263)
	at java.util.WeakHashMap.getTable(WeakHashMap.java:292)
	at java.util.WeakHashMap.get(WeakHashMap.java:336)
	at 
org.eclipse.ui.internal.activities.MutableActivityManager.getIdentifier
(MutableActivityManager.java:126)
	at org.eclipse.ui.internal.activities.ProxyActivityManager.getIdentifier
(ProxyActivityManager.java:68)
	at org.eclipse.ui.internal.Workbench$13.isActive(Workbench.java:843)
	at org.eclipse.jface.action.ActionContributionItem.isCommandActive
(ActionContributionItem.java:588)
	at org.eclipse.jface.action.ActionContributionItem.isVisible
(ActionContributionItem.java:637)
	at org.eclipse.jface.action.MenuManager.isVisible(MenuManager.java:446)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:547)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at 
org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager
(Workbench.java:1977)
	at org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)
	at org.eclipse.ui.internal.Workbench$1.commandManagerChanged
(Workbench.java:1934)
	at 
org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged
(CommandManager.java:283)
	at 
org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId
(CommandManager.java:766)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmis
sions(WorkbenchCommandSupport.java:304)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.addHandlerSubmission
s(WorkbenchCommandSupport.java:166)
	at org.eclipse.ui.internal.KeyBindingService.registerAction
(KeyBindingService.java:385)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:41)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:28)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu
(BuildMenuAction.java:35)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu
(BuildMenuAction.java:58)
	at org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu
(WWinPluginPulldown.java:38)
	at org.eclipse.jface.action.ActionContributionItem.fill
(ActionContributionItem.java:297)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:58)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at 
org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager
(Workbench.java:1977)
	at org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)
	at org.eclipse.ui.internal.Workbench$1.commandManagerChanged
(Workbench.java:1934)
	at 
org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged
(CommandManager.java:283)
	at 
org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId
(CommandManager.java:766)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmis
sions(WorkbenchCommandSupport.java:304)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.removeHandlerSubmiss
ions(WorkbenchCommandSupport.java:338)
	at org.eclipse.ui.internal.KeyBindingService.unregisterAction
(KeyBindingService.java:464)
	at org.eclipse.ui.internal.KeyBindingService.registerAction
(KeyBindingService.java:359)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:41)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:28)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu
(BuildMenuAction.java:35)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu
(BuildMenuAction.java:58)
	at org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu
(WWinPluginPulldown.java:38)
	at org.eclipse.jface.action.ActionContributionItem.fill
(ActionContributionItem.java:297)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:58)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at 
org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager
(Workbench.java:1977)
	at org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)
	at org.eclipse.ui.internal.Workbench$1.commandManagerChanged
(Workbench.java:1934)
	at 
org.eclipse.ui.internal.commands.CommandManager.fireCommandManagerChanged
(CommandManager.java:283)
	at 
org.eclipse.ui.internal.commands.CommandManager.setHandlersByCommandId
(CommandManager.java:766)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.processHandlerSubmis
sions(WorkbenchCommandSupport.java:304)
	at 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.addHandlerSubmission
s(WorkbenchCommandSupport.java:166)
	at org.eclipse.ui.internal.KeyBindingService.registerAction
(KeyBindingService.java:385)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:41)
	at org.eclipse.ui.internal.newbuild.BuildAllAction.&lt;init&gt;
(BuildAllAction.java:28)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.fillMenu
(BuildMenuAction.java:35)
	at org.eclipse.ui.internal.newbuild.BuildMenuAction.getMenu
(BuildMenuAction.java:58)
	at org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu
(WWinPluginPulldown.java:38)
	at org.eclipse.jface.action.ActionContributionItem.fill
(ActionContributionItem.java:297)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:58)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:622)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697)
	at 
org.eclipse.ui.internal.Workbench.updateActiveWorkbenchWindowMenuManager
(Workbench.java:1977)
	at org.eclipse.ui.internal.Workbench.access$0(Workbench.java:1967)
	at org.eclipse.ui.internal.Workbench$1.commandManagerChanged
(Workbench.java:1934)
It is strange that I have not seen this in my workspace, where I have had the
newbuild plugin installed for awhile.

This plugin has a IWorkbenchWindowPulldownDelegate2 that dynamically creates a
sub-menu in the project menu.  One of the actions I add to this menu registers
itself with the keybinding service so that it's accelerator can be used. This
causes a circularity when the keybinding update refreshes all of the menus.
Since newbuild is a simple plug-in that is just using simple workbench API, I
suspect the problem is in the workbench.
I rebound Ctrl+B to one of that plug-ins new commands. This is probably the 
one difference between John A.'s setup and mine.
kim, can you please isolate why this stack overflow would occur in WeakHashMap? i can help you if you get stuck.. thanks
From looking at the stack trace, I think WeakHashMap is an innocent bystander. 
It looks like KeyBindingService.registerAction is getting re-entered.

I've taken a look at the full stack trace and I have to agree with Jim... should
an action be performing registrations on the key binding service?
I'm not sure who is responsible for this "newbuild" plug-in, but I'd like to  
place blame on it.  And, since it's experimental, I might just get away with  
it.  :)  
  
I have no code for the "newbuild" plug-in, so some of this is educated  
guessing.  
  
BuildMenuAction has a fill method that creates the actions it needs to fill the  
menu.  This would be okay, but one of the actions it creates is BuildAllAction.   
BuildAllAction registers itself in the constructor.  Perhaps we should add a  
note to the "registerAction" method, but this is a bad idea.  
  
When you register an action, you are (potentially) providing a new user  
interface element -- to the menu bar, cool bar, status line or pop-up menu.   
This means that we must check to see whether we need to repaint.  Updates are  
called, and eventually BuildMenuAction gets recognized as something new.  It  
gets told to fill, and the loop begins....  
  
Another way to avoid this might be to create the sub-actions (e.g.,  
BuildAllAction) in the constructor of BuildMenuAction.  I'm not sure if this  
would work, but I'd thought I'd mention....  
  
Punting this bug back to Jim, as he knows who owns "newbuild"....  
I won't denounce, but the code is included into the bug referenced in comment 
#3.
Heh.  Hiding your stuff in other bugs, are you?  I've talked to John, and I 
think we've worked out a solution. 
 
It is possible to defend against re-entrance by using a locking flag of some 
sort, but this seems like a bit of a hack.  Plus, I think it could lead to a 
corrupted state (by allowing 1.5 fills to complete). 
I will take ownership... It is interesting to note that it only starting failing
in this way with the 20040304 build, it did not fail with the 20040226 build.  I
suspect a recent change in the platform exposed this?
The problem is that a window listener now gets attached to the workbench 
window.  When the window activates, it calls the update on MenuManager -- which 
in turns causes the fill.  This is perhaps a bit too eager.  I've filed Bug 
54205 to cover the issue of premature plug-in loading. 
 
(I wish there was a "show all changes in this call hierarchy since XXXX-XX-XX" 
option provided by Team.  It would really just be a bad ass filter on top of 
existing CVS functionality.) 
I have removed key binding support altogether for the dynamically created
actions. The prototype is still usable as "Repeat Last Build" can still be bound
to Ctrl+B. When the plug-in becomes part of the workbench it will have access to
3.0 APIs that allow a dynamically created action to register with the command
manager.

The approach of using the active part's keybinding service was wrong anyway.  As
soon as the part that happened to be open on startup was closed, the keybinding
would no longer work.  There was no API in 2.1 for registering a dynamic action
with the key binding service outside of the context of a part. (I could have
used non-API method WorkbenchWindow.getKeybindingService() in 2.1 but this does
not exist in 3.0).

Jeem: I have attached a new version of the prototype in bug 53565.
Doug: the clincher is that I needed to write a single plug-in that works in both
2.1 and 3.0 - not as easy as it may sound!</WithStack>
    <WithOutStack>Build I20040304  Sun JDK 1.4.2 -Xmx150M

I have an existing workspace that I had been using with I20040226. I'm unable 
to start Eclipse with this workspace:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 05, 2004 16:16:05.31
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.StackOverflowError
I have a further incident to report, this time with I20040304 (Sun JDK 1.4.2 -
Xmx256M) and a different workspace. I had started, done a bunch of cleanup. 
After doing a built I got a stack overflow; I immedaitely existed the 
workspace. Now I'm unable to restart Eclipse. Here's the excerpt from the log. 
I conjecture two things: (1) when you immediately exit after a stack overflow 
exception, you corrupt your workspace (somehow); (2) the corruption causes the 
core.runtime to freak out on start up (it should be more robust).

!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
!SESSION Mar 09, 2004 08:05:51.957 --------------------------------------------
-
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -data d:\junquews\plugins
!ENTRY reference:file:d:/eclipse-SDK-I20040304-
win32/eclipse/plugins/org.eclipse.debug.core_3.0.0/ 0 0 Mar 09, 2004 
08:05:51.957
!MESSAGE FrameworkEvent.ERROR
!STACK 0
Nested exception:
!ENTRY reference:file:d:/eclipse-SDK-I20040304-
win32/eclipse/plugins/org.eclipse.jdt.launching_3.0.0/ 0 0 Mar 09, 2004 
08:05:52.04
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend
(Bundle.java:580)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle
(Framework.java:1047)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL
(StartLevelImpl.java:626)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel
(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown
(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend
(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:480)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:534)
Nested exception:

The experimental org.eclipse.core.newbuild plug-in seems to be the culprit 
(somehow).  If I rename org.eclipse.core.newbuild/plugin.xml to plugin.xmloff,
delete the workspace, delete eclipse/configuration, and relaunch, it comes up.

I've been able to reproduce the problem. Here are the steps:
- install I0304 in an empty location and make sure that this location is 
writable
- install the org.eclipse.ui.newbuild plugin (bug #53565)
- create a shortcut that points to a non existing workspace.
- run.

You'll get the following stackOverFlow.

It is strange that I have not seen this in my workspace, where I have had the
newbuild plugin installed for awhile.

This plugin has a IWorkbenchWindowPulldownDelegate2 that dynamically creates a
sub-menu in the project menu.  One of the actions I add to this menu registers
itself with the keybinding service so that it's accelerator can be used. This
causes a circularity when the keybinding update refreshes all of the menus.
Since newbuild is a simple plug-in that is just using simple workbench API, I
suspect the problem is in the workbench.
I rebound Ctrl+B to one of that plug-ins new commands. This is probably the 
one difference between John A.'s setup and mine.
kim, can you please isolate why this stack overflow would occur in WeakHashMap? i can help you if you get stuck.. thanks
From looking at the stack trace, I think WeakHashMap is an innocent bystander. 
It looks like KeyBindingService.registerAction is getting re-entered.

I've taken a look at the full stack trace and I have to agree with Jim... should
an action be performing registrations on the key binding service?
I'm not sure who is responsible for this "newbuild" plug-in, but I'd like to  
place blame on it.  And, since it's experimental, I might just get away with  
it.  :)  
  
I have no code for the "newbuild" plug-in, so some of this is educated  
guessing.  
  
BuildMenuAction has a fill method that creates the actions it needs to fill the  
menu.  This would be okay, but one of the actions it creates is BuildAllAction.   
BuildAllAction registers itself in the constructor.  Perhaps we should add a  
note to the "registerAction" method, but this is a bad idea.  
  
When you register an action, you are (potentially) providing a new user  
interface element -- to the menu bar, cool bar, status line or pop-up menu.   
This means that we must check to see whether we need to repaint.  Updates are  
called, and eventually BuildMenuAction gets recognized as something new.  It  
gets told to fill, and the loop begins....  
  
Another way to avoid this might be to create the sub-actions (e.g.,  
BuildAllAction) in the constructor of BuildMenuAction.  I'm not sure if this  
would work, but I'd thought I'd mention....  
  
Punting this bug back to Jim, as he knows who owns "newbuild"....  
I won't denounce, but the code is included into the bug referenced in comment 
#3.
Heh.  Hiding your stuff in other bugs, are you?  I've talked to John, and I 
think we've worked out a solution. 
 
It is possible to defend against re-entrance by using a locking flag of some 
sort, but this seems like a bit of a hack.  Plus, I think it could lead to a 
corrupted state (by allowing 1.5 fills to complete). 
I will take ownership... It is interesting to note that it only starting failing
in this way with the 20040304 build, it did not fail with the 20040226 build.  I
suspect a recent change in the platform exposed this?
The problem is that a window listener now gets attached to the workbench 
window.  When the window activates, it calls the update on MenuManager -- which 
in turns causes the fill.  This is perhaps a bit too eager.  I've filed Bug 
54205 to cover the issue of premature plug-in loading. 
 
(I wish there was a "show all changes in this call hierarchy since XXXX-XX-XX" 
option provided by Team.  It would really just be a bad ass filter on top of 
existing CVS functionality.) 
I have removed key binding support altogether for the dynamically created
actions. The prototype is still usable as "Repeat Last Build" can still be bound
to Ctrl+B. When the plug-in becomes part of the workbench it will have access to
3.0 APIs that allow a dynamically created action to register with the command
manager.

The approach of using the active part's keybinding service was wrong anyway.  As
soon as the part that happened to be open on startup was closed, the keybinding
would no longer work.  There was no API in 2.1 for registering a dynamic action
with the key binding service outside of the context of a part. (I could have
used non-API method WorkbenchWindow.getKeybindingService() in 2.1 but this does
not exist in 3.0).

Jeem: I have attached a new version of the prototype in bug 53565.
Doug: the clincher is that I needed to write a single plug-in that works in both
2.1 and 3.0 - not as easy as it may sound!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53947" />
    <CreationDate amount="2004-03-05 16:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Implement Optimized Heap Collection when server=standalone</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>For details see
http://dbuwww/BlueRat/LeakAnalysis/Doc/HyadesOptimizedHeapAgentSDD.doc
Oops.. I did not give the full path name to the server.

That should be:
http://dbuwww.cupertino.ibm.com/BlueRat/LeakAnalysis/Doc/HyadesOptimizedHeapAgen
tSDD.doc
The agent now supports the collection of optimized heaps in both standalone as 
well as connected server modes. Thanks to Piyush Agarwal and Satish Gupta in 
India for the developement work.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>For details see
http://dbuwww/BlueRat/LeakAnalysis/Doc/HyadesOptimizedHeapAgentSDD.doc
Oops.. I did not give the full path name to the server.

That should be:
http://dbuwww.cupertino.ibm.com/BlueRat/LeakAnalysis/Doc/HyadesOptimizedHeapAgen
tSDD.doc
The agent now supports the collection of optimized heaps in both standalone as 
well as connected server modes. Thanks to Piyush Agarwal and Satish Gupta in 
India for the developement work.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53948" />
    <CreationDate amount="2004-03-05 16:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>code completion does not generate methods for full hierarchy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="import">
        <location start="57" end="112" />
        <code>import org.eclipse.jface.viewers.ITreeContentProvider;</code>
      </source_code>
      <source_code type="import">
        <location start="113" end="157" />
        <code>import org.eclipse.jface.viewers.TreeViewer;</code>
      </source_code>
      <source_code type="import">
        <location start="158" end="185" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="186" end="218" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="import">
        <location start="219" end="252" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="254" end="273" />
        <code>public class Main {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="274" end="315" />
        <code>public static void main(String[] args) {</code>
      </source_code>
      <source_code type="assignment">
        <location start="316" end="350" />
        <code>Display display = new Display();</code>
      </source_code>
      <source_code type="assignment">
        <location start="351" end="386" />
        <code>Shell shell = new Shell(display);</code>
      </source_code>
      <source_code type="assignment">
        <location start="387" end="427" />
        <code>Tree tree = new Tree(shell, SWT.NONE);</code>
      </source_code>
      <source_code type="assignment">
        <location start="428" end="471" />
        <code>TreeViewer viewer = new TreeViewer(tree);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>0304 build

I start with the following in a java editor:

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.*;
import org.eclipse.swt.widgets.*;

public class Main {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		Tree tree = new Tree(shell, SWT.NONE);
		TreeViewer viewer = new TreeViewer(tree);
		viewer.setContentProvider(new ITreeContentProvider(

At this point I press Ctrl+Space and it generates the required 
ITreeContentProvider methods.  However I'm left with a red X because there are 
two inherited methods from IContentProvider that were not generated.  These 
should get generated as well, right?
Methods generation is JDT/UI code.

Move to JDT/UI
Grant, I can't reproduce this. Do you have anything in the log ?
Using this morning's integration build this works for me now, so I'll close 
this report.  I don't have my old workspace around, so I don't know if there 
was an error causing the problem behaviour the first time around.</WithStack>
    <WithOutStack>0304 build

I start with the following in a java editor:

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.*;
import org.eclipse.swt.widgets.*;

public class Main {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		Tree tree = new Tree(shell, SWT.NONE);
		TreeViewer viewer = new TreeViewer(tree);
		viewer.setContentProvider(new ITreeContentProvider(

At this point I press Ctrl+Space and it generates the required 
ITreeContentProvider methods.  However I'm left with a red X because there are 
two inherited methods from IContentProvider that were not generated.  These 
should get generated as well, right?
Methods generation is JDT/UI code.

Move to JDT/UI
Grant, I can't reproduce this. Do you have anything in the log ?
Using this morning's integration build this works for me now, so I'll close 
this report.  I don't have my old workspace around, so I don't know if there 
was an error causing the problem behaviour the first time around.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53949" />
    <CreationDate amount="2004-03-05 17:08:00 -0500" />
    <DupId amount="53633" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ArithmeticException: divde by zero in log file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095532">
        <Exception>java.lang.ArithmeticException</Exception>
        <Reason>/ by zero</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey(CompletionProposalPopup.java:603)</Frame>
          <Frame depth="1">org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKey(ContentAssistant.java:624)</Frame>
          <Frame depth="2">org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:378)</Frame>
          <Frame depth="3">org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:55)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:956)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:980)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:965)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:835)</Frame>
          <Frame depth="9">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5325)</Frame>
          <Frame depth="10">org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:5070)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:956)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:980)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:965)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2239)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1751)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:441)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1217)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.windowProc(Display.java:2362)</Frame>
          <Frame depth="20">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.eventProc(Display.java:728)</Frame>
          <Frame depth="22">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1650)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)</Frame>
          <Frame depth="27">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20040304

I've found a couple of divide by zero exceptions in my log file coming from
content assist. I haven't found the case to reproduce.
!ENTRY org.eclipse.ui 4 0 Mar 05, 2004 12:03:27.588
!MESSAGE / by zero
!STACK 0
java.lang.ArithmeticException: / by zero
        at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey(CompletionProposalPopup.java:603)
        at
org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKey(ContentAssistant.java:624)
        at
org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:378)
        at
org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:55)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:956)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:980)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:965)
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:835)
        at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5325)
        at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:5070)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:956)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:980)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:965)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2239)
        at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1751)
        at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:441)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1217)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:2362)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
        at org.eclipse.swt.widgets.Display.eventProc(Display.java:728)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1650)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:305)


*** This bug has been marked as a duplicate of 53633 ***</WithStack>
    <WithOutStack>I20040304

I've found a couple of divide by zero exceptions in my log file coming from
content assist. I haven't found the case to reproduce.
!ENTRY org.eclipse.ui 4 0 Mar 05, 2004 12:03:27.588
!MESSAGE / by zero
!STACK 0



*** This bug has been marked as a duplicate of 53633 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53950" />
    <CreationDate amount="2004-03-05 17:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Out of Memory error changing compiler prefs with 10 projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095593">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:394)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.doFullBuild(OptionsConfigurationBlock.java:428)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.performOk(OptionsConfigurationBlock.java:417)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.preferences.CompilerPreferencePage.performOk(CompilerPreferencePage.java:74)</Frame>
          <Frame depth="5">org.eclipse.jface.preference.PreferenceDialog.okPressed(PreferenceDialog.java:777)</Frame>
          <Frame depth="6">org.eclipse.jface.preference.PreferenceDialog.buttonPressed(PreferenceDialog.java:210)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.buttonPressed(WorkbenchPreferenceDialog.java:75)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.runEventLoop(Window.java:638)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.open(Window.java:618)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="17">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:502)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:435)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)</Frame>
          <Frame depth="28">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="30">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="32">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="6575" end="6630" />
        <code>IType baseTypeElement = javaProject.findType(baseType);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="6631" end="6663" />
        <code>if (baseTypeElement != null) {
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="6664" end="6811" />
        <code>if (baseInterface != null) {
  IJavaElement baseInterfaceElement = javaProject.findType(baseInterface);
  if (baseInterfaceElement != null) {
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="4">
        <Lines>
          <Line>2) Opened preferences and set the Java &gt; compiler &gt; Unused Imports option to</Line>
          <Line>error</Line>
          <Line>3) dialog prompts for a rebuild due to the change, say yes (or ok?)</Line>
          <Line>4) out of memory error during rebuild.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- 6Mb for Empty workspace open on Java perspective</Line>
          <Line>- 19Mb for Big workspace open on Resource perspective</Line>
          <Line>- 37Mb for Big workspace open on Java perspective</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- first full clean/build started with 37Mb allocated &amp; peaked at 126Mb... it</Line>
          <Line>took 3:30 &amp; after GC heap was at 53Mb... after the periodic workspace save,</Line>
          <Line>the heap dropped to 50Mb</Line>
          <Line>- did another full clean/build, which started with 50Mb allocated... it took</Line>
          <Line>3:19 &amp; after GC heap was at 53Mb... after the periodic workspace save, the</Line>
          <Line>heap dropped to 50Mb also</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20040304

1 )load all of Platform UI projects + SWT and SWT win32.  
2) Opened preferences and set the Java &gt; compiler &gt; Unused Imports option to 
error
3) dialog prompts for a rebuild due to the change, say yes (or ok?)
4) out of memory error during rebuild.



!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:394)
	at 
org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.doFullBuild
(OptionsConfigurationBlock.java:428)
	at 
org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.performOk
(OptionsConfigurationBlock.java:417)
	at 
org.eclipse.jdt.internal.ui.preferences.CompilerPreferencePage.performOk
(CompilerPreferencePage.java:74)
	at org.eclipse.jface.preference.PreferenceDialog.okPressed
(PreferenceDialog.java:777)
	at org.eclipse.jface.preference.PreferenceDialog.buttonPressed
(PreferenceDialog.java:210)
	at 
org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.buttonPressed
(WorkbenchPreferenceDialog.java:75)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:638)
	at org.eclipse.jface.window.Window.open(Window.java:618)
	at org.eclipse.ui.internal.OpenPreferencesAction.run
(OpenPreferencesAction.java:72)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Caused by: java.lang.OutOfMemoryError
Moving to JDT for investigation. The stack track is only showing the one thread, but the problem seems 
like it must be somewhere else.

Mike, how much memory were you running with? Is this repeatable?
this is how I start eclipse


eclipse -vm d:\jdk1.4.1_01\jre\bin\java -data C:\workspaces\HEAD -debug

no extra memory options.  I have not had this happen again yet.
Must be standard memory peak during compile.
We could reduce the amount of files built at once so as to reduce the peak, and 
make the build take longer, but this would need to be adjusted based on 
available memory.
Sounds like another place where knowing when memory was constrained would be useful.

Changing the memory requirement from -Xmx256Mb back to defaults is a major 
issue for us, as compiling, searching are memory intensive.
We have to revisit all our algorithms/heuristics to take this new requirement 
into account, and this is not compatible with 1.5 effort.
relax. at this point, i've just been floating the idea that we need to think about working more effectively 
in low memory configurations. i have *not* suggested that we go back to the defaults. 

honestly though, to me it seems that if you are implementing something that takes a lot of memory (as 
this appears to) then you need to at least think about watching for low memory conditions. remember: 
if the vm runs out of memory then you can not trust *anything* about the memory state afterwards. it 
is essentially a completely unrecoverable state.

can you estimate how much memory you are likely to use for a given compile?

All I tried to explain (still relaxed) is that we made our algorithms behave on 
VMs which had a decent amount of memory (-Xmx256Mb). For the past years, we 
instructed our users to add this command line arg each time they would get an 
OutOfMemoryError. This is why the memory requirement is a very delicate 
question for us. 

We are bounding some tasks already (compile 1000 files at once, search 500 
files at once, ...). We could make these numbers smaller but this will take 
real investigation to get to an acceptable compromise (compile 500 files at 
once means perform 2 separate compilations, thus load/parse common referenced 
classfiles twice, open zips twice, etc...). 


Ran some build tests (with jdk 1.4.2) on Jeff's big eclipse workspace (based 
on a 2.1 drop, 134 projects, 16,240 .java files, 12,436 .class files) &amp; 
watched the heap size &amp; peak.

The heap starts at 44Mb with the Java perspective open but no editors. Why so 
much? Don't know... an empty workspace with the Java perspective open takes 
6Mb. That's 38Mb to put 134 projects in the package explorer!

With the Resource perspective open instead of the Java perspective, the heap 
is at 30Mb... closing it &amp; opening the Java perspective takes us up to 44Mb... 
so what is in the 24Mb (30-6) to open the Resource perspective?


After each full build &amp; a GC, the heap settles down to 59Mb, regardless of 
peak. Need to look into the retained 15Mb... build states?

Could not complete the full build with the default 64Mb or 75Mb, ran out of 
memory.

With 80Mb, the heap grew to 75Mb &amp; did most of the build b/w 67-75. It took 
4:04.

With 96Mb, the heap grew to 89Mb &amp; took 3:30.

With 160/250Mb, the heap grew to 128/129Mb &amp; took 3:17-3:22.

So we definitely reach a point where the VM won't use more memory even though 
its available.

I also varied the # of files compiled in each compile loop from 100 to 200 to 
500 to our normal 1000 (only a few projects have &gt;250 source files... jdt.core 
@ 813 &amp; ui.workbench @ 697 are the biggest)... memory usage did not drop, but 
build times went up.

If we could reduce the 24-38Mb just to start up the workspace, we could 
possibly build in the default 64Mb, but for performance reasons we should 
continue to recommend at least 128Mb.
The Resource tree is likely taking most of the ~24Mb (30-6) growth (delta to 
open big workspace with Resource perspective).

6Mb of the 12-14Mb (42/44-30) is from the AllTypesCache. The build states &amp; 
reference info do not account for any of the other 6-8Mb since a build hasn't 
happened yet... need to track this down.

But the states &amp; reference info do account for 7 of the 15Mb growth (actually 
it looks to be only 11Mb growth... need to wait 1 minute for another GC to 
reclaim more) after the first full build is complete... need to find the other 
~5Mb.
With today's M9 build (20040519) on jdk1.4.2, I see the heap at:

- 6Mb for Empty workspace open on Java perspective
- 19Mb for Big workspace open on Resource perspective
- 37Mb for Big workspace open on Java perspective

Tried some full build tests with -Xmx128M
- first full clean/build started with 37Mb allocated &amp; peaked at 126Mb... it 
took 3:30 &amp; after GC heap was at 53Mb... after the periodic workspace save, 
the heap dropped to 50Mb
- did another full clean/build, which started with 50Mb allocated... it took 
3:19 &amp; after GC heap was at 53Mb... after the periodic workspace save, the 
heap dropped to 50Mb also


So based on these numbers, I'm seeing 13Mb (19-6) for the resource tree &amp; 
unknowns... 18Mb (37-19) for the AllTypesCache &amp; unknowns... 13Mb (50-37) for 
build states, reference info &amp; unknowns
Should also add...

- 4Mb for Empty workspace open on Resource perspective
So that would be:

15Mb (19-4) for the resource tree &amp; unknowns
16Mb (37-6-15) for the AllTypesCache &amp; unknowns
13Mb (50-37) for build states, reference info &amp; unknowns
Breaking down the 12-13Mb growth from a full build...

We end up compiling 8,469 source files into 13,690 .class files. The earlier # 
in comment 8 of 16,240 source files includes all the source files used by the 
tests &amp; are not compiled during a build.

We create &amp; keep 1 ReferenceCollection per source file. Each 
ReferenceCollection has 2 arrays of interned compound char[][] &amp; simple char
[]. Adding it up, I'm seeing 3Mb for the ReferenceCollections(2) &amp; intern sets
(1).

A decent chunk of the build growth (4-5Mb) is from the JavaModelCache, which 
is being populated during builds from ManifestConsistencyChecker.validJava(), 
which calls JavaProject.findType(), for tons of types!
Can someone please tell me why anyone would write code like this!!!!

IType baseTypeElement = javaProject.findType(baseType);
if (baseTypeElement != null) {
}
if (baseInterface != null) {
  IJavaElement baseInterfaceElement = javaProject.findType(baseInterface);
  if (baseInterfaceElement != null) {
  }
}

And no I didn't remove the contents of the blocks...
Please enter a defect against PDE for the ManifestConsistencyChecker. It 
shouldn't programmatically cause the model to be largely populated for free.
ManifestConsistencyChecker.validJava() is populating the JavaModel to the tune 
of ~3Mb... see bug 63438.
Released a change to reclaim 900K out of the build states, by sharing some char
[] using String.subString().
Status: some fixes made. confirm we are not populating java model. open other 
defects (if discovered).

Must assess by RC3.
Tests with RC2 - default memory :
Now, there's no Out Of Memory on initial test case (ie. with 12 org.eclipse.ui.*
+ 2 org.eclipse.swt.* projects).
It also works with 56 projects loaded in my workspace (pde-ui project and all
its pre-req...).
However, OOM still happens while performing full build on 87 loaded projects in
workspace...

Set this bug fixed as this clearly demonstrates that we've improved performance
on initial test case. If number of projects is too large, then finally there
won't be other solution than apply initial workaround and modify VM heap size...


I confirm that Java Model is populated *only* when Plug-in Development -&gt;
Compiler -&gt; Unknown classes is activated.
Although 2 unnecessary findType(...) calls were removed in validateJava(...)
method of ManifestConsistencyChecker, there's still one call remaining despite
of what is said in bug 63438 comment 2...
I will make some additional tests to in order to size memory still consumed by
this remaining call and append results to that bug...
Note that when PDE compiler option is activated then OutOfMemory error happens
during full build in workspace with 56 projects.
The limit with this option is 46 projects (jdt-ui plugin + all its pre-req)...
I will reopen bug 63438 as PDE option still populates java model and so consumes
memory unnecessarily...
Verified for 3.0RC3 I200406180800</WithStack>
    <WithOutStack>build I20040304

1 )load all of Platform UI projects + SWT and SWT win32.  
2) Opened preferences and set the Java &gt; compiler &gt; Unused Imports option to 
error
3) dialog prompts for a rebuild due to the change, say yes (or ok?)
4) out of memory error during rebuild.



!MESSAGE Internal Error
!STACK 0

Caused by: java.lang.OutOfMemoryError
Moving to JDT for investigation. The stack track is only showing the one thread, but the problem seems 
like it must be somewhere else.

Mike, how much memory were you running with? Is this repeatable?
this is how I start eclipse


eclipse -vm d:\jdk1.4.1_01\jre\bin\java -data C:\workspaces\HEAD -debug

no extra memory options.  I have not had this happen again yet.
Must be standard memory peak during compile.
We could reduce the amount of files built at once so as to reduce the peak, and 
make the build take longer, but this would need to be adjusted based on 
available memory.
Sounds like another place where knowing when memory was constrained would be useful.

Changing the memory requirement from -Xmx256Mb back to defaults is a major 
issue for us, as compiling, searching are memory intensive.
We have to revisit all our algorithms/heuristics to take this new requirement 
into account, and this is not compatible with 1.5 effort.
relax. at this point, i've just been floating the idea that we need to think about working more effectively 
in low memory configurations. i have *not* suggested that we go back to the defaults. 

honestly though, to me it seems that if you are implementing something that takes a lot of memory (as 
this appears to) then you need to at least think about watching for low memory conditions. remember: 
if the vm runs out of memory then you can not trust *anything* about the memory state afterwards. it 
is essentially a completely unrecoverable state.

can you estimate how much memory you are likely to use for a given compile?

All I tried to explain (still relaxed) is that we made our algorithms behave on 
VMs which had a decent amount of memory (-Xmx256Mb). For the past years, we 
instructed our users to add this command line arg each time they would get an 
OutOfMemoryError. This is why the memory requirement is a very delicate 
question for us. 

We are bounding some tasks already (compile 1000 files at once, search 500 
files at once, ...). We could make these numbers smaller but this will take 
real investigation to get to an acceptable compromise (compile 500 files at 
once means perform 2 separate compilations, thus load/parse common referenced 
classfiles twice, open zips twice, etc...). 


Ran some build tests (with jdk 1.4.2) on Jeff's big eclipse workspace (based 
on a 2.1 drop, 134 projects, 16,240 .java files, 12,436 .class files) &amp; 
watched the heap size &amp; peak.

The heap starts at 44Mb with the Java perspective open but no editors. Why so 
much? Don't know... an empty workspace with the Java perspective open takes 
6Mb. That's 38Mb to put 134 projects in the package explorer!

With the Resource perspective open instead of the Java perspective, the heap 
is at 30Mb... closing it &amp; opening the Java perspective takes us up to 44Mb... 
so what is in the 24Mb (30-6) to open the Resource perspective?


After each full build &amp; a GC, the heap settles down to 59Mb, regardless of 
peak. Need to look into the retained 15Mb... build states?

Could not complete the full build with the default 64Mb or 75Mb, ran out of 
memory.

With 80Mb, the heap grew to 75Mb &amp; did most of the build b/w 67-75. It took 
4:04.

With 96Mb, the heap grew to 89Mb &amp; took 3:30.

With 160/250Mb, the heap grew to 128/129Mb &amp; took 3:17-3:22.

So we definitely reach a point where the VM won't use more memory even though 
its available.

I also varied the # of files compiled in each compile loop from 100 to 200 to 
500 to our normal 1000 (only a few projects have &gt;250 source files... jdt.core 
@ 813 &amp; ui.workbench @ 697 are the biggest)... memory usage did not drop, but 
build times went up.

If we could reduce the 24-38Mb just to start up the workspace, we could 
possibly build in the default 64Mb, but for performance reasons we should 
continue to recommend at least 128Mb.
The Resource tree is likely taking most of the ~24Mb (30-6) growth (delta to 
open big workspace with Resource perspective).

6Mb of the 12-14Mb (42/44-30) is from the AllTypesCache. The build states &amp; 
reference info do not account for any of the other 6-8Mb since a build hasn't 
happened yet... need to track this down.

But the states &amp; reference info do account for 7 of the 15Mb growth (actually 
it looks to be only 11Mb growth... need to wait 1 minute for another GC to 
reclaim more) after the first full build is complete... need to find the other 
~5Mb.
With today's M9 build (20040519) on jdk1.4.2, I see the heap at:

- 6Mb for Empty workspace open on Java perspective
- 19Mb for Big workspace open on Resource perspective
- 37Mb for Big workspace open on Java perspective

Tried some full build tests with -Xmx128M
- first full clean/build started with 37Mb allocated &amp; peaked at 126Mb... it 
took 3:30 &amp; after GC heap was at 53Mb... after the periodic workspace save, 
the heap dropped to 50Mb
- did another full clean/build, which started with 50Mb allocated... it took 
3:19 &amp; after GC heap was at 53Mb... after the periodic workspace save, the 
heap dropped to 50Mb also


So based on these numbers, I'm seeing 13Mb (19-6) for the resource tree &amp; 
unknowns... 18Mb (37-19) for the AllTypesCache &amp; unknowns... 13Mb (50-37) for 
build states, reference info &amp; unknowns
Should also add...

- 4Mb for Empty workspace open on Resource perspective
So that would be:

15Mb (19-4) for the resource tree &amp; unknowns
16Mb (37-6-15) for the AllTypesCache &amp; unknowns
13Mb (50-37) for build states, reference info &amp; unknowns
Breaking down the 12-13Mb growth from a full build...

We end up compiling 8,469 source files into 13,690 .class files. The earlier # 
in comment 8 of 16,240 source files includes all the source files used by the 
tests &amp; are not compiled during a build.

We create &amp; keep 1 ReferenceCollection per source file. Each 
ReferenceCollection has 2 arrays of interned compound char[][] &amp; simple char
[]. Adding it up, I'm seeing 3Mb for the ReferenceCollections(2) &amp; intern sets
(1).

A decent chunk of the build growth (4-5Mb) is from the JavaModelCache, which 
is being populated during builds from ManifestConsistencyChecker.validJava(), 
which calls JavaProject.findType(), for tons of types!
Can someone please tell me why anyone would write code like this!!!!

IType baseTypeElement = javaProject.findType(baseType);
if (baseTypeElement != null) {
}
if (baseInterface != null) {
  IJavaElement baseInterfaceElement = javaProject.findType(baseInterface);
  if (baseInterfaceElement != null) {
  }
}

And no I didn't remove the contents of the blocks...
Please enter a defect against PDE for the ManifestConsistencyChecker. It 
shouldn't programmatically cause the model to be largely populated for free.
ManifestConsistencyChecker.validJava() is populating the JavaModel to the tune 
of ~3Mb... see bug 63438.
Released a change to reclaim 900K out of the build states, by sharing some char
[] using String.subString().
Status: some fixes made. confirm we are not populating java model. open other 
defects (if discovered).

Must assess by RC3.
Tests with RC2 - default memory :
Now, there's no Out Of Memory on initial test case (ie. with 12 org.eclipse.ui.*
+ 2 org.eclipse.swt.* projects).
It also works with 56 projects loaded in my workspace (pde-ui project and all
its pre-req...).
However, OOM still happens while performing full build on 87 loaded projects in
workspace...

Set this bug fixed as this clearly demonstrates that we've improved performance
on initial test case. If number of projects is too large, then finally there
won't be other solution than apply initial workaround and modify VM heap size...


I confirm that Java Model is populated *only* when Plug-in Development -&gt;
Compiler -&gt; Unknown classes is activated.
Although 2 unnecessary findType(...) calls were removed in validateJava(...)
method of ManifestConsistencyChecker, there's still one call remaining despite
of what is said in bug 63438 comment 2...
I will make some additional tests to in order to size memory still consumed by
this remaining call and append results to that bug...
Note that when PDE compiler option is activated then OutOfMemory error happens
during full build in workspace with 56 projects.
The limit with this option is 46 projects (jdt-ui plugin + all its pre-req)...
I will reopen bug 63438 as PDE option still populates java model and so consumes
memory unnecessarily...
Verified for 3.0RC3 I200406180800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53951" />
    <CreationDate amount="2004-03-05 17:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't have a single project controlled by two repositories.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I have a strange need to have a large tree that is checked out from a public CVS repository, and a single 
directory within the tree to come from my own personal repository (a local configuration subdir for a 
public project with rigid ideas of where configuration should go, essentially).

I haven't been able to come up with any way for Eclipse to let me do this from the UI, but a year or so 
ago I was able to check out the smaller project as a separate CVS project and the just move the tree into 
the larger project manually.  Everafter Eclipse's CVS would just update all the directories from their 
correct CVSes, which was happy.

Now with 3.0M7, it just strips all the CVS information out of the subdirectory as soon as I try to do 
anything.  The first time the menu comes up allowing Team operations, but then it realizes that I'm 
trying to do something tricky and deletes all the CVS subdirectories.
I am surprised that this worked for you in a previous Eclipse. As far as I 
known, the Eclipse CVS since 2.0 has always stripped out CVS meta information 
that was not from the same repository as the project. You may have just 
stumbled upon a bug and got lucky.

Regardless, is the subdir you are adding a direct child of the project or is 
it buried deeper in the project? If it is a direct child, you can solve this 
using linked resources. You would need to check out your main project and your 
subdir as a second project. Then you could add a link in your main project to 
your subdir. 


[setting Platform/OS to "All" since this issues isn't Mac related]
Please re-open if linked resources don't help you out.
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithStack>
    <WithOutStack>I have a strange need to have a large tree that is checked out from a public CVS repository, and a single 
directory within the tree to come from my own personal repository (a local configuration subdir for a 
public project with rigid ideas of where configuration should go, essentially).

I haven't been able to come up with any way for Eclipse to let me do this from the UI, but a year or so 
ago I was able to check out the smaller project as a separate CVS project and the just move the tree into 
the larger project manually.  Everafter Eclipse's CVS would just update all the directories from their 
correct CVSes, which was happy.

Now with 3.0M7, it just strips all the CVS information out of the subdirectory as soon as I try to do 
anything.  The first time the menu comes up allowing Team operations, but then it realizes that I'm 
trying to do something tricky and deletes all the CVS subdirectories.
I am surprised that this worked for you in a previous Eclipse. As far as I 
known, the Eclipse CVS since 2.0 has always stripped out CVS meta information 
that was not from the same repository as the project. You may have just 
stumbled upon a bug and got lucky.

Regardless, is the subdir you are adding a direct child of the project or is 
it buried deeper in the project? If it is a direct child, you can solve this 
using linked resources. You would need to check out your main project and your 
subdir as a second project. Then you could add a link in your main project to 
your subdir. 


[setting Platform/OS to "All" since this issues isn't Mac related]
Please re-open if linked resources don't help you out.
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53952" />
    <CreationDate amount="2004-03-05 17:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Generic type name of local variables not displayed when available</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="import">
        <location start="30" end="55" />
        <code>import java.util.Vector;</code>
      </source_code>
      <source_code type="class">
        <location start="56" end="213" />
        <code>public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Test case (with Java 1.5.0) :

import java.util.Vector;
public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}

Launch it in debug to the breakpoint. The Variables view display for v :
Vector v= Vector&lt;E&gt;  (id=13)

it should display :
Vector&lt;String&gt; v= Vector&lt;E&gt;  (id=13)
Fixed.
Sun150 VM betas had a bug, they were not sending us the information about the
generic type of local variables. It fixed in builds &gt;= pre-beta2-bin-b40.
We had a bug in the JDI client too. I didn't updated correctly
LocalVariableImpl#typeName(), it was always returning the non-generic type name.

Change in LocalVariableImpl.
Please verify, darin W.
Verified.</WithStack>
    <WithOutStack>Test case (with Java 1.5.0) :

import java.util.Vector;
public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}

Launch it in debug to the breakpoint. The Variables view display for v :
Vector v= Vector&lt;E&gt;  (id=13)

it should display :
Vector&lt;String&gt; v= Vector&lt;E&gt;  (id=13)
Fixed.
Sun150 VM betas had a bug, they were not sending us the information about the
generic type of local variables. It fixed in builds &gt;= pre-beta2-bin-b40.
We had a bug in the JDI client too. I didn't updated correctly
LocalVariableImpl#typeName(), it was always returning the non-generic type name.

Change in LocalVariableImpl.
Please verify, darin W.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53953" />
    <CreationDate amount="2004-03-05 17:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>problems on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095601">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Resource is out of sync 
with the file system: /org.eclipse.ui/.project.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:671)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.File.internalSetContents(File.java:251)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.File.setContents(File.java:293)</Frame>
          <Frame depth="3">org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite(FileSystemResourceManager.java:259)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Project.writeDescription(Project.java:925)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.Project.setDescription(Project.java:825)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Project.setDescription(Project.java:847)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNecessary(SetClasspathOperation.java:810)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:232)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2629)</Frame>
          <Frame depth="13">org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="16">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="17">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1586)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)</Frame>
          <Frame depth="19">org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3290)</Frame>
          <Frame depth="20">org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:110)</Frame>
          <Frame depth="21">org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)</Frame>
          <Frame depth="22">org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1165)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1867)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1790)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:351)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:368)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1316)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1295)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects(SetClasspathOperation.java:636)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas(SetClasspathOperation.java:515)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath(SetClasspathOperation.java:606)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:245)</Frame>
          <Frame depth="36">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="37">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2629)</Frame>
          <Frame depth="40">org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)</Frame>
          <Frame depth="41">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="42">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="43">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="44">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1586)</Frame>
          <Frame depth="45">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)</Frame>
          <Frame depth="46">org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3290)</Frame>
          <Frame depth="47">org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:110)</Frame>
          <Frame depth="48">org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)</Frame>
          <Frame depth="49">org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)</Frame>
          <Frame depth="50">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="52">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1165)</Frame>
          <Frame depth="53">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1867)</Frame>
          <Frame depth="54">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1790)</Frame>
          <Frame depth="55">org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:351)</Frame>
          <Frame depth="56">org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:368)</Frame>
          <Frame depth="57">org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1316)</Frame>
          <Frame depth="58">org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1295)</Frame>
          <Frame depth="59">org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects(SetClasspathOperation.java:636)</Frame>
          <Frame depth="60">org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas(SetClasspathOperation.java:515)</Frame>
          <Frame depth="61">org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath(SetClasspathOperation.java:606)</Frame>
          <Frame depth="62">org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:245)</Frame>
          <Frame depth="63">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="64">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="65">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)</Frame>
          <Frame depth="66">org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2629)</Frame>
          <Frame depth="67">org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)</Frame>
          <Frame depth="68">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="69">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="70">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="71">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1586)</Frame>
          <Frame depth="72">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)</Frame>
          <Frame depth="73">org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3290)</Frame>
          <Frame depth="74">org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:110)</Frame>
          <Frame depth="75">org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)</Frame>
          <Frame depth="76">org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)</Frame>
          <Frame depth="77">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="78">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="79">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1165)</Frame>
          <Frame depth="80">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1867)</Frame>
          <Frame depth="81">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1790)</Frame>
          <Frame depth="82">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1762)</Frame>
          <Frame depth="83">org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots(DeltaProcessingState.java:147)</Frame>
          <Frame depth="84">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:698)</Frame>
          <Frame depth="85">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1567)</Frame>
          <Frame depth="86">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1586)</Frame>
          <Frame depth="87">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)</Frame>
          <Frame depth="88">org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3290)</Frame>
          <Frame depth="89">org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize(JREContainerInitializer.java:51)</Frame>
          <Frame depth="90">org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)</Frame>
          <Frame depth="91">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="92">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="93">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1165)</Frame>
          <Frame depth="94">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1867)</Frame>
          <Frame depth="95">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1790)</Frame>
          <Frame depth="96">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1762)</Frame>
          <Frame depth="97">org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3281)</Frame>
          <Frame depth="98">org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:110)</Frame>
          <Frame depth="99">org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)</Frame>
          <Frame depth="100">org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)</Frame>
          <Frame depth="101">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="102">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="103">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1165)</Frame>
          <Frame depth="104">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1867)</Frame>
          <Frame depth="105">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1790)</Frame>
          <Frame depth="106">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1762)</Frame>
          <Frame depth="107">org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:262)</Frame>
          <Frame depth="108">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:169)</Frame>
          <Frame depth="109">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:536)</Frame>
          <Frame depth="110">org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:280)</Frame>
          <Frame depth="111">org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:266)</Frame>
          <Frame depth="112">org.eclipse.jdt.internal.core.JavaElement.getChildren(JavaElement.java:221)</Frame>
          <Frame depth="113">org.eclipse.jdt.internal.core.Openable.hasChildren(Openable.java:272)</Frame>
          <Frame depth="114">org.eclipse.jdt.ui.StandardJavaElementContentProvider.hasChildren(StandardJavaElementContentProvider.java:213)</Frame>
          <Frame depth="115">org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:1152)</Frame>
          <Frame depth="116">org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeViewer.java:1596)</Frame>
          <Frame depth="117">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:384)</Frame>
          <Frame depth="118">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:363)</Frame>
          <Frame depth="119">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="120">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:349)</Frame>
          <Frame depth="121">org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:808)</Frame>
          <Frame depth="122">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:810)</Frame>
          <Frame depth="123">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:798)</Frame>
          <Frame depth="124">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="125">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1004)</Frame>
          <Frame depth="126">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl(PackageExplorerPart.java:284)</Frame>
          <Frame depth="127">org.eclipse.ui.internal.PartPane$1.run(PartPane.java:118)</Frame>
          <Frame depth="128">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="129">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="130">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:114)</Frame>
          <Frame depth="131">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:322)</Frame>
          <Frame depth="132">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:226)</Frame>
          <Frame depth="133">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:275)</Frame>
          <Frame depth="134">org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:589)</Frame>
          <Frame depth="135">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:528)</Frame>
          <Frame depth="136">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:240)</Frame>
          <Frame depth="137">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:117)</Frame>
          <Frame depth="138">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:629)</Frame>
          <Frame depth="139">org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1957)</Frame>
          <Frame depth="140">org.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:1670)</Frame>
          <Frame depth="141">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="142">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1657)</Frame>
          <Frame depth="143">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1250)</Frame>
          <Frame depth="144">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1385)</Frame>
          <Frame depth="145">org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1353)</Frame>
          <Frame depth="146">org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1275)</Frame>
          <Frame depth="147">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:788)</Frame>
          <Frame depth="148">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="149">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1231)</Frame>
          <Frame depth="150">org.eclipse.ui.internal.Workbench.init(Workbench.java:907)</Frame>
          <Frame depth="151">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1519)</Frame>
          <Frame depth="152">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)</Frame>
          <Frame depth="153">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="154">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="155">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:256)</Frame>
          <Frame depth="156">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:100)</Frame>
          <Frame depth="157">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="158">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="159">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="160">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="161">org.eclipse.core.launcher.Main.basicRun(Main.java:279)</Frame>
          <Frame depth="162">org.eclipse.core.launcher.Main.run(Main.java:742)</Frame>
          <Frame depth="163">org.eclipse.core.launcher.Main.main(Main.java:581)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build I20040304 Sun JDK 1.4.2 -Xmx150

I'm unable to open my existing workspace with this new eclipse build. It gets 
a stack overflow exception (see bug 53946). While investigating, we found that 
I have a large (11.5MB!) .metadata/.log with a lot of entries that looks like 
the following, which suggests that classpath container resolution is 
implicated (the workspace has a bunch of binary plug-in projects, and 5 source 
projects - the ws opens fine with I20040226). Please investigate.

!MESSAGE Exception occurred in classpath container initializer: 
org.eclipse.pde.internal.core.RequiredPluginsInitializer@1ba3f9a
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync 
with the file system: /org.eclipse.ui/.project.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.write
(FileSystemResourceManager.java:671)
	at org.eclipse.core.internal.resources.File.internalSetContents
(File.java:251)
	at org.eclipse.core.internal.resources.File.setContents(File.java:293)
	at 
org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite
(FileSystemResourceManager.java:259)
	at org.eclipse.core.internal.resources.Project.writeDescription
(Project.java:925)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:825)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:847)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNe
cessary(SetClasspathOperation.java:810)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:232)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots
(DeltaProcessingState.java:147)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:698)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at 
org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize
(JREContainerInitializer.java:51)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3281)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure
(JavaProject.java:262)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:169)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:536)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:280)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java:221)
	at org.eclipse.jdt.internal.core.Openable.hasChildren
(Openable.java:272)
	at org.eclipse.jdt.ui.StandardJavaElementContentProvider.hasChildren
(StandardJavaElementContentProvider.java:213)
	at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable
(AbstractTreeViewer.java:1152)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus
(AbstractTreeViewer.java:1596)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:384)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:363)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:349)
	at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:808)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:810)
	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:798)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:238)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1004)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl
(PackageExplorerPart.java:284)
	at org.eclipse.ui.internal.PartPane$1.run(PartPane.java:118)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:114)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:322)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:226)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:275)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:589)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:528)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:240)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:117)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:629)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1957)
	at org.eclipse.ui.internal.WorkbenchWindow$6.run
(WorkbenchWindow.java:1670)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1657)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1250)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1385)
	at org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1275)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1231)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:907)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1519)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:256)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)
!SUBENTRY 1 org.eclipse.core.resources 4 274 Mar 05, 2004 16:55:09.683
!MESSAGE Resource is out of sync with the file 
system: /org.eclipse.ui/.project.
!ENTRY org.eclipse.core.runtime 4 2 Mar 05, 2004 16:55:09.808
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
Jim, does the workspace contain binary projects that have been imported with 
links?
No. Just regular binary plug-in projects imported from the hosting eclipse 
(I20040226).
Will investigate.
In the meantime, cc'ing JohnA and Philippe for comment as the problem seems to 
be occurring when the .project file is being written at the time of classpath 
container resolution. 

This looks like a possible regresion of:

Bug 47213 Inefficient recursion while initializing classpath container

The StackOverflow is possibly caused by very deep recursion while initializing
the classpath?
I don't think it is the same, in other bug, issue was due to reentering the 
#initializeRoots call, which is no longer occurring. There is no stack overflow 
here, and the container initializations are deeply recursive (since has to 
compute a CP delta which is triggering further resolutions).

Wondering if this wouldn't rather be due to issues near PDE container which 
fails to initialize itself from times to times. 
A failure in the PDE container initialization that is directly PDE-related 
typically results in an empty classpath.  This could occur if the external 
plug-ins were not completely resolved by the time the container initializer is 
called.

For this particular one though, it seems like it's happening when the project 
description is being modified.  That is why I thought it might be JDT/Core- 
related.
Jim, defects like this one are hard to reproduce, as each workspace is unique.
Please zip up your workspace so that we could get to the bottom of this thing.
The chief culprit has been tracked down and caught (see bug 53946). If I see 
these stack traces again, I will re-report. Ok to close.
Closing.</WithStack>
    <WithOutStack>Build I20040304 Sun JDK 1.4.2 -Xmx150

I'm unable to open my existing workspace with this new eclipse build. It gets 
a stack overflow exception (see bug 53946). While investigating, we found that 
I have a large (11.5MB!) .metadata/.log with a lot of entries that looks like 
the following, which suggests that classpath container resolution is 
implicated (the workspace has a bunch of binary plug-in projects, and 5 source 
projects - the ws opens fine with I20040226). Please investigate.

!MESSAGE Exception occurred in classpath container initializer: 
org.eclipse.pde.internal.core.RequiredPluginsInitializer@1ba3f9a
!STACK 1

!SUBENTRY 1 org.eclipse.core.resources 4 274 Mar 05, 2004 16:55:09.683
!MESSAGE Resource is out of sync with the file 
system: /org.eclipse.ui/.project.
!ENTRY org.eclipse.core.runtime 4 2 Mar 05, 2004 16:55:09.808
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
Jim, does the workspace contain binary projects that have been imported with 
links?
No. Just regular binary plug-in projects imported from the hosting eclipse 
(I20040226).
Will investigate.
In the meantime, cc'ing JohnA and Philippe for comment as the problem seems to 
be occurring when the .project file is being written at the time of classpath 
container resolution. 

This looks like a possible regresion of:

Bug 47213 Inefficient recursion while initializing classpath container

The StackOverflow is possibly caused by very deep recursion while initializing
the classpath?
I don't think it is the same, in other bug, issue was due to reentering the 
#initializeRoots call, which is no longer occurring. There is no stack overflow 
here, and the container initializations are deeply recursive (since has to 
compute a CP delta which is triggering further resolutions).

Wondering if this wouldn't rather be due to issues near PDE container which 
fails to initialize itself from times to times. 
A failure in the PDE container initialization that is directly PDE-related 
typically results in an empty classpath.  This could occur if the external 
plug-ins were not completely resolved by the time the container initializer is 
called.

For this particular one though, it seems like it's happening when the project 
description is being modified.  That is why I thought it might be JDT/Core- 
related.
Jim, defects like this one are hard to reproduce, as each workspace is unique.
Please zip up your workspace so that we could get to the bottom of this thing.
The chief culprit has been tracked down and caught (see bug 53946). If I see 
these stack traces again, I will re-report. Ok to close.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53954" />
    <CreationDate amount="2004-03-05 17:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>"Change variable value" action.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This action appears in the 3 different views: variables, expressions and 
registers. I think it would be better to change it's label to "Change value".
Fixed in ActionMessage.properties.
Please verify, Darin (S).
Changed a bit more...
Changed the error dialog title
Set the tooltiptext to book capitalization
Changes the dialog text

Changes to ActionMessages and ChangeVariableValueAction.
Please verify DarinW.
Verified</WithStack>
    <WithOutStack>This action appears in the 3 different views: variables, expressions and 
registers. I think it would be better to change it's label to "Change value".
Fixed in ActionMessage.properties.
Please verify, Darin (S).
Changed a bit more...
Changed the error dialog title
Set the tooltiptext to book capitalization
Changes the dialog text

Changes to ActionMessages and ChangeVariableValueAction.
Please verify DarinW.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53955" />
    <CreationDate amount="2004-03-05 17:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Synchronize view changes mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Select the Incoming/Outgoing Mode button.</Line>
          <Line>2. Click the Refresh button.</Line>
          <Line>3. When the refresh finishes, the view changes back to Incoming Mode.</Line>
          <Line>Fixed. We don't auto-switch modes anymore. I find that with the new message in</Line>
          <Line>the sync view hinting that changes are shown in other mode/working set the</Line>
          <Line>auto-switch is really required. Also, the user's context isn't changed for</Line>
          <Line>them.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20040304

1. Select the Incoming/Outgoing Mode button.
2. Click the Refresh button.
3. When the refresh finishes, the view changes back to Incoming Mode.
Fixed. We don't auto-switch modes anymore. I find that with the new message in 
the sync view hinting that changes are shown in other mode/working set the 
auto-switch is really required. Also, the user's context isn't changed for 
them.</WithStack>
    <WithOutStack>Build 20040304

1. Select the Incoming/Outgoing Mode button.
2. Click the Refresh button.
3. When the refresh finishes, the view changes back to Incoming Mode.
Fixed. We don't auto-switch modes anymore. I find that with the new message in 
the sync view hinting that changes are shown in other mode/working set the 
auto-switch is really required. Also, the user's context isn't changed for 
them.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53956" />
    <CreationDate amount="2004-03-05 17:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>dealock  (while editing?)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="131">
        <Lines>
          <Line>- waiting to lock &lt;0x1504dbe8&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.source.AnnotationModel.addAnnotation(AnnotationModel.java:178)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation</Line>
          <Line>Model.addAnnotation(CompilationUnitDocumentProvider2.java:647)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation</Line>
          <Line>Model.endReportingSequence(CompilationUnitDocumentProvider2.java:520)</Line>
          <Line>- locked &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.</Line>
          <Line>java:99)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)</Line>
          <Line>"main":</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java:467)</Line>
          <Line>- waiting to lock &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerAnnotation(AbstractMarkerAnnotationModel.jav</Line>
          <Line>a:411)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerPosition(AbstractMarkerAnnotationModel.java:</Line>
          <Line>297)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.breakpointAtRulerLine(AbstractBreakpo</Line>
          <Line>intRulerAction.java:95)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.determineBreakpoint(AbstractBreakpoin</Line>
          <Line>tRulerAction.java:49)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesRulerAction.update(JavaBreakpointProperties</Line>
          <Line>RulerAction.java:64)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.texteditor.AbstractRulerActionDelegate.update(AbstractRulerActionDelegate.java:113)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.texteditor.AbstractRulerActionDelegate.selectionChanged(AbstractRulerActionDelegate.java:105)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:227)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:294)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:305)</Line>
          <Line>at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:638)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:497)</Line>
          <Line>at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java:2142)</Line>
          <Line>at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:2125)</Line>
          <Line>at org.eclipse.jface.text.TextViewer$3.widgetSelected(TextViewer.java:1386)</Line>
          <Line>at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:650)</Line>
          <Line>at</Line>
          <Line>org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6959)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java:2085)</Line>
          <Line>at</Line>
          <Line>org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java:7883)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java:8462)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5457)</Line>
          <Line>at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:5032)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java:293)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:237)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:663)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:638)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:623)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:698)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:989)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocument.ja</Line>
          <Line>va:63)</Line>
          <Line>- locked &lt;0x1504dbe8&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:194)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5999)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6935)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:2636)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5792)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5308)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5327)</Line>
          <Line>at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:5070)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Line>
          <Line>at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Line>
          <Line>at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)</Line>
          <Line>at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3483)</Line>
          <Line>at org.eclipse.swt.widgets.Control.windowProc(Control.java:2967)</Line>
          <Line>at org.eclipse.swt.widgets.Display.windowProc(Display.java:2880)</Line>
          <Line>at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Line>
          <Line>at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1376)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2031)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at</Line>
          <Line>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at</Line>
          <Line>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:745)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:713)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>i20040304

Don't remember exactly what operation I was executing, but I was making some
changes to a source file.

Stack trace dumps for the deadlock (will attach the full dump):

Found one Java-level deadlock:
=============================
"org.eclipse.jdt.internal.ui.text.JavaReconciler":
  waiting to lock monitor 0x009bfc5c (object 0x1504dbe8, a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedD
ocument),
  which is held by "main"
"main":
  waiting to lock monitor 0x009bfc3c (object 0x1505ef10, a
java.util.Collections$SynchronizedMap),
  which is held by "org.eclipse.jdt.internal.ui.text.JavaReconciler"

Java stack information for the threads listed above:
===================================================
"org.eclipse.jdt.internal.ui.text.JavaReconciler":
        at
org.eclipse.jface.text.source.AnnotationModel.addPosition(AnnotationModel.java:210)
        - waiting to lock &lt;0x1504dbe8&gt; (a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)
        at
org.eclipse.jface.text.source.AnnotationModel.addAnnotation(AnnotationModel.java:178)
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation
Model.addAnnotation(CompilationUnitDocumentProvider2.java:647)
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation
Model.endReportingSequence(CompilationUnitDocumentProvider2.java:520)
        - locked &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)
        at
org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.
java:99)
        at
org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)
"main":
        at
org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java:467)
        - waiting to lock &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)
        at
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerAnnotation(AbstractMarkerAnnotationModel.jav
a:411)
        at
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerPosition(AbstractMarkerAnnotationModel.java:
297)
        at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.breakpointAtRulerLine(AbstractBreakpo
intRulerAction.java:95)
        at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.determineBreakpoint(AbstractBreakpoin
tRulerAction.java:49)
        at
org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesRulerAction.update(JavaBreakpointProperties
RulerAction.java:64)
        at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.update(AbstractRulerActionDelegate.java:113)
        at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.selectionChanged(AbstractRulerActionDelegate.java:105)
        at
org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:227)
        at
org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:294)
        at
org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:305)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:638)
        at org.eclipse.core.runtime.Platform.run(Platform.java:497)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java:2142)
        at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:2125)
        at org.eclipse.jface.text.TextViewer$3.widgetSelected(TextViewer.java:1386)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:650)
        at
org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6959)
        at org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java:2085)
        at
org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java:7883)
        at org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java:8462)
        at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5457)
        at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:5032)
        at
org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java:293)
        at
org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:237)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:663)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:638)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:623)
        at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:698)
        at
org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:989)
        at
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocument.ja
va:63)
        - locked &lt;0x1504dbe8&gt; (a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)
        at
org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:194)
        at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5999)
        at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6935)
        at org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:2636)
        at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5792)
        at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5308)
        at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5327)
        at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:5070)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
        at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3483)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:2967)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:2880)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1376)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2031)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
        at org.eclipse.core.launcher.Main.run(Main.java:745)
        at org.eclipse.core.launcher.Main.main(Main.java:713)

Found 1 deadlock.
Created attachment 8371
full stack trace dump
*** Bug 54023 has been marked as a duplicate of this bug. ***
Fixed. Build I20040309.
*** Bug 59982 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>i20040304

Don't remember exactly what operation I was executing, but I was making some
changes to a source file.

Stack trace dumps for the deadlock (will attach the full dump):

Found one Java-level deadlock:
=============================
"org.eclipse.jdt.internal.ui.text.JavaReconciler":
  waiting to lock monitor 0x009bfc5c (object 0x1504dbe8, a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedD
ocument),
  which is held by "main"
"main":
  waiting to lock monitor 0x009bfc3c (object 0x1505ef10, a
java.util.Collections$SynchronizedMap),
  which is held by "org.eclipse.jdt.internal.ui.text.JavaReconciler"

Java stack information for the threads listed above:
===================================================
"org.eclipse.jdt.internal.ui.text.JavaReconciler":
        at
org.eclipse.jface.text.source.AnnotationModel.addPosition(AnnotationModel.java:210)
        - waiting to lock &lt;0x1504dbe8&gt; (a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)
        at
org.eclipse.jface.text.source.AnnotationModel.addAnnotation(AnnotationModel.java:178)
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation
Model.addAnnotation(CompilationUnitDocumentProvider2.java:647)
        at
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotation
Model.endReportingSequence(CompilationUnitDocumentProvider2.java:520)
        - locked &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)
        at
org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.
java:99)
        at
org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
        at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)
"main":
        at
org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java:467)
        - waiting to lock &lt;0x1505ef10&gt; (a java.util.Collections$SynchronizedMap)
        at
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerAnnotation(AbstractMarkerAnnotationModel.jav
a:411)
        at
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel.getMarkerPosition(AbstractMarkerAnnotationModel.java:
297)
        at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.breakpointAtRulerLine(AbstractBreakpo
intRulerAction.java:95)
        at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.determineBreakpoint(AbstractBreakpoin
tRulerAction.java:49)
        at
org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesRulerAction.update(JavaBreakpointProperties
RulerAction.java:64)
        at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.update(AbstractRulerActionDelegate.java:113)
        at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.selectionChanged(AbstractRulerActionDelegate.java:105)
        at
org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:227)
        at
org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:294)
        at
org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:305)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:638)
        at org.eclipse.core.runtime.Platform.run(Platform.java:497)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java:2142)
        at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:2125)
        at org.eclipse.jface.text.TextViewer$3.widgetSelected(TextViewer.java:1386)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:650)
        at
org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6959)
        at org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java:2085)
        at
org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java:7883)
        at org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java:8462)
        at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5457)
        at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:5032)
        at
org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java:293)
        at
org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:237)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:663)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:638)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:623)
        at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:698)
        at
org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:989)
        at
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocument.ja
va:63)
        - locked &lt;0x1504dbe8&gt; (a
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument)
        at
org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:194)
        at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5999)
        at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6935)
        at org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:2636)
        at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5792)
        at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5308)
        at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5327)
        at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:5070)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1712)
        at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3483)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:2967)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:2880)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1376)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2031)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
        at org.eclipse.core.launcher.Main.run(Main.java:745)
        at org.eclipse.core.launcher.Main.main(Main.java:713)

Found 1 deadlock.
Created attachment 8371
full stack trace dump
*** Bug 54023 has been marked as a duplicate of this bug. ***
Fixed. Build I20040309.
*** Bug 59982 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53957" />
    <CreationDate amount="2004-03-05 18:15:00 -0500" />
    <DupId amount="53654" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>[FastView] Eclipse infinite loop when detach view goes to fast view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build id: 200403040800

Let's say: in the Java perspective drag the Package Explore view outside 
Workbench bounds so it becomes a detached view, now right-click on the Package 
explorer title and select 'Fast View' on the context menu. A infinite loop 
start and the only way I could make it stop was to kill Eclipse.
You don't by any chance have a core dump that would show us where that 
infinite loop is happening?
Created attachment 8392
Java stacktrace
Fixed in head

*** This bug has been marked as a duplicate of 53654 ***</WithStack>
    <WithOutStack>Build id: 200403040800

Let's say: in the Java perspective drag the Package Explore view outside 
Workbench bounds so it becomes a detached view, now right-click on the Package 
explorer title and select 'Fast View' on the context menu. A infinite loop 
start and the only way I could make it stop was to kill Eclipse.
You don't by any chance have a core dump that would show us where that 
infinite loop is happening?
Created attachment 8392
Java stacktrace
Fixed in head

*** This bug has been marked as a duplicate of 53654 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53958" />
    <CreationDate amount="2004-03-05 18:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Package explorer too eager to do things...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I was starting a big workspace and I was wondering why it was taking time.
Trying to find someone to blame ;-) I debugged and randomly stop and here is the
capture of the stack at this point.

Of course you will tell me: most of the time is spent in JDT Core, resources,
PDE, etc. but down below if you look what triggered all these actions is the
opening of the "package explorer". 

Could not background jobs be used to do the filling, so that even if my
workspace is big and I left it open on a package explorer it starts up faster?

	at org.eclipse.core.internal.localstore.FileSystemResourceManager.write
(FileSystemResourceManager.java:671)
	at org.eclipse.core.internal.resources.File.internalSetContents
(File.java:251)
	at org.eclipse.core.internal.resources.File.setContents(File.java:293)
	at 
org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite
(FileSystemResourceManager.java:259)
	at org.eclipse.core.internal.resources.Project.writeDescription
(Project.java:925)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:825)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:847)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNe
cessary(SetClasspathOperation.java:810)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:232)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots
(DeltaProcessingState.java:147)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:698)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at 
org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize
(JREContainerInitializer.java:51)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3281)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure
(JavaProject.java:262)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:169)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:536)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:280)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java:221)
	at org.eclipse.jdt.internal.core.Openable.hasChildren
(Openable.java:272)
	at org.eclipse.jdt.ui.StandardJavaElementContentProvider.hasChildren
(StandardJavaElementContentProvider.java:213)
	at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable
(AbstractTreeViewer.java:1152)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus
(AbstractTreeViewer.java:1596)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:384)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:363)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:349)
	at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:808)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:810)
	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:798)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:238)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1004)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl
(PackageExplorerPart.java:284)
	at org.eclipse.ui.internal.PartPane$1.run(PartPane.java:118)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:114)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:322)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:226)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:275)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:589)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:528)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:240)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:117)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:629)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1957)
	at org.eclipse.ui.internal.WorkbenchWindow$6.run
(WorkbenchWindow.java:1670)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1657)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1250)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1385)
	at org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1275)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1231)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:907)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1519)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:256)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)
!SUBENTRY 1 org.eclipse.core.resources 4 274 Mar 05, 2004 16:55:09.683
!MESSAGE Resource is out of sync with the file 
system: /org.eclipse.ui/.project.
!ENTRY org.eclipse.core.runtime 4 2 Mar 05, 2004 16:55:09.808
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
That's how the classpath containers work
The container is not the problem. The problem is calling expensive operations 
during startup.
philippe is of course right. We should not expand classpath containers when
restoring the expand state
Once JavaProject#hasChildren() is implemented optimistically (returns true 
when the project isn't opened) then this issue should be addressed.

Philippe please let us know when this change is in the build so that we verify.


On the UI side we should not persist the expansion state of class path 
containers and JARs.
The #hasChildren() change got released in I20040303 (see bug 52474).
closing - we no longer persist an expansion state in the package explorer</WithStack>
    <WithOutStack>I was starting a big workspace and I was wondering why it was taking time.
Trying to find someone to blame ;-) I debugged and randomly stop and here is the
capture of the stack at this point.

Of course you will tell me: most of the time is spent in JDT Core, resources,
PDE, etc. but down below if you look what triggered all these actions is the
opening of the "package explorer". 

Could not background jobs be used to do the filling, so that even if my
workspace is big and I left it open on a package explorer it starts up faster?

	at org.eclipse.core.internal.localstore.FileSystemResourceManager.write
(FileSystemResourceManager.java:671)
	at org.eclipse.core.internal.resources.File.internalSetContents
(File.java:251)
	at org.eclipse.core.internal.resources.File.setContents(File.java:293)
	at 
org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite
(FileSystemResourceManager.java:259)
	at org.eclipse.core.internal.resources.Project.writeDescription
(Project.java:925)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:825)
	at org.eclipse.core.internal.resources.Project.setDescription
(Project.java:847)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateProjectReferencesIfNe
cessary(SetClasspathOperation.java:810)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:232)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:351)
	at org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath
(JavaProject.java:368)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1316)
	at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath
(JavaProject.java:1295)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects
(SetClasspathOperation.java:636)
	at 
org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDelt
as(SetClasspathOperation.java:515)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath
(SetClasspathOperation.java:606)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation
(SetClasspathOperation.java:245)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:744)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2629)
	at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3304)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots
(DeltaProcessingState.java:147)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:698)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1586)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3164)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3290)
	at 
org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize
(JREContainerInitializer.java:51)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer
(JavaCore.java:3281)
	at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer
(ModelEntry.java:110)
	at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize
(RequiredPluginsInitializer.java:40)
	at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1170)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer
(JavaCore.java:1165)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1867)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1790)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath
(JavaProject.java:1762)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure
(JavaProject.java:262)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:169)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:536)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:280)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java:221)
	at org.eclipse.jdt.internal.core.Openable.hasChildren
(Openable.java:272)
	at org.eclipse.jdt.ui.StandardJavaElementContentProvider.hasChildren
(StandardJavaElementContentProvider.java:213)
	at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable
(AbstractTreeViewer.java:1152)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus
(AbstractTreeViewer.java:1596)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:384)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:363)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:349)
	at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:808)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:810)
	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:798)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:238)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1004)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl
(PackageExplorerPart.java:284)
	at org.eclipse.ui.internal.PartPane$1.run(PartPane.java:118)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:114)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:322)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:226)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:275)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:589)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:528)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:240)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:117)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:629)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1957)
	at org.eclipse.ui.internal.WorkbenchWindow$6.run
(WorkbenchWindow.java:1670)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1657)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1250)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1385)
	at org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1275)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:788)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1231)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:907)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1519)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:256)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)
!SUBENTRY 1 org.eclipse.core.resources 4 274 Mar 05, 2004 16:55:09.683
!MESSAGE Resource is out of sync with the file 
system: /org.eclipse.ui/.project.
!ENTRY org.eclipse.core.runtime 4 2 Mar 05, 2004 16:55:09.808
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
That's how the classpath containers work
The container is not the problem. The problem is calling expensive operations 
during startup.
philippe is of course right. We should not expand classpath containers when
restoring the expand state
Once JavaProject#hasChildren() is implemented optimistically (returns true 
when the project isn't opened) then this issue should be addressed.

Philippe please let us know when this change is in the build so that we verify.


On the UI side we should not persist the expansion state of class path 
containers and JARs.
The #hasChildren() change got released in I20040303 (see bug 52474).
closing - we no longer persist an expansion state in the package explorer</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53959" />
    <CreationDate amount="2004-03-05 18:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Nested generic type names are not correctly displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="import">
        <location start="25" end="50" />
        <code>import java.util.Vector;</code>
      </source_code>
      <source_code type="import">
        <location start="51" end="72" />
        <code>import java.util.Set;</code>
      </source_code>
      <source_code type="class">
        <location start="73" end="251" />
        <code>public class Test7 {
  public static void main(String... args) {
    Vector&lt;Set&lt;String&gt;&gt; v= new Vector&lt;Set&lt;String&gt;&gt;();
    System.out.println(v);     // &lt;-- breakpoint here
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Test case (Java 1.5.0) :

import java.util.Vector;
import java.util.Set;
public class Test7 {
  public static void main(String... args) {
    Vector&lt;Set&lt;String&gt;&gt; v= new Vector&lt;Set&lt;String&gt;&gt;();
    System.out.println(v);     // &lt;-- breakpoint here
  }
}

Launch it in debug mode to the breakpoint.
With the option 'Show qualified names', the Variables view displays:
Vector&lt; &gt; v= Vector&lt;E&gt;  (id=13)

instead of 
Vector&lt;Set&lt;String&gt;&gt; v= Vector&lt;E&gt;  (id=13)
If the last element of the generic parameters was a generic type, it was not
correctly managed and not added in the simple name.

Changes in JDIModelPresentation#getNameList(String), made it simpler, better.
Please verify, Darin W.
Verified.</WithStack>
    <WithOutStack>Test case (Java 1.5.0) :

import java.util.Vector;
import java.util.Set;
public class Test7 {
  public static void main(String... args) {
    Vector&lt;Set&lt;String&gt;&gt; v= new Vector&lt;Set&lt;String&gt;&gt;();
    System.out.println(v);     // &lt;-- breakpoint here
  }
}

Launch it in debug mode to the breakpoint.
With the option 'Show qualified names', the Variables view displays:
Vector&lt; &gt; v= Vector&lt;E&gt;  (id=13)

instead of 
Vector&lt;Set&lt;String&gt;&gt; v= Vector&lt;E&gt;  (id=13)
If the last element of the generic parameters was a generic type, it was not
correctly managed and not added in the simple name.

Changes in JDIModelPresentation#getNameList(String), made it simpler, better.
Please verify, Darin W.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53960" />
    <CreationDate amount="2004-03-05 18:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Fix build errors resulting from repackaging of WidgetFactory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Done.
house keeping
Closing...</WithStack>
    <WithOutStack>Done.
house keeping
Closing...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53961" />
    <CreationDate amount="2004-03-05 18:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TabFolder doesn't cycle through conflicting mnemonics</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>a. The "&amp;Classpath entries" field within the Arguments tab.</Line>
          <Line>b. The "&amp;Configuration" tab.</Line>
          <Line>c. The "&amp;Common" tab.</Line>
          <Line>3. Press alt+c. The Configuration tab is given focus.</Line>
          <Line>4. Press alt+c again. The Configuration tab retains focus.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1. Bring up the launch config dialog and select a Runtime-workbench configuration.</Line>
          <Line>2. With the "Arguments" tab selected, observe that there are three mnemonics visible which apply</Line>
          <Line>to the letter 'c':</Line>
          <Line>a. The "&amp;Classpath entries" field within the Arguments tab.</Line>
          <Line>b. The "&amp;Configuration" tab.</Line>
          <Line>c. The "&amp;Common" tab.</Line>
          <Line>3. Press alt+c. The Configuration tab is given focus.</Line>
          <Line>4. Press alt+c again. The Configuration tab retains focus.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The TabFolder doesn't handle conflicting mnemonics in a very friendly way. An example of this 
problem can be seen in Eclipse's launch configuration dialog.

1. Bring up the launch config dialog and select a Runtime-workbench configuration.
2. With the "Arguments" tab selected, observe that there are three mnemonics visible which apply 
to the letter 'c':
  a. The "&amp;Classpath entries" field within the Arguments tab.
  b. The "&amp;Configuration" tab.
  c. The "&amp;Common" tab.
3. Press alt+c. The Configuration tab is given focus.
4. Press alt+c again. The Configuration tab retains focus.

When focus is up in the tab area, I would expect to cycle between tabs with conflicting mnemonics 
(the way they do in menus, preference pages, etc.). When focus is inside a tab, I would expect to 
cycle between widgets with conflicting mnemonics and then go to any "tab headers" with the 
same mnemonic when there are no more conflicts inside the tab.

So in the test case up above, if focus is inside the Arguments tab, I'd expect focus to first go the the 
"Classpath entries" widget, then up to the "Configuration" tab, and then to the "Common" tab. 
Once focus is in the "tab header" area, I'd expect focus to stay there until the user hits the TAB 
key to put focus inside the tab. tab.
This is platform specific behavior.  Sensible applications know what they are 
doing and don't define conflicts.  Frameworks however ...

Sorry WONTFIX.</WithStack>
    <WithOutStack>The TabFolder doesn't handle conflicting mnemonics in a very friendly way. An example of this 
problem can be seen in Eclipse's launch configuration dialog.

1. Bring up the launch config dialog and select a Runtime-workbench configuration.
2. With the "Arguments" tab selected, observe that there are three mnemonics visible which apply 
to the letter 'c':
  a. The "&amp;Classpath entries" field within the Arguments tab.
  b. The "&amp;Configuration" tab.
  c. The "&amp;Common" tab.
3. Press alt+c. The Configuration tab is given focus.
4. Press alt+c again. The Configuration tab retains focus.

When focus is up in the tab area, I would expect to cycle between tabs with conflicting mnemonics 
(the way they do in menus, preference pages, etc.). When focus is inside a tab, I would expect to 
cycle between widgets with conflicting mnemonics and then go to any "tab headers" with the 
same mnemonic when there are no more conflicts inside the tab.

So in the test case up above, if focus is inside the Arguments tab, I'd expect focus to first go the the 
"Classpath entries" widget, then up to the "Configuration" tab, and then to the "Common" tab. 
Once focus is in the "tab header" area, I'd expect focus to stay there until the user hits the TAB 
key to put focus inside the tab. tab.
This is platform specific behavior.  Sensible applications know what they are 
doing and don't define conflicts.  Frameworks however ...

Sorry WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53962" />
    <CreationDate amount="2004-03-05 19:01:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>State#setResolver causes infinite recursion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>i20040304

State#setResolver causes infinite recursion if State#getResolver() != null. This
is not being done in the current code, so so far it has not been a problem.
Fixed and released to HEAD.</WithStack>
    <WithOutStack>i20040304

State#setResolver causes infinite recursion if State#getResolver() != null. This
is not being done in the current code, so so far it has not been a problem.
Fixed and released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53963" />
    <CreationDate amount="2004-03-05 19:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Wizards] project creation different  using default project vs other directory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When I bring up eclipse and create a new project JP01 keeping
the Project Contents directory as default when I am finished
there is a directory called /home/peg/workspace/JP01.  If I
create another project called JP02, but change the name of the
Project Contents directory to /home/peg/EclipseProjects when I
am finished creating the project there is no directory called
/home/peg/EclipseProjects/JP02 which is what I would expect
given the initial behavior.  I could not find anywhere in the
preferences where I could change the name of the default Project
Contents directory.
The default project contents directory is always workbench root plus project 
name which can be seen in the wizard. Making it the workbench root would be 
irritating as you could only have one project.

Likewise allowing you to choose the directory is there is order that you are 
not forced to create a subdirectory if there is content you want to use.</WithStack>
    <WithOutStack>When I bring up eclipse and create a new project JP01 keeping
the Project Contents directory as default when I am finished
there is a directory called /home/peg/workspace/JP01.  If I
create another project called JP02, but change the name of the
Project Contents directory to /home/peg/EclipseProjects when I
am finished creating the project there is no directory called
/home/peg/EclipseProjects/JP02 which is what I would expect
given the initial behavior.  I could not find anywhere in the
preferences where I could change the name of the default Project
Contents directory.
The default project contents directory is always workbench root plus project 
name which can be seen in the wizard. Making it the workbench root would be 
irritating as you could only have one project.

Likewise allowing you to choose the directory is there is order that you are 
not forced to create a subdirectory if there is content you want to use.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53964" />
    <CreationDate amount="2004-03-05 19:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Ctrl + click on method name in @see javadoc tag should take you to method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>It would be very helpfull to be able to ctrl + click on a method name in a @see
javadoc take and be taken to that method.  You can already ctrl + click on a
class name in the @see tag, but, not a method name
code resolve on Javadoc tags currently isn't supported by jdt.core.
Post 3.0
Later
Reopen
This feature exists in 3.3. Fixed in a previous build.</WithStack>
    <WithOutStack>It would be very helpfull to be able to ctrl + click on a method name in a @see
javadoc take and be taken to that method.  You can already ctrl + click on a
class name in the @see tag, but, not a method name
code resolve on Javadoc tags currently isn't supported by jdt.core.
Post 3.0
Later
Reopen
This feature exists in 3.3. Fixed in a previous build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53965" />
    <CreationDate amount="2004-03-05 21:38:00 -0500" />
    <DupId amount="48962" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>gratuitous format regressions pollute cvs logs and cause merge hell</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using 3.0M7...

The old code formatter is presently in use in projects
with cvs histories and branches that will require merging.

If in fact the old formatter was the standard operating
procedure then a developer could reformat the entire file
at any point without worry.

Now, if it does anything (I'll enter a separate bug for
its tendency to do nothing where the old one worked fine)
it's likely to do something different. This causes annoying
and useless cvs deltas, complicating life for developers
down the line and it can cause merge problems.

There has to be an obvious way to preserve the old behavior,
and I don't mean, by experimenting with all 160 options.
(Gee, would 1,600 options be even better?)

Making the user investigate by hand the 160 options is
really mean, and he doesn't have any confidence that the
old behavior can even be restored...
The old formatter is gone and has been replaced by a new implementation which 
is more powerful, and has far less bugs.

This new implementation will perform best on correct code, where the old one 
did better recover but has less granularity (did not recognize much constructs).

The old behavior won't be resurrected. Why aren't you reformatting all if you 
are so dependent on a particular formatter implementation ? Then from there on 
all should be fine. You can also tell the CVS compare to ignore whitespaces, 
which will ignore formatting.
I'm happy to use the new formatter, all I meant was that it should
have a profile in the UI that acts more-or-less like the old one.
(I guess this should have been a UI bug.)

If there was a way to "format all" then that would help, sure, but I
thought it did only one file at a time. Is there a way to format
multiple files?

Thanks for the quick reply...

Moving to UI for further consideration.
there's bug 12144 for format all, which is planed bot not committed for 3.0
for easier migration to the new code formatter there is bug 48962.

I really hope i'll be able to have a look at both things, but I'm really short
in time, so no promises.

*** This bug has been marked as a duplicate of 48962 ***</WithStack>
    <WithOutStack>Using 3.0M7...

The old code formatter is presently in use in projects
with cvs histories and branches that will require merging.

If in fact the old formatter was the standard operating
procedure then a developer could reformat the entire file
at any point without worry.

Now, if it does anything (I'll enter a separate bug for
its tendency to do nothing where the old one worked fine)
it's likely to do something different. This causes annoying
and useless cvs deltas, complicating life for developers
down the line and it can cause merge problems.

There has to be an obvious way to preserve the old behavior,
and I don't mean, by experimenting with all 160 options.
(Gee, would 1,600 options be even better?)

Making the user investigate by hand the 160 options is
really mean, and he doesn't have any confidence that the
old behavior can even be restored...
The old formatter is gone and has been replaced by a new implementation which 
is more powerful, and has far less bugs.

This new implementation will perform best on correct code, where the old one 
did better recover but has less granularity (did not recognize much constructs).

The old behavior won't be resurrected. Why aren't you reformatting all if you 
are so dependent on a particular formatter implementation ? Then from there on 
all should be fine. You can also tell the CVS compare to ignore whitespaces, 
which will ignore formatting.
I'm happy to use the new formatter, all I meant was that it should
have a profile in the UI that acts more-or-less like the old one.
(I guess this should have been a UI bug.)

If there was a way to "format all" then that would help, sure, but I
thought it did only one file at a time. Is there a way to format
multiple files?

Thanks for the quick reply...

Moving to UI for further consideration.
there's bug 12144 for format all, which is planed bot not committed for 3.0
for easier migration to the new code formatter there is bug 48962.

I really hope i'll be able to have a look at both things, but I'm really short
in time, so no promises.

*** This bug has been marked as a duplicate of 48962 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53966" />
    <CreationDate amount="2004-03-05 22:38:00 -0500" />
    <DupId amount="23341" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Extend File Search to also search jars with a source attachment [search]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Many times when using a 3rd party library (lets say wonder.jar), I would like to 
search its source code to track down constants, variables, etc. Great! I've 
already associated wonder-src.zip as the source attachment to wonder.jar. As it 
is, the Debugger perspective, Declaration view, Outline view, Javadoc view, and 
Context Sensetive help (Ctrl-space) all benefit from the association. It would 
be really nice if the associated source zip is also considered a search target 
(user selectable of course) when doing a File Search or Java Search.
I think that's already the case. references are also found in class files and
shown in the source (if you attached it).
You can also select elements in the source of a classfile and search for
declarations/references.

Can you give a an example? 
Thomas, you're the search expert, allow me tp pass this discussion to you.
Java search should work. please file PR's if it doesn't. File search is a
totally different story. We have been thinking on how to let others participate
in file search, but nothing firm yet.
P2, because it's should be a planning item.
Given the current planning no action is planned for 3.1
Sounds like a dup of bug 23341.
dup


*** This bug has been marked as a duplicate of 23341 ***</WithStack>
    <WithOutStack>Many times when using a 3rd party library (lets say wonder.jar), I would like to 
search its source code to track down constants, variables, etc. Great! I've 
already associated wonder-src.zip as the source attachment to wonder.jar. As it 
is, the Debugger perspective, Declaration view, Outline view, Javadoc view, and 
Context Sensetive help (Ctrl-space) all benefit from the association. It would 
be really nice if the associated source zip is also considered a search target 
(user selectable of course) when doing a File Search or Java Search.
I think that's already the case. references are also found in class files and
shown in the source (if you attached it).
You can also select elements in the source of a classfile and search for
declarations/references.

Can you give a an example? 
Thomas, you're the search expert, allow me tp pass this discussion to you.
Java search should work. please file PR's if it doesn't. File search is a
totally different story. We have been thinking on how to let others participate
in file search, but nothing firm yet.
P2, because it's should be a planning item.
Given the current planning no action is planned for 3.1
Sounds like a dup of bug 23341.
dup


*** This bug has been marked as a duplicate of 23341 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53967" />
    <CreationDate amount="2004-03-06 05:01:00 -0500" />
    <DupId amount="86845" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Renaming field to name of local variable [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="48" end="126" />
        <code>class MyClass {
    private int i;
    MyClass(int j) {
        i = j;
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="186" end="269" />
        <code>class MyClass {
    private int j;
    MyClass(int j) {
        this.j = j;
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi,

there is a problem refactoring this code:

class MyClass {
    private int i;
    MyClass(int j) {
        i = j;
    }
}

Renaming i into j displays a warning instead of creating

class MyClass {
    private int j;
    MyClass(int j) {
        this.j = j;
    }
}

IMHO "this.j" should be automatically created.

Igor
Time permitted


*** This bug has been marked as a duplicate of 86845 ***</WithStack>
    <WithOutStack>Hi,

there is a problem refactoring this code:

class MyClass {
    private int i;
    MyClass(int j) {
        i = j;
    }
}

Renaming i into j displays a warning instead of creating

class MyClass {
    private int j;
    MyClass(int j) {
        this.j = j;
    }
}

IMHO "this.j" should be automatically created.

Igor
Time permitted


*** This bug has been marked as a duplicate of 86845 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53968" />
    <CreationDate amount="2004-03-06 07:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[breakpoints] Allow specifying default filtering for a breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Maybe the title doesn't describe it well, so I will explain:

I debug the eclipse java compiler code, and I place breakpoints in the code. 
I want the breakpoints to be hit only in the "main" thread (there are many 
other helper threads that invoke the compiler code, and I want to go to 
debugger only on "save").
Today, after I place a breakpoint I must manually go to its properties, 
select "filtering" and click on the main thread. This is very tedious and 
annoying operation when you do it repeatedly.

I would like to have an option to have a "template" for breakpoints that would 
restrict them to the main thread by default. 
I know this may be problematic to implement, so I suggest identifying threads 
by theis names, or even using regular expressions.

Genady
I agree. Thread filtering is a pain to use because you have to have the 
threads before you can create the filter. However, at this point in the game 
it is unlikely that we will see enhancements to this in 3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Maybe the title doesn't describe it well, so I will explain:

I debug the eclipse java compiler code, and I place breakpoints in the code. 
I want the breakpoints to be hit only in the "main" thread (there are many 
other helper threads that invoke the compiler code, and I want to go to 
debugger only on "save").
Today, after I place a breakpoint I must manually go to its properties, 
select "filtering" and click on the main thread. This is very tedious and 
annoying operation when you do it repeatedly.

I would like to have an option to have a "template" for breakpoints that would 
restrict them to the main thread by default. 
I know this may be problematic to implement, so I suggest identifying threads 
by theis names, or even using regular expressions.

Genady
I agree. Thread filtering is a pain to use because you have to have the 
threads before you can create the filter. However, at this point in the game 
it is unlikely that we will see enhancements to this in 3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53969" />
    <CreationDate amount="2004-03-06 09:41:00 -0500" />
    <DupId amount="36918" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[WorkingSets] Add/Remove resources from a working set with a right click</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I think it would be nice to be able remove resources from a working set by 
right clicking them in the navigator/package explorer and using an appropriate 
command.
Not for 3.0
Reopening now that 3.0 has shipped


*** This bug has been marked as a duplicate of 36918 ***</WithStack>
    <WithOutStack>I think it would be nice to be able remove resources from a working set by 
right clicking them in the navigator/package explorer and using an appropriate 
command.
Not for 3.0
Reopening now that 3.0 has shipped


*** This bug has been marked as a duplicate of 36918 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53970" />
    <CreationDate amount="2004-03-06 10:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Widgets] Right click on folder in FileDialog and DirectoryDialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="265" end="833" />
        <code>public static void main (String [] args) {
		Display display = new Display ();
		Shell shell = new Shell (display);
		shell.open ();
		FileDialog dialog = new FileDialog (shell, SWT.SAVE);
		dialog.setFilterNames (new String [] {"Batch Files", "All 
Files (*.*)"});
		dialog.setFilterExtensions (new String [] 
{"*.bat", "*.*"}); //Windows wild cards
		dialog.setFilterPath ("c:\\"); //Windows path
		dialog.setFileName ("fred.bat");
		dialog.open ();
		while (!shell.isDisposed ()) {
			if (!display.readAndDispatch ()) display.sleep ();
		}
		display.dispose ();
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When right clicking on a folder in a FileDialog the application terminates 
without any error message.


The following code, taken from :

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet72.html

 will reproduce the bug :
	public static void main (String [] args) {
		Display display = new Display ();
		Shell shell = new Shell (display);
		shell.open ();
		FileDialog dialog = new FileDialog (shell, SWT.SAVE);
		dialog.setFilterNames (new String [] {"Batch Files", "All 
Files (*.*)"});
		dialog.setFilterExtensions (new String [] 
{"*.bat", "*.*"}); //Windows wild cards
		dialog.setFilterPath ("c:\\"); //Windows path
		dialog.setFileName ("fred.bat");
		dialog.open ();
		while (!shell.isDisposed ()) {
			if (!display.readAndDispatch ()) display.sleep ();
		}
		display.dispose ();
	}
This works fine for me with both win2k and winXP.

Try invoking the Save As... dialog in Notepad and report here whether it works 
or not.  It has been suggested that your regisry may be in a bad state, which 
would break the native file dialog everywhere.

I could reproduce this problem.

In 3.0M7 with Win2K,
File -&gt; Open external File -&gt; right click on file item.
Eclipse terminates.

This problem was generated not only in native file dialog
but in other JFace dialog.
File -&gt; Import -&gt; Existing Project into Workspace -&gt; Next -&gt; Browse.

In other native application(notepad.exe...),
Dialog works fine.

Created attachment 8486
console log when exception occurred
*** Bug 73543 has been marked as a duplicate of this bug. ***
Moving report to triage, see http://www.eclipse.org/swt/triage.php
for swt bug handling process.</WithStack>
    <WithOutStack>When right clicking on a folder in a FileDialog the application terminates 
without any error message.


The following code, taken from :

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet72.html

 will reproduce the bug :
	public static void main (String [] args) {
		Display display = new Display ();
		Shell shell = new Shell (display);
		shell.open ();
		FileDialog dialog = new FileDialog (shell, SWT.SAVE);
		dialog.setFilterNames (new String [] {"Batch Files", "All 
Files (*.*)"});
		dialog.setFilterExtensions (new String [] 
{"*.bat", "*.*"}); //Windows wild cards
		dialog.setFilterPath ("c:\\"); //Windows path
		dialog.setFileName ("fred.bat");
		dialog.open ();
		while (!shell.isDisposed ()) {
			if (!display.readAndDispatch ()) display.sleep ();
		}
		display.dispose ();
	}
This works fine for me with both win2k and winXP.

Try invoking the Save As... dialog in Notepad and report here whether it works 
or not.  It has been suggested that your regisry may be in a bad state, which 
would break the native file dialog everywhere.

I could reproduce this problem.

In 3.0M7 with Win2K,
File -&gt; Open external File -&gt; right click on file item.
Eclipse terminates.

This problem was generated not only in native file dialog
but in other JFace dialog.
File -&gt; Import -&gt; Existing Project into Workspace -&gt; Next -&gt; Browse.

In other native application(notepad.exe...),
Dialog works fine.

Created attachment 8486
console log when exception occurred
*** Bug 73543 has been marked as a duplicate of this bug. ***
Moving report to triage, see http://www.eclipse.org/swt/triage.php
for swt bug handling process.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53971" />
    <CreationDate amount="2004-03-06 10:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>Unexpected huge amount of computation for field rename</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="8">
        <Lines>
          <Line>- waiting on &lt;047211C0&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.core.search.indexing.IndexManager)</Line>
          <Line>at java.lang.Object.wait(Object.java:426)</Line>
          <Line>at org.eclipse.jdt.internal.core.search.processing.JobManager.run</Line>
          <Line>(JobManager.java:327)</Line>
          <Line>- locked &lt;047211C0&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.core.search.indexing.IndexManager)</Line>
          <Line>at java.lang.Thread.run(Thread.java:536)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- waiting on &lt;03DCFB88&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:426)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent</Line>
          <Line>(EventThread.java:167)</Line>
          <Line>- locked &lt;03DCFB88&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run</Line>
          <Line>(EventThread.java:118)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- waiting on &lt;03DCFD70&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:426)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent</Line>
          <Line>(EventThread.java:167)</Line>
          <Line>- locked &lt;03DCFD70&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run</Line>
          <Line>(EventThread.java:118)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030303

In 1.5 branch, tried to rename field 'localDeclaration' into 'element' on class 
IteratorForStatement. This field is never referenced anywhere outside in the 
CU, but refactoring seems to think otherwise.

It takes a minute to perform on a P3 1.2MHz, with memory peaking around 315MB 
(workspace is standard binary self-hosting with JDTCore projects in source form 
from JDK1_5 branch).

The impression is that it visits a lot more units so as to perform the 
precondition checking.

Also, there is no UI repaint during the entire refactoring action, which makes 
it look really bad from a user standpoint.

See below thread dump.

Full thread dump Java HotSpot(TM) Client VM (1.4.1_05-b01 mixed mode):

"Worker-152" prio=5 tid=0x18023C20 nid=0x7f8 in Object.wait() 
[22dff000..22dffd88]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:185)
        - locked &lt;0409CB20&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob
(WorkerPool.java:211)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17251008 
nid=0x880 runnable [22bff000..22bffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;094D1EF0&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17EB4988 
nid=0x8f4 runnable [22b5f000..22b5fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;094C3978&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Output Stream Monitor" prio=5 tid=0x172C4F00 nid=0x6e4 runnable 
[2151f000..2151fd88]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:174)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1
(OutputStreamMonitor.java:124)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:536)

"Output Stream Monitor" prio=5 tid=0x1727C0D0 nid=0x758 runnable 
[214df000..214dfd88]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:191)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:220)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:277)
        - locked &lt;089FEDC8&gt; (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1
(OutputStreamMonitor.java:124)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:536)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17D9BC20 
nid=0x824 runnable [211ff000..211ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;0890AE50&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x16FFB510 
nid=0x82c runnable [20dbf000..20dbfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;087B9ED8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172532E0 
nid=0x358 runnable [2098f000..2098fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07CA4748&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"ServerConnection" prio=7 tid=0x17D43AA8 nid=0x7a4 runnable [1f2ef000..1f2efd88]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:353)
        - locked &lt;07904BB8&gt; (a java.net.PlainSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:448)
        at java.net.ServerSocket.accept(ServerSocket.java:419)
        at 
org.eclipse.jdt.internal.junit.ui.RemoteTestRunnerClient$ServerConnection.run
(RemoteTestRunnerClient.java:236)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17D4B3F8 
nid=0x730 runnable [1d3ff000..1d3ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07752C30&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17EB4BA8 
nid=0x52c runnable [1d23f000..1d23fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;076CD608&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17CB9BE8 
nid=0x70c runnable [1baaf000..1baafd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;072B85F8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x170C5740 
nid=0x790 runnable [1b7bf000..1b7bfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07206EE8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17C39A50 
nid=0x668 runnable [1a8df000..1a8dfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06CFEE68&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17133828 
nid=0x6e8 runnable [1a82f000..1a82fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06CA9CB8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172355D0 
nid=0x48c runnable [1a2af000..1a2afd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06B41A88&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x1712CCB8 
nid=0x530 runnable [18b3f000..18b3fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;060414A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172E1C70 
nid=0x71c runnable [188ff000..188ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;05FC7CA0&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Java indexing" daemon prio=4 tid=0x16EE1BC8 nid=0x670 in Object.wait() 
[17baf000..17bafd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;047211C0&gt; (a 
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java:327)
        - locked &lt;047211C0&gt; (a 
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Thread.run(Thread.java:536)

"Start Level Event Dispatcher" daemon prio=5 tid=0x170CE008 nid=0x6c8 in 
Object.wait() [173af000..173afd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03DCFB88&gt; (a 
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent
(EventThread.java:167)
        - locked &lt;03DCFB88&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run
(EventThread.java:118)

"Framework Event Dispatcher" daemon prio=5 tid=0x00961DB8 nid=0x6c4 in 
Object.wait() [1736f000..1736fd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03DCFD70&gt; (a 
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent
(EventThread.java:167)
        - locked &lt;03DCFD70&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run
(EventThread.java:118)

"Signal Dispatcher" daemon prio=10 tid=0x008F8818 nid=0x6b4 waiting on 
condition [0..0]

"Finalizer" daemon prio=9 tid=0x008F7E80 nid=0x6ac in Object.wait() 
[16c0f000..16c0fd88]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;03DCFE98&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=10 tid=0x008F69F8 nid=0x6a8 in Object.wait() 
[16bcf000..16bcfd88]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:426)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:113)
        - locked &lt;03DCFBD8&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x00234E18 nid=0x69c runnable [6e000..6fc40]
        at org.eclipse.jdt.core.compiler.CharOperation.concatWith
(CharOperation.java:789)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:780)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:1062)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:672)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit
(SourceElementParser.java:1144)
        at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:118)
        at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:169)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:543)
        at 
org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation
(BecomeWorkingCopyOperation.java:38)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
        at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:739)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:838)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:814)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:808)
        at 
org.eclipse.jdt.internal.corext.util.WorkingCopyUtil.getNewWorkingCopy
(WorkingCopyUtil.java:74)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil.getNewWorki
ngCopies(RenameAnalyzeUtil.java:78)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.getNewOc
currences(RenameFieldProcessor.java:380)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.analyzeR
enameChanges(RenameFieldProcessor.java:364)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.checkInp
ut(RenameFieldProcessor.java:343)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameRefactoring.checkInput
(RenameRefactoring.java:148)
        at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:63)
        at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:109)
        at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run
(PerformChangeOperation.java:152)
        at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3203)
        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3160)
        at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:50)
        at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:302)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
        at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
        at 
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactorin
g(PerformRefactoringUtil.java:35)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:410)
        at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish
(UserInputWizardPage.java:118)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:473)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed
(RefactoringWizardDialog2.java:395)
        at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:263)
        at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)
        at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:638)
        at org.eclipse.jface.window.Window.open(Window.java:618)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:57)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate
(UserInterfaceStarter.java:112)
        at 
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activat
e(RenameUserInterfaceStarter.java:111)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run
(UserInterfaceStarter.java:68)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run
(UserInterfaceStarter.java:46)
        at 
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameRefactoringAction.run
(RenameRefactoringAction.java:73)
        at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog
(RenameSupport.java:94)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run
(RenameJavaElementAction.java:156)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run
(RenameJavaElementAction.java:119)
        at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:216)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:188)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
        at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
        at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
        at org.eclipse.core.launcher.Main.run(Main.java:745)
        at org.eclipse.core.launcher.Main.main(Main.java:713)

"VM Thread" prio=5 tid=0x008F57C0 nid=0x6a4 runnable

"VM Periodic Task Thread" prio=10 tid=0x0023F480 nid=0x440 waiting on condition
"Suspend Checker Thread" prio=10 tid=0x0023FDE0 nid=0x34c runnable
I had -Xmx256MB specified, I suspect not having these would have caused an out 
of memory on VM defaults.
FYI, IteratorForStatement got renamed into ForeachStatement. Interestingly, 
this refactoring took only seconds to perform.
I realized after the fact the reason of the issue. It went and performed rename 
actions in all my javadoc throughout the workspace as it must have found words 
matching my original field name.

I renamed it successively from 'localDeclaration' to 'element' to 'index' then 
to 'itemVariable'... now all my workspace source is trashed.

Raising priority.
&gt;It went and performed rename actions in all my javadoc

did you have the 'rename stuff in javadoc' checkbox selected?
Yes, the defaults. 
'rename stuff in javadoc' is not selected by default...
markus, can you find out why this is so memory intensive?
The major problem to me was that it trashed my workspace by renaming all 
occurrences of these words in every comment. Given the affected types had no 
reference to the renamed field, the end result was really gross.
I tagged it as P1 since it results in data loss.
- Enablement of 'Update References in Javadoc Comments' is persisted when the
refactoring is executed (-&gt; the 'default' only applies for a new workspace;
afterwards, the default is your last choice). 

- Currently, renaming in javadoc comments is done by a textual
search-and-replace in all CUs which could possibly reference the sought element. 
Since your field was public, the search scope included all CUs from all projects
referencing the project in which the field was declared. When renaming a
variable called e.g. 'element', thousands of textual replacements are calculated
and executed.

I am in the process of converting javadoc updates to use the search engine. We
expect that this solves such problems.

- There is a bug, which causes a search in working copies for all CUs with
textual replacements, even though only those with real matches should be
considered (this is necessary for detection of semantic changes due to
shadowing). The overhead will go away when javadoc updating is done via search/AST.

- There was a bug (since &lt; 2.0 ...), which caused the whole textual search to be
executed twice. I've fixed this one in HEAD.

- Refactoring dialogs are currently only responsive to cancel if 'Preview' has
been pressed. (See bugs 3738 and 47010.)

=&gt; All in one: thanks for reporting this severe bug (which was already there in
2.0 !). It will be fixed for M8. In the meantime, please disable 'Update
References in Javadoc Comments'.
Everything fixed &gt; 20040315.
Start verifiying...

Verfied that only CUs containing element changes are inspected in condition 
checking.</WithStack>
    <WithOutStack>Build 20030303

In 1.5 branch, tried to rename field 'localDeclaration' into 'element' on class 
IteratorForStatement. This field is never referenced anywhere outside in the 
CU, but refactoring seems to think otherwise.

It takes a minute to perform on a P3 1.2MHz, with memory peaking around 315MB 
(workspace is standard binary self-hosting with JDTCore projects in source form 
from JDK1_5 branch).

The impression is that it visits a lot more units so as to perform the 
precondition checking.

Also, there is no UI repaint during the entire refactoring action, which makes 
it look really bad from a user standpoint.

See below thread dump.

Full thread dump Java HotSpot(TM) Client VM (1.4.1_05-b01 mixed mode):

"Worker-152" prio=5 tid=0x18023C20 nid=0x7f8 in Object.wait() 
[22dff000..22dffd88]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:185)
        - locked &lt;0409CB20&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob
(WorkerPool.java:211)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17251008 
nid=0x880 runnable [22bff000..22bffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;094D1EF0&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17EB4988 
nid=0x8f4 runnable [22b5f000..22b5fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;094C3978&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Output Stream Monitor" prio=5 tid=0x172C4F00 nid=0x6e4 runnable 
[2151f000..2151fd88]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:174)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1
(OutputStreamMonitor.java:124)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:536)

"Output Stream Monitor" prio=5 tid=0x1727C0D0 nid=0x758 runnable 
[214df000..214dfd88]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:191)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:220)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:277)
        - locked &lt;089FEDC8&gt; (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1
(OutputStreamMonitor.java:124)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:177)
        at java.lang.Thread.run(Thread.java:536)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17D9BC20 
nid=0x824 runnable [211ff000..211ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;0890AE50&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x16FFB510 
nid=0x82c runnable [20dbf000..20dbfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;087B9ED8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172532E0 
nid=0x358 runnable [2098f000..2098fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07CA4748&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"ServerConnection" prio=7 tid=0x17D43AA8 nid=0x7a4 runnable [1f2ef000..1f2efd88]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:353)
        - locked &lt;07904BB8&gt; (a java.net.PlainSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:448)
        at java.net.ServerSocket.accept(ServerSocket.java:419)
        at 
org.eclipse.jdt.internal.junit.ui.RemoteTestRunnerClient$ServerConnection.run
(RemoteTestRunnerClient.java:236)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17D4B3F8 
nid=0x730 runnable [1d3ff000..1d3ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07752C30&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17EB4BA8 
nid=0x52c runnable [1d23f000..1d23fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;076CD608&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17CB9BE8 
nid=0x70c runnable [1baaf000..1baafd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;072B85F8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x170C5740 
nid=0x790 runnable [1b7bf000..1b7bfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;07206EE8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17C39A50 
nid=0x668 runnable [1a8df000..1a8dfd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06CFEE68&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x17133828 
nid=0x6e8 runnable [1a82f000..1a82fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06CA9CB8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172355D0 
nid=0x48c runnable [1a2af000..1a2afd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;06B41A88&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x1712CCB8 
nid=0x530 runnable [18b3f000..18b3fd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;060414A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x172E1C70 
nid=0x71c runnable [188ff000..188ffd88]
        at java.lang.Object.wait(Native Method)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:161)
        - locked &lt;05FC7CA0&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"Java indexing" daemon prio=4 tid=0x16EE1BC8 nid=0x670 in Object.wait() 
[17baf000..17bafd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;047211C0&gt; (a 
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java:327)
        - locked &lt;047211C0&gt; (a 
org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at java.lang.Thread.run(Thread.java:536)

"Start Level Event Dispatcher" daemon prio=5 tid=0x170CE008 nid=0x6c8 in 
Object.wait() [173af000..173afd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03DCFB88&gt; (a 
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent
(EventThread.java:167)
        - locked &lt;03DCFB88&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run
(EventThread.java:118)

"Framework Event Dispatcher" daemon prio=5 tid=0x00961DB8 nid=0x6c4 in 
Object.wait() [1736f000..1736fd88]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03DCFD70&gt; (a 
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:426)
        at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent
(EventThread.java:167)
        - locked &lt;03DCFD70&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run
(EventThread.java:118)

"Signal Dispatcher" daemon prio=10 tid=0x008F8818 nid=0x6b4 waiting on 
condition [0..0]

"Finalizer" daemon prio=9 tid=0x008F7E80 nid=0x6ac in Object.wait() 
[16c0f000..16c0fd88]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;03DCFE98&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=10 tid=0x008F69F8 nid=0x6a8 in Object.wait() 
[16bcf000..16bcfd88]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:426)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:113)
        - locked &lt;03DCFBD8&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x00234E18 nid=0x69c runnable [6e000..6fc40]
        at org.eclipse.jdt.core.compiler.CharOperation.concatWith
(CharOperation.java:789)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:780)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:1062)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequest
or(SourceElementParser.java:672)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit
(SourceElementParser.java:1144)
        at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:118)
        at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:169)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:543)
        at 
org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation
(BecomeWorkingCopyOperation.java:38)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
        at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:739)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:838)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:814)
        at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:808)
        at 
org.eclipse.jdt.internal.corext.util.WorkingCopyUtil.getNewWorkingCopy
(WorkingCopyUtil.java:74)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil.getNewWorki
ngCopies(RenameAnalyzeUtil.java:78)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.getNewOc
currences(RenameFieldProcessor.java:380)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.analyzeR
enameChanges(RenameFieldProcessor.java:364)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.checkInp
ut(RenameFieldProcessor.java:343)
        at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameRefactoring.checkInput
(RenameRefactoring.java:148)
        at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:63)
        at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:109)
        at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run
(PerformChangeOperation.java:152)
        at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:700)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1567)
        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3203)
        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3160)
        at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:50)
        at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:302)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
        at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
        at 
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactorin
g(PerformRefactoringUtil.java:35)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:410)
        at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish
(UserInputWizardPage.java:118)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish
(RefactoringWizard.java:473)
        at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed
(RefactoringWizardDialog2.java:395)
        at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:263)
        at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)
        at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:638)
        at org.eclipse.jface.window.Window.open(Window.java:618)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:57)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate
(UserInterfaceStarter.java:112)
        at 
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activat
e(RenameUserInterfaceStarter.java:111)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run
(UserInterfaceStarter.java:68)
        at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run
(UserInterfaceStarter.java:46)
        at 
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameRefactoringAction.run
(RenameRefactoringAction.java:73)
        at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog
(RenameSupport.java:94)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run
(RenameJavaElementAction.java:156)
        at 
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run
(RenameJavaElementAction.java:119)
        at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:216)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:188)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
        at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
        at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2352)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2033)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
        at org.eclipse.core.launcher.Main.run(Main.java:745)
        at org.eclipse.core.launcher.Main.main(Main.java:713)

"VM Thread" prio=5 tid=0x008F57C0 nid=0x6a4 runnable

"VM Periodic Task Thread" prio=10 tid=0x0023F480 nid=0x440 waiting on condition
"Suspend Checker Thread" prio=10 tid=0x0023FDE0 nid=0x34c runnable
I had -Xmx256MB specified, I suspect not having these would have caused an out 
of memory on VM defaults.
FYI, IteratorForStatement got renamed into ForeachStatement. Interestingly, 
this refactoring took only seconds to perform.
I realized after the fact the reason of the issue. It went and performed rename 
actions in all my javadoc throughout the workspace as it must have found words 
matching my original field name.

I renamed it successively from 'localDeclaration' to 'element' to 'index' then 
to 'itemVariable'... now all my workspace source is trashed.

Raising priority.
&gt;It went and performed rename actions in all my javadoc

did you have the 'rename stuff in javadoc' checkbox selected?
Yes, the defaults. 
'rename stuff in javadoc' is not selected by default...
markus, can you find out why this is so memory intensive?
The major problem to me was that it trashed my workspace by renaming all 
occurrences of these words in every comment. Given the affected types had no 
reference to the renamed field, the end result was really gross.
I tagged it as P1 since it results in data loss.
- Enablement of 'Update References in Javadoc Comments' is persisted when the
refactoring is executed (-&gt; the 'default' only applies for a new workspace;
afterwards, the default is your last choice). 

- Currently, renaming in javadoc comments is done by a textual
search-and-replace in all CUs which could possibly reference the sought element. 
Since your field was public, the search scope included all CUs from all projects
referencing the project in which the field was declared. When renaming a
variable called e.g. 'element', thousands of textual replacements are calculated
and executed.

I am in the process of converting javadoc updates to use the search engine. We
expect that this solves such problems.

- There is a bug, which causes a search in working copies for all CUs with
textual replacements, even though only those with real matches should be
considered (this is necessary for detection of semantic changes due to
shadowing). The overhead will go away when javadoc updating is done via search/AST.

- There was a bug (since &lt; 2.0 ...), which caused the whole textual search to be
executed twice. I've fixed this one in HEAD.

- Refactoring dialogs are currently only responsive to cancel if 'Preview' has
been pressed. (See bugs 3738 and 47010.)

=&gt; All in one: thanks for reporting this severe bug (which was already there in
2.0 !). It will be fixed for M8. In the meantime, please disable 'Update
References in Javadoc Comments'.
Everything fixed &gt; 20040315.
Start verifiying...

Verfied that only CUs containing element changes are inspected in condition 
checking.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53972" />
    <CreationDate amount="2004-03-06 11:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unbound classpath container (requiredPlugins)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We were playing around with the OSGI stuff, and have been stuck with some 
problems..

The code is from the Sangam plugin project - http://sangam.sourceforge.net, 
which you can anonymously checkout from cvs.sourceforge.net (/cvsroot/sangam). 
The module in question is org.sangam.plugin.

We're relying on plugin.xml providing the dependencies in one place, and 
referencing that from our classpath as:
&lt;classpath&gt;
	&lt;classpathentry kind="src" path="src"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/&gt;
	&lt;classpathentry kind="con" 
path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind="output" path="bin"/&gt;
&lt;/classpath&gt;

plugin.xml has these lines:
   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.eclipse.swt"/&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.ui.workbench"/&gt;
      &lt;import plugin="org.eclipse.jdt.core"/&gt;
      &lt;import plugin="org.eclipse.jdt.ui"/&gt;
      &lt;import plugin="org.eclipse.debug.ui"/&gt;
      &lt;import plugin="org.eclipse.debug.core"/&gt;
      &lt;import plugin="org.eclipse.jdt.launching"/&gt;
      &lt;import plugin="org.eclipse.jdt.debug.ui"/&gt;
      &lt;import plugin="org.eclipse.jdt.debug"/&gt;
      &lt;import plugin="org.eclipse.jface.text"/&gt;
      &lt;import plugin="org.junit"/&gt;
      &lt;import plugin="org.syncshare.server"/&gt;
      &lt;import plugin="org.eclipse.ui.workbench.texteditor"/&gt;
      &lt;import plugin="org.eclipse.ui.editors"/&gt;
      &lt;import plugin="org.eclipse.core.resources"/&gt;
   &lt;/requires&gt;

However, on my machine, the project does not compile. I see:
Unbound classpath container: org.eclipse.pde.core.requiredPlugins
I am using M7. 

The funny thing is, another developer on team who also uses M7 finds it working 
correctly...
I get this problem with another plugin. If I remove the plugin project from the 
workspace (not the files) and import it again, it recognizes requiredPlugins as 
a container. That is, until I close Eclipse, because next time I start it, it's 
the same problem.

I have this plugin project on two machines (identical, from CVS) and on one it 
works perfectly fine.

regards,
Vlad (vlad_dumitrescu@nospam.hotmail.com)
Some more info, hopefully it helps:

In the "Java Build Path", the requiredPlugins container is showing 
as "org.eclipse.pde.core,requiredPlugins" (instead of "Required plugins") and 
is empty. Removing it and readding it doesn't help.

Also I have more several plugin projects in my workspace, and some work fine, 
some don't.

Thanks in advance.
/Vlad

what build are you using?
Oh, I didn't mention it because it's the same as the original reporter's: 
3.0M7. I run Win2k and use jdk1.4.2_03, if if helps.
/Vlad
Fixed in M8.  PDE uses a new Resolver for classpath computation.</WithStack>
    <WithOutStack>We were playing around with the OSGI stuff, and have been stuck with some 
problems..

The code is from the Sangam plugin project - http://sangam.sourceforge.net, 
which you can anonymously checkout from cvs.sourceforge.net (/cvsroot/sangam). 
The module in question is org.sangam.plugin.

We're relying on plugin.xml providing the dependencies in one place, and 
referencing that from our classpath as:
&lt;classpath&gt;
	&lt;classpathentry kind="src" path="src"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/&gt;
	&lt;classpathentry kind="con" 
path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind="output" path="bin"/&gt;
&lt;/classpath&gt;

plugin.xml has these lines:
   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.eclipse.swt"/&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.ui.workbench"/&gt;
      &lt;import plugin="org.eclipse.jdt.core"/&gt;
      &lt;import plugin="org.eclipse.jdt.ui"/&gt;
      &lt;import plugin="org.eclipse.debug.ui"/&gt;
      &lt;import plugin="org.eclipse.debug.core"/&gt;
      &lt;import plugin="org.eclipse.jdt.launching"/&gt;
      &lt;import plugin="org.eclipse.jdt.debug.ui"/&gt;
      &lt;import plugin="org.eclipse.jdt.debug"/&gt;
      &lt;import plugin="org.eclipse.jface.text"/&gt;
      &lt;import plugin="org.junit"/&gt;
      &lt;import plugin="org.syncshare.server"/&gt;
      &lt;import plugin="org.eclipse.ui.workbench.texteditor"/&gt;
      &lt;import plugin="org.eclipse.ui.editors"/&gt;
      &lt;import plugin="org.eclipse.core.resources"/&gt;
   &lt;/requires&gt;

However, on my machine, the project does not compile. I see:
Unbound classpath container: org.eclipse.pde.core.requiredPlugins
I am using M7. 

The funny thing is, another developer on team who also uses M7 finds it working 
correctly...
I get this problem with another plugin. If I remove the plugin project from the 
workspace (not the files) and import it again, it recognizes requiredPlugins as 
a container. That is, until I close Eclipse, because next time I start it, it's 
the same problem.

I have this plugin project on two machines (identical, from CVS) and on one it 
works perfectly fine.

regards,
Vlad (vlad_dumitrescu@nospam.hotmail.com)
Some more info, hopefully it helps:

In the "Java Build Path", the requiredPlugins container is showing 
as "org.eclipse.pde.core,requiredPlugins" (instead of "Required plugins") and 
is empty. Removing it and readding it doesn't help.

Also I have more several plugin projects in my workspace, and some work fine, 
some don't.

Thanks in advance.
/Vlad

what build are you using?
Oh, I didn't mention it because it's the same as the original reporter's: 
3.0M7. I run Win2k and use jdk1.4.2_03, if if helps.
/Vlad
Fixed in M8.  PDE uses a new Resolver for classpath computation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53973" />
    <CreationDate amount="2004-03-06 13:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Errors for marker not found when editing a file with errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using 0304, I got these errors in the .log file while editing a file with errors
and task markers.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.280
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.440
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.470
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.480
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.490
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.500
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.510
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.520
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.530
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.540
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.560
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.570
!MESSAGE Marker id: 36 not found.
This was due to stale errors being shown which no longer occurs.</WithStack>
    <WithOutStack>Using 0304, I got these errors in the .log file while editing a file with errors
and task markers.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.280
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.440
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.470
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.480
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.490
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.500
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.510
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.520
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.530
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.540
!MESSAGE Marker id: 36 not found.
!ENTRY org.eclipse.ui.ide 4 4 mars 06, 2004 12:51:31.560
!MESSAGE Error accessing marker type
!ENTRY org.eclipse.core.resources 4 376 mars 06, 2004 12:51:31.570
!MESSAGE Marker id: 36 not found.
This was due to stale errors being shown which no longer occurs.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53974" />
    <CreationDate amount="2004-03-06 13:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>I20040304: Problems with classpath and dependencies</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- fresh workspace</Line>
          <Line>- created new plugin A (blank UI plugin with manifest)</Line>
          <Line>- created new plugin B (blank plugin with manifest)</Line>
          <Line>- added plugin B to the dependencies of plugin A</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Hi!

Tried I20040304 today and can't continue development because PDE doesn't 
resolve a correct classpath.

- fresh workspace
- created new plugin A (blank UI plugin with manifest)
- created new plugin B (blank plugin with manifest)
- added plugin B to the dependencies of plugin A

plugin.xml plugin A shows:
   &lt;requires&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.wagenknecht.eclipse.common.tools"/&gt;
   &lt;/requires&gt;

But plugin B doesn't appear on the classpath of plugin A. If I add it manually 
as project reference it is immediately removed when clicking ok. Thus, I have 
no chance to add it to the classpath of plugin A. I think the PDE classpath 
container removes it.

I tried closing and reopening the projects and the workbench. Still not 
possible to get plugin B on the classpath of plugin A althoug it is in the 
dependency list.

The plugin dependencies view for plugin A doesn't show up plugin B (only 
core.runtime and ui).
I am assuming that when you say a "plugin with manifest" that you mean an OSGi 
bundle manifest.mf.

This option is for advanced users only.
If you do so, then the list of required plug-ins will be taken from the 
manifest.mf, and NOT from the plugin.xml.  Actually, if you're in this mode, 
the plugin.xml will be used by PDE and the runtime to read any 
extensions/extension points you might have, and the rest (plugin id, prereqs, 
libraries, etc.) are all read from the manifest.mf exclusively.

If you want to work in this mode, and you want to add more pre-reqs for your 
plug-in, then modify the require-bundle key in the manifest.mf.


Are there any docs about this "mode" (pro/con)?
Docs about manifest.mf can be found on the Platform/Core development resources 
page.
For 3.0, we recommend that users stick with old format structure (i.e. 
plugin.xml only, no manifest.mf).  The only time when one might need a 
manifest.mf is if he needs to express something that can't be done in 
plugin.xml.  These are very rare cases (e.g. &lt;&lt;1%), and hence this alternate 
format structure has been clearly labeled "For Advanced Users Only" in the 
wizard.</WithStack>
    <WithOutStack>Hi!

Tried I20040304 today and can't continue development because PDE doesn't 
resolve a correct classpath.

- fresh workspace
- created new plugin A (blank UI plugin with manifest)
- created new plugin B (blank plugin with manifest)
- added plugin B to the dependencies of plugin A

plugin.xml plugin A shows:
   &lt;requires&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.wagenknecht.eclipse.common.tools"/&gt;
   &lt;/requires&gt;

But plugin B doesn't appear on the classpath of plugin A. If I add it manually 
as project reference it is immediately removed when clicking ok. Thus, I have 
no chance to add it to the classpath of plugin A. I think the PDE classpath 
container removes it.

I tried closing and reopening the projects and the workbench. Still not 
possible to get plugin B on the classpath of plugin A althoug it is in the 
dependency list.

The plugin dependencies view for plugin A doesn't show up plugin B (only 
core.runtime and ui).
I am assuming that when you say a "plugin with manifest" that you mean an OSGi 
bundle manifest.mf.

This option is for advanced users only.
If you do so, then the list of required plug-ins will be taken from the 
manifest.mf, and NOT from the plugin.xml.  Actually, if you're in this mode, 
the plugin.xml will be used by PDE and the runtime to read any 
extensions/extension points you might have, and the rest (plugin id, prereqs, 
libraries, etc.) are all read from the manifest.mf exclusively.

If you want to work in this mode, and you want to add more pre-reqs for your 
plug-in, then modify the require-bundle key in the manifest.mf.


Are there any docs about this "mode" (pro/con)?
Docs about manifest.mf can be found on the Platform/Core development resources 
page.
For 3.0, we recommend that users stick with old format structure (i.e. 
plugin.xml only, no manifest.mf).  The only time when one might need a 
manifest.mf is if he needs to express something that can't be done in 
plugin.xml.  These are very rare cases (e.g. &lt;&lt;1%), and hence this alternate 
format structure has been clearly labeled "For Advanced Users Only" in the 
wizard.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53975" />
    <CreationDate amount="2004-03-06 13:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Open tag in documentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="234" end="304" />
        <code>adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;</code>
      </source_code>
      <source_code type="assignment">
        <location start="413" end="487" />
        <code>adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;&amp;gt;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using 0304, in the project
org.eclipse.platform.source/src/org.eclipse.core.runtime_3.0.0/schema, the file
adapters.exsd contains an open tag line 102.
         &amp;lt;factory 
            class=&amp;quot;com.xyz.MyFileAdapterFactory&amp;quot; 
            adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;

should be replaced with:
         &amp;lt;factory 
            class=&amp;quot;com.xyz.MyFileAdapterFactory&amp;quot; 
            adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;&amp;gt;
Fixed and released to HEAD.</WithStack>
    <WithOutStack>Using 0304, in the project
org.eclipse.platform.source/src/org.eclipse.core.runtime_3.0.0/schema, the file
adapters.exsd contains an open tag line 102.
         &amp;lt;factory 
            class=&amp;quot;com.xyz.MyFileAdapterFactory&amp;quot; 
            adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;

should be replaced with:
         &amp;lt;factory 
            class=&amp;quot;com.xyz.MyFileAdapterFactory&amp;quot; 
            adaptableType=&amp;quot;org.eclipse.core.resources.IFile&amp;quot;&amp;gt;
Fixed and released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53976" />
    <CreationDate amount="2004-03-06 13:19:00 -0500" />
    <DupId amount="148101" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Builder] [Performance] Changing the workspace global compiler settings recompiles project with local compiler settings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using 0304, when you change the global compiler settings, all projects are
recompiled including the ones that have their own compiler settings. This is
useless and inefficient as a global compiler settings change has no effect on
these projects.
The full workspace build is requested by JDT UI
(OptionsConfigurationBlock.doBuild).  A possible solution is that JDT core could
discard built states (IncrementalProjectBuilder.forgetLastBuiltState()) for all
projects that are affected by the preference change.  That way, JDT UI could
just perform an incremental workspace build, and the builder infrastructure
would induce full builds for all projects whose built state has been discarded.
It seems like a losing battle for JDT UI to figure out exactly which projects
require a full build.
I agree with John. JDT.UI shouldn't get in the field of understanding build
dependencies. The clean way would probably be if JavaCore.setOptions makes the
analysis and even starts an autobuild if enabled (would required that a
IProgressMonitor is passed in).
Anyhow, I'm not sure if it's worth the effort.
The workspace full build is asimple and safe solution for global preference 
changes. Not optimal, but still probably good enough in most situations.


To clarify, I believe that most cases where people play with global compiler 
settings is just a workaround for a lack of compiler profile (like formatting 
profile). If people had a way to customize set of compiler preferences, then 
each project would naturally carry one or another. Then people would no longer 
need to workaround this by using the global preferences as representing 
defaults (vs. the few ones you really care about and associate with project 
prefs).
Not for 3.0
Set as duplicate of an older bug 148101 because work has been already done on that one...


*** This bug has been marked as a duplicate of bug 148101 ***</WithStack>
    <WithOutStack>Using 0304, when you change the global compiler settings, all projects are
recompiled including the ones that have their own compiler settings. This is
useless and inefficient as a global compiler settings change has no effect on
these projects.
The full workspace build is requested by JDT UI
(OptionsConfigurationBlock.doBuild).  A possible solution is that JDT core could
discard built states (IncrementalProjectBuilder.forgetLastBuiltState()) for all
projects that are affected by the preference change.  That way, JDT UI could
just perform an incremental workspace build, and the builder infrastructure
would induce full builds for all projects whose built state has been discarded.
It seems like a losing battle for JDT UI to figure out exactly which projects
require a full build.
I agree with John. JDT.UI shouldn't get in the field of understanding build
dependencies. The clean way would probably be if JavaCore.setOptions makes the
analysis and even starts an autobuild if enabled (would required that a
IProgressMonitor is passed in).
Anyhow, I'm not sure if it's worth the effort.
The workspace full build is asimple and safe solution for global preference 
changes. Not optimal, but still probably good enough in most situations.


To clarify, I believe that most cases where people play with global compiler 
settings is just a workaround for a lack of compiler profile (like formatting 
profile). If people had a way to customize set of compiler preferences, then 
each project would naturally carry one or another. Then people would no longer 
need to workaround this by using the global preferences as representing 
defaults (vs. the few ones you really care about and associate with project 
prefs).
Not for 3.0
Set as duplicate of an older bug 148101 because work has been already done on that one...


*** This bug has been marked as a duplicate of bug 148101 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53977" />
    <CreationDate amount="2004-03-06 14:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[DCR] [Javadoc] Add a Javadoc option not to report errors on non-visible references</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="890" end="1288" />
        <code>/**
     * Calls {@link Visitor#visit(ThisClass)}. Note that {@link Visitor} can be
    * subclassed to provide custom traversals. If the traversal of a {@link
ParentClass}
    * is customized, the overridden method {@link Visitor#traverse(ParentClass)}
    * would call this method only if it wants to traverse &lt;code&gt;ThisClass&lt;/code&gt;.
     *
     * @param visitor the {@link Visitor}.
     */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1289" end="1364" />
        <code>public void accept(Visitor visitor) {
       visitor.visit(this);
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In Preferences/Java/Compiler/Javadoc, I have set "Malformed Javadoc comments" to
true. When I insert a {@link ClassName#methodName()} in the javadoc of one of my
classes, and "methodName()" is protected, it triggers the warning:

Javadoc: the method methodName()  from the type ClassName is not visible

Which is true, but there again, creating a javadoc reference to a protected
method in another class is not like calling it; I feel it's probably a fairly
legitimate thing to do most of the time and also causes no complaints from
javadoc when it is run (generating javadoc against public and protected members
which is fairly normal too). Is it possible to add an option to disable the
warning for this case while keeping warnings for other types of malformed comments?

My specific example if your interested is below. The protected method in
question is Visitor.traverse(ParentClass).

    /**
     * Calls {@link Visitor#visit(ThisClass)}. Note that {@link Visitor} can be
    * subclassed to provide custom traversals. If the traversal of a {@link
ParentClass}
    * is customized, the overridden method {@link Visitor#traverse(ParentClass)}
    * would call this method only if it wants to traverse &lt;code&gt;ThisClass&lt;/code&gt;.
     *
     * @param visitor the {@link Visitor}.
     */
    public void accept(Visitor visitor) {
       visitor.visit(this);
    }
This is a requirement for a new option, not a bug.

*** Bug 60571 has been marked as a duplicate of this bug. ***
Post 3.0
I think this is a bug, not a feature request.
The fact that a reference is non-visible in code does not apply for Javadoc 
references.
To fix it, I don't think adding a new option is the way to go, simply do not 
report that warning.
I would suggest to have that in 3.0 as otherwise I can't get my code warning-
free what lowers the usability of the Javadoc compiler warnings.
I disagree. We treat Javadoc exactly as we treat source code. Visibility is 
enforced, and I suspect the extra warnings you can't get rid of are not in 
real API javadoc. If so, these would likely be inconsistent since targeting 
entities which aren't part of the javadoc in the end.

This is a useful warning. We may tweak it some more post 3.0.
Try my example in bug 60571. Generate documentation using javadoc.exe and you 
get (with no warning or error) the documentation containing a link to a method 
that I couldn't call in my code due to visibility restrictions, but that 
Javadoc obviously still allows my to refer to in my documentation.

The Javadoc tool is setting the rules here, we shouldn't invent our own.

Note that there might be somthing related:
We can say to only generate documentation for public members. In that case it 
would make sense to warn on all references that point to protected or less 
visible members. This is not the problem here. Here I configured to document 
all classes. Maybe that's what you had in mind, but then the current 
implementation has a bug.


*** Bug 75068 has been marked as a duplicate of this bug. ***
Reconsider for 3.1
Fixed.

New compiler option has been added to address this issue:
 * COMPILER / Reporting Invalid Javadoc Tags with Not Visible References
 *    Specify whether the compiler will report non-visible references used in
Javadoc tags.
 *    &lt;br&gt;Note that this diagnosis can be enabled based on the visibility of the
construct associated with the Javadoc;
 *    also see the setting
"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility".
 *     - option id:        
"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef"
 *     - possible values:   { "enabled", "disabled" }
 *     - default:           "enabled"
 * 

See also bug 75701.

[jdt-core-internal]
Test cases added in JavadocTestOptions.
Verified for 3.1M3 with build I20041102
*** Bug 84683 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>In Preferences/Java/Compiler/Javadoc, I have set "Malformed Javadoc comments" to
true. When I insert a {@link ClassName#methodName()} in the javadoc of one of my
classes, and "methodName()" is protected, it triggers the warning:

Javadoc: the method methodName()  from the type ClassName is not visible

Which is true, but there again, creating a javadoc reference to a protected
method in another class is not like calling it; I feel it's probably a fairly
legitimate thing to do most of the time and also causes no complaints from
javadoc when it is run (generating javadoc against public and protected members
which is fairly normal too). Is it possible to add an option to disable the
warning for this case while keeping warnings for other types of malformed comments?

My specific example if your interested is below. The protected method in
question is Visitor.traverse(ParentClass).

    /**
     * Calls {@link Visitor#visit(ThisClass)}. Note that {@link Visitor} can be
    * subclassed to provide custom traversals. If the traversal of a {@link
ParentClass}
    * is customized, the overridden method {@link Visitor#traverse(ParentClass)}
    * would call this method only if it wants to traverse &lt;code&gt;ThisClass&lt;/code&gt;.
     *
     * @param visitor the {@link Visitor}.
     */
    public void accept(Visitor visitor) {
       visitor.visit(this);
    }
This is a requirement for a new option, not a bug.

*** Bug 60571 has been marked as a duplicate of this bug. ***
Post 3.0
I think this is a bug, not a feature request.
The fact that a reference is non-visible in code does not apply for Javadoc 
references.
To fix it, I don't think adding a new option is the way to go, simply do not 
report that warning.
I would suggest to have that in 3.0 as otherwise I can't get my code warning-
free what lowers the usability of the Javadoc compiler warnings.
I disagree. We treat Javadoc exactly as we treat source code. Visibility is 
enforced, and I suspect the extra warnings you can't get rid of are not in 
real API javadoc. If so, these would likely be inconsistent since targeting 
entities which aren't part of the javadoc in the end.

This is a useful warning. We may tweak it some more post 3.0.
Try my example in bug 60571. Generate documentation using javadoc.exe and you 
get (with no warning or error) the documentation containing a link to a method 
that I couldn't call in my code due to visibility restrictions, but that 
Javadoc obviously still allows my to refer to in my documentation.

The Javadoc tool is setting the rules here, we shouldn't invent our own.

Note that there might be somthing related:
We can say to only generate documentation for public members. In that case it 
would make sense to warn on all references that point to protected or less 
visible members. This is not the problem here. Here I configured to document 
all classes. Maybe that's what you had in mind, but then the current 
implementation has a bug.


*** Bug 75068 has been marked as a duplicate of this bug. ***
Reconsider for 3.1
Fixed.

New compiler option has been added to address this issue:
 * COMPILER / Reporting Invalid Javadoc Tags with Not Visible References
 *    Specify whether the compiler will report non-visible references used in
Javadoc tags.
 *    &lt;br&gt;Note that this diagnosis can be enabled based on the visibility of the
construct associated with the Javadoc;
 *    also see the setting
"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility".
 *     - option id:        
"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef"
 *     - possible values:   { "enabled", "disabled" }
 *     - default:           "enabled"
 * 

See also bug 75701.

[jdt-core-internal]
Test cases added in JavadocTestOptions.
Verified for 3.1M3 with build I20041102
*** Bug 84683 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53978" />
    <CreationDate amount="2004-03-06 15:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>manifest.mf of org.eclipse.swt is not consistent with plugin.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the plugin.xml for org.eclipse.swt, it lists one library $ws$/swt.jar.  
This is fine.

In the manifest.mf of org.eclipse.swt, there is no corresponding Bundle-
Classpath Entry.  Instead there is an entry in the manifest.mf of 
org.eclipse.swt.win32 that lists ws/win32/swt.jar.

This is a huge problem, since at development time as per the resolution of bug 
45799, only libraries explicitly listed in the plug-in can/should be listed on 
clients of swt.  With the current content of manifest.mf, clients of swt will 
not have swt.jar on their classpath causing a large number of errors and an 
influx of bug reports against PDE UI.

Manifest.mf must support the $ws$ syntax of the plugin.xml for everything to 
go back to normal.
The manifest files in SWT were provided by Jeff's team.  Jeff, can we change 
the manifests to use the $ws syntax or will this break OSGI?
Jeff, what is going on this front?
A Bundle-Classpath entry is required for PDE to compute the classpath 
correctly.  Provide-package by itself is not going to cut it.
Tom confirms that the runtime is happy if we just change the manifests back to 
have $ws$/swt.jar.

Wassim has confirmed that this fixes the problem for him.

Jeff will sit with the SWT team to make the manifest changes for M8.
fixed by CC with Jeff

Fixed, and released to map. Will be in noon build.
Is there a workaround for this problem in the meantime?
A workaround is described in bug 56108. This works for me.</WithStack>
    <WithOutStack>In the plugin.xml for org.eclipse.swt, it lists one library $ws$/swt.jar.  
This is fine.

In the manifest.mf of org.eclipse.swt, there is no corresponding Bundle-
Classpath Entry.  Instead there is an entry in the manifest.mf of 
org.eclipse.swt.win32 that lists ws/win32/swt.jar.

This is a huge problem, since at development time as per the resolution of bug 
45799, only libraries explicitly listed in the plug-in can/should be listed on 
clients of swt.  With the current content of manifest.mf, clients of swt will 
not have swt.jar on their classpath causing a large number of errors and an 
influx of bug reports against PDE UI.

Manifest.mf must support the $ws$ syntax of the plugin.xml for everything to 
go back to normal.
The manifest files in SWT were provided by Jeff's team.  Jeff, can we change 
the manifests to use the $ws syntax or will this break OSGI?
Jeff, what is going on this front?
A Bundle-Classpath entry is required for PDE to compute the classpath 
correctly.  Provide-package by itself is not going to cut it.
Tom confirms that the runtime is happy if we just change the manifests back to 
have $ws$/swt.jar.

Wassim has confirmed that this fixes the problem for him.

Jeff will sit with the SWT team to make the manifest changes for M8.
fixed by CC with Jeff

Fixed, and released to map. Will be in noon build.
Is there a workaround for this problem in the meantime?
A workaround is described in bug 56108. This works for me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53979" />
    <CreationDate amount="2004-03-06 20:04:00 -0500" />
    <DupId amount="136397" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[ActionSets] Plug-ins with action sets creating dynamic submenus are activated too eagerly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: I-22040304

Launch Eclipse an a fresh workspace.
From the Resource Perspective, open the Plug-in Registry view via
Window &gt; Show View &gt; Other &gt; PDE Runtime &gt; Plug-in Registry.

Note that the registry shows org.eclipse.debug.core and org.eclipse.debug.ui 
as already active.  This is very surprising as I have not invoked any Debug 
capabilities yet.

Note that I came across this as I was testing the revamped Plug-in Registry 
view.  I was not using the Spy tools available from the Core team, so I am 
unable to provide more information as to what prompted the premature 
initialization of the Debug plug-ins.

By the way, while you're at it, org.eclipse.ui.externaltools was also active 
for some reason.
Sorry, I am using the build 20040304, not 22040304.
Minority Report was on TV today, and every time I watch this Tom Cruise movie 
I get confused.  I am not reporting an error that will occur in the future :-)
Likely due to the launch drop-down menus being populated. There was a bug 
report about this in 2.1, that we never fixed (but I can't find it now). It 
turned out to be a workbench issue - aggressivley loading actions.
This is due to the pull-down menu items. Here is the classload stack trace 
(generated with a "Class Prepare Breakpoint" on the DebugUIPlugin). Moving to 
UI for comment - this may be a duplicate bug report.

Thread [0] (Class prepare: org.eclipse.debug.internal.ui.DebugUIPlugin)
	java.lang.Class.getDeclaredConstructors0(boolean) line: not available 
[native method]
	java.lang.Class.privateGetDeclaredConstructors(boolean) line: 1610
	java.lang.Class.getConstructor0(java.lang.Class[], int) line: 1922
	java.lang.Class.getConstructor(java.lang.Class[]) line: 1019
	org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActi
vation() line: 446
	org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
() line: 404
	org.eclipse.core.internal.plugins.PluginDescriptor.getPlugin() line: 
372
	org.eclipse.core.internal.compatibility.PluginActivator.start
(org.osgi.framework.BundleContext) line: 48
	org.eclipse.osgi.framework.internal.core.BundleContext$1.run() line: 
992
	java.security.AccessController.doPrivileged
(java.security.PrivilegedExceptionAction) line: not available [native method]
	org.eclipse.osgi.framework.internal.core.BundleContext.startActivator
(org.osgi.framework.BundleActivator) line: 988
	org.eclipse.osgi.framework.internal.core.BundleContext.start() line: 
971
	org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(boolean) line: 404
	org.eclipse.osgi.framework.internal.core.BundleHost
(org.eclipse.osgi.framework.internal.core.Bundle).start() line: 304
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(java.lang.String) line: 57
	org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(java.lang.String) line: 313
	org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass
(java.lang.String, java.lang.String) line: 278
	org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass
(java.lang.String, java.lang.String) line: 853
	org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(java.lang.String) line: 341
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).loadClass
(java.lang.String, boolean) line: 117
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).loadClass(java.lang.String) line: 235
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).loadClassInternal(java.lang.String) line: 302
	java.lang.ClassLoader.defineClass0(java.lang.String, byte[], int, int, 
java.security.ProtectionDomain) line: not available [native method]
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).defineClass(java.lang.String, byte[], int, int, 
java.security.ProtectionDomain) line: 537
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).defineC
lass(java.lang.String, byte[], int, int, java.security.ProtectionDomain, 
org.eclipse.osgi.framework.adaptor.core.BundleFile) line: 309
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass
(java.lang.String, byte[], int, int, java.security.ProtectionDomain, 
org.eclipse.osgi.framework.adaptor.core.BundleFile) line: 98
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).findCla
ssImpl(java.lang.String, org.eclipse.osgi.framework.adaptor.core.BundleFile, 
java.security.ProtectionDomain) line: 298
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).findCla
ss(java.lang.String) line: 187
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).findLocalClass
(java.lang.String) line: 263
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(java.lang.String) line: 72
	org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(java.lang.String) line: 313
	org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(java.lang.String) line: 344
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).loadClass
(java.lang.String, boolean) line: 117
	org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(java.lang.String) line: 251
	org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(java.lang.String, boolean) line: 332
	org.eclipse.osgi.framework.internal.core.BundleHost
(org.eclipse.osgi.framework.internal.core.Bundle).loadClass(java.lang.String) 
line: 1294
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(org.osgi.framework.Bundle, java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 135
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(org.osgi.framework.Bundle, java.lang.String, java.lang.String, 
java.lang.Object, org.eclipse.core.runtime.IConfigurationElement, 
java.lang.String) line: 125
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(java.lang.String) line: 114
	org.eclipse.ui.internal.WorkbenchPlugin$1.run() line: 190
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 187
	org.eclipse.ui.internal.WWinPluginPulldown
(org.eclipse.ui.internal.PluginAction).createDelegate() line: 110
	org.eclipse.ui.internal.WWinPluginPulldown.getPulldownDelegate() line: 
75
	org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu
(org.eclipse.swt.widgets.Menu) line: 35
	org.eclipse.ui.internal.PluginActionContributionItem
(org.eclipse.jface.action.ActionContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 297
	org.eclipse.ui.internal.ActionSetContributionItem
(org.eclipse.jface.action.SubContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 58
	org.eclipse.jface.action.MenuManager.update(boolean, boolean) line: 603
	org.eclipse.jface.action.MenuManager.update(boolean) line: 525
	org.eclipse.jface.action.MenuManager.fill
(org.eclipse.swt.widgets.Menu, int) line: 233
	org.eclipse.ui.internal.ActionSetContributionItem
(org.eclipse.jface.action.SubContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 58
	org.eclipse.jface.action.MenuManager.update(boolean, boolean) line: 603
	org.eclipse.jface.action.MenuManager.updateAll(boolean) line: 697
	org.eclipse.ui.internal.WorkbenchWindow.updateActionBars() line: 1855
	org.eclipse.ui.internal.WorkbenchWindow.updateActionSets() line: 1877
	org.eclipse.ui.internal.WorkbenchWindow$6.run() line: 1687
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(org.eclipse.ui.IWorkbenchPage) line: 1662
	org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(java.lang.String, 
org.eclipse.core.runtime.IAdaptable) line: 417
	org.eclipse.ui.internal.WorkbenchWindow$5.run() line: 958
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchWindow.openPage(java.lang.String, 
org.eclipse.core.runtime.IAdaptable) line: 955
	org.eclipse.ui.internal.Workbench.openFirstTimeWindow() line: 1078
	org.eclipse.ui.internal.Workbench.init
(org.eclipse.jface.resource.ImageDescriptor[], 
org.eclipse.swt.widgets.Display) line: 908
	org.eclipse.ui.internal.Workbench.runUI() line: 1396
	org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) 
line: 257
	org.eclipse.ui.PlatformUI.createAndRunWorkbench
(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) 
line: 139
	org.eclipse.ui.internal.ide.IDEApplication.run(java.lang.Object) line: 
90
	org.eclipse.core.internal.runtime.PlatformActivator$1.run
(java.lang.Object) line: 260
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.Object) 
line: 173
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.String
[], java.lang.Runnable) line: 106
	sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, 
java.lang.Object, java.lang.Object[]) line: not available [native method]
	sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, 
java.lang.Object[]) line: 39
	sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, 
java.lang.Object[]) line: 25
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) 
line: 324
	org.eclipse.core.launcher.Main.basicRun(java.lang.String[]) line: 305
	org.eclipse.core.launcher.Main.run(java.lang.String[]) line: 729
	org.eclipse.core.launcher.Main.main(java.lang.String[]) line: 713

*** Bug 62194 has been marked as a duplicate of this bug. ***
*** Bug 102515 has been marked as a duplicate of this bug. ***
This isn't quite a duplicate, but is definitely related to Bug 12757 and Bug 54205.
Moving Dougs bugs
Assigning to component owner
PW

*** Bug 18830 has been marked as a duplicate of this bug. ***
*** Bug 31623 has been marked as a duplicate of this bug. ***
This is being addressed under bug 136397
PW

*** This bug has been marked as a duplicate of bug 136397 ***</WithStack>
    <WithOutStack>Build: I-22040304

Launch Eclipse an a fresh workspace.
From the Resource Perspective, open the Plug-in Registry view via
Window &gt; Show View &gt; Other &gt; PDE Runtime &gt; Plug-in Registry.

Note that the registry shows org.eclipse.debug.core and org.eclipse.debug.ui 
as already active.  This is very surprising as I have not invoked any Debug 
capabilities yet.

Note that I came across this as I was testing the revamped Plug-in Registry 
view.  I was not using the Spy tools available from the Core team, so I am 
unable to provide more information as to what prompted the premature 
initialization of the Debug plug-ins.

By the way, while you're at it, org.eclipse.ui.externaltools was also active 
for some reason.
Sorry, I am using the build 20040304, not 22040304.
Minority Report was on TV today, and every time I watch this Tom Cruise movie 
I get confused.  I am not reporting an error that will occur in the future :-)
Likely due to the launch drop-down menus being populated. There was a bug 
report about this in 2.1, that we never fixed (but I can't find it now). It 
turned out to be a workbench issue - aggressivley loading actions.
This is due to the pull-down menu items. Here is the classload stack trace 
(generated with a "Class Prepare Breakpoint" on the DebugUIPlugin). Moving to 
UI for comment - this may be a duplicate bug report.

Thread [0] (Class prepare: org.eclipse.debug.internal.ui.DebugUIPlugin)
	java.lang.Class.getDeclaredConstructors0(boolean) line: not available 
[native method]
	java.lang.Class.privateGetDeclaredConstructors(boolean) line: 1610
	java.lang.Class.getConstructor0(java.lang.Class[], int) line: 1922
	java.lang.Class.getConstructor(java.lang.Class[]) line: 1019
	org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActi
vation() line: 446
	org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
() line: 404
	org.eclipse.core.internal.plugins.PluginDescriptor.getPlugin() line: 
372
	org.eclipse.core.internal.compatibility.PluginActivator.start
(org.osgi.framework.BundleContext) line: 48
	org.eclipse.osgi.framework.internal.core.BundleContext$1.run() line: 
992
	java.security.AccessController.doPrivileged
(java.security.PrivilegedExceptionAction) line: not available [native method]
	org.eclipse.osgi.framework.internal.core.BundleContext.startActivator
(org.osgi.framework.BundleActivator) line: 988
	org.eclipse.osgi.framework.internal.core.BundleContext.start() line: 
971
	org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(boolean) line: 404
	org.eclipse.osgi.framework.internal.core.BundleHost
(org.eclipse.osgi.framework.internal.core.Bundle).start() line: 304
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(java.lang.String) line: 57
	org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(java.lang.String) line: 313
	org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass
(java.lang.String, java.lang.String) line: 278
	org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass
(java.lang.String, java.lang.String) line: 853
	org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(java.lang.String) line: 341
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).loadClass
(java.lang.String, boolean) line: 117
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).loadClass(java.lang.String) line: 235
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).loadClassInternal(java.lang.String) line: 302
	java.lang.ClassLoader.defineClass0(java.lang.String, byte[], int, int, 
java.security.ProtectionDomain) line: not available [native method]
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(java.lang.ClassLoader).defineClass(java.lang.String, byte[], int, int, 
java.security.ProtectionDomain) line: 537
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).defineC
lass(java.lang.String, byte[], int, int, java.security.ProtectionDomain, 
org.eclipse.osgi.framework.adaptor.core.BundleFile) line: 309
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass
(java.lang.String, byte[], int, int, java.security.ProtectionDomain, 
org.eclipse.osgi.framework.adaptor.core.BundleFile) line: 98
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).findCla
ssImpl(java.lang.String, org.eclipse.osgi.framework.adaptor.core.BundleFile, 
java.security.ProtectionDomain) line: 298
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader).findCla
ss(java.lang.String) line: 187
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).findLocalClass
(java.lang.String) line: 263
	org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(java.lang.String) line: 72
	org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(java.lang.String) line: 313
	org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(java.lang.String) line: 344
	org.eclipse.core.runtime.adaptor.EclipseClassLoader
(org.eclipse.osgi.framework.adaptor.BundleClassLoader).loadClass
(java.lang.String, boolean) line: 117
	org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(java.lang.String) line: 251
	org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(java.lang.String, boolean) line: 332
	org.eclipse.osgi.framework.internal.core.BundleHost
(org.eclipse.osgi.framework.internal.core.Bundle).loadClass(java.lang.String) 
line: 1294
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(org.osgi.framework.Bundle, java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 135
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(org.osgi.framework.Bundle, java.lang.String, java.lang.String, 
java.lang.Object, org.eclipse.core.runtime.IConfigurationElement, 
java.lang.String) line: 125
	org.eclipse.core.internal.registry.ConfigurationElement.createExecutabl
eExtension(java.lang.String) line: 114
	org.eclipse.ui.internal.WorkbenchPlugin$1.run() line: 190
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 187
	org.eclipse.ui.internal.WWinPluginPulldown
(org.eclipse.ui.internal.PluginAction).createDelegate() line: 110
	org.eclipse.ui.internal.WWinPluginPulldown.getPulldownDelegate() line: 
75
	org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu
(org.eclipse.swt.widgets.Menu) line: 35
	org.eclipse.ui.internal.PluginActionContributionItem
(org.eclipse.jface.action.ActionContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 297
	org.eclipse.ui.internal.ActionSetContributionItem
(org.eclipse.jface.action.SubContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 58
	org.eclipse.jface.action.MenuManager.update(boolean, boolean) line: 603
	org.eclipse.jface.action.MenuManager.update(boolean) line: 525
	org.eclipse.jface.action.MenuManager.fill
(org.eclipse.swt.widgets.Menu, int) line: 233
	org.eclipse.ui.internal.ActionSetContributionItem
(org.eclipse.jface.action.SubContributionItem).fill
(org.eclipse.swt.widgets.Menu, int) line: 58
	org.eclipse.jface.action.MenuManager.update(boolean, boolean) line: 603
	org.eclipse.jface.action.MenuManager.updateAll(boolean) line: 697
	org.eclipse.ui.internal.WorkbenchWindow.updateActionBars() line: 1855
	org.eclipse.ui.internal.WorkbenchWindow.updateActionSets() line: 1877
	org.eclipse.ui.internal.WorkbenchWindow$6.run() line: 1687
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(org.eclipse.ui.IWorkbenchPage) line: 1662
	org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(java.lang.String, 
org.eclipse.core.runtime.IAdaptable) line: 417
	org.eclipse.ui.internal.WorkbenchWindow$5.run() line: 958
	org.eclipse.swt.custom.BusyIndicator.showWhile
(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 84
	org.eclipse.ui.internal.WorkbenchWindow.openPage(java.lang.String, 
org.eclipse.core.runtime.IAdaptable) line: 955
	org.eclipse.ui.internal.Workbench.openFirstTimeWindow() line: 1078
	org.eclipse.ui.internal.Workbench.init
(org.eclipse.jface.resource.ImageDescriptor[], 
org.eclipse.swt.widgets.Display) line: 908
	org.eclipse.ui.internal.Workbench.runUI() line: 1396
	org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) 
line: 257
	org.eclipse.ui.PlatformUI.createAndRunWorkbench
(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) 
line: 139
	org.eclipse.ui.internal.ide.IDEApplication.run(java.lang.Object) line: 
90
	org.eclipse.core.internal.runtime.PlatformActivator$1.run
(java.lang.Object) line: 260
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.Object) 
line: 173
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.String
[], java.lang.Runnable) line: 106
	sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, 
java.lang.Object, java.lang.Object[]) line: not available [native method]
	sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, 
java.lang.Object[]) line: 39
	sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, 
java.lang.Object[]) line: 25
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) 
line: 324
	org.eclipse.core.launcher.Main.basicRun(java.lang.String[]) line: 305
	org.eclipse.core.launcher.Main.run(java.lang.String[]) line: 729
	org.eclipse.core.launcher.Main.main(java.lang.String[]) line: 713

*** Bug 62194 has been marked as a duplicate of this bug. ***
*** Bug 102515 has been marked as a duplicate of this bug. ***
This isn't quite a duplicate, but is definitely related to Bug 12757 and Bug 54205.
Moving Dougs bugs
Assigning to component owner
PW

*** Bug 18830 has been marked as a duplicate of this bug. ***
*** Bug 31623 has been marked as a duplicate of this bug. ***
This is being addressed under bug 136397
PW

*** This bug has been marked as a duplicate of bug 136397 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53980" />
    <CreationDate amount="2004-03-06 21:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Multilevel nested composite children don't receive resize events and don't repaint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="331" end="2701" />
        <code>public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized" + name);
			if(name.startsWith("control")) System.out.println();
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		//final int levels = 10;
		final int levels = 12; //nesting depth

		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			currentParent = composite;
		}
		
		CLabel secondControl = new CLabel(currentParent, SWT.BORDER);
		secondControl.setText("second");
		secondControl.setAlignment(SWT.RIGHT);
		secondControl.addControlListener(new ResizeListener("control 
2"));
		FormData secondControlData = new FormData();
		secondControlData.left = new FormAttachment(100, -50);
		secondControlData.right = new FormAttachment(100, 0);
		secondControl.setLayoutData(secondControlData);
		
		//this control must resize when parent is resized
		CLabel firstControl = new CLabel(currentParent, SWT.BORDER);
		firstControl.setText("first");
		firstControl.setAlignment(SWT.RIGHT);
		firstControl.addControlListener(new ResizeListener("control 1
\n"));
		FormData firstControlData = new FormData();
		firstControlData.left = new FormAttachment(0, 0);
		firstControlData.right = new FormAttachment(secondControl, 0);
		firstControl.setLayoutData(firstControlData);		
	}
	
}</code>
      </source_code>
      <source_code type="class">
        <location start="3381" end="4881" />
        <code>public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized " + name);
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		Font fnt = main.getDisplay().getSystemFont();
		
		//final int levels = 10;
		final int levels = 15; //nesting depth
		
		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			composite.setFont(fnt);
			currentParent = composite;
		}
		
	}
	
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When creating nested composites, if nesting level of composite is greater than 
some number, children controls do not receive resize event properly. Tested on 
few PC's with Eclipse 2.1.1, 3.0 (tested on Windows 2000 only). 

To reproduce is enough to create large amount of nested composites with 
resizing controls on the last:

public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized" + name);
			if(name.startsWith("control")) System.out.println();
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		//final int levels = 10;
		final int levels = 12; //nesting depth

		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			currentParent = composite;
		}
		
		CLabel secondControl = new CLabel(currentParent, SWT.BORDER);
		secondControl.setText("second");
		secondControl.setAlignment(SWT.RIGHT);
		secondControl.addControlListener(new ResizeListener("control 
2"));
		FormData secondControlData = new FormData();
		secondControlData.left = new FormAttachment(100, -50);
		secondControlData.right = new FormAttachment(100, 0);
		secondControl.setLayoutData(secondControlData);
		
		//this control must resize when parent is resized
		CLabel firstControl = new CLabel(currentParent, SWT.BORDER);
		firstControl.setText("first");
		firstControl.setAlignment(SWT.RIGHT);
		firstControl.addControlListener(new ResizeListener("control 1
\n"));
		FormData firstControlData = new FormData();
		firstControlData.left = new FormAttachment(0, 0);
		firstControlData.right = new FormAttachment(secondControl, 0);
		firstControl.setLayoutData(firstControlData);		
	}
	
}

if levels=10, everything is ok.
if levels=11, everything is ok, but on exit application frequently chrashes.
if levels=12, the firstControl does not repaint properly and ResizeListener 
does not receive the firstControl resize event.
Seems that in the trouble case above SetWindowPos does not produce any specific 
message such as WM_WINDOWPOSCHANGING, WM_WINDOWPOSCHANGED, WM_SIZE, just 
nothing. No WM message appears in Spy++ and nothing related to resizing arrives 
at Control.windowProc. 
Actually there is no need for child controls. It is enough to create few nested 
composites. The composite level 11 does receive size messages and composites on 
deeper level do not.

public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized " + name);
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		Font fnt = main.getDisplay().getSystemFont();
		
		//final int levels = 10;
		final int levels = 15; //nesting depth
		
		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			composite.setFont(fnt);
			currentParent = composite;
		}
		
	}
	
}

This WORKSFORME on Windows XP.  Grant, can you try it on 2000?  Here is the 
output I am getting as I resize (running the snippet from comment 2):

resized parent level 0
resized parent level 1
resized parent level 2
resized parent level 3
resized parent level 4
resized parent level 5
resized parent level 6
resized parent level 7
resized parent level 8
resized parent level 9
resized parent level 10
resized parent level 11
resized parent level 12
resized parent level 13
resized parent level 14
resized parent level 0
resized parent level 1
resized parent level 2
resized parent level 3
resized parent level 4
resized parent level 5
resized parent level 6
resized parent level 7
resized parent level 8
resized parent level 9
resized parent level 10
resized parent level 11
resized parent level 12
resized parent level 13
resized parent level 14
resized parent level 0
resized parent level 1
resized parent level 2

... etc
Assigning to Grant to test on 2000.  If it works there, we'll have to close 
this as WORKSFORME.  Sorry.
I see the same output as SN does above, so it's working for me on win2000 with 
the latest SWT.  Closing report; if this is still giving you problems with the 
latest swt then please follow up here with more information.  Thanks.

FYI The following from the newsgroup may be helpful in your case as well: 
http://www.eclipse.org/newsportal/article.php?
id=10961&amp;group=eclipse.platform.swt</WithStack>
    <WithOutStack>When creating nested composites, if nesting level of composite is greater than 
some number, children controls do not receive resize event properly. Tested on 
few PC's with Eclipse 2.1.1, 3.0 (tested on Windows 2000 only). 

To reproduce is enough to create large amount of nested composites with 
resizing controls on the last:

public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized" + name);
			if(name.startsWith("control")) System.out.println();
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		//final int levels = 10;
		final int levels = 12; //nesting depth

		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			currentParent = composite;
		}
		
		CLabel secondControl = new CLabel(currentParent, SWT.BORDER);
		secondControl.setText("second");
		secondControl.setAlignment(SWT.RIGHT);
		secondControl.addControlListener(new ResizeListener("control 
2"));
		FormData secondControlData = new FormData();
		secondControlData.left = new FormAttachment(100, -50);
		secondControlData.right = new FormAttachment(100, 0);
		secondControl.setLayoutData(secondControlData);
		
		//this control must resize when parent is resized
		CLabel firstControl = new CLabel(currentParent, SWT.BORDER);
		firstControl.setText("first");
		firstControl.setAlignment(SWT.RIGHT);
		firstControl.addControlListener(new ResizeListener("control 1
\n"));
		FormData firstControlData = new FormData();
		firstControlData.left = new FormAttachment(0, 0);
		firstControlData.right = new FormAttachment(secondControl, 0);
		firstControl.setLayoutData(firstControlData);		
	}
	
}

if levels=10, everything is ok.
if levels=11, everything is ok, but on exit application frequently chrashes.
if levels=12, the firstControl does not repaint properly and ResizeListener 
does not receive the firstControl resize event.
Seems that in the trouble case above SetWindowPos does not produce any specific 
message such as WM_WINDOWPOSCHANGING, WM_WINDOWPOSCHANGED, WM_SIZE, just 
nothing. No WM message appears in Spy++ and nothing related to resizing arrives 
at Control.windowProc. 
Actually there is no need for child controls. It is enough to create few nested 
composites. The composite level 11 does receive size messages and composites on 
deeper level do not.

public class Test 
{

	//just prints when resize occurs for a component
	static class ResizeListener implements ControlListener
	{
		public String name;
		public ResizeListener(String name)
		{
			this.name = name;				
		}
		public void controlMoved(ControlEvent e) 
		{
		}
		public void controlResized(ControlEvent e) 
		{
			System.out.println("resized " + name);
		}
		
	};		
	
	
	public static void main(String[] args) 
	{
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main");
		shell.setSize(200, 100);
		shell.setLayout(new FormLayout());
		shell.open();

		//create nested composites 
		createParents(shell);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		
	}
	
	public static void createParents(Composite main)
	{
		Font fnt = main.getDisplay().getSystemFont();
		
		//final int levels = 10;
		final int levels = 15; //nesting depth
		
		Composite currentParent = main;
		
		for(int i=0; i&lt;levels; i++)
		{
			Composite composite = new Composite(currentParent, 
SWT.BORDER);
			composite.setLayout( new FormLayout() );
			composite.addControlListener(new ResizeListener("parent 
level " + i));
			FormData compositeLayoutData = new FormData();
			compositeLayoutData.left = new FormAttachment(0, 0);
			compositeLayoutData.right = new FormAttachment(100, 0);
			composite.setLayoutData(compositeLayoutData);
			composite.setFont(fnt);
			currentParent = composite;
		}
		
	}
	
}

This WORKSFORME on Windows XP.  Grant, can you try it on 2000?  Here is the 
output I am getting as I resize (running the snippet from comment 2):

resized parent level 0
resized parent level 1
resized parent level 2
resized parent level 3
resized parent level 4
resized parent level 5
resized parent level 6
resized parent level 7
resized parent level 8
resized parent level 9
resized parent level 10
resized parent level 11
resized parent level 12
resized parent level 13
resized parent level 14
resized parent level 0
resized parent level 1
resized parent level 2
resized parent level 3
resized parent level 4
resized parent level 5
resized parent level 6
resized parent level 7
resized parent level 8
resized parent level 9
resized parent level 10
resized parent level 11
resized parent level 12
resized parent level 13
resized parent level 14
resized parent level 0
resized parent level 1
resized parent level 2

... etc
Assigning to Grant to test on 2000.  If it works there, we'll have to close 
this as WORKSFORME.  Sorry.
I see the same output as SN does above, so it's working for me on win2000 with 
the latest SWT.  Closing report; if this is still giving you problems with the 
latest swt then please follow up here with more information.  Thanks.

FYI The following from the newsgroup may be helpful in your case as well: 
http://www.eclipse.org/newsportal/article.php?
id=10961&amp;group=eclipse.platform.swt</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53981" />
    <CreationDate amount="2004-03-06 22:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>proceed used as method name in around advice</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095677">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.ajdt.internal.compiler.ast.MakeDeclsPublicVisitor.endVisit(MakeDeclsPublicVisitor.java:44)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="6">
      <source_code type="class">
        <location start="247" end="672" />
        <code>public class Proceeding {
    public static void main(String[] args) { }
    static aspect A {
        interface IProceed {
            void proceed(Runnable next);
        }
        IProceed decorator;
        void around() : execution(void main(String[])) {
            decorator.proceed(new Runnable() {
                public void run() {
                    proceed();
                }
            });
        }
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="736" end="1020" />
        <code>public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            Proceeding.proceed(null); // BUG: treated as proceed(Object);
        }
    }
    static void proceed(Object o) {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="1093" end="1352" />
        <code>public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            proceed(); // special form or Proceeding.proceed()?
        }
    }
    void proceed() {}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1382" end="1408" />
        <code>static void proceed() {}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2971" end="3117" />
        <code>this(canProceed) {
        canProceed.proceed();         // a method call
        return proceed(canProceed);   // the special proceed form
     }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3124" end="3287" />
        <code>private Object proceed(ICanProceed canProceed) {
        // this method cannot be called from inside the body of around advice in
        // the aspect
     }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using a method named proceed(..) in around advice confuses the compiler (in at
least the 2-3 ways shown below).  

True of the current tree (untested in 1.1.1).  Workaround for now is to rename
the method.  

---- first problem: NPE in compiler
java.lang.NullPointerException
	at
org.aspectj.ajdt.internal.compiler.ast.MakeDeclsPublicVisitor.endVisit(MakeDeclsPublicVisitor.java:44)

public class Proceeding {
    public static void main(String[] args) { }
    static aspect A {
        interface IProceed {
            void proceed(Runnable next);
        }
        IProceed decorator;
        void around() : execution(void main(String[])) {
            decorator.proceed(new Runnable() {
                public void run() {
                    proceed();
                }
            });
        }
    }
}

---- second problem: incorrect error wrt number of arguments

public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            Proceeding.proceed(null); // BUG: treated as proceed(Object);
        }
    }
    static void proceed(Object o) {}
}

---- third hypothetical: we should document how ambiguity is resolved

public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            proceed(); // special form or Proceeding.proceed()?
        }
    }
    void proceed() {}
}
Sorry - last hypo should be

  static void proceed() {}
  ^^^^^^



To maintain a simple specification the rule should be that a bare proceed in 
an aspect is always the special form and can never refer to a method even if 
one is defined by the aspect.  However, we should support calling proceed with 
a receiver as in examples 1 and 2 as this is clearly unambiguous.

This can probably be fixed fairly easily by modifying the method 
Proceed.findEnclosingAround to check if Proceed.receiver exists and if so to 
claim the proceed is not inside an around and therefore should be treated as a 
normal method.
Raising to a P2 bug to increase visibility, but not marking 1.2 as I don't 
think this should delay a 1.2 release.
marked as target 1.2.1
Fixed following Jim's suggestion. Had to make one refinement which is to treat 
the proceed as the special form in the case when the receiver is null, OR the 
receiver is non-null and receiver.isThis() returns true.

All three of the cases below now work correctly. 

I also added the following to the semantics appendix:

=============

Any occurence of proceed(..) within the body of around advice is treated as the 
special proceed form (even if the aspect defines a method named proceed) unless 
a target other than the aspect instance is specified as the recipient of the 
call. For example, in the following program the first call to proceed will be 
treated as a method call to the ICanProceed instance, whereas the second call to 
proceed is treated as the special proceed form. 

  aspect A {
     Object around(ICanProceed canProceed) : execution(* *(..)) &amp;&amp; 
this(canProceed) {
        canProceed.proceed();         // a method call
        return proceed(canProceed);   // the special proceed form
     }
     
     private Object proceed(ICanProceed canProceed) {
        // this method cannot be called from inside the body of around advice in
        // the aspect
     }
  }

==============

The wording is slightly cumbersome, but it was very hard to phrase this 
accurately.
Fix now available in latest development jar from AspectJ download page.
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>Using a method named proceed(..) in around advice confuses the compiler (in at
least the 2-3 ways shown below).  

True of the current tree (untested in 1.1.1).  Workaround for now is to rename
the method.  

---- first problem: NPE in compiler


public class Proceeding {
    public static void main(String[] args) { }
    static aspect A {
        interface IProceed {
            void proceed(Runnable next);
        }
        IProceed decorator;
        void around() : execution(void main(String[])) {
            decorator.proceed(new Runnable() {
                public void run() {
                    proceed();
                }
            });
        }
    }
}

---- second problem: incorrect error wrt number of arguments

public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            Proceeding.proceed(null); // BUG: treated as proceed(Object);
        }
    }
    static void proceed(Object o) {}
}

---- third hypothetical: we should document how ambiguity is resolved

public class Proceeding {
    public static void main(String[] args) {
    }
    static aspect A {
        void around() : execution(void main(String[])) {
            proceed(); // special form or Proceeding.proceed()?
        }
    }
    void proceed() {}
}
Sorry - last hypo should be

  static void proceed() {}
  ^^^^^^



To maintain a simple specification the rule should be that a bare proceed in 
an aspect is always the special form and can never refer to a method even if 
one is defined by the aspect.  However, we should support calling proceed with 
a receiver as in examples 1 and 2 as this is clearly unambiguous.

This can probably be fixed fairly easily by modifying the method 
Proceed.findEnclosingAround to check if Proceed.receiver exists and if so to 
claim the proceed is not inside an around and therefore should be treated as a 
normal method.
Raising to a P2 bug to increase visibility, but not marking 1.2 as I don't 
think this should delay a 1.2 release.
marked as target 1.2.1
Fixed following Jim's suggestion. Had to make one refinement which is to treat 
the proceed as the special form in the case when the receiver is null, OR the 
receiver is non-null and receiver.isThis() returns true.

All three of the cases below now work correctly. 

I also added the following to the semantics appendix:

=============

Any occurence of proceed(..) within the body of around advice is treated as the 
special proceed form (even if the aspect defines a method named proceed) unless 
a target other than the aspect instance is specified as the recipient of the 
call. For example, in the following program the first call to proceed will be 
treated as a method call to the ICanProceed instance, whereas the second call to 
proceed is treated as the special proceed form. 

  aspect A {
     Object around(ICanProceed canProceed) : execution(* *(..)) &amp;&amp; 
this(canProceed) {
        canProceed.proceed();         // a method call
        return proceed(canProceed);   // the special proceed form
     }
     
     private Object proceed(ICanProceed canProceed) {
        // this method cannot be called from inside the body of around advice in
        // the aspect
     }
  }

==============

The wording is slightly cumbersome, but it was very hard to phrase this 
accurately.
Fix now available in latest development jar from AspectJ download page.
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53982" />
    <CreationDate amount="2004-03-07 03:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Test case Wizard doesn't accept junit.framework.TestCase as a superclass [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Clean install.

Create Java Project test.

Create Class Test in default package.

Select CU Test in Package Explorer.

Use New.../Test Case dropdown on coolbar.

The error message is: "Superclass does not implement the "junit.framework.Test"
interface.
Created attachment 8378
pic showing the error msg on startup
Actually it doesn't accept junit.framework.TestCase at all .)

One step I forgot above ... answer 'Yes' to 'Do you want to add ....'.

What's weird: if I add a second project and also say 'Yes' to 'Do you want to
add ....' the wizard will work in both projects as expected.

Did another test: the wizard has a problem with a project named 'Test'.

With a clean install and a project named 'X' the wizard works right out of the box.
Version: 3.0.0
Build id: 200403040800
Hmpf, doesn't work even with two projects :/

The difference if you add another project is: the wizard will not show the error
message on startup ... go figure *smiles*

Rename PR.
This was caused by a bug in the type hierarchy computation
Verified in M8.</WithStack>
    <WithOutStack>Clean install.

Create Java Project test.

Create Class Test in default package.

Select CU Test in Package Explorer.

Use New.../Test Case dropdown on coolbar.

The error message is: "Superclass does not implement the "junit.framework.Test"
interface.
Created attachment 8378
pic showing the error msg on startup
Actually it doesn't accept junit.framework.TestCase at all .)

One step I forgot above ... answer 'Yes' to 'Do you want to add ....'.

What's weird: if I add a second project and also say 'Yes' to 'Do you want to
add ....' the wizard will work in both projects as expected.

Did another test: the wizard has a problem with a project named 'Test'.

With a clean install and a project named 'X' the wizard works right out of the box.
Version: 3.0.0
Build id: 200403040800
Hmpf, doesn't work even with two projects :/

The difference if you add another project is: the wizard will not show the error
message on startup ... go figure *smiles*

Rename PR.
This was caused by a bug in the type hierarchy computation
Verified in M8.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53983" />
    <CreationDate amount="2004-03-07 03:35:00 -0500" />
    <DupId amount="24227" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc View chokes on {@inheritDoc}</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="0" end="122" />
        <code>public class Test {
	/** Test {@inheritDoc}Test */
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>public class Test {
	/** Test {@inheritDoc}Test */
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
}

@@@@

Even if it does not "import" the doc from the superclass it should at least show
a placeholder and render the stuff after the closing }


*** This bug has been marked as a duplicate of 24227 ***</WithStack>
    <WithOutStack>public class Test {
	/** Test {@inheritDoc}Test */
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
}

@@@@

Even if it does not "import" the doc from the superclass it should at least show
a placeholder and render the stuff after the closing }


*** This bug has been marked as a duplicate of 24227 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53984" />
    <CreationDate amount="2004-03-07 03:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Additional default trace filters [Junit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>junit.framework.TestResult$1

Should be filtered by default; it's the inner class Protectable.

@@@@

Also you could consider adding:

sun.reflect.NativeMethodAccessorImpl.invoke
sun.reflect.DelegatingMethodAccessorImpl.invoke

Those might only be useful if you have RTTI-test cases ... those are quite
seldom and then you still could disable the filters.

The method call at the bottom of the stack trace would be the actual test.
I've added junit.framework.TestResult$1 the other ones are VM specific and we 
currently don't have VM specific patterns by default. So I'm reluctant to add 
them.
start verifying...
Verified in I20040611. Is in preference now.</WithStack>
    <WithOutStack>junit.framework.TestResult$1

Should be filtered by default; it's the inner class Protectable.

@@@@

Also you could consider adding:

sun.reflect.NativeMethodAccessorImpl.invoke
sun.reflect.DelegatingMethodAccessorImpl.invoke

Those might only be useful if you have RTTI-test cases ... those are quite
seldom and then you still could disable the filters.

The method call at the bottom of the stack trace would be the actual test.
I've added junit.framework.TestResult$1 the other ones are VM specific and we 
currently don't have VM specific patterns by default. So I'm reluctant to add 
them.
start verifying...
Verified in I20040611. Is in preference now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53985" />
    <CreationDate amount="2004-03-07 03:56:00 -0500" />
    <DupId amount="53544" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Pref page does not remember enablement of filters [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Create a new trace filter, uncheck it ... close preferences through OK.

Open the pref page and it is checked again.

Apply does not work either.

Version: 3.0.0
Build id: 200403040800Source)
it's a bug in swt that causes that behaviour

*** This bug has been marked as a duplicate of 53544 ***</WithStack>
    <WithOutStack>Create a new trace filter, uncheck it ... close preferences through OK.

Open the pref page and it is checked again.

Apply does not work either.

Version: 3.0.0
Build id: 200403040800Source)
it's a bug in swt that causes that behaviour

*** This bug has been marked as a duplicate of 53544 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53986" />
    <CreationDate amount="2004-03-07 04:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cell Editors do not use dialog font [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Add Filter

The cell editor uses system default not the one used in the table.
Pref page Java/Debug/Step Filtering got rid of the table editor in favor of a
dialog.

For consistency this could be done also.
we should be consistent with the Java/Debug/Step filter.
dialog is used in 3.1
Version: 3.1.0
Build id: 200411050810
.
thanks for verifying!</WithStack>
    <WithOutStack>Add Filter

The cell editor uses system default not the one used in the table.
Pref page Java/Debug/Step Filtering got rid of the table editor in favor of a
dialog.

For consistency this could be done also.
we should be consistent with the Java/Debug/Step filter.
dialog is used in 3.1
Version: 3.1.0
Build id: 200411050810
.
thanks for verifying!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53987" />
    <CreationDate amount="2004-03-07 04:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Margins of the "Browse..." button on the Apply Patch wizard do not conform to the standards</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Change dialog font to see it.
Apply Patch is provided by Platform Compare.
I believe this was fixed</WithStack>
    <WithOutStack>Change dialog font to see it.
Apply Patch is provided by Platform Compare.
I believe this was fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53988" />
    <CreationDate amount="2004-03-07 04:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] New (Source) Folder dialog does not use standard dialog margins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Reached through:

Properties of a Java project ... Java Build Path/Source/Add Folder...

Also you might change the title of the dialog to "New Source Folder" to be a
little more specific .)
I fixed the title (is now 'New Source Folder' &gt; 20040308) but margin has to be
fixed by platform, as this dialog is platform's NewFolderDialog
Are you referring to the extra space under the Advanced tab?
Created attachment 8446
pic showing the different button margins; "inner" and to the edge of the dialog
This message is part of a mass update on bugs that have been reviewed for several releases, but not fixed.  The bug is legitimate, but not a priority.  Marking P5.  Patches would be entertained.
The dialog looks totally different now. Can this be closed?
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
This dialog has changed a lot so that this issue isn't there any more.
What should we do with such old issues? Close as WORKSFORME, INVALID, set a Target Milestone...?</WithStack>
    <WithOutStack>Reached through:

Properties of a Java project ... Java Build Path/Source/Add Folder...

Also you might change the title of the dialog to "New Source Folder" to be a
little more specific .)
I fixed the title (is now 'New Source Folder' &gt; 20040308) but margin has to be
fixed by platform, as this dialog is platform's NewFolderDialog
Are you referring to the extra space under the Advanced tab?
Created attachment 8446
pic showing the different button margins; "inner" and to the edge of the dialog
This message is part of a mass update on bugs that have been reviewed for several releases, but not fixed.  The bug is legitimate, but not a priority.  Marking P5.  Patches would be entertained.
The dialog looks totally different now. Can this be closed?
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
This dialog has changed a lot so that this issue isn't there any more.
What should we do with such old issues? Close as WORKSFORME, INVALID, set a Target Milestone...?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53989" />
    <CreationDate amount="2004-03-07 04:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Primitive Type Display Options dialog does not use dialog font</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Reached through:

Variables View/View menu/Java Primitives...
Fixed in PrimitiveOptionsDialog.
Please verify Kevin.
verifed</WithStack>
    <WithOutStack>Reached through:

Variables View/View menu/Java Primitives...
Fixed in PrimitiveOptionsDialog.
Please verify Kevin.
verifed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53990" />
    <CreationDate amount="2004-03-07 04:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debugger source lookup dialog; Do not ask not aligned with other checkboxes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The "Do not ask..." checkbox is not left aligned with the other checkboxes.

Might have to change dialog font to see it.
This dialog is to be replaced with the support from the generic source lookup 
facilities. See bug 29890.</WithStack>
    <WithOutStack>The "Do not ask..." checkbox is not left aligned with the other checkboxes.

Might have to change dialog font to see it.
This dialog is to be replaced with the support from the generic source lookup 
facilities. See bug 29890.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53991" />
    <CreationDate amount="2004-03-07 05:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Usability of New Plugin-Wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Templates page now includes a checkbox "Create a plugin...." at the top.

What is the reason for it?

Isn't it enough if the wizard starts with an empty selection and one being able
to "unselect" in the left list?
The thing is that you can't "unselect" completely.

The table viewer showing the templates supports single selection only, for 
obvious reasons, since the user wants to create one wizard at a time.  With 
single selection viewers, once you select something, you can't deselect all 
items in the viewer again.  One item will always be selected, so the user 
would get stuck in this state.
Hmm, what about the following:

If the user clicks into the list you enable it and select the item at the
position of the cursor?

Or have the list enabled by default and let the user disable it if he doesn't
want his selection anymore.

I'm not sure, but I'd guess creating plugins with a template is used a lot more
often then creating one without.

So in all those occasions one has to do one mouse click more.
This page is going to be revisited anyway in the M9 cycle once we add support 
for RCP applications, etc.

&gt;I'm not sure, but I'd guess creating plugins with a template is used a lot 
&gt;more often then creating one without.
We haven't done a statistical analysis on this one, but one thing I've learned 
after reading 1000's of bug reports is that there is not such thing as a most 
common usage scenario.  Everyone thinks that their scenario is the most common 
one.

In this case, creating a plug-in without a template extension seems like a 
reasonable default.  For one, it will enable the user to press Finish before 
getting to the template page.  Secondly, if creating using a template were the 
default, how do we determine which of the templates should be the default?  Is 
a plug-in with a view a better default than a plug-in with a pop up menu?  
It's all very subjective.

&gt;&gt;Everyone thinks that their scenario is the most common one.
100% true *smiles*

Default would be ... list enabled but empty selection.

In that case one can still click Finish right away.</WithStack>
    <WithOutStack>The Templates page now includes a checkbox "Create a plugin...." at the top.

What is the reason for it?

Isn't it enough if the wizard starts with an empty selection and one being able
to "unselect" in the left list?
The thing is that you can't "unselect" completely.

The table viewer showing the templates supports single selection only, for 
obvious reasons, since the user wants to create one wizard at a time.  With 
single selection viewers, once you select something, you can't deselect all 
items in the viewer again.  One item will always be selected, so the user 
would get stuck in this state.
Hmm, what about the following:

If the user clicks into the list you enable it and select the item at the
position of the cursor?

Or have the list enabled by default and let the user disable it if he doesn't
want his selection anymore.

I'm not sure, but I'd guess creating plugins with a template is used a lot more
often then creating one without.

So in all those occasions one has to do one mouse click more.
This page is going to be revisited anyway in the M9 cycle once we add support 
for RCP applications, etc.

&gt;I'm not sure, but I'd guess creating plugins with a template is used a lot 
&gt;more often then creating one without.
We haven't done a statistical analysis on this one, but one thing I've learned 
after reading 1000's of bug reports is that there is not such thing as a most 
common usage scenario.  Everyone thinks that their scenario is the most common 
one.

In this case, creating a plug-in without a template extension seems like a 
reasonable default.  For one, it will enable the user to press Finish before 
getting to the template page.  Secondly, if creating using a template were the 
default, how do we determine which of the templates should be the default?  Is 
a plug-in with a view a better default than a plug-in with a pop up menu?  
It's all very subjective.

&gt;&gt;Everyone thinks that their scenario is the most common one.
100% true *smiles*

Default would be ... list enabled but empty selection.

In that case one can still click Finish right away.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53992" />
    <CreationDate amount="2004-03-07 05:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] New Builder Dialog; OK enabled if invalid builder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>follow up to bug 51101

Open dialog.

Build File/Browse Filesyste...

Now select any (non-builder) file.

Error message is shown Apply and OK are enabled.
Created attachment 8379
pic showing install.ini builder
Is this really wrong? OK button is not the as Run. OK is really just "Apply" 
+ "Dismiss the dialog". Since it is ok to apply changes that are not valid it 
should also be ok to dismiss the dialog with a nonfunctional builder.
Hmm ...

Using an invalid builder will produce (depening on settings [build options])
error messages while editing source code w/ auto-build on.

Is this indended?

If yes ... then OK should be enabled.
This is the intended behavior.
We have tried hard to allow the user to save/apply the configuration of a 
builder or Ant build launch configuration even though they are in an error 
state. The error is indicated but you can save your setting, exit the modal 
dialog and go and fix the problem.

I propose we do not change the behavior.
Changing to INVALID as the described behavior was intentional.
OK with me then.
Thanks Sebastian.</WithStack>
    <WithOutStack>follow up to bug 51101

Open dialog.

Build File/Browse Filesyste...

Now select any (non-builder) file.

Error message is shown Apply and OK are enabled.
Created attachment 8379
pic showing install.ini builder
Is this really wrong? OK button is not the as Run. OK is really just "Apply" 
+ "Dismiss the dialog". Since it is ok to apply changes that are not valid it 
should also be ok to dismiss the dialog with a nonfunctional builder.
Hmm ...

Using an invalid builder will produce (depening on settings [build options])
error messages while editing source code w/ auto-build on.

Is this indended?

If yes ... then OK should be enabled.
This is the intended behavior.
We have tried hard to allow the user to save/apply the configuration of a 
builder or Ant build launch configuration even though they are in an error 
state. The error is indicated but you can save your setting, exit the modal 
dialog and go and fix the problem.

I propose we do not change the behavior.
Changing to INVALID as the described behavior was intentional.
OK with me then.
Thanks Sebastian.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53993" />
    <CreationDate amount="2004-03-07 05:50:00 -0500" />
    <DupId amount="48203" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No smart semicolon when the selection is empty</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When the selection isn't empty then entering a semicolon should always replace 
the selection and not have the smart behaviour (i.e. jumping to the end).


*** This bug has been marked as a duplicate of 48203 ***</WithStack>
    <WithOutStack>When the selection isn't empty then entering a semicolon should always replace 
the selection and not have the smart behaviour (i.e. jumping to the end).


*** This bug has been marked as a duplicate of 48203 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53994" />
    <CreationDate amount="2004-03-07 09:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows ME" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Automated code indentation.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hi.

While there is automatic indentation in CDT, I find a bit inconvenient in 
diverse platform/software use. The current options allow only to indent with 
tabs or with a single space(bar) in place of a tab.

It would be nice if there would be an option to choose, how many spaces I want 
to indent automatically without tabs as is the situation in the Java-editor.

The tabs don't look the same in all the editors. And slashing space/tab twice 
(three times, four...) is too much of an effort. :)
Would be nice if there was the CTRL-F functionality availiable in java to 
properly indent the line (equivalent to hitting tab in emacs)
PR was not targeted to any particular release. Changing target milestone to 2.1
Part of the framework is in place.
I send to the list an example of Format using GNU Indent.

But we still need a __default__ indentation for CDT

move to 3.0
The default implementation  was not commited in CDT-3.0
release.  Moving to future for CDT-3.1
Returning to the pool.
Where I work I can't use eclipse/CDT due to the following situation:
  we require all tabs to be inserted as actual tabs 8 spaces wide
  we require all indenting to be 4 spaces
  
CDT currently always indents by the "tab width", so what is needed is a seperate "indentation width". I would be willing to make the required changes if someone can help point me in the right direction.
This depends on bug 148582.
This was implemented with bug 148582.
*** Bug 121881 has been marked as a duplicate of this bug. ***
*** Bug 92036 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Hi.

While there is automatic indentation in CDT, I find a bit inconvenient in 
diverse platform/software use. The current options allow only to indent with 
tabs or with a single space(bar) in place of a tab.

It would be nice if there would be an option to choose, how many spaces I want 
to indent automatically without tabs as is the situation in the Java-editor.

The tabs don't look the same in all the editors. And slashing space/tab twice 
(three times, four...) is too much of an effort. :)
Would be nice if there was the CTRL-F functionality availiable in java to 
properly indent the line (equivalent to hitting tab in emacs)
PR was not targeted to any particular release. Changing target milestone to 2.1
Part of the framework is in place.
I send to the list an example of Format using GNU Indent.

But we still need a __default__ indentation for CDT

move to 3.0
The default implementation  was not commited in CDT-3.0
release.  Moving to future for CDT-3.1
Returning to the pool.
Where I work I can't use eclipse/CDT due to the following situation:
  we require all tabs to be inserted as actual tabs 8 spaces wide
  we require all indenting to be 4 spaces
  
CDT currently always indents by the "tab width", so what is needed is a seperate "indentation width". I would be willing to make the required changes if someone can help point me in the right direction.
This depends on bug 148582.
This was implemented with bug 148582.
*** Bug 121881 has been marked as a duplicate of this bug. ***
*** Bug 92036 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53995" />
    <CreationDate amount="2004-03-07 09:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>java_swt crashes if application bundle is named .APP instead of .app</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040304
-rename application bundle's extension from .app to .APP
-launch
Observe: java_swt crashes
fixed and released for N20040308</WithStack>
    <WithOutStack>I20040304
-rename application bundle's extension from .app to .APP
-launch
Observe: java_swt crashes
fixed and released for N20040308</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53996" />
    <CreationDate amount="2004-03-07 16:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>xlint warning: match impossible due to args numericity conflict</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Some pointcuts will never match because the number of args is specified
differently in two places (from signatures and/or args(..)).  e.g.,

  pointcut f(String s) : call(void foo(String, String)) &amp;&amp; args(s)

When weaving advice (but not declare warning), it would be nice to have an XLint
warning indicating that the pointcut can never match.  

(Perhaps also optimize away as never matching.)
The optimization was implemented in AJ5 M1. The XLint warning wasn't. We have a
warning in AJ5 M2 that warns if the pointcut is associated with advice (did not
match, controlled by @SuppressAjWarnings). We don't warn in any way if the
pointcut was associated with a declare statemement. We should consider adding
one as this would report the error as close as possible to the textual location
in the source.
we have -Xlint:adviceDidNotMatch and @SuppressAjWarnings both fully operational in the AspectJ 5 
codebase now.</WithStack>
    <WithOutStack>Some pointcuts will never match because the number of args is specified
differently in two places (from signatures and/or args(..)).  e.g.,

  pointcut f(String s) : call(void foo(String, String)) &amp;&amp; args(s)

When weaving advice (but not declare warning), it would be nice to have an XLint
warning indicating that the pointcut can never match.  

(Perhaps also optimize away as never matching.)
The optimization was implemented in AJ5 M1. The XLint warning wasn't. We have a
warning in AJ5 M2 that warns if the pointcut is associated with advice (did not
match, controlled by @SuppressAjWarnings). We don't warn in any way if the
pointcut was associated with a declare statemement. We should consider adding
one as this would report the error as close as possible to the textual location
in the source.
we have -Xlint:adviceDidNotMatch and @SuppressAjWarnings both fully operational in the AspectJ 5 
codebase now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53997" />
    <CreationDate amount="2004-03-07 17:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[PropertiesView] Using PropertySheetPage visibly is slow switching input</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="178" end="332" />
        <code>public void selectionChanged(IWorkbenchPart part, ISelection selection) {
  tableTree.setRedraw(false);
  ... existing code
  tableTree.setRedraw(true);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>org.eclipse.ui.properties.PropertySheetPage
When switching input the old items are visibly refreshed one by one and this 
create a slow wash effect.  It can be made faster with

public void selectionChanged(IWorkbenchPart part, ISelection selection) {
  tableTree.setRedraw(false);
  ... existing code
  tableTree.setRedraw(true);
}

I have made a hack fix for me and it is quite a bit snapper and faster.  It 
might not be an obvious problem with just Eclipse because there is no good 
test case with lots of entries, but for the VisualEditor we subclass the 
PropertySheetPage to add some behavior, but this inherited behavior is slow
We can't totally swop out this method because of its use of the private viewer 
field, however it'd could benefit PropertySheetPage to make use of setRedraw
(boolean) anyway
Please let me know whether your patch leads to extra flashiness.

Nick - the patch just seems to make the UI snappier for me with no extra 
flashing that I can see.  
Without the behavior as is (without the patch) what seems to happen is that as 
each TableTreeItem has its String set to "" this refreshes the UI.  To see the 
effect of this in Eclipse you can just select a .java file (that has 8 
properties) and then a library (like JRE System Library) that has none, and 
each item disappears one by one from the bottom.  For our scenarios with lots 
of properties (we have JavaBeans that can have 30 or more) the effect is more 
marked.
I can see no obvious flashing or flicking that takes place with the patch. I'm 
using XP so maybe other platforms or test cases will cause problems.
Billy, could you please verify that this works OK on GTK?
If so, please release the patch, but protect the setRedraw(true) in a finally 
block.

The implementation of setRedraw on Gtk+ is a bit more expensive (and hacky) than
the Windows implementation.  If I call setRedraw and test it, I actually see
flashes where without the patch I did not!  I believe this is an artifact of the
implementation though, so I find it difficult to decide which is worse: leave
the fix out and let other platforms flash, or hope for improvements to the
setRedraw implementation on Linux.

Is there maybe some more fundamental fix to how the properties view renders that
could maybe make it replace the whole tree at once?
I think we should defer this if it's not uniformly better on all platforms.

Nick,
I agree the fix shouldn't be applied if it's not good on GTK.  Hoewever could 
you please make the viewer field accessible so I can add my own platform 
specific logic.  Right now "viewer" is a private field so getting it requires 
private reflection and is messy, but if it were public I could get at it.  For 
example, every editorPart can give up their own property sheet page through 
the getAdapter(...) method, so I'd just return a subclass that did a small 
platform specific override on selectionChanged(...).
Joe
Joe, sorry but we're going to have to wait on that too, since we're API frozen
for 3.0 now.

I agree that it probably makes sense to add a protected getViewer() method here
(not expose the field).

Actually, you have access to the control via getControl(), so you could still
disable redraw during the selectionChanged.


Cleaning up old bugs --

setRedraw() will cause flashing on both Windows and Linux.  The definition of
the API is that it will cause the entire control to be repainted when it
completes, so this fix doesn't really belong in our code anyway.  I am going to
close this as WONTFIX, as Nick points out that if you really want to, you can do
it yourself on the control.</WithStack>
    <WithOutStack>org.eclipse.ui.properties.PropertySheetPage
When switching input the old items are visibly refreshed one by one and this 
create a slow wash effect.  It can be made faster with

public void selectionChanged(IWorkbenchPart part, ISelection selection) {
  tableTree.setRedraw(false);
  ... existing code
  tableTree.setRedraw(true);
}

I have made a hack fix for me and it is quite a bit snapper and faster.  It 
might not be an obvious problem with just Eclipse because there is no good 
test case with lots of entries, but for the VisualEditor we subclass the 
PropertySheetPage to add some behavior, but this inherited behavior is slow
We can't totally swop out this method because of its use of the private viewer 
field, however it'd could benefit PropertySheetPage to make use of setRedraw
(boolean) anyway
Please let me know whether your patch leads to extra flashiness.

Nick - the patch just seems to make the UI snappier for me with no extra 
flashing that I can see.  
Without the behavior as is (without the patch) what seems to happen is that as 
each TableTreeItem has its String set to "" this refreshes the UI.  To see the 
effect of this in Eclipse you can just select a .java file (that has 8 
properties) and then a library (like JRE System Library) that has none, and 
each item disappears one by one from the bottom.  For our scenarios with lots 
of properties (we have JavaBeans that can have 30 or more) the effect is more 
marked.
I can see no obvious flashing or flicking that takes place with the patch. I'm 
using XP so maybe other platforms or test cases will cause problems.
Billy, could you please verify that this works OK on GTK?
If so, please release the patch, but protect the setRedraw(true) in a finally 
block.

The implementation of setRedraw on Gtk+ is a bit more expensive (and hacky) than
the Windows implementation.  If I call setRedraw and test it, I actually see
flashes where without the patch I did not!  I believe this is an artifact of the
implementation though, so I find it difficult to decide which is worse: leave
the fix out and let other platforms flash, or hope for improvements to the
setRedraw implementation on Linux.

Is there maybe some more fundamental fix to how the properties view renders that
could maybe make it replace the whole tree at once?
I think we should defer this if it's not uniformly better on all platforms.

Nick,
I agree the fix shouldn't be applied if it's not good on GTK.  Hoewever could 
you please make the viewer field accessible so I can add my own platform 
specific logic.  Right now "viewer" is a private field so getting it requires 
private reflection and is messy, but if it were public I could get at it.  For 
example, every editorPart can give up their own property sheet page through 
the getAdapter(...) method, so I'd just return a subclass that did a small 
platform specific override on selectionChanged(...).
Joe
Joe, sorry but we're going to have to wait on that too, since we're API frozen
for 3.0 now.

I agree that it probably makes sense to add a protected getViewer() method here
(not expose the field).

Actually, you have access to the control via getControl(), so you could still
disable redraw during the selectionChanged.


Cleaning up old bugs --

setRedraw() will cause flashing on both Windows and Linux.  The definition of
the API is that it will cause the entire control to be repainted when it
completes, so this fix doesn't really belong in our code anyway.  I am going to
close this as WONTFIX, as Nick points out that if you really want to, you can do
it yourself on the control.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53998" />
    <CreationDate amount="2004-03-07 19:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>in 3.0M7 a java class containing assert will not format</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="73" end="207" />
        <code>public class UPDialog {
	    int a; int b;int c;
		public void setInitializationData(
			Object data) {
			assert data != null;
		}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In 3.0M7 I can't get any program that uses assert to format.
Test case:

public class UPDialog {
	    int a; int b;int c;
		public void setInitializationData(
			Object data) {
			assert data != null;
		}

}
Sigh, I just tried this with the jdt.core HEAD and everything worked
just fine.  "Never mind"

Should have closed as invalid (fixed reserved to problem with identified fix)
Cannot reproduce any longer, closing.</WithStack>
    <WithOutStack>In 3.0M7 I can't get any program that uses assert to format.
Test case:

public class UPDialog {
	    int a; int b;int c;
		public void setInitializationData(
			Object data) {
			assert data != null;
		}

}
Sigh, I just tried this with the jdt.core HEAD and everything worked
just fine.  "Never mind"

Should have closed as invalid (fixed reserved to problem with identified fix)
Cannot reproduce any longer, closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="53999" />
    <CreationDate amount="2004-03-07 22:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"can't bind type" message has $ for . in type name for declare soft</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="180" end="389" />
        <code>public class Test {
	public static void main(String[] args) {
		test();
	}
	static void test() {
		throw new Error("hello");
	}
	static aspect A {
		declare soft : unknown.Error : call(void test()); // CE
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>cosmetic mistake in error message...

expected: can't bind type name 'unknown.Error'
  actual: can't bind type name 'unknown$Error'

(not sure why it would ever be munged with $)

public class Test {
	public static void main(String[] args) {
		test();
	}
	static void test() {
		throw new Error("hello");
	}
	static aspect A {
		declare soft : unknown.Error : call(void test()); // CE
	}
}
This error message is caused by first looking for a type Error in the unknown 
package and then looking for the inner type Error in the class unknown.  This 
second check uses the binary format for inner type names of unknown$Error.

I'm leaving as a bug until the cosmetic error is fixed.
fix integrated - waiting for build.
Fixed as of:

BUILD COMPLETE -  build.317
Date of build: 07/28/2004 12:16:33
Time to build: 121 minutes 44 seconds
Last changed: 07/27/2004 18:38:25
Latest good AspectJ jar available at:
download.eclipse.org/technology/ajdt/dev/aspectj-DEVELOPMENT.jar
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>cosmetic mistake in error message...

expected: can't bind type name 'unknown.Error'
  actual: can't bind type name 'unknown$Error'

(not sure why it would ever be munged with $)

public class Test {
	public static void main(String[] args) {
		test();
	}
	static void test() {
		throw new Error("hello");
	}
	static aspect A {
		declare soft : unknown.Error : call(void test()); // CE
	}
}
This error message is caused by first looking for a type Error in the unknown 
package and then looking for the inner type Error in the class unknown.  This 
second check uses the binary format for inner type names of unknown$Error.

I'm leaving as a bug until the cosmetic error is fixed.
fix integrated - waiting for build.
Fixed as of:

BUILD COMPLETE -  build.317
Date of build: 07/28/2004 12:16:33
Time to build: 121 minutes 44 seconds
Last changed: 07/27/2004 18:38:25
Latest good AspectJ jar available at:
download.eclipse.org/technology/ajdt/dev/aspectj-DEVELOPMENT.jar
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54000" />
    <CreationDate amount="2004-03-08 00:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>moving files from default package to other causes ClassCastException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341095692">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason>java.lang.ClassCastException: 
org.eclipse.jdt.internal.compiler.lookup.ProblemBinding</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchReportReference(TypeReferencePattern.java:230)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchReportReference(TypeReferencePattern.java:205)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.MatchLocator2.reportReference(MatchLocator2.java:1338)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:240)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:445)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:346)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.matching.MatchLocator2.process(MatchLocator2.java:1006)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:707)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:663)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:879)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:471)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:139)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:106)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:101)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.getReferences(MoveCuUpdateCreator.java:300)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addReferenceUpdates(MoveCuUpdateCreator.java:152)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:136)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:120)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:94)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.createChangeManager(MoveRefactoring.java:536)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput(MoveRefactoring.java:167)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.corext.refactoring.base.Refactoring.checkPreconditions(Refactoring.java:78)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:61)</Frame>
          <Frame depth="23">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
          <Frame depth="24">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="25">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.reorg(ReorgDestinationAction.java:221)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.ui.reorg.JdtMoveAction.reorg(JdtMoveAction.java:188)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doRun(ReorgDestinationAction.java:159)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run(ReorgDestinationAction.java:114)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.reorg.JdtMoveAction.run(JdtMoveAction.java:82)</Frame>
          <Frame depth="31">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)</Frame>
          <Frame depth="32">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:262)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:165)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:112)</Frame>
          <Frame depth="36">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:79)</Frame>
          <Frame depth="37">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1012)</Frame>
          <Frame depth="40">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:574)</Frame>
          <Frame depth="41">org.eclipse.swt.dnd.DropTarget.dragReceiveHandler(DropTarget.java:415)</Frame>
          <Frame depth="42">org.eclipse.swt.dnd.DropTarget.DragReceiveHandler(DropTarget.java:231)</Frame>
          <Frame depth="43">org.eclipse.swt.internal.carbon.OS.TrackDrag(Native Method)</Frame>
          <Frame depth="44">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:299)</Frame>
          <Frame depth="45">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:212)</Frame>
          <Frame depth="46">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:147)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1155)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1179)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1160)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.dragDetect(Display.java:751)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.kEventMouseDragged(Control.java:1354)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Widget.mouseProc(Widget.java:981)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Display.mouseProc(Display.java:1904)</Frame>
          <Frame depth="55">org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1961)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="59">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="60">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="61">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
          <Frame depth="65">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="66">apple.launcher.LaunchRunner.run(LaunchRunner.java:88)</Frame>
          <Frame depth="67">apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)</Frame>
          <Frame depth="68">apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I have not figured out how to correctly import files into my project. I have a bunch of files in ~ray/foo/. 
They are in the package com.foo.bar, but they are not in that directory structure. When I import them, 
they are all put into the default package and I get a bunch of compilation errors.

I can create my com.foo.bar package. Then I can grab all the files and drag them into the package. But 
in the two packages I have done this with, one file (a different file in each) causes an error. I have to 
move the others in smaller bunches until I figure out which file it is. Then I can move all the others. 
Then I can create an empty file in the new package with the name of the file left over and copy and 
paste the contents. Blech.

I am on Mac OS X 10.3.2 (Panther7D24). As I said, I have seen this on two different files in two different 
projects, on two different machines (with the same OS version).

The error I get is:

!ENTRY org.eclipse.jdt.ui 4 10001 Mar 07, 2004 21:09:29.496
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.ClassCastException: 
org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
	at 
org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchReportReference(TypeReferen
cePattern.java:230)
	at 
org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchReportReference(TypeReferen
cePattern.java:205)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator2.reportReference(MatchLocator2.java:1338)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:
240)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:
445)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet.reportMatching(MatchingNodeSet.java:
346)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator2.process(MatchLocator2.java:1006)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:
707)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:
663)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches(MatchLocator2.java:
879)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:471)
	at 
org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java
:139)
	at 
org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java
:106)
	at 
org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java
:101)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.getReferences(MoveCuUpdateCre
ator.java:300)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addReferenceUpdates(MoveCuUp
dateCreator.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreat
or.java:136)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreat
or.java:120)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuU
pdateCreator.java:94)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.createChangeManager(MoveRefactorin
g.java:536)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput(MoveRefactoring.java:167)
	at org.eclipse.jdt.internal.corext.refactoring.base.Refactoring.checkPreconditions(Refactoring.java:
78)
	at 
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:
61)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)
	at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.reorg(ReorgDestinationAction.java:221)
	at org.eclipse.jdt.internal.ui.reorg.JdtMoveAction.reorg(JdtMoveAction.java:188)
	at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doRun(ReorgDestinationAction.java:
159)
	at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run(ReorgDestinationAction.java:114)
	at org.eclipse.jdt.internal.ui.reorg.JdtMoveAction.run(JdtMoveAction.java:82)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:
191)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransfe
rDropAdapter.java:262)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapt
er.java:165)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:112)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:79)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1012)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:574)
	at org.eclipse.swt.dnd.DropTarget.dragReceiveHandler(DropTarget.java:415)
	at org.eclipse.swt.dnd.DropTarget.DragReceiveHandler(DropTarget.java:231)
	at org.eclipse.swt.internal.carbon.OS.TrackDrag(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:299)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:212)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:147)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1155)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1179)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1160)
	at org.eclipse.swt.widgets.Display.dragDetect(Display.java:751)
	at org.eclipse.swt.widgets.Control.kEventMouseDragged(Control.java:1354)
	at org.eclipse.swt.widgets.Widget.mouseProc(Widget.java:981)
	at org.eclipse.swt.widgets.Display.mouseProc(Display.java:1904)
	at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1961)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
	at java.lang.reflect.Method.invoke(Native Method)
	at apple.launcher.LaunchRunner.run(LaunchRunner.java:88)
	at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)
	at apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)
Ray: Which eclipse build are you using?

Moving to jdt-core, since the CCE is in the search engine.
Can you still reproduce this in Eclipse 3.0M7 or better ?

Actually, no. I cannot reproduce this with 3.0M7.

Dragging these 40 or 50 files around does work. It takes an amazingly long time, but that is probably a 
separate bug. But it does, finally, work.

Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I have not figured out how to correctly import files into my project. I have a bunch of files in ~ray/foo/. 
They are in the package com.foo.bar, but they are not in that directory structure. When I import them, 
they are all put into the default package and I get a bunch of compilation errors.

I can create my com.foo.bar package. Then I can grab all the files and drag them into the package. But 
in the two packages I have done this with, one file (a different file in each) causes an error. I have to 
move the others in smaller bunches until I figure out which file it is. Then I can move all the others. 
Then I can create an empty file in the new package with the name of the file left over and copy and 
paste the contents. Blech.

I am on Mac OS X 10.3.2 (Panther7D24). As I said, I have seen this on two different files in two different 
projects, on two different machines (with the same OS version).

The error I get is:

!ENTRY org.eclipse.jdt.ui 4 10001 Mar 07, 2004 21:09:29.496
!MESSAGE Internal Error
!STACK 0

Ray: Which eclipse build are you using?

Moving to jdt-core, since the CCE is in the search engine.
Can you still reproduce this in Eclipse 3.0M7 or better ?

Actually, no. I cannot reproduce this with 3.0M7.

Dragging these 40 or 50 files around does work. It takes an amazingly long time, but that is probably a 
separate bug. But it does, finally, work.

Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
</infozilla-output>

