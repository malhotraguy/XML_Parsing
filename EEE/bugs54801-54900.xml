<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="54801" />
    <CreationDate amount="2004-03-15 07:53:00 -0500" />
    <DupId amount="71057" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>no program-name available when attaching to an agent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Holger Machens: 
--------------- 
I'm implementing an own profiling agent for special purposes. If the 
agent is listed in the "Attach Java Process" wizard the process is 
always called unknown. We need a way to tell the RAC the right name of the 
process the agent is running on. 
 
Paul Slauenwhite: 
----------------- 
The 'unknown' label in the Attach Java Process" wizard is used if the 
process does not have a name property set on the 
org.eclipse.hyades.internal.execution.local.control.Process implementation. 
 
The 'unknown' process name is always used when attaching to a Java process 
(e.g. local or remote).  If the user is launching a Java process (e.g. local 
or remote), the entered process (e.g. class name) is used as the process name.


*** This bug has been marked as a duplicate of 71057 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Holger Machens: 
--------------- 
I'm implementing an own profiling agent for special purposes. If the 
agent is listed in the "Attach Java Process" wizard the process is 
always called unknown. We need a way to tell the RAC the right name of the 
process the agent is running on. 
 
Paul Slauenwhite: 
----------------- 
The 'unknown' label in the Attach Java Process" wizard is used if the 
process does not have a name property set on the 
org.eclipse.hyades.internal.execution.local.control.Process implementation. 
 
The 'unknown' process name is always used when attaching to a Java process 
(e.g. local or remote).  If the user is launching a Java process (e.g. local 
or remote), the entered process (e.g. class name) is used as the process name.


*** This bug has been marked as a duplicate of 71057 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54802" />
    <CreationDate amount="2004-03-15 07:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete IStatusLineWithProgressManager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>M7

IStatusLineWithProgressManager is now obsolete and should be deleted by M8
Released for builds &gt;20040315</WithStack>
    <WithOutStack>M7

IStatusLineWithProgressManager is now obsolete and should be deleted by M8
Released for builds &gt;20040315</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54803" />
    <CreationDate amount="2004-03-15 08:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] support goto next/previous editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>please support goto next/previous editor(+keymaps) for faster and better
navigation throught the editors!!!
Have you tried CTRL+F6 and CTRL+SHIFT+F6 ?
closing I believe the last comment captures what is required.</WithStack>
    <WithOutStack>please support goto next/previous editor(+keymaps) for faster and better
navigation throught the editors!!!
Have you tried CTRL+F6 and CTRL+SHIFT+F6 ?
closing I believe the last comment captures what is required.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54804" />
    <CreationDate amount="2004-03-15 09:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>BadLocationException when deleting code containing a breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098000">
        <Exception>org.eclipse.jface.text.BadLocationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">org.eclipse.jface.text.BadLocationException.&lt;init&gt;(BadLocationException.java:25)</Frame>
          <Frame depth="2">org.eclipse.jface.text.AbstractLineTracker.getLineNumberOfOffset(AbstractLineTracker.java)</Frame>
          <Frame depth="3">org.eclipse.jface.text.AbstractDocument.getLineOfOffset(AbstractDocument.java)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.breakpointAtRulerLine(AbstractBreakpointRulerAction.java)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.determineBreakpoint(AbstractBreakpointRulerAction.java)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.ui.actions.EnableDisableBreakpointRulerAction.update(EnableDisableBreakpointRulerAction.java:48)</Frame>
          <Frame depth="7">org.eclipse.ui.texteditor.AbstractRulerActionDelegate.update(AbstractRulerActionDelegate.java)</Frame>
          <Frame depth="8">org.eclipse.ui.texteditor.AbstractRulerActionDelegate.selectionChanged(AbstractRulerActionDelegate.java)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)</Frame>
          <Frame depth="16">org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java)</Frame>
          <Frame depth="17">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java)</Frame>
          <Frame depth="18">org.eclipse.jface.text.TextViewer$3.widgetSelected(TextViewer.java:1386)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java)</Frame>
          <Frame depth="25">org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6959)</Frame>
          <Frame depth="26">org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java)</Frame>
          <Frame depth="29">org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java)</Frame>
          <Frame depth="31">org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java)</Frame>
          <Frame depth="32">org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java)</Frame>
          <Frame depth="33">org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:663)</Frame>
          <Frame depth="34">org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java)</Frame>
          <Frame depth="35">org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java)</Frame>
          <Frame depth="36">org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java)</Frame>
          <Frame depth="37">org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocument.java)</Frame>
          <Frame depth="39">org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java)</Frame>
          <Frame depth="40">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java)</Frame>
          <Frame depth="41">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java)</Frame>
          <Frame depth="42">org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:2636)</Frame>
          <Frame depth="43">org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java)</Frame>
          <Frame depth="44">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java)</Frame>
          <Frame depth="45">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java)</Frame>
          <Frame depth="46">org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Widget.windowProc(Widget.java)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="56">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.eventProc(Display.java)</Frame>
          <Frame depth="58">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="63">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="65">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="70">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="71">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20040310

In my development workbench, while having a target workbench open in debug mode,
I deleted a method which had a breakpoint set somewhere. I got this:

org.eclipse.jface.text.BadLocationException
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.jface.text.BadLocationException.&lt;init&gt;(BadLocationException.java:25)
	at
org.eclipse.jface.text.AbstractLineTracker.getLineNumberOfOffset(AbstractLineTracker.java)
	at org.eclipse.jface.text.AbstractDocument.getLineOfOffset(AbstractDocument.java)
	at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.breakpointAtRulerLine(AbstractBreakpointRulerAction.java)
	at
org.eclipse.jdt.internal.debug.ui.actions.AbstractBreakpointRulerAction.determineBreakpoint(AbstractBreakpointRulerAction.java)
	at
org.eclipse.jdt.internal.debug.ui.actions.EnableDisableBreakpointRulerAction.update(EnableDisableBreakpointRulerAction.java:48)
	at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.update(AbstractRulerActionDelegate.java)
	at
org.eclipse.ui.texteditor.AbstractRulerActionDelegate.selectionChanged(AbstractRulerActionDelegate.java)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java)
	at org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java)
	at org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)
	at org.eclipse.core.runtime.Platform.run(Platform.java)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)
	at org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java)
	at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java)
	at org.eclipse.jface.text.TextViewer$3.widgetSelected(TextViewer.java:1386)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java)
	at org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6959)
	at org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java)
	at org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java)
	at org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java)
	at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java)
	at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java)
	at org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java)
	at org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java)
	at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:663)
	at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java)
	at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java)
	at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java)
	at
org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocument.java)
	at org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java)
	at org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:2636)
	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java)
	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java)
	at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Removed unecessary exception logging from AbstractBreakpointRulerAction. Fixed.
Please verify, Luc.
Verified.</WithStack>
    <WithOutStack>I20040310

In my development workbench, while having a target workbench open in debug mode,
I deleted a method which had a breakpoint set somewhere. I got this:


Removed unecessary exception logging from AbstractBreakpointRulerAction. Fixed.
Please verify, Luc.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54805" />
    <CreationDate amount="2004-03-15 09:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Log Interactions view does not open Log File view successfully.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="30">
        <Lines>
          <Line>1) Open the 'New Example' dialog (File &gt;&gt; New &gt;&gt; Example...).</Line>
          <Line>2) Verify the 'Apache Log Correlation/Analyzer Sample' entry is visible on the</Line>
          <Line>right when the 'Hyades Logging' entry is selected on the right is selected.</Line>
          <Line>3) Verify the description at the top of the 'New Example' dialog accurately</Line>
          <Line>describes the Apache Log Correlation/Analyzer example.</Line>
          <Line>4) Click 'Next'.</Line>
          <Line>5) Verify the description at the top of the 'Log Analyzer and Correlation</Line>
          <Line>Sample Project' dialog accurately describes the pane's function.</Line>
          <Line>6) Click 'Next'.</Line>
          <Line>7) Verify the description at the top of the 'Log Analyzer and Correlation</Line>
          <Line>Sample Options' dialog accurately describes the pane's function.</Line>
          <Line>8) Click 'Finish'.</Line>
          <Line>9) Verify the project specified in the 'Log Analyzer and Correlation Sample</Line>
          <Line>Project' dialog is created in the Profiling perspective with the following</Line>
          <Line>files:</Line>
          <Line />
          <Line>-readme.html</Line>
          <Line>-access.log</Line>
          <Line>-error.log</Line>
          <Line>-symptomdb.trcdbxmi</Line>
          <Line />
          <Line>10) Verify the 'Working with the Apache Log Correlation/Analyzer Sample' readme</Line>
          <Line>appears in the web browser.</Line>
          <Line>11) Read the entire 'Working with the Apache Log Correlation/Analyzer Sample'</Line>
          <Line>readme.</Line>
          <Line>12) Execute each of the steps and verify that the outcome is correct.</Line>
          <Line>Concern the Log Interaction</Line>
          <Line>Fix required for M8</Line>
          <Line>A selection on the new Correlation created in the Log Navigation is reguired</Line>
          <Line>before opening the log record from Log Interaction in Log View.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Log Interactions view does not open Log File view successfully.

When the user clicks on a log record rectangle and then right-clicks &gt;&gt; Open in 
Log View, the Log View appears but says that no data is available for display.

Step to reproduce:

1) Open the 'New Example' dialog (File &gt;&gt; New &gt;&gt; Example...).
2) Verify the 'Apache Log Correlation/Analyzer Sample' entry is visible on the 
right when the 'Hyades Logging' entry is selected on the right is selected.
3) Verify the description at the top of the 'New Example' dialog accurately 
describes the Apache Log Correlation/Analyzer example.
4) Click 'Next'.
5) Verify the description at the top of the 'Log Analyzer and Correlation 
Sample Project' dialog accurately describes the pane's function.
6) Click 'Next'.
7) Verify the description at the top of the 'Log Analyzer and Correlation 
Sample Options' dialog accurately describes the pane's function.
8) Click 'Finish'.
9) Verify the project specified in the 'Log Analyzer and Correlation Sample 
Project' dialog is created in the Profiling perspective with the following 
files:

-readme.html
-access.log
-error.log
-symptomdb.trcdbxmi

10) Verify the 'Working with the Apache Log Correlation/Analyzer Sample' readme 
appears in the web browser.
11) Read the entire 'Working with the Apache Log Correlation/Analyzer Sample' 
readme.
12) Execute each of the steps and verify that the outcome is correct.
Concern the Log Interaction
Fix required for M8
A selection on the new Correlation created in the Log Navigation is reguired 
before opening the log record from Log Interaction in Log View.

As a temporary solution, manually select the 'Default Time' correlation before 
running the 'Open Log View' action.
done in 1.3 and HEAD(3.0)
Closing.
house keeping</WithStack>
    <WithOutStack>Log Interactions view does not open Log File view successfully.

When the user clicks on a log record rectangle and then right-clicks &gt;&gt; Open in 
Log View, the Log View appears but says that no data is available for display.

Step to reproduce:

1) Open the 'New Example' dialog (File &gt;&gt; New &gt;&gt; Example...).
2) Verify the 'Apache Log Correlation/Analyzer Sample' entry is visible on the 
right when the 'Hyades Logging' entry is selected on the right is selected.
3) Verify the description at the top of the 'New Example' dialog accurately 
describes the Apache Log Correlation/Analyzer example.
4) Click 'Next'.
5) Verify the description at the top of the 'Log Analyzer and Correlation 
Sample Project' dialog accurately describes the pane's function.
6) Click 'Next'.
7) Verify the description at the top of the 'Log Analyzer and Correlation 
Sample Options' dialog accurately describes the pane's function.
8) Click 'Finish'.
9) Verify the project specified in the 'Log Analyzer and Correlation Sample 
Project' dialog is created in the Profiling perspective with the following 
files:

-readme.html
-access.log
-error.log
-symptomdb.trcdbxmi

10) Verify the 'Working with the Apache Log Correlation/Analyzer Sample' readme 
appears in the web browser.
11) Read the entire 'Working with the Apache Log Correlation/Analyzer Sample' 
readme.
12) Execute each of the steps and verify that the outcome is correct.
Concern the Log Interaction
Fix required for M8
A selection on the new Correlation created in the Log Navigation is reguired 
before opening the log record from Log Interaction in Log View.

As a temporary solution, manually select the 'Default Time' correlation before 
running the 'Open Log View' action.
done in 1.3 and HEAD(3.0)
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54806" />
    <CreationDate amount="2004-03-15 09:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Change method signature table doesn't get updated on deletion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="56" end="127" />
        <code>class A
{
   void method(int a, int b, int c, int d)
   {
      
   }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Refactor-&gt;Change Method signature on the method</Line>
          <Line>2. In the table that shows select rows 2 and 3 (b and c) and press Remove.</Line>
          <Line>3. Press Add</Line>
          <Line>4. Press Up</Line>
          <Line>5. Press Up (observer nothing happens)</Line>
          <Line>6. Press Up (observer nothing happens)</Line>
          <Line>7. Press Up - It finally does what you expect it to.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200403100800
for the following File
------------------
class A
{
   void method(int a, int b, int c, int d)
   {
      
   }
}
----------------------------------
1. Refactor-&gt;Change Method signature on the method
2. In the table that shows select rows 2 and 3 (b and c) and press Remove.
3. Press Add
4. Press Up
5. Press Up (observer nothing happens)
6. Press Up (observer nothing happens)
7. Press Up - It finally does what you expect it to.

Steps 5 and 6 shouldn't happen!
Fixed &gt; 20040315.</WithStack>
    <WithOutStack>I200403100800
for the following File
------------------
class A
{
   void method(int a, int b, int c, int d)
   {
      
   }
}
----------------------------------
1. Refactor-&gt;Change Method signature on the method
2. In the table that shows select rows 2 and 3 (b and c) and press Remove.
3. Press Add
4. Press Up
5. Press Up (observer nothing happens)
6. Press Up (observer nothing happens)
7. Press Up - It finally does what you expect it to.

Steps 5 and 6 shouldn't happen!
Fixed &gt; 20040315.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54807" />
    <CreationDate amount="2004-03-15 09:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>LogParserSample does requires hlcore.jar.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>LogParserSample does requires hlcore.jar.
Code checked-in on 15/03/2004 for 1.3 branch and HEAD.
Closing.
house keeping</WithStack>
    <WithOutStack>LogParserSample does requires hlcore.jar.
Code checked-in on 15/03/2004 for 1.3 branch and HEAD.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54808" />
    <CreationDate amount="2004-03-15 09:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Navigator] mark dirty files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be very handy if the files that contain unsaved changes were marked in
the navigator, sothat the user can get a quick overview of what files have been
changed (useful before Committing etc.).

This could be done with tinting the icon or better by changing the label-style
to Italic, for example.
You already get this with the CVS decorator.
Agreed.  Please reopen if this does not satisfy your requirement.
thought I already replied - thanks for the answer, I was not aware of the CVS
decorator when I opened the bug.

It would still be nice if there was a way to configure the way changed files are
marked however, as I find the "&gt;"-marks clobber up the name and waste space -
I'd prefer to have them shown in /Italic/ style, as this is also more visible IMO.
This is a minor gripe, though,-)</WithStack>
    <WithOutStack>It would be very handy if the files that contain unsaved changes were marked in
the navigator, sothat the user can get a quick overview of what files have been
changed (useful before Committing etc.).

This could be done with tinting the icon or better by changing the label-style
to Italic, for example.
You already get this with the CVS decorator.
Agreed.  Please reopen if this does not satisfy your requirement.
thought I already replied - thanks for the answer, I was not aware of the CVS
decorator when I opened the bug.

It would still be nice if there was a way to configure the way changed files are
marked however, as I find the "&gt;"-marks clobber up the name and waste space -
I'd prefer to have them shown in /Italic/ style, as this is also more visible IMO.
This is a minor gripe, though,-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54809" />
    <CreationDate amount="2004-03-15 09:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Progress] Background job messages have wrong coordinates on dual display</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) The little icon to show a background job is running (looks like a burning</Line>
          <Line>cigar) is located to the bottom right of the status bar (it use to be on the</Line>
          <Line>bottom left?).</Line>
          <Line />
          <Line>2) The little message bubble from a background process appears at the bottom</Line>
          <Line>left of my primary monitor (right one).</Line>
          <Line>The progress window is now a hover and the indicator is in the correct place.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I have a dual display setup. The monitor on the right is my primary display, 
and the one to the left is my secondary display. So, that means 0,0 is the top 
left of my primary monitor (one on the right side). So all windows on my 
secondary monitor (left side) have negative coordinates.

When I open an eclipse window on my secondary monitor (left one) and maximize 
it, I get the following problems:

1) The little icon to show a background job is running (looks like a burning 
cigar) is located to the bottom right of the status bar (it use to be on the 
bottom left?).

2) The little message bubble from a background process appears at the bottom 
left of my primary monitor (right one).
The progress window is now a hover and the indicator is in the correct place.</WithStack>
    <WithOutStack>I have a dual display setup. The monitor on the right is my primary display, 
and the one to the left is my secondary display. So, that means 0,0 is the top 
left of my primary monitor (one on the right side). So all windows on my 
secondary monitor (left side) have negative coordinates.

When I open an eclipse window on my secondary monitor (left one) and maximize 
it, I get the following problems:

1) The little icon to show a background job is running (looks like a burning 
cigar) is located to the bottom right of the status bar (it use to be on the 
bottom left?).

2) The little message bubble from a background process appears at the bottom 
left of my primary monitor (right one).
The progress window is now a hover and the indicator is in the correct place.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54810" />
    <CreationDate amount="2004-03-15 09:29:00 -0500" />
    <DupId amount="50515" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Annoying dialog when classes created by Javassist are debugged.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Tapestry uses Javassist to create concrete subclasses of page/component classes 
at runtime. Basicly, Tapestry implements getter/setter methods.

When these classes are seen in the debugger, we get (over and over and over) a 
dialog informing us...

&gt; "Attempting to install a breakpoint in the type 
&gt; MyComponent$Enhance_69 that has no line number attributes. The 
&gt; breakpoint cannot be installed. Class files must be 
&gt; generated with the number attributes. 
&gt; Reason: 
&gt; Absent Line Number Information"

Would be nice if there was a "never show me this again" checkbox option on the 
dialog.

Geoff


*** This bug has been marked as a duplicate of 50515 ***</WithStack>
    <WithOutStack>Tapestry uses Javassist to create concrete subclasses of page/component classes 
at runtime. Basicly, Tapestry implements getter/setter methods.

When these classes are seen in the debugger, we get (over and over and over) a 
dialog informing us...

&gt; "Attempting to install a breakpoint in the type 
&gt; MyComponent$Enhance_69 that has no line number attributes. The 
&gt; breakpoint cannot be installed. Class files must be 
&gt; generated with the number attributes. 
&gt; Reason: 
&gt; Absent Line Number Information"

Would be nice if there was a "never show me this again" checkbox option on the 
dialog.

Geoff


*** This bug has been marked as a duplicate of 50515 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54811" />
    <CreationDate amount="2004-03-15 09:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[osgi] change util/services bundles to have code in the root</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>As a step towards packaging plugins as jars, we should change 
    org.eclipse.osgi.util
    org.eclipse.osgi.services
to have their code at the root of the plugin and . on the classpath.  
This has an interesting effect on the unjar'd version where the code is in dirs 
in the exploded plugin dir (as opposed to being in a code.jar in the root of 
the plugin dir).

Need to see how the tooling reacts to this.
The util and services bundles currently have binary jars checked in.  Are we 
going to now have the code in a src folder and compile it?  BTW, that is fine 
with me.

Also, should the plugin.xml be removed?  Is it still needed with the new 
tooling?
We cannot compile the code since it requires all manner of things like servlets 
etc.  I suggest that we just explode the jars into the root of the plugin.

Consider making a separate src dir and then having the .class files in packages 
just under the plugin root.  The source should not be included in the "binary" 
drops and should be added to the platform source plugin by the build 
mechanism.  All we have to do is setup the build.properties accordingly.

As for plugin.xml, I think we still need that for PDE build.  Pascal is working 
on that right now.  Not sure on the ETA but it should not be long now.  It 
would be interesting to get everything setup and see how that works and then 
delete the plugin.xml and see if it all still works.  
Does PDE support this?  I've attempted this several times but cannot figure 
out how to get it to work.

I try creating a bundle with a Bundle-ClassPath of "." and PDE just will not 
recognize it.
This is one of the agreed scenarios.  If there are issues we should enter bugs 
with PDE etc.

I just tried again with today's I build and the building of such bundles is 
supported.
I've noticed one problem when you are trying to export it using the wizards, 
but if you use the build script generated and says for example 
build "zip.plugin" it works fine.
Thanks to DJ and Jeff the latest I-Build has jar'ed the util and services 
bundles.  They now have their code at the root.</WithStack>
    <WithOutStack>As a step towards packaging plugins as jars, we should change 
    org.eclipse.osgi.util
    org.eclipse.osgi.services
to have their code at the root of the plugin and . on the classpath.  
This has an interesting effect on the unjar'd version where the code is in dirs 
in the exploded plugin dir (as opposed to being in a code.jar in the root of 
the plugin dir).

Need to see how the tooling reacts to this.
The util and services bundles currently have binary jars checked in.  Are we 
going to now have the code in a src folder and compile it?  BTW, that is fine 
with me.

Also, should the plugin.xml be removed?  Is it still needed with the new 
tooling?
We cannot compile the code since it requires all manner of things like servlets 
etc.  I suggest that we just explode the jars into the root of the plugin.

Consider making a separate src dir and then having the .class files in packages 
just under the plugin root.  The source should not be included in the "binary" 
drops and should be added to the platform source plugin by the build 
mechanism.  All we have to do is setup the build.properties accordingly.

As for plugin.xml, I think we still need that for PDE build.  Pascal is working 
on that right now.  Not sure on the ETA but it should not be long now.  It 
would be interesting to get everything setup and see how that works and then 
delete the plugin.xml and see if it all still works.  
Does PDE support this?  I've attempted this several times but cannot figure 
out how to get it to work.

I try creating a bundle with a Bundle-ClassPath of "." and PDE just will not 
recognize it.
This is one of the agreed scenarios.  If there are issues we should enter bugs 
with PDE etc.

I just tried again with today's I build and the building of such bundles is 
supported.
I've noticed one problem when you are trying to export it using the wizards, 
but if you use the build script generated and says for example 
build "zip.plugin" it works fine.
Thanks to DJ and Jeff the latest I-Build has jar'ed the util and services 
bundles.  They now have their code at the root.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54812" />
    <CreationDate amount="2004-03-15 09:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Update error parser manager and interface</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="2589" end="2875" />
        <code>+	private String trimTrailing(String line) {
+		boolean keepTrimming = true;
+		int end = line.length();
+		while (keepTrimming &amp;&amp; end &gt; 0) {
+****&gt;&gt;			keepTrimming = (line.charAt(end - 1) &lt; '\u0020');
+			if( keepTrimming ){
+				end--;
+			}
+		}
+		return line.substring(0, end);
+	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- handle new console interface.</Line>
          <Line>- better parsing of multiline errors/warnings.</Line>
          <Line>Comment for Thomas;</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The error parser manager and error parser interface need to be updated for the
following reasons;
- handle new console interface.
- better parsing of multiline errors/warnings.
Comment for Thomas;

- Can we get a start of parsing/set-up callout as well as a end of parsing/
tear-down callout based on the stream of data being passed through.  This
would allow the parser to temporarily buffer its state (ie with your markers
or with a custom object) and then do a post examination.

- Can we not trim leading whitespace from the input line, just the [\r]\n
instead.  This can be used as an important indicator of a "continuation" 
for an error parser.
PR was not targeted to any particular release. Changing target milestone to 2.1
*** Bug 32027 has been marked as a duplicate of this bug. ***
*** Bug 58765 has been marked as a duplicate of this bug. ***
The last comment on this was a long time ago, so I'm wondering, what is the progress on this item?

I would be very interested in having the Error Parser Manager _not_ trim the leading whitespace of each line, because it would allow for easy detection "continuations" of error messages:

Warning 105: Some random warning that is continued
   onto the next line of the compiler output.

What do you think on this issue? By the way, I've a patch for this ready and could submit it immediately :).

Kind regards,
Elias.

Created attachment 32134
Patch for ErrorParserManager

Makes the ErrorParserManager trim trailing whitespace only (currently it's trimming both preceding &amp; trailing whitespace of each line processed).
The current implementation of the ErrorParserManager trims both the leading and trailing whitespaces. As Elias explained above, this makes it almost impossible to distinguish between a single and multi line message by the implementors of IErrorParser.processLine. The proposed solution is not enough, we need to cancel trimming of both leading and trailing whitespaces. If we only leave the leading whitespace, then the implementor of IErrorParser.processLine always needs to wait for the next line to identify if it is a multiline message or not and then generate a marker. But there is no indication if the given line is the last one. So if we leave also the trailing whitespaces, they can serve as an indication of multiline message.

The idea, in general, is simple, don't touch the original message, only divide it into separate lines (remove EOL) and let the IErrorParser.processLine implementor handle the trimming if needed.
The proposed patch is OK with a small change to leave the trailing whitespaces:

+	private String trimTrailing(String line) {
+		boolean keepTrimming = true;
+		int end = line.length();
+		while (keepTrimming &amp;&amp; end &gt; 0) {
+****&gt;&gt;			keepTrimming = (line.charAt(end - 1) &lt; '\u0020');
+			if( keepTrimming ){
+				end--;
+			}
+		}
+		return line.substring(0, end);
+	}



Hi,

Please integrate the attached bug fix into next CDT release. 

It will ease the upgrade process to new CDT versions. 

Thanks a lot in advance,

Irit

Returning to pool for now.
Created attachment 111450
Cancel trimming of prefix and suffix whitespaces

Hi,
As was pointed out here, the trimming makes the parsing of multiline error messages nearly impossible.
If it's decided to cancel the trimming of prefix and suffix whitespaces and leave it to the error parser to deal with, then the change to ErrorParserManager.checkLine is trivial, attaching two options, whatever you like most :-)

Thanks,
Alex
Created attachment 111451
Another way to cancel the trimming of whitespaces

Second option for the patch.
first is better since it allows parsing cross-platform build logs
I am hesitant on doing this since it would break exiting error parsers
that expect trimmed lines.

I think we should create another interface IErrorParser2 which would
tell what lines it wants to process.
Created attachment 115836
proposed interface
I think it's a good idea.
+1
Created attachment 115936
interface, patch and tests
Attaching new patch, contains new API (I cut off some stuff for simplicity),
patch to ErrorParserManager and tests
fixed by adding new API (on HEAD).
Parsers that want this functionality should implement IErrorParser2.

No changes made to current CDT parsers (can be covered by specific prs)

*** Bug 230991 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The error parser manager and error parser interface need to be updated for the
following reasons;
- handle new console interface.
- better parsing of multiline errors/warnings.
Comment for Thomas;

- Can we get a start of parsing/set-up callout as well as a end of parsing/
tear-down callout based on the stream of data being passed through.  This
would allow the parser to temporarily buffer its state (ie with your markers
or with a custom object) and then do a post examination.

- Can we not trim leading whitespace from the input line, just the [\r]\n
instead.  This can be used as an important indicator of a "continuation" 
for an error parser.
PR was not targeted to any particular release. Changing target milestone to 2.1
*** Bug 32027 has been marked as a duplicate of this bug. ***
*** Bug 58765 has been marked as a duplicate of this bug. ***
The last comment on this was a long time ago, so I'm wondering, what is the progress on this item?

I would be very interested in having the Error Parser Manager _not_ trim the leading whitespace of each line, because it would allow for easy detection "continuations" of error messages:

Warning 105: Some random warning that is continued
   onto the next line of the compiler output.

What do you think on this issue? By the way, I've a patch for this ready and could submit it immediately :).

Kind regards,
Elias.

Created attachment 32134
Patch for ErrorParserManager

Makes the ErrorParserManager trim trailing whitespace only (currently it's trimming both preceding &amp; trailing whitespace of each line processed).
The current implementation of the ErrorParserManager trims both the leading and trailing whitespaces. As Elias explained above, this makes it almost impossible to distinguish between a single and multi line message by the implementors of IErrorParser.processLine. The proposed solution is not enough, we need to cancel trimming of both leading and trailing whitespaces. If we only leave the leading whitespace, then the implementor of IErrorParser.processLine always needs to wait for the next line to identify if it is a multiline message or not and then generate a marker. But there is no indication if the given line is the last one. So if we leave also the trailing whitespaces, they can serve as an indication of multiline message.

The idea, in general, is simple, don't touch the original message, only divide it into separate lines (remove EOL) and let the IErrorParser.processLine implementor handle the trimming if needed.
The proposed patch is OK with a small change to leave the trailing whitespaces:

+	private String trimTrailing(String line) {
+		boolean keepTrimming = true;
+		int end = line.length();
+		while (keepTrimming &amp;&amp; end &gt; 0) {
+****&gt;&gt;			keepTrimming = (line.charAt(end - 1) &lt; '\u0020');
+			if( keepTrimming ){
+				end--;
+			}
+		}
+		return line.substring(0, end);
+	}



Hi,

Please integrate the attached bug fix into next CDT release. 

It will ease the upgrade process to new CDT versions. 

Thanks a lot in advance,

Irit

Returning to pool for now.
Created attachment 111450
Cancel trimming of prefix and suffix whitespaces

Hi,
As was pointed out here, the trimming makes the parsing of multiline error messages nearly impossible.
If it's decided to cancel the trimming of prefix and suffix whitespaces and leave it to the error parser to deal with, then the change to ErrorParserManager.checkLine is trivial, attaching two options, whatever you like most :-)

Thanks,
Alex
Created attachment 111451
Another way to cancel the trimming of whitespaces

Second option for the patch.
first is better since it allows parsing cross-platform build logs
I am hesitant on doing this since it would break exiting error parsers
that expect trimmed lines.

I think we should create another interface IErrorParser2 which would
tell what lines it wants to process.
Created attachment 115836
proposed interface
I think it's a good idea.
+1
Created attachment 115936
interface, patch and tests
Attaching new patch, contains new API (I cut off some stuff for simplicity),
patch to ErrorParserManager and tests
fixed by adding new API (on HEAD).
Parsers that want this functionality should implement IErrorParser2.

No changes made to current CDT parsers (can be covered by specific prs)

*** Bug 230991 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54813" />
    <CreationDate amount="2004-03-15 09:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Navigator] more options to hide/show the navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>There should be a keyboard-shortcut and other ways to hide or show the
navigator-view - the only way currently is to maximise/minimise an editor-view
or invoke the menu-command.

Alternative ways allowing easier and more comfortable user-interaction could
include:

* hide/show by double-clicking the vertical separator 
* introduce a keyboard-shortcut (cannot be configured currently AFAIK)
* introduce a toolbar for views (not just perspectives) to be able to easily
customise perspectives - this should actually be a separate RFE, but fits in
here - currently there is much space left blank on the left side, as the
perspective-icons don't consume much space, this cut be put to good use...:)</WithStack>
    <WithOutStack>There should be a keyboard-shortcut and other ways to hide or show the
navigator-view - the only way currently is to maximise/minimise an editor-view
or invoke the menu-command.

Alternative ways allowing easier and more comfortable user-interaction could
include:

* hide/show by double-clicking the vertical separator 
* introduce a keyboard-shortcut (cannot be configured currently AFAIK)
* introduce a toolbar for views (not just perspectives) to be able to easily
customise perspectives - this should actually be a separate RFE, but fits in
here - currently there is much space left blank on the left side, as the
perspective-icons don't consume much space, this cut be put to good use...:)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54814" />
    <CreationDate amount="2004-03-15 09:32:00 -0500" />
    <DupId amount="59258" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Per project compiler settings should be stored in file.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Compiler settings that were changed on a per project basis should be stored in the .project file (or 
similar) so that they can be shared when using an SCM system.
Just for pointing out the use of this: we're running workspaces with about 100 projects and some 
agreed upon compiler settings. However, there are one or two projects with code that was generated 
and compiling this code with the global options results in about 8000-10000 problem markers, making 
Eclipse quite sluggish.


*** This bug has been marked as a duplicate of 59258 ***</WithStack>
    <WithOutStack>Compiler settings that were changed on a per project basis should be stored in the .project file (or 
similar) so that they can be shared when using an SCM system.
Just for pointing out the use of this: we're running workspaces with about 100 projects and some 
agreed upon compiler settings. However, there are one or two projects with code that was generated 
and compiling this code with the global options results in about 8000-10000 problem markers, making 
Eclipse quite sluggish.


*** This bug has been marked as a duplicate of 59258 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54815" />
    <CreationDate amount="2004-03-15 09:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] [Contexts] Retarget fixed set of command for a shell</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="functioncall">
        <location start="5752" end="5812" />
        <code>(IContextService)site.getService(IContextService.class);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5813" end="5879" />
        <code>contextService.activateContext(IContextService.CONTEXT_ID_WINDOW);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5905" end="5965" />
        <code>(IHandlerService)site.getService(IHandlerService.class);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5966" end="6046" />
        <code>service.activateHandler(invokingCommandId, getToggleHandler(invokingCommandId));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6047" end="6183" />
        <code>service.activateHandler(fShowViewMenuAction.getActionDefinitionId(), new org.eclipse.jface.commands.ActionHandler(fShowViewMenuAction));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>1.) Define a context for your key binding to exist in.</Line>
          <Line>2.) Make a submission through WorkbenchContextSupport binding the context to</Line>
          <Line>your shell, as well as in whatever other situations you need (?) it.</Line>
          <Line>3.) Define a handler, and submit the handler through WorkbenchCommandSupport.</Line>
          <Line>It is currently not possible to restrict a handler to a particular shell,</Line>
          <Line>though I'm considering that support for M9.  If it is important for you, please</Line>
          <Line>say so.</Line>
          <Line />
          <Line>You can also try messaging me on Sametime or IRC (irc.freenode.net#eclipse-dev)</Line>
          <Line>-- IRC is preferred.</Line>
          <Line />
          <Line>Concrete use case: I want to hook an action to the show view menu command</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- while editor is active it opens the Quick Outline</Line>
          <Line>- while Quick Outline is active it toggles its input</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20040310

I need to define (retarget) an existing command but don't want to inherit all
other commands. Currently I can either get all commands (see
registerForKeyBindings) or only the ones for text editing.

The problem can be seen easily when using the debugger's new inspect pop-ups: if
you press Ctrl+H it opens the Search dialog because Ctrl+H is in the global context.

Note: I don't like to define a new key binding context since the user should be
able to invoke the command with its predefined key sequence and should not be
forced to redefine the same key sequence for the same command but in a different
context.
Is this covered by bug 31731 which is targeted for 3.0 M8?

I guess even if I define a new context it will automatically inherit from
global, right? So the question is: how can I disable the global context?

*** Bug 55349 has been marked as a duplicate of this bug. ***
Chris, can you give us an ETA for this? If it doesn't make it into M8 then we
need to take out the key binding support for the Quick Outline (Ctrl+F10 to show
the view menu) due to bug 55349.
The new key binding code released for I20040322 broke the existing support to
open the view menu using Ctrl+F10.

For now I removed all corresponding code.

I don't feel like I have a complete understanding of what you're doing, but the 
following might work.  If it doesn't, can you provide more details?  Thanks.... 
 
1.) Define a context for your key binding to exist in. 
2.) Make a submission through WorkbenchContextSupport binding the context to 
your shell, as well as in whatever other situations you need (?) it. 
3.) Define a handler, and submit the handler through WorkbenchCommandSupport.  
It is currently not possible to restrict a handler to a particular shell, 
though I'm considering that support for M9.  If it is important for you, please 
say so. 
 
You can also try messaging me on Sametime or IRC (irc.freenode.net#eclipse-dev) 
-- IRC is preferred. 
 
Concrete use case: I want to hook an action to the show view menu command

I didn't want to define a new context (at least not visible to the user).
Let's say someone defines a command X in some context and the user configured a
key sequence for it. Let's assume I have no influence over that context i.e. I
cannot ask to change the context(s) for command X. Now, I would still like to
use that command and its sequence in my dialog without giving the user the
burden to know about some special "QuickControl" context.

 (In reply to comment #6)  
&gt; I didn't want to define a new context (at least not visible to the user).  
&gt; Let's say someone defines a command X in some context and the user  
&gt; configured a key sequence for it. Let's assume I have no influence over that  
&gt; context i.e. I cannot ask to change the context(s) for command X. Now, I  
&gt; would still like to use that command and its sequence in my dialog without  
&gt; giving the user the burden to know about some special "QuickControl"  
&gt; context.  
  
This does make sense to me.  Commands are not defined in a context.  Bindings  
are defined in contexts.  You always have influence over contexts: anyone can 
activate and deactive contexts.  In your dialog, activate the context 
containing the binding you wish to use. 
 
(In reply to comment #7)
&gt; In your dialog, activate the context containing the binding you wish to use. 

That's exactly the point of this bug. The binding looks like this:
      &lt;key
            sequence="M1+O"
            contextId="org.eclipse.jdt.ui.javaEditorScope"
            commandId="org.eclipse.jdt.ui.edit.text.java.show.outline"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/&gt;

Now, when the dialog is active, we don't wan't to activate all commands from the
javaEditorScope (which would not work anyway, since it inherits
org.eclipse.ui.contexts.window and not dialogAndWindow (bug 115460 comment 4)).

We only want to activate the particular command
"org.eclipse.jdt.ui.edit.text.java.show.outline" with the keybinding it has in
javaEditorScope.
The way to do this is to do the following: 
 
    &lt;key 
        sequence="M1+O" 
        contextId="org.eclipse.ui.contexts.dialogAndWindow" 
        commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 
 
Moving Dougs bugs
Is this still a problem in 3.3?

PW

&gt; Is this still a problem in 3.3?
Yes.
(In reply to comment #9)
&gt; The way to do this is to do the following: 
&gt;  
&gt;     &lt;key 
&gt;         sequence="M1+O" 
&gt;         contextId="org.eclipse.ui.contexts.dialogAndWindow" 
&gt;         commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
&gt;         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 
&gt;  

If I read Doug's reply correctly, there's no way to use the javaEditorScope keybindings individually in a dialog.  He's suggesting just moving your keybinding into dialogAndWindow.

For finer control,  you could create a javaCommonScope context (probably parented off of org.eclipse.ui.contexts.dialogAndWindow) and place the common keybindings you want in there ... then activating that context with the java editor and your dialog would allow them to continue working.

PW

Dani, is that an option?
Paul, I tried that:
&gt;     &lt;key 
&gt;         sequence="M1+O" 
&gt;         contextId="org.eclipse.ui.contexts.dialogAndWindow" 
&gt;         commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
&gt;         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 

and as you remember I also tried your patch from bug 126044, comment 7 and see also bug 126342. For some strange reason the context for Ctrl+O's shell is still the java editor scope and even if I do this:

IContextService contextService=   
    (IContextService)site.getService(IContextService.class);
contextService.activateContext(IContextService.CONTEXT_ID_WINDOW);
IHandlerService service=
    (IHandlerService)site.getService(IHandlerService.class);
service.activateHandler(invokingCommandId, getToggleHandler(invokingCommandId));
service.activateHandler(fShowViewMenuAction.getActionDefinitionId(), new org.eclipse.jface.commands.ActionHandler(fShowViewMenuAction));

Neither F10 or Ctrl+O work in the dialog.

So - any help to make this work is really appreciated i.e. I don't absolutely require this bug to get resolved but a solution to remove the deprecated code out of AbstractInformationControl and its subclasses.
Hi Dani, I'm investigating.

Which dialog class are you working with right now?  And you want CTRL+F10 to be fShowViewMenuAction for the dialog, and CTRL+O to be "org.eclipse.jdt.ui.edit.text.java.show.outline" for the dialog?

Is it InspectPopupDialog?

PW

&gt;Which dialog class are you working with right now?
The concrete class is JavaOutlineInformationControl which extends AbstractInformationControl (used in JDT UI for the Quick views) extends PopupDialog from Platform UI (JFace).

&gt;and you want CTRL+F10 to be
&gt;fShowViewMenuAction for the dialog,
Correct.
&gt; and CTRL+O to be "org.eclipse.jdt.ui.edit.text.java.show.outline" for the
&gt; dialog?
It does two things:
- while editor is active it opens the Quick Outline
- while Quick Outline is active it toggles its input

&gt;Is it InspectPopupDialog?
No, that's from Debug.
There are no plans to provide other scoping options in keybindings.

There are either the hierarchical set of contexts and/or the selected scheme and its parent schemes.

PW</WithStack>
    <WithOutStack>I20040310

I need to define (retarget) an existing command but don't want to inherit all
other commands. Currently I can either get all commands (see
registerForKeyBindings) or only the ones for text editing.

The problem can be seen easily when using the debugger's new inspect pop-ups: if
you press Ctrl+H it opens the Search dialog because Ctrl+H is in the global context.

Note: I don't like to define a new key binding context since the user should be
able to invoke the command with its predefined key sequence and should not be
forced to redefine the same key sequence for the same command but in a different
context.
Is this covered by bug 31731 which is targeted for 3.0 M8?

I guess even if I define a new context it will automatically inherit from
global, right? So the question is: how can I disable the global context?

*** Bug 55349 has been marked as a duplicate of this bug. ***
Chris, can you give us an ETA for this? If it doesn't make it into M8 then we
need to take out the key binding support for the Quick Outline (Ctrl+F10 to show
the view menu) due to bug 55349.
The new key binding code released for I20040322 broke the existing support to
open the view menu using Ctrl+F10.

For now I removed all corresponding code.

I don't feel like I have a complete understanding of what you're doing, but the 
following might work.  If it doesn't, can you provide more details?  Thanks.... 
 
1.) Define a context for your key binding to exist in. 
2.) Make a submission through WorkbenchContextSupport binding the context to 
your shell, as well as in whatever other situations you need (?) it. 
3.) Define a handler, and submit the handler through WorkbenchCommandSupport.  
It is currently not possible to restrict a handler to a particular shell, 
though I'm considering that support for M9.  If it is important for you, please 
say so. 
 
You can also try messaging me on Sametime or IRC (irc.freenode.net#eclipse-dev) 
-- IRC is preferred. 
 
Concrete use case: I want to hook an action to the show view menu command

I didn't want to define a new context (at least not visible to the user).
Let's say someone defines a command X in some context and the user configured a
key sequence for it. Let's assume I have no influence over that context i.e. I
cannot ask to change the context(s) for command X. Now, I would still like to
use that command and its sequence in my dialog without giving the user the
burden to know about some special "QuickControl" context.

 (In reply to comment #6)  
&gt; I didn't want to define a new context (at least not visible to the user).  
&gt; Let's say someone defines a command X in some context and the user  
&gt; configured a key sequence for it. Let's assume I have no influence over that  
&gt; context i.e. I cannot ask to change the context(s) for command X. Now, I  
&gt; would still like to use that command and its sequence in my dialog without  
&gt; giving the user the burden to know about some special "QuickControl"  
&gt; context.  
  
This does make sense to me.  Commands are not defined in a context.  Bindings  
are defined in contexts.  You always have influence over contexts: anyone can 
activate and deactive contexts.  In your dialog, activate the context 
containing the binding you wish to use. 
 
(In reply to comment #7)
&gt; In your dialog, activate the context containing the binding you wish to use. 

That's exactly the point of this bug. The binding looks like this:
      &lt;key
            sequence="M1+O"
            contextId="org.eclipse.jdt.ui.javaEditorScope"
            commandId="org.eclipse.jdt.ui.edit.text.java.show.outline"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/&gt;

Now, when the dialog is active, we don't wan't to activate all commands from the
javaEditorScope (which would not work anyway, since it inherits
org.eclipse.ui.contexts.window and not dialogAndWindow (bug 115460 comment 4)).

We only want to activate the particular command
"org.eclipse.jdt.ui.edit.text.java.show.outline" with the keybinding it has in
javaEditorScope.
The way to do this is to do the following: 
 
    &lt;key 
        sequence="M1+O" 
        contextId="org.eclipse.ui.contexts.dialogAndWindow" 
        commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 
 
Moving Dougs bugs
Is this still a problem in 3.3?

PW

&gt; Is this still a problem in 3.3?
Yes.
(In reply to comment #9)
&gt; The way to do this is to do the following: 
&gt;  
&gt;     &lt;key 
&gt;         sequence="M1+O" 
&gt;         contextId="org.eclipse.ui.contexts.dialogAndWindow" 
&gt;         commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
&gt;         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 
&gt;  

If I read Doug's reply correctly, there's no way to use the javaEditorScope keybindings individually in a dialog.  He's suggesting just moving your keybinding into dialogAndWindow.

For finer control,  you could create a javaCommonScope context (probably parented off of org.eclipse.ui.contexts.dialogAndWindow) and place the common keybindings you want in there ... then activating that context with the java editor and your dialog would allow them to continue working.

PW

Dani, is that an option?
Paul, I tried that:
&gt;     &lt;key 
&gt;         sequence="M1+O" 
&gt;         contextId="org.eclipse.ui.contexts.dialogAndWindow" 
&gt;         commandId="org.eclipse.jdt.ui.edit.text.java.show.outline" 
&gt;         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" /&gt; 

and as you remember I also tried your patch from bug 126044, comment 7 and see also bug 126342. For some strange reason the context for Ctrl+O's shell is still the java editor scope and even if I do this:

IContextService contextService=   
    (IContextService)site.getService(IContextService.class);
contextService.activateContext(IContextService.CONTEXT_ID_WINDOW);
IHandlerService service=
    (IHandlerService)site.getService(IHandlerService.class);
service.activateHandler(invokingCommandId, getToggleHandler(invokingCommandId));
service.activateHandler(fShowViewMenuAction.getActionDefinitionId(), new org.eclipse.jface.commands.ActionHandler(fShowViewMenuAction));

Neither F10 or Ctrl+O work in the dialog.

So - any help to make this work is really appreciated i.e. I don't absolutely require this bug to get resolved but a solution to remove the deprecated code out of AbstractInformationControl and its subclasses.
Hi Dani, I'm investigating.

Which dialog class are you working with right now?  And you want CTRL+F10 to be fShowViewMenuAction for the dialog, and CTRL+O to be "org.eclipse.jdt.ui.edit.text.java.show.outline" for the dialog?

Is it InspectPopupDialog?

PW

&gt;Which dialog class are you working with right now?
The concrete class is JavaOutlineInformationControl which extends AbstractInformationControl (used in JDT UI for the Quick views) extends PopupDialog from Platform UI (JFace).

&gt;and you want CTRL+F10 to be
&gt;fShowViewMenuAction for the dialog,
Correct.
&gt; and CTRL+O to be "org.eclipse.jdt.ui.edit.text.java.show.outline" for the
&gt; dialog?
It does two things:
- while editor is active it opens the Quick Outline
- while Quick Outline is active it toggles its input

&gt;Is it InspectPopupDialog?
No, that's from Debug.
There are no plans to provide other scoping options in keybindings.

There are either the hierarchical set of contexts and/or the selected scheme and its parent schemes.

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54816" />
    <CreationDate amount="2004-03-15 09:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Have indexing ignore files by wildcard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>We have a large source base that uses file naming for separating out platform
dependent code.  Thus, we have files like:

foo_linux.c
foo_windows.c

On Windows, files named *_linux.c aren't built.  On Linux, files named
*_windows.c aren't built.

It would be great if we could tell the CDT to follow the same rules when
indexing the sources.  Thus, I'd like to be able to give a list of regexps or
globbing (man 7 glob) expressions that CDT should simply skip when indexing the
sources.

This would be much more flexible than what is currently done with MSDev, which
is to have people update a project file every time some file is added or removed.
CCing Bogdan as Alain says in bug 25682 that you are working on it.

&gt; CCing Bogdan as Alain says in bug 25682 that you are working on it.

Sam Robb from Tymesys, requested to take this bug.

He submitted a proposal about this already,
Work in progress

Redirected to Sam.
PR was not targeted to any particular release. Changing target milestone to 2.1
I am moving this to the 3.0 stream.  I don't believe that this is being
considered for 2.1  -- If I am wrong, please move it back.
Since this is not on the 3.0 plan I am moving this to "Future" (so that I don't
keep moving it from release to release).   If anybody intends to work on this,
they can choose an appropriate release.   

Sam,  feel free to move this to cdt-core-inbox if you will not be looking at it.
Hi Sam, just reviewing old CDT bugs. Do you mind if I assign this to an Inbox account. Unless you want to take a look at it :).</WithStack>
    <WithOutStack>We have a large source base that uses file naming for separating out platform
dependent code.  Thus, we have files like:

foo_linux.c
foo_windows.c

On Windows, files named *_linux.c aren't built.  On Linux, files named
*_windows.c aren't built.

It would be great if we could tell the CDT to follow the same rules when
indexing the sources.  Thus, I'd like to be able to give a list of regexps or
globbing (man 7 glob) expressions that CDT should simply skip when indexing the
sources.

This would be much more flexible than what is currently done with MSDev, which
is to have people update a project file every time some file is added or removed.
CCing Bogdan as Alain says in bug 25682 that you are working on it.

&gt; CCing Bogdan as Alain says in bug 25682 that you are working on it.

Sam Robb from Tymesys, requested to take this bug.

He submitted a proposal about this already,
Work in progress

Redirected to Sam.
PR was not targeted to any particular release. Changing target milestone to 2.1
I am moving this to the 3.0 stream.  I don't believe that this is being
considered for 2.1  -- If I am wrong, please move it back.
Since this is not on the 3.0 plan I am moving this to "Future" (so that I don't
keep moving it from release to release).   If anybody intends to work on this,
they can choose an appropriate release.   

Sam,  feel free to move this to cdt-core-inbox if you will not be looking at it.
Hi Sam, just reviewing old CDT bugs. Do you mind if I assign this to an Inbox account. Unless you want to take a look at it :).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54817" />
    <CreationDate amount="2004-03-15 09:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Progress] don't need word "done" in progress text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>you probably already know, but the work 'done' in the progress indicator to 
the right of the percent complete is not required. It's implied by the % and 
takes up precious text area.
This has been removed.
Marking closed</WithStack>
    <WithOutStack>you probably already know, but the work 'done' in the progress indicator to 
the right of the percent complete is not required. It's implied by the % and 
takes up precious text area.
This has been removed.
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54818" />
    <CreationDate amount="2004-03-15 09:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>6 junit tests fails for build 2.0.0.200403100800</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098030">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.testScannerInfoInterface(Unknown Source)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="3">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="4">org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)</Frame>
          <Frame depth="5">org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)</Frame>
          <Frame depth="6">org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)</Frame>
          <Frame depth="7">org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="12">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="13">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Here are the junit failures:
1)
testExtensions Failure expected:&lt;Root...&gt; but was:&lt;Sub...&gt; 

junit.framework.ComparisonFailure: expected:&lt;Root...&gt; but was:&lt;Sub...&gt;
at org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.checkSubTarget
(Unknown Source)
at org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.testExtensions
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
2)
testScannerInfoInterface Failure N/A 

junit.framework.AssertionFailedError
at 
org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.testScannerInfoInterf
ace(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)

3)
testGerman Failure expected:&lt;...&gt; but was:&lt;...��&gt; 

junit.framework.ComparisonFailure: expected:&lt;...&gt; but was:&lt;...��&gt;
at org.eclipse.cdt.core.parser.tests.BaseScannerTest.validateIdentifier(Unknown 
Source)
at org.eclipse.cdt.core.parser.tests.ScannerTestCase.testGerman(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
4)
testDependencyTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDependencyTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
5)
testDepSourceChangeTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDepSourceChangeTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
6)
testDepHeaderChangeTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDepHeaderChangeTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
Managed Builder failures, redirected to sean
JUnit tests were updated and a patch submitted 12/03/2004. Nobody committed 
them so we have this problem. Patch was resubmitted on 15/03/2004 and 
committed.
(As of sanity test for 2.0.0.200403170301,
built before the commit, #3-#6 still existed.)
Verified CDT 200406100301</WithStack>
    <WithOutStack>Here are the junit failures:
1)
testExtensions Failure expected:&lt;Root...&gt; but was:&lt;Sub...&gt; 

junit.framework.ComparisonFailure: expected:&lt;Root...&gt; but was:&lt;Sub...&gt;
at org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.checkSubTarget
(Unknown Source)
at org.eclipse.cdt.core.build.managed.tests.ManagedBuildTests.testExtensions
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
2)
testScannerInfoInterface Failure N/A 



3)
testGerman Failure expected:&lt;...&gt; but was:&lt;...��&gt; 

junit.framework.ComparisonFailure: expected:&lt;...&gt; but was:&lt;...��&gt;
at org.eclipse.cdt.core.parser.tests.BaseScannerTest.validateIdentifier(Unknown 
Source)
at org.eclipse.cdt.core.parser.tests.ScannerTestCase.testGerman(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
4)
testDependencyTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDependencyTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
5)
testDepSourceChangeTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDepSourceChangeTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
 
6)
testDepHeaderChangeTree Failure expected:&lt;.../...&gt; but was:&lt;......&gt; 

junit.framework.ComparisonFailure: expected:&lt;.../...&gt; but was:&lt;......&gt;
at org.eclipse.cdt.core.indexer.tests.DependencyTests.testDepHeaderChangeTree
(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:199)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:34)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:30)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
Managed Builder failures, redirected to sean
JUnit tests were updated and a patch submitted 12/03/2004. Nobody committed 
them so we have this problem. Patch was resubmitted on 15/03/2004 and 
committed.
(As of sanity test for 2.0.0.200403170301,
built before the commit, #3-#6 still existed.)
Verified CDT 200406100301</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54819" />
    <CreationDate amount="2004-03-15 09:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Improve error messages from compiler / weaver</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Raising this enhancement request as a placeholder to capture work done in the
run up to 1.2. 

Three changes to message reporting are covered:

* print "error" or "warning" in front of messages output by command-line 
compiler (as appropriate of course)
* provide context information for messages output by weaver when source files 
are available
* provide "see also" references to binary source location (e.g. jar file) when 
source files are not available.
Now giving source or binary context whenever we can, and printing warning or 
error in front of command-line messages where appropriate

Samples of new message output:

For compiling tests/errors/DeclareError.java: 

AspectJ 1.1.1 would output: 
C:\ColyerRoot\...\tests\errors\DeclareError.java:5 can only call bad from C 

AspectJ 1.2 outputs: 

C:\ColyerRoot\...\tests\errors\DeclareError.java:5 error can only call bad from 
C 
new C().bad(); 
^^^^^^^^^^^^^^ 
        see also: C:\ColyerRoot\...\tests\errors\DeclareError.java:25 

(adds in source context information whenever it can). 

Here's how it looks when there is no source code available (i.e. we are passing 
binary source into the compiler). I took the contents of 
tests/errors/DeclareError.java and split each type into its own file, then 
compiled all but the aspect into cdd.jar. The resulting output is now the result 
of compiling A.java (the aspect) with -injars cdd.jar. 

AspectJ 1.1.1 would output: 
C:\ColyerRoot\...\org.aspectj.ajdt.core\D.java:6 can only call bad from C 

note that the file is reported as &lt;working directory&gt;\D.java. The D.java portion 
is the file name contained within D.class in cdd.jar. The prefix is appended by 
our message printer, even though in this case it is wrong (D.java was never in 
that directory). 

AspectJ 1.2 outputs:
D.java:6 error can only call bad from C 
(no source information available) 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\A.java:5 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\cdd.jar 

This informs the user that the error was found in binary source (no source 
information available), and adds a see also: line for the location of the binary 
source (in this case cdd.jar). The prefix is added to D.java only if file.
exists(). 
Note that an alternate design would be to not include the "see also" for the 
jar, but instead output something like this: 

C:\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\cdd.jar (D.
java:6) error can only call bad from C 
(no source information available) 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\A.java:5 

I didn't do this because (a) for classes in packages the first line will 
probably get too long, and (b) it means that the filename in the source location 
is not a valid filename, and clients of the API might reasonably expect it to be 
so.</WithStack>
    <WithOutStack>Raising this enhancement request as a placeholder to capture work done in the
run up to 1.2. 

Three changes to message reporting are covered:

* print "error" or "warning" in front of messages output by command-line 
compiler (as appropriate of course)
* provide context information for messages output by weaver when source files 
are available
* provide "see also" references to binary source location (e.g. jar file) when 
source files are not available.
Now giving source or binary context whenever we can, and printing warning or 
error in front of command-line messages where appropriate

Samples of new message output:

For compiling tests/errors/DeclareError.java: 

AspectJ 1.1.1 would output: 
C:\ColyerRoot\...\tests\errors\DeclareError.java:5 can only call bad from C 

AspectJ 1.2 outputs: 

C:\ColyerRoot\...\tests\errors\DeclareError.java:5 error can only call bad from 
C 
new C().bad(); 
^^^^^^^^^^^^^^ 
        see also: C:\ColyerRoot\...\tests\errors\DeclareError.java:25 

(adds in source context information whenever it can). 

Here's how it looks when there is no source code available (i.e. we are passing 
binary source into the compiler). I took the contents of 
tests/errors/DeclareError.java and split each type into its own file, then 
compiled all but the aspect into cdd.jar. The resulting output is now the result 
of compiling A.java (the aspect) with -injars cdd.jar. 

AspectJ 1.1.1 would output: 
C:\ColyerRoot\...\org.aspectj.ajdt.core\D.java:6 can only call bad from C 

note that the file is reported as &lt;working directory&gt;\D.java. The D.java portion 
is the file name contained within D.class in cdd.jar. The prefix is appended by 
our message printer, even though in this case it is wrong (D.java was never in 
that directory). 

AspectJ 1.2 outputs:
D.java:6 error can only call bad from C 
(no source information available) 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\A.java:5 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\cdd.jar 

This informs the user that the error was found in binary source (no source 
information available), and adds a see also: line for the location of the binary 
source (in this case cdd.jar). The prefix is added to D.java only if file.
exists(). 
Note that an alternate design would be to not include the "see also" for the 
jar, but instead output something like this: 

C:\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\cdd.jar (D.
java:6) error can only call bad from C 
(no source information available) 
        see also: C:
\ColyerRoot\Data\AspectJDev\AspectJ_M6_Port\tests\errors\amctemp\A.java:5 

I didn't do this because (a) for classes in packages the first line will 
probably get too long, and (b) it means that the filename in the source location 
is not a valid filename, and clients of the API might reasonably expect it to be 
so.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54820" />
    <CreationDate amount="2004-03-15 09:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing feedback when checking out multiple projects from CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Using the M7 build, I opened the CVS repositories view, selected 2 projects, 
and picked "Check Out" from the context menu. The busy can up and then went 
away and I could continue working. So I switched to the Navigator view, but 
only saw one of the two projects. It took several seconds before the next 
project appeared.

I know about background work that been done in the 3.0 stream. This was my 
first time using it. But it was not the behavior I expected - I expected to 
see both projects to be visible in the Navigator view. I was surprise at first 
and it was only after a couple of second I understood what was going on 
(because I understand what about the background work). But to a new user, I 
think they will be at a lost!

My recommendation is to immediately create both projects so they are visible. 
Then spin of a background thread to populate them. That way, the user can 
expand the project and see the "in progress..." element and start to 
understand some work in going on in the background.
In some cases it's hard to pre-create the projects because of module expansion
we don't always now the exact shape of the local workspace *before* contacting
the server. The new progress support should help make the whole background
experience a bit nicer.</WithStack>
    <WithOutStack>Using the M7 build, I opened the CVS repositories view, selected 2 projects, 
and picked "Check Out" from the context menu. The busy can up and then went 
away and I could continue working. So I switched to the Navigator view, but 
only saw one of the two projects. It took several seconds before the next 
project appeared.

I know about background work that been done in the 3.0 stream. This was my 
first time using it. But it was not the behavior I expected - I expected to 
see both projects to be visible in the Navigator view. I was surprise at first 
and it was only after a couple of second I understood what was going on 
(because I understand what about the background work). But to a new user, I 
think they will be at a lost!

My recommendation is to immediately create both projects so they are visible. 
Then spin of a background thread to populate them. That way, the user can 
expand the project and see the "in progress..." element and start to 
understand some work in going on in the background.
In some cases it's hard to pre-create the projects because of module expansion
we don't always now the exact shape of the local workspace *before* contacting
the server. The new progress support should help make the whole background
experience a bit nicer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54821" />
    <CreationDate amount="2004-03-15 09:54:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Plugin converter loose values of existing manifets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When a plugin package for an update site is being unpacked on disk a manifest
exists.
If this manifest contains any interesting value for the user (package version,
signature, etc.) these are lost when the plugin converter generates a the osgi
manifest. 

The manifest generation is triggered since the existing one does not have some
wellknown headers.
Fix released in HEAD.</WithStack>
    <WithOutStack>When a plugin package for an update site is being unpacked on disk a manifest
exists.
If this manifest contains any interesting value for the user (package version,
signature, etc.) these are lost when the plugin converter generates a the osgi
manifest. 

The manifest generation is triggered since the existing one does not have some
wellknown headers.
Fix released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54822" />
    <CreationDate amount="2004-03-15 10:02:00 -0500" />
    <DupId amount="102826" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show word level diffs using a background color</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Now that the text editor provides support for background highlighting. It 
would be nice to have an option to show the word level diffs using some 
background color coding (as was done in an older version of the compare ui)
*** Bug 48845 has been marked as a duplicate of this bug. ***
Bug 102826 has a patch which is a first cut at this. I see that you looked at it in the past. I'm hoping to have a look at it soon. If you have any input on what remains to be done, let me know (i.e. you mentioned that updating is still required).

*** This bug has been marked as a duplicate of 102826 ***</WithStack>
    <WithOutStack>Now that the text editor provides support for background highlighting. It 
would be nice to have an option to show the word level diffs using some 
background color coding (as was done in an older version of the compare ui)
*** Bug 48845 has been marked as a duplicate of this bug. ***
Bug 102826 has a patch which is a first cut at this. I see that you looked at it in the past. I'm hoping to have a look at it soon. If you have any input on what remains to be done, let me know (i.e. you mentioned that updating is still required).

*** This bug has been marked as a duplicate of 102826 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54823" />
    <CreationDate amount="2004-03-15 10:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Final static int initiialization in Eclispe M7 - (bug?)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="0" end="266" />
        <code>public class StaticInitBug {
	public static final int STATIC_INT;
	static {
                // Bug(?): Complies on Eclispe M7:
		STATIC_INT =StaticInitBug.STATIC_INT; 
		// Don't compile (if uncommented) on Eclipse M7 (as expected)
		// STATIC_INT =STATIC_INT; 
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>public class StaticInitBug {
	public static final int STATIC_INT;
	static {
                // Bug(?): Complies on Eclispe M7:
		STATIC_INT =StaticInitBug.STATIC_INT; 
		// Don't compile (if uncommented) on Eclipse M7 (as expected)
		// STATIC_INT =STATIC_INT; 
	}
}
See http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#37544.
Points 8.3.2 and 8.3.2.1.
Note that javac has exactly the same behavior.
Close as INVALID.
You are right, javac behaves the same way. 
But: if this is the right behaviour (and I can't believe that it is),
then the question is: Which value has STATIC_INT after a successfull
initialization of the class?
I think that is not defined in the JLS, perhaps javac has the same bug?
StaticInitBug.STATIC_INT is reflecting int field default value: 0.
That is what I expected, but it is not the answer of my Question ;-)
I assume you used Java's Reflection API to detect that, or your knowlegde
about your compiler. 
But how is it defined in the JLS? I believe it is not defined!
But one the other hand is defined that a "definite assignment" should 
init the static final field.
So if the static-clause in the example is real valid, then there is a very 
small and perhaps unintended gap in the JLS.
What do you think?
The JLS is often fuzzy, and requires some interpretation in order to implement 
corner cases. Remember though we don't own it...

See more information at:
http://www.ergnosis.com/java-spec-report/java-language/jls-16-c.html
Thank you very much for your answer, the link is really interessting.
I learned there that it is much more compilcated to write a compiler as I thought!
I will read there before I write my next compiler "bug" report.
BTW: Good luck with your 1.5 compiler!</WithStack>
    <WithOutStack>public class StaticInitBug {
	public static final int STATIC_INT;
	static {
                // Bug(?): Complies on Eclispe M7:
		STATIC_INT =StaticInitBug.STATIC_INT; 
		// Don't compile (if uncommented) on Eclipse M7 (as expected)
		// STATIC_INT =STATIC_INT; 
	}
}
See http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#37544.
Points 8.3.2 and 8.3.2.1.
Note that javac has exactly the same behavior.
Close as INVALID.
You are right, javac behaves the same way. 
But: if this is the right behaviour (and I can't believe that it is),
then the question is: Which value has STATIC_INT after a successfull
initialization of the class?
I think that is not defined in the JLS, perhaps javac has the same bug?
StaticInitBug.STATIC_INT is reflecting int field default value: 0.
That is what I expected, but it is not the answer of my Question ;-)
I assume you used Java's Reflection API to detect that, or your knowlegde
about your compiler. 
But how is it defined in the JLS? I believe it is not defined!
But one the other hand is defined that a "definite assignment" should 
init the static final field.
So if the static-clause in the example is real valid, then there is a very 
small and perhaps unintended gap in the JLS.
What do you think?
The JLS is often fuzzy, and requires some interpretation in order to implement 
corner cases. Remember though we don't own it...

See more information at:
http://www.ergnosis.com/java-spec-report/java-language/jls-16-c.html
Thank you very much for your answer, the link is really interessting.
I learned there that it is much more compilcated to write a compiler as I thought!
I will read there before I write my next compiler "bug" report.
BTW: Good luck with your 1.5 compiler!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54824" />
    <CreationDate amount="2004-03-15 10:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Port number checking doesn't check port range</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When adding a hostname &amp; port for attaching or launching a remote application, 
we check to make sure the port is a number. However, we don't check the range 
of the number, so if I input an extra zero by mistake, i.e. 100002, then it 
won't complain. We should also check the port range. Valid ports are from 0 to 
65535 (inclusive).
Acutally, http://www.iana.org/assignments/port-numbers suggests that the valid
range of dynamic and / or private ports are from 49152 through 65535.
Right. However, this is not a dynamic or private port.. this is meant to be 
static at 10002, but since the RAC allows the user to set any port they like 
(much like any http server can be set to something other than 80), we have to 
be able to handle any port.
Added string to properties file to meet translation deadline:

TAB_ERROR_PORT = Valid port numbers range from 0 to 65535.

This message will be used in M10.
Fixed.
Verified. Closing bug.</WithStack>
    <WithOutStack>When adding a hostname &amp; port for attaching or launching a remote application, 
we check to make sure the port is a number. However, we don't check the range 
of the number, so if I input an extra zero by mistake, i.e. 100002, then it 
won't complain. We should also check the port range. Valid ports are from 0 to 
65535 (inclusive).
Acutally, http://www.iana.org/assignments/port-numbers suggests that the valid
range of dynamic and / or private ports are from 49152 through 65535.
Right. However, this is not a dynamic or private port.. this is meant to be 
static at 10002, but since the RAC allows the user to set any port they like 
(much like any http server can be set to something other than 80), we have to 
be able to handle any port.
Added string to properties file to meet translation deadline:

TAB_ERROR_PORT = Valid port numbers range from 0 to 65535.

This message will be used in M10.
Fixed.
Verified. Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54825" />
    <CreationDate amount="2004-03-15 10:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Pasting on selected text won't change selected text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="288" end="321" />
        <code>+ ring();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>1) Menu File / New / Class / {any name}.</Line>
          <Line />
          <Line>2) Copy the two lines below and paste them after the line "public class...":</Line>
          <Line />
          <Line>String codImg = Area.getAbbreviazione(Integer.valueOf(idArea.toString())</Line>
          <Line>.intValue())</Line>
          <Line />
          <Line />
          <Line>3) Add spaces at the beginning of the 2nd line ("+ ring();") so that the "+" is</Line>
          <Line>under the uppercase "A" of "Area.getAbbreviazione..." .</Line>
          <Line />
          <Line>4) Copy "codNumDiapo.toString();" (w/o quotes).</Line>
          <Line />
          <Line>5) In Eclipse, select "ring();" and paste: "ring();" won't be replaced with</Line>
          <Line>"codNumDiapo.toString();" but with "ring();" itself.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse Platform
Version: 3.0.0
Build id: 200311211210

To replicate it:

1) Menu File / New / Class / {any name}.

2) Copy the two lines below and paste them after the line "public class...":

        String codImg = Area.getAbbreviazione(Integer.valueOf(idArea.toString())
.intValue())
                        + ring();

3) Add spaces at the beginning of the 2nd line ("+ ring();") so that the "+" is 
under the uppercase "A" of "Area.getAbbreviazione..." .

4) Copy "codNumDiapo.toString();" (w/o quotes).

5) In Eclipse, select "ring();" and paste: "ring();" won't be replaced with 
"codNumDiapo.toString();" but with "ring();" itself.

If you then paste two more times, the 1st time you'll get "ring();" again, while 
the 2nd you'll get "codNumDiapo.toString();".
Transferring to Platform/Text.

The build you are using is VERY old.  Can you reproduce this with a more 
recent build?

fixed a long time ago.</WithStack>
    <WithOutStack>Eclipse Platform
Version: 3.0.0
Build id: 200311211210

To replicate it:

1) Menu File / New / Class / {any name}.

2) Copy the two lines below and paste them after the line "public class...":

        String codImg = Area.getAbbreviazione(Integer.valueOf(idArea.toString())
.intValue())
                        + ring();

3) Add spaces at the beginning of the 2nd line ("+ ring();") so that the "+" is 
under the uppercase "A" of "Area.getAbbreviazione..." .

4) Copy "codNumDiapo.toString();" (w/o quotes).

5) In Eclipse, select "ring();" and paste: "ring();" won't be replaced with 
"codNumDiapo.toString();" but with "ring();" itself.

If you then paste two more times, the 1st time you'll get "ring();" again, while 
the 2nd you'll get "codNumDiapo.toString();".
Transferring to Platform/Text.

The build you are using is VERY old.  Can you reproduce this with a more 
recent build?

fixed a long time ago.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54826" />
    <CreationDate amount="2004-03-15 10:38:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE starting up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341098037">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.adaptor.CachedManifest.get(CachedManifest.java:67)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.ManifestLocalization.getResourceBundle(ManifestLocalization.java:104)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.ManifestLocalization.getHeaders(ManifestLocalization.java:48)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1087)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1033)</Frame>
          <Frame depth="5">org.eclipse.core.internal.plugins.PluginDescriptor.isLegacy(PluginDescriptor.java:469)</Frame>
          <Frame depth="6">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:49)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="12">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="13">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098037">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.adaptor.CachedManifest.get(CachedManifest.java:67)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.ManifestLocalization.getResourceBundle(ManifestLocalization.java:104)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.ManifestLocalization.getHeaders(ManifestLocalization.java:48)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1087)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1033)</Frame>
          <Frame depth="5">org.eclipse.core.internal.plugins.PluginDescriptor.isLegacy(PluginDescriptor.java:469)</Frame>
          <Frame depth="6">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:49)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="12">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="13">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>java.lang.NullPointerException
	at org.eclipse.core.runtime.adaptor.CachedManifest.get(CachedManifest.java:67)
	at
org.eclipse.osgi.framework.internal.core.ManifestLocalization.getResourceBundle(ManifestLocalization.java:104)
	at
org.eclipse.osgi.framework.internal.core.ManifestLocalization.getHeaders(ManifestLocalization.java:48)
	at org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1087)
	at org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1033)
	at
org.eclipse.core.internal.plugins.PluginDescriptor.isLegacy(PluginDescriptor.java:469)
	at org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:49)
	at
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 15, 2004 10:16:37.541
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.NullPointerException
	at org.eclipse.core.runtime.adaptor.CachedManifest.get(CachedManifest.java:67)
	at
org.eclipse.osgi.framework.internal.core.ManifestLocalization.getResourceBundle(ManifestLocalization.java:104)
	at
org.eclipse.osgi.framework.internal.core.ManifestLocalization.getHeaders(ManifestLocalization.java:48)
	at org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1087)
	at org.eclipse.osgi.framework.internal.core.Bundle.getHeaders(Bundle.java:1033)
	at
org.eclipse.core.internal.plugins.PluginDescriptor.isLegacy(PluginDescriptor.java:469)
	at org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:49)
	at
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
fixed.</WithStack>
    <WithOutStack>!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Mar 15, 2004 10:16:37.541
!MESSAGE Exception launching the Eclipse Platform:
!STACK

fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54827" />
    <CreationDate amount="2004-03-15 10:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>remove obsolete code in log interaction</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>GetAction() is no longer required in the new interface
done
closing bug
house keeping</WithStack>
    <WithOutStack>GetAction() is no longer required in the new interface
done
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54828" />
    <CreationDate amount="2004-03-15 10:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GLA logging level is set too low (e.g. 30) and should be higher (e.g. 60).</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>GLA logging level is set too low (e.g. 30) and should be higher (e.g. 60).
GLA logging level will remain at 30 to tack WARNING and higher legged messages.
Closing.
house keeping</WithStack>
    <WithOutStack>GLA logging level is set too low (e.g. 30) and should be higher (e.g. 60).
GLA logging level will remain at 30 to tack WARNING and higher legged messages.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54829" />
    <CreationDate amount="2004-03-15 10:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Extend Filter action is missing in Log Interaction View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Extended Filter action is contributed thru IExtendedFilterProvider in 
LogInteraction class. But The Extended Filter action is not shown up in toolbar 
pull-down menu(only see Extended Find action). Besides, the Extended Find and 
Filter actions are not showing up in context menu of UML2SD view anymore.
[Sylvain speaking] After Guidelines alignment (#54330), contextual menu is now 
used only for object contribution view actions. The dropdown menu accessible 
from the bottom arrow in the coolbar should contain the extended find and filter 
actions. If not present, it is a bug.
The Extended filter is missing in the the dropdown menu accessible 
from the bottom arrow in the coolbar.
So it's a bug. Sébastien works on this: this is P1.
Missing call to menu creation when sequence diagram provider calls 
setExtendedFilter or setExtendedFind
Missing call to menu creation when sequence diagram provider calls 
setExtendedFilter or setExtendedFind

closing bug
house keeping</WithStack>
    <WithOutStack>Extended Filter action is contributed thru IExtendedFilterProvider in 
LogInteraction class. But The Extended Filter action is not shown up in toolbar 
pull-down menu(only see Extended Find action). Besides, the Extended Find and 
Filter actions are not showing up in context menu of UML2SD view anymore.
[Sylvain speaking] After Guidelines alignment (#54330), contextual menu is now 
used only for object contribution view actions. The dropdown menu accessible 
from the bottom arrow in the coolbar should contain the extended find and filter 
actions. If not present, it is a bug.
The Extended filter is missing in the the dropdown menu accessible 
from the bottom arrow in the coolbar.
So it's a bug. Sébastien works on this: this is P1.
Missing call to menu creation when sequence diagram provider calls 
setExtendedFilter or setExtendedFind
Missing call to menu creation when sequence diagram provider calls 
setExtendedFilter or setExtendedFind

closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54830" />
    <CreationDate amount="2004-03-15 10:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Many NPEs in log for AllTypesCache.getAllTypes()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098040">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.util.AllTypesCache.getAllTypes(AllTypesCache.java:283)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.evaluateStarImportConflicts(ImportsStructure.java:734)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.getReplaceString(ImportsStructure.java:649)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.create(ImportsStructure.java:563)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation.run(OrganizeImportsOperation.java:573)</Frame>
          <Frame depth="5">org.eclipse.jdt.ui.actions.OrganizeImportsAction$3.run(OrganizeImportsAction.java:383)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:101)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2329)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2037)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)</Frame>
          <Frame depth="15">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="20">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="22">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="23">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040311
My log has several of these exception. Can't remember noticing anything in the 
UI though. 

!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.util.AllTypesCache.getAllTypes
(AllTypesCache.java:283)
	at 
org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.evaluateStarI
mportConflicts(ImportsStructure.java:734)
	at 
org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.getReplaceStr
ing(ImportsStructure.java:649)
	at 
org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.create
(ImportsStructure.java:563)
	at 
org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation.run
(OrganizeImportsOperation.java:573)
	at org.eclipse.jdt.ui.actions.OrganizeImportsAction$3.run
(OrganizeImportsAction.java:383)
	at org.eclipse.ui.internal.UILockListener.doPendingWork
(UILockListener.java:101)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2329)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2037)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
are you sure you're on I20040311? I fixed this for I20040310.

reopen if you're in I20040311.</WithStack>
    <WithOutStack>I20040311
My log has several of these exception. Can't remember noticing anything in the 
UI though. 

!MESSAGE java.lang.NullPointerException
!STACK 0

are you sure you're on I20040311? I fixed this for I20040310.

reopen if you're in I20040311.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54831" />
    <CreationDate amount="2004-03-15 10:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Out of memory - code assist nothing in log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040311
Second time today running out of memory. There's nothing in the .log of 
interest but both times it was using content assist. Another hint that this 
was about to occur: Eclipse slooooowing doing to the point of being un-usable. 
Everything was slow, and I assume this was caused by swapping/high memory 
usage.
Created attachment 8572
log file after workbench crashed
Were you noticing excessive slowness *before* you did code assist?

Moving to JDT.
Actually it has just happened again. I was doing some heavy refactoring, then 
things really started to slow-down. Then crash. OOM...
I haven't received my YourKit license yet, but this happens all the time now. 
Eclipse doesn't always crash but it sloooows down a lot. Here is the pattern 
I've seen recently, it's actually quite reproduceable:

perform a couple of refactorings (e.g. &gt; 50 files touched) then notice how 
Eclipse becomes slow. After this, scrolling, code assist, search... is all 
really slow. I assume the refactorings leaked memory and the VM is trashing.
There's a known editor leak (bug 55174), but of course we keep the eyes open for
other problems
I inspected a memory dump with 100 MB of heap size and there aren't any 
leaking refactoring object in that dump. The only references to refactoring in 
that dump are four undo objects on the undo stack.

I doubt that the big Heap is because of leaking refactoring objects. However 
some of the refactorings needs quite some amount of heap space for their 
computation (especially if lots of referencing updating is envolved). 
Refactorings consuming memory are: extract interface, use supertype where 
possible and Generalize Type. Jean-Michel, did you use some of them ?
I did use Generalize Type. Just to note that I'm currently running with 
YourKit at all times. But unfortunatly since it's milestone week I haven't 
been using refactoring much. But I'll attach a dump the next time Eclipse 
slows down.
We started to implement performance tests for refactorings and are working on 
an improved version of the type constraints to lower memory consumption for 
extract interface, use supertype where possible and generalize types.

Markus, please take care of the PR and close it when the new intrastructure is 
in place and used by the refactorings.
We improved the memory consumption of the refactorings dealing with type
constraints. Furthermore, the out of memory can be caused by everybody and
simply manifest itself in the code assist.

I will close the bug since without a heap dump there is nothing more we can do.</WithStack>
    <WithOutStack>I20040311
Second time today running out of memory. There's nothing in the .log of 
interest but both times it was using content assist. Another hint that this 
was about to occur: Eclipse slooooowing doing to the point of being un-usable. 
Everything was slow, and I assume this was caused by swapping/high memory 
usage.
Created attachment 8572
log file after workbench crashed
Were you noticing excessive slowness *before* you did code assist?

Moving to JDT.
Actually it has just happened again. I was doing some heavy refactoring, then 
things really started to slow-down. Then crash. OOM...
I haven't received my YourKit license yet, but this happens all the time now. 
Eclipse doesn't always crash but it sloooows down a lot. Here is the pattern 
I've seen recently, it's actually quite reproduceable:

perform a couple of refactorings (e.g. &gt; 50 files touched) then notice how 
Eclipse becomes slow. After this, scrolling, code assist, search... is all 
really slow. I assume the refactorings leaked memory and the VM is trashing.
There's a known editor leak (bug 55174), but of course we keep the eyes open for
other problems
I inspected a memory dump with 100 MB of heap size and there aren't any 
leaking refactoring object in that dump. The only references to refactoring in 
that dump are four undo objects on the undo stack.

I doubt that the big Heap is because of leaking refactoring objects. However 
some of the refactorings needs quite some amount of heap space for their 
computation (especially if lots of referencing updating is envolved). 
Refactorings consuming memory are: extract interface, use supertype where 
possible and Generalize Type. Jean-Michel, did you use some of them ?
I did use Generalize Type. Just to note that I'm currently running with 
YourKit at all times. But unfortunatly since it's milestone week I haven't 
been using refactoring much. But I'll attach a dump the next time Eclipse 
slows down.
We started to implement performance tests for refactorings and are working on 
an improved version of the type constraints to lower memory consumption for 
extract interface, use supertype where possible and generalize types.

Markus, please take care of the PR and close it when the new intrastructure is 
in place and used by the refactorings.
We improved the memory consumption of the refactorings dealing with type
constraints. Furthermore, the out of memory can be caused by everybody and
simply manifest itself in the code assist.

I will close the bug since without a heap dump there is nothing more we can do.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54832" />
    <CreationDate amount="2004-03-15 10:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refactoring: Undo should manage and display non-fatal problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the current code, the way to check that it's still possible to perform an
undo of a refactoring action, is to call isValid() on each Changes of the undo,
and if at least one answer a fatal error, the undo is no performed.
This is not really flexible, undo should manage warning and non-fatal error too.

In JDT Debug, we have rename participant to update the launch configurations and
the breakpoint when a Java element is renamed.
In the launch configuration case, we currently return a fatal error if the
launch configuration has been delete, because otherwise the execution of the
perform() will fail. But this is no a fatal error, it's just an error. The fact
that we cannot undo this change shouldn't block the user to perform the undo.
This change is not an important one, and things won't stop working because this
change was not undo.
Also, if you modify a launch configuration between a refactoring action and the
undo, performing the undo may overwrite these modification. It would be better
if we were able to return a warning in case, and let the user decide if he wants
to overwrite his modification.

To display those warnings and errors, a dialog like the refactoring preview
dialog/page should be perfect.
Nice suggestion. I will look what I can do here.
In M9 you now get a dialog when a undo object generates a status in isValid. 
As long as the status isn't fatal the user can proceed with the undo.</WithStack>
    <WithOutStack>In the current code, the way to check that it's still possible to perform an
undo of a refactoring action, is to call isValid() on each Changes of the undo,
and if at least one answer a fatal error, the undo is no performed.
This is not really flexible, undo should manage warning and non-fatal error too.

In JDT Debug, we have rename participant to update the launch configurations and
the breakpoint when a Java element is renamed.
In the launch configuration case, we currently return a fatal error if the
launch configuration has been delete, because otherwise the execution of the
perform() will fail. But this is no a fatal error, it's just an error. The fact
that we cannot undo this change shouldn't block the user to perform the undo.
This change is not an important one, and things won't stop working because this
change was not undo.
Also, if you modify a launch configuration between a refactoring action and the
undo, performing the undo may overwrite these modification. It would be better
if we were able to return a warning in case, and let the user decide if he wants
to overwrite his modification.

To display those warnings and errors, a dialog like the refactoring preview
dialog/page should be perfect.
Nice suggestion. I will look what I can do here.
In M9 you now get a dialog when a undo object generates a status in isValid. 
As long as the status isn't fatal the user can proceed with the undo.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54833" />
    <CreationDate amount="2004-03-15 11:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compatibility story not very clear</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I was trying to remove the dependency on runtime.compatibility from the update 
plugins, as I was no longer calling BootLoader.getstuff().

I had no errors in my workspace, everything seemed right, but my plugins would 
not start. It turned out that my plugin classes, which subclass Plugin, had 
only a constructor that takes in an IPluginDescriptor. However, it appears 
that the runtime requires the plugin classes to provide a default constructor.
Also, startup() and shutdown() are no longer called.

The question is: should PDE detect that the plugin class does not provide the 
default constructor when the list of plugin pre-reqs does not contain 
runtime.compatibility?
That is not a compatibility scenario. 
 
This is you moving forward and using the new runtime support, at which case 
you're on your own.  PDE is not in the business of making sure your Java 
classes provides the correct constructor.</WithStack>
    <WithOutStack>I was trying to remove the dependency on runtime.compatibility from the update 
plugins, as I was no longer calling BootLoader.getstuff().

I had no errors in my workspace, everything seemed right, but my plugins would 
not start. It turned out that my plugin classes, which subclass Plugin, had 
only a constructor that takes in an IPluginDescriptor. However, it appears 
that the runtime requires the plugin classes to provide a default constructor.
Also, startup() and shutdown() are no longer called.

The question is: should PDE detect that the plugin class does not provide the 
default constructor when the list of plugin pre-reqs does not contain 
runtime.compatibility?
That is not a compatibility scenario. 
 
This is you moving forward and using the new runtime support, at which case 
you're on your own.  PDE is not in the business of making sure your Java 
classes provides the correct constructor.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54834" />
    <CreationDate amount="2004-03-15 11:01:00 -0500" />
    <DupId amount="53095" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>cannot set exception breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>in i0310

I am unable to set exception breakpoints on various exceptions classes (e.g., 
ClassNotFoundException).  The dialog reports that the 
   "Selected type is not a subclass of Throwable"

Of course, CNF is a subclass of Throwable.  Interestingly, I am able to set a 
breakpoint on ClassCastException which is found in the same rt.jar (Sun JDK 
1.4.2).

I discussed this with Kent and found that he was also NOT able to set such a 
breakpoint but was able to set breakpoints on some classes that I was not able 
to.  That is, the error set was different in his world.


*** This bug has been marked as a duplicate of 53095 ***</WithStack>
    <WithOutStack>in i0310

I am unable to set exception breakpoints on various exceptions classes (e.g., 
ClassNotFoundException).  The dialog reports that the 
   "Selected type is not a subclass of Throwable"

Of course, CNF is a subclass of Throwable.  Interestingly, I am able to set a 
breakpoint on ClassCastException which is found in the same rt.jar (Sun JDK 
1.4.2).

I discussed this with Kent and found that he was also NOT able to set such a 
breakpoint but was able to set breakpoints on some classes that I was not able 
to.  That is, the error set was different in his world.


*** This bug has been marked as a duplicate of 53095 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54835" />
    <CreationDate amount="2004-03-15 11:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>FastViewPane code and comment for fastview redraw</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="singlecomment">
        <location start="403" end="479" />
        <code>// Counts how many times we've scheduled a redraw... use this to avoid</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="488" end="560" />
        <code>// the widgetry when we're getting resize requests faster than we can</code>
      </source_code>
      <source_code type="assignment">
        <location start="574" end="605" />
        <code>private int redrawCounter = 0;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following code seems to have been wri tten to improve support for a 
problem on GTK while resizing fastviews.  It may be that this is usefull on 
other platforms, but I think it is important here to mention the bug and the 
real problem this is trying to solve so that future coders do not simply 
remove the feature (assuming it fixes the problem) based on their experience 
on a non-GTK platform.

	
	// Counts how many times we've scheduled a redraw... use this to avoid 
resizing
	// the widgetry when we're getting resize requests faster than we can 
process them.
	private int redrawCounter = 0;
Fixed in HEAD</WithStack>
    <WithOutStack>The following code seems to have been wri tten to improve support for a 
problem on GTK while resizing fastviews.  It may be that this is usefull on 
other platforms, but I think it is important here to mention the bug and the 
real problem this is trying to solve so that future coders do not simply 
remove the feature (assuming it fixes the problem) based on their experience 
on a non-GTK platform.

	
	// Counts how many times we've scheduled a redraw... use this to avoid 
resizing
	// the widgetry when we're getting resize requests faster than we can 
process them.
	private int redrawCounter = 0;
Fixed in HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54836" />
    <CreationDate amount="2004-03-15 11:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debug blue source pointer now showing when stepping through code...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>CDT Build 2.0.0.200403100800 

While doing sanity, I have noticed that the blue source pointer does not 
display while stepping through code.  

It is sometimes displayed on the first line of execution after starting the 
debug session.  But afterwards, it does not follow the stepping.
I can't reproduce this. Please, provide a test case.
This was fixed a while back.

Resolving it.
Verified Eclipse 200406111814   CDT 200406140300</WithStack>
    <WithOutStack>CDT Build 2.0.0.200403100800 

While doing sanity, I have noticed that the blue source pointer does not 
display while stepping through code.  

It is sometimes displayed on the first line of execution after starting the 
debug session.  But afterwards, it does not follow the stepping.
I can't reproduce this. Please, provide a test case.
This was fixed a while back.

Resolving it.
Verified Eclipse 200406111814   CDT 200406140300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54837" />
    <CreationDate amount="2004-03-15 11:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS info lost on project import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) I reinstalled a fresh Eclipse and started it on an empty workspace</Line>
          <Line>2) I copied one of the exiting project directory into the new workspace</Line>
          <Line>directory (the project was org.eclipse.team.cvs.ui on a branch)</Line>
          <Line>3) I created a Simple project over top of the directory from step 2</Line>
          <Line>4) I Shared the project from step 3. The sharing found the existing info</Line>
          <Line>5) The bin directory and all it's contents showed as outgoing addtions. This</Line>
          <Line>could be explailed by the fact that the contents were imported and perhaps not</Line>
          <Line>marked by Java as derived but this will need to be investigated.</Line>
          <Line>6) The src directory appeared as unmanaged outgoign additions. This is wrong</Line>
          <Line>as the CVS information was present and appeared to be in good form.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>My workspace became corrupted so I tried to create a new workspace containing 
the old projects. Here's what I did and the result I got

1) I reinstalled a fresh Eclipse and started it on an empty workspace
2) I copied one of the exiting project directory into the new workspace 
directory (the project was org.eclipse.team.cvs.ui on a branch)
3) I created a Simple project over top of the directory from step 2
4) I Shared the project from step 3. The sharing found the existing info
5) The bin directory and all it's contents showed as outgoing addtions. This 
could be explailed by the fact that the contents were imported and perhaps not 
marked by Java as derived but this will need to be investigated.
6) The src directory appeared as unmanaged outgoign additions. This is wrong 
as the CVS information was present and appeared to be in good form.

I have done a bit more digging and it appears the project was corrupted by the 
old workspace. The .cvsignore was deleted and the CVS/Root file was missing 
from several directories. The later problem is interesting since we have had 
other reports of CVS information disappearing. We should investigate possible 
ways the Root file could be removed while leaving the rest. Also, a missing 
Root file is the one condition we could recover from since the file has the 
same contents for all folders in a project.
Nothing really of use here. There are several other bugs involving the missing 
Root file</WithStack>
    <WithOutStack>My workspace became corrupted so I tried to create a new workspace containing 
the old projects. Here's what I did and the result I got

1) I reinstalled a fresh Eclipse and started it on an empty workspace
2) I copied one of the exiting project directory into the new workspace 
directory (the project was org.eclipse.team.cvs.ui on a branch)
3) I created a Simple project over top of the directory from step 2
4) I Shared the project from step 3. The sharing found the existing info
5) The bin directory and all it's contents showed as outgoing addtions. This 
could be explailed by the fact that the contents were imported and perhaps not 
marked by Java as derived but this will need to be investigated.
6) The src directory appeared as unmanaged outgoign additions. This is wrong 
as the CVS information was present and appeared to be in good form.

I have done a bit more digging and it appears the project was corrupted by the 
old workspace. The .cvsignore was deleted and the CVS/Root file was missing 
from several directories. The later problem is interesting since we have had 
other reports of CVS information disappearing. We should investigate possible 
ways the Root file could be removed while leaving the rest. Also, a missing 
Root file is the one condition we could recover from since the file has the 
same contents for all folders in a project.
Nothing really of use here. There are several other bugs involving the missing 
Root file</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54838" />
    <CreationDate amount="2004-03-15 11:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>widget is disposed error on shut down</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098047">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2625)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2555)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:354)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:283)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Control.getParent(Control.java:883)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.dnd.DragUtil.getDisplayBounds(DragUtil.java:87)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WidgetHider$1.handleEvent(WidgetHider.java:45)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:809)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2428)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2101)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.runEventLoop(Window.java:654)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.open(Window.java:634)</Frame>
          <Frame depth="14">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:285)</Frame>
          <Frame depth="15">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="16">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:376)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:648)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:456)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.access$6(Workbench.java:404)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:569)</Frame>
          <Frame depth="22">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.close(Workbench.java:567)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.close(Workbench.java:543)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:383)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="30">org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:579)</Frame>
          <Frame depth="31">org.eclipse.jface.window.Window$2.shellClosed(Window.java:530)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:810)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:834)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:819)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1496)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Control.windowProc(Control.java:2946)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1439)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.windowProc(Display.java:2966)</Frame>
          <Frame depth="41">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="42">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1433)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1439)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.windowProc(Display.java:2966)</Frame>
          <Frame depth="47">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="48">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1438)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2099)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="53">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="55">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="56">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="58">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="60">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="61">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>loaded latest code March 15, 2004 AM.
ran for a while creating fast views moved fast view bar, maxmimized editors 
then exited and got the following error.

=======================================

!MESSAGE Widget is disposed
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:2625)
	at org.eclipse.swt.SWT.error(SWT.java:2555)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:354)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:283)
	at org.eclipse.swt.widgets.Control.getParent(Control.java:883)
	at org.eclipse.ui.internal.dnd.DragUtil.getDisplayBounds
(DragUtil.java:87)
	at org.eclipse.ui.internal.WidgetHider$1.handleEvent
(WidgetHider.java:45)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:809)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2428)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2101)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:654)
	at org.eclipse.jface.window.Window.open(Window.java:634)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:285)
	at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
	at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:376)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:648)
	at org.eclipse.core.runtime.Platform.run(Platform.java:497)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:456)
	at org.eclipse.ui.internal.Workbench.access$6(Workbench.java:404)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:569)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:567)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:543)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:383)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:579)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:530)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:158)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:810)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:834)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:819)
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1496)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2946)
	at org.eclipse.swt.widgets.Decorations.windowProc
(Decorations.java:1439)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2966)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1433)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:397)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)
	at org.eclipse.swt.widgets.Decorations.windowProc
(Decorations.java:1439)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2966)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1438)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2099)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Fixed in head</WithStack>
    <WithOutStack>loaded latest code March 15, 2004 AM.
ran for a while creating fast views moved fast view bar, maxmimized editors 
then exited and got the following error.

=======================================

!MESSAGE Widget is disposed
!STACK 0

Fixed in head</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54839" />
    <CreationDate amount="2004-03-15 11:10:00 -0500" />
    <DupId amount="53666" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE during compilation unit save operation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098050">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.search2.internal.ui.text.PositionTracker$3.run(PositionTracker.java:265)</Frame>
          <Frame depth="1">org.eclipse.search2.internal.ui.text.PositionTracker.doForExistingMatchesIn(PositionTracker.java:200)</Frame>
          <Frame depth="2">org.eclipse.search2.internal.ui.text.PositionTracker.dirtyStateChanged(PositionTracker.java:255)</Frame>
          <Frame depth="3">org.eclipse.core.internal.filebuffers.TextFileBufferManager.fireDirtyStateChanged(TextFileBufferManager.java:226)</Frame>
          <Frame depth="4">org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:286)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:356)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:113)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:288)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:879)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$2.execute(CompilationUnitDocumentProvider.java:925)</Frame>
          <Frame depth="13">org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:93)</Frame>
          <Frame depth="14">org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:67)</Frame>
          <Frame depth="15">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="16">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)</Frame>
          <Frame depth="17">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="18">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)</Frame>
          <Frame depth="19">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)</Frame>
          <Frame depth="20">org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:391)</Frame>
          <Frame depth="21">org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:611)</Frame>
          <Frame depth="22">org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3129)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1171)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1235)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:982)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:837)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
          <Frame depth="28">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="29">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:580)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="31">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:577)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1490)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:843)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:987)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2442)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2454)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:72)</Frame>
          <Frame depth="38">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="39">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:68)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.commands.Command.execute(Command.java:160)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:475)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:891)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:935)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:568)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:500)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:256)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.filterEvent(Display.java:700)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:832)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3041)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Control.windowProc(Control.java:2944)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.windowProc(Display.java:2902)</Frame>
          <Frame depth="57">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="58">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1376)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2045)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="63">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="65">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="70">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="71">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using 0310 + search patch, I got this exception while saving a file. I had one
search result related to this compilation unit.

java.lang.NullPointerException
at
org.eclipse.search2.internal.ui.text.PositionTracker$3.run(PositionTracker.java:265)
at
org.eclipse.search2.internal.ui.text.PositionTracker.doForExistingMatchesIn(PositionTracker.java:200)
at
org.eclipse.search2.internal.ui.text.PositionTracker.dirtyStateChanged(PositionTracker.java:255)
at
org.eclipse.core.internal.filebuffers.TextFileBufferManager.fireDirtyStateChanged(TextFileBufferManager.java:226)
at
org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:286)
at
org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:356)
at
org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:113)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)
at
org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)
at
org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:288)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:879)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$2.execute(CompilationUnitDocumentProvider.java:925)
at
org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:93)
at
org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:67)
at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)
at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:72)
at
org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:62)
at
org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:391)
at
org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:611)
at
org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3129)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1171)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1235)
at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:982)
at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:837)
at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:580)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:577)
at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1490)
at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:843)
at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:987)
at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2442)
at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2454)
at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:72)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:68)
at org.eclipse.ui.internal.commands.Command.execute(Command.java:160)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:475)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:891)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:935)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:568)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:500)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:256)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Display.filterEvent(Display.java:700)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:832)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3041)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:2944)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:2902)
at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1376)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2045)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
Any more detail? Was the search match in a text region or java element you deleted?
yes, it was the case. I search the reference to an java element. And then I
delete all references to that element in the compilation unit I saved.
Deleted it from the search view or in the editor?
From the editor.
I believe we're being done in by a concurreny issue: the save gets into the way
of a java model delta sent by the reconciler.


*** This bug has been marked as a duplicate of 53666 ***</WithStack>
    <WithOutStack>Using 0310 + search patch, I got this exception while saving a file. I had one
search result related to this compilation unit.


Any more detail? Was the search match in a text region or java element you deleted?
yes, it was the case. I search the reference to an java element. And then I
delete all references to that element in the compilation unit I saved.
Deleted it from the search view or in the editor?
From the editor.
I believe we're being done in by a concurreny issue: the save gets into the way
of a java model delta sent by the reconciler.


*** This bug has been marked as a duplicate of 53666 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54840" />
    <CreationDate amount="2004-03-15 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Reinstate keyboard shortcuts for Comment (Ctrl+/) and Uncomment (Ctrl+\)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>From the M7 new and noteworthy page: "The old Source &gt; Comment (Ctrl+/) and 
Source &gt; Uncomment (Ctrl+\) commands in the Java editor have been replaced by 
the Source &gt; Toggle Comment (Ctrl+Shift+C) command that uncomments the 
currently selected source lines if all of them are commented and comments them 
otherwise. (You can bind keyboard shortcuts to the old commands, which are 
still available, via the Workbench &gt; Keys preference page.)"

This request is to reinstate the old keyboard shortcuts (in addition to 
leaving the new one) by default.

Rationale: Avoid breaking existing documentation (books, keyboard shortcut 
reference cards, etc.) and also head off user questions asking where the old 
shortcuts went (like the one I just read on platform-dev).

Opinion: Unless there is some compelling reason to do so, I recommend keeping 
old shortcuts. Correct me if I'm wrong but in this case I don't see any 
compelling reason to remove the shortcuts.
I tend to agree with Ed.  However, there may be non-US keyboard users who 
disagree.  I vaguely recall that some non-US keyboards have the \ character as 
an AltGr key.  If true, the previous keyboard assignment would represent a 
minor inconvenience for them.
&gt;However, there may be non-US keyboard users who disagree
Correct. There are many keyboard layouts (e.g. in several Europe ones) which
need Shift or some other modifier to get /.

&gt;This request is to reinstate the old keyboard shortcuts (in addition to 
&gt;leaving the new one) by default.
The UI team told us not to use (and to remove) any shortcuts that are not based
on letters since they cause trouble on one or the other keyboard layout. As long
as this guideline isn't revised we won't change this.
It is possible to have the keybinding be Ctrl+/ in EN locales, and something 
else in German locales.  Why isn't this being used?
Well, as far as I know for Java2 the Locale attribute and the keyboard layout
(and hence input mode) are two different things. We can have an English-(US or
UK or International...) keyboard but the system  can have the Locale "German -
Switzerland (de_CH)".</WithStack>
    <WithOutStack>From the M7 new and noteworthy page: "The old Source &gt; Comment (Ctrl+/) and 
Source &gt; Uncomment (Ctrl+\) commands in the Java editor have been replaced by 
the Source &gt; Toggle Comment (Ctrl+Shift+C) command that uncomments the 
currently selected source lines if all of them are commented and comments them 
otherwise. (You can bind keyboard shortcuts to the old commands, which are 
still available, via the Workbench &gt; Keys preference page.)"

This request is to reinstate the old keyboard shortcuts (in addition to 
leaving the new one) by default.

Rationale: Avoid breaking existing documentation (books, keyboard shortcut 
reference cards, etc.) and also head off user questions asking where the old 
shortcuts went (like the one I just read on platform-dev).

Opinion: Unless there is some compelling reason to do so, I recommend keeping 
old shortcuts. Correct me if I'm wrong but in this case I don't see any 
compelling reason to remove the shortcuts.
I tend to agree with Ed.  However, there may be non-US keyboard users who 
disagree.  I vaguely recall that some non-US keyboards have the \ character as 
an AltGr key.  If true, the previous keyboard assignment would represent a 
minor inconvenience for them.
&gt;However, there may be non-US keyboard users who disagree
Correct. There are many keyboard layouts (e.g. in several Europe ones) which
need Shift or some other modifier to get /.

&gt;This request is to reinstate the old keyboard shortcuts (in addition to 
&gt;leaving the new one) by default.
The UI team told us not to use (and to remove) any shortcuts that are not based
on letters since they cause trouble on one or the other keyboard layout. As long
as this guideline isn't revised we won't change this.
It is possible to have the keybinding be Ctrl+/ in EN locales, and something 
else in German locales.  Why isn't this being used?
Well, as far as I know for Java2 the Locale attribute and the keyboard layout
(and hence input mode) are two different things. We can have an English-(US or
UK or International...) keyboard but the system  can have the Locale "German -
Switzerland (de_CH)".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54841" />
    <CreationDate amount="2004-03-15 11:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>version number of resource plugin too short</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The version number of the resources plugin is set to "3.0" instead of "3.0.0" in
the plugin.xml file.
The numbers should be equivalent. Is "3.0" causing problems?
"3" would be sufficient since additional zeros are always implied by
the plugin version number semantics. See the PluginVersionIdentifier class for
more details.</WithStack>
    <WithOutStack>The version number of the resources plugin is set to "3.0" instead of "3.0.0" in
the plugin.xml file.
The numbers should be equivalent. Is "3.0" causing problems?
"3" would be sufficient since additional zeros are always implied by
the plugin version number semantics. See the PluginVersionIdentifier class for
more details.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54842" />
    <CreationDate amount="2004-03-15 11:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>3 CDT nested exceptions after shutting down Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="7">
      <Stacktrace timestamp="1437341098057">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1045)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="3">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.debug.internal.core.SessionManager.dispose(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.cdt.debug.core.CDebugCorePlugin.setSessionManager(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.cdt.debug.core.CDebugCorePlugin.shutdown(Unknown Source)</Frame>
          <Frame depth="3">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
          <Frame depth="5">java.security.AccessController.doPrivileged1(Native Method)</Frame>
          <Frame depth="6">java.security.AccessController.doPrivileged(AccessController.java:350)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1025)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="10">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="12">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="15">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1045)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="3">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.launch.internal.ui.LaunchUIPlugin.shutdown(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
          <Frame depth="3">java.security.AccessController.doPrivileged1(Native Method)</Frame>
          <Frame depth="4">java.security.AccessController.doPrivileged(AccessController.java:350)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1025)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="8">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="15">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="16">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="17">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1045)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="3">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.debug.ui.CDebugUIPlugin.shutdown(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
          <Frame depth="3">java.security.AccessController.doPrivileged1(Native Method)</Frame>
          <Frame depth="4">java.security.AccessController.doPrivileged(AccessController.java:350)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1025)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.Bundle.stop(Bundle.java:477)</Frame>
          <Frame depth="8">org.eclipse.core.internal.plugins.PluginStopper.run(PluginStopper.java:99)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles(PlatformActivator.java:290)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:272)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="15">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="16">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="17">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098057">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.debug.ui.CDebugUIPlugin.shutdown(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:66)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1029)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>After shutting down Eclipse (finishing sanity), I get these 3 exceptions.  
During the sanity, I've build a managed project and a standard project.  I 
have also debugged the managed project.

All 3 exceptions are nested exceptions in org.osgi. 2 are from cdt.debug and 
one in  cdt.launch (please search for cdt.debug and cdt.launch):

1)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.00
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.debug.core_2.0.0.200403150300/ [235]".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.cdt.debug.internal.core.SessionManager.dispose(Unknown 
Source)
	at org.eclipse.cdt.debug.core.CDebugCorePlugin.setSessionManager
(Unknown Source)
	at org.eclipse.cdt.debug.core.CDebugCorePlugin.shutdown(Unknown Source)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)
	at java.security.AccessController.doPrivileged1(Native Method)
	at java.security.AccessController.doPrivileged
(AccessController.java:350)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1025)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

2)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.438
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.launch_2.0.0.200403150300/ [240]".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
4)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.cdt.launch.internal.ui.LaunchUIPlugin.shutdown(Unknown 
Source)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)
	at java.security.AccessController.doPrivileged1(Native Method)
	at java.security.AccessController.doPrivileged
(AccessController.java:350)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1025)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

3)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.469
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.debug.ui_2.0.0.200403150300/ [238]".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.cdt.debug.ui.CDebugUIPlugin.shutdown(Unknown Source)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)
	at java.security.AccessController.doPrivileged1(Native Method)
	at java.security.AccessController.doPrivileged
(AccessController.java:350)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1025)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
I Believe this was "fix", in the head see PR
 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=52155

Meaning the exception is catch since mikhail wanted to
rewrite this parts.

Mikhail maybe you could mark it as duplicate 

I think these are different, Alain.

Please do a search on cdt.debug and cdt.launch on these exceptions.  Thanks.
&gt; I think these are different, Alain.

this one:
java.lang.NullPointerException
	at org.eclipse.cdt.debug.ui.CDebugUIPlugin.shutdown(Unknown Source)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:66)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run
(BundleContext.java:1029)


is the same,  in CDebugUIPlugin.shutdown() a NPE is thrown.
But you may be right, it looks that there is more here.

Thanks.

Which build is this ?

Sorry, I usually put the build number.  This is this morning 
build:2.0.0.200403100800.
The "shutdown" method of the "Plugin" class is deprecated. I have replaced it 
by the "stop" method and the problem is gone.
Verified Eclipse 200406111814   CDT 200406140300</WithStack>
    <WithOutStack>After shutting down Eclipse (finishing sanity), I get these 3 exceptions.  
During the sanity, I've build a managed project and a standard project.  I 
have also debugged the managed project.

All 3 exceptions are nested exceptions in org.osgi. 2 are from cdt.debug and 
one in  cdt.launch (please search for cdt.debug and cdt.launch):

1)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.00
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.debug.core_2.0.0.200403150300/ [235]".
!STACK 0
Nested exception:

2)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.438
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.launch_2.0.0.200403150300/ [240]".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
4)
Nested exception:

3)
!ENTRY org.eclipse.core.runtime.compatibility 4 1 Mar 15, 2004 11:06:15.469
!MESSAGE Error while stopping plug-
in "reference:file:d:/Workbench3.0/200403100800/eclipse/plugins/org.eclipse.cdt
.debug.ui_2.0.0.200403150300/ [238]".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop
(BundleContext.java:1045)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.stop
(Bundle.java:477)
	at org.eclipse.core.internal.plugins.PluginStopper.run
(PluginStopper.java:99)
	at 
org.eclipse.core.internal.runtime.PlatformActivator.stopLegacyBundles
(PlatformActivator.java:290)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Nested exception:
I Believe this was "fix", in the head see PR
 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=52155

Meaning the exception is catch since mikhail wanted to
rewrite this parts.

Mikhail maybe you could mark it as duplicate 

I think these are different, Alain.

Please do a search on cdt.debug and cdt.launch on these exceptions.  Thanks.
&gt; I think these are different, Alain.

this one:



is the same,  in CDebugUIPlugin.shutdown() a NPE is thrown.
But you may be right, it looks that there is more here.

Thanks.

Which build is this ?

Sorry, I usually put the build number.  This is this morning 
build:2.0.0.200403100800.
The "shutdown" method of the "Plugin" class is deprecated. I have replaced it 
by the "stop" method and the problem is gone.
Verified Eclipse 200406111814   CDT 200406140300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54843" />
    <CreationDate amount="2004-03-15 11:34:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Plugin.getStateLocation()  not available during bundle activator start()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="341" end="382" />
        <code>MyPlugin.getDefault().getStateLocation();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I am trying to remove the dependency on runtime.compatiblity from some update 
plugins, and noticed that during the execution of the bundle activator start() 
method the plugin state location was not available. In the original code, the 
state location was available during plugin.startup().
How are you trying to access the stateLocation?

MyPlugin.getDefault().getStateLocation();
(where getDefault() returns the singleton instance of my plugin class).
If your activator inherits from Plugin, make sure you call super.start() before 
doing the call to getStateLocation().


Thanks, that did it.</WithStack>
    <WithOutStack>I am trying to remove the dependency on runtime.compatiblity from some update 
plugins, and noticed that during the execution of the bundle activator start() 
method the plugin state location was not available. In the original code, the 
state location was available during plugin.startup().
How are you trying to access the stateLocation?

MyPlugin.getDefault().getStateLocation();
(where getDefault() returns the singleton instance of my plugin class).
If your activator inherits from Plugin, make sure you call super.start() before 
doing the call to getStateLocation().


Thanks, that did it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54844" />
    <CreationDate amount="2004-03-15 11:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS Repositories view as a Fast View spans entire window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I use the CVS repositories view as a fast view and the fast view bar is 
vertical, the repo view spans the entire workbench window and you can't seem 
to make it smaller. It used to span only a portion and the size was adjustable.
worksforme, must of been a ui bug</WithStack>
    <WithOutStack>If I use the CVS repositories view as a fast view and the fast view bar is 
vertical, the repo view spans the entire workbench window and you can't seem 
to make it smaller. It used to span only a portion and the size was adjustable.
worksforme, must of been a ui bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54845" />
    <CreationDate amount="2004-03-15 11:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Maximize and restore state for views and editors is not consistent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>latest code from HEAD March 15, 2004 AM

When maximizing and minimizing stacks of views or the editor pane using the 
button on the top right the state of the button is correct, however if you 
maximize either a view or editor and then cause a view to programmatically 
minimize (such as performing a search when the search view is not visible due 
to the maximize) the maximized part the state of the button is not updated and 
the stack sometimes seems to get into an inconsistant state where it takes two 
clicks on the maximize button to get it to maximize again.
Fixed in HEAD
*** Bug 54899 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>latest code from HEAD March 15, 2004 AM

When maximizing and minimizing stacks of views or the editor pane using the 
button on the top right the state of the button is correct, however if you 
maximize either a view or editor and then cause a view to programmatically 
minimize (such as performing a search when the search view is not visible due 
to the maximize) the maximized part the state of the button is not updated and 
the stack sometimes seems to get into an inconsistant state where it takes two 
clicks on the maximize button to get it to maximize again.
Fixed in HEAD
*** Bug 54899 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54846" />
    <CreationDate amount="2004-03-15 11:47:00 -0500" />
    <DupId amount="54860" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SWTException: Widget is disposed in synchronization view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098060">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2625)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2555)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:377)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:306)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:711)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:119)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1285)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1266)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1200)</Frame>
          <Frame depth="16">org.eclipse.team.ui.synchronize.viewers.SynchronizeModelProvider$LabelUpdateJob.runInUIThread(SynchronizeModelProvider.java:86)</Frame>
          <Frame depth="17">org.eclipse.ui.progress.UIJob$1.run(UIJob.java:90)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I right clicked on a couple items in the CVS sync view and selected Update and 
got this error.

Version: 3.0.0
Build id: 200403100800

Error Mar 15, 2004 11:41:28.770 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
org.eclipse.swt.SWTException: Widget is disposed
at org.eclipse.swt.SWT.error(SWT.java:2625)
at org.eclipse.swt.SWT.error(SWT.java:2555)
at org.eclipse.swt.widgets.Widget.error(Widget.java:377)
at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:306)
at org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:711)
at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)
at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run
(AbstractTreeViewer.java:87)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:469)
at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:119)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1285)
at org.eclipse.jface.viewers.StructuredViewer.update
(StructuredViewer.java:1266)
at org.eclipse.jface.viewers.StructuredViewer.update
(StructuredViewer.java:1200)
at 
org.eclipse.team.ui.synchronize.viewers.SynchronizeModelProvider$LabelUpdateJob
.runInUIThread(SynchronizeModelProvider.java:86)
at org.eclipse.ui.progress.UIJob$1.run(UIJob.java:90)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)


*** This bug has been marked as a duplicate of 54860 ***</WithStack>
    <WithOutStack>I right clicked on a couple items in the CVS sync view and selected Update and 
got this error.

Version: 3.0.0
Build id: 200403100800

Error Mar 15, 2004 11:41:28.770 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".



*** This bug has been marked as a duplicate of 54860 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54847" />
    <CreationDate amount="2004-03-15 11:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Imported remote SDB fail to open in editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098061">
        <Exception>org.eclipse.emf.common.util.WrappedException</Exception>
        <Reason>Unexpected end of ZLIB input 
stream</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:294)</Frame>
          <Frame depth="1">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor.loadModel(SymptomDBEditor.java:312)</Frame>
          <Frame depth="2">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor$1.run(SymptomDBEditor.java:168)</Frame>
          <Frame depth="3">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="4">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor.pageChange(SymptomDBEditor.java:165)</Frame>
          <Frame depth="5">org.eclipse.ui.part.MultiPageEditorPart$2.widgetSelected(MultiPageEditorPart.java:133)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:865)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:849)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:656)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:1745)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.CTabFolder.onMouseDown(CTabFolder.java:1913)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.CTabFolder.access$4(CTabFolder.java:1905)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:201)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="22">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="23">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Import a remote SDB and then try to open the SDB editor in Details pane. 
got the following exception with a error message dialog.

org.eclipse.emf.common.util.WrappedException: Unexpected end of ZLIB input 
stream
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource
(ResourceSetImpl.java:294)
	at org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor.loadModel
(SymptomDBEditor.java:312)
	at org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor$1.run
(SymptomDBEditor.java:168)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.hyades.sdb.internal.editors.SymptomDBEditor.pageChange
(SymptomDBEditor.java:165)
	at org.eclipse.ui.part.MultiPageEditorPart$2.widgetSelected
(MultiPageEditorPart.java:133)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:865)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:849)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:656)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:1745)
	at org.eclipse.swt.custom.CTabFolder.onMouseDown(CTabFolder.java:1913)
	at org.eclipse.swt.custom.CTabFolder.access$4(CTabFolder.java:1905)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:201)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
invalid
close invalid bug</WithStack>
    <WithOutStack>Import a remote SDB and then try to open the SDB editor in Details pane. 
got the following exception with a error message dialog.


invalid
close invalid bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54848" />
    <CreationDate amount="2004-03-15 11:58:00 -0500" />
    <DupId amount="125768" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[breakpoints] Breakpoint management in external code is hard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I step through code that happens to be in an external jar, it is hard to 
find/set/manage breakpoints.  The normal ruler down the left which houses the 
little breakpoint ball is missing.  Also, the context menu does not have a set 
breakpoint entry.  While there is an entry in the Run menu entry, this is not 
natural for some workflows (I can honestly say I did not even know there was a 
Run menu until I encountered this problem).
Nothing planned for 3.0
In 3.2, external java files have a ruler and the double-click and ruler context menu has toggle option. However, breakpoints do not appear in the ruler - as noted by bug 125768.

Re-opening to mark as dup of bug 125768, which notes remaining issue.


*** This bug has been marked as a duplicate of 125768 ***</WithStack>
    <WithOutStack>When I step through code that happens to be in an external jar, it is hard to 
find/set/manage breakpoints.  The normal ruler down the left which houses the 
little breakpoint ball is missing.  Also, the context menu does not have a set 
breakpoint entry.  While there is an entry in the Run menu entry, this is not 
natural for some workflows (I can honestly say I did not even know there was a 
Run menu until I encountered this problem).
Nothing planned for 3.0
In 3.2, external java files have a ruler and the double-click and ruler context menu has toggle option. However, breakpoints do not appear in the ruler - as noted by bug 125768.

Re-opening to mark as dup of bug 125768, which notes remaining issue.


*** This bug has been marked as a duplicate of 125768 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54849" />
    <CreationDate amount="2004-03-15 11:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Highlight current line preference not honored</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040310

I have the "highlight current line" preference turned off for both Java and text
editors.  I do not see an equivalent preference for the PDE manifest editor
source page.  Simply honoring the text editor preference value would probably be
sufficient here.
All text editor preferences are now honored using a chained preference store.</WithStack>
    <WithOutStack>I20040310

I have the "highlight current line" preference turned off for both Java and text
editors.  I do not see an equivalent preference for the PDE manifest editor
source page.  Simply honoring the text editor preference value would probably be
sufficient here.
All text editor preferences are now honored using a chained preference store.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54850" />
    <CreationDate amount="2004-03-15 12:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Strange entry in the build.properties of update.core.win32</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The build.properties of update.core.win32 indicates:
source.updatecorewin32.zip = src/

What were your intent in having this entry here?
Are you trying to compile the content of src into a file called updatecorewin32.zip?

Note that if you are trying to zip the content of the src to make it available
as source, you should use the src.includes property. One example is
org.eclipse.core.resources.win32.
This must be some old setup. I will look into it.
Fixed for both the win32 and linux fragments.</WithStack>
    <WithOutStack>The build.properties of update.core.win32 indicates:
source.updatecorewin32.zip = src/

What were your intent in having this entry here?
Are you trying to compile the content of src into a file called updatecorewin32.zip?

Note that if you are trying to zip the content of the src to make it available
as source, you should use the src.includes property. One example is
org.eclipse.core.resources.win32.
This must be some old setup. I will look into it.
Fixed for both the win32 and linux fragments.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54851" />
    <CreationDate amount="2004-03-15 12:31:00 -0500" />
    <DupId amount="46668" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Adopt dynamic project references</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Counterpart of the API change in bug 46668
Fixed SetClasspathOperation.updateProjectReferencesIfNecessary() to use dynamic 
project references.

Changed ClasspathInitializer.testContainerInitializer6() to reflect this change 
(i.e. the .project file is no longer changed)
Reopening to mark as a duplicate of bug 46668.


*** This bug has been marked as a duplicate of 46668 ***</WithStack>
    <WithOutStack>Counterpart of the API change in bug 46668
Fixed SetClasspathOperation.updateProjectReferencesIfNecessary() to use dynamic 
project references.

Changed ClasspathInitializer.testContainerInitializer6() to reflect this change 
(i.e. the .project file is no longer changed)
Reopening to mark as a duplicate of bug 46668.


*** This bug has been marked as a duplicate of 46668 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54852" />
    <CreationDate amount="2004-03-15 12:31:00 -0500" />
    <DupId amount="55165" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No event for checking a TableItem's box in Windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="import">
        <location start="444" end="472" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="473" end="514" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="515" end="554" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="555" end="592" />
        <code>import org.eclipse.swt.widgets.Event;</code>
      </source_code>
      <source_code type="import">
        <location start="593" end="633" />
        <code>import org.eclipse.swt.widgets.Listener;</code>
      </source_code>
      <source_code type="import">
        <location start="634" end="671" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="import">
        <location start="672" end="709" />
        <code>import org.eclipse.swt.widgets.Table;</code>
      </source_code>
      <source_code type="import">
        <location start="710" end="751" />
        <code>import org.eclipse.swt.widgets.TableItem;</code>
      </source_code>
      <source_code type="class">
        <location start="753" end="1373" />
        <code>public class SWTExample {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell= new Shell(display);
		shell.setLayout(new FillLayout());
		Table table= new Table(shell, SWT.CHECK);
		
		for (int i= 0; i &lt; 3; i++) {
			TableItem item= new TableItem(table, SWT.NONE);
			item.setText("Item " + Integer.toString(i));
		}
		
		table.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event e) {
				System.out.println(e);
			}
		});
		
		shell.open();
		while(!shell.isDisposed()){
			if(!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: 200403040800
Win2k

If I create a table with the SWT.CHECK style, and I click on the check boxes, I 
don't get selection events. Actually, I only get an event if I check/uncheck 
the box of the currently selected item. I get events for every check box in 
motif, and in SWT for Eclipse 2.x.

Here is an example. It prints out events. Click on the check boxes (not the 
item labels).

----------------------------------------------------

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableItem;

public class SWTExample {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell= new Shell(display);
		shell.setLayout(new FillLayout());
		Table table= new Table(shell, SWT.CHECK);
		
		for (int i= 0; i &lt; 3; i++) {
			TableItem item= new TableItem(table, SWT.NONE);
			item.setText("Item " + Integer.toString(i));
		}
		
		table.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event e) {
				System.out.println(e);
			}
		});
		
		shell.open();
		while(!shell.isDisposed()){
			if(!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}
*** Bug 54514 has been marked as a duplicate of this bug. ***
This has been fixed.


*** This bug has been marked as a duplicate of 55165 ***
Closing bug.</WithStack>
    <WithOutStack>Build: 200403040800
Win2k

If I create a table with the SWT.CHECK style, and I click on the check boxes, I 
don't get selection events. Actually, I only get an event if I check/uncheck 
the box of the currently selected item. I get events for every check box in 
motif, and in SWT for Eclipse 2.x.

Here is an example. It prints out events. Click on the check boxes (not the 
item labels).

----------------------------------------------------

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableItem;

public class SWTExample {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell= new Shell(display);
		shell.setLayout(new FillLayout());
		Table table= new Table(shell, SWT.CHECK);
		
		for (int i= 0; i &lt; 3; i++) {
			TableItem item= new TableItem(table, SWT.NONE);
			item.setText("Item " + Integer.toString(i));
		}
		
		table.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event e) {
				System.out.println(e);
			}
		});
		
		shell.open();
		while(!shell.isDisposed()){
			if(!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}
*** Bug 54514 has been marked as a duplicate of this bug. ***
This has been fixed.


*** This bug has been marked as a duplicate of 55165 ***
Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54853" />
    <CreationDate amount="2004-03-15 12:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Missing forwards compatibility plug-ins for Eclipse 3</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- auto-setting the 'optional' in plugin.xml</Line>
          <Line>- diagnosing the unnecessary imports from feature.xml.</Line>
          <Line>- documenting the behaviour in the relesase notes</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Under Preferences &gt; Plugin Development &gt; Target Platform, choose a copy of</Line>
          <Line>Eclipse 2.1 as the target platform.</Line>
          <Line>- In your plugin manifest, check off "This plug-in is for use with other</Line>
          <Line>Eclipse platforms"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Eclipse 3 introduces new c ore plug-ins. These are not available on Eclipse 2,
so it is impossible to use Eclipse 3 to develop plug-ins that are compatible 
with both Eclipse 2 and Eclipse 3. (I upgraded my plug-ins to 3, discovered the 
problem and attempted to back-track, encountering further problems possibly
due to incompatible .metadata).

Eclipse 2.1.3 should include stub versions of all the new Eclipse 3 plug-ins.

An upgrade for Eclipse 2.1.2 (and earlier) should install similar stubs.
Note that fixing up 2.1.3 to work with 3.0 is *forwards* compatibility, not
backwards compatibility.  We make no claims at all about forward compatibility.

Having said that, what value would those stubs in 2.1.3 serve?  It sounds like
what you're looking for is optional plug-in prerequisites (which we have always
supported):

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility" optional="true"/&gt;
   &lt;/requires&gt;


Note that fixing up 2.1.3 to work with 3.0 is *forwards* compatibility, not
backwards compatibility.  We make no claims at all about forward compatibility.

Having said that, what value would those stubs in 2.1.3 serve?  It sounds like
what you're looking for is optional plug-in prerequisites (which we have always
supported):

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility" optional="true"/&gt;
   &lt;/requires&gt;
Sorry for the duplicate follow-up... bugzilla troubles.
Excellent. I would not have guessed at the optional-requires tautology.
It works but:

When "This plug-in is for use with older Eclipse platforms (prior to 3.0)"
is checked in the plugin.xml editor Overview, 3.0-only plug-ins should
automatically be tagged as "optional".

An attempt to mark feature.xml requres/imports as optional generates no
diagnostic, but Eclipse 2.1.1 refuses to load the feature. Perhaps an
optional import really is a contradiction.

Since there will probably be a one or more year transition from Eclipse 2 to 3
it is essential to provide forwards compatibility for basically unchanged code.
Otherwise developers may have to wait for the daisy chain of all their
prerequisites to go to 3 before they can upgrade. Probably worth a section
in the release notes.
Edward, I am curious: what is your plan for when running on 2.1? I mean, if your
plugin will be using some Eclipse built-in plugins that are only available on
3.0, how is it going to work on 2.1? The optional pre-requisites only help to
allow your plugin to be resolved. But if you rely on code that is available only
on 3.0, unless you use some clever strategy to avoid that, you plugin will fail
during runtime when calling 3.0-specific classes/methods from other plugins.
Closing as WONTFIX.  Note that you can use Eclipse 3.0 to develop plug-ins
targetted at Eclipse 2.1. Simply check "This plug-in is for use with other
Eclipse platforms" in the plug-in manifest editor, and only use Eclipse 2.1
preferences.  The 3.0 platform will then treat this as a "legacy" plug-in, and
will automatically add pre-reqs for new or moved plug-ins when this plug-in is
executed in a 3.0 environment. If you encounter problems doing this, please
enter new bug reports describing the symptoms.
Hi Rafael

I want to use Eclipse 3.0 to maintain a plug-in developed under Eclipse
2.1 so that it can still be used on Eclipse 2.1. It uses no Eclipse 3
features, but does use the changed openEditor API, exactly as in the
example New File Wizard plug-in.

The main purpose of using Eclipse 3 is the improved environment,
in particular the ability to use CVS to SourceForge. Pre Eclipse 3, I had
to use WinCVS. Maintaining the 2.1 status of the plug-in makes the maintained
plug-in available to users who have yet to migrate to Eclipse 3.

In #1, John resolved my main problem, allowing plugin.xml to be suitably
configured.

In #4, I identified a couple of minor inconsistencies that mean that the
user needs to be more aware of what is happening and to understand poorly
documented facilities.

So '#0' is RESOLVED WONTFIX, but #4 could beneficially be addressed.
- auto-setting the 'optional' in plugin.xml
- diagnosing the unnecessary imports from feature.xml.
- documenting the behaviour in the relesase notes

When I recommended the "optional require", I didn't full understand your
situation (I thought you wanted a plugin with some extra functionality when
executed in 3.0 but still able to run in 2.1).  If you are targeting only 2.1
API (note this plug-in will still work in Eclipse 3.0), it is very easy to set
up your environment to do so. This is how I recommend you develop a plug-in
using Eclipse 3.0 that is targetted at Eclipse 2.1:

 - Under Preferences &gt; Plugin Development &gt; Target Platform, choose a copy of
Eclipse 2.1 as the target platform.
 - In your plugin manifest, check off "This plug-in is for use with other
Eclipse platforms"

Now it won't let you pre-req plug-ins that don't exist in 2.1, etc.
Closing again.  If you set up your environment as I suggest in my final comment,
you will get all of the usual compile-time and runtime validation that are
appropriate for that target.</WithStack>
    <WithOutStack>Eclipse 3 introduces new c ore plug-ins. These are not available on Eclipse 2,
so it is impossible to use Eclipse 3 to develop plug-ins that are compatible 
with both Eclipse 2 and Eclipse 3. (I upgraded my plug-ins to 3, discovered the 
problem and attempted to back-track, encountering further problems possibly
due to incompatible .metadata).

Eclipse 2.1.3 should include stub versions of all the new Eclipse 3 plug-ins.

An upgrade for Eclipse 2.1.2 (and earlier) should install similar stubs.
Note that fixing up 2.1.3 to work with 3.0 is *forwards* compatibility, not
backwards compatibility.  We make no claims at all about forward compatibility.

Having said that, what value would those stubs in 2.1.3 serve?  It sounds like
what you're looking for is optional plug-in prerequisites (which we have always
supported):

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility" optional="true"/&gt;
   &lt;/requires&gt;


Note that fixing up 2.1.3 to work with 3.0 is *forwards* compatibility, not
backwards compatibility.  We make no claims at all about forward compatibility.

Having said that, what value would those stubs in 2.1.3 serve?  It sounds like
what you're looking for is optional plug-in prerequisites (which we have always
supported):

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility" optional="true"/&gt;
   &lt;/requires&gt;
Sorry for the duplicate follow-up... bugzilla troubles.
Excellent. I would not have guessed at the optional-requires tautology.
It works but:

When "This plug-in is for use with older Eclipse platforms (prior to 3.0)"
is checked in the plugin.xml editor Overview, 3.0-only plug-ins should
automatically be tagged as "optional".

An attempt to mark feature.xml requres/imports as optional generates no
diagnostic, but Eclipse 2.1.1 refuses to load the feature. Perhaps an
optional import really is a contradiction.

Since there will probably be a one or more year transition from Eclipse 2 to 3
it is essential to provide forwards compatibility for basically unchanged code.
Otherwise developers may have to wait for the daisy chain of all their
prerequisites to go to 3 before they can upgrade. Probably worth a section
in the release notes.
Edward, I am curious: what is your plan for when running on 2.1? I mean, if your
plugin will be using some Eclipse built-in plugins that are only available on
3.0, how is it going to work on 2.1? The optional pre-requisites only help to
allow your plugin to be resolved. But if you rely on code that is available only
on 3.0, unless you use some clever strategy to avoid that, you plugin will fail
during runtime when calling 3.0-specific classes/methods from other plugins.
Closing as WONTFIX.  Note that you can use Eclipse 3.0 to develop plug-ins
targetted at Eclipse 2.1. Simply check "This plug-in is for use with other
Eclipse platforms" in the plug-in manifest editor, and only use Eclipse 2.1
preferences.  The 3.0 platform will then treat this as a "legacy" plug-in, and
will automatically add pre-reqs for new or moved plug-ins when this plug-in is
executed in a 3.0 environment. If you encounter problems doing this, please
enter new bug reports describing the symptoms.
Hi Rafael

I want to use Eclipse 3.0 to maintain a plug-in developed under Eclipse
2.1 so that it can still be used on Eclipse 2.1. It uses no Eclipse 3
features, but does use the changed openEditor API, exactly as in the
example New File Wizard plug-in.

The main purpose of using Eclipse 3 is the improved environment,
in particular the ability to use CVS to SourceForge. Pre Eclipse 3, I had
to use WinCVS. Maintaining the 2.1 status of the plug-in makes the maintained
plug-in available to users who have yet to migrate to Eclipse 3.

In #1, John resolved my main problem, allowing plugin.xml to be suitably
configured.

In #4, I identified a couple of minor inconsistencies that mean that the
user needs to be more aware of what is happening and to understand poorly
documented facilities.

So '#0' is RESOLVED WONTFIX, but #4 could beneficially be addressed.
- auto-setting the 'optional' in plugin.xml
- diagnosing the unnecessary imports from feature.xml.
- documenting the behaviour in the relesase notes

When I recommended the "optional require", I didn't full understand your
situation (I thought you wanted a plugin with some extra functionality when
executed in 3.0 but still able to run in 2.1).  If you are targeting only 2.1
API (note this plug-in will still work in Eclipse 3.0), it is very easy to set
up your environment to do so. This is how I recommend you develop a plug-in
using Eclipse 3.0 that is targetted at Eclipse 2.1:

 - Under Preferences &gt; Plugin Development &gt; Target Platform, choose a copy of
Eclipse 2.1 as the target platform.
 - In your plugin manifest, check off "This plug-in is for use with other
Eclipse platforms"

Now it won't let you pre-req plug-ins that don't exist in 2.1, etc.
Closing again.  If you set up your environment as I suggest in my final comment,
you will get all of the usual compile-time and runtime validation that are
appropriate for that target.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54854" />
    <CreationDate amount="2004-03-15 12:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Replace with revision</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Title should show the full local path of the resource.</Line>
          <Line />
          <Line>2) The close button does not prompt if there are changes to the left pane</Line>
          <Line />
          <Line>3) The Replace/OK buttons are confusing. A cleaner separation may be to have</Line>
          <Line>compare offer merging and replace just run a straight replace.</Line>
          <Line>Fixed all of the above requests.</Line>
          <Line>There are still some problems:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Here are some problems (aldso with Compare with Revision):

1) Title should show the full local path of the resource.

2) The close button does not prompt if there are changes to the left pane

3) The Replace/OK buttons are confusing. A cleaner separation may be to have 
compare offer merging and replace just run a straight replace.
Fixed all of the above requests.
There are still some problems:

1) The Replace wizard should have a Cancel button as well as the window close 
button.

2) If I dirty the left side in a Compare with Revision and click OK, I am 
prompted twice if I choose cancel
Added the cancel button. Can't dupe the double prompt.</WithStack>
    <WithOutStack>Here are some problems (aldso with Compare with Revision):

1) Title should show the full local path of the resource.

2) The close button does not prompt if there are changes to the left pane

3) The Replace/OK buttons are confusing. A cleaner separation may be to have 
compare offer merging and replace just run a straight replace.
Fixed all of the above requests.
There are still some problems:

1) The Replace wizard should have a Cancel button as well as the window close 
button.

2) If I dirty the left side in a Compare with Revision and click OK, I am 
prompted twice if I choose cancel
Added the cancel button. Can't dupe the double prompt.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54855" />
    <CreationDate amount="2004-03-15 12:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Accessibility] Editors do not have a name associated with them.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1375" end="1500" />
        <code>new AccessibleAdapter() {			
			public void getName(AccessibleEvent e) {
				e.result = "Welcome to our online store!"
		}}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Microsoft Inspect indicates that the CDT Editor text areas (i.e. Editor 
Windows) do not have readable names. A proper name for these text areas are 
required for screen readers to make visually impaired users aware of which file 
has focus and is being edited.

All of the editors are missing a name according to MS Inspect, i.e. this is
likely not a CDT specific problem.

The editor should have a name so that a screen reader can identify the file
being edited to the user.
 
Re-assigning to Eclipse.

The tabs are available to accessibility support - the contents are also.

We do not append the name of the file to the beginning of the contents for the 
sake of screen readers as this would generate too much excess information for 
times when the user wants to read the whole file.

Most of the time you would read one lihe at a time - reading the entire file 
with a screen reader everytime you use it is too cumbersome.

Is there another feature you are asking for here?
Yes, the editor window itself should have a name attribute, so that a blind 
person can know which file is being read by the screen reader. Can the 
attribute be set as in the eclipse article,
"http://www.eclipse.org/articles/Article-Accessibility/accessibility.html" 
where the name is supplied through the getName method of the listener?
E.g:

topLabel.getAccessible().addAccessibleListener(
		new AccessibleAdapter() {			
			public void getName(AccessibleEvent e) {
				e.result = "Welcome to our online store!"
		}});</WithStack>
    <WithOutStack>Microsoft Inspect indicates that the CDT Editor text areas (i.e. Editor 
Windows) do not have readable names. A proper name for these text areas are 
required for screen readers to make visually impaired users aware of which file 
has focus and is being edited.

All of the editors are missing a name according to MS Inspect, i.e. this is
likely not a CDT specific problem.

The editor should have a name so that a screen reader can identify the file
being edited to the user.
 
Re-assigning to Eclipse.

The tabs are available to accessibility support - the contents are also.

We do not append the name of the file to the beginning of the contents for the 
sake of screen readers as this would generate too much excess information for 
times when the user wants to read the whole file.

Most of the time you would read one lihe at a time - reading the entire file 
with a screen reader everytime you use it is too cumbersome.

Is there another feature you are asking for here?
Yes, the editor window itself should have a name attribute, so that a blind 
person can know which file is being read by the screen reader. Can the 
attribute be set as in the eclipse article,
"http://www.eclipse.org/articles/Article-Accessibility/accessibility.html" 
where the name is supplied through the getName method of the listener?
E.g:

topLabel.getAccessible().addAccessibleListener(
		new AccessibleAdapter() {			
			public void getName(AccessibleEvent e) {
				e.result = "Welcome to our online store!"
		}});</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54856" />
    <CreationDate amount="2004-03-15 12:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[call hierarchy] 'Refresh' should only refresh selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="7613" end="7742" />
        <code>- Why do we need the special case for the root element? It works fine for me without the "if (element.getParent() == null) {..}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- RefreshElementAction#run():</Line>
          <Line>- The variable "list" should have a speaking name, e.g. "toExpand".</Line>
          <Line>", and if there are multiple root nodes, "fPart.refresh()" refreshes more than what the user selected. Please remove this or explain.</Line>
          <Line>(In reply to comment #13)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The 'Refresh' action in the context menu of the call hierarchy should only
refresh the selected method(s).

Right now, the whole hierarchy is refreshed. This is unfortunate, e.g. if the
user cancelled a tree expansion and later changes her mind and wants to see
what's below that node all the same.
Hi Markus,

Does that go for the keyboard shortcut (F5)? Does it make sense that this one
only  refreshes the currently selected method?

Is there a need for a "Refresh view" menu entry which refreshes the whole view
(like in the CVS Repositories view)?
Yes, I meant that for F5 and the context menu action. I don't think that a
"Refresh View" action is necessary. The call hierarchy tree always has only one
root item, so it is easy to refresh the whole view by refreshing the first item.

The Resource Navigator and the Package Explorer also refresh the current
selection on File &gt; Refresh or via the context menu.
Raksha, could you please have a look?

&gt; I don't think that a
&gt; "Refresh View" action is necessary. The call hierarchy tree always has only one
&gt; root item, so it is easy to refresh the whole view by refreshing the first item.

This has changed in the mean time. We should keep the button in the view toolbar but rename it to "Refresh View" and take the key binding away (don't set the action definition ID / command ID).
Created attachment 148424
Patch
(In reply to comment #3)
&gt; Raksha, could you please have a look?
&gt; 
&gt; &gt; I don't think that a
&gt; &gt; "Refresh View" action is necessary. The call hierarchy tree always has only one
&gt; &gt; root item, so it is easy to refresh the whole view by refreshing the first item.
&gt; 
&gt; This has changed in the mean time. We should keep the button in the view
&gt; toolbar but rename it to "Refresh View" and take the key binding away (don't
&gt; set the action definition ID / command ID).

I have removed the key binding for the toolbar action and separated the classes 'RefreshViewAction' and the context menu action 'RefreshSingleElementAction'. Markus, could you pls take a look if its okay?
Did you actually try this? When I open a call hierarchy, then remove a caller that is shown in the tree, and then use Refresh from the context menu, the old caller is still shown.

The keybindings are only looking good, but the binding for the single refresh does not actually works. It only works for F5 due to the legacy workaround in CallHierarchyViewPart#handleKeyEvent(KeyEvent). If you rebind the Refresh command to a different key, then that key does not work. I guess you just have to call setGlobalActionHandler for the single refresh action.
Hint: You probably need similar code to what we already have in ExpandWithConstructorsAction#run() to force a re-calculation.
Created attachment 149223
P
(In reply to comment #6)
&gt; Did you actually try this? When I open a call hierarchy, then remove a caller
&gt; that is shown in the tree, and then use Refresh from the context menu, the old
&gt; caller is still shown.
&gt; 


Fixed. The refresh was not updating the structural changes since it was picking them up from the cache in MethodWrapper. It works fine if we clear the cache before refresh. It would be cheaper to clear cache entirely because, removing only the selected elements from the cache would also require removing their children from the cache, which have to be computed freshly. Instead we could clear out the cache and compute the children only once.

&gt; The keybindings are only looking good, but the binding for the single refresh
&gt; does not actually works. It only works for F5 due to the legacy workaround in
&gt; CallHierarchyViewPart#handleKeyEvent(KeyEvent). If you rebind the Refresh
&gt; command to a different key, then that key does not work. I guess you just have
&gt; to call setGlobalActionHandler for the single refresh action.


I have removed the workaround in CallHierarchyViewPart, and set the action handler directly to the action.

&gt; Hint: You probably need similar code to what we already have in
&gt; ExpandWithConstructorsAction#run() to force a re-calculation.

Nope. The ExpandWithConstructorsAction#run only returns additional children when checked, but when the [callers] node is expanded, it still shows the old callers list.
- The commandID and key handling looks good.

- The parameter of MethodWrapper#removeFromCache(MethodWrapper) doesn't make sense. Please remove it, and also remove "before refresh" from the method's Javadoc. The method does not do a refresh, and it could also be used in other scenarios.

- You said "It *would be* cheaper to clear cache entirely". But doesn't your code do exactly that? So it *is* cheaper, not *would be*, right?
But I think that's too brute-force. Consider a scenario where you have a somewhat big hierarchy, and you need to refresh one element. Does that really mean you have to lose the cache for all other elements that would be so much quicker to calculate if the cache was still available? I would just remove the refreshed elements from the cache. If the user needs a complete refresh, she should use Refresh View.

- RefreshSingleElementAction also refreshes multiple elements. Please remove the word "Single".

- When I select multiple expanded instances of the same method in the Caller Hierarchy and then refresh them, I get an NPE. A simple solution could be to collect the elements to expand in a list and only expand them afterwards, in a second loop.

- It also happened to me that an element didn't refresh at all any more, because an earlier invocation of MethodWrapper#removeFromCache(..) cleared the cache, and thus further invocations didn't find the key any more and hence didn't reset fElements to null. 'fElements= null;' needs to be executed every time.

- Please format the code according to the project standards (e.g. spaces in 'if' statements). If you're unsure, use the formatter.
Created attachment 149403
Patch with review changes.
(In reply to comment #10)
 
&gt; - You said "It *would be* cheaper to clear cache entirely". But doesn't your
&gt; code do exactly that? So it *is* cheaper, not *would be*, right?
&gt; But I think that's too brute-force. Consider a scenario where you have a
&gt; somewhat big hierarchy, and you need to refresh one element. Does that really
&gt; mean you have to lose the cache for all other elements that would be so much
&gt; quicker to calculate if the cache was still available? I would just remove the
&gt; refreshed elements from the cache. If the user needs a complete refresh, she
&gt; should use Refresh View.
&gt; 
 
Yeah the ealier patch did wipe out the cache entirely. I suggested so because in the scenario where you make structural changes to the *child* of a node but refresh its *parent* node, and then expand the child, the child still shows the old children. The structural changes are picked up for a node only if *the same* node is refreshed. And to remove the child node also from the cache, we need to compute it first. Rather than that,  I tried to remove the cache and then do the computation freshly for whichever node is expanded from then on... It wont be a full refresh in any case. The call hierarchy would still remain as it is, only further expansions are computed freshly and added to the cache everytime.
Looks good now. If you agree with the 3 little tweaks below, then please fix them and release to HEAD.

- MethodWrapper#removeFromCache(): The "if (fMethodCache.containsKey(key))" is unnecessary, since Map#remove(..) already handles the case where the key is not in the map. Just leave "fMethodCache.remove(key);" there.

- RefreshElementAction#run():
  - The variable "list" should have a speaking name, e.g. "toExpand".
  - Why do we need the special case for the root element? It works fine for me without the "if (element.getParent() == null) {..}", and if there are multiple root nodes, "fPart.refresh()" refreshes more than what the user selected. Please remove this or explain.
(In reply to comment #13)

Made the tweaks and released to HEAD.
.</WithStack>
    <WithOutStack>The 'Refresh' action in the context menu of the call hierarchy should only
refresh the selected method(s).

Right now, the whole hierarchy is refreshed. This is unfortunate, e.g. if the
user cancelled a tree expansion and later changes her mind and wants to see
what's below that node all the same.
Hi Markus,

Does that go for the keyboard shortcut (F5)? Does it make sense that this one
only  refreshes the currently selected method?

Is there a need for a "Refresh view" menu entry which refreshes the whole view
(like in the CVS Repositories view)?
Yes, I meant that for F5 and the context menu action. I don't think that a
"Refresh View" action is necessary. The call hierarchy tree always has only one
root item, so it is easy to refresh the whole view by refreshing the first item.

The Resource Navigator and the Package Explorer also refresh the current
selection on File &gt; Refresh or via the context menu.
Raksha, could you please have a look?

&gt; I don't think that a
&gt; "Refresh View" action is necessary. The call hierarchy tree always has only one
&gt; root item, so it is easy to refresh the whole view by refreshing the first item.

This has changed in the mean time. We should keep the button in the view toolbar but rename it to "Refresh View" and take the key binding away (don't set the action definition ID / command ID).
Created attachment 148424
Patch
(In reply to comment #3)
&gt; Raksha, could you please have a look?
&gt; 
&gt; &gt; I don't think that a
&gt; &gt; "Refresh View" action is necessary. The call hierarchy tree always has only one
&gt; &gt; root item, so it is easy to refresh the whole view by refreshing the first item.
&gt; 
&gt; This has changed in the mean time. We should keep the button in the view
&gt; toolbar but rename it to "Refresh View" and take the key binding away (don't
&gt; set the action definition ID / command ID).

I have removed the key binding for the toolbar action and separated the classes 'RefreshViewAction' and the context menu action 'RefreshSingleElementAction'. Markus, could you pls take a look if its okay?
Did you actually try this? When I open a call hierarchy, then remove a caller that is shown in the tree, and then use Refresh from the context menu, the old caller is still shown.

The keybindings are only looking good, but the binding for the single refresh does not actually works. It only works for F5 due to the legacy workaround in CallHierarchyViewPart#handleKeyEvent(KeyEvent). If you rebind the Refresh command to a different key, then that key does not work. I guess you just have to call setGlobalActionHandler for the single refresh action.
Hint: You probably need similar code to what we already have in ExpandWithConstructorsAction#run() to force a re-calculation.
Created attachment 149223
P
(In reply to comment #6)
&gt; Did you actually try this? When I open a call hierarchy, then remove a caller
&gt; that is shown in the tree, and then use Refresh from the context menu, the old
&gt; caller is still shown.
&gt; 


Fixed. The refresh was not updating the structural changes since it was picking them up from the cache in MethodWrapper. It works fine if we clear the cache before refresh. It would be cheaper to clear cache entirely because, removing only the selected elements from the cache would also require removing their children from the cache, which have to be computed freshly. Instead we could clear out the cache and compute the children only once.

&gt; The keybindings are only looking good, but the binding for the single refresh
&gt; does not actually works. It only works for F5 due to the legacy workaround in
&gt; CallHierarchyViewPart#handleKeyEvent(KeyEvent). If you rebind the Refresh
&gt; command to a different key, then that key does not work. I guess you just have
&gt; to call setGlobalActionHandler for the single refresh action.


I have removed the workaround in CallHierarchyViewPart, and set the action handler directly to the action.

&gt; Hint: You probably need similar code to what we already have in
&gt; ExpandWithConstructorsAction#run() to force a re-calculation.

Nope. The ExpandWithConstructorsAction#run only returns additional children when checked, but when the [callers] node is expanded, it still shows the old callers list.
- The commandID and key handling looks good.

- The parameter of MethodWrapper#removeFromCache(MethodWrapper) doesn't make sense. Please remove it, and also remove "before refresh" from the method's Javadoc. The method does not do a refresh, and it could also be used in other scenarios.

- You said "It *would be* cheaper to clear cache entirely". But doesn't your code do exactly that? So it *is* cheaper, not *would be*, right?
But I think that's too brute-force. Consider a scenario where you have a somewhat big hierarchy, and you need to refresh one element. Does that really mean you have to lose the cache for all other elements that would be so much quicker to calculate if the cache was still available? I would just remove the refreshed elements from the cache. If the user needs a complete refresh, she should use Refresh View.

- RefreshSingleElementAction also refreshes multiple elements. Please remove the word "Single".

- When I select multiple expanded instances of the same method in the Caller Hierarchy and then refresh them, I get an NPE. A simple solution could be to collect the elements to expand in a list and only expand them afterwards, in a second loop.

- It also happened to me that an element didn't refresh at all any more, because an earlier invocation of MethodWrapper#removeFromCache(..) cleared the cache, and thus further invocations didn't find the key any more and hence didn't reset fElements to null. 'fElements= null;' needs to be executed every time.

- Please format the code according to the project standards (e.g. spaces in 'if' statements). If you're unsure, use the formatter.
Created attachment 149403
Patch with review changes.
(In reply to comment #10)
 
&gt; - You said "It *would be* cheaper to clear cache entirely". But doesn't your
&gt; code do exactly that? So it *is* cheaper, not *would be*, right?
&gt; But I think that's too brute-force. Consider a scenario where you have a
&gt; somewhat big hierarchy, and you need to refresh one element. Does that really
&gt; mean you have to lose the cache for all other elements that would be so much
&gt; quicker to calculate if the cache was still available? I would just remove the
&gt; refreshed elements from the cache. If the user needs a complete refresh, she
&gt; should use Refresh View.
&gt; 
 
Yeah the ealier patch did wipe out the cache entirely. I suggested so because in the scenario where you make structural changes to the *child* of a node but refresh its *parent* node, and then expand the child, the child still shows the old children. The structural changes are picked up for a node only if *the same* node is refreshed. And to remove the child node also from the cache, we need to compute it first. Rather than that,  I tried to remove the cache and then do the computation freshly for whichever node is expanded from then on... It wont be a full refresh in any case. The call hierarchy would still remain as it is, only further expansions are computed freshly and added to the cache everytime.
Looks good now. If you agree with the 3 little tweaks below, then please fix them and release to HEAD.

- MethodWrapper#removeFromCache(): The "if (fMethodCache.containsKey(key))" is unnecessary, since Map#remove(..) already handles the case where the key is not in the map. Just leave "fMethodCache.remove(key);" there.

- RefreshElementAction#run():
  - The variable "list" should have a speaking name, e.g. "toExpand".
  - Why do we need the special case for the root element? It works fine for me without the "if (element.getParent() == null) {..}", and if there are multiple root nodes, "fPart.refresh()" refreshes more than what the user selected. Please remove this or explain.
(In reply to comment #13)

Made the tweaks and released to HEAD.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54857" />
    <CreationDate amount="2004-03-15 13:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[RCP] Provide a native presentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Make the toolbar span the with of the view rather than right-aligning it. (On</Line>
          <Line>GTK, you can see the border of all toolbars, making right-aligned toolbars look</Line>
          <Line>silly)</Line>
          <Line>2. Place the tabs on the bottom and give views a title bar.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- it indicates which tab is active in each folder, but there's no indication of</Line>
          <Line>which view is active in the window</Line>
          <Line>- same problem for editors if editor workbook is split</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- no close boxes or other easy affordance for closing views (more of an issue</Line>
          <Line>for editors than for views)</Line>
          <Line>- we'd have to use the right click menu on the tab</Line>
          <Line>- alternatively, double-click on the icon to close, but you'd want double-</Line>
          <Line>click on the rest of the tab for maximize; while this is similar to how windows</Line>
          <Line>behave, I don't think it's a good idea to overload either single click or</Line>
          <Line>double-click on tabs since they tend to be small</Line>
          <Line>- this is not even possible currently with the SWT API since there's no way</Line>
          <Line>of getting the bounds of the tab items (presumably this could be fixed though)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>This bug has been opened to track development and issues with the (currently
experimental) native Eclipse presentation.

See bug 53673 for details
Nick's comments from bug 53673:

Ed, the NativeTabPresentation looks alright at first glance on XP.  It isn't so 
hot elsewhere, e.g. on Win2000.  And it has other problems:

- it indicates which tab is active in each folder, but there's no indication of 
which view is active in the window
  - same problem for editors if editor workbook is split

- no close boxes or other easy affordance for closing views (more of an issue 
for editors than for views)
  - we'd have to use the right click menu on the tab
  - alternatively, double-click on the icon to close, but you'd want double-
click on the rest of the tab for maximize; while this is similar to how windows 
behave, I don't think it's a good idea to overload either single click or 
double-click on tabs since they tend to be small
    - this is not even possible currently with the SWT API since there's no way 
of getting the bounds of the tab items (presumably this could be fixed though)

To clarify, this was just an experiment and the UI team has no commitment to 
provide a native presentation implementation for 3.0.

Copied from bug 52685 comment #81:
There are some bugs with it (swoosh at the top is still there, can't drag 
views, editors don't show the filename on the tab).

Filed bug 54883 for the dragging issues.
Hey, I've got the latest integration build (I've also got M7 if it's only on
there), and I can't figure out how to access the native look.  Could you help me
out?
There is no way to enable it through the UI.  It's just an experiment, which
requires code changes to enable.
Some suggestions for the Native look:

1. Make the toolbar span the with of the view rather than right-aligning it. (On
GTK, you can see the border of all toolbars, making right-aligned toolbars look
silly)
2. Place the tabs on the bottom and give views a title bar. 



1. This is a bug in SWT/GTK which has apparently been recently fixed.  But we
could still do this anyway.
2. Agree.  We'd also want to put the toolbar in the titlebar if there's room.

FYI, I've written a rudimentary (but functinally complete) native presentation.

The presentation factory is in
org.eclipse.ui.internal.presentations.defaultpresentation.NativePresentationFactory

It's ugly and probably not native enough yet... but everything seems to work
(DND, toolbars, context menus, persistence, etc.)

We might want to consider adding it to the build or offering it to the community
as a starting point for a better-thought-out native presentation.
Reassigning bugs in component areas that are changing ownership.
It might be worthwhile to look at this code to find out if it works and could be used by RCP applications.
Prakash is now responsible for watching bugs in the [RCP] component area.
I think that one is fixed with the support of CSS. See Bug 260408 for open issues on the CSS engine.
Lars, don't think this has anything todo with CSS. This was about a presentation which doesn't use CTabFolder but only native widgets. Can you confirm otherwise?

FWIW, I don't think that the interest in such a presentation is high these days. Thus, I suggest closing this as WONTFIX.
(In reply to Gunnar Wagenknecht from comment #14)
&gt; FWIW, I don't think that the interest in such a presentation is high these
&gt; days. Thus, I suggest closing this as WONTFIX.

OK, thanks for the clarification.</WithStack>
    <WithOutStack>This bug has been opened to track development and issues with the (currently
experimental) native Eclipse presentation.

See bug 53673 for details
Nick's comments from bug 53673:

Ed, the NativeTabPresentation looks alright at first glance on XP.  It isn't so 
hot elsewhere, e.g. on Win2000.  And it has other problems:

- it indicates which tab is active in each folder, but there's no indication of 
which view is active in the window
  - same problem for editors if editor workbook is split

- no close boxes or other easy affordance for closing views (more of an issue 
for editors than for views)
  - we'd have to use the right click menu on the tab
  - alternatively, double-click on the icon to close, but you'd want double-
click on the rest of the tab for maximize; while this is similar to how windows 
behave, I don't think it's a good idea to overload either single click or 
double-click on tabs since they tend to be small
    - this is not even possible currently with the SWT API since there's no way 
of getting the bounds of the tab items (presumably this could be fixed though)

To clarify, this was just an experiment and the UI team has no commitment to 
provide a native presentation implementation for 3.0.

Copied from bug 52685 comment #81:
There are some bugs with it (swoosh at the top is still there, can't drag 
views, editors don't show the filename on the tab).

Filed bug 54883 for the dragging issues.
Hey, I've got the latest integration build (I've also got M7 if it's only on
there), and I can't figure out how to access the native look.  Could you help me
out?
There is no way to enable it through the UI.  It's just an experiment, which
requires code changes to enable.
Some suggestions for the Native look:

1. Make the toolbar span the with of the view rather than right-aligning it. (On
GTK, you can see the border of all toolbars, making right-aligned toolbars look
silly)
2. Place the tabs on the bottom and give views a title bar. 



1. This is a bug in SWT/GTK which has apparently been recently fixed.  But we
could still do this anyway.
2. Agree.  We'd also want to put the toolbar in the titlebar if there's room.

FYI, I've written a rudimentary (but functinally complete) native presentation.

The presentation factory is in
org.eclipse.ui.internal.presentations.defaultpresentation.NativePresentationFactory

It's ugly and probably not native enough yet... but everything seems to work
(DND, toolbars, context menus, persistence, etc.)

We might want to consider adding it to the build or offering it to the community
as a starting point for a better-thought-out native presentation.
Reassigning bugs in component areas that are changing ownership.
It might be worthwhile to look at this code to find out if it works and could be used by RCP applications.
Prakash is now responsible for watching bugs in the [RCP] component area.
I think that one is fixed with the support of CSS. See Bug 260408 for open issues on the CSS engine.
Lars, don't think this has anything todo with CSS. This was about a presentation which doesn't use CTabFolder but only native widgets. Can you confirm otherwise?

FWIW, I don't think that the interest in such a presentation is high these days. Thus, I suggest closing this as WONTFIX.
(In reply to Gunnar Wagenknecht from comment #14)
&gt; FWIW, I don't think that the interest in such a presentation is high these
&gt; days. Thus, I suggest closing this as WONTFIX.

OK, thanks for the clarification.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54858" />
    <CreationDate amount="2004-03-15 13:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show Annotation on plugin.xml results in ClassCastException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098076">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.AnnotateView.openEditor(AnnotateView.java:330)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations(AnnotateView.java:120)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations(AnnotateView.java:84)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute(ShowAnnotationAction.java:87)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute(ShowAnnotationAction.java:41)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:52)</Frame>
          <Frame depth="6">org.eclipse.ui.actions.ActionDelegate.runWithEvent(ActionDelegate.java:71)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:263)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:502)</Frame>
          <Frame depth="10">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:435)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.progress.ProgressManager$2.run(ProgressManager.java:836)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:814)</Frame>
          <Frame depth="18">org.eclipse.team.internal.ui.actions.ProgressDialogRunnableContext$1.run(ProgressDialogRunnableContext.java:107)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.actions.ProgressDialogRunnableContext.run(ProgressDialogRunnableContext.java:98)</Frame>
          <Frame depth="20">org.eclipse.team.ui.TeamOperation.run(TeamOperation.java:69)</Frame>
          <Frame depth="21">org.eclipse.team.internal.ccvs.ui.actions.ReplaceWithRemoteAction.execute(ReplaceWithRemoteAction.java:49)</Frame>
          <Frame depth="22">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:52)</Frame>
          <Frame depth="23">org.eclipse.ui.actions.ActionDelegate.runWithEvent(ActionDelegate.java:71)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:263)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:502)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:435)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="35">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="39">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="41">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="42">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="43">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I did a Show Annotation on a remote plugin.xml file in the Resource History 
view and go the following ClassCastException. The resulting editor is the 
manifest editor so the error is probably relataed to selecting the proper text 
range. We should probably use a text editor in this case (if possible)

java.lang.ClassCastException
	at org.eclipse.team.internal.ccvs.ui.AnnotateView.openEditor
(AnnotateView.java:330)
	at org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations
(AnnotateView.java:120)
	at org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations
(AnnotateView.java:84)
	at 
org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute
(ShowAnnotationAction.java:87)
	at 
org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute
(ShowAnnotationAction.java:41)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run
(CVSAction.java:52)
	at org.eclipse.ui.actions.ActionDelegate.runWithEvent
(ActionDelegate.java:71)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:263)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)
	at org.eclipse.ui.internal.progress.ProgressManager$2.run
(ProgressManager.java:836)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile
(ProgressManager.java:814)
	at 
org.eclipse.team.internal.ui.actions.ProgressDialogRunnableContext$1.run
(ProgressDialogRunnableContext.java:107)
	at 
org.eclipse.team.internal.ui.actions.ProgressDialogRunnableContext.run
(ProgressDialogRunnableContext.java:98)
	at org.eclipse.team.ui.TeamOperation.run(TeamOperation.java:69)
	at 
org.eclipse.team.internal.ccvs.ui.actions.ReplaceWithRemoteAction.execute
(ReplaceWithRemoteAction.java:49)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run
(CVSAction.java:52)
	at org.eclipse.ui.actions.ActionDelegate.runWithEvent
(ActionDelegate.java:71)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:263)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Selecting any annotation range gives a simialr error.
Works now</WithStack>
    <WithOutStack>I did a Show Annotation on a remote plugin.xml file in the Resource History 
view and go the following ClassCastException. The resulting editor is the 
manifest editor so the error is probably relataed to selecting the proper text 
range. We should probably use a text editor in this case (if possible)


Selecting any annotation range gives a simialr error.
Works now</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54859" />
    <CreationDate amount="2004-03-15 13:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Breakpoint are not set as non-registered when deleted from the breakpoint view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If a breakpoint is delete from the breakpoint view,  the Breakpoint instance
continues to return 'true'.
oups, clicked too fast on 'commit'.

If a breakpoint is delete from the breakpoint view, isRegistered() on the
Breakpoint instance still returns 'true'.
Changed the default value is Breakpoint.isRegistered() to 'false', so when a
breakpoint is delete, and the marker is delete, isRegistered() returns 'false'.
Please verify, Darin W.
Verified.
*** Bug 57988 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>If a breakpoint is delete from the breakpoint view,  the Breakpoint instance
continues to return 'true'.
oups, clicked too fast on 'commit'.

If a breakpoint is delete from the breakpoint view, isRegistered() on the
Breakpoint instance still returns 'true'.
Changed the default value is Breakpoint.isRegistered() to 'false', so when a
breakpoint is delete, and the marker is delete, isRegistered() returns 'false'.
Please verify, Darin W.
Verified.
*** Bug 57988 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54860" />
    <CreationDate amount="2004-03-15 13:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] Widget is disposed from SynchronizeModelProvider$LabelUpdateJob</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098079">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2625)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2555)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:377)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:306)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:711)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:87)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:469)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:119)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1285)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1266)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1200)</Frame>
          <Frame depth="16">org.eclipse.team.ui.synchronize.viewers.SynchronizeModelProvider$LabelUpdateJob.runInUIThread(SynchronizeModelProvider.java:86)</Frame>
          <Frame depth="17">org.eclipse.ui.progress.UIJob$1.run(UIJob.java:90)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>build I20040310

Michael, you know that stack trace I was looking at when you came in just now...
It's coming from SynchronizeModelProvider$LabelUpdateJob.
What's strange is that the view is still open, and I'm only using a single 
window.
After this happened, the sync view has a tree, but is not showing any labels.

Does the sync view ever recreate its tree control, e.g. when switching to the 
form notification mode and back?  I did switch mode to incoming just after the 
sync refresh was started, and I previously had outgoing changes but no incoming 
changes.


org.eclipse.swt.SWTException: Widget is disposed
at org.eclipse.swt.SWT.error(SWT.java:2625)
at org.eclipse.swt.SWT.error(SWT.java:2555)
at org.eclipse.swt.widgets.Widget.error(Widget.java:377)
at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:306)
at org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:711)
at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:98)
at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run
(AbstractTreeViewer.java:87)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:469)
at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:119)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1285)
at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1266)
at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1200)
at 
org.eclipse.team.ui.synchronize.viewers.SynchronizeModelProvider$LabelUpdateJob.
runInUIThread(SynchronizeModelProvider.java:86)
at org.eclipse.ui.progress.UIJob$1.run(UIJob.java:90)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
Switching modes recreates the tree being displayed. If a label refresh was 
occurring at the same time as a mode switch, it is possible that the label 
update is trying to update the label of an item that is disposed.
I haven't been able to reproduce this but it appears to be a bug in the 
TreeViewer implementation. The sync model is asking for a label update of a 
model object and the tree view is mapping that to a widget that is disposed. I 
noticed that the StructuredViewer class keeps a map of objects to widgets. Is 
it possible that this map was not properly cleaned up after a refresh? Perhaps 
updates of objects whose widgets are disposed should just be ignored so that 
the other updates would still occur. 
*** Bug 54846 has been marked as a duplicate of this bug. ***
You are using a UIJob that can run even after the workbench closes. As a 
result you are sending the update to a closed viewer.

Switch to using a WorkbenchJob for any of your updates.
Tod, thanks for the tip. I have chanhged our code. However, Nick didn't say 
anything about closing the workbench. Reassigning to UI to consider this.
There is not much for us to do if you are updating a closed tree. Your 
labelUpdateJob might want to consider implementing shouldRun() in case you 
have pending updates that you want to run.

Please reopen if you have a case where the workbench is not handling its 
updates correctly
I was not shutting down, nor had I closed the view.
However, I did switch between modes which may have disposed the tree.

The SynchronizeModelProvider$UpdateJob should probably check if the viewer's
tree has been disposed.</WithStack>
    <WithOutStack>build I20040310

Michael, you know that stack trace I was looking at when you came in just now...
It's coming from SynchronizeModelProvider$LabelUpdateJob.
What's strange is that the view is still open, and I'm only using a single 
window.
After this happened, the sync view has a tree, but is not showing any labels.

Does the sync view ever recreate its tree control, e.g. when switching to the 
form notification mode and back?  I did switch mode to incoming just after the 
sync refresh was started, and I previously had outgoing changes but no incoming 
changes.



Switching modes recreates the tree being displayed. If a label refresh was 
occurring at the same time as a mode switch, it is possible that the label 
update is trying to update the label of an item that is disposed.
I haven't been able to reproduce this but it appears to be a bug in the 
TreeViewer implementation. The sync model is asking for a label update of a 
model object and the tree view is mapping that to a widget that is disposed. I 
noticed that the StructuredViewer class keeps a map of objects to widgets. Is 
it possible that this map was not properly cleaned up after a refresh? Perhaps 
updates of objects whose widgets are disposed should just be ignored so that 
the other updates would still occur. 
*** Bug 54846 has been marked as a duplicate of this bug. ***
You are using a UIJob that can run even after the workbench closes. As a 
result you are sending the update to a closed viewer.

Switch to using a WorkbenchJob for any of your updates.
Tod, thanks for the tip. I have chanhged our code. However, Nick didn't say 
anything about closing the workbench. Reassigning to UI to consider this.
There is not much for us to do if you are updating a closed tree. Your 
labelUpdateJob might want to consider implementing shouldRun() in case you 
have pending updates that you want to run.

Please reopen if you have a case where the workbench is not handling its 
updates correctly
I was not shutting down, nor had I closed the view.
However, I did switch between modes which may have disposed the tree.

The SynchronizeModelProvider$UpdateJob should probably check if the viewer's
tree has been disposed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54861" />
    <CreationDate amount="2004-03-15 13:25:00 -0500" />
    <DupId amount="173649" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Associating Show-in targets like object contributions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>This scenarion was originally mentioned by Nick in bug 30529.

The current perspective and current view are used to determine the list of 
views that show up in the Navigate/Show in menu. However, it may be desirable 
to have contributions to this list made by others as well, much like object 
contributions allow menus to be added to a view. For instance, it would be 
nice if the Resource History view appeared in the Show in menu of a Java 
perspective for resources mapped to CVS. As it is now, we contribute a Show in 
Resource History to the Team menu. This works fine but is inconsistent.
There are currently no plans to work on this although we would be happy to review patches.
See also bug 173649
The support to allow other contributions to Show In is provided by bug 173649


PW


*** This bug has been marked as a duplicate of bug 173649 ***</WithStack>
    <WithOutStack>This scenarion was originally mentioned by Nick in bug 30529.

The current perspective and current view are used to determine the list of 
views that show up in the Navigate/Show in menu. However, it may be desirable 
to have contributions to this list made by others as well, much like object 
contributions allow menus to be added to a view. For instance, it would be 
nice if the Resource History view appeared in the Show in menu of a Java 
perspective for resources mapped to CVS. As it is now, we contribute a Show in 
Resource History to the Team menu. This works fine but is inconsistent.
There are currently no plans to work on this although we would be happy to review patches.
See also bug 173649
The support to allow other contributions to Show In is provided by bug 173649


PW


*** This bug has been marked as a duplicate of bug 173649 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54862" />
    <CreationDate amount="2004-03-15 13:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Editor Mgmt] NPE in EditorWorkbook.updateControlBounds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098081">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The zoom suites have 8 test failures with the following trace


java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Fixed in head</WithStack>
    <WithOutStack>The zoom suites have 8 test failures with the following trace



Fixed in head</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54863" />
    <CreationDate amount="2004-03-15 13:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>[Editors] part activation not being fired</Summery>
    <Patches amount="0" />
    <Stacktraces amount="16">
      <Stacktrace timestamp="1437341098124">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason>expected:&lt;true&gt; but was:&lt;false&gt;</Reason>
        <Frames>
          <Frame depth="0">junit.framework.Assert.fail(Assert.java:47)</Frame>
          <Frame depth="1">junit.framework.Assert.failNotEquals(Assert.java:282)</Frame>
          <Frame depth="2">junit.framework.Assert.assertEquals(Assert.java:64)</Frame>
          <Frame depth="3">junit.framework.Assert.assertEquals(Assert.java:149)</Frame>
          <Frame depth="4">junit.framework.Assert.assertEquals(Assert.java:155)</Frame>
          <Frame depth="5">org.eclipse.ui.tests.api.IWorkbenchPageTest.testOpenEditor4(IWorkbenchPageTest.java:404)</Frame>
          <Frame depth="6">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="7">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="8">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="9">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="10">junit.framework.TestCase.runTest(TestCase.java:154)</Frame>
          <Frame depth="11">junit.framework.TestCase.runBare(TestCase.java:127)</Frame>
          <Frame depth="12">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="13">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="14">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="15">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="16">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="17">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="18">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="19">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="20">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="21">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="24">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="25">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="33">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason>expected:&lt;true&gt; but was:&lt;false&gt;</Reason>
        <Frames>
          <Frame depth="0">junit.framework.Assert.fail(Assert.java:47)</Frame>
          <Frame depth="1">junit.framework.Assert.failNotEquals(Assert.java:282)</Frame>
          <Frame depth="2">junit.framework.Assert.assertEquals(Assert.java:64)</Frame>
          <Frame depth="3">junit.framework.Assert.assertEquals(Assert.java:149)</Frame>
          <Frame depth="4">junit.framework.Assert.assertEquals(Assert.java:155)</Frame>
          <Frame depth="5">org.eclipse.ui.tests.api.IWorkbenchPageTest.testOpenEditor6(IWorkbenchPageTest.java:518)</Frame>
          <Frame depth="6">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="7">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="8">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="9">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="10">junit.framework.TestCase.runTest(TestCase.java:154)</Frame>
          <Frame depth="11">junit.framework.TestCase.runBare(TestCase.java:127)</Frame>
          <Frame depth="12">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="13">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="14">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="15">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="16">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="17">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="18">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="19">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="20">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="21">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="24">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="25">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="33">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason>expected:&lt;true&gt; but was:&lt;false&gt;</Reason>
        <Frames>
          <Frame depth="0">junit.framework.Assert.fail(Assert.java:47)</Frame>
          <Frame depth="1">junit.framework.Assert.failNotEquals(Assert.java:282)</Frame>
          <Frame depth="2">junit.framework.Assert.assertEquals(Assert.java:64)</Frame>
          <Frame depth="3">junit.framework.Assert.assertEquals(Assert.java:149)</Frame>
          <Frame depth="4">junit.framework.Assert.assertEquals(Assert.java:155)</Frame>
          <Frame depth="5">org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest.testOpenEditor4(IDeprecatedWorkbenchPageTest.java:322)</Frame>
          <Frame depth="6">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="7">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="8">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="9">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="10">junit.framework.TestCase.runTest(TestCase.java:154)</Frame>
          <Frame depth="11">junit.framework.TestCase.runBare(TestCase.java:127)</Frame>
          <Frame depth="12">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="13">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="14">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="15">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="16">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="17">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="18">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="19">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="20">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="21">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="24">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="25">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="33">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason>expected:&lt;true&gt; but was:&lt;false&gt;</Reason>
        <Frames>
          <Frame depth="0">junit.framework.Assert.fail(Assert.java:47)</Frame>
          <Frame depth="1">junit.framework.Assert.failNotEquals(Assert.java:282)</Frame>
          <Frame depth="2">junit.framework.Assert.assertEquals(Assert.java:64)</Frame>
          <Frame depth="3">junit.framework.Assert.assertEquals(Assert.java:149)</Frame>
          <Frame depth="4">junit.framework.Assert.assertEquals(Assert.java:155)</Frame>
          <Frame depth="5">org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest.testOpenEditor6(IDeprecatedWorkbenchPageTest.java:436)</Frame>
          <Frame depth="6">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="7">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="8">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="9">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="10">junit.framework.TestCase.runTest(TestCase.java:154)</Frame>
          <Frame depth="11">junit.framework.TestCase.runBare(TestCase.java:127)</Frame>
          <Frame depth="12">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="13">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="14">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="15">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="16">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="17">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="18">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="19">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="20">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="21">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="24">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="25">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="33">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098124">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.EditorWorkbook.updateControlBounds(EditorWorkbook.java:948)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.EditorWorkbook.setState(EditorWorkbook.java:926)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorWorkbook.setContainer(EditorWorkbook.java:897)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartSashContainer.dispose(PartSashContainer.java:270)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorPresentation.dispose(EditorPresentation.java:129)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1178)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:486)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:892)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:386)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:368)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:453)</Frame>
          <Frame depth="12">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:451)</Frame>
          <Frame depth="14">org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows(UITestCase.java:172)</Frame>
          <Frame depth="15">org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)</Frame>
          <Frame depth="16">org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)</Frame>
          <Frame depth="17">junit.framework.TestCase.runBare(TestCase.java:130)</Frame>
          <Frame depth="18">junit.framework.TestResult$1.protect(TestResult.java:106)</Frame>
          <Frame depth="19">junit.framework.TestResult.runProtected(TestResult.java:124)</Frame>
          <Frame depth="20">junit.framework.TestResult.run(TestResult.java:109)</Frame>
          <Frame depth="21">junit.framework.TestCase.run(TestCase.java:118)</Frame>
          <Frame depth="22">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="23">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="24">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="25">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="26">junit.framework.TestSuite.runTest(TestSuite.java:208)</Frame>
          <Frame depth="27">junit.framework.TestSuite.run(TestSuite.java:203)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:91)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:79)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:34)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030310 with platform ui loaded from HEAD

IWorkbenchPageTest and IDeprecatedWorkbenchPage test are both failing all 
suites that listen for part activation on an editor

They are all of the form:

testOpenEditor4(org.eclipse.ui.tests.api.IWorkbenchPageTest)
junit.framework.AssertionFailedError: expected:&lt;true&gt; but was:&lt;false&gt;
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:149)
	at junit.framework.Assert.assertEquals(Assert.java:155)
	at org.eclipse.ui.tests.api.IWorkbenchPageTest.testOpenEditor4
(IWorkbenchPageTest.java:404)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

testOpenEditor6(org.eclipse.ui.tests.api.IWorkbenchPageTest)
junit.framework.AssertionFailedError: expected:&lt;true&gt; but was:&lt;false&gt;
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:149)
	at junit.framework.Assert.assertEquals(Assert.java:155)
	at org.eclipse.ui.tests.api.IWorkbenchPageTest.testOpenEditor6
(IWorkbenchPageTest.java:518)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

testOpenEditor4(org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest)
junit.framework.AssertionFailedError: expected:&lt;true&gt; but was:&lt;false&gt;
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:149)
	at junit.framework.Assert.assertEquals(Assert.java:155)
	at 
org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest.testOpenEditor4
(IDeprecatedWorkbenchPageTest.java:322)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

testOpenEditor6(org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest)
junit.framework.AssertionFailedError: expected:&lt;true&gt; but was:&lt;false&gt;
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:149)
	at junit.framework.Assert.assertEquals(Assert.java:155)
	at 
org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest.testOpenEditor6
(IDeprecatedWorkbenchPageTest.java:436)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test4(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test5(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test6(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test1(org.eclipse.ui.tests.zoom.CloseEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.CloseEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test1(org.eclipse.ui.tests.zoom.HideViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.OpenEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test4(org.eclipse.ui.tests.zoom.OpenEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.ShowViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test3(org.eclipse.ui.tests.zoom.ShowViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test4(org.eclipse.ui.tests.zoom.ShowViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
This fails on Windows XP and Linux GTK. 
Chris: We've looked at this bug, and have no luck finding the actual change 
that caused it to happen.  Reassigning back to you.  Four tests have been 
commented out to allow the integration build to continue tomorrow.  Ask Nick, 
Stefan or I about this bug if you want more information. 
Ignore Comment #2.  Bug 54978 is the bug that covers what I describe.  This bug 
was fixed by removing some lines in BasicStackPresentation that activated the 
part.  Those lines were violating the interface spec anyway.</WithStack>
    <WithOutStack>20030310 with platform ui loaded from HEAD

IWorkbenchPageTest and IDeprecatedWorkbenchPage test are both failing all 
suites that listen for part activation on an editor

They are all of the form:

testOpenEditor4(org.eclipse.ui.tests.api.IWorkbenchPageTest)

testOpenEditor6(org.eclipse.ui.tests.api.IWorkbenchPageTest)

testOpenEditor4(org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest)

testOpenEditor6(org.eclipse.ui.tests.api.IDeprecatedWorkbenchPageTest)

test2(org.eclipse.ui.tests.zoom.ActivateTest)

test4(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test5(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test6(org.eclipse.ui.tests.zoom.ActivateTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test1(org.eclipse.ui.tests.zoom.CloseEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.CloseEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test1(org.eclipse.ui.tests.zoom.HideViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.OpenEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test4(org.eclipse.ui.tests.zoom.OpenEditorTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test2(org.eclipse.ui.tests.zoom.ShowViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test3(org.eclipse.ui.tests.zoom.ShowViewTest)
java.lang.NullPointerException
	at org.eclipse.ui.internal.EditorWorkbook.updateControlBounds
(EditorWorkbook.java:948)
	at org.eclipse.ui.internal.EditorWorkbook.setState
(EditorWorkbook.java:926)
	at org.eclipse.ui.internal.EditorWorkbook.setContainer
(EditorWorkbook.java:897)
	at org.eclipse.ui.internal.PartSashContainer.dispose
(PartSashContainer.java:270)
	at org.eclipse.ui.internal.EditorArea.dispose(EditorArea.java:109)
	at org.eclipse.ui.internal.EditorPresentation.dispose
(EditorPresentation.java:129)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:1178)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:486)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:892)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:386)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0
(WorkbenchWindow.java:368)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:453)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:451)
	at org.eclipse.ui.tests.util.UITestCase.closeAllTestWindows
(UITestCase.java:172)
	at org.eclipse.ui.tests.util.UITestCase.doTearDown(UITestCase.java:138)
	at org.eclipse.ui.tests.util.UITestCase.tearDown(UITestCase.java:126)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:410)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:294)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run
(UITestApplication.java:91)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1452)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1423)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:79)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.run
(UITestApplication.java:34)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)

test4(org.eclipse.ui.tests.zoom.ShowViewTest)

This fails on Windows XP and Linux GTK. 
Chris: We've looked at this bug, and have no luck finding the actual change 
that caused it to happen.  Reassigning back to you.  Four tests have been 
commented out to allow the integration build to continue tomorrow.  Ask Nick, 
Stefan or I about this bug if you want more information. 
Ignore Comment #2.  Bug 54978 is the bug that covers what I describe.  This bug 
was fixed by removing some lines in BasicStackPresentation that activated the 
part.  Those lines were violating the interface spec anyway.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54864" />
    <CreationDate amount="2004-03-15 13:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launch configuration contains two entries for one workspace project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On build 200403100800, I created a new workspace. I imported from HEAD on 
March 15, six projects. I create a new runtime workbench, click on the Plug-
ins tab, and seven projects are shown in my workspace. The runtime workbench 
will not start. See the appended screen-dump.
Created attachment 8575
workspace with six projects, launch configuration shows seven
Created attachment 8576
workspace with six projects, launch configuration shows seven
Created attachment 8577
after deleting org.eclipse.core.runtime project

After deleting the org.eclipse.core.runtime project from my workspace, things
got even more bizar.
Exit the workbench, delete the launch configuration, create a new one, and my 
runtime workbench loads again...
Chris, this one is certainly bizarre, but someone else just reported a similar 
problem.  In an attempt to try to find similarities between the two scenarios 
that might cause this, do you usually work with autobuild off?
autobuild is always on
Fixed.

Although I was not able to reproduce, I changed the workspace model manager 
implementation to make sure this never occurs.

Before:  Every time we detect a new plug-in project added to the workspace, we 
used to add it to an arraylist of models.  The bug reported here is a 
relatively rare case in which we actually have duplicates in the arraylist.  
Although we do a lot of checking to make sure dups never occur, it is obvious 
that it can happen.

Now:  We keep the workspace models in a hashmap, keyed by the project.  This 
way we could guarantee that there is 1-1 mapping between a plug-in project and 
a plug-in model.  Of course, if a project is renamed, we associate the plug-in 
model with the new project and remove the old key.
*** Bug 56892 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>On build 200403100800, I created a new workspace. I imported from HEAD on 
March 15, six projects. I create a new runtime workbench, click on the Plug-
ins tab, and seven projects are shown in my workspace. The runtime workbench 
will not start. See the appended screen-dump.
Created attachment 8575
workspace with six projects, launch configuration shows seven
Created attachment 8576
workspace with six projects, launch configuration shows seven
Created attachment 8577
after deleting org.eclipse.core.runtime project

After deleting the org.eclipse.core.runtime project from my workspace, things
got even more bizar.
Exit the workbench, delete the launch configuration, create a new one, and my 
runtime workbench loads again...
Chris, this one is certainly bizarre, but someone else just reported a similar 
problem.  In an attempt to try to find similarities between the two scenarios 
that might cause this, do you usually work with autobuild off?
autobuild is always on
Fixed.

Although I was not able to reproduce, I changed the workspace model manager 
implementation to make sure this never occurs.

Before:  Every time we detect a new plug-in project added to the workspace, we 
used to add it to an arraylist of models.  The bug reported here is a 
relatively rare case in which we actually have duplicates in the arraylist.  
Although we do a lot of checking to make sure dups never occur, it is obvious 
that it can happen.

Now:  We keep the workspace models in a hashmap, keyed by the project.  This 
way we could guarantee that there is 1-1 mapping between a plug-in project and 
a plug-in model.  Of course, if a project is renamed, we associate the plug-in 
model with the new project and remove the old key.
*** Bug 56892 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54865" />
    <CreationDate amount="2004-03-15 13:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search does not restrict the result  to the elements of the selected working set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Version I-200403100800

In a workspace, load some code.
Create a Java working set containing this code.
Open the java.io.File.
Do a Search &gt; References &gt; working set
Select the previously created working set

You'll notice that the result contains all the references of File in the jre
whereas it should be restricted to the selected working set.
Do you have the jre lin or the jre container on the classpath of the selected
working set? If yes, then it makes sense to get these matches.
Works as designed: the working set includes rt.jar.</WithStack>
    <WithOutStack>Version I-200403100800

In a workspace, load some code.
Create a Java working set containing this code.
Open the java.io.File.
Do a Search &gt; References &gt; working set
Select the previously created working set

You'll notice that the result contains all the references of File in the jre
whereas it should be restricted to the selected working set.
Do you have the jre lin or the jre container on the classpath of the selected
working set? If yes, then it makes sense to get these matches.
Works as designed: the working set includes rt.jar.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54866" />
    <CreationDate amount="2004-03-15 13:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Examples documentation for marker extension point</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The examples documentation for the marker extension point states:
 Following is an example of a builder configuration:
picky picky &lt;g&gt;
I just read it...I didn't write it :-)
Fixed.</WithStack>
    <WithOutStack>The examples documentation for the marker extension point states:
 Following is an example of a builder configuration:
picky picky &lt;g&gt;
I just read it...I didn't write it :-)
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54867" />
    <CreationDate amount="2004-03-15 13:40:00 -0500" />
    <DupId amount="50913" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Problems view - copy action does not copy contents</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When hitting "copy" in the context menu of the problems view it only copies a 
textual representation of the headers. Instead it should copy the contents of 
the selected problem items as well.


*** This bug has been marked as a duplicate of 50913 ***</WithStack>
    <WithOutStack>When hitting "copy" in the context menu of the problems view it only copies a 
textual representation of the headers. Instead it should copy the contents of 
the selected problem items as well.


*** This bug has been marked as a duplicate of 50913 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54868" />
    <CreationDate amount="2004-03-15 13:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Binary parser setting contentious for multi-platform teams</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>1. Create a Standard Make project. ("Hello world" will do.)</Line>
          <Line>2. Build it on Windows</Line>
          <Line>3. Set the binary parser to "Windows PE" so that you can debug easily,</Line>
          <Line>and you can browse object files if you're keen.</Line>
          <Line>4. Put the project in CVS.</Line>
          <Line>5. On Linux, open the project from CVS.</Line>
          <Line>6. Build the project on Linux.</Line>
          <Line>If this is a simple Hello World, you shouldn't need to change any files.</Line>
          <Line>Else, Platform-dependent libraries could be linked to separate Make Targets</Line>
          <Line>("myprog-win32" versus "myprog-linux").  The choice of targets</Line>
          <Line>in Make Targets View is correctly NOT stored in CVS.</Line>
          <Line>7. In the C/C++ Projects view, notice that the Binary Parser is</Line>
          <Line>incorrectly set; set it to "ELF" from the project properties.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I don't even know if this is a bug yet, but if and when
somebody develops a multi-platform target model, they should think
about team-development issues.  This one is minor, but I figure I
should log it:

Imagine half of your team develops on Windows and the other half
develops on Linux.

1. Create a Standard Make project. ("Hello world" will do.)
2. Build it on Windows
3. Set the binary parser to "Windows PE" so that you can debug easily,
and you can browse object files if you're keen.
4. Put the project in CVS.
5. On Linux, open the project from CVS.
6. Build the project on Linux.
If this is a simple Hello World, you shouldn't need to change any files.
Else, Platform-dependent libraries could be linked to separate Make Targets
("myprog-win32" versus "myprog-linux").  The choice of targets
in Make Targets View is correctly NOT stored in CVS.
7. In the C/C++ Projects view, notice that the Binary Parser is 
incorrectly set; set it to "ELF" from the project properties.

The .cdtproject file gets dirtied with the new Binary Parser setting.
The next time this developer delivers he will disturb the binary parser
setting for all the Windows developers on his team.

EXPECTED: The Binary Parser setting should be stored in the workspace, not
in the project.
I think this is fixed now, by virtue that Binary Parser is now
multi-selectable .</WithStack>
    <WithOutStack>I don't even know if this is a bug yet, but if and when
somebody develops a multi-platform target model, they should think
about team-development issues.  This one is minor, but I figure I
should log it:

Imagine half of your team develops on Windows and the other half
develops on Linux.

1. Create a Standard Make project. ("Hello world" will do.)
2. Build it on Windows
3. Set the binary parser to "Windows PE" so that you can debug easily,
and you can browse object files if you're keen.
4. Put the project in CVS.
5. On Linux, open the project from CVS.
6. Build the project on Linux.
If this is a simple Hello World, you shouldn't need to change any files.
Else, Platform-dependent libraries could be linked to separate Make Targets
("myprog-win32" versus "myprog-linux").  The choice of targets
in Make Targets View is correctly NOT stored in CVS.
7. In the C/C++ Projects view, notice that the Binary Parser is 
incorrectly set; set it to "ELF" from the project properties.

The .cdtproject file gets dirtied with the new Binary Parser setting.
The next time this developer delivers he will disturb the binary parser
setting for all the Windows developers on his team.

EXPECTED: The Binary Parser setting should be stored in the workspace, not
in the project.
I think this is fixed now, by virtue that Binary Parser is now
multi-selectable .</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54869" />
    <CreationDate amount="2004-03-15 13:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DebugException: Invalid stack frame</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098129">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Invalid stack frame</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:956)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getSourceName(JDIStackFrame.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getFullyQualfiedName(JavaSourceLocator.java:274)</Frame>
          <Frame depth="3">org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getSourceElements(JavaSourceLocator.java:205)</Frame>
          <Frame depth="4">org.eclipse.jdt.debug.ui.JavaUISourceLocator.findSourceElement(JavaUISourceLocator.java:164)</Frame>
          <Frame depth="5">org.eclipse.jdt.debug.ui.JavaUISourceLocator.getSourceElement(JavaUISourceLocator.java:145)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate.getProject(JavaWatchExpressionDelegate.java:165)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate.access$0(JavaWatchExpressionDelegate.java:155)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run(JavaWatchExpressionDelegate.java:114)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2507)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20040310 + code (incl. Debug) from HEAD

I am used to have log entries while debugging but today it got fille with:

!ENTRY org.eclipse.jdt.launching 4 4 Mrz 15, 2004 13:04:19.474
!MESSAGE Invalid stack frame
!STACK 1
org.eclipse.debug.core.DebugException: Invalid stack frame
	at
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:956)
	at
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getSourceName(JDIStackFrame.java:839)
	at
org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getFullyQualfiedName(JavaSourceLocator.java:274)
	at
org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getSourceElements(JavaSourceLocator.java:205)
	at
org.eclipse.jdt.debug.ui.JavaUISourceLocator.findSourceElement(JavaUISourceLocator.java:164)
	at
org.eclipse.jdt.debug.ui.JavaUISourceLocator.getSourceElement(JavaUISourceLocator.java:145)
	at
org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate.getProject(JavaWatchExpressionDelegate.java:165)
	at
org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate.access$0(JavaWatchExpressionDelegate.java:155)
	at
org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run(JavaWatchExpressionDelegate.java:114)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2507)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!SUBENTRY 1 org.eclipse.jdt.debug 4 4 Mrz 15, 2004 13:04:19.474
!MESSAGE Invalid stack frame
Note: it dumped almost 1MB in 3 hours.
I'm not see this, and the source lookup implementation has changed since this 
was a problem (i.e. the classes in the stack trace are no longer used).</WithStack>
    <WithOutStack>I20040310 + code (incl. Debug) from HEAD

I am used to have log entries while debugging but today it got fille with:

!ENTRY org.eclipse.jdt.launching 4 4 Mrz 15, 2004 13:04:19.474
!MESSAGE Invalid stack frame
!STACK 1

!SUBENTRY 1 org.eclipse.jdt.debug 4 4 Mrz 15, 2004 13:04:19.474
!MESSAGE Invalid stack frame
Note: it dumped almost 1MB in 3 hours.
I'm not see this, and the source lookup implementation has changed since this 
was a problem (i.e. the classes in the stack trace are no longer used).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54870" />
    <CreationDate amount="2004-03-15 13:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[performance] Search view is slow to delete results</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>After a search I ended up with 2200 results.
I displayed them sorted by "parent name".
From that I delete the first 2100 results by selecting them in the list and
pressing the delete key.
It turned out that the deletion last several seconds on a P4 with 768M of RAM.
I knew this was coming. Deletions are not batched at this time. 
After some recent work, I checked the behaviour again and now the delete is
almost immediate. Pascal, please reopen if you're still having problems.</WithStack>
    <WithOutStack>After a search I ended up with 2200 results.
I displayed them sorted by "parent name".
From that I delete the first 2100 results by selecting them in the list and
pressing the delete key.
It turned out that the deletion last several seconds on a P4 with 768M of RAM.
I knew this was coming. Deletions are not batched at this time. 
After some recent work, I checked the behaviour again and now the delete is
almost immediate. Pascal, please reopen if you're still having problems.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54871" />
    <CreationDate amount="2004-03-15 13:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Colors/Fonts] Colors and fonts should have an isEditable flag</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The XML for describing colors and fonts should have an isEditable flag.  Any
contribution with this set to false will not be shown in the configuration UI.
Fix in head.  By default all colors and fonts will be shown (the attribute is
optional).
Verified in 200403240800
Closed.</WithStack>
    <WithOutStack>The XML for describing colors and fonts should have an isEditable flag.  Any
contribution with this set to false will not be shown in the configuration UI.
Fix in head.  By default all colors and fonts will be shown (the attribute is
optional).
Verified in 200403240800
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54872" />
    <CreationDate amount="2004-03-15 13:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="TPTP.monitoring" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>GLA rules editor does not validate CBE rules.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>GLA rules editor does not validate CBE rules.

Consider validating the generated rules so that only well-formed CBEs may be 
generated from using the rules.

Validation is enforced by the CBE 1.0.1 specification and schema.
cannot be contained in M10
Can you be more specific on what type of validation do you envision ?
We have CBE validation at the CBE schema so that you can't create a CBE 
structure that doesn't match the schema 

Do you want the UI to validate the regular expressions created using the 
Substitution Rule element ? I thought that this step is covered by the debug 
capabilities we provide now
This feature is to validate only the Common Base Event component of the adapter 
rules.  When the user creates a substitution rule, the substitution pattern for 
the matched regular expression should be validated to determine if it breaks 
the Common Base Event schema.  This should be done for each substitution rule 
for each Common Base Event property.  I believe the current validation against 
the Common Base Event schema is only validating the Common Base Event output 
from running the adapter file against a test log.  As such, this will not 
validate all rules in the adapter file.  This validation step would require 
have well-formed regular expressions.


update component
Setting target to future so it doesn't show up in 4.2 feature query.
Due to lack of resources this enhancement request is resolved as WONTFIX. Please feel free to reopen if you consider it's a required enhancement.
Closing.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).</WithStack>
    <WithOutStack>GLA rules editor does not validate CBE rules.

Consider validating the generated rules so that only well-formed CBEs may be 
generated from using the rules.

Validation is enforced by the CBE 1.0.1 specification and schema.
cannot be contained in M10
Can you be more specific on what type of validation do you envision ?
We have CBE validation at the CBE schema so that you can't create a CBE 
structure that doesn't match the schema 

Do you want the UI to validate the regular expressions created using the 
Substitution Rule element ? I thought that this step is covered by the debug 
capabilities we provide now
This feature is to validate only the Common Base Event component of the adapter 
rules.  When the user creates a substitution rule, the substitution pattern for 
the matched regular expression should be validated to determine if it breaks 
the Common Base Event schema.  This should be done for each substitution rule 
for each Common Base Event property.  I believe the current validation against 
the Common Base Event schema is only validating the Common Base Event output 
from running the adapter file against a test log.  As such, this will not 
validate all rules in the adapter file.  This validation step would require 
have well-formed regular expressions.


update component
Setting target to future so it doesn't show up in 4.2 feature query.
Due to lack of resources this enhancement request is resolved as WONTFIX. Please feel free to reopen if you consider it's a required enhancement.
Closing.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54873" />
    <CreationDate amount="2004-03-15 13:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Log record is not selected in Log Interactions view when correlating from Log View.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>- Open a log file in the Log View: right click on the corresponding host or</Line>
          <Line>monitor and follow the menu "Show View"-&gt;"Log View".</Line>
          <Line>- Right click on a log record and select each of the 'Correlation By____' menu</Line>
          <Line>items (i.e. 4 in total) one at the time and make sure the Log Interactions View</Line>
          <Line>opens, the corresponding record is selected in the Log Interactions View and</Line>
          <Line>the log records are colored according to the severity of the record.</Line>
          <Line>if the log record selected in log view does not contains correlation with the</Line>
          <Line>correlation scheam selected, it will not be shown in the log interaction view,</Line>
          <Line>and as a result, no selection will be made in the log interaction view.</Line>
          <Line>by default, log interaction view shows log record with correlation only, but</Line>
          <Line>this settting can be changed in the Filter dialog(pull down manu of log</Line>
          <Line>interaction view).</Line>
          <Line>In particular case, there existed correlation (by time) between the logs.  See</Line>
          <Line>the enclosed log files for further detail.</Line>
          <Line>Created attachment 8590</Line>
          <Line>Sample logs</Line>
          <Line>fixed in 1.3 and HEAD(3.0)</Line>
          <Line>Closing.</Line>
          <Line>house keeping</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Log record is not selected in Log Interactions view when correlating from Log 
View.

To Reproduce:
- Open a log file in the Log View: right click on the corresponding host or 
monitor and follow the menu "Show View"-&gt;"Log View".
- Right click on a log record and select each of the 'Correlation By____' menu 
items (i.e. 4 in total) one at the time and make sure the Log Interactions View 
opens, the corresponding record is selected in the Log Interactions View and 
the log records are colored according to the severity of the record.
if the log record selected in log view does not contains correlation with the 
correlation scheam selected, it will not be shown in the log interaction view, 
and as a result, no selection will be made in the log interaction view.
by default, log interaction view shows log record with correlation only, but 
this settting can be changed in the Filter dialog(pull down manu of log 
interaction view).
In particular case, there existed correlation (by time) between the logs.  See 
the enclosed log files for further detail.
Created attachment 8590
Sample logs
fixed in 1.3 and HEAD(3.0)
Closing.
house keeping</WithStack>
    <WithOutStack>Log record is not selected in Log Interactions view when correlating from Log 
View.

To Reproduce:
- Open a log file in the Log View: right click on the corresponding host or 
monitor and follow the menu "Show View"-&gt;"Log View".
- Right click on a log record and select each of the 'Correlation By____' menu 
items (i.e. 4 in total) one at the time and make sure the Log Interactions View 
opens, the corresponding record is selected in the Log Interactions View and 
the log records are colored according to the severity of the record.
if the log record selected in log view does not contains correlation with the 
correlation scheam selected, it will not be shown in the log interaction view, 
and as a result, no selection will be made in the log interaction view.
by default, log interaction view shows log record with correlation only, but 
this settting can be changed in the Filter dialog(pull down manu of log 
interaction view).
In particular case, there existed correlation (by time) between the logs.  See 
the enclosed log files for further detail.
Created attachment 8590
Sample logs
fixed in 1.3 and HEAD(3.0)
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54874" />
    <CreationDate amount="2004-03-15 14:09:00 -0500" />
    <DupId amount="54786" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>'Enter' does not enter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. on the scrapbook editor (or in an editor while debugging) select a piece of</Line>
          <Line>code and then Display ==&gt; popup comes up</Line>
          <Line>2. switch to another window and start to edit</Line>
          <Line>==&gt; you can enter characters but the return/enter key is blocked by this little</Line>
          <Line>popup which stays on-top of this other window.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: I-20040310

Every once in a while, (and more often than I like), pressing Enter in the 
Java editor/Text editor does not work.  I have to close all editors and then 
reopen at least one before 'Enter' starts working again.

It is not restricted to 'Enter'.  Other Ctrl-* combinations are affected. 
So it could well be a keybindings UI bug, not a Text bug.
Suspect keybinding service. Note: I had the same problem also once - in my case
it seemed to be connected with having more than one window open. Wassim, do you
also work using multiple workbench windows?
I found at least one pattern:
1. on the scrapbook editor (or in an editor while debugging) select a piece of
code and then Display ==&gt; popup comes up
2. switch to another window and start to edit
==&gt; you can enter characters but the return/enter key is blocked by this little
popup which stays on-top of this other window.

This little popup must either disappear when the initiating editor looses focus
or must not eat key strokes in a mixed way i.e. allow to type chars but not
allow to use the enter key. I vote for the first approach since this little
window being on top of everything else is quite annoying: it even stays on top
of other applications.

There might also be cases where the popup gets hidden (setVisible(false))
without releasing the keybinding context and hence grapping the enter key.

If you use Inspect in above test case instead of Display and then right-click
into the (scrapbook) editor ==&gt; popup closes and enter key no longer works.

This should be fixed in today's I-build.

*** This bug has been marked as a duplicate of 54786 ***
Nice investigative work Dani.  I'm certainly a huge "Inspect" enthusiast but 
failed to detect this pattern.</WithStack>
    <WithOutStack>Build: I-20040310

Every once in a while, (and more often than I like), pressing Enter in the 
Java editor/Text editor does not work.  I have to close all editors and then 
reopen at least one before 'Enter' starts working again.

It is not restricted to 'Enter'.  Other Ctrl-* combinations are affected. 
So it could well be a keybindings UI bug, not a Text bug.
Suspect keybinding service. Note: I had the same problem also once - in my case
it seemed to be connected with having more than one window open. Wassim, do you
also work using multiple workbench windows?
I found at least one pattern:
1. on the scrapbook editor (or in an editor while debugging) select a piece of
code and then Display ==&gt; popup comes up
2. switch to another window and start to edit
==&gt; you can enter characters but the return/enter key is blocked by this little
popup which stays on-top of this other window.

This little popup must either disappear when the initiating editor looses focus
or must not eat key strokes in a mixed way i.e. allow to type chars but not
allow to use the enter key. I vote for the first approach since this little
window being on top of everything else is quite annoying: it even stays on top
of other applications.

There might also be cases where the popup gets hidden (setVisible(false))
without releasing the keybinding context and hence grapping the enter key.

If you use Inspect in above test case instead of Display and then right-click
into the (scrapbook) editor ==&gt; popup closes and enter key no longer works.

This should be fixed in today's I-build.

*** This bug has been marked as a duplicate of 54786 ***
Nice investigative work Dani.  I'm certainly a huge "Inspect" enthusiast but 
failed to detect this pattern.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54875" />
    <CreationDate amount="2004-03-15 14:12:00 -0500" />
    <DupId amount="55458" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] Third editor state is gone</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The third editor state "active with no focus" seems to have disappeared.

In 2.1.3 when an editor was active but did not have focus its tab was painted
white (one of the gradient values).  You can use
ITheme.getColorRegistry().get(IWorkbenchThemeConstants.INACTIVE_TAB_BG_START) to
obtain this color (or its theme specific equivilent).


*** This bug has been marked as a duplicate of 55458 ***</WithStack>
    <WithOutStack>The third editor state "active with no focus" seems to have disappeared.

In 2.1.3 when an editor was active but did not have focus its tab was painted
white (one of the gradient values).  You can use
ITheme.getColorRegistry().get(IWorkbenchThemeConstants.INACTIVE_TAB_BG_START) to
obtain this color (or its theme specific equivilent).


*** This bug has been marked as a duplicate of 55458 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54876" />
    <CreationDate amount="2004-03-15 14:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>RAServer crashes after re-attaching the agent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>After re-attaching to a runinng java program, the RAServer job exits when the 
java program dies.
This is a timing-related bug. If the agent exits before the data collection 
engine sends a start monitoring message, the ra_forwardMessage() call will fail 
(since the agent handle is now NULL) and a SIGSEGV is raised. This can be 
easily reproducible by terminating the java program immediately after a start 
monitoring operation.
Fix checked into both 1.3 and HEAD stream.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>After re-attaching to a runinng java program, the RAServer job exits when the 
java program dies.
This is a timing-related bug. If the agent exits before the data collection 
engine sends a start monitoring message, the ra_forwardMessage() call will fail 
(since the agent handle is now NULL) and a SIGSEGV is raised. This can be 
easily reproducible by terminating the java program immediately after a start 
monitoring operation.
Fix checked into both 1.3 and HEAD stream.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54877" />
    <CreationDate amount="2004-03-15 14:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GLA does not handle invalid configurations properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Different number of contexts</Line>
          <Line>2) Different number of components in a context</Line>
          <Line>3) ContextInstance not having a corresponding Context</Line>
          <Line>4) component in ContextInstance not having a corresponding component in the</Line>
          <Line>Context.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The GLA does not handle invalid configuration files properly.  Sometimes a 
NullPointerException is thrown the GLA when an invalid configuration file is 
processed.  The GLA should handle mismatches between the Contexts and 
Configuration sections of the adapter file by throwing AdapterInvalidConfig 
exceptions.  Here are some mismatches that should be handled:

1) Different number of contexts
2) Different number of components in a context
3) ContextInstance not having a corresponding Context
4) component in ContextInstance not having a corresponding component in the 
Context.

When trying to run a context in the editor with one of these conditions, no 
error messages are displayed and no output is shown in the bottom panes so the 
user doesn't know what happened.
Changes were made to Controller.setComponentConfigurations() to detect these 
situations and throw an AdapterInvalidConfig exception.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The GLA does not handle invalid configuration files properly.  Sometimes a 
NullPointerException is thrown the GLA when an invalid configuration file is 
processed.  The GLA should handle mismatches between the Contexts and 
Configuration sections of the adapter file by throwing AdapterInvalidConfig 
exceptions.  Here are some mismatches that should be handled:

1) Different number of contexts
2) Different number of components in a context
3) ContextInstance not having a corresponding Context
4) component in ContextInstance not having a corresponding component in the 
Context.

When trying to run a context in the editor with one of these conditions, no 
error messages are displayed and no output is shown in the bottom panes so the 
user doesn't know what happened.
Changes were made to Controller.setComponentConfigurations() to detect these 
situations and throw an AdapterInvalidConfig exception.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54878" />
    <CreationDate amount="2004-03-15 14:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Drop down coolbar/toolbar menus and combo boxes take too many clicks</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Drop down menus: Open the SWT Controls example and select the Coolbar or 
Toolbar example. Press and hold the mouse down on one of the buttons that has 
a dropdown menu. What should happen is that the menu should come up, and as 
you move the mouse it should highlight menu items. When you release the mouse, 
it should select that menu item. However that's not what happens. SWT requires 
that you click and release the mouse button on the dropdown menu control, then 
click and release the mouse button on the item to select.

Combo boxes: Same problem. Open the Combo box SWT example. Press and hold the 
mouse on the combo menu (the triangle button to the right of the combo value). 
You should be able to see the menu of values immediately, move the mouse down 
to the one you want, and release the mouse button. However that's not what 
happens. SWT requires that you click and release the mouse button on the combo 
drop-down menu, then click and release the mouse button on the item to select.

Another example: Open the plug-in manifest editor on any plug-in, go to the 
extensions page, open up the properties view for any extension. Select some 
property that has a list of possible values. It takes about three clicks to 
select the value you want, when it should be a simple task of click-drag-let 
go.

The example that annoys me the most that prompted me to write this is the 
dropdown toolbar menu for launching External Tools. I have to click on the 
arrow and let go (being careful not to click on the button next to the arrow 
which will just launch the last tool), then look down the list and click on 
the tool I want and let go. I alternate between two external tools, and do 
this operation dozens of times a day. The frustration finally built up into a 
bug report. :)

This is on Windows XP. There is some inconsistency about how these controls 
work in native applications (for example I notice that in this web page on IE, 
the combo boxes require the mouse down/up,move,down/up sequence). However many 
applications that I'm used to (for example MS Outlook) work the way that I've 
described it should work above. Also combo boxes and dropdown menus that occur 
in toolbars / coolbars seem to universally NOT require the extra steps in all 
the apps I've tested. For them it's just click-drag-release, just like top 
level menus.

Top level menus, even in Eclipse, support both ways of working. I think 
supporting the extra steps is important for accessibility, but supporting the 
quicker way too would be good.
I just did this with the ControlExample and it seems to work exactly the way 
you want for menus and combos.  As for the plug-in manifest case, I believe a 
CCombo is being used there and there is little we can do to solve this in a 
portable way.  Basically, we would need to send a fake operating system mouse 
down event to the list or some other hack to get it into "grab mode" and 
faking/forwarding operating system events is not part of SWT (yet?).

Sorry but I have to close this as WORKSFORME.  Feel free to reopen this and 
change the title to something like "CCombo takes too many clicks" to reflect 
the fact that the problem is in CCombo if you can confirm it.  Thanks.
WRT the WORKSFORME.  Could it be a 2.1.x vs 3.0 issue?
I'm running 3.0 I20040317. But I just tried 2.1 and it's doing the same thing.

Are you saying that I have something configured wrong in XP so that my 
dropdown menus are behaving differently than your dropdown menus? When you 
click on the Run, Debug, or Run External Tools dropdown menu in the toolbar, 
keep the mouse button held down while you move to your selection, then let go, 
that it runs that action? If so, what OS version and JDK version are you 
running? I'm using XP SP1, and Sun JDK 1.4.2_04.

I'm going to get someone else to check this in case I misunderstood.  CAR?  
Does XP behave the same for you?
Sorry, Steve - he's right. I'm surprised to see that MS Word, etc., do work 
this way - I thought that style of selection only worked on the Macintosh &lt;g&gt;. 
I guess I just never use it myself.

Anyhow, our top-level menus work both ways (so nothing to fix there), but our 
combos don't even pretend to work that way (they scroll, but they don't 
highlight), and our drop-downs in toolbars and coolbars highlight the item 
while dragging, but they do nothing on mouse up.
I think you have to show me.  I'm too tired to understand.
Fixed (menus only) &gt; 20040318

I can't and shouldn't fix Combo (the native combo box).  That's the platform 
behavior.  Fixing CCombo is not possible without new and dangerous API.  Do 
you want to reopen this against CCombo or let it go?
Just to clarify... he fixed it for menus that drop down from toolbar drop-down 
buttons. In other words, your most annoying use case (launch external tool) 
has been fixed.

The combos that you see in MS Word (magnification, style, font, point size, 
etc) are not platform combos. Just for fun, I inspected the class name of 
those 'combos', and they are called "OfficeDropdown".

The reason CCombo would be hard to fix is that it drops down a platform 
ListBox control. The ListBox is waiting for mouse down, but the mouse is 
already down. So we would have to fake mouse down, and we don't currently do 
that.
This fix sounds fine. As far as CCombo goes, I didn't realize the property 
sheet was using that. Could the property sheet use the same control you're 
using in the toolbar? If so I can open a new bugzilla for that, but if not, 
it's probably best to leave it alone.
The thing in the ToolBar is a combination of a drop down tool item and a menu.
*** Bug 47068 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Drop down menus: Open the SWT Controls example and select the Coolbar or 
Toolbar example. Press and hold the mouse down on one of the buttons that has 
a dropdown menu. What should happen is that the menu should come up, and as 
you move the mouse it should highlight menu items. When you release the mouse, 
it should select that menu item. However that's not what happens. SWT requires 
that you click and release the mouse button on the dropdown menu control, then 
click and release the mouse button on the item to select.

Combo boxes: Same problem. Open the Combo box SWT example. Press and hold the 
mouse on the combo menu (the triangle button to the right of the combo value). 
You should be able to see the menu of values immediately, move the mouse down 
to the one you want, and release the mouse button. However that's not what 
happens. SWT requires that you click and release the mouse button on the combo 
drop-down menu, then click and release the mouse button on the item to select.

Another example: Open the plug-in manifest editor on any plug-in, go to the 
extensions page, open up the properties view for any extension. Select some 
property that has a list of possible values. It takes about three clicks to 
select the value you want, when it should be a simple task of click-drag-let 
go.

The example that annoys me the most that prompted me to write this is the 
dropdown toolbar menu for launching External Tools. I have to click on the 
arrow and let go (being careful not to click on the button next to the arrow 
which will just launch the last tool), then look down the list and click on 
the tool I want and let go. I alternate between two external tools, and do 
this operation dozens of times a day. The frustration finally built up into a 
bug report. :)

This is on Windows XP. There is some inconsistency about how these controls 
work in native applications (for example I notice that in this web page on IE, 
the combo boxes require the mouse down/up,move,down/up sequence). However many 
applications that I'm used to (for example MS Outlook) work the way that I've 
described it should work above. Also combo boxes and dropdown menus that occur 
in toolbars / coolbars seem to universally NOT require the extra steps in all 
the apps I've tested. For them it's just click-drag-release, just like top 
level menus.

Top level menus, even in Eclipse, support both ways of working. I think 
supporting the extra steps is important for accessibility, but supporting the 
quicker way too would be good.
I just did this with the ControlExample and it seems to work exactly the way 
you want for menus and combos.  As for the plug-in manifest case, I believe a 
CCombo is being used there and there is little we can do to solve this in a 
portable way.  Basically, we would need to send a fake operating system mouse 
down event to the list or some other hack to get it into "grab mode" and 
faking/forwarding operating system events is not part of SWT (yet?).

Sorry but I have to close this as WORKSFORME.  Feel free to reopen this and 
change the title to something like "CCombo takes too many clicks" to reflect 
the fact that the problem is in CCombo if you can confirm it.  Thanks.
WRT the WORKSFORME.  Could it be a 2.1.x vs 3.0 issue?
I'm running 3.0 I20040317. But I just tried 2.1 and it's doing the same thing.

Are you saying that I have something configured wrong in XP so that my 
dropdown menus are behaving differently than your dropdown menus? When you 
click on the Run, Debug, or Run External Tools dropdown menu in the toolbar, 
keep the mouse button held down while you move to your selection, then let go, 
that it runs that action? If so, what OS version and JDK version are you 
running? I'm using XP SP1, and Sun JDK 1.4.2_04.

I'm going to get someone else to check this in case I misunderstood.  CAR?  
Does XP behave the same for you?
Sorry, Steve - he's right. I'm surprised to see that MS Word, etc., do work 
this way - I thought that style of selection only worked on the Macintosh &lt;g&gt;. 
I guess I just never use it myself.

Anyhow, our top-level menus work both ways (so nothing to fix there), but our 
combos don't even pretend to work that way (they scroll, but they don't 
highlight), and our drop-downs in toolbars and coolbars highlight the item 
while dragging, but they do nothing on mouse up.
I think you have to show me.  I'm too tired to understand.
Fixed (menus only) &gt; 20040318

I can't and shouldn't fix Combo (the native combo box).  That's the platform 
behavior.  Fixing CCombo is not possible without new and dangerous API.  Do 
you want to reopen this against CCombo or let it go?
Just to clarify... he fixed it for menus that drop down from toolbar drop-down 
buttons. In other words, your most annoying use case (launch external tool) 
has been fixed.

The combos that you see in MS Word (magnification, style, font, point size, 
etc) are not platform combos. Just for fun, I inspected the class name of 
those 'combos', and they are called "OfficeDropdown".

The reason CCombo would be hard to fix is that it drops down a platform 
ListBox control. The ListBox is waiting for mouse down, but the mouse is 
already down. So we would have to fake mouse down, and we don't currently do 
that.
This fix sounds fine. As far as CCombo goes, I didn't realize the property 
sheet was using that. Could the property sheet use the same control you're 
using in the toolbar? If so I can open a new bugzilla for that, but if not, 
it's probably best to leave it alone.
The thing in the ToolBar is a combination of a drop down tool item and a menu.
*** Bug 47068 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54879" />
    <CreationDate amount="2004-03-15 14:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Hosts tab UI replaces "localhost" with the actual hostname</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- Create a new "External Java Application" launch configuration.</Line>
          <Line>- Select localhost:10002 as the host.</Line>
          <Line>- Apply, and close the dialog.</Line>
          <Line>- Reopen the dialog and go back to that configuration.</Line>
          <Line>- In the hosts tab, "localhost" was replaced with your actual hostname</Line>
          <Line>(i.e. "entremont" in my case).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>WSWB 3.0M8 Integration I20040304-200403081720
Hyades 3.0.0_20040309_1448
Win2k

Please assign to me for M8, I have the fix ready.

- Create a new "External Java Application" launch configuration.
- Select localhost:10002 as the host.
- Apply, and close the dialog.
- Reopen the dialog and go back to that configuration.
- In the hosts tab, "localhost" was replaced with your actual hostname 
(i.e. "entremont" in my case).

This is somewhat confusing. We should simply use localhost.
Fix for M8
Fixed.
Closing bug.
house keeping</WithStack>
    <WithOutStack>WSWB 3.0M8 Integration I20040304-200403081720
Hyades 3.0.0_20040309_1448
Win2k

Please assign to me for M8, I have the fix ready.

- Create a new "External Java Application" launch configuration.
- Select localhost:10002 as the host.
- Apply, and close the dialog.
- Reopen the dialog and go back to that configuration.
- In the hosts tab, "localhost" was replaced with your actual hostname 
(i.e. "entremont" in my case).

This is somewhat confusing. We should simply use localhost.
Fix for M8
Fixed.
Closing bug.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54880" />
    <CreationDate amount="2004-03-15 14:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>RFE: CVS project checkout should offer "No to all" for overwrites</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When checking out multiple projects, if a project already exists in the
workspace, the checkout operation asks me whether to proceed with Yes, Yes To
All, No, and Cancel.  No aborts the operation.  It would be nice to have a "No
to All" option so that it would proceed to check out projects that don't exist
in the workspace.  

This commonly happens to me when I check out module A and then later want to
check out module B that includes projects from A, such as
dev.eclipse.org/home/eclipse's "jdt-core" and "jdt" modules.
This was added in 3.2.
Closing</WithStack>
    <WithOutStack>When checking out multiple projects, if a project already exists in the
workspace, the checkout operation asks me whether to proceed with Yes, Yes To
All, No, and Cancel.  No aborts the operation.  It would be nice to have a "No
to All" option so that it would proceed to check out projects that don't exist
in the workspace.  

This commonly happens to me when I check out module A and then later want to
check out module B that includes projects from A, such as
dev.eclipse.org/home/eclipse's "jdt-core" and "jdt" modules.
This was added in 3.2.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54881" />
    <CreationDate amount="2004-03-15 14:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Correlations are missing in UML2SD Log Interaction view.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Import the access, error and WAS trace logs attached, and create UML &amp; Time 
correlation. there should have correlations between access and trace logs, but 
they are not shown in the UML2SD log interaction view. correlation proxy 
contains the correlations but they are not shown in view. 

Reference IIOSB 32014
Created attachment 8579
access log
Created attachment 8580
error log
Created attachment 8581
WAS trace log
Fix for M8
The UML2SD view does not draw any 'passage' ie. message that is passing the 
viewpane from a source node outside of the viewpane to a target node outside of 
the view pane. 
For example, when there is a correlation(message) from a node at the very top 
of the graph, to a target node at the very bottom of another lifeline in the 
same frame, let's say you can only view one of the 2 nodes of the message at 
one time(due to the size of the viewpane), you will see a message from the 
source node towards the bottom of the view, but as you scroll the viewpane 
downward and as the source graph is out of the visiable pane, the message 
disappears, and when u keep scrolling down to a position where the target node 
shows up, there is no message targeting the target node shown.

Besides, there are cases when messages are not drawn in the view when you 
scroll the graph, but shown when you scroll in a different direction.

If you want to get a live demo, I can set up a NetMeeting with you.

Thanks.

Asynchronous message height was not taken into account when performing drawing 
optimisation 
Has the fix been dropped to Hyades 1.3 and 3.0 ?
Refresh the workspace and still seeing the problem in the log interaction view
Asynchronous messages drawing optimisation has been removed (only for that kind 
of message)
Opimisation will be added back in the next release (rework is needed for some 
special cases)

Delivered in branch 1.3 and in HEAD
closing bug
house keeping</WithStack>
    <WithOutStack>Import the access, error and WAS trace logs attached, and create UML &amp; Time 
correlation. there should have correlations between access and trace logs, but 
they are not shown in the UML2SD log interaction view. correlation proxy 
contains the correlations but they are not shown in view. 

Reference IIOSB 32014
Created attachment 8579
access log
Created attachment 8580
error log
Created attachment 8581
WAS trace log
Fix for M8
The UML2SD view does not draw any 'passage' ie. message that is passing the 
viewpane from a source node outside of the viewpane to a target node outside of 
the view pane. 
For example, when there is a correlation(message) from a node at the very top 
of the graph, to a target node at the very bottom of another lifeline in the 
same frame, let's say you can only view one of the 2 nodes of the message at 
one time(due to the size of the viewpane), you will see a message from the 
source node towards the bottom of the view, but as you scroll the viewpane 
downward and as the source graph is out of the visiable pane, the message 
disappears, and when u keep scrolling down to a position where the target node 
shows up, there is no message targeting the target node shown.

Besides, there are cases when messages are not drawn in the view when you 
scroll the graph, but shown when you scroll in a different direction.

If you want to get a live demo, I can set up a NetMeeting with you.

Thanks.

Asynchronous message height was not taken into account when performing drawing 
optimisation 
Has the fix been dropped to Hyades 1.3 and 3.0 ?
Refresh the workspace and still seeing the problem in the log interaction view
Asynchronous messages drawing optimisation has been removed (only for that kind 
of message)
Opimisation will be added back in the next release (rework is needed for some 
special cases)

Delivered in branch 1.3 and in HEAD
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54882" />
    <CreationDate amount="2004-03-15 14:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Fonts] Font definition needs a getBold and getItalic</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need to be able to get the bold and italic version of a font for use in 
progress among other things. This needs to be wiped out when the definition 
changes.

Kim please point me at where to start.
You're going to want to add an attribute to fontDefinition in the themes
extension point (style)?

You then read this attribute in ThemeRegistryReader.readFont() and pass it along
to FontDefinition.


In ThemeElementHelper.installFont you'll need to add code to the second/third
case statements to modify the defaultFont variable based on the value of that
attribute (if any).

After that everything should take care of itself.

Actually, come to think of it, that was just the easy part. :)

You'll also need to change
ColorsAndFontsPreferencePage.setDescendantRegistryValues(FontDefinition,
FontData) react to changes to
parent fonts.  Ie: instead of everything in the if(isDefault()) block working on
datas, it needs to work on a derivative of datas in the case of a modified font).

isDefault(FontDefinition) will also need changing.  In the else that matches the
two if (definition.getValue() != null) blocks you'll need to modify the
Arrays.equals() statement to ensure that the modified font is equal to the
parent font.

The logic in this class is fairly arcane... I can give you a hand with this bit
when the time comes.
Just to sum up the conversation we had at the end of the day yesterday:

Everything I said above is bunk.  BUNK!  This problem can be very easily
addressed in the JFace registries directly by adding getItalic(String) and
getBold(String) methods.
Fixed in build &gt;20040316
Marking closed</WithStack>
    <WithOutStack>We need to be able to get the bold and italic version of a font for use in 
progress among other things. This needs to be wiped out when the definition 
changes.

Kim please point me at where to start.
You're going to want to add an attribute to fontDefinition in the themes
extension point (style)?

You then read this attribute in ThemeRegistryReader.readFont() and pass it along
to FontDefinition.


In ThemeElementHelper.installFont you'll need to add code to the second/third
case statements to modify the defaultFont variable based on the value of that
attribute (if any).

After that everything should take care of itself.

Actually, come to think of it, that was just the easy part. :)

You'll also need to change
ColorsAndFontsPreferencePage.setDescendantRegistryValues(FontDefinition,
FontData) react to changes to
parent fonts.  Ie: instead of everything in the if(isDefault()) block working on
datas, it needs to work on a derivative of datas in the case of a modified font).

isDefault(FontDefinition) will also need changing.  In the else that matches the
two if (definition.getValue() != null) blocks you'll need to modify the
Arrays.equals() statement to ensure that the modified font is equal to the
parent font.

The logic in this class is fairly arcane... I can give you a hand with this bit
when the time comes.
Just to sum up the conversation we had at the end of the day yesterday:

Everything I said above is bunk.  BUNK!  This problem can be very easily
addressed in the JFace registries directly by adding getItalic(String) and
getBold(String) methods.
Fixed in build &gt;20040316
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54883" />
    <CreationDate amount="2004-03-15 14:59:00 -0500" />
    <DupId amount="222120" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Please add API to determine the bounds of a TabItem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Eclipse UI team is experimenting with an all-native Eclipse renderer. In
order to get drag and drop working, we need to determine which tab of a
TabFolder we are currently dragging from or dragging over, and we need to
determine where to draw the affordance for drag-over.

Adding a getBounds() method to TabItem would solve all three problems.
Ideally it would be easy to find the tab from a coordinate as well, rather than 
having to grovel over the tab bounds.  I'm thinking of something like 
CTabFolder.getItem(Point).

But having TabItem.getBounds() has higher priority.

This is also needed for, e.g., double-click to zoom, right click (or 
MenuDetect) for tab context menu.

getItem(Point) could locate the drag source and drop target, but it would not
help with the drag-over affordance. An ideal solution would offer both.

api request, moving to SN

I'd like to request the tabFolder.getItem(point) option.  This would help out
the Visual Editor team because we could determine which tab a user is selecting
at a given location, in order to switch to it (not a live window).  We have been
able to do this for CTabFolder and JTabbedPane because both have an api to
return a tab or index at a given location.

Thanks,
Jon
I agree.  The API is good.  Unfortunately, there is no API to get this on the 
Mac.  Tod?
Duong, this is a dup of a bug you and Kevin fixed.  I can't find it right now.  Please mark as a dup.


*** This bug has been marked as a duplicate of bug 222120 ***</WithStack>
    <WithOutStack>The Eclipse UI team is experimenting with an all-native Eclipse renderer. In
order to get drag and drop working, we need to determine which tab of a
TabFolder we are currently dragging from or dragging over, and we need to
determine where to draw the affordance for drag-over.

Adding a getBounds() method to TabItem would solve all three problems.
Ideally it would be easy to find the tab from a coordinate as well, rather than 
having to grovel over the tab bounds.  I'm thinking of something like 
CTabFolder.getItem(Point).

But having TabItem.getBounds() has higher priority.

This is also needed for, e.g., double-click to zoom, right click (or 
MenuDetect) for tab context menu.

getItem(Point) could locate the drag source and drop target, but it would not
help with the drag-over affordance. An ideal solution would offer both.

api request, moving to SN

I'd like to request the tabFolder.getItem(point) option.  This would help out
the Visual Editor team because we could determine which tab a user is selecting
at a given location, in order to switch to it (not a live window).  We have been
able to do this for CTabFolder and JTabbedPane because both have an api to
return a tab or index at a given location.

Thanks,
Jon
I agree.  The API is good.  Unfortunately, there is no API to get this on the 
Mac.  Tod?
Duong, this is a dup of a bug you and Kevin fixed.  I can't find it right now.  Please mark as a dup.


*** This bug has been marked as a duplicate of bug 222120 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54884" />
    <CreationDate amount="2004-03-15 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception when correlating.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098149">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.loadCorrelations(LogInteractions.java:322)</Frame>
          <Frame depth="1">org.eclipse.hyades.sd.logc.internal.loader.LogInteractions6.run(LogInteractions.java:248)</Frame>
          <Frame depth="2">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="3">org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.parseModel(LogInteractions.java:246)</Frame>
          <Frame depth="4">org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.generateLogInteractions(LogInteractions.java:229)</Frame>
          <Frame depth="5">org.eclipse.hyades.sd.logc.internal.actions.OpenLogViewAction.run(OpenLogViewAction.java:67)</Frame>
          <Frame depth="6">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem.access$6(ActionContributionItem.java:397)</Frame>
          <Frame depth="10">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="15">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="16">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="17">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Exception when correlating.

The following exception is thrown when correlating:
java.lang.NullPointerException
		 at 
org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.loadCorrelations
(LogInteractions.java:322)
		 at 
org.eclipse.hyades.sd.logc.internal.loader.LogInteractions6.run
(LogInteractions.java:248)
		 at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
		 at 
org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.parseModel
(LogInteractions.java:246)
		 at 
org.eclipse.hyades.sd.logc.internal.loader.LogInteractions.generateLogInteractio
ns(LogInteractions.java:229)
		 at 
org.eclipse.hyades.sd.logc.internal.actions.OpenLogViewAction.run
(OpenLogViewAction.java:67)
		 at org.eclipse.jface.action.Action.runWithEvent
(Action.java:842)
		 at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
		 at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
		 at org.eclipse.jface.action.ActionContributionItem.access$6
(ActionContributionItem.java:397)
		 at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
		 at org.eclipse.swt.widgets.Display.runDeferredEvents
(Display.java(Compiled Code))
		 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
		 at org.eclipse.ui.internal.Workbench.runEventLoop
(Workbench.java(Compiled Code))
		 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
		 at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
		 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
		 at java.lang.reflect.Method.invoke(Native Method)
		 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
		 at org.eclipse.core.launcher.Main.run(Main.java:747)
		 at org.eclipse.core.launcher.Main.main(Main.java:583)
Paul, I cannot reproduce the bug, please reopen if problem still exists in 
driver.
Fixed in Hyades 1.3.0 driver (20040316_1600 build).
Closing.
house keeping</WithStack>
    <WithOutStack>Exception when correlating.

The following exception is thrown when correlating:

Paul, I cannot reproduce the bug, please reopen if problem still exists in 
driver.
Fixed in Hyades 1.3.0 driver (20040316_1600 build).
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54885" />
    <CreationDate amount="2004-03-15 15:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>RFE: back-in-time debugger</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi,

I'd like to have a back in time debugger in Eclipse like 

GodeGuide http://www.omnicore.com/debugger.htm
or http://www.extremetech.com/article2/0,3973,426530,00.asp
or http://www.lambdacs.com/debugger/debugger.html

Gerd
Wouldn't we all. Deferred.
*** Bug 55703 has been marked as a duplicate of this bug. ***
*** Bug 64081 has been marked as a duplicate of this bug. ***
*** Bug 73436 has been marked as a duplicate of this bug. ***
*** Bug 73029 has been marked as a duplicate of this bug. ***
*** Bug 36423 has been marked as a duplicate of this bug. ***
another back-in-time debugger on the web.
http://www.virtutech.com/

they have an Eclipse UI for this! - see the white paper
http://www.virtutech.com/pdf/wp_hindsight.pdf
Adam, thanks.
It's a c debugger, not a Java debugger.
so i that means guess they have it even harder, right? :)
(permute the words in comment 9 to read what I meant to write. :) sorry about that.)
For starters, you could detect pure methods and mark them specially in the stack
in the debug view. 
Pure methods have a great property: you can do 'drop to frame' with them and go
back in time that way. Unpure methods may have had side effect in the meantime
and dropping to frame is much less useful then because it does not take you back
in time.

If they're marked I could know how much back I can go.
will you think about it in 4.x???
Maybe in 4.x - for now we're working on 3.2. I was not planning to consider 
this in 3.2.
imho it's is the killer feature for eclipse...
Now that the planning process of Eclipse 3.3 starts soon, I want to add one more debugger with back in time / omniscient / total recall debugging: RetroVue, see http://www.visicomp.com/
The thesis of Hans Kratz about the development of a Java back in time debugger: http://www.info.uni-karlsruhe.de/papers/da_kratz.pdf (in German)

See also Bdbj by Jonathan Cook http://homepages.inf.ed.ac.uk/jcook/

(In reply to comment #13)
&gt; Maybe in 4.x - for now we're working on 3.2. I was not planning to consider 
&gt; this in 3.2.

What about 3.3 then? I cannot see how this cannot be an absolute top priority. The amount of time that can be saved with such a feature is enormous.
*** Bug 211561 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Hi,

I'd like to have a back in time debugger in Eclipse like 

GodeGuide http://www.omnicore.com/debugger.htm
or http://www.extremetech.com/article2/0,3973,426530,00.asp
or http://www.lambdacs.com/debugger/debugger.html

Gerd
Wouldn't we all. Deferred.
*** Bug 55703 has been marked as a duplicate of this bug. ***
*** Bug 64081 has been marked as a duplicate of this bug. ***
*** Bug 73436 has been marked as a duplicate of this bug. ***
*** Bug 73029 has been marked as a duplicate of this bug. ***
*** Bug 36423 has been marked as a duplicate of this bug. ***
another back-in-time debugger on the web.
http://www.virtutech.com/

they have an Eclipse UI for this! - see the white paper
http://www.virtutech.com/pdf/wp_hindsight.pdf
Adam, thanks.
It's a c debugger, not a Java debugger.
so i that means guess they have it even harder, right? :)
(permute the words in comment 9 to read what I meant to write. :) sorry about that.)
For starters, you could detect pure methods and mark them specially in the stack
in the debug view. 
Pure methods have a great property: you can do 'drop to frame' with them and go
back in time that way. Unpure methods may have had side effect in the meantime
and dropping to frame is much less useful then because it does not take you back
in time.

If they're marked I could know how much back I can go.
will you think about it in 4.x???
Maybe in 4.x - for now we're working on 3.2. I was not planning to consider 
this in 3.2.
imho it's is the killer feature for eclipse...
Now that the planning process of Eclipse 3.3 starts soon, I want to add one more debugger with back in time / omniscient / total recall debugging: RetroVue, see http://www.visicomp.com/
The thesis of Hans Kratz about the development of a Java back in time debugger: http://www.info.uni-karlsruhe.de/papers/da_kratz.pdf (in German)

See also Bdbj by Jonathan Cook http://homepages.inf.ed.ac.uk/jcook/

(In reply to comment #13)
&gt; Maybe in 4.x - for now we're working on 3.2. I was not planning to consider 
&gt; this in 3.2.

What about 3.3 then? I cannot see how this cannot be an absolute top priority. The amount of time that can be saved with such a feature is enormous.
*** Bug 211561 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54886" />
    <CreationDate amount="2004-03-15 15:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Global Sync] Should remember last working set selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It would be nice if the Global Sync dialog remembered the last working set 
that I picked. This would allow me to reselect those resources usign a single 
click. as it is now, the dialog always opens with &lt;No Working Set Selection&gt; 
amd I have to use the Choose dialog to pick one.
My intention was to limit the amount of working set remembering, instead it 
defaults to the working set enabled for the participant. Normally, if you 
refresh a working set it is because you have set the working set in the view 
also. 


ANother way to work would be to use no working set in the view but use one or 
more working sets to quickly choose which resources to refresh. In this style 
of working, a most-recently-used dropdown of working sets in the global sync 
would be handy.
not an issue anymore</WithStack>
    <WithOutStack>It would be nice if the Global Sync dialog remembered the last working set 
that I picked. This would allow me to reselect those resources usign a single 
click. as it is now, the dialog always opens with &lt;No Working Set Selection&gt; 
amd I have to use the Choose dialog to pick one.
My intention was to limit the amount of working set remembering, instead it 
defaults to the working set enabled for the participant. Normally, if you 
refresh a working set it is because you have set the working set in the view 
also. 


ANother way to work would be to use no working set in the view but use one or 
more working sets to quickly choose which resources to refresh. In this style 
of working, a most-recently-used dropdown of working sets in the global sync 
would be handy.
not an issue anymore</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54887" />
    <CreationDate amount="2004-03-15 15:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Prompted to switch to Team perspective when perspective is active</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I you perform a refresh from the Tam perspective, you are prompted to switch 
to the TEam perspective. We should only prompt if the team perspective is not 
active already.
Fixed this in M8. fix is already in the build.</WithStack>
    <WithOutStack>I you perform a refresh from the Tam perspective, you are prompted to switch 
to the TEam perspective. We should only prompt if the team perspective is not 
active already.
Fixed this in M8. fix is already in the build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54888" />
    <CreationDate amount="2004-03-15 15:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[runtime] prefs: service searching should accept paths</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>#getInt,etc should accept a null qualifier and the keys may be full paths.
(qualifier could be first segment)
Fixed and released to HEAD.

Qualifer must not be null but the key can be a path.</WithStack>
    <WithOutStack>#getInt,etc should accept a null qualifier and the keys may be full paths.
(qualifier could be first segment)
Fixed and released to HEAD.

Qualifer must not be null but the key can be a path.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54889" />
    <CreationDate amount="2004-03-15 15:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[runtime] prefs: flush and sync in scheduled jobs?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Should we put the preferences flush and sync in scheduled jobs? Consider
preference life-cycle and plug-in/bundle life-cycle.
No. When clients make changes to the preference nodes (like in a preference
page) then they are required to flush() those changes to disk. (like when the
user hits OK)</WithStack>
    <WithOutStack>Should we put the preferences flush and sync in scheduled jobs? Consider
preference life-cycle and plug-in/bundle life-cycle.
No. When clients make changes to the preference nodes (like in a preference
page) then they are required to flush() those changes to disk. (like when the
user hits OK)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54890" />
    <CreationDate amount="2004-03-15 15:24:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Compendium" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[prefs] pref change listeners and full paths</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When adding a preference change listener to the preference service, how do we
deal with full path prefs?

For instance, it is ok for:
  org.eclipse.core.resources/description.autobuild=true
but not for:
  org.eclipse.team.cvs/repositories/repo1/login=foo
see also bug 54888</WithStack>
    <WithOutStack>When adding a preference change listener to the preference service, how do we
deal with full path prefs?

For instance, it is ok for:
  org.eclipse.core.resources/description.autobuild=true
but not for:
  org.eclipse.team.cvs/repositories/repo1/login=foo
see also bug 54888</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54891" />
    <CreationDate amount="2004-03-15 15:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[runtime] prefs: plug-in customization</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Write a doc describing the plug-in customization model with the new preferences
mechanism.
We will be including a known set of properties in the product that the
preferences service can access to find out the location of the
plugin_customization.ini file. For product extensions which do not specify this
location, update will fill in that property with the primary feature's plug-in
install dir. 

This get around the whole "needing the compatibility layer to know about the
primary feature" thing.
Plug-in customization story has been implemented and released.
Doc on Core team web page.</WithStack>
    <WithOutStack>Write a doc describing the plug-in customization model with the new preferences
mechanism.
We will be including a known set of properties in the product that the
preferences service can access to find out the location of the
plugin_customization.ini file. For product extensions which do not specify this
location, update will fill in that property with the primary feature's plug-in
install dir. 

This get around the whole "needing the compatibility layer to know about the
primary feature" thing.
Plug-in customization story has been implemented and released.
Doc on Core team web page.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54892" />
    <CreationDate amount="2004-03-15 15:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[call hierarchy] javadoc misleads Call Hierarchy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- organize imports</Line>
          <Line>- removed unused ProgressMonitor field from MethodReferencesSearchRequestor</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using build I20040226 on a Win2K SP4 box, the Call Hierarchy view is
consistently fooled by method names present in javadoc statement. Take this
situation: a certain method A is mentioned in the javadoc comments for another
method B (for example, in a {@link} tag). When using Call Hierarchy for method
A, it lists method B as calling method A. 

This is of course not true, since method A only appears in method B's javadoc
comments. Call Hierarchy should ignore any javadoc or regular comments appearing
in the methods.
Hi Arnout, please change the Component to UI (the Call Hierarchy lives there). 
Hi Markus,

I agree with Arnout that the reference from Javadoc should not show up in the
call hierarchy. When following the code flow, it is only interesting to see the
actual code references.

I know that "Search for references" also includes Javadoc references in the
result. However, can you tell me whether there is an easy way to avoid Javadoc
refs using the SearchEngine?
Jesper, we could hack something together by scanning the source string of each
match and determine whether the search result is in a comment. But since this is
very expensive, we should wait for better support from jdt-core.
Yes, I figured that might be a (rather expensive) solution. I'd prefer to wait
for  JDT Core to hopefully implement the changes in bug #51357.
This can now be fixed with the new search API from bug 56449.
Jesper, wanna have a look?
I'll take a shot - but I can almost guarantee that it will be post-M9.

/Jesper
Created attachment 9888
Patch changing search to new API

Hi Markus,

(Patch against org.eclipse.jdt.internal.corext.callhierarchy)

I took a closer look at it - and found out that it wasn't that big a deal. I've
implemented the changes. I'll make a test case showing the now Javadoc
non-issue over the weekend.
I was sure you would implement this within 24h ... ;-)

Released the patch with the following changes:
- organize imports
- removed unused ProgressMonitor field from MethodReferencesSearchRequestor</WithStack>
    <WithOutStack>Using build I20040226 on a Win2K SP4 box, the Call Hierarchy view is
consistently fooled by method names present in javadoc statement. Take this
situation: a certain method A is mentioned in the javadoc comments for another
method B (for example, in a {@link} tag). When using Call Hierarchy for method
A, it lists method B as calling method A. 

This is of course not true, since method A only appears in method B's javadoc
comments. Call Hierarchy should ignore any javadoc or regular comments appearing
in the methods.
Hi Arnout, please change the Component to UI (the Call Hierarchy lives there). 
Hi Markus,

I agree with Arnout that the reference from Javadoc should not show up in the
call hierarchy. When following the code flow, it is only interesting to see the
actual code references.

I know that "Search for references" also includes Javadoc references in the
result. However, can you tell me whether there is an easy way to avoid Javadoc
refs using the SearchEngine?
Jesper, we could hack something together by scanning the source string of each
match and determine whether the search result is in a comment. But since this is
very expensive, we should wait for better support from jdt-core.
Yes, I figured that might be a (rather expensive) solution. I'd prefer to wait
for  JDT Core to hopefully implement the changes in bug #51357.
This can now be fixed with the new search API from bug 56449.
Jesper, wanna have a look?
I'll take a shot - but I can almost guarantee that it will be post-M9.

/Jesper
Created attachment 9888
Patch changing search to new API

Hi Markus,

(Patch against org.eclipse.jdt.internal.corext.callhierarchy)

I took a closer look at it - and found out that it wasn't that big a deal. I've
implemented the changes. I'll make a test case showing the now Javadoc
non-issue over the weekend.
I was sure you would implement this within 24h ... ;-)

Released the patch with the following changes:
- organize imports
- removed unused ProgressMonitor field from MethodReferencesSearchRequestor</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54893" />
    <CreationDate amount="2004-03-15 15:32:00 -0500" />
    <DupId amount="51911" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>@see to class attributes in javadoc generates warning</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In Eclipse 3.0 M7

The following javadoc lines

        * @see #addNotify
        * @see java.awt.Component#removeNotify

Generate the following warnings

Javadoc: addNotify cannot be resolved or is not a field.
Javadoc: removeNotify cannot be resolved or is not a field.

This is valid javadoc syntax and should not generate a warning.


*** This bug has been marked as a duplicate of 51911 ***</WithStack>
    <WithOutStack>In Eclipse 3.0 M7

The following javadoc lines

        * @see #addNotify
        * @see java.awt.Component#removeNotify

Generate the following warnings

Javadoc: addNotify cannot be resolved or is not a field.
Javadoc: removeNotify cannot be resolved or is not a field.

This is valid javadoc syntax and should not generate a warning.


*** This bug has been marked as a duplicate of 51911 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54894" />
    <CreationDate amount="2004-03-15 15:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Global Sync] Workflow considerations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1) If the user explicitly syncs, they are taken to the sync view and the</Line>
          <Line>refresh runs in the background. At some later time the refresh complete dialog</Line>
          <Line>comes up (unless the user has disabled it). However, closing this dialog does</Line>
          <Line>NOT take you to the sync view. The assumption is that you are already there.</Line>
          <Line>However, the user may have started working on something else while the refresh</Line>
          <Line>was happening. For a scheduled refresh, the user may not even have the sync</Line>
          <Line>view open.</Line>
          <Line />
          <Line>2) I wonder if the refresh complete dialog should allow operations. For</Line>
          <Line>instance, if there are non-conflicting incoming changes, the user may just</Line>
          <Line>want to update and then return to what they were doing. This may be especially</Line>
          <Line>true with the scheduled refresh. If the user left unresolved nods in the</Line>
          <Line>dialog, the user could be prompted to see if they want to go to the sync view.</Line>
          <Line>I have confirmed that comment #1 is still an issue. If I select the FTP</Line>
          <Line>partcipant and perform a CVs refresh, the CVS participant does not become</Line>
          <Line>active when the sync view is shown.</Line>
          <Line>Fix for last comment released to HEAD.</Line>
          <Line>For comment 1 I don't want to add an option to take them to the view again. The</Line>
          <Line>first time they are prompted, and then know where the results will be afterwards.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I refresh a participant that has changes, the resulting dialog describes 
this. If I have multiple participants in the sync view, the refreshed 
participant is not activated. I think that, if we always show the sync view, 
we should also always show the refreshed participant.
Actually, we show the sync view before sytarting the refresh now but the above 
may still apply. I have a couple of more comments on the workflows involving 
global sync:

1) If the user explicitly syncs, they are taken to the sync view and the 
refresh runs in the background. At some later time the refresh complete dialog 
comes up (unless the user has disabled it). However, closing this dialog does 
NOT take you to the sync view. The assumption is that you are already there. 
However, the user may have started working on something else while the refresh 
was happening. For a scheduled refresh, the user may not even have the sync 
view open.

2) I wonder if the refresh complete dialog should allow operations. For 
instance, if there are non-conflicting incoming changes, the user may just 
want to update and then return to what they were doing. This may be especially 
true with the scheduled refresh. If the user left unresolved nods in the 
dialog, the user could be prompted to see if they want to go to the sync view.
I have confirmed that comment #1 is still an issue. If I select the FTP 
partcipant and perform a CVs refresh, the CVS participant does not become 
active when the sync view is shown.
Fix for last comment released to HEAD.
For comment 1 I don't want to add an option to take them to the view again. The
first time they are prompted, and then know where the results will be afterwards.</WithStack>
    <WithOutStack>If I refresh a participant that has changes, the resulting dialog describes 
this. If I have multiple participants in the sync view, the refreshed 
participant is not activated. I think that, if we always show the sync view, 
we should also always show the refreshed participant.
Actually, we show the sync view before sytarting the refresh now but the above 
may still apply. I have a couple of more comments on the workflows involving 
global sync:

1) If the user explicitly syncs, they are taken to the sync view and the 
refresh runs in the background. At some later time the refresh complete dialog 
comes up (unless the user has disabled it). However, closing this dialog does 
NOT take you to the sync view. The assumption is that you are already there. 
However, the user may have started working on something else while the refresh 
was happening. For a scheduled refresh, the user may not even have the sync 
view open.

2) I wonder if the refresh complete dialog should allow operations. For 
instance, if there are non-conflicting incoming changes, the user may just 
want to update and then return to what they were doing. This may be especially 
true with the scheduled refresh. If the user left unresolved nods in the 
dialog, the user could be prompted to see if they want to go to the sync view.
I have confirmed that comment #1 is still an issue. If I select the FTP 
partcipant and perform a CVs refresh, the CVS participant does not become 
active when the sync view is shown.
Fix for last comment released to HEAD.
For comment 1 I don't want to add an option to take them to the view again. The
first time they are prompted, and then know where the results will be afterwards.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54895" />
    <CreationDate amount="2004-03-15 15:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>No Changes Found message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- No changes found for CVS Compare with HEAD of {n} resources</Line>
          <Line>- No changes found for CVS Compare with HEAD of /path/of/single/selection</Line>
          <Line>It has a better message now</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The message displayed when no changes ae found is in title case but I suspect 
it should be sentence case. It would also be good to give some additional 
indication as to what hasn't changed since there could concievably be several 
compares running at once. I would suggest something like one or more of the 
following: 

 - No changes found for CVS Compare with HEAD of {n} resources
 - No changes found for CVS Compare with HEAD of /path/of/single/selection
It has a better message now</WithStack>
    <WithOutStack>The message displayed when no changes ae found is in title case but I suspect 
it should be sentence case. It would also be good to give some additional 
indication as to what hasn't changed since there could concievably be several 
compares running at once. I would suggest something like one or more of the 
following: 

 - No changes found for CVS Compare with HEAD of {n} resources
 - No changes found for CVS Compare with HEAD of /path/of/single/selection
It has a better message now</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54896" />
    <CreationDate amount="2004-03-15 15:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Disabled watch expressions still update</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Debug to a watch exrepssion that will update in a loop. I used 
VectorTests.testCapacity(), with an expression of "fFull". disable the 
expression and step - the value updates on each step even though it's disabled.
I don't see the result of the watch expression being updated, only the fields of
the value are updated, that is normal.
I noticed that the disable state was no correctly displayed.
I modified JDIModelPresentation to '(disabled)' when the watch expression is
disabled.
Please verify, Darin W.
Verified. I was fooled again.

However, it is misleading since the expression is disabled, but the details 
keep updating when selected. I wonder if we should turn off detail computation 
for disabled expressions.
*** Bug 93152 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Debug to a watch exrepssion that will update in a loop. I used 
VectorTests.testCapacity(), with an expression of "fFull". disable the 
expression and step - the value updates on each step even though it's disabled.
I don't see the result of the watch expression being updated, only the fields of
the value are updated, that is normal.
I noticed that the disable state was no correctly displayed.
I modified JDIModelPresentation to '(disabled)' when the watch expression is
disabled.
Please verify, Darin W.
Verified. I was fooled again.

However, it is misleading since the expression is disabled, but the details 
keep updating when selected. I wonder if we should turn off detail computation 
for disabled expressions.
*** Bug 93152 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54897" />
    <CreationDate amount="2004-03-15 16:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[Sync View] Ignore Whitespace and compare dialogs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Ignore whitespace at the beginning of a line</Line>
          <Line>- Ignore at the end</Line>
          <Line>- Ignore between words of a line</Line>
          <Line>- Ignore new/removed empty lines</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>There does not appear to be a way to turn on "ignore whitespace" from the new 
compare and replace dialogs. We should surface this somewhere since it is 
available when an editor is used.
Not as important now that all operations are by default in an editor.
When using the compare view in the sync perspective, there is no way to ignore
whitespace for just this comparison.

The global setting of ignore whitespace is next to useless - I need to be able
to set it on and off while doing the comparison using a small button.
I second this. There is a lot of empty space in the compare dialog and a couple of checkboxes (ignore all whitespace, ignore whitespace at the beginning of a line, ignore cr/lr &lt;-&gt; lf differences, ignore empty lines, etc) would really help.

The editor should remember the values depending on the kind of file, so I can set it for Java, XML, Text.
Our focus in the sync view where Ignore whitespace is available in the toolbar when the compare editor is active.
I don't expect the toolbar to change when I chose a different editor; I feel the toolbar should change for perspectives.

Can you please either move this button into the editor frame (next to the "copy all non-conflicting changes" is more than enough space) or at least create a second button in the editor frame?

Also, would it be possible to add these options:

- Ignore whitespace at the beginning of a line
- Ignore at the end
- Ignore between words of a line
- Ignore new/removed empty lines

Plus maybe an "ignore all whitespace" button
For the toolbar issue, you should log a bug against Platform/UI since they contol this. For the Ignore whitespace options, you should log an enhancement request against Platform/Compare.
&gt; For the toolbar issue, you should log a bug against Platform/UI since
&gt; they contol this.

Sorry, I don't understand this comment. How can Platform/UI move a button from the editor frame into the toolbar? I'd guess you'd have to create the button in such a way that it doesn't get added to the toolbar bar to the editor frame.
Sorry, I was unclear. It is the UI component that places the toolbar actions contributed by the editor into the main toolbar. It would be technically possible to move them into a separate toolbar without making any changes to the editor. If the UI decided they didn't want to do this, my expectation is that all editors would continue to place the toolbar buttons in the main tooldbar to remain consistent with the Platform.</WithStack>
    <WithOutStack>There does not appear to be a way to turn on "ignore whitespace" from the new 
compare and replace dialogs. We should surface this somewhere since it is 
available when an editor is used.
Not as important now that all operations are by default in an editor.
When using the compare view in the sync perspective, there is no way to ignore
whitespace for just this comparison.

The global setting of ignore whitespace is next to useless - I need to be able
to set it on and off while doing the comparison using a small button.
I second this. There is a lot of empty space in the compare dialog and a couple of checkboxes (ignore all whitespace, ignore whitespace at the beginning of a line, ignore cr/lr &lt;-&gt; lf differences, ignore empty lines, etc) would really help.

The editor should remember the values depending on the kind of file, so I can set it for Java, XML, Text.
Our focus in the sync view where Ignore whitespace is available in the toolbar when the compare editor is active.
I don't expect the toolbar to change when I chose a different editor; I feel the toolbar should change for perspectives.

Can you please either move this button into the editor frame (next to the "copy all non-conflicting changes" is more than enough space) or at least create a second button in the editor frame?

Also, would it be possible to add these options:

- Ignore whitespace at the beginning of a line
- Ignore at the end
- Ignore between words of a line
- Ignore new/removed empty lines

Plus maybe an "ignore all whitespace" button
For the toolbar issue, you should log a bug against Platform/UI since they contol this. For the Ignore whitespace options, you should log an enhancement request against Platform/Compare.
&gt; For the toolbar issue, you should log a bug against Platform/UI since
&gt; they contol this.

Sorry, I don't understand this comment. How can Platform/UI move a button from the editor frame into the toolbar? I'd guess you'd have to create the button in such a way that it doesn't get added to the toolbar bar to the editor frame.
Sorry, I was unclear. It is the UI component that places the toolbar actions contributed by the editor into the main toolbar. It would be technically possible to move them into a separate toolbar without making any changes to the editor. If the UI decided they didn't want to do this, my expectation is that all editors would continue to place the toolbar buttons in the main tooldbar to remain consistent with the Platform.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54898" />
    <CreationDate amount="2004-03-15 16:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PDE should automatically locate source for external plug-ins during debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1. Use the "Add to Java Search" feature, in which PDE will create a fake Java</Line>
          <Line>project and add classpath entries referencing JARs from external plug-ins.</Line>
          <Line>This will, in effect, add these classes to the Java Search scope, and source</Line>
          <Line>would be located without problems.</Line>
          <Line />
          <Line>The way this "Add to Java Search" is currently provided can certainly be</Line>
          <Line>improved (bug 52651).  However, this introduces a problem.  The JARS</Line>
          <Line>referenced in this fake Java project are not part of the Java model.  They are</Line>
          <Line>arbitrary libraries on the filesystem.  So when you open the Java editor on</Line>
          <Line>these external files, you will get one without a ruler, making your debugging</Line>
          <Line>experience less pleasant than the one you are used to.</Line>
          <Line />
          <Line>2. Some people don't see why they should need to go through the "Add to Java</Line>
          <Line>Search" stuff to tell the debugger where the source is.  Good point.</Line>
          <Line>The Debug team is coming out with a new source lookup mechanism, which allows</Line>
          <Line>the concept of a source lookup participant.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Setup:
The user has a few workspace plug-ins that reference only a subset of the 
platform he is targetting.

Problem:
Code from external plug-ins that are not directly referenced by projects in 
the workspace is not part of the Java model, and consequently not part of the 
Source Lookup scope.
So when you launch a runtime workbench in debug mode, and want to step into 
code that is not part of the workspace Java search/Source Lookup scope, the 
debugger prompts you to enter a source location.  

Expectation:
Since PDE knows where the source is, the debugger should not prompt the user 
for these source code locations, it should consult PDE which could provide 
that information just in time.

Two approaches, one simpler than the other:
1. Use the "Add to Java Search" feature, in which PDE will create a fake Java 
project and add classpath entries referencing JARs from external plug-ins.
This will, in effect, add these classes to the Java Search scope, and source 
would be located without problems.  

The way this "Add to Java Search" is currently provided can certainly be 
improved (bug 52651).  However, this introduces a problem.  The JARS 
referenced in this fake Java project are not part of the Java model.  They are 
arbitrary libraries on the filesystem.  So when you open the Java editor on 
these external files, you will get one without a ruler, making your debugging 
experience less pleasant than the one you are used to.

2. Some people don't see why they should need to go through the "Add to Java 
Search" stuff to tell the debugger where the source is.  Good point.
The Debug team is coming out with a new source lookup mechanism, which allows 
the concept of a source lookup participant.

In this case, PDE registers itself as a source lookup participant for runtime 
workbench launches.  When you launch in debug mode, the debugger usually 
searches your workspace projects linearly to search for source associated with 
the current class in its frame.  If it does not find the associate source 
file, it prompts the user for source.  In this case, when it does not find 
source, it will ask the PDE participant for source and we could provide it 
just in time.

Note that in this scenario also, we will run into the same problem as in 1, 
where the external Java file will open without a ruler, so you won't see the 
breakpoints in the editor.  You will of course see them in the Breakpoints 
view.


So it sounds like whatever solution we would pursue (and #2 is obviously more 
desirable), we need to open a bug report against JDT/UI to look into the ruler 
issue when opening external files.
Opened bug 54900 for the Java editor problem.
Solution #2 is only possible, of course, if the debugger is able to give us 
enough information about the class in the frame to trace the plug-in where it 
is coming from.  
This information could be as simple as what JAR the class is coming from.  I'm 
using the word simple loosely.  DarinW is the best person to judge how easy it 
would be to provide such information.
In Darin we trust :-)
Good capture of the issues.  

Note that I am currently doing number 1 and it does not work as is.  I have 
added my entire target to the java search path and I still do not get any 
source.  I have to laboriously search for and add the source jars individually 
as the debugger cannot find them an prompts me.

I have not looked into yet.  But my conjecture is that it does not work as-is 
now, because when PDE is computing the source lookup locations for the 
debugger, we only use plug-in projects (ie. ones with 
plugin.xm/fragment.xml/manifest.mf).  So the fake Java project is being 
ignored.  This aspect will be fixed.
*** Bug 55641 has been marked as a duplicate of this bug. ***
The "External Plug-in Libraries" project is now added to the source lookup.
So people who use the Add to Java Search functionality would have their source 
found, and the source prompt dialog will not pop up.

The JDT/Text seems to have fixed the ruler issue.  Breakpoints can now be set 
in these external JARs.</WithStack>
    <WithOutStack>Setup:
The user has a few workspace plug-ins that reference only a subset of the 
platform he is targetting.

Problem:
Code from external plug-ins that are not directly referenced by projects in 
the workspace is not part of the Java model, and consequently not part of the 
Source Lookup scope.
So when you launch a runtime workbench in debug mode, and want to step into 
code that is not part of the workspace Java search/Source Lookup scope, the 
debugger prompts you to enter a source location.  

Expectation:
Since PDE knows where the source is, the debugger should not prompt the user 
for these source code locations, it should consult PDE which could provide 
that information just in time.

Two approaches, one simpler than the other:
1. Use the "Add to Java Search" feature, in which PDE will create a fake Java 
project and add classpath entries referencing JARs from external plug-ins.
This will, in effect, add these classes to the Java Search scope, and source 
would be located without problems.  

The way this "Add to Java Search" is currently provided can certainly be 
improved (bug 52651).  However, this introduces a problem.  The JARS 
referenced in this fake Java project are not part of the Java model.  They are 
arbitrary libraries on the filesystem.  So when you open the Java editor on 
these external files, you will get one without a ruler, making your debugging 
experience less pleasant than the one you are used to.

2. Some people don't see why they should need to go through the "Add to Java 
Search" stuff to tell the debugger where the source is.  Good point.
The Debug team is coming out with a new source lookup mechanism, which allows 
the concept of a source lookup participant.

In this case, PDE registers itself as a source lookup participant for runtime 
workbench launches.  When you launch in debug mode, the debugger usually 
searches your workspace projects linearly to search for source associated with 
the current class in its frame.  If it does not find the associate source 
file, it prompts the user for source.  In this case, when it does not find 
source, it will ask the PDE participant for source and we could provide it 
just in time.

Note that in this scenario also, we will run into the same problem as in 1, 
where the external Java file will open without a ruler, so you won't see the 
breakpoints in the editor.  You will of course see them in the Breakpoints 
view.


So it sounds like whatever solution we would pursue (and #2 is obviously more 
desirable), we need to open a bug report against JDT/UI to look into the ruler 
issue when opening external files.
Opened bug 54900 for the Java editor problem.
Solution #2 is only possible, of course, if the debugger is able to give us 
enough information about the class in the frame to trace the plug-in where it 
is coming from.  
This information could be as simple as what JAR the class is coming from.  I'm 
using the word simple loosely.  DarinW is the best person to judge how easy it 
would be to provide such information.
In Darin we trust :-)
Good capture of the issues.  

Note that I am currently doing number 1 and it does not work as is.  I have 
added my entire target to the java search path and I still do not get any 
source.  I have to laboriously search for and add the source jars individually 
as the debugger cannot find them an prompts me.

I have not looked into yet.  But my conjecture is that it does not work as-is 
now, because when PDE is computing the source lookup locations for the 
debugger, we only use plug-in projects (ie. ones with 
plugin.xm/fragment.xml/manifest.mf).  So the fake Java project is being 
ignored.  This aspect will be fixed.
*** Bug 55641 has been marked as a duplicate of this bug. ***
The "External Plug-in Libraries" project is now added to the source lookup.
So people who use the Add to Java Search functionality would have their source 
found, and the source prompt dialog will not pop up.

The JDT/Text seems to have fixed the ruler issue.  Breakpoints can now be set 
in these external JARs.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54899" />
    <CreationDate amount="2004-03-15 16:10:00 -0500" />
    <DupId amount="54845" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[ViewMgmt] Restore button not refreshed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) Maximize the packages explorer</Line>
          <Line>2) double click on a file.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you do the following steps, the restore button of a view is left in the 
wrong state.

1) Maximize the packages explorer
2) double click on a file. 

This open an editor and restores the packages explorer to it's original size 
but leaves the restore button. Clicking on it will revert it to the maximize.


*** This bug has been marked as a duplicate of 54845 ***</WithStack>
    <WithOutStack>If you do the following steps, the restore button of a view is left in the 
wrong state.

1) Maximize the packages explorer
2) double click on a file. 

This open an editor and restores the packages explorer to it's original size 
but leaves the restore button. Clicking on it will revert it to the maximize.


*** This bug has been marked as a duplicate of 54845 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54900" />
    <CreationDate amount="2004-03-15 16:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[rulers] Java Editor does not show ruler on external Java files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1) open an external Java file which for us means it is a *.java file, a *.class</Line>
          <Line>file or a *.jar which is not inside the workspace and not on the Java buildpath</Line>
          <Line>of a project. That's what this bug report is about.</Line>
          <Line />
          <Line>2) stuf which is on the Java build path of a project (e.g. rt.jar) where the</Line>
          <Line>ruler is shown (if not it's different bug) and breakpoints can be set.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="24">
        <Lines>
          <Line>1. Fresh workspace.</Line>
          <Line>2. Check out org.eclipse.swt.snippets from HEAD.</Line>
          <Line>3. swt.snippets comes in the form of a plugin which uses a PDE container.</Line>
          <Line>That is not the case for regular SWT projects.  So go the Java Build</Line>
          <Line>Properties and remove the PDE container.  Now also manually add the swt.jar to</Line>
          <Line>the project's classpath.  It is located in the</Line>
          <Line>&lt;eclipse_install&gt;/plugins/org.eclipse.swt.win32_3.1.0/ws/win32/swt.jar.</Line>
          <Line />
          <Line>4. DO NOT ATTACH SOURCE to swt.jar.  (I doubt that you can locate the source</Line>
          <Line>for it anyways, since it is deeply hidden in another location ;-)</Line>
          <Line />
          <Line>5. In the org.eclipse.swt.snippets package, open the Snippet101 java file and</Line>
          <Line>set a breakpoint on the fourth line in Main (table.setSize(...))</Line>
          <Line />
          <Line>6. Right-click on Snippet101.java and from the context menu: Debug &gt; Debug As</Line>
          <Line>&gt; SWT Application.</Line>
          <Line />
          <Line>7. When you hit the breakpont from 5.  Try to step into Table.setSize()</Line>
          <Line />
          <Line>8. you will see that even though swt.jar has no source attached to it in the</Line>
          <Line>workspace, the launcher was smart enough to locate the source on the fly, and</Line>
          <Line>the debugger knew where to stop etc.</Line>
          <Line>I can do all the debug operations (step in/over, etc.) The only problem here</Line>
          <Line>is that there is no ruler.  I can't set breakpoints.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We ran into this problem while investigating solutions for bug 54898.

If you open an external Java file using the Java editor, you don't get the 
ruler.  So if you set breakpoints in the file, you won't see the breakpoints 
in the editor.  They will only show up in the Breakpoints view, thus making 
the debugging experience much harder.
Is this one going to be fixed in 3.0?
We might fix this during the bug fixing phase (time permitting) but before we
need to agree with Debug how/where breakpoint information is stored for
non-resources.

Although this bug was not marked as fixed, I was recently pleasantly suprised 
to see that I can set breakpoints on an external Java file without problems.  
Dani, did you fix this or was it divine intervention?
no ruler yet. you probably selected a file that's already inside your workspace.
This problem also used to occur in any of the libraries referenced by 
the "External Plug-ins Libraries" project that gets created by PDE when you 
add external plug-ins to the Java search.

This problem is now gone for some reason.  Since nothing was done at your end, 
I'm guessing that the new implementation of the "Add to Java Search" 
functionality by PDE that is now based on containers may have inadvertently 
alleviate the problem.
no action for 3.0
I've run into this one recently working on the cfeclipse plugin.

We've got a view that allows you to open files that are in the local filesystem,
or on a remote FTP server.

The lack of a vertical ruler is a bit of a PITA because folding doesn't work
without it.

I've already created an ExternalFile class that implements IFile, but I'm not
totally sure what it is that kills the vertical ruler.

Any pointers on what custom stuff I might need to add would be appreciated.
&gt;I've already created an ExternalFile class that implements IFile, but I'm not
&gt;totally sure what it is that kills the vertical ruler.
Please note that IFile is not intended to be subclassed and hence you might into
trouble at several places.
How did the ant editor get error and warning annotations to work in external 
files in 3.1M3? Isn't that a similar problem?
The Java model does not work on/with external files and hence no problem
reporting and no model operations e.g. to get the folding structure are
possible. The Ant plug-in (model) probably (I did not check) accepts non-IFiles
and can therefore generate problem annotations and structural info and hence it
makes sense to show the ruler(s).
Thanks Daniel,

I'm aware that IFile isn't supposed to be subclassed. Right now I'm
investigating how the internals work to see if there's any way I can get the
vertical ruler to come up. Once I have a handle on that I can hopefully see what
it would take to do it 'properly' and decide if it's worth the effort.

I'm happy enough not to have full support for model operations, but folding and
line numbers would be pretty nice.
I've got the ruler and folding stuff working now with external files.

The solution for anyone who wants to know was to create 3 new classes.
ExternalAnnotationModel, ExternalMarker and ExternalFile. The model extends
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel and replicates most of
org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel. ExternalMarker
implements org.eclipse.core.resources.IMarker. It doesn't actually do anything
in any of the methods, but an instance is returned by
ExternalFile.createMarker(). ExternalFile extends
org.eclipse.core.internal.resources.File. You're not supposed to do that and it
may cause some bad things to happen, but other than that it works.

If I could find a way to do it without needing to use File or something else
you're not supposed to subclass, I'd be a happy man.
*** Bug 81182 has been marked as a duplicate of this bug. ***
Dani, what are the prospects of this issue being addressed for 3.1?

This one is vital to the success of the new source lookup for debugging 
Eclipse applications (bug 65164)
Wassim, there are really two cases here

1) open an external Java file which for us means it is a *.java file, a *.class
file or a *.jar which is not inside the workspace and not on the Java buildpath
of a project. That's what this bug report is about.

2) stuf which is on the Java build path of a project (e.g. rt.jar) where the
ruler is shown (if not it's different bug) and breakpoints can be set.

Wassim, are you talking about case 1 or 2? Can you provide a step by step
example/setup for the PDE problem?

Showing the ruler is not the problem - the problem is to know where we have to
get the annotations from. Darin, is Wassim's case supported and if so, where
does Debug attach the breakpoints?
I am certainly talking about case 1.

In Monday's build, we will release an SWT launcher which will clearly 
demonstrate the problem and will provide steps then.

The Java debugger supports breakpoints in files that are not contained in the 
workspace. In this case we assocaite the breakpoints with the Workspace Root 
resource.

However, I just found that our support for breakpoint creation in external 
files is broken which is a regression that will need to be fixed :-(
Dani, let me give you a scenario using M5 on Windows:

1. Fresh workspace.
2. Check out org.eclipse.swt.snippets from HEAD.
3. swt.snippets comes in the form of a plugin which uses a PDE container.  
That is not the case for regular SWT projects.  So go the Java Build 
Properties and remove the PDE container.  Now also manually add the swt.jar to 
the project's classpath.  It is located in the 
&lt;eclipse_install&gt;/plugins/org.eclipse.swt.win32_3.1.0/ws/win32/swt.jar.

4. DO NOT ATTACH SOURCE to swt.jar.  (I doubt that you can locate the source 
for it anyways, since it is deeply hidden in another location ;-)

5. In the org.eclipse.swt.snippets package, open the Snippet101 java file and 
set a breakpoint on the fourth line in Main (table.setSize(...))

6. Right-click on Snippet101.java and from the context menu: Debug &gt; Debug As 
&gt; SWT Application.

7. When you hit the breakpont from 5.  Try to step into Table.setSize()

8. you will see that even though swt.jar has no source attached to it in the 
workspace, the launcher was smart enough to locate the source on the fly, and 
the debugger knew where to stop etc.
I can do all the debug operations (step in/over, etc.) The only problem here 
is that there is no ruler.  I can't set breakpoints.

By extrapolation, we are planning on redoing the source lookup for debugging 
Eclipse applications in a similar way (bug 65164), so this ruler issue is a 
problem.
*** Bug 95254 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
Available in builds &gt; N20060105-0010.

The rulers (vertical, diff, line number and folding) are now there but looks as if it is not be possible to add breakpoints: as far as I can see this is not supported by Debug (note: the instruction pointer appears). Darin, is this true? See also bug 122743.

NOTE:
In my opinion the correct way to solve this issue is to find the source and actually attach it to the JAR. Then open the file. Why isn't it done that why? I'd assume that if the user can attach the source manually and PDE can find the source (as comment 18 proves) this should be doable.

We do support breakpoints in external files, but it was recently broken by disallowing breakpoints in remote files. See bug 120170.</WithStack>
    <WithOutStack>We ran into this problem while investigating solutions for bug 54898.

If you open an external Java file using the Java editor, you don't get the 
ruler.  So if you set breakpoints in the file, you won't see the breakpoints 
in the editor.  They will only show up in the Breakpoints view, thus making 
the debugging experience much harder.
Is this one going to be fixed in 3.0?
We might fix this during the bug fixing phase (time permitting) but before we
need to agree with Debug how/where breakpoint information is stored for
non-resources.

Although this bug was not marked as fixed, I was recently pleasantly suprised 
to see that I can set breakpoints on an external Java file without problems.  
Dani, did you fix this or was it divine intervention?
no ruler yet. you probably selected a file that's already inside your workspace.
This problem also used to occur in any of the libraries referenced by 
the "External Plug-ins Libraries" project that gets created by PDE when you 
add external plug-ins to the Java search.

This problem is now gone for some reason.  Since nothing was done at your end, 
I'm guessing that the new implementation of the "Add to Java Search" 
functionality by PDE that is now based on containers may have inadvertently 
alleviate the problem.
no action for 3.0
I've run into this one recently working on the cfeclipse plugin.

We've got a view that allows you to open files that are in the local filesystem,
or on a remote FTP server.

The lack of a vertical ruler is a bit of a PITA because folding doesn't work
without it.

I've already created an ExternalFile class that implements IFile, but I'm not
totally sure what it is that kills the vertical ruler.

Any pointers on what custom stuff I might need to add would be appreciated.
&gt;I've already created an ExternalFile class that implements IFile, but I'm not
&gt;totally sure what it is that kills the vertical ruler.
Please note that IFile is not intended to be subclassed and hence you might into
trouble at several places.
How did the ant editor get error and warning annotations to work in external 
files in 3.1M3? Isn't that a similar problem?
The Java model does not work on/with external files and hence no problem
reporting and no model operations e.g. to get the folding structure are
possible. The Ant plug-in (model) probably (I did not check) accepts non-IFiles
and can therefore generate problem annotations and structural info and hence it
makes sense to show the ruler(s).
Thanks Daniel,

I'm aware that IFile isn't supposed to be subclassed. Right now I'm
investigating how the internals work to see if there's any way I can get the
vertical ruler to come up. Once I have a handle on that I can hopefully see what
it would take to do it 'properly' and decide if it's worth the effort.

I'm happy enough not to have full support for model operations, but folding and
line numbers would be pretty nice.
I've got the ruler and folding stuff working now with external files.

The solution for anyone who wants to know was to create 3 new classes.
ExternalAnnotationModel, ExternalMarker and ExternalFile. The model extends
org.eclipse.ui.texteditor.AbstractMarkerAnnotationModel and replicates most of
org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel. ExternalMarker
implements org.eclipse.core.resources.IMarker. It doesn't actually do anything
in any of the methods, but an instance is returned by
ExternalFile.createMarker(). ExternalFile extends
org.eclipse.core.internal.resources.File. You're not supposed to do that and it
may cause some bad things to happen, but other than that it works.

If I could find a way to do it without needing to use File or something else
you're not supposed to subclass, I'd be a happy man.
*** Bug 81182 has been marked as a duplicate of this bug. ***
Dani, what are the prospects of this issue being addressed for 3.1?

This one is vital to the success of the new source lookup for debugging 
Eclipse applications (bug 65164)
Wassim, there are really two cases here

1) open an external Java file which for us means it is a *.java file, a *.class
file or a *.jar which is not inside the workspace and not on the Java buildpath
of a project. That's what this bug report is about.

2) stuf which is on the Java build path of a project (e.g. rt.jar) where the
ruler is shown (if not it's different bug) and breakpoints can be set.

Wassim, are you talking about case 1 or 2? Can you provide a step by step
example/setup for the PDE problem?

Showing the ruler is not the problem - the problem is to know where we have to
get the annotations from. Darin, is Wassim's case supported and if so, where
does Debug attach the breakpoints?
I am certainly talking about case 1.

In Monday's build, we will release an SWT launcher which will clearly 
demonstrate the problem and will provide steps then.

The Java debugger supports breakpoints in files that are not contained in the 
workspace. In this case we assocaite the breakpoints with the Workspace Root 
resource.

However, I just found that our support for breakpoint creation in external 
files is broken which is a regression that will need to be fixed :-(
Dani, let me give you a scenario using M5 on Windows:

1. Fresh workspace.
2. Check out org.eclipse.swt.snippets from HEAD.
3. swt.snippets comes in the form of a plugin which uses a PDE container.  
That is not the case for regular SWT projects.  So go the Java Build 
Properties and remove the PDE container.  Now also manually add the swt.jar to 
the project's classpath.  It is located in the 
&lt;eclipse_install&gt;/plugins/org.eclipse.swt.win32_3.1.0/ws/win32/swt.jar.

4. DO NOT ATTACH SOURCE to swt.jar.  (I doubt that you can locate the source 
for it anyways, since it is deeply hidden in another location ;-)

5. In the org.eclipse.swt.snippets package, open the Snippet101 java file and 
set a breakpoint on the fourth line in Main (table.setSize(...))

6. Right-click on Snippet101.java and from the context menu: Debug &gt; Debug As 
&gt; SWT Application.

7. When you hit the breakpont from 5.  Try to step into Table.setSize()

8. you will see that even though swt.jar has no source attached to it in the 
workspace, the launcher was smart enough to locate the source on the fly, and 
the debugger knew where to stop etc.
I can do all the debug operations (step in/over, etc.) The only problem here 
is that there is no ruler.  I can't set breakpoints.

By extrapolation, we are planning on redoing the source lookup for debugging 
Eclipse applications in a similar way (bug 65164), so this ruler issue is a 
problem.
*** Bug 95254 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
Available in builds &gt; N20060105-0010.

The rulers (vertical, diff, line number and folding) are now there but looks as if it is not be possible to add breakpoints: as far as I can see this is not supported by Debug (note: the instruction pointer appears). Darin, is this true? See also bug 122743.

NOTE:
In my opinion the correct way to solve this issue is to find the source and actually attach it to the JAR. Then open the file. Why isn't it done that why? I'd assume that if the user can attach the source manually and PDE can find the source (as comment 18 proves) this should be doable.

We do support breakpoints in external files, but it was recently broken by disallowing breakpoints in remote files. See bug 120170.</WithOutStack>
  </Bug>
</infozilla-output>

