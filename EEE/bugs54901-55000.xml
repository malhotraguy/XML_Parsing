<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="54901" />
    <CreationDate amount="2004-03-15 16:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Better error logging when launch configuration blows up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Due to a CVS error, a launch configuration in my workspace got messed up, causing a 
SAXParseException when trying to read the file.

However, the exception that was logged gave me no help in figuring out which config it was. I had 
to debug Eclipse to figure it out. When we write this exception to the log, we should mention which 
launch configuration caused it.
Fixed in LaunchManager and DebugCoreMessages. Note that the correct exception is written to 
the .log file, but it's not correctly shown in the Error Log view.

To reproduce this problem, monkey a .launch file from an external tool builder so an exception will 
be thrown parsing the XML.

Please verify, DarinS.
Verified.</WithStack>
    <WithOutStack>Due to a CVS error, a launch configuration in my workspace got messed up, causing a 
SAXParseException when trying to read the file.

However, the exception that was logged gave me no help in figuring out which config it was. I had 
to debug Eclipse to figure it out. When we write this exception to the log, we should mention which 
launch configuration caused it.
Fixed in LaunchManager and DebugCoreMessages. Note that the correct exception is written to 
the .log file, but it's not correctly shown in the Error Log view.

To reproduce this problem, monkey a .launch file from an external tool builder so an exception will 
be thrown parsing the XML.

Please verify, DarinS.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54902" />
    <CreationDate amount="2004-03-15 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[runtime] prefs: Excludes list could be IPath[]?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Should/could the excludes list in the preference service import/export APIS be
paths instead of strings?
No. We already have problems with using IPaths to represent node paths. (due to
invalid chars)

See bug 55410.</WithStack>
    <WithOutStack>Should/could the excludes list in the preference service import/export APIS be
paths instead of strings?
No. We already have problems with using IPaths to represent node paths. (due to
invalid chars)

See bug 55410.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54903" />
    <CreationDate amount="2004-03-15 16:28:00 -0500" />
    <DupId amount="54146" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EventFormatter should throw a meaningful exception (e.g. InvalidXMLException) when de-serializing invalid/ill-formed CBE XML strings.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>EventFormatter should throw a meaningful exception (e.g. InvalidXMLException) 
when de-serializing invalid/ill-formed CBE XML strings.
In defect #54146 (https://bugs.eclipse.org/bugs/show_bug.cgi?id=54146) an 
EventFormatter exception was created to enclose SAX de-serializing exceptions 
thrown when de-serializing invalid/ill-formed CBE XML strings.  Existing 
EventFormatter de-serialization APIs where deprecated so as not to break 
existing users and new de-serialization APIs where created which throw the 
EventFormatter exception.

*** This bug has been marked as a duplicate of 54146 ***
Closing.</WithStack>
    <WithOutStack>EventFormatter should throw a meaningful exception (e.g. InvalidXMLException) 
when de-serializing invalid/ill-formed CBE XML strings.
In defect #54146 (https://bugs.eclipse.org/bugs/show_bug.cgi?id=54146) an 
EventFormatter exception was created to enclose SAX de-serializing exceptions 
thrown when de-serializing invalid/ill-formed CBE XML strings.  Existing 
EventFormatter de-serialization APIs where deprecated so as not to break 
existing users and new de-serialization APIs where created which throw the 
EventFormatter exception.

*** This bug has been marked as a duplicate of 54146 ***
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54904" />
    <CreationDate amount="2004-03-15 16:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Modify all Hyades Example READMEs to better explain &lt;workspace&gt; substitution token/hlcore.jar dependency.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Modify all Hyades Example READMEs to better explain &lt;workspace&gt; substitution 
token/hlcore.jar dependency.

This includes all five examples.
All five examples have been updated based on this defect.  Furthermore, all 
five examples have been migrated to be Eclipse/Hyades 3.0 compliant (e.g. UI 
functionality, labels, etc.)

Code checked-in to HEAD on May 7, 2004.
Verified in Toronto's 20040713_1106 build.
Closing.</WithStack>
    <WithOutStack>Modify all Hyades Example READMEs to better explain &lt;workspace&gt; substitution 
token/hlcore.jar dependency.

This includes all five examples.
All five examples have been updated based on this defect.  Furthermore, all 
five examples have been migrated to be Eclipse/Hyades 3.0 compliant (e.g. UI 
functionality, labels, etc.)

Code checked-in to HEAD on May 7, 2004.
Verified in Toronto's 20040713_1106 build.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54905" />
    <CreationDate amount="2004-03-15 16:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>\docs.events\ and \docs.cbe101\ directories and their contents are not packaged in org.eclipse.hyades.logging.core drivers.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>\docs.events\ and \docs.cbe101\ directories and their contents are not packaged 
in org.eclipse.hyades.logging.core drivers.
Fixed in Hyades 3.0 (build 20040427_0845).
Verified in Hyades 3.0 (build 20040427_0845).

Closing.</WithStack>
    <WithOutStack>\docs.events\ and \docs.cbe101\ directories and their contents are not packaged 
in org.eclipse.hyades.logging.core drivers.
Fixed in Hyades 3.0 (build 20040427_0845).
Verified in Hyades 3.0 (build 20040427_0845).

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54906" />
    <CreationDate amount="2004-03-15 16:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Problems] Problems view is selected automatically and flashy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is for integration view 200403100800.
Using a Java perspective I select a project. The Problems shows up selected.
I click on other views, the Problems view is still selected. Only when I select
the Problems view, then another view is deselected.

I have a filter on the problems, to show only the problems on any resource of
the selected project.
This should be fixed in M9. Please reopen if it recurs.</WithStack>
    <WithOutStack>This is for integration view 200403100800.
Using a Java perspective I select a project. The Problems shows up selected.
I click on other views, the Problems view is still selected. Only when I select
the Problems view, then another view is deselected.

I have a filter on the problems, to show only the problems on any resource of
the selected project.
This should be fixed in M9. Please reopen if it recurs.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54907" />
    <CreationDate amount="2004-03-15 16:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[prefs] references to removed nodes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098241">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason>Preference node "org.eclipse.jdt.core" has been
removed.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:142)</Frame>
          <Frame depth="1">org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:481)</Frame>
          <Frame depth="2">org.eclipse.core.internal.preferences.EclipsePreferences.get(EclipsePreferences.java:349)</Frame>
          <Frame depth="3">org.eclipse.core.internal.preferences.PreferencesService.get(PreferencesService.java:391)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.JavaCore.getOptions(JavaCore.java:2218)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.JavaProject.getOptions(JavaProject.java:1428)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument(SourceIndexer.java:57)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(JavaSearchParticipant.java:72)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(IndexManager.java:290)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.search.indexing.IndexManager$1.execute(IndexManager.java:600)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:368)</Frame>
          <Frame depth="11">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>People may keep hold of the nodes that deal with their plug-in preferences. This
can be problematic.

Especially in the case of import where we clear the prefs and remove the node.
People will get IllegalStateExceptions when they won't expect it.

This exact scenerio might not be a problem once we re-evaluate the import/export
over-write vs merge, but it is still a general issue.
This exact scenario is now happening in build I20040824. JavaCore is caching
Preferences objects, and their lookups fail after an import. A shutdown and
restart is required to get things back in order.

java.lang.IllegalStateException: Preference node "org.eclipse.jdt.core" has been
removed.
	at
org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:142)
	at
org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:481)
	at
org.eclipse.core.internal.preferences.EclipsePreferences.get(EclipsePreferences.java:349)
	at
org.eclipse.core.internal.preferences.PreferencesService.get(PreferencesService.java:391)
	at org.eclipse.jdt.core.JavaCore.getOptions(JavaCore.java:2218)
	at org.eclipse.jdt.internal.core.JavaProject.getOptions(JavaProject.java:1428)
	at
org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument(SourceIndexer.java:57)
	at
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(JavaSearchParticipant.java:72)
	at
org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(IndexManager.java:290)
	at
org.eclipse.jdt.internal.core.search.indexing.IndexManager$1.execute(IndexManager.java:600)
	at
org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:368)
	at java.lang.Thread.run(Thread.java:534)
Should consider using pref node handles to help users?

Not going to fix for now. Its spec'd such that nodes can become invalidated.</WithStack>
    <WithOutStack>People may keep hold of the nodes that deal with their plug-in preferences. This
can be problematic.

Especially in the case of import where we clear the prefs and remove the node.
People will get IllegalStateExceptions when they won't expect it.

This exact scenerio might not be a problem once we re-evaluate the import/export
over-write vs merge, but it is still a general issue.
This exact scenario is now happening in build I20040824. JavaCore is caching
Preferences objects, and their lookups fail after an import. A shutdown and
restart is required to get things back in order.


Should consider using pref node handles to help users?

Not going to fix for now. Its spec'd such that nodes can become invalidated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54908" />
    <CreationDate amount="2004-03-15 16:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>run context menu works in target, but not host</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098247">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/core/expressions/IEvaluationContext</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.privateGetDeclaredConstructors(Class.java:1610)</Frame>
          <Frame depth="2">java.lang.Class.getConstructor0(Class.java:1922)</Frame>
          <Frame depth="3">java.lang.Class.newInstance0(Class.java:278)</Frame>
          <Frame depth="4">java.lang.Class.newInstance(Class.java:261)</Frame>
          <Frame depth="5">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:143)</Frame>
          <Frame depth="6">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:125)</Frame>
          <Frame depth="7">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:114)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:193)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.PluginAction.createDelegate(PluginAction.java:110)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:292)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PluginAction.&lt;init&gt;(PluginAction.java:100)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ObjectPluginAction.&lt;init&gt;(ObjectPluginAction.java:36)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.ActionDescriptor.createAction(ActionDescriptor.java:216)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;(ActionDescriptor.java:134)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;(ActionDescriptor.java:73)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.ObjectActionContributor.createActionDescriptor(ObjectActionContributor.java:134)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PluginActionBuilder.readElement(PluginActionBuilder.java:144)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.ObjectActionContributor.readElement(ObjectActionContributor.java:186)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.registry.RegistryReader.readElements(RegistryReader.java:141)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.registry.RegistryReader.readElementChildren(RegistryReader.java:131)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.ObjectActionContributor.readConfigElement(ObjectActionContributor.java:164)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo(ObjectActionContributor.java:150)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ObjectContributorManager.isApplicableTo(ObjectContributorManager.java:249)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions(ObjectActionContributorManager.java:121)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.PopupMenuExtender.addObjectActions(PopupMenuExtender.java:98)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow(PopupMenuExtender.java:119)</Frame>
          <Frame depth="27">org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:286)</Frame>
          <Frame depth="28">org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:370)</Frame>
          <Frame depth="29">org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:367)</Frame>
          <Frame depth="30">org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:383)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:116)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:838)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3295)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Control.windowProc(Control.java:2967)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1439)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.windowProc(Display.java:2902)</Frame>
          <Frame depth="40">org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Menu._setVisible(Menu.java:221)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.runPopups(Display.java:2393)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2040)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="47">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="49">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="50">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="52">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="53">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="54">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="55">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="57">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="58">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When I export my plug-ins, the run context menu does not work in my host. I 
get this in the log (but it works in my target). I'll re-export to see if it 
fixes the problem, but I think I have done it with the latest code.

Command-line arguments: -shared C:\sdk20040310\eclipse\eclipse.exe -shared 
804_44 -data c:\eclipse3.0-darin\plugins -vm c:\jdk1.4.2\jre\bin\java.exe -
vmargs -cp C:\sdk20040310\eclipse\startup.jar org.eclipse.core.launcher.Main
!ENTRY org.eclipse.ui 4 4 Mar 15, 2004 14:39:54.961
!MESSAGE Could not create action delegate for id: 
org.eclipse.debug.ui.contextualLaunch.submenu
!ENTRY org.eclipse.ui 4 4 Mar 15, 2004 14:39:54.971
!MESSAGE Internal plug-in action delegate error on creation.
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/core/expressions/IEvaluationContext
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1610)
	at java.lang.Class.getConstructor0(Class.java:1922)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:143)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:125)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:114)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(WorkbenchPlugin.java:193)
	at org.eclipse.ui.internal.PluginAction.createDelegate
(PluginAction.java:110)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:292)
	at org.eclipse.ui.internal.PluginAction.&lt;init&gt;(PluginAction.java:100)
	at org.eclipse.ui.internal.ObjectPluginAction.&lt;init&gt;
(ObjectPluginAction.java:36)
	at org.eclipse.ui.internal.ActionDescriptor.createAction
(ActionDescriptor.java:216)
	at org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(ActionDescriptor.java:134)
	at org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(ActionDescriptor.java:73)
	at 
org.eclipse.ui.internal.ObjectActionContributor.createActionDescriptor
(ObjectActionContributor.java:134)
	at org.eclipse.ui.internal.PluginActionBuilder.readElement
(PluginActionBuilder.java:144)
	at org.eclipse.ui.internal.ObjectActionContributor.readElement
(ObjectActionContributor.java:186)
	at org.eclipse.ui.internal.registry.RegistryReader.readElements
(RegistryReader.java:141)
	at org.eclipse.ui.internal.registry.RegistryReader.readElementChildren
(RegistryReader.java:131)
	at org.eclipse.ui.internal.ObjectActionContributor.readConfigElement
(ObjectActionContributor.java:164)
	at org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo
(ObjectActionContributor.java:150)
	at org.eclipse.ui.internal.ObjectContributorManager.isApplicableTo
(ObjectContributorManager.java:249)
	at 
org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions
(ObjectActionContributorManager.java:121)
	at org.eclipse.ui.internal.PopupMenuExtender.addObjectActions
(PopupMenuExtender.java:98)
	at org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow
(PopupMenuExtender.java:119)
	at org.eclipse.jface.action.MenuManager.fireAboutToShow
(MenuManager.java:286)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow
(MenuManager.java:370)
	at org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:367)
	at org.eclipse.jface.action.MenuManager$2.menuShown
(MenuManager.java:383)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:116)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:838)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3295)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2967)
	at org.eclipse.swt.widgets.Decorations.windowProc
(Decorations.java:1439)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2902)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:221)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:2393)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2040)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
Darin,
I can't see why this should happen. Does your jdt.debug.ui plugin have the
requirement &lt;import plugin="org.eclipse.core.expressions"/&gt;? It looks like your
exported environment doesn't have the core expressions classes. You would know
how to debug that better than. I suggest we check this after the next
integration build; if the bug is still there, I'll look into it. If not, we can
close this one. -Chris
Works for me now. Who knows.</WithStack>
    <WithOutStack>When I export my plug-ins, the run context menu does not work in my host. I 
get this in the log (but it works in my target). I'll re-export to see if it 
fixes the problem, but I think I have done it with the latest code.

Command-line arguments: -shared C:\sdk20040310\eclipse\eclipse.exe -shared 
804_44 -data c:\eclipse3.0-darin\plugins -vm c:\jdk1.4.2\jre\bin\java.exe -
vmargs -cp C:\sdk20040310\eclipse\startup.jar org.eclipse.core.launcher.Main
!ENTRY org.eclipse.ui 4 4 Mar 15, 2004 14:39:54.961
!MESSAGE Could not create action delegate for id: 
org.eclipse.debug.ui.contextualLaunch.submenu
!ENTRY org.eclipse.ui 4 4 Mar 15, 2004 14:39:54.971
!MESSAGE Internal plug-in action delegate error on creation.
!STACK 0

Darin,
I can't see why this should happen. Does your jdt.debug.ui plugin have the
requirement &lt;import plugin="org.eclipse.core.expressions"/&gt;? It looks like your
exported environment doesn't have the core expressions classes. You would know
how to debug that better than. I suggest we check this after the next
integration build; if the bug is still there, I'll look into it. If not, we can
close this one. -Chris
Works for me now. Who knows.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54909" />
    <CreationDate amount="2004-03-15 17:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Accessibility] View toolbar items do not have keyboard short-cuts or menu equivalents.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>According to the Accessibility requirements, we need provide keyboard short-cuts
or menu equivalents to all toolbar functionality.

The four buttons in the Outline view do not meet this requirement.


FYI: The Make Targets view is a good example of how this requirement is met as
the context menu for this view contains all of the functionality found in the
toolbar.
The following views have the same problem as indicated above:

Navigator
C/C++ Projects
Tasks
Properties
Console
Variables
Expressions
Registers
Breakpoints
Oops, I guess CDT is not responsible for all of the views in the above list ;)

Please correct me if I am wrong:

Outline 	(Platform)
Navigator	(Platform)
C/C++ Projects	(CDT)
Tasks   	(Platform)
Properties	(Platform)
Console 	(Platform)
Variables	(Platform)
Expressions	(Platform)
Registers	(Platform)
Breakpoints	(Platform)

Please address any views that do not appear in this list but do belong to CDT
and have the indicated problem.

Thanks

C/C++ Projects	(CDT)
Make target view
Some other debug view
Adding dinglis and Mikhailk on the cc for proper followup.

Raising priority since navigability is top accessibility concern.
Let's lower this priority as the requirement is actually to provide menu items 
for all toolbar actions OR provide keyboard access to toolbars. You can get to 
the views via Ctrl+F7, then shift+tab to get to the toolbar, and arrow keys to 
move along the toolbar, spacebar to operate the button.

Going forward however, using the idea that toolbar icons are ways to get at 
frequently repeated operations quickly so providing shortcut keys for all items 
on the toolbar and documenting them in the pull-down menu is recommended to 
make the application more accessible. The documentation is just the key 
sequence for the shortcut (eg Ctrl+Space) and these are faster than mnemonics 
(the underlined letter in a menu item). It is a good design point as well to 
provide mnemonics for all non-dynamic menu items.
Ok, reducing priority to P3 to get it off the gating list for 2.0
PR was targeted to the 2.0 release but not resolved, moving target to 2.1
Vivian please take a look.</WithStack>
    <WithOutStack>According to the Accessibility requirements, we need provide keyboard short-cuts
or menu equivalents to all toolbar functionality.

The four buttons in the Outline view do not meet this requirement.


FYI: The Make Targets view is a good example of how this requirement is met as
the context menu for this view contains all of the functionality found in the
toolbar.
The following views have the same problem as indicated above:

Navigator
C/C++ Projects
Tasks
Properties
Console
Variables
Expressions
Registers
Breakpoints
Oops, I guess CDT is not responsible for all of the views in the above list ;)

Please correct me if I am wrong:

Outline 	(Platform)
Navigator	(Platform)
C/C++ Projects	(CDT)
Tasks   	(Platform)
Properties	(Platform)
Console 	(Platform)
Variables	(Platform)
Expressions	(Platform)
Registers	(Platform)
Breakpoints	(Platform)

Please address any views that do not appear in this list but do belong to CDT
and have the indicated problem.

Thanks

C/C++ Projects	(CDT)
Make target view
Some other debug view
Adding dinglis and Mikhailk on the cc for proper followup.

Raising priority since navigability is top accessibility concern.
Let's lower this priority as the requirement is actually to provide menu items 
for all toolbar actions OR provide keyboard access to toolbars. You can get to 
the views via Ctrl+F7, then shift+tab to get to the toolbar, and arrow keys to 
move along the toolbar, spacebar to operate the button.

Going forward however, using the idea that toolbar icons are ways to get at 
frequently repeated operations quickly so providing shortcut keys for all items 
on the toolbar and documenting them in the pull-down menu is recommended to 
make the application more accessible. The documentation is just the key 
sequence for the shortcut (eg Ctrl+Space) and these are faster than mnemonics 
(the underlined letter in a menu item). It is a good design point as well to 
provide mnemonics for all non-dynamic menu items.
Ok, reducing priority to P3 to get it off the gating list for 2.0
PR was targeted to the 2.0 release but not resolved, moving target to 2.1
Vivian please take a look.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54910" />
    <CreationDate amount="2004-03-15 17:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GLA does not handle invalid executable class specification in component config properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The GLA does not handle specifying invalid executable class values in the 
context and component configurations properly.  For example, if a non-existent 
class name is specifed for the executable class for the Context element, a 
NullPointerException is thrown and the following messages are displayed when 
running standalone:

Error loading class org.eclipse.hyades.logging.adapter.impl.Context: was not 
found.
Adapter could not be started due to configuration problems.
null
Fixedin HEAD branch.

Files effected:

org.eclipse.hyades.logging.adapter/plugin.properties
org.eclipse.hyades.logging.adapter.impl.ContextFactory
org.eclipse.hyades.logging.adapter.impl.Controller
org.eclipse.hyades.logging.adapter.impl.ComponentFactory
org.eclipse.hyades.logging.adapter.internal.util.ComponentLoaderUtil
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The GLA does not handle specifying invalid executable class values in the 
context and component configurations properly.  For example, if a non-existent 
class name is specifed for the executable class for the Context element, a 
NullPointerException is thrown and the following messages are displayed when 
running standalone:

Error loading class org.eclipse.hyades.logging.adapter.impl.Context: was not 
found.
Adapter could not be started due to configuration problems.
null
Fixedin HEAD branch.

Files effected:

org.eclipse.hyades.logging.adapter/plugin.properties
org.eclipse.hyades.logging.adapter.impl.ContextFactory
org.eclipse.hyades.logging.adapter.impl.Controller
org.eclipse.hyades.logging.adapter.impl.ComponentFactory
org.eclipse.hyades.logging.adapter.internal.util.ComponentLoaderUtil
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54911" />
    <CreationDate amount="2004-03-15 17:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>outgoing change marked as a deletion in sync view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- check out project org.eclipse.ui.ide</Line>
          <Line>- refresh later with more changes</Line>
          <Line>- now copy a bunch of files from 6 folders over to 6 other folders</Line>
          <Line>- then select the two projects containing the files and synch with repository.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200403091138

- check out project org.eclipse.ui.ide
- refresh later with more changes 
- now copy a bunch of files from 6 folders over to 6 other folders
- then select the two projects containing the files and synch with repository.

- when the synch view opened files that had been copied and should have shown 
up as updates were marked as deletions.

the files copied were the following sets for both projects org.eclipse.ui.ide 
and org.eclipse.ui

FROM
\icons\full\clcl16\*
TO
\icons\full\elcl16\

FROM
\icons\full\ctool16\*
TO
\icons\full\etool16\

FROM
\icons\full\cview16\*
TO
\icons\full\eview16\*
I have found the likely cause for this and have released it to HEAD. Leaving 
as a reminder to do some stress testing.
This has been fixed.</WithStack>
    <WithOutStack>Build id: 200403091138

- check out project org.eclipse.ui.ide
- refresh later with more changes 
- now copy a bunch of files from 6 folders over to 6 other folders
- then select the two projects containing the files and synch with repository.

- when the synch view opened files that had been copied and should have shown 
up as updates were marked as deletions.

the files copied were the following sets for both projects org.eclipse.ui.ide 
and org.eclipse.ui

FROM
\icons\full\clcl16\*
TO
\icons\full\elcl16\

FROM
\icons\full\ctool16\*
TO
\icons\full\etool16\

FROM
\icons\full\cview16\*
TO
\icons\full\eview16\*
I have found the likely cause for this and have released it to HEAD. Leaving 
as a reminder to do some stress testing.
This has been fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54912" />
    <CreationDate amount="2004-03-15 17:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can not  drop to frame when the selected code comes from a .class file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>While debugging I stopped to a breakpoint setup in my java code.
Now I'd like to drop to a frame whose code is coming from a .class file.
Why is this not possible?
We cannot pop native methods off the stack. Thus, the action is disabled if 
you want to pop a native method, or re-enter a method that is immediately 
above a native method.
Works for me.</WithStack>
    <WithOutStack>While debugging I stopped to a breakpoint setup in my java code.
Now I'd like to drop to a frame whose code is coming from a .class file.
Why is this not possible?
We cannot pop native methods off the stack. Thus, the action is disabled if 
you want to pop a native method, or re-enter a method that is immediately 
above a native method.
Works for me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54913" />
    <CreationDate amount="2004-03-15 17:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Logical structures do not work for generic types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="import">
        <location start="14" end="39" />
        <code>import java.util.Vector;</code>
      </source_code>
      <source_code type="class">
        <location start="40" end="197" />
        <code>public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Example code:

import java.util.Vector;
public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}

When looking at variables, turn on logical structures. The display for the 
vector does not change - it remains as a raw structure. (Likely due to the 
fact that we need to do an evaluation, which does not work with 1.5 code).
In my example, I have the Java builder disabled, and was building with an 
external JDK via an Ant build file. Perhaps this is also the problem - on 
build state for the project?
(thanks Darin, I forgot to file this bug)

It's possible that the computation for the logical structure will fail, but in
this case, the logical structure is not activated.
The nane returned for the interface 'java.util.Collection' is
'java.util.Collection&lt;E&gt;'. The logical structure types provided by jdt debug
doesn't manage generic names.

In fact, I not sure if the logical structures types need to be updated, or if
the name returned should be the non-generic one.
The javadoc of ReferenceType#name() is not clear about this case. From my last
reading of it, I think that returning the non-generic name is more correct than
returning the generic one. 'java.util.Collection' is a valid way to declare an
object, 'java.util.Collection&lt;E&gt;' is usualy not.
Time permitting.
Nothing planned for 3.0
RE-open for 3.1
I think we should fix this for 3.1. The name returned by ReferenceType.name() 
should likely just be java.util.ArrayList, rather than java.util.ArrayList&lt;E&gt;. 
I hacked this fix and then logical structures worked.
Fixed in ReferenceTypeImpl. 
Please verify, Kevin.
verified</WithStack>
    <WithOutStack>Example code:

import java.util.Vector;
public class Test6 {
	public static void main(String[] args) {
		Vector&lt;String&gt; v= new Vector&lt;String&gt;();
		System.out.println(v); // &lt;-- breakpoint here
	}
}

When looking at variables, turn on logical structures. The display for the 
vector does not change - it remains as a raw structure. (Likely due to the 
fact that we need to do an evaluation, which does not work with 1.5 code).
In my example, I have the Java builder disabled, and was building with an 
external JDK via an Ant build file. Perhaps this is also the problem - on 
build state for the project?
(thanks Darin, I forgot to file this bug)

It's possible that the computation for the logical structure will fail, but in
this case, the logical structure is not activated.
The nane returned for the interface 'java.util.Collection' is
'java.util.Collection&lt;E&gt;'. The logical structure types provided by jdt debug
doesn't manage generic names.

In fact, I not sure if the logical structures types need to be updated, or if
the name returned should be the non-generic one.
The javadoc of ReferenceType#name() is not clear about this case. From my last
reading of it, I think that returning the non-generic name is more correct than
returning the generic one. 'java.util.Collection' is a valid way to declare an
object, 'java.util.Collection&lt;E&gt;' is usualy not.
Time permitting.
Nothing planned for 3.0
RE-open for 3.1
I think we should fix this for 3.1. The name returned by ReferenceType.name() 
should likely just be java.util.ArrayList, rather than java.util.ArrayList&lt;E&gt;. 
I hacked this fix and then logical structures worked.
Fixed in ReferenceTypeImpl. 
Please verify, Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54914" />
    <CreationDate amount="2004-03-15 17:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>reasoningScope gets set to null by fromCanonicalXMLDocString</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When I make this call: EventFormatter.fromCanonicalXMLDocString(event, xmlDoc); 
using this string: &lt;?xml version="1.0" encoding="ASCII"?&gt;&lt;CommonBaseEvent 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.ibm.com/AC/commonbaseevent1_0_1" creationTime="2001-12-
31T12:00:00" extensionName="Name" 
globalInstanceId="i0000000000000000000000000000040"&gt;  &lt;contextDataElements 
name="myContext" type="String"&gt;    &lt;contextValue&gt;contextValue&lt;/contextValue&gt;  
&lt;/contextDataElements&gt;  &lt;extendedDataElements name="ede1" type="noValue"&gt;    
&lt;values&gt;values&lt;/values&gt;    &lt;children name="chname1" type="noValue"&gt;      
&lt;values&gt;values&lt;/values&gt;    &lt;/children&gt;  &lt;/extendedDataElements&gt;  
&lt;extendedDataElements name="ede2" type="noValue"&gt;    &lt;values&gt;values&lt;/values&gt;    
&lt;children name="chname2" type="noValue"&gt;      &lt;values&gt;values&lt;/values&gt;    
&lt;/children&gt;  &lt;/extendedDataElements&gt;  &lt;reporterComponentId application="appl1" 
componentType="compType1" component="comp1" componentIdType="compIdType1" 
executionEnvironment="exc1" instanceId="id1" location="loc1" 
locationType="Hostname" processId="pr1" subComponent="sub1" threadId="th1"/&gt;  
&lt;sourceComponentId application="app2" componentType="compType2" 
component="comp2" componentIdType="compIdType2" executionEnvironment="exc2" 
instanceId="id2" location="loc2" locationType="SNA" processId="pr2" 
subComponent="sub2" threadId="th2"/&gt;  &lt;msgDataElement msgLocale="EN"&gt;    
&lt;msgCatalogTokens value="value"/&gt;    &lt;msgId&gt;msgId&lt;/msgId&gt;    
&lt;msgIdType&gt;Name&lt;/msgIdType&gt;    &lt;msgCatalogId&gt;msgCatalogId&lt;/msgCatalogId&gt;    
&lt;msgCatalogType&gt;msgCatalogType&lt;/msgCatalogType&gt;    
&lt;msgCatalog&gt;msgCatalog&lt;/msgCatalog&gt;  &lt;/msgDataElement&gt;  &lt;situation 
categoryName="StartSituation"&gt;    &lt;situationType reasoningScope="EXTERNAL" 
successDisposition="SUCCESSFUL" situationQualifier="START COMPLETED" 
xsi:type="StartSituation" /&gt;  &lt;/situation&gt;&lt;/CommonBaseEvent&gt;

The resulting event has reasoningScope set to null in the situationType.
Code checked-in on 16/03/04 for 1.3.0 branch and HEAD.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>When I make this call: EventFormatter.fromCanonicalXMLDocString(event, xmlDoc); 
using this string: &lt;?xml version="1.0" encoding="ASCII"?&gt;&lt;CommonBaseEvent 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.ibm.com/AC/commonbaseevent1_0_1" creationTime="2001-12-
31T12:00:00" extensionName="Name" 
globalInstanceId="i0000000000000000000000000000040"&gt;  &lt;contextDataElements 
name="myContext" type="String"&gt;    &lt;contextValue&gt;contextValue&lt;/contextValue&gt;  
&lt;/contextDataElements&gt;  &lt;extendedDataElements name="ede1" type="noValue"&gt;    
&lt;values&gt;values&lt;/values&gt;    &lt;children name="chname1" type="noValue"&gt;      
&lt;values&gt;values&lt;/values&gt;    &lt;/children&gt;  &lt;/extendedDataElements&gt;  
&lt;extendedDataElements name="ede2" type="noValue"&gt;    &lt;values&gt;values&lt;/values&gt;    
&lt;children name="chname2" type="noValue"&gt;      &lt;values&gt;values&lt;/values&gt;    
&lt;/children&gt;  &lt;/extendedDataElements&gt;  &lt;reporterComponentId application="appl1" 
componentType="compType1" component="comp1" componentIdType="compIdType1" 
executionEnvironment="exc1" instanceId="id1" location="loc1" 
locationType="Hostname" processId="pr1" subComponent="sub1" threadId="th1"/&gt;  
&lt;sourceComponentId application="app2" componentType="compType2" 
component="comp2" componentIdType="compIdType2" executionEnvironment="exc2" 
instanceId="id2" location="loc2" locationType="SNA" processId="pr2" 
subComponent="sub2" threadId="th2"/&gt;  &lt;msgDataElement msgLocale="EN"&gt;    
&lt;msgCatalogTokens value="value"/&gt;    &lt;msgId&gt;msgId&lt;/msgId&gt;    
&lt;msgIdType&gt;Name&lt;/msgIdType&gt;    &lt;msgCatalogId&gt;msgCatalogId&lt;/msgCatalogId&gt;    
&lt;msgCatalogType&gt;msgCatalogType&lt;/msgCatalogType&gt;    
&lt;msgCatalog&gt;msgCatalog&lt;/msgCatalog&gt;  &lt;/msgDataElement&gt;  &lt;situation 
categoryName="StartSituation"&gt;    &lt;situationType reasoningScope="EXTERNAL" 
successDisposition="SUCCESSFUL" situationQualifier="START COMPLETED" 
xsi:type="StartSituation" /&gt;  &lt;/situation&gt;&lt;/CommonBaseEvent&gt;

The resulting event has reasoningScope set to null in the situationType.
Code checked-in on 16/03/04 for 1.3.0 branch and HEAD.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54915" />
    <CreationDate amount="2004-03-15 18:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[RCP] Need the ability to launch/load the Workbench without showing any windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1352" end="1766" />
        <code>public boolean openWindows() {
        System.out.println("Up and running");
        getWorkbenchConfigurer().getWorkbench().getDisplay().timerExec(10000,
new Runnable() {
        public void run() {
            System.out.println("Opening");
            if (!BrowserAdvisor.super.openWindows()) {
                getWorkbenchConfigurer().emergencyClose();
            }
        }});
        return true;
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need the ability to start up the Workbench without actually showing any 
WorkbenchWindows.  The idea here is that is a significant gain in performance 
in doing this.  WorkbenchWindows are created and brought to the front when 
requested by the user.  With the Workbench running in the background the 
perceived load time experience should be much better than it is today.

This is critical for LWP.
We discussed you providing some timings that would quantitatively justify this 
change.  Have you had the chance to do this?

Has the LWP team explored other options?  Users (i.e. me and most people on the 
UI team) find it very annoying when apps like email clients or office apps 
preload themselves.  We'd rather pay the hit at the time we request the app, as 
long as appropriate feedback is given immediately.

In any case, I think this decision should be up to the app, not the Workbench, 
so we will try to get this in for M8.

Basically we need to defer both the opening up of the first-time window, and 
the restoring of any saved workbench state from the previous session.

Provided new API:
WorkbenchAdvisor.openWindows()
IWorkbenchConfigurer.restoreState()
IWorkbenchConfigurer.openFirstTimeWindow()

As an example, add the following to BrowserAdvisor.
It brings the workbench fully up, but defers opening the first window for 10 secs.

    public boolean openWindows() {
        System.out.println("Up and running");
        getWorkbenchConfigurer().getWorkbench().getDisplay().timerExec(10000,
new Runnable() {
        public void run() {
            System.out.println("Opening");
            if (!BrowserAdvisor.super.openWindows()) {
                getWorkbenchConfigurer().emergencyClose();
            }
        }});
        return true;
    }

Closing.
Verfied on Windows XP with Build id: 200403250800.
Verified on Windows XP Build id: 200403260800.</WithStack>
    <WithOutStack>We need the ability to start up the Workbench without actually showing any 
WorkbenchWindows.  The idea here is that is a significant gain in performance 
in doing this.  WorkbenchWindows are created and brought to the front when 
requested by the user.  With the Workbench running in the background the 
perceived load time experience should be much better than it is today.

This is critical for LWP.
We discussed you providing some timings that would quantitatively justify this 
change.  Have you had the chance to do this?

Has the LWP team explored other options?  Users (i.e. me and most people on the 
UI team) find it very annoying when apps like email clients or office apps 
preload themselves.  We'd rather pay the hit at the time we request the app, as 
long as appropriate feedback is given immediately.

In any case, I think this decision should be up to the app, not the Workbench, 
so we will try to get this in for M8.

Basically we need to defer both the opening up of the first-time window, and 
the restoring of any saved workbench state from the previous session.

Provided new API:
WorkbenchAdvisor.openWindows()
IWorkbenchConfigurer.restoreState()
IWorkbenchConfigurer.openFirstTimeWindow()

As an example, add the following to BrowserAdvisor.
It brings the workbench fully up, but defers opening the first window for 10 secs.

    public boolean openWindows() {
        System.out.println("Up and running");
        getWorkbenchConfigurer().getWorkbench().getDisplay().timerExec(10000,
new Runnable() {
        public void run() {
            System.out.println("Opening");
            if (!BrowserAdvisor.super.openWindows()) {
                getWorkbenchConfigurer().emergencyClose();
            }
        }});
        return true;
    }

Closing.
Verfied on Windows XP with Build id: 200403250800.
Verified on Windows XP Build id: 200403260800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54916" />
    <CreationDate amount="2004-03-15 18:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Environment tab should show icons for env vars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The environment tab should show icons for variables, similar to the installed 
JREs table (except, use the env var icon). As well, the selection dialog for 
env vars should show icons.
Deferred
re-open
Implemented in EnvironmentTab. Please verify, DW.
Changed to the ENV_VAR image, rather than the ENVIRONMENT image.</WithStack>
    <WithOutStack>The environment tab should show icons for variables, similar to the installed 
JREs table (except, use the env var icon). As well, the selection dialog for 
env vars should show icons.
Deferred
re-open
Implemented in EnvironmentTab. Please verify, DW.
Changed to the ENV_VAR image, rather than the ENVIRONMENT image.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54917" />
    <CreationDate amount="2004-03-15 18:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>PDE does not refresh correctly when ID changes in plugin.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>a) We cannot find the entry or</Line>
          <Line>b) We can find the entry but the workspace model in it is null</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="11">
        <Lines>
          <Line>1) Search the entries to find the model instance in question (it will be in</Line>
          <Line>the slot under the old ID)</Line>
          <Line>2) Remove the model from the old slot</Line>
          <Line>2a) If the slot has external model as well, just set the workspace</Line>
          <Line>reference to null</Line>
          <Line>2b) If the slot does not have external model, remove the slot from the</Line>
          <Line>table</Line>
          <Line>3) Create a new slot with the new ID and assign the workspace model</Line>
          <Line />
          <Line>Case 2) can be handled similarly to 1) but in that case we don't have to</Line>
          <Line>create the new slot, just set the workspace model reference.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you change a plugin id in a plugin.xml file, PDE does not dynamically 
refresh.  Plugins that show a dependency on the new name show an error because 
it thinks the plugin is missing, and they don't build.

The workaround is to shut down and restart, then it refreshes correctly.
*** Bug 59508 has been marked as a duplicate of this bug. ***
This is serious enough to warrant a fix for M9.

I looked at the code and my take is that we need to do the following:

In PluginModelManager, line 209, when a model change is detected, we need to 
look up its entry (as we do already). If:
    a) We cannot find the entry or
    b) We can find the entry but the workspace model in it is null

   we need to put the model into the right home.

Case a) needs to be handled in the following way:

   1) Search the entries to find the model instance in question (it will be in 
the slot under the old ID)
   2) Remove the model from the old slot
      2a) If the slot has external model as well, just set the workspace 
reference to null
      2b) If the slot does not have external model, remove the slot from the 
table
   3) Create a new slot with the new ID and assign the workspace model
     
Case 2) can be handled similarly to 1) but in that case we don't have to 
create the new slot, just set the workspace model reference.

We have to change the notification as well accordingly. If we are removing a 
model entry, we must fire entry removed event. If we are adding a new entry, 
we must also fire model entry addition. If we are changing an existing entry, 
we must fire entry change event. Some of the scenarios above may involve 2,3 
or 4 separate events.
Fixed.</WithStack>
    <WithOutStack>If you change a plugin id in a plugin.xml file, PDE does not dynamically 
refresh.  Plugins that show a dependency on the new name show an error because 
it thinks the plugin is missing, and they don't build.

The workaround is to shut down and restart, then it refreshes correctly.
*** Bug 59508 has been marked as a duplicate of this bug. ***
This is serious enough to warrant a fix for M9.

I looked at the code and my take is that we need to do the following:

In PluginModelManager, line 209, when a model change is detected, we need to 
look up its entry (as we do already). If:
    a) We cannot find the entry or
    b) We can find the entry but the workspace model in it is null

   we need to put the model into the right home.

Case a) needs to be handled in the following way:

   1) Search the entries to find the model instance in question (it will be in 
the slot under the old ID)
   2) Remove the model from the old slot
      2a) If the slot has external model as well, just set the workspace 
reference to null
      2b) If the slot does not have external model, remove the slot from the 
table
   3) Create a new slot with the new ID and assign the workspace model
     
Case 2) can be handled similarly to 1) but in that case we don't have to 
create the new slot, just set the workspace model reference.

We have to change the notification as well accordingly. If we are removing a 
model entry, we must fire entry removed event. If we are adding a new entry, 
we must also fire model entry addition. If we are changing an existing entry, 
we must fire entry change event. Some of the scenarios above may involve 2,3 
or 4 separate events.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54918" />
    <CreationDate amount="2004-03-15 18:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[WorkingSets] Resource filters per working set rather than global</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I would like to ask for your opinion on the following:
I would like to see the resource filters per working set rather than global.
That give people more flexibility and e.g. enable people to create two
working sets with e.g. the same projects but with different items filtered
(e.g. one filter setting "only java classes" and one "everything").
Not for 3.0
Reopening now that 3.0 has shipped
We wont be doing this as it's stated.  We may do something similar if we refresh working sets at all but this is not on the plan at this time.</WithStack>
    <WithOutStack>I would like to ask for your opinion on the following:
I would like to see the resource filters per working set rather than global.
That give people more flexibility and e.g. enable people to create two
working sets with e.g. the same projects but with different items filtered
(e.g. one filter setting "only java classes" and one "everything").
Not for 3.0
Reopening now that 3.0 has shipped
We wont be doing this as it's stated.  We may do something similar if we refresh working sets at all but this is not on the plan at this time.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54919" />
    <CreationDate amount="2004-03-15 19:11:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default configuration and instance locations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- if the install is moved, the configuration/workspace become decoupled.</Line>
          <Line>- path may be long depending on install path</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- an actual file path or URL</Line>
          <Line>- @none if none is desired</Line>
          <Line>- @noDefault if you want to force it to be set explicitl</Line>
          <Line>- @user.dir for somewhere in the current dir (equivalent to the current</Line>
          <Line>behaviour)</Line>
          <Line>- @user.home to put the workspace in the uesrs's directory under a location</Line>
          <Line>based on the values in .eclipseproduct</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently the default instance and configuraiton locations are relative to the 
eclipse install location.  This has long been problematic for shared installs 
as well as unix users where programs are installed by different users.  The 
current behaviour is to compute the config location relative ot the install if 
it is writable.  If it is not, a location based on the user.home system 
property is used.  The instance location is either in the install dir or you 
have to spec -data.

Proposal:  The default for both should be somewhere relative to the user.home 
property.  Specifically, the values found in .eclipseproduct in the install 
will be used to get
   &lt;user.home&gt;/&lt;some qualifier path&gt;
as the base on which to compute "user relative" locations for config and 
instance.  

The path qualifier is read/computed from the .eclipseproduct file as follows:
   id=some.id
   version=some.version.number
   user.root= [ @computed | @install | &lt;relative path&gt; | &lt;absolute path&gt; ]

@computed = use the id and version information from the .eclipseproduct file to 
compute a qualifier of the form &lt;id&gt;_&lt;version&gt;.  This is the default behaivour 
if the user.root property is not specified in .eclipseproduct.

@install = use the eclipse install dir path as the base for the user root.  
that is, the result would be &lt;user.dir&gt;/d__/eclipse.  &lt;id&gt; and &lt;version&gt; are 
ignored.

&lt;relative path&gt; = append the given value to &lt;user.home&gt; system property

&lt;absolute path&gt; = use this value directly. 

In the Eclipse .eclipseproduct we would set user.root=@install.  

The version number in .eclipseproducts does not change from build to build so 
otherwise multiple eclipse installs would fight for the same config/workspace 
locations.  Using @install ties the config/workspace location to the install 
location.  

Downsides: 
- if the install is moved, the configuration/workspace become decoupled.
- path may be long depending on install path

Summary:  With these changes the default configuration area is in 
   &lt;user.home&gt;/d__/m7/eclipse/configuration
The default workspace is in
   &lt;user.home&gt;/d__/m7/eclipse/workspace

Note that the UI team has added a workspace prompter which asks the user for a 
workspace location when they start eclipse.  The use of -data should deminish 
and users running with no arguments will still be in control of their workspace 
location.
Rather than changing the defaults for Eclipse, we have introduced the ability 
for users/product packagers to defined the defaults.  The key is the config.ini 
file found in the configuration area of an install.  

As shipped in Eclipse, config.ini does not contain any of the keys discussed 
below.  As such, the original default algorithm for locating the config dir is 
used (i.e, use the install location if writable, otherwise go to the someplace 
in the user home dir based on the values in .eclipseproduct file).

The runtime first consults the base configuration information.  Typically this 
is found in 
    &lt;eclipse&gt;/configuration/config.ini 
though this is controlled via the osgi.baseConfiguration.area system property 
(where the value is a file path or URL).

If this file contains
    osgi.configuration.area=&lt;some location&gt;
then the given location is used as the local configuration location.

The location can be a file path, URL or one of @user.dir or @user.home.  The 
latter two values resolve to the valued of the respective system properites.  
To this is added a set of sub dirs based again on the values 
in .eclipseproduct.  This local configuration locaoitn is used to store the 
writeable part of the configuraiton.  

Shared installs should use @user.home.  The current default is effectively 
@user.dir (assuming the current working dir is "eclipse" when the system is 
started).

The parent of the local configuraiton location is the shared configuration 
area.  By default this is the configuration dir in the eclipse install.  The 
location of this shared config data is controled by a further property
   osgi.sharedConfiguration.area=&lt;location&gt;
where location is a file path or URL for the read only configuration area.  The 
local configuration area's config.ini is free to set the value of this 
property.  Note that if 
   osgi.configuration.cascaded="false" 
the local configuration has no parent.

Using the outlined mechanisms, users or product packagers can setup their 
systesm to put configuration info in a wide range of locations.

The defaults for the workspace are not being changed since the UI team recently 
introduced the workspace location prompter.  Products or users wishing to set 
the location can use the osgi.instance.area property set in a config.ini files 
and provide a value of either
- an actual file path or URL
- @none if none is desired
- @noDefault if you want to force it to be set explicitl
- @user.dir for somewhere in the current dir (equivalent to the current 
behaviour)
- @user.home to put the workspace in the uesrs's directory under a location 
based on the values in .eclipseproduct

This should be enough configurability to keep people busy for a while.</WithStack>
    <WithOutStack>Currently the default instance and configuraiton locations are relative to the 
eclipse install location.  This has long been problematic for shared installs 
as well as unix users where programs are installed by different users.  The 
current behaviour is to compute the config location relative ot the install if 
it is writable.  If it is not, a location based on the user.home system 
property is used.  The instance location is either in the install dir or you 
have to spec -data.

Proposal:  The default for both should be somewhere relative to the user.home 
property.  Specifically, the values found in .eclipseproduct in the install 
will be used to get
   &lt;user.home&gt;/&lt;some qualifier path&gt;
as the base on which to compute "user relative" locations for config and 
instance.  

The path qualifier is read/computed from the .eclipseproduct file as follows:
   id=some.id
   version=some.version.number
   user.root= [ @computed | @install | &lt;relative path&gt; | &lt;absolute path&gt; ]

@computed = use the id and version information from the .eclipseproduct file to 
compute a qualifier of the form &lt;id&gt;_&lt;version&gt;.  This is the default behaivour 
if the user.root property is not specified in .eclipseproduct.

@install = use the eclipse install dir path as the base for the user root.  
that is, the result would be &lt;user.dir&gt;/d__/eclipse.  &lt;id&gt; and &lt;version&gt; are 
ignored.

&lt;relative path&gt; = append the given value to &lt;user.home&gt; system property

&lt;absolute path&gt; = use this value directly. 

In the Eclipse .eclipseproduct we would set user.root=@install.  

The version number in .eclipseproducts does not change from build to build so 
otherwise multiple eclipse installs would fight for the same config/workspace 
locations.  Using @install ties the config/workspace location to the install 
location.  

Downsides: 
- if the install is moved, the configuration/workspace become decoupled.
- path may be long depending on install path

Summary:  With these changes the default configuration area is in 
   &lt;user.home&gt;/d__/m7/eclipse/configuration
The default workspace is in
   &lt;user.home&gt;/d__/m7/eclipse/workspace

Note that the UI team has added a workspace prompter which asks the user for a 
workspace location when they start eclipse.  The use of -data should deminish 
and users running with no arguments will still be in control of their workspace 
location.
Rather than changing the defaults for Eclipse, we have introduced the ability 
for users/product packagers to defined the defaults.  The key is the config.ini 
file found in the configuration area of an install.  

As shipped in Eclipse, config.ini does not contain any of the keys discussed 
below.  As such, the original default algorithm for locating the config dir is 
used (i.e, use the install location if writable, otherwise go to the someplace 
in the user home dir based on the values in .eclipseproduct file).

The runtime first consults the base configuration information.  Typically this 
is found in 
    &lt;eclipse&gt;/configuration/config.ini 
though this is controlled via the osgi.baseConfiguration.area system property 
(where the value is a file path or URL).

If this file contains
    osgi.configuration.area=&lt;some location&gt;
then the given location is used as the local configuration location.

The location can be a file path, URL or one of @user.dir or @user.home.  The 
latter two values resolve to the valued of the respective system properites.  
To this is added a set of sub dirs based again on the values 
in .eclipseproduct.  This local configuration locaoitn is used to store the 
writeable part of the configuraiton.  

Shared installs should use @user.home.  The current default is effectively 
@user.dir (assuming the current working dir is "eclipse" when the system is 
started).

The parent of the local configuraiton location is the shared configuration 
area.  By default this is the configuration dir in the eclipse install.  The 
location of this shared config data is controled by a further property
   osgi.sharedConfiguration.area=&lt;location&gt;
where location is a file path or URL for the read only configuration area.  The 
local configuration area's config.ini is free to set the value of this 
property.  Note that if 
   osgi.configuration.cascaded="false" 
the local configuration has no parent.

Using the outlined mechanisms, users or product packagers can setup their 
systesm to put configuration info in a wide range of locations.

The defaults for the workspace are not being changed since the UI team recently 
introduced the workspace location prompter.  Products or users wishing to set 
the location can use the osgi.instance.area property set in a config.ini files 
and provide a value of either
- an actual file path or URL
- @none if none is desired
- @noDefault if you want to force it to be set explicitl
- @user.dir for somewhere in the current dir (equivalent to the current 
behaviour)
- @user.home to put the workspace in the uesrs's directory under a location 
based on the values in .eclipseproduct

This should be enough configurability to keep people busy for a while.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54920" />
    <CreationDate amount="2004-03-15 19:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[RelEng Release] Show "Tag as version" in Label Decorations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 200403100800

If I say "Tag as version" from my workspace, and if I have CVS Label 
Decorations turned on, it would be nice if the version name would show up as a 
text label decoration on the project(s) that I just tagged.

The reason this would be really nice is that when I am doing the SWT build, I 
have 17 projects to tag - some with the same name, some with different names - 
and sometimes I find myself wondering "Did I tag that one already or not?"
This feature would save me the trouble and time of having to go look.  ;)
We can't really do that. A tag in the decorator indicates that the local 
project is a loaded version whereas the tag operation creates a version on the 
repository but leaves your local workspace mapped to HEAD. However, we are 
currently improving the Releng release tool. We can give you a demo of what we 
have if you are interested.
Can't fix for reasons stated above.
Reopening
This may be technically possible but is to specific a case to be consider for 
the CVS plugin. A relEng specific decorator may be possible.
We do not plan on addressing this issue.</WithStack>
    <WithOutStack>Build 200403100800

If I say "Tag as version" from my workspace, and if I have CVS Label 
Decorations turned on, it would be nice if the version name would show up as a 
text label decoration on the project(s) that I just tagged.

The reason this would be really nice is that when I am doing the SWT build, I 
have 17 projects to tag - some with the same name, some with different names - 
and sometimes I find myself wondering "Did I tag that one already or not?"
This feature would save me the trouble and time of having to go look.  ;)
We can't really do that. A tag in the decorator indicates that the local 
project is a loaded version whereas the tag operation creates a version on the 
repository but leaves your local workspace mapped to HEAD. However, we are 
currently improving the Releng release tool. We can give you a demo of what we 
have if you are interested.
Can't fix for reasons stated above.
Reopening
This may be technically possible but is to specific a case to be consider for 
the CVS plugin. A relEng specific decorator may be possible.
We do not plan on addressing this issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54921" />
    <CreationDate amount="2004-03-15 19:14:00 -0500" />
    <DupId amount="30919" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Plugins cannot find security jars in lib\ext directory. Gives NOClassDefFoundError while loading javax.crypto.security</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="21">
        <Lines>
          <Line>1)C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe   -classpath</Line>
          <Line>%WSWB_PATH%\startup.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar</Line>
          <Line>org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench  -dev bin</Line>
          <Line>-consoleLog -os win32 -ws win32 -arch x86</Line>
          <Line />
          <Line>I have some security jars from IBM i.e. ibmjcefw.jar, ibmjceprovider.jar and all</Line>
          <Line>the accompanying security  jars in  jre\lib\ext\ directory</Line>
          <Line />
          <Line>Whenever I try to use encryption/decryption from inside my plugins , it always</Line>
          <Line>gives me a NoClassDefFoundError  while loading  the class javax/crypto/SecretKey.</Line>
          <Line>It seems Eclipse is unable to load any classes from the jars in jre\lib\ext</Line>
          <Line>directory.</Line>
          <Line />
          <Line>However I also found this.  All my encryption/decryption is working when I test</Line>
          <Line>my plugins bylaunching as a run time workbench.</Line>
          <Line>I found that in this case the launch command is</Line>
          <Line />
          <Line>2) C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe -  -classpath</Line>
          <Line>%WSWB_PATH%\plugins\org.eclipse.pde.ui_2.0.1\launcher\slimlauncher.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar</Line>
          <Line>EclipseRuntimeLauncher org.eclipse.ui.workbench  -dev bin -consoleLog -os win32</Line>
          <Line>-ws win32 -arch x86</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi,
  When eclipse  workbench is launched using eclipse.exe , it seems it uses
org.eclipse.core.launcher.Main class to launch the workbench

The command used internally  is

1)C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe   -classpath
%WSWB_PATH%\startup.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench  -dev bin
-consoleLog -os win32 -ws win32 -arch x86 

I have some security jars from IBM i.e. ibmjcefw.jar, ibmjceprovider.jar and all
the accompanying security  jars in  jre\lib\ext\ directory

Whenever I try to use encryption/decryption from inside my plugins , it always
gives me a NoClassDefFoundError  while loading  the class javax/crypto/SecretKey.
It seems Eclipse is unable to load any classes from the jars in jre\lib\ext
directory.

However I also found this.  All my encryption/decryption is working when I test
my plugins bylaunching as a run time workbench.
I found that in this case the launch command is

2) C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe -  -classpath
%WSWB_PATH%\plugins\org.eclipse.pde.ui_2.0.1\launcher\slimlauncher.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar
EclipseRuntimeLauncher org.eclipse.ui.workbench  -dev bin -consoleLog -os win32
-ws win32 -arch x86 

Compare (1) and (2) ; Why is it that (2) is able to find the security jars in
lib\ext] directory of JRE whereas (1) is unable to ??  It seems that while
creating the BootLoader in (1), its parent is set to null; So it seems the jars
in lib\ext directory are lost and not present in the Class Loader heirarchy when
  Eclipse boots up. 

It seems the extension class loader is lost . And hence these problems are
occurring.

Thanks,
Radha.


*** This bug has been marked as a duplicate of 30919 ***</WithStack>
    <WithOutStack>Hi,
  When eclipse  workbench is launched using eclipse.exe , it seems it uses
org.eclipse.core.launcher.Main class to launch the workbench

The command used internally  is

1)C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe   -classpath
%WSWB_PATH%\startup.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench  -dev bin
-consoleLog -os win32 -ws win32 -arch x86 

I have some security jars from IBM i.e. ibmjcefw.jar, ibmjceprovider.jar and all
the accompanying security  jars in  jre\lib\ext\ directory

Whenever I try to use encryption/decryption from inside my plugins , it always
gives me a NoClassDefFoundError  while loading  the class javax/crypto/SecretKey.
It seems Eclipse is unable to load any classes from the jars in jre\lib\ext
directory.

However I also found this.  All my encryption/decryption is working when I test
my plugins bylaunching as a run time workbench.
I found that in this case the launch command is

2) C:\&lt;SOME_LOCATION&gt;\jre\bin\java.exe -  -classpath
%WSWB_PATH%\plugins\org.eclipse.pde.ui_2.0.1\launcher\slimlauncher.jar;%WSWB_PATH%\plugins\org.eclipse.core.boot_2.0.3\boot.jar
EclipseRuntimeLauncher org.eclipse.ui.workbench  -dev bin -consoleLog -os win32
-ws win32 -arch x86 

Compare (1) and (2) ; Why is it that (2) is able to find the security jars in
lib\ext] directory of JRE whereas (1) is unable to ??  It seems that while
creating the BootLoader in (1), its parent is set to null; So it seems the jars
in lib\ext directory are lost and not present in the Class Loader heirarchy when
  Eclipse boots up. 

It seems the extension class loader is lost . And hence these problems are
occurring.

Thanks,
Radha.


*** This bug has been marked as a duplicate of 30919 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54922" />
    <CreationDate amount="2004-03-15 19:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[implementation] Java editor disposes default StyledText caret's image</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="singlecomment">
        <location start="5139" end="5164" />
        <code>//workaround bug#54922</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="5164" end="5342" />
        <code>if (updateImage) {
	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
		createCaretBitmaps();
	}
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5952" end="5973" />
        <code>//if (updateImage) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="5952" end="6143" />
        <code>//if (updateImage) {
//	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
//		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
//			createCaretBitmaps();
//	}
//}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="6140" end="6144" />
        <code>//}</code>
      </source_code>
      <source_code type="assignment">
        <location start="7020" end="7044" />
        <code>st= new StyledText(...);</code>
      </source_code>
      <source_code type="assignment">
        <location start="7109" end="7130" />
        <code>c1= new Caret(st, 0);</code>
      </source_code>
      <source_code type="assignment">
        <location start="7267" end="7295" />
        <code>initialCaret= st.getCaret();</code>
      </source_code>
      <source_code type="assignment">
        <location start="7296" end="7317" />
        <code>c2= new Caret(st, 0);</code>
      </source_code>
      <source_code type="assignment">
        <location start="7318" end="7339" />
        <code>c3= new Caret(st, 0);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="9322" end="9368" />
        <code>if (caret != null) {
		setCaretLocation();
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="4">
      <Enumeration lines="2">
        <Lines>
          <Line>1- This caret is not bidi aware</Line>
          <Line>2- At some point they dispose the image of the StyledText default Caret</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1. checked out org.eclipse.swt from HEAD (20.12.2004, 22h00 MET)</Line>
          <Line>2. commented out the following code in StyledText.java (rev. 1.202)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1. no exceptions - neither in .log nor in console</Line>
          <Line>2. works as expected</Line>
          <Line>build I20040407.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. New workspace</Line>
          <Line>2. Create Java project</Line>
          <Line>3. Create Java File</Line>
          <Line>4. Open Java File</Line>
          <Line>5. Focus Java Editor</Line>
          <Line>6. Press Insert key</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200403040800

Java editor, according to the insert mode, sets a special Caret in the 
StyledText. I've two problem with that:
1- This caret is not bidi aware
2- At some point they dispose the image of the StyledText default Caret

We (SWT Team) have some major changes (still to be release) in StyledText that 
will expose this UI bug.

Here is the stack trace:
java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1064)
	at org.eclipse.swt.graphics.Image.dispose(Image.java:825)
	at org.eclipse.ui.texteditor.AbstractTextEditor.disposeNonDefaultCaret
(AbstractTextEditor.java:4378)
	at org.eclipse.ui.texteditor.AbstractTextEditor.updateCaret
(AbstractTextEditor.java:4359)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleInsertModeChanged
(AbstractTextEditor.java:4399)
	at org.eclipse.ui.texteditor.AbstractTextEditor.setInsertMode
(AbstractTextEditor.java:4234)
	at org.eclipse.ui.texteditor.AbstractTextEditor.switchToNextInsertMode
(AbstractTextEditor.java:4266)
	at org.eclipse.ui.texteditor.AbstractTextEditor.access$4
(AbstractTextEditor.java:4253)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ToggleInsertModeAction.run
(AbstractTextEditor.java:808)
	at org.eclipse.ui.texteditor.TextNavigationAction.runWithEvent
(TextNavigationAction.java:106)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:68)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:160)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand
(WorkbenchKeyboard.java:475)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press
(WorkbenchKeyboard.java:887)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent
(WorkbenchKeyboard.java:931)
	at 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings
(WorkbenchKeyboard.java:568)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2
(WorkbenchKeyboard.java:500)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent
(WorkbenchKeyboard.java:256)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:809)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:834)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:819)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3487)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2971)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2962)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1362)
	at org.eclipse.swt.internal.BidiUtil.windowProc(BidiUtil.java:647)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1438)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2100)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
re: 1 - we know there's a problem with that shape (bug 39600, bug 39205)

2- what are the changes in SWT and what is the scenario that shows the bug? Can
you give us a preview? As you can see from the stack trace the intention is to
dispose the non-default caret and not the styled text's default caret. So it
would be good to have the scenario where we dispose the default one.

Note: Please one bug per report.
Created bug 54942 for the BIDI problem.

Created attachment 8605
new StyledText implementation

Copy these files to:
org.eclipse.swt\Eclipse SWT Custom Widgets\common\org\eclipse\swt\custom
self-host eclipse, in tha java editor press insert.
We might be releasing this code today...
Sure, go ahead. We can then grap the SWT plug-in from the N-build and
investigate the bug.

Note: when (at least we in Zurich ;-) talk about a preview then we mean the
whole plug-in.

Code released. Still, you will need to open the StyledText, go to line 6462 
and remove the code:

//workaround bug#54922 
if (updateImage) {
	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
		createCaretBitmaps();
	}
}


I would assume it is much easier for you to give us a preview than for us
switching to source, isn't it?

You want a preview: load org.eclipse.swt from dev.eclipse.org, it does not 
require any other plugin, remove the workaround, selfhost eclipse and test it. 
It will not take you more than 3 minutes, very easy.

I already gave you the stacktrace, source code, I released the changes in the 
CVS... Please, look into this.

I did the following as requested in comment 6:
1. checked out org.eclipse.swt from HEAD (20.12.2004, 22h00 MET)
2. commented out the following code in StyledText.java (rev. 1.202)
//if (updateImage) {
//	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
//		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
//			createCaretBitmaps();
//	}
//}


What I see is:
1. no exceptions - neither in .log nor in console
2. works as expected
build I20040407.

Steps
1. New workspace
2. Create Java project
3. Create Java File
4. Open Java File
5. Focus Java Editor
6. Press Insert key

Created attachment 9303
log file

Although the exception happens inside SWT code it is caused by the application
who reach for StyledText's default caret and disposed its image.
Note, in order to reproduce this bug your machine has to be Bidi Enabled (it 
means, you need to have Arabic or Hebrew input method installed).

I now see the problem:
normally in SWT when someone creates a resource and then sets it has to dispose
it, right. We followed this approach in Text code with Caret as well. Which I
guess was wrong (i.e. caret doesn't need to be treated as resource and disposed).

Let me explain our scenario to give you some background:
st= new StyledText(...);
&lt;... now happens code you can't control - assume someone calls:
c1= new Caret(st, 0);
In our case this means a client pre-configures StyledText with some caret
...&gt;
now we get the StyledText and want to apply our caret(s)
initialCaret= st.getCaret();
c2= new Caret(st, 0);
c3= new Caret(st, 0);
Caching c2 for later use. Now assume the editor closes. st automatically
disposes c3 and I can dispose c2 but since normally ST disposes the caret I also
need to dispose the initial caret if it is not styled text's default. We assumed
that if the default caret is used getCaret returns null - this does not hold in
the BIDI case.

I guess we don't need to track and dispose the caret. We only need to ensure to
dispose the images that we create and the client is responsible for disposing
his image (if he created one). Am I on the right track?
I assume the Caret is not an OS resource, right? 

Another question is how we can set a caret without an image since StyledText
always sets an image if the direction is not default and our caret's image is null.


"I assume the Caret is not an OS resource, right? "
Wrong, it is. Follow the rule: if you created and disposed.

"Another question is how we can set a caret without an image since StyledText
always sets an image if the direction is not default and our caret's image is 
null."

If you set a caret in the StyledText the StyledText should not change its 
image.

I will change the StyledText as follow:
StyledText will always create and dispose its internal Caret, therefore you 
don't need to disposed it even though you set a new caret in the StyledText.
You must dispose the carets you create yourself, don't relie that StyledText 
will dispose it for you.

Sounds good.


I've released StyledText changes. It will be in tomorrow's integration build.
Note: Using this approach one of the caret will be disposed twice: who created 
the caret always disposed it plus the framework in Canvas always assure that 
the current caret always gets disposed. This is not a problem. In SWT, we can 
call dispose on object multiple times.

Fixed the code on our side for I200404130800. There's just one remaining issue:
it would be nice if setCaret(null) would reset the StyledText's caret. In
I20040407 this is not the case due to:

	if (caret != null) {
		setCaretLocation();
	}

Q: how can I reset the StyledText's caret to default (especially in BIDI situation)?

Daniel, I understand that setCaret(null) restores the StyledText default caret 
is convenient for you but I don't think I can do that because there is the 
case where the application actually really wants to set the caret to null 
(maybe to emulated a disable state or something). But maybe this case should 
not be allowed anyway. I'm going to ask Silenio or Steve if I can do that for 
you.

About the problem with BIDI I'm afraid the StyledText does not give you any 
support for that. Internally StyledText handle all bidi code but it does not 
expose any functionality.
I fully understand that it is problematic to setCaret(null). Couldn't StyledText
it offer resetCaret()?

Silenio, StyledText API request see comment#21.
IMO, it is easy enough for the application to remember styled text default 
caret and set back whenever it is need.
&gt;IMO, it is easy enough for the application to remember styled text default 
&gt;caret and set back whenever it is need.
This is only true if styled text doesn't dynamically change the caret e.g. when
I change input locale.

&gt;This is only true if styled text doesn't dynamically change the caret e.g. 
&gt;when I change input locale.
StyledText does not changed the caret when the input locale changes. It 
changes its image only. It is always the same instance of Caret.

Daniel, I just downloaded and tested I200404130800.
The caret is a pinhead (x,2). I believe you relie that StyledText will set the 
size of the caret for you, right ?
I actually changed StyledText to only set location a user-defined caret 
preserving all others attributes (image, size).
I will release some code to always set (override) the height of the caret. 
this is fix the problem.
Other option would be the application to set height of the caret (using the 
API StyledText#getLineHeight() to figure out the height).


Other problem: I didn't see 'Insert Mode', Java editor only has 'Smart Insert' 
and 'Override' now ?

&gt;The caret is a pinhead (x,2). I believe you rely that StyledText will set the 
&gt;size of the caret for you, right ?
Yes, we did so (we set the height to caret.getSize().y). which used to work.

&gt;I will release some code to always set (override) the height of the caret. 
&gt;this is fix the problem.
Good. Though I would treat this as being our bug since we expected that a new
caret has the correct height. We just fixed our code.

&gt;Other problem: I didn't see 'Insert Mode', Java editor only has 'Smart Insert' 
&gt;and 'Override' now ?
Correct :-) We removed the three-state toggle since it confused people. It now
toggles between "Smart Insert" and "Overwrite". To get the 'raw' insert mode you
need to press Ctrl+Shift+Insert. After doing so it toggles between 'raw' Insert
and "Overwrite" mode. Ctrl+Shift+Insert brings back smartness.
re comment 24: I then agree with comment 22.</WithStack>
    <WithOutStack>Build id: 200403040800

Java editor, according to the insert mode, sets a special Caret in the 
StyledText. I've two problem with that:
1- This caret is not bidi aware
2- At some point they dispose the image of the StyledText default Caret

We (SWT Team) have some major changes (still to be release) in StyledText that 
will expose this UI bug.

Here is the stack trace:
java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1064)
	at org.eclipse.swt.graphics.Image.dispose(Image.java:825)
	at org.eclipse.ui.texteditor.AbstractTextEditor.disposeNonDefaultCaret
(AbstractTextEditor.java:4378)
	at org.eclipse.ui.texteditor.AbstractTextEditor.updateCaret
(AbstractTextEditor.java:4359)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleInsertModeChanged
(AbstractTextEditor.java:4399)
	at org.eclipse.ui.texteditor.AbstractTextEditor.setInsertMode
(AbstractTextEditor.java:4234)
	at org.eclipse.ui.texteditor.AbstractTextEditor.switchToNextInsertMode
(AbstractTextEditor.java:4266)
	at org.eclipse.ui.texteditor.AbstractTextEditor.access$4
(AbstractTextEditor.java:4253)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ToggleInsertModeAction.run
(AbstractTextEditor.java:808)
	at org.eclipse.ui.texteditor.TextNavigationAction.runWithEvent
(TextNavigationAction.java:106)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:68)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:160)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand
(WorkbenchKeyboard.java:475)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press
(WorkbenchKeyboard.java:887)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent
(WorkbenchKeyboard.java:931)
	at 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings
(WorkbenchKeyboard.java:568)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2
(WorkbenchKeyboard.java:500)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent
(WorkbenchKeyboard.java:256)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:809)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:834)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:819)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3487)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2971)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2962)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1362)
	at org.eclipse.swt.internal.BidiUtil.windowProc(BidiUtil.java:647)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1438)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2100)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1509)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1480)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
re: 1 - we know there's a problem with that shape (bug 39600, bug 39205)

2- what are the changes in SWT and what is the scenario that shows the bug? Can
you give us a preview? As you can see from the stack trace the intention is to
dispose the non-default caret and not the styled text's default caret. So it
would be good to have the scenario where we dispose the default one.

Note: Please one bug per report.
Created bug 54942 for the BIDI problem.

Created attachment 8605
new StyledText implementation

Copy these files to:
org.eclipse.swt\Eclipse SWT Custom Widgets\common\org\eclipse\swt\custom
self-host eclipse, in tha java editor press insert.
We might be releasing this code today...
Sure, go ahead. We can then grap the SWT plug-in from the N-build and
investigate the bug.

Note: when (at least we in Zurich ;-) talk about a preview then we mean the
whole plug-in.

Code released. Still, you will need to open the StyledText, go to line 6462 
and remove the code:

//workaround bug#54922 
if (updateImage) {
	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
		createCaretBitmaps();
	}
}


I would assume it is much easier for you to give us a preview than for us
switching to source, isn't it?

You want a preview: load org.eclipse.swt from dev.eclipse.org, it does not 
require any other plugin, remove the workaround, selfhost eclipse and test it. 
It will not take you more than 3 minutes, very easy.

I already gave you the stacktrace, source code, I released the changes in the 
CVS... Please, look into this.

I did the following as requested in comment 6:
1. checked out org.eclipse.swt from HEAD (20.12.2004, 22h00 MET)
2. commented out the following code in StyledText.java (rev. 1.202)
//if (updateImage) {
//	if ((leftCaretBitmap != null &amp;&amp; leftCaretBitmap.isDisposed()) ||
//		(rightCaretBitmap != null &amp;&amp; rightCaretBitmap.isDisposed())) {
//			createCaretBitmaps();
//	}
//}


What I see is:
1. no exceptions - neither in .log nor in console
2. works as expected
build I20040407.

Steps
1. New workspace
2. Create Java project
3. Create Java File
4. Open Java File
5. Focus Java Editor
6. Press Insert key

Created attachment 9303
log file

Although the exception happens inside SWT code it is caused by the application
who reach for StyledText's default caret and disposed its image.
Note, in order to reproduce this bug your machine has to be Bidi Enabled (it 
means, you need to have Arabic or Hebrew input method installed).

I now see the problem:
normally in SWT when someone creates a resource and then sets it has to dispose
it, right. We followed this approach in Text code with Caret as well. Which I
guess was wrong (i.e. caret doesn't need to be treated as resource and disposed).

Let me explain our scenario to give you some background:
st= new StyledText(...);
&lt;... now happens code you can't control - assume someone calls:
c1= new Caret(st, 0);
In our case this means a client pre-configures StyledText with some caret
...&gt;
now we get the StyledText and want to apply our caret(s)
initialCaret= st.getCaret();
c2= new Caret(st, 0);
c3= new Caret(st, 0);
Caching c2 for later use. Now assume the editor closes. st automatically
disposes c3 and I can dispose c2 but since normally ST disposes the caret I also
need to dispose the initial caret if it is not styled text's default. We assumed
that if the default caret is used getCaret returns null - this does not hold in
the BIDI case.

I guess we don't need to track and dispose the caret. We only need to ensure to
dispose the images that we create and the client is responsible for disposing
his image (if he created one). Am I on the right track?
I assume the Caret is not an OS resource, right? 

Another question is how we can set a caret without an image since StyledText
always sets an image if the direction is not default and our caret's image is null.


"I assume the Caret is not an OS resource, right? "
Wrong, it is. Follow the rule: if you created and disposed.

"Another question is how we can set a caret without an image since StyledText
always sets an image if the direction is not default and our caret's image is 
null."

If you set a caret in the StyledText the StyledText should not change its 
image.

I will change the StyledText as follow:
StyledText will always create and dispose its internal Caret, therefore you 
don't need to disposed it even though you set a new caret in the StyledText.
You must dispose the carets you create yourself, don't relie that StyledText 
will dispose it for you.

Sounds good.


I've released StyledText changes. It will be in tomorrow's integration build.
Note: Using this approach one of the caret will be disposed twice: who created 
the caret always disposed it plus the framework in Canvas always assure that 
the current caret always gets disposed. This is not a problem. In SWT, we can 
call dispose on object multiple times.

Fixed the code on our side for I200404130800. There's just one remaining issue:
it would be nice if setCaret(null) would reset the StyledText's caret. In
I20040407 this is not the case due to:

	if (caret != null) {
		setCaretLocation();
	}

Q: how can I reset the StyledText's caret to default (especially in BIDI situation)?

Daniel, I understand that setCaret(null) restores the StyledText default caret 
is convenient for you but I don't think I can do that because there is the 
case where the application actually really wants to set the caret to null 
(maybe to emulated a disable state or something). But maybe this case should 
not be allowed anyway. I'm going to ask Silenio or Steve if I can do that for 
you.

About the problem with BIDI I'm afraid the StyledText does not give you any 
support for that. Internally StyledText handle all bidi code but it does not 
expose any functionality.
I fully understand that it is problematic to setCaret(null). Couldn't StyledText
it offer resetCaret()?

Silenio, StyledText API request see comment#21.
IMO, it is easy enough for the application to remember styled text default 
caret and set back whenever it is need.
&gt;IMO, it is easy enough for the application to remember styled text default 
&gt;caret and set back whenever it is need.
This is only true if styled text doesn't dynamically change the caret e.g. when
I change input locale.

&gt;This is only true if styled text doesn't dynamically change the caret e.g. 
&gt;when I change input locale.
StyledText does not changed the caret when the input locale changes. It 
changes its image only. It is always the same instance of Caret.

Daniel, I just downloaded and tested I200404130800.
The caret is a pinhead (x,2). I believe you relie that StyledText will set the 
size of the caret for you, right ?
I actually changed StyledText to only set location a user-defined caret 
preserving all others attributes (image, size).
I will release some code to always set (override) the height of the caret. 
this is fix the problem.
Other option would be the application to set height of the caret (using the 
API StyledText#getLineHeight() to figure out the height).


Other problem: I didn't see 'Insert Mode', Java editor only has 'Smart Insert' 
and 'Override' now ?

&gt;The caret is a pinhead (x,2). I believe you rely that StyledText will set the 
&gt;size of the caret for you, right ?
Yes, we did so (we set the height to caret.getSize().y). which used to work.

&gt;I will release some code to always set (override) the height of the caret. 
&gt;this is fix the problem.
Good. Though I would treat this as being our bug since we expected that a new
caret has the correct height. We just fixed our code.

&gt;Other problem: I didn't see 'Insert Mode', Java editor only has 'Smart Insert' 
&gt;and 'Override' now ?
Correct :-) We removed the three-state toggle since it confused people. It now
toggles between "Smart Insert" and "Overwrite". To get the 'raw' insert mode you
need to press Ctrl+Shift+Insert. After doing so it toggles between 'raw' Insert
and "Overwrite" mode. Ctrl+Shift+Insert brings back smartness.
re comment 24: I then agree with comment 22.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54923" />
    <CreationDate amount="2004-03-15 19:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[Wizards] New File/New Folder Bogus Error -- Names Cannot be Empty</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="20">
        <Lines>
          <Line>16-Mar:</Line>
          <Line>As I'm proceeding in the tutorial, the page given me to create new has the</Line>
          <Line>folder name on the top, but is missing a filename window at the bottom; the</Line>
          <Line>pages in the documentation has that filename window at the bottom.</Line>
          <Line>Creating java scrap page, same error</Line>
          <Line>Could also be a doc issue.</Line>
          <Line>It sounds like you have a problem with the dialog layout.</Line>
          <Line />
          <Line>What resolution are you doing this at? Could you also attach a screenshot of</Line>
          <Line>the problem please?</Line>
          <Line>17-March</Line>
          <Line>Cannot get a screen-shot.</Line>
          <Line>I am looking at</Line>
          <Line>THE JAVA DEVELOPER'S GUIDE TO ECLIPSE (4th printing: December 2003)</Line>
          <Line>On page 629, figure 28.4, is a similar pane that I'm comparing with Eclipse.</Line>
          <Line>Both have a title of NEW FILE</Line>
          <Line>Both have an "wntry window" entitled ENTER OR SELECT THE FOLDER</Line>
          <Line>Both have a large white-space box to show any helpful information, such as</Line>
          <Line>a file hierarchy.</Line>
          <Line>Both have, at the very bottom, two buttons, &lt;Finish&gt; and &lt;Cancel&gt;</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Fresh install of eclipse 2.0 got error, so did 
  help|software updates|New Updates
and am now at 2.0.2, still get error, so did
  &lt;start&gt;|Windows Update
to ensure Win/XP latest, still got error
As I follow the directions in Chapters 1-2, and now Chapter 28, making
  My First Project (which works)
But when I try to get a New Folder or New File, in every way available, 
with wizard or not, as soon as I try to type in the name, 
I get the bogus error:
  NewFolder | Folder | (x)Name cannot be empty
My work-around is to use Windows Explorer to create a text file 
or folder, so I'm continuing in the tutorial.

3030
16-Mar:
As I'm proceeding in the tutorial, the page given me to create new has the 
folder name on the top, but is missing a filename window at the bottom; the 
pages in the documentation has that filename window at the bottom.
Creating java scrap page, same error
Could also be a doc issue.
It sounds like you have a problem with the dialog layout.

What resolution are you doing this at? Could you also attach a screenshot of 
the problem please?
17-March
Cannot get a screen-shot.
I am looking at
THE JAVA DEVELOPER'S GUIDE TO ECLIPSE (4th printing: December 2003)
On page 629, figure 28.4, is a similar pane that I'm comparing with Eclipse.
Both have a title of NEW FILE
Both have an "wntry window" entitled ENTER OR SELECT THE FOLDER
Both have a large white-space box to show any helpful information, such as
a file hierarchy.
Both have, at the very bottom, two buttons, &lt;Finish&gt; and &lt;Cancel&gt;

What's present in the book, but missing in my Eclipse is an "entry window"
entitled File Name

which is probably why I get an error,
  (x)Names cannot be empty
at the top of said form.

I can see the whole form, besides, the data entry field is in the upper portion
of the lower third of the form.
I'm 800x600 resolution with a 17" screen, though I don't think that's 
related to my problem.

Thank you for you time and effort thus far.
-doug

I am withdrawing my bug report.
Although I had JDK1.4, Eclipse used 1.3.
I did all that everyone/anyone to move things over to 1.4, it mostly worked, 
almost. But eclpise gave javaw.
It was suggested I remove all JDKs, whereere they may be, then install, fresh 
and anew, 1.4.
I figured if I was going to go that far, find also the latest eclipse-SDK-2.1.3.

Each of the problems I was having in the previous version I tried to duplicate.
They were gone.

Thanks for efforts extended on my behalf.

This bug report can be closed.

-dwp

Closing as requested</WithStack>
    <WithOutStack>Fresh install of eclipse 2.0 got error, so did 
  help|software updates|New Updates
and am now at 2.0.2, still get error, so did
  &lt;start&gt;|Windows Update
to ensure Win/XP latest, still got error
As I follow the directions in Chapters 1-2, and now Chapter 28, making
  My First Project (which works)
But when I try to get a New Folder or New File, in every way available, 
with wizard or not, as soon as I try to type in the name, 
I get the bogus error:
  NewFolder | Folder | (x)Name cannot be empty
My work-around is to use Windows Explorer to create a text file 
or folder, so I'm continuing in the tutorial.

3030
16-Mar:
As I'm proceeding in the tutorial, the page given me to create new has the 
folder name on the top, but is missing a filename window at the bottom; the 
pages in the documentation has that filename window at the bottom.
Creating java scrap page, same error
Could also be a doc issue.
It sounds like you have a problem with the dialog layout.

What resolution are you doing this at? Could you also attach a screenshot of 
the problem please?
17-March
Cannot get a screen-shot.
I am looking at
THE JAVA DEVELOPER'S GUIDE TO ECLIPSE (4th printing: December 2003)
On page 629, figure 28.4, is a similar pane that I'm comparing with Eclipse.
Both have a title of NEW FILE
Both have an "wntry window" entitled ENTER OR SELECT THE FOLDER
Both have a large white-space box to show any helpful information, such as
a file hierarchy.
Both have, at the very bottom, two buttons, &lt;Finish&gt; and &lt;Cancel&gt;

What's present in the book, but missing in my Eclipse is an "entry window"
entitled File Name

which is probably why I get an error,
  (x)Names cannot be empty
at the top of said form.

I can see the whole form, besides, the data entry field is in the upper portion
of the lower third of the form.
I'm 800x600 resolution with a 17" screen, though I don't think that's 
related to my problem.

Thank you for you time and effort thus far.
-doug

I am withdrawing my bug report.
Although I had JDK1.4, Eclipse used 1.3.
I did all that everyone/anyone to move things over to 1.4, it mostly worked, 
almost. But eclpise gave javaw.
It was suggested I remove all JDKs, whereere they may be, then install, fresh 
and anew, 1.4.
I figured if I was going to go that far, find also the latest eclipse-SDK-2.1.3.

Each of the problems I was having in the previous version I tried to duplicate.
They were gone.

Thanks for efforts extended on my behalf.

This bug report can be closed.

-dwp

Closing as requested</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54924" />
    <CreationDate amount="2004-03-15 19:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Variable selection dialog needs mneumonic for Variable Desc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>You cannot enter text in the VariableDescription field but you may wish to copy 
the text.

Mneumonic needed on text field title.
Fixed in StringSubstitutionMessages.
Please verify Kevin.
Verified. 
Thanks. Updated build notes.</WithStack>
    <WithOutStack>You cannot enter text in the VariableDescription field but you may wish to copy 
the text.

Mneumonic needed on text field title.
Fixed in StringSubstitutionMessages.
Please verify Kevin.
Verified. 
Thanks. Updated build notes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54925" />
    <CreationDate amount="2004-03-15 19:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>want option to not run programs with errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="59" end="215" />
        <code>public class Main {
	public static void main(String[] args) {
		System.out.println("hi there" + foo());
	}
	private static int foo() {
		return "test";
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create a simple program with an error [like:</Line>
          <Line />
          <Line />
          <Line />
          <Line>2. Run As -&gt; Java Application</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040310

1. Create a simple program with an error [like:

public class Main {
	public static void main(String[] args) {
		System.out.println("hi there" + foo());
	}
	private static int foo() {
		return "test";
	}
}

2. Run As -&gt; Java Application

I would like to be told that this program has an error (perhaps run/debug 
anyway?)  This reminds me when a program was unintentionally broken.  
Especially important when run (and debug) setup times are long.

(this feature is useful in conjunction with bug 45887)
John, we've had this request before, but we dismissed generic (platform) 
support, since it is unclear if the debug platform can detect relevant errors 
for contributed debuggers/launchers.

I could imagine domain specific handlers that could plug into the platform's 
lanunching sequence, perhaps, along with launcher domain specific builders. Is 
that what you had in mind?
*** Bug 11974 has been marked as a duplicate of this bug. ***
I gave an example for the jdt case and have heard others asking for the jdt 
situation.  We heard a similar cdt request at eclipsecon.  I don't know if the 
best solution is to provide a general purpose solution (with handlers) or to do 
the work in jdt (and provide documentation on how others could do the same)?  

My proposal would be to provide the jdt specific solution now and see if there 
is anything can can be generally documented (or in the best case, provided)
Extensions to ILaunchConfigrationDelegate2 will allow for this, and for bug 
45887.
Will check for compilation errors in referenced Java projects (For local Java 
Apps, Applets, JUnit, Remote Java Apps). PDE will need a seperate 
implementation as they do not inherit from the abstract java launcher (I 
think). However, we can provide some convenience API for them.
patches submitted to address this bug as well as bug #6400 and bug #45887 at 
once. Patches attached to bug #45887
Darin, please verify
Applied patch. Need associated preference on the "Java &gt; Debug" pref page to 
turn on/off prompting.
Created attachment 8672
patch to debug.core

moved code to create new NullProgressMonitor above call to preLaunchCheck() to
prevent NPE from test suite.
Created attachment 8673
patch to debug.ui

created new preferences in IDebugUIConstants
Created attachment 8674
patch to jdt.debug.tests

set preference to prevent dialog during tests.
Created attachment 8675
patch to jdt.debug.ui

updated status handlers to use new preference added to IDebugUIConstants
Darin, please apply patches for tomorrows test run.
Still need to be able to change "I don't ever want to run with compile errors" 
preference on preference page... please reassign this bug to me.

Applied patch. In addition:

* Moved "compile errors" peference to Java Debug (since it will start as a 
java specific option).
* Moved breakpoint detection code to debug platform so all launchers that 
subclass our abstract delegate inherit the behavior.

Reassigning for preference page settings for the following prefs:

* IDebugUIConstants.PREF_RELAUNCH_IN_DEBUG_MODE - should be on main debug page
* IJavaDebugUIConstants.PREF_CONTINUE_WITH_COMPILE_ERROR - on Java page

Created attachment 8701
preference page patch (debug.ui)

changes in DebugPreferencePage and DebugPreferencesMessages
Created attachment 8702
patch (jdt.debug.tests)

changes in ProjectCreationDecoration (changed the preference store, and the
location of the constant)
Created attachment 8703
preference page patch (jdt.debug.ui)

changes to IJavaDebugConstants, IJDIPreferencesConstants, JDIDebugUIPlugin,
JavaDebugPreferencePage, and CompileErrorPromptStatusHandler
Darin, please verify 2004-03-19 patches.
-thanks
Applied patch.
Verified. We now have a Java specific solution that ties into the 
ILaunchDelegate2 support (pre launch checks). Others could implement their own 
solution using the same approach. I will file a new bug to look at ways of 
leveraging the suppor for other "java like" launchers.</WithStack>
    <WithOutStack>20040310

1. Create a simple program with an error [like:

public class Main {
	public static void main(String[] args) {
		System.out.println("hi there" + foo());
	}
	private static int foo() {
		return "test";
	}
}

2. Run As -&gt; Java Application

I would like to be told that this program has an error (perhaps run/debug 
anyway?)  This reminds me when a program was unintentionally broken.  
Especially important when run (and debug) setup times are long.

(this feature is useful in conjunction with bug 45887)
John, we've had this request before, but we dismissed generic (platform) 
support, since it is unclear if the debug platform can detect relevant errors 
for contributed debuggers/launchers.

I could imagine domain specific handlers that could plug into the platform's 
lanunching sequence, perhaps, along with launcher domain specific builders. Is 
that what you had in mind?
*** Bug 11974 has been marked as a duplicate of this bug. ***
I gave an example for the jdt case and have heard others asking for the jdt 
situation.  We heard a similar cdt request at eclipsecon.  I don't know if the 
best solution is to provide a general purpose solution (with handlers) or to do 
the work in jdt (and provide documentation on how others could do the same)?  

My proposal would be to provide the jdt specific solution now and see if there 
is anything can can be generally documented (or in the best case, provided)
Extensions to ILaunchConfigrationDelegate2 will allow for this, and for bug 
45887.
Will check for compilation errors in referenced Java projects (For local Java 
Apps, Applets, JUnit, Remote Java Apps). PDE will need a seperate 
implementation as they do not inherit from the abstract java launcher (I 
think). However, we can provide some convenience API for them.
patches submitted to address this bug as well as bug #6400 and bug #45887 at 
once. Patches attached to bug #45887
Darin, please verify
Applied patch. Need associated preference on the "Java &gt; Debug" pref page to 
turn on/off prompting.
Created attachment 8672
patch to debug.core

moved code to create new NullProgressMonitor above call to preLaunchCheck() to
prevent NPE from test suite.
Created attachment 8673
patch to debug.ui

created new preferences in IDebugUIConstants
Created attachment 8674
patch to jdt.debug.tests

set preference to prevent dialog during tests.
Created attachment 8675
patch to jdt.debug.ui

updated status handlers to use new preference added to IDebugUIConstants
Darin, please apply patches for tomorrows test run.
Still need to be able to change "I don't ever want to run with compile errors" 
preference on preference page... please reassign this bug to me.

Applied patch. In addition:

* Moved "compile errors" peference to Java Debug (since it will start as a 
java specific option).
* Moved breakpoint detection code to debug platform so all launchers that 
subclass our abstract delegate inherit the behavior.

Reassigning for preference page settings for the following prefs:

* IDebugUIConstants.PREF_RELAUNCH_IN_DEBUG_MODE - should be on main debug page
* IJavaDebugUIConstants.PREF_CONTINUE_WITH_COMPILE_ERROR - on Java page

Created attachment 8701
preference page patch (debug.ui)

changes in DebugPreferencePage and DebugPreferencesMessages
Created attachment 8702
patch (jdt.debug.tests)

changes in ProjectCreationDecoration (changed the preference store, and the
location of the constant)
Created attachment 8703
preference page patch (jdt.debug.ui)

changes to IJavaDebugConstants, IJDIPreferencesConstants, JDIDebugUIPlugin,
JavaDebugPreferencePage, and CompileErrorPromptStatusHandler
Darin, please verify 2004-03-19 patches.
-thanks
Applied patch.
Verified. We now have a Java specific solution that ties into the 
ILaunchDelegate2 support (pre launch checks). Others could implement their own 
solution using the same approach. I will file a new bug to look at ways of 
leveraging the suppor for other "java like" launchers.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54926" />
    <CreationDate amount="2004-03-15 20:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] When eclipse fails because of concurrent sessions, a path to the .lock file should be displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>A dialog with the following message is displayed when Eclipse fails because the
workspace is opened in another session:

"Another session is already running in the associated workspace. If this is 
not the case, please delete the ".lock" file in the workspace ".metadata"
directory and try starting the platform again."

It would be easier for the user to correct the problem if the message referred
to the complete path to the .lock file instead, e.g.:

"An instance of Eclipse seems to be already running in
the selected workspace C:\Eclipse\workspace

If you believe this not to be the case, delete the file
C:\Eclipse\workspace\.metadata\.lock and try again."
Wrong dependency
This problem can also occur if you close down eclipse, then try to restart it
immediately afterwards. It appears that eclipse is still doing some background
clean up after the gui has been closed.

This error message should mention this as a possibility, or ideally the shutdown
process should be changed so that this cannot occur.

From a users perspective eclipse has closed because the GUI is no longer on
display, but it is still running under the covers.
Additional comment. If the user is being prompted to manually delete the .lock
file, would it instead be a better idea to ask them to check if eclipse is still
running as a question. If they answer no then delete the lock file for them?

Eg.

"Eclipse has detected a lock file present in the selected workspace
c:\eclipse\workspace. Is there another copy of eclispe running?"

[yes] [no]

If the user clicks yes, eclipse quits. If no then eclipse deletes the lock file
and continues to load.
There is currently no plan to work on this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>A dialog with the following message is displayed when Eclipse fails because the
workspace is opened in another session:

"Another session is already running in the associated workspace. If this is 
not the case, please delete the ".lock" file in the workspace ".metadata"
directory and try starting the platform again."

It would be easier for the user to correct the problem if the message referred
to the complete path to the .lock file instead, e.g.:

"An instance of Eclipse seems to be already running in
the selected workspace C:\Eclipse\workspace

If you believe this not to be the case, delete the file
C:\Eclipse\workspace\.metadata\.lock and try again."
Wrong dependency
This problem can also occur if you close down eclipse, then try to restart it
immediately afterwards. It appears that eclipse is still doing some background
clean up after the gui has been closed.

This error message should mention this as a possibility, or ideally the shutdown
process should be changed so that this cannot occur.

From a users perspective eclipse has closed because the GUI is no longer on
display, but it is still running under the covers.
Additional comment. If the user is being prompted to manually delete the .lock
file, would it instead be a better idea to ask them to check if eclipse is still
running as a question. If they answer no then delete the lock file for them?

Eg.

"Eclipse has detected a lock file present in the selected workspace
c:\eclipse\workspace. Is there another copy of eclispe running?"

[yes] [no]

If the user clicks yes, eclipse quits. If no then eclipse deletes the lock file
and continues to load.
There is currently no plan to work on this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54927" />
    <CreationDate amount="2004-03-15 20:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Draw2d [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>VerticalPlacement should take a flag in it's constructor that determines whether the height of the nodes should be changed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Currently org.eclipse.draw2d.internal.graph.VerticalPlacement will resize the 
height of the nodes to be the height of the biggest node in the row. This 
behaviour should really selectable. I suggest adding a boolean flag to the 
constructor to enable or disable this behaviour.
Created attachment 8591
source
This class is currently internal.  What would you propose for an [open-ended] 
set of layout hints on both the Nodes and the DirectedGraph?
I'd suggest adding a mechanism on DirectedGraphLayout.visit() method to 
specify how you want the graph laid out. These could be defined by a 'style' 
flag, or a dictionary of layout directives. The characteristics you can change 
will really be determined by the implementation of the visit() method, so a 
dictionary might be the better implementation. 

You could also apply these directives to each node and edge, but I would 
assume in most cases you'd want the same directives to apply across all nodes 
and edges for a particular layout invocation. Hence my suggestion to put it on 
DirectedGraphLayout.</WithStack>
    <WithOutStack>Currently org.eclipse.draw2d.internal.graph.VerticalPlacement will resize the 
height of the nodes to be the height of the biggest node in the row. This 
behaviour should really selectable. I suggest adding a boolean flag to the 
constructor to enable or disable this behaviour.
Created attachment 8591
source
This class is currently internal.  What would you propose for an [open-ended] 
set of layout hints on both the Nodes and the DirectedGraph?
I'd suggest adding a mechanism on DirectedGraphLayout.visit() method to 
specify how you want the graph laid out. These could be defined by a 'style' 
flag, or a dictionary of layout directives. The characteristics you can change 
will really be determined by the implementation of the visit() method, so a 
dictionary might be the better implementation. 

You could also apply these directives to each node and edge, but I would 
assume in most cases you'd want the same directives to apply across all nodes 
and edges for a particular layout invocation. Hence my suggestion to put it on 
DirectedGraphLayout.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54928" />
    <CreationDate amount="2004-03-15 20:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE on switching perspective for debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="12">
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:203)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1401)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:721)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:698)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2883)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2880)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActivated(LaunchViewContextListener.java:235)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextChanged(LaunchViewContextListener.java:173)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.contexts.Context.fireContextChanged(Context.java:117)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.contexts.MutableContextManager.notifyContexts(MutableContextManager.java:140)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds(MutableContextManager.java:274)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.views.launch.LaunchView.showViewsForCurrentSelection(LaunchView.java:560)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:500)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="15">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="19">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1107)</Frame>
          <Frame depth="21">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:372)</Frame>
          <Frame depth="22">org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible(LaunchView.java:1372)</Frame>
          <Frame depth="23">org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:161)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)</Frame>
          <Frame depth="25">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:646)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.Platform.run(Platform.java:497)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.PartListenerList2.firePartVisible(PartListenerList2.java:173)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:137)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:233)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:381)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:1208)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:1192)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:534)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:240)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:117)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:630)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2667)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:688)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:673)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2797)</Frame>
          <Frame depth="41">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2795)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1522)</Frame>
          <Frame depth="44">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="45">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:317)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="53">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="55">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="56">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="58">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="60">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="61">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:256)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:727)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:704)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2894)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActivated(LaunchViewContextListener.java:391)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextManagerChanged(LaunchViewContextListener.java:355)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(AbstractContextManager.java:46)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.contexts.ProxyContextManager$1.contextManagerChanged(ProxyContextManager.java:41)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(AbstractContextManager.java:46)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds(MutableContextManager.java:259)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(WorkbenchContextSupport.java:521)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(WorkbenchContextSupport.java:348)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.addEnabledSubmissions(WorkbenchContextSupport.java:245)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.submitContexts(LaunchViewContextListener.java:732)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableContexts(LaunchViewContextListener.java:707)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSelection(LaunchViewContextListener.java:596)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener(LaunchView.java:523)</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:507)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="26">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="27">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="28">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="29">org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible(LaunchView.java:1396)</Frame>
          <Frame depth="30">org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:161)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)</Frame>
          <Frame depth="32">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.PartListenerList2.firePartVisible(PartListenerList2.java:173)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:137)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.PresentableViewPart.setVisible(PresentableViewPart.java:108)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart(BasicStackPresentation.java:660)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:841)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.PartTabFolder.showPart(PartTabFolder.java:921)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:331)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:292)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:156)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2675)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:694)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:679)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)</Frame>
          <Frame depth="51">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2809)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1507)</Frame>
          <Frame depth="54">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="55">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:325)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="63">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="65">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="70">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="71">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:256)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:727)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:704)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2894)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActivated(LaunchViewContextListener.java:391)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableContexts(LaunchViewContextListener.java:708)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSelection(LaunchViewContextListener.java:596)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener(LaunchView.java:523)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:507)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run(LaunchView.java:238)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="25">org.eclipse.jface.window.Window.runEventLoop(Window.java:670)</Frame>
          <Frame depth="26">org.eclipse.jface.window.Window.open(Window.java:650)</Frame>
          <Frame depth="27">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:287)</Frame>
          <Frame depth="28">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="29">org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)</Frame>
          <Frame depth="30">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:341)</Frame>
          <Frame depth="31">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:613)</Frame>
          <Frame depth="32">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="33">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="34">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="36">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="37">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="38">org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible(LaunchView.java:1396)</Frame>
          <Frame depth="39">org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:161)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)</Frame>
          <Frame depth="41">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="42">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.PartListenerList2.firePartVisible(PartListenerList2.java:173)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:137)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.PresentableViewPart.setVisible(PresentableViewPart.java:108)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart(BasicStackPresentation.java:660)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:841)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.PartTabFolder.showPart(PartTabFolder.java:921)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:331)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:292)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:156)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2675)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:694)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:679)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)</Frame>
          <Frame depth="60">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2809)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1507)</Frame>
          <Frame depth="63">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="64">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:325)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="72">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="74">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="75">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="76">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="77">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="78">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="79">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="80">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="81">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="82">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2659)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2584)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.runEventLoop(Window.java:670)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.open(Window.java:650)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:287)</Frame>
          <Frame depth="8">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:341)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:613)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run(LaunchView.java:238)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.runEventLoop(Window.java:670)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window.open(Window.java:650)</Frame>
          <Frame depth="25">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:287)</Frame>
          <Frame depth="26">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="27">org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:341)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:613)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="31">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="32">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="33">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="34">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="35">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="36">org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible(LaunchView.java:1396)</Frame>
          <Frame depth="37">org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:161)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)</Frame>
          <Frame depth="39">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="40">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.PartListenerList2.firePartVisible(PartListenerList2.java:173)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:137)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.PresentableViewPart.setVisible(PresentableViewPart.java:108)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart(BasicStackPresentation.java:660)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:841)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.PartTabFolder.showPart(PartTabFolder.java:921)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:331)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:292)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:156)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2675)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:694)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:679)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)</Frame>
          <Frame depth="58">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2809)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1507)</Frame>
          <Frame depth="61">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="62">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:325)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="68">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="70">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="72">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="73">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="74">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="75">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="76">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="77">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="78">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="79">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="80">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="81">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:256)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:727)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:704)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2894)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActivated(LaunchViewContextListener.java:391)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableContexts(LaunchViewContextListener.java:708)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSelection(LaunchViewContextListener.java:596)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener(LaunchView.java:523)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.ui.views.launch.LaunchView.setAutoManageViews(LaunchView.java:545)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.actions.ToggleAutoManageViewsActionDelegate.doAction(ToggleAutoManageViewsActionDelegate.java:30)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$1.run(AbstractDebugActionDelegate.java:104)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate.run(AbstractDebugActionDelegate.java:99)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:269)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PluginAction.run(PluginAction.java:231)</Frame>
          <Frame depth="18">org.eclipse.debug.ui.AbstractDebugView$3.run(AbstractDebugView.java:596)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.runEventLoop(Window.java:670)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window.open(Window.java:650)</Frame>
          <Frame depth="25">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:287)</Frame>
          <Frame depth="26">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="27">org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:341)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:613)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="31">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="32">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="33">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="34">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="35">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="36">org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run(LaunchView.java:238)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="41">org.eclipse.jface.window.Window.runEventLoop(Window.java:670)</Frame>
          <Frame depth="42">org.eclipse.jface.window.Window.open(Window.java:650)</Frame>
          <Frame depth="43">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:287)</Frame>
          <Frame depth="44">org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.java:50)</Frame>
          <Frame depth="45">org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)</Frame>
          <Frame depth="46">org.eclipse.core.internal.runtime.InternalPlatform.handleException(InternalPlatform.java:341)</Frame>
          <Frame depth="47">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:613)</Frame>
          <Frame depth="48">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="49">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="50">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)</Frame>
          <Frame depth="51">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1033)</Frame>
          <Frame depth="52">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:1131)</Frame>
          <Frame depth="53">org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection(LaunchView.java:379)</Frame>
          <Frame depth="54">org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible(LaunchView.java:1396)</Frame>
          <Frame depth="55">org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:161)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)</Frame>
          <Frame depth="57">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="58">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.PartListenerList2.firePartVisible(PartListenerList2.java:173)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:137)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.PresentableViewPart.setVisible(PresentableViewPart.java:108)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart(BasicStackPresentation.java:660)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:841)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.PartTabFolder.showPart(PartTabFolder.java:921)</Frame>
          <Frame depth="68">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:331)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:292)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:156)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2675)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:694)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:679)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)</Frame>
          <Frame depth="76">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="77">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2809)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1507)</Frame>
          <Frame depth="79">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="80">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:325)</Frame>
          <Frame depth="81">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="82">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="83">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="84">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="85">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="86">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="87">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="88">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="89">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="90">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="91">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="92">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="93">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="94">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="95">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="96">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="97">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="98">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="99">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason>!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:56.417
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:256)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:727)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:704)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2894)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActivated(LaunchViewContextListener.java:391)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableContexts(LaunchViewContextListener.java:708)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSelection(LaunchViewContextListener.java:596)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener(LaunchView.java:523)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.ui.views.launch.LaunchView.perspectiveActivated(LaunchView.java:602)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.PerspectiveListenerListOld$1.run(PerspectiveListenerListOld.java:44)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:543)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.PerspectiveListenerListOld.firePerspectiveActivated(PerspectiveListenerListOld.java:42)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.WorkbenchWindow.firePerspectiveActivated(WorkbenchWindow.java:769)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2678)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:694)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:679)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)</Frame>
          <Frame depth="21">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2809)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1507)</Frame>
          <Frame depth="24">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:173)</Frame>
          <Frame depth="25">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:325)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)</Frame>
          <Frame depth="33">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="35">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)</Frame>
          <Frame depth="36">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="38">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="40">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="41">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.ClassCastException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2689)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2614)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.PartStack.setState(PartStack.java:682)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.PartStack.restoreState(PartStack.java:567)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.RootLayoutContainer.restoreState(RootLayoutContainer.java:125)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PerspectivePresentation.restoreState(PerspectivePresentation.java:1143)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:790)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2662)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)</Frame>
          <Frame depth="9">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1424)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:171)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:322)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="21">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="25">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="28">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="29">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:641)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2692)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:118)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PerspectiveBarContributionItem$3.widgetSelected(PerspectiveBarContributionItem.java:108)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2594)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2272)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="17">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="24">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="25">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.Perspective.onDeactivate(Perspective.java:654)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2685)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:118)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PerspectiveBarContributionItem$3.widgetSelected(PerspectiveBarContributionItem.java:108)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2594)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2272)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="17">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="24">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="25">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2689)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2614)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:256)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:318)</Frame>
          <Frame depth="9">org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:284)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.keys.WorkbenchKeyboard.logException(WorkbenchKeyboard.java:661)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:929)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:545)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:493)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:258)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1722)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1718)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3047)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:1292)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Control.windowProc(Control.java:2950)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.windowProc(Display.java:3160)</Frame>
          <Frame depth="26">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="27">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1459)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="32">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="34">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="36">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="38">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="39">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="40">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098301">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:641)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2692)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1424)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:171)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:322)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="16">org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:256)</Frame>
          <Frame depth="17">org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:318)</Frame>
          <Frame depth="18">org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:284)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.keys.WorkbenchKeyboard.logException(WorkbenchKeyboard.java:661)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:929)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:545)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:493)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:258)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1722)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1718)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3047)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:1292)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Control.windowProc(Control.java:2950)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.windowProc(Display.java:3160)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="36">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1459)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)</Frame>
          <Frame depth="41">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="43">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="48">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="49">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.basicRun(Main.java:269)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.run(Main.java:700)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.main(Main.java:684)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I received this NPE when switching from the Java perspective to the debug 
perspective after launching a program and hitting a breakpoint.
I have set to switch always.
In my target on the HEAD code.

java.lang.NullPointerException
at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:203)
at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1401)
at org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:721)
at org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:698)
at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2883)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2880)
at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActi
vated(LaunchViewContextListener.java:235)
at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextChan
ged(LaunchViewContextListener.java:173)
at org.eclipse.ui.internal.contexts.Context.fireContextChanged(Context.java:117)
at org.eclipse.ui.internal.contexts.MutableContextManager.notifyContexts
(MutableContextManager.java:140)
at org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds
(MutableContextManager.java:274)
at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.showViewsForCurrentSelecti
on(LaunchView.java:560)
at org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged
(LaunchView.java:500)
at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1107)
at org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:372)
at org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible
(LaunchView.java:1372)
at org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible
(AbstractDebugView.java:161)
at org.eclipse.ui.internal.PartListenerList2$7.run(PartListenerList2.java:175)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:646)
at org.eclipse.core.runtime.Platform.run(Platform.java:497)
at org.eclipse.ui.internal.PartListenerList2.firePartVisible
(PartListenerList2.java:173)
at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:137)
at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:233)
at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:381)
at org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:1208)
at org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:1192)
at org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:534)
at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:240)
at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:117)
at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:630)
at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2667)
at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:688)
at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:673)
at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2797)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2795)
at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1522)
at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
at org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:317)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2344)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2051)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
If I understand the stack trace correctly, I'm passing a null viewId into the 
showView method. But I explicitly check if the viewId is null before adding it 
to the collection.
This could be some kind of timing issue... where you're trying to open the view
in a perspective that hasn't gotten itself into a working state... it could be
that you'll need to wrap your logic in LaunchView.showViewsForCurrentSelection
in a WorkbenchJob to ensure that the perspective is in a happy state.

*** Bug 56176 has been marked as a duplicate of this bug. ***
It is possible for PartTabFolder.getControl() to return null in certain
situations (such as when it is first created), and we were not protecting
against this. Although I cannot reproduce this, I have removed the (unnecessary)
code that dereferenced the control. I believe this will fix the problem.

*** Bug 53303 has been marked as a duplicate of this bug. ***
Although I suspect this is fixed in head, I cannot test it. Please reopen if the
problem recurs.
*** Bug 58241 has been marked as a duplicate of this bug. ***
Re-opening to move to UI.
Marking as fixed (not sure why it was moved back to debug).
I got the problem again in 20040413, while switching to debug perspective (in 
same window). I was in Java perspective, and had another window with debug 
perspective as well.

Still occurs in 20040413.


!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:52.341
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:256)
        at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)
        at org.eclipse.ui.internal.WorkbenchPage.busyShowView
(WorkbenchPage.java:727)
        at org.eclipse.ui.internal.WorkbenchPage.access$9
(WorkbenchPage.java:704)
        at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2894)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActi
vated(LaunchViewContextListener.java:391)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextMana
gerChanged(LaunchViewContextListener.java:355)
        at 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChange
d(AbstractContextManager.java:46)
        at 
org.eclipse.ui.internal.contexts.ProxyContextManager$1.contextManagerChanged
(ProxyContextManager.java:41)
        at 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChange
d(AbstractContextManager.java:46)
        at 
org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds
(MutableContextManager.java:259)
        at 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmis
sions(WorkbenchContextSupport.java:521)
        at 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmis
sions(WorkbenchContextSupport.java:348)
        at 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.addEnabledSubmission
s(WorkbenchContextSupport.java:245)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.submitConte
xts(LaunchViewContextListener.java:732)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableConte
xts(LaunchViewContextListener.java:707)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSe
lection(LaunchViewContextListener.java:596)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener
(LaunchView.java:523)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged
(LaunchView.java:507)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible
(LaunchView.java:1396)
        at 
org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible
(AbstractDebugView.java:161)
        at org.eclipse.ui.internal.PartListenerList2$7.run
(PartListenerList2.java:175)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.ui.internal.PartListenerList2.firePartVisible
(PartListenerList2.java:173)
        at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:137)
        at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)
        at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)
        at org.eclipse.ui.internal.PresentableViewPart.setVisible
(PresentableViewPart.java:108)
        at 
org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart
(BasicStackPresentation.java:660)
        at org.eclipse.ui.internal.PartTabFolder.setSelection
(PartTabFolder.java:841)
        at org.eclipse.ui.internal.PartTabFolder.showPart
(PartTabFolder.java:921)
        at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:331)
        at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:292)
        at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:156)
        at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2675)
        at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:694)
        at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:679)
        at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2809)
        at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1507)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:325)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:244)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:280)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:241)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
        at org.eclipse.core.launcher.Main.run(Main.java:692)
        at org.eclipse.core.launcher.Main.main(Main.java:676)
!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:52.411
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:256)
        at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)
        at org.eclipse.ui.internal.WorkbenchPage.busyShowView
(WorkbenchPage.java:727)
        at org.eclipse.ui.internal.WorkbenchPage.access$9
(WorkbenchPage.java:704)
        at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2894)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActi
vated(LaunchViewContextListener.java:391)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableConte
xts(LaunchViewContextListener.java:708)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSe
lection(LaunchViewContextListener.java:596)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener
(LaunchView.java:523)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged
(LaunchView.java:507)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run
(LaunchView.java:238)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:670)
        at org.eclipse.jface.window.Window.open(Window.java:650)
        at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:287)
        at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
        at org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)
        at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:341)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:613)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible
(LaunchView.java:1396)
        at 
org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible
(AbstractDebugView.java:161)
        at org.eclipse.ui.internal.PartListenerList2$7.run
(PartListenerList2.java:175)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.ui.internal.PartListenerList2.firePartVisible
(PartListenerList2.java:173)
        at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:137)
        at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)
        at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)
        at org.eclipse.ui.internal.PresentableViewPart.setVisible
(PresentableViewPart.java:108)
        at 
org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart
(BasicStackPresentation.java:660)
        at org.eclipse.ui.internal.PartTabFolder.setSelection
(PartTabFolder.java:841)
        at org.eclipse.ui.internal.PartTabFolder.showPart
(PartTabFolder.java:921)
        at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:331)
        at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:292)
        at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:156)
        at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2675)
        at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:694)
        at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:679)
        at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2809)
        at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1507)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:325)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:244)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:280)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:241)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
        at org.eclipse.core.launcher.Main.run(Main.java:692)
        at org.eclipse.core.launcher.Main.main(Main.java:676)
!ENTRY org.eclipse.ui 4 4 Apr 15, 2004 23:26:52.441
!MESSAGE Unhandled event loop exception
Unhandled event loop exception
Reason:
!ENTRY org.eclipse.ui 4 0 Apr 15, 2004 23:26:52.441
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.lang.NullPointerException)
        at org.eclipse.swt.SWT.error(SWT.java:2659)
        at org.eclipse.swt.SWT.error(SWT.java:2584)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:109)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:670)
        at org.eclipse.jface.window.Window.open(Window.java:650)
        at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:287)
        at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
        at org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)
        at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:341)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:613)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run
(LaunchView.java:238)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:670)
        at org.eclipse.jface.window.Window.open(Window.java:650)
        at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:287)
        at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
        at org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)
        at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:341)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:613)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible
(LaunchView.java:1396)
        at 
org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible
(AbstractDebugView.java:161)
        at org.eclipse.ui.internal.PartListenerList2$7.run
(PartListenerList2.java:175)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.ui.internal.PartListenerList2.firePartVisible
(PartListenerList2.java:173)
        at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:137)
        at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)
        at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)
        at org.eclipse.ui.internal.PresentableViewPart.setVisible
(PresentableViewPart.java:108)
        at 
org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart
(BasicStackPresentation.java:660)
        at org.eclipse.ui.internal.PartTabFolder.setSelection
(PartTabFolder.java:841)
        at org.eclipse.ui.internal.PartTabFolder.showPart
(PartTabFolder.java:921)
        at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:331)
        at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:292)
        at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:156)
        at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2675)
        at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:694)
        at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:679)
        at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2809)
        at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1507)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:325)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:244)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:280)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:241)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
        at org.eclipse.core.launcher.Main.run(Main.java:692)
        at org.eclipse.core.launcher.Main.main(Main.java:676)
Failed to execute runnable (java.lang.NullPointerException)
!ENTRY org.eclipse.ui 4 4 Apr 15, 2004 23:26:52.441
!MESSAGE *** SWT nested exception
*** SWT nested exception
Reason:
!ENTRY org.eclipse.ui 4 0 Apr 15, 2004 23:26:52.451
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
        at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:256)
        at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)
        at org.eclipse.ui.internal.WorkbenchPage.busyShowView
(WorkbenchPage.java:727)
        at org.eclipse.ui.internal.WorkbenchPage.access$9
(WorkbenchPage.java:704)
        at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2894)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActi
vated(LaunchViewContextListener.java:391)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableConte
xts(LaunchViewContextListener.java:708)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSe
lection(LaunchViewContextListener.java:596)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener
(LaunchView.java:523)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.setAutoManageViews
(LaunchView.java:545)
        at 
org.eclipse.debug.internal.ui.actions.ToggleAutoManageViewsActionDelegate.doActi
on(ToggleAutoManageViewsActionDelegate.java:30)
        at 
org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$1.run
(AbstractDebugActionDelegate.java:104)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate.run
(AbstractDebugActionDelegate.java:99)
        at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:269)
        at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:231)
        at org.eclipse.debug.ui.AbstractDebugView$3.run
(AbstractDebugView.java:596)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:670)
        at org.eclipse.jface.window.Window.open(Window.java:650)
        at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:287)
        at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
        at org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)
        at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:341)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:613)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView$1.run
(LaunchView.java:238)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:670)
        at org.eclipse.jface.window.Window.open(Window.java:650)
        at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:287)
        at org.eclipse.jface.util.SafeRunnable.handleException
(SafeRunnable.java:50)
        at org.eclipse.jface.viewers.Viewer$2.handleException(Viewer.java:162)
        at org.eclipse.core.internal.runtime.InternalPlatform.handleException
(InternalPlatform.java:341)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:613)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
        at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1310)
        at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1033)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:1131)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.initializeSelection
(LaunchView.java:379)
        at org.eclipse.debug.internal.ui.views.launch.LaunchView.becomesVisible
(LaunchView.java:1396)
        at 
org.eclipse.debug.ui.AbstractDebugView$DebugViewPartListener.partVisible
(AbstractDebugView.java:161)
        at org.eclipse.ui.internal.PartListenerList2$7.run
(PartListenerList2.java:175)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at org.eclipse.ui.internal.PartListenerList2.firePartVisible
(PartListenerList2.java:173)
        at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:137)
        at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:245)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:309)
        at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:633)
        at org.eclipse.ui.internal.PresentableViewPart.setVisible
(PresentableViewPart.java:108)
        at 
org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart
(BasicStackPresentation.java:660)
        at org.eclipse.ui.internal.PartTabFolder.setSelection
(PartTabFolder.java:841)
        at org.eclipse.ui.internal.PartTabFolder.showPart
(PartTabFolder.java:921)
        at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:331)
        at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:292)
        at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:156)
        at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:631)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2675)
        at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:694)
        at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:679)
        at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2809)
        at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1507)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:325)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:244)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:280)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:241)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
        at org.eclipse.core.launcher.Main.run(Main.java:692)
        at org.eclipse.core.launcher.Main.main(Main.java:676)
java.lang.NullPointerException
!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:56.417
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:256)
        at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1433)
        at org.eclipse.ui.internal.WorkbenchPage.busyShowView
(WorkbenchPage.java:727)
        at org.eclipse.ui.internal.WorkbenchPage.access$9
(WorkbenchPage.java:704)
        at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2897)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2894)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.contextActi
vated(LaunchViewContextListener.java:391)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.enableConte
xts(LaunchViewContextListener.java:708)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewContextListener.updateForSe
lection(LaunchViewContextListener.java:596)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.updateContextListener
(LaunchView.java:523)
        at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.perspectiveActivated
(LaunchView.java:602)
        at org.eclipse.ui.internal.PerspectiveListenerListOld$1.run
(PerspectiveListenerListOld.java:44)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:611)
        at org.eclipse.core.runtime.Platform.run(Platform.java:543)
        at 
org.eclipse.ui.internal.PerspectiveListenerListOld.firePerspectiveActivated
(PerspectiveListenerListOld.java:42)
        at org.eclipse.ui.internal.WorkbenchWindow.firePerspectiveActivated
(WorkbenchWindow.java:769)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2678)
        at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:694)
        at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:679)
        at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2811)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
        at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2809)
        at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1507)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPe
rspective(PerspectiveManager.java:173)
        at 
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run
(PerspectiveManager.java:325)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2561)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2266)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1436)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1407)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:244)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
        at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:280)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:241)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
        at org.eclipse.core.launcher.Main.run(Main.java:692)
        at org.eclipse.core.launcher.Main.main(Main.java:676)

My fix did not make it in for the build on the 13th, however it would have made
it in for subsequent builds.

I will leave this open for a few more days to determine if the problem recurs.

Build id: 200405060200.

I experienced a similar problem, though it began with a ClassCastException,
under the exact same conditions. I launched, hit a breakpoint, then it tried to
switch to debug. Both my perspectives were blank (java &amp; debug), and after
trying to switch back and forth a few times I had to shut down the workbench
because nothing was showing up. The second time it happened the original
exception was an NPE and an error dialog came up and said something like "The
command for the key you pressed failed". Also, since this happened I have been
unable to switch to debug perspective (I get the ClassCastException). I might
try a fresh workspace, or move back a few builds. Here are some of the
exceptions that were in my .log file:

!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:24:57.760
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:24:57.800
!MESSAGE Failed to execute runnable (java.lang.ClassCastException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.ClassCastException)
	at org.eclipse.swt.SWT.error(SWT.java:2689)
	at org.eclipse.swt.SWT.error(SWT.java:2614)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:24:57.810
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:24:57.830
!MESSAGE java.lang.ClassCastException
!STACK 0
java.lang.ClassCastException
	at org.eclipse.ui.internal.PartStack.setState(PartStack.java:682)
	at org.eclipse.ui.internal.PartStack.restoreState(PartStack.java:567)
	at
org.eclipse.ui.internal.RootLayoutContainer.restoreState(RootLayoutContainer.java:125)
	at
org.eclipse.ui.internal.PerspectivePresentation.restoreState(PerspectivePresentation.java:1143)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:790)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2662)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)
	at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1424)
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:171)
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:322)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:25:00.123
!MESSAGE Unhandled event loop exception


Followed by many:

ENTRY org.eclipse.ui 4 0 May 06, 2004 15:25:00.143
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:641)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2692)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)
	at
org.eclipse.ui.internal.PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:118)
	at
org.eclipse.ui.internal.PerspectiveBarContributionItem$3.widgetSelected(PerspectiveBarContributionItem.java:108)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2594)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2272)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:25:08.745
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:25:08.755
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.Perspective.onDeactivate(Perspective.java:654)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)
	at
org.eclipse.ui.internal.PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:118)
	at
org.eclipse.ui.internal.PerspectiveBarContributionItem$3.widgetSelected(PerspectiveBarContributionItem.java:108)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2594)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2272)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)


The second time I tried it, I got this:

!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:37:02.662
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2689)
	at org.eclipse.swt.SWT.error(SWT.java:2614)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:256)
	at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:318)
	at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:284)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.logException(WorkbenchKeyboard.java:661)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:929)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:545)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:493)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:258)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1722)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1718)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3047)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:1292)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2950)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3160)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1459)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:37:02.682
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:37:02.692
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:641)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2692)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:728)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:713)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2835)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2833)
	at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1424)
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager.switchToPerspective(PerspectiveManager.java:171)
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$5.run(PerspectiveManager.java:322)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2571)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2276)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:256)
	at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:318)
	at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:284)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.logException(WorkbenchKeyboard.java:661)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:929)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:545)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:493)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:258)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:705)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1722)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1718)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3047)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:1292)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2950)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3160)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1459)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)
The stack trace in comment 12 is a duplicate of bug 61247.

The original problem appears to be fixed.</WithStack>
    <WithOutStack>I received this NPE when switching from the Java perspective to the debug 
perspective after launching a program and hitting a breakpoint.
I have set to switch always.
In my target on the HEAD code.

If I understand the stack trace correctly, I'm passing a null viewId into the 
showView method. But I explicitly check if the viewId is null before adding it 
to the collection.
This could be some kind of timing issue... where you're trying to open the view
in a perspective that hasn't gotten itself into a working state... it could be
that you'll need to wrap your logic in LaunchView.showViewsForCurrentSelection
in a WorkbenchJob to ensure that the perspective is in a happy state.

*** Bug 56176 has been marked as a duplicate of this bug. ***
It is possible for PartTabFolder.getControl() to return null in certain
situations (such as when it is first created), and we were not protecting
against this. Although I cannot reproduce this, I have removed the (unnecessary)
code that dereferenced the control. I believe this will fix the problem.

*** Bug 53303 has been marked as a duplicate of this bug. ***
Although I suspect this is fixed in head, I cannot test it. Please reopen if the
problem recurs.
*** Bug 58241 has been marked as a duplicate of this bug. ***
Re-opening to move to UI.
Marking as fixed (not sure why it was moved back to debug).
I got the problem again in 20040413, while switching to debug perspective (in 
same window). I was in Java perspective, and had another window with debug 
perspective as well.

Still occurs in 20040413.


!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:52.341
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
!ENTRY org.eclipse.core.runtime 4 2 Apr 15, 2004 23:26:52.411
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
!ENTRY org.eclipse.ui 4 4 Apr 15, 2004 23:26:52.441
!MESSAGE Unhandled event loop exception
Unhandled event loop exception
Reason:
!ENTRY org.eclipse.ui 4 0 Apr 15, 2004 23:26:52.441
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
Failed to execute runnable (java.lang.NullPointerException)
!ENTRY org.eclipse.ui 4 4 Apr 15, 2004 23:26:52.441
!MESSAGE *** SWT nested exception
*** SWT nested exception
Reason:
!ENTRY org.eclipse.ui 4 0 Apr 15, 2004 23:26:52.451
!MESSAGE java.lang.NullPointerException
!STACK 0

My fix did not make it in for the build on the 13th, however it would have made
it in for subsequent builds.

I will leave this open for a few more days to determine if the problem recurs.

Build id: 200405060200.

I experienced a similar problem, though it began with a ClassCastException,
under the exact same conditions. I launched, hit a breakpoint, then it tried to
switch to debug. Both my perspectives were blank (java &amp; debug), and after
trying to switch back and forth a few times I had to shut down the workbench
because nothing was showing up. The second time it happened the original
exception was an NPE and an error dialog came up and said something like "The
command for the key you pressed failed". Also, since this happened I have been
unable to switch to debug perspective (I get the ClassCastException). I might
try a fresh workspace, or move back a few builds. Here are some of the
exceptions that were in my .log file:

!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:24:57.760
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:24:57.800
!MESSAGE Failed to execute runnable (java.lang.ClassCastException)
!STACK 0
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:24:57.810
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:24:57.830
!MESSAGE java.lang.ClassCastException
!STACK 0
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:25:00.123
!MESSAGE Unhandled event loop exception


Followed by many:

ENTRY org.eclipse.ui 4 0 May 06, 2004 15:25:00.143
!MESSAGE java.lang.NullPointerException
!STACK 0
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:25:08.745
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:25:08.755
!MESSAGE java.lang.NullPointerException
!STACK 0


The second time I tried it, I got this:

!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:37:02.662
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
!ENTRY org.eclipse.ui 4 4 May 06, 2004 15:37:02.682
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 May 06, 2004 15:37:02.692
!MESSAGE java.lang.NullPointerException
!STACK 0

The stack trace in comment 12 is a duplicate of bug 61247.

The original problem appears to be fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54929" />
    <CreationDate amount="2004-03-15 20:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Don't autoOpen monitors view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We shouldn't automatically open the Threads and Monitors view with the JDT Debugging context.
Fixed in the JDT Debug UI plugin.xml. Please verify, DarinS.
Verified.</WithStack>
    <WithOutStack>We shouldn't automatically open the Threads and Monitors view with the JDT Debugging context.
Fixed in the JDT Debug UI plugin.xml. Please verify, DarinS.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54930" />
    <CreationDate amount="2004-03-15 20:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[RCP] Fast view menu item should not be shown for fixed views</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- run the browser example, with its perspective specifying fixed="true"</Line>
          <Line>- right click on the view tab</Line>
          <Line>- it has a Fast View item</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build I20040310 + latest from HEAD

- run the browser example, with its perspective specifying fixed="true"
- right click on the view tab
- it has a Fast View item

It should not be possible to toggle between docked and fast view for fixed (non-
moveable) views.  This menu item should be hidden (not just made invisible) for 
fixed views.

In addition, if the app has configured the window to not have a fast view bar 
(IWorkbenchWindowConfigurer.setShowFastViewBar(false)), then the menu item (or 
any ways of converting to a fast view) should be unavailable.
Critical for LWP.

Matt, are the other menu items that are currently visible sensible for LWP?

- Fixed views currently get a disabled Close item.  It seems like this should 
be invisible.

- Move &gt; Tab Group should be disabled or hidden for non-moveable views 
(particularly if there's only one view in the group).

- Minimize and Maximize still work for non-moveable views.  It would be good to 
have separate control over these, but for M8 it seems like these should be 
disabled or hidden (preferably hidden) as should the corresponding CTabFolder 
buttons (hidden).


Can't we move all of this behavior into the presentations API?

Otherwise, I would expect any menu items that are not applicable because of a 
fixed nature would not be visible.  A view is fixed for the life of the window, 
it's not like the enablement state for these items will change.

-m@
I agree about the visibility vs. enablement.

Stefan has thoughts about the above.  Stefan?

I've released the change to hide Fast View when the part is not moveable.
Still need to check if fast views are enabled at all in the window.
Stefan, we'll need access to the workbench window from the site for this.

Leaving open for the other concerns.
Nick to verify. 
Regarding comment 3, the original plan was to give the presentation control over
these items... however, we did not have a chance to do this rearrangement for M8.
Deferring remaining work until M9:

In addition, if the app has configured the window to not have a fast view bar 
(IWorkbenchWindowConfigurer.setShowFastViewBar(false)), then the menu item (or 
any ways of converting to a fast view) should be unavailable.

Stefan, would you be able to take care of this one for M9?
Can someone provide status on this?  We would like to get a fix for this soon, 
next integration view maybe?
Matt, we're focussing on API issues for the next integration build, but may be
able to squeeze this one in.
I released a patch this weekend which should have fixed this. I need to test it
with an RCP app that has movable views but has disabled fastviews before I can
consider this closed. 

Do we have any such tests?

Try the browser example: org.eclipse.ui.examples.rcp.browser.
You need to specify -application org.ecliplse.ui.examples.rcp.browser.app and
also include only this plugin and all its prerequisites in the launch config
(there's a button for computing this).
The rcp.browser example should be a good test case.  I believe the fast view 
bar has been disabled. I would suggest just modifying the perspective factory 
to get multiple moveable views.

Otherwise I do not have any test cases that are easily shared.  Sorry.

-m@

Fixed</WithStack>
    <WithOutStack>build I20040310 + latest from HEAD

- run the browser example, with its perspective specifying fixed="true"
- right click on the view tab
- it has a Fast View item

It should not be possible to toggle between docked and fast view for fixed (non-
moveable) views.  This menu item should be hidden (not just made invisible) for 
fixed views.

In addition, if the app has configured the window to not have a fast view bar 
(IWorkbenchWindowConfigurer.setShowFastViewBar(false)), then the menu item (or 
any ways of converting to a fast view) should be unavailable.
Critical for LWP.

Matt, are the other menu items that are currently visible sensible for LWP?

- Fixed views currently get a disabled Close item.  It seems like this should 
be invisible.

- Move &gt; Tab Group should be disabled or hidden for non-moveable views 
(particularly if there's only one view in the group).

- Minimize and Maximize still work for non-moveable views.  It would be good to 
have separate control over these, but for M8 it seems like these should be 
disabled or hidden (preferably hidden) as should the corresponding CTabFolder 
buttons (hidden).


Can't we move all of this behavior into the presentations API?

Otherwise, I would expect any menu items that are not applicable because of a 
fixed nature would not be visible.  A view is fixed for the life of the window, 
it's not like the enablement state for these items will change.

-m@
I agree about the visibility vs. enablement.

Stefan has thoughts about the above.  Stefan?

I've released the change to hide Fast View when the part is not moveable.
Still need to check if fast views are enabled at all in the window.
Stefan, we'll need access to the workbench window from the site for this.

Leaving open for the other concerns.
Nick to verify. 
Regarding comment 3, the original plan was to give the presentation control over
these items... however, we did not have a chance to do this rearrangement for M8.
Deferring remaining work until M9:

In addition, if the app has configured the window to not have a fast view bar 
(IWorkbenchWindowConfigurer.setShowFastViewBar(false)), then the menu item (or 
any ways of converting to a fast view) should be unavailable.

Stefan, would you be able to take care of this one for M9?
Can someone provide status on this?  We would like to get a fix for this soon, 
next integration view maybe?
Matt, we're focussing on API issues for the next integration build, but may be
able to squeeze this one in.
I released a patch this weekend which should have fixed this. I need to test it
with an RCP app that has movable views but has disabled fastviews before I can
consider this closed. 

Do we have any such tests?

Try the browser example: org.eclipse.ui.examples.rcp.browser.
You need to specify -application org.ecliplse.ui.examples.rcp.browser.app and
also include only this plugin and all its prerequisites in the launch config
(there's a button for computing this).
The rcp.browser example should be a good test case.  I believe the fast view 
bar has been disabled. I would suggest just modifying the perspective factory 
to get multiple moveable views.

Otherwise I do not have any test cases that are easily shared.  Sorry.

-m@

Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54931" />
    <CreationDate amount="2004-03-15 21:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Webapp][Search] Defining help search scope is confusing.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>a. Scope my search</Line>
          <Line>b. Scope my search and save that scope as an entity I can apply in future</Line>
          <Line>(*if* a user has a saved scoped list, then that user could have the goal to</Line>
          <Line>edit that list).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The HTML dialog for selecting help search scope does not allow defining the 
scope - that requires openning of second dialog on top of the first one.
Users are confused, but it is not really necessary to have the second dialog.  
Both defining/editing and selecting of search scope can occur on the same 
dialog.
Marking as P4 - unlikely to be looked at for 3.1.
Our consumers still have requirement for this enhancement: to have the flow of 
the user task be to select the scoped topics and then ask the user if they want 
to save that selection as a search list.

There are two user goals:
a. Scope my search
b. Scope my search and save that scope as an entity I can apply in future
(*if* a user has a saved scoped list, then that user could have the goal to 
edit that list).

Adding an attachment that is an example illustration of a dialog where the user 
can simply select the topics by which they want to scope the search OR they 
specify a saved scope list in the drop down. The user's decision point to save 
a new list or edit a previously saved one is done at the bottom of the dialog 
via the New and Edit buttons.

--Lee Anne Kowalski
IBM User Assistance Technologies
Created attachment 26334
Illustration of proposed enhanced user task flow
*** Bug 202176 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The HTML dialog for selecting help search scope does not allow defining the 
scope - that requires openning of second dialog on top of the first one.
Users are confused, but it is not really necessary to have the second dialog.  
Both defining/editing and selecting of search scope can occur on the same 
dialog.
Marking as P4 - unlikely to be looked at for 3.1.
Our consumers still have requirement for this enhancement: to have the flow of 
the user task be to select the scoped topics and then ask the user if they want 
to save that selection as a search list.

There are two user goals:
a. Scope my search
b. Scope my search and save that scope as an entity I can apply in future
(*if* a user has a saved scoped list, then that user could have the goal to 
edit that list).

Adding an attachment that is an example illustration of a dialog where the user 
can simply select the topics by which they want to scope the search OR they 
specify a saved scope list in the drop down. The user's decision point to save 
a new list or edit a previously saved one is done at the bottom of the dialog 
via the New and Edit buttons.

--Lee Anne Kowalski
IBM User Assistance Technologies
Created attachment 26334
Illustration of proposed enhanced user task flow
*** Bug 202176 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54932" />
    <CreationDate amount="2004-03-15 21:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Help should recognize dynamically added plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Help should recognize dynamically added plugins (without restarting).

It should recognize changing contributions to extension points:
org.eclipse.help.contentProducer
org.eclipse.help.toc
org.eclipse.help.context

It also makes sense to recognize additional contributions to:
org.eclipse.help.base.browser
org.eclipse.help.contentProducer
org.eclipse.help.toc
org.eclipse.help.context
extensions can be modified without restarting help.</WithStack>
    <WithOutStack>Help should recognize dynamically added plugins (without restarting).

It should recognize changing contributions to extension points:
org.eclipse.help.contentProducer
org.eclipse.help.toc
org.eclipse.help.context

It also makes sense to recognize additional contributions to:
org.eclipse.help.base.browser
org.eclipse.help.contentProducer
org.eclipse.help.toc
org.eclipse.help.context
extensions can be modified without restarting help.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54933" />
    <CreationDate amount="2004-03-15 21:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ant error overlay drawn in different quadrant than Java</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Ant error overlay is drawn in the lower right.
To be consistent with the Java error indicators it should be drawn in the lower 
left.
Fixed in AntImageDescriptor.
Please verify Jared.
Verified.</WithStack>
    <WithOutStack>The Ant error overlay is drawn in the lower right.
To be consistent with the Java error indicators it should be drawn in the lower 
left.
Fixed in AntImageDescriptor.
Please verify Jared.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54934" />
    <CreationDate amount="2004-03-15 23:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Intro] The right intro to use should be defined in about.ini</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Define a new property (not the old 'welcome' to retain backaward</Line>
          <Line>compatibility) that defines the intro ID to use with the primary feature.</Line>
          <Line />
          <Line>2) During the startup sequence, fetch the IProduct object, and get the intro</Line>
          <Line>ID from it as a property. Then locate the org.eclipse.ui.intro extension</Line>
          <Line>whose 'intro' element has the matching ID, instantiate it and show it.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1) The contribution into org.eclipse.ui.intro is in org.eclipse.platform plug-</Line>
          <Line>in (currently commented out). It contributes our customizable intro part and</Line>
          <Line>also contributes configuration for it (our own extension point).</Line>
          <Line />
          <Line>2) org.eclipse.jdt and org.eclipse.pde plug-ins contain extensions of the</Line>
          <Line>org.eclipse.platform config.</Line>
          <Line />
          <Line>3) The binding between product ID and intro ID will also be in</Line>
          <Line>org.eclipse.platform.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In the original design of the org.eclipse.ui.intro extension point, the idea 
was that 'productId' attribute would be used to map the intro with the product 
it should be used for.

We got feedback that the link feels up-side-down i.e. the product should 
define the id of the intro to use. This makes sense because today we define 
welcome to use in about.ini of the primary feature's plug-in.

We should do the same thing for the new intro:

1) Define a new property (not the old 'welcome' to retain backaward 
compatibility) that defines the intro ID to use with the primary feature.

2) During the startup sequence, fetch the IProduct object, and get the intro 
ID from it as a property. Then locate the org.eclipse.ui.intro extension 
whose 'intro' element has the matching ID, instantiate it and show it.

Set severity to 'major' to try to get this in by M8 (keep dreaming :-).
Based on our discussion yesterday, you'd rather have this binding in a seperate
extension element?

I propose the following (optionally used, of course) addition to the
org.eclipse.ui.intro extension point:

&lt;introProductBinding introID="", productID="" /&gt;

At startup the behaviour would be as you suggested.  We'd locate the product ID,
and then then use the intro that is bound to it via introProductBinding.
Sounds about right. For the benefit of others copied on this defect, the 
binding extension would be used instead of a property in about.ini. This is to 
be in sync with the new thinking of how product-related binding should be 
encoded and is similar to how activities are bound with the product.

The extension for the extension point above would appear in the product 
feature plug-in. In the case of Eclipse, it would appear in plugin.xml of 
org.eclipse.platform and would look something like:

&lt;introProductBinding introID="org.eclipse.platform.intro", 
productID="org.eclipse.platform" /&gt;

This is equivalent to having a property in about.ini, for example:

introId=org.eclipse.platform.intro


Where are you guys going to define the org.eclipse.ui.intro extension for
platform?  I see the platform plugin has reference to your extension points, but
who is going to be referring to ours?
Kim, I moved the content into HEAD last night in the following way:

1) The contribution into org.eclipse.ui.intro is in org.eclipse.platform plug-
in (currently commented out). It contributes our customizable intro part and 
also contributes configuration for it (our own extension point).

2) org.eclipse.jdt and org.eclipse.pde plug-ins contain extensions of the 
org.eclipse.platform config.

3) The binding between product ID and intro ID will also be in 
org.eclipse.platform.

We hope to remove the comment by the time M8 build starts.
Your extension is now in head.  It's a child element of the intro extension
point.  You may direct cookies towards the Ottawa office at your liesure.
Kim, I am sorry to have to complain, but it is important to have the 
productId -&gt; introId binding separate from org.eclipse.ui.intro extension. The 
scenario where this is critical is in Russian doll products.

For example, product A declares a product Id and defines intro contribution. 
It also declares product Id-&gt;intro id binding.

Product B is created by adding stuff on top of A and declaring its own product 
Id. It likes product A intro but would like to add some stuff to it. 
Therefore, it declared product Id-&gt;intro Id binding where it binds product B 
Id with product A intro (plus it adds extensions to it).

Am I wrong, or the above cannot be accomplished if product binding is the 
child of org.eclipse.ui.intro extension point? Can you post an example of the 
markup for the scenario above?
No no..you misunderstood (likely because I am so very bad at communicating).

You define the intro binding under an org.eclipse.ui.intro extension, but it
doesn't have to be the same one that defines the intro.  It's a child of the
point, not the intro.  The intro point may contain intros or bindings.  This is
done so that we don't have to introduce a seperate extension point for bindings.

Ie:

in plugin A

&lt;extension point="org.eclipse.ui.intro"&gt;
    &lt;intro id="someID" /&gt;
&lt;/extension&gt;

in plugin B 
&lt;extension point="org.eclipse.ui.intro"&gt;
    &lt;introProductBinding productId="someProduct" introId="someId" /&gt;
&lt;/extension&gt;

Ahhh.... :-)

I hoped it will be like this but wanted to clarify :-).

All is well.
Verified in 200403240800
Closed.</WithStack>
    <WithOutStack>In the original design of the org.eclipse.ui.intro extension point, the idea 
was that 'productId' attribute would be used to map the intro with the product 
it should be used for.

We got feedback that the link feels up-side-down i.e. the product should 
define the id of the intro to use. This makes sense because today we define 
welcome to use in about.ini of the primary feature's plug-in.

We should do the same thing for the new intro:

1) Define a new property (not the old 'welcome' to retain backaward 
compatibility) that defines the intro ID to use with the primary feature.

2) During the startup sequence, fetch the IProduct object, and get the intro 
ID from it as a property. Then locate the org.eclipse.ui.intro extension 
whose 'intro' element has the matching ID, instantiate it and show it.

Set severity to 'major' to try to get this in by M8 (keep dreaming :-).
Based on our discussion yesterday, you'd rather have this binding in a seperate
extension element?

I propose the following (optionally used, of course) addition to the
org.eclipse.ui.intro extension point:

&lt;introProductBinding introID="", productID="" /&gt;

At startup the behaviour would be as you suggested.  We'd locate the product ID,
and then then use the intro that is bound to it via introProductBinding.
Sounds about right. For the benefit of others copied on this defect, the 
binding extension would be used instead of a property in about.ini. This is to 
be in sync with the new thinking of how product-related binding should be 
encoded and is similar to how activities are bound with the product.

The extension for the extension point above would appear in the product 
feature plug-in. In the case of Eclipse, it would appear in plugin.xml of 
org.eclipse.platform and would look something like:

&lt;introProductBinding introID="org.eclipse.platform.intro", 
productID="org.eclipse.platform" /&gt;

This is equivalent to having a property in about.ini, for example:

introId=org.eclipse.platform.intro


Where are you guys going to define the org.eclipse.ui.intro extension for
platform?  I see the platform plugin has reference to your extension points, but
who is going to be referring to ours?
Kim, I moved the content into HEAD last night in the following way:

1) The contribution into org.eclipse.ui.intro is in org.eclipse.platform plug-
in (currently commented out). It contributes our customizable intro part and 
also contributes configuration for it (our own extension point).

2) org.eclipse.jdt and org.eclipse.pde plug-ins contain extensions of the 
org.eclipse.platform config.

3) The binding between product ID and intro ID will also be in 
org.eclipse.platform.

We hope to remove the comment by the time M8 build starts.
Your extension is now in head.  It's a child element of the intro extension
point.  You may direct cookies towards the Ottawa office at your liesure.
Kim, I am sorry to have to complain, but it is important to have the 
productId -&gt; introId binding separate from org.eclipse.ui.intro extension. The 
scenario where this is critical is in Russian doll products.

For example, product A declares a product Id and defines intro contribution. 
It also declares product Id-&gt;intro id binding.

Product B is created by adding stuff on top of A and declaring its own product 
Id. It likes product A intro but would like to add some stuff to it. 
Therefore, it declared product Id-&gt;intro Id binding where it binds product B 
Id with product A intro (plus it adds extensions to it).

Am I wrong, or the above cannot be accomplished if product binding is the 
child of org.eclipse.ui.intro extension point? Can you post an example of the 
markup for the scenario above?
No no..you misunderstood (likely because I am so very bad at communicating).

You define the intro binding under an org.eclipse.ui.intro extension, but it
doesn't have to be the same one that defines the intro.  It's a child of the
point, not the intro.  The intro point may contain intros or bindings.  This is
done so that we don't have to introduce a seperate extension point for bindings.

Ie:

in plugin A

&lt;extension point="org.eclipse.ui.intro"&gt;
    &lt;intro id="someID" /&gt;
&lt;/extension&gt;

in plugin B 
&lt;extension point="org.eclipse.ui.intro"&gt;
    &lt;introProductBinding productId="someProduct" introId="someId" /&gt;
&lt;/extension&gt;

Ahhh.... :-)

I hoped it will be like this but wanted to clarify :-).

All is well.
Verified in 200403240800
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54935" />
    <CreationDate amount="2004-03-15 23:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ant editor title image does not indicate error when first opened</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Ant editor title image is updated to indicate a buildfile with an error 
when a save occurs.

The image needs to be updated when the editor is first opened as well.
Fixed in the AntEditor and the NotifyingReconciler.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks, build notes updated.</WithStack>
    <WithOutStack>The Ant editor title image is updated to indicate a buildfile with an error 
when a save occurs.

The image needs to be updated when the editor is first opened as well.
Fixed in the AntEditor and the NotifyingReconciler.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks, build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54936" />
    <CreationDate amount="2004-03-15 23:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GLA Editor hangs when sensor backlog is huge</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When a sensor has a backlog that is greater then the amount of lines required 
to create 10 records then the editor hangs and is unable to walk through the 
records.  This is beacuse the buttons are not enabled.
Fixed in HEAD and Hyades_v1_3_0
Fixed..closing
house keeping</WithStack>
    <WithOutStack>When a sensor has a backlog that is greater then the amount of lines required 
to create 10 records then the editor hangs and is unable to walk through the 
records.  This is beacuse the buttons are not enabled.
Fixed in HEAD and Hyades_v1_3_0
Fixed..closing
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54937" />
    <CreationDate amount="2004-03-16 00:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Editor] Changing property does not change value</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Due to the partial incremental parsing that I have added, property values are 
not updated for the text hovering in the editor.

This is due to the set once nature of Ant properties. Any attempts to set a 
property after it has been initially set are ignored.
Fixed by creating the AntModelProject which allows property values to be 
overridden.

Test by creating an ant property with a name, value.
Hover over the name of the property to see the value.
Change the value.
Hover and ensure that the value is updated.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Build notes updated.</WithStack>
    <WithOutStack>Due to the partial incremental parsing that I have added, property values are 
not updated for the text hovering in the editor.

This is due to the set once nature of Ant properties. Any attempts to set a 
property after it has been initially set are ignored.
Fixed by creating the AntModelProject which allows property values to be 
overridden.

Test by creating an ant property with a name, value.
Hover over the name of the property to see the value.
Change the value.
Hover and ensure that the value is updated.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54938" />
    <CreationDate amount="2004-03-16 00:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Test exection hangs for all Hyades test types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Test exection hangs for all Hyades test types
Commented out code from bugzilla 54376, because it caused this regression.  
Will work with Samson on permanent fix tomorrow.
house keeping
Closing...</WithStack>
    <WithOutStack>Test exection hangs for all Hyades test types
Commented out code from bugzilla 54376, because it caused this regression.  
Will work with Samson on permanent fix tomorrow.
house keeping
Closing...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54939" />
    <CreationDate amount="2004-03-16 01:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>New -&gt; Test Artifact gesture in Test Navigator brings up empty selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The normal gesture to create test artifacts from the test navigator is to 
right click in the test navigator and select New -&gt; Test Artifact.  This 
should bring up the set of wizards for creating Hyades test artifacts 
(everything that appears under "Test" in the New -&gt; Other list), but there are 
currenlty no wizards shown.  

This can be worked around by using New -&gt; Other.
This was a WSWB regression, fixed by picking up the 0311 build.  There is now 
a checkbox to "show all wizards."
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The normal gesture to create test artifacts from the test navigator is to 
right click in the test navigator and select New -&gt; Test Artifact.  This 
should bring up the set of wizards for creating Hyades test artifacts 
(everything that appears under "Test" in the New -&gt; Other list), but there are 
currenlty no wizards shown.  

This can be worked around by using New -&gt; Other.
This was a WSWB regression, fixed by picking up the 0311 build.  There is now 
a checkbox to "show all wizards."
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54940" />
    <CreationDate amount="2004-03-16 02:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[Java] Compare editor does not replace tabs by spaces</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I type tabs in the normal Java editors, tabs are replaced by spaces
because I have set the following preference:

Java | Editor | Typing | Insert space for tabs

The compare editor however does not seem to use this setting: it keeps the
tabs I type in.
I have this same problem 3.1m2, can we have this re-targetted to 3.1 please?
The same is true for C/C++ editors.
I just noticed this in the production release of 3.2 as well.  It's a pretty painful one for me.  I have to manually spacebar in the compare editor instead of using tabs as we can't have tabs in our Java source.
The problem is that the viewer used in a comparison is not a Java editor so it has none of the niffty Java features.
*** Bug 154306 has been marked as a duplicate of this bug. ***
Re comment 4 --- I have seen this on a regular txt file.
The same applied to txt (i.e. compare makes use of a SourceViewer which has different capabilites than a text editor).
Dani, can you give me some idea of what would be involved in moving the tabbing behavior down from the Java editor into the source viewer configuration that comapre uses?
I suggest to wait because I plan to push this (see bug 82296) down to Platform Text anyway. If all goes well you should be able to simply configure this in the configuration.
Sounds good to me.
The support is now available and can be configured directly on the text viewer (see ITextViewerExtension7.setTabsToSpacesConverter(IAutoEditStrategy)).

Create a TabsToSpacesConverter and configure it as outlined in:
AbstractTextEditor.installTabsToSpacesConverter()

Here's how to find out whether the conversion is enabled:
AbstractTextEditor.isTabsToSpacesConversionEnabled()

IMPORTANT NOTE: general text editors and the Java editor DO NOT share the same preferences when it comes to tabs width and inserting tabs/spaces. Take a look at the above methods in CompilationUnitEditor for details.
We will investigate for M7, time permitting.
Dani, I've had a quick look at the places you suggested and it looks like the only way I could possibly do this right without adding API is to add the behavior to the source viewer configuration. For basic text files, I would need to subclass SourceViewrerConfiguration and for Java I would need to subclass the JavaSourceViewerConfiguration. Is there any reason why the editor behavior was implemented at the editor level and not in the SourceViewerConfiguration (i.e. do you know of any reason why the approach I just outlined wouldn't work)?
&gt;Is there any reason why the editor behavior
&gt;was implemented at the editor level and not in the SourceViewerConfiguration
That's not true for the behavior: the work is done by the TextViewer where you can call setTabsToSpacesConverter(...) and there is a TabsToSpacesConverter in jface.text. Now when it comes to the setup/configuration you're right. The main reason I've put it into the editor is because on/off and space size depends on preference and project properties, but I agree that it would also fit well into the SVC. Please file a feature request if you want this for 3.4.

Now, I don't see your point regarding subclassing the SVCs: can't you simply check the preference(s) and then call setTabsToSpacesConverter with a TabsToSpacesConverter? Keep in mind that your (Java) compare editor has to update the settings if the input changes as these settings can be project specific for CUs.
What I was trying to say was that I need to implement it in TextMergeViewer in such a way that the JavaMergeViewer can override it without providing API (or have a compare specific setting which is not good). The only point in the current API where this is possible is the TextMergeViewer#configureTextViewer which registers the SVC. Therefore, one approach would be to implement the behavior in the SVCs (one for Text and one for Java). I don't think I could just do it directly in the configureTextViewer method since we need to react to preference changes. I just wanted to make sure there was no technical reason why it could be done in the SVC.

I'm starting to think that the right way to do this is to log the request for Text to put the preference handling in the SVC. Without this, it becomes very difficult to describe to compare providers how get the behavior (i.e. they would get it for free if they don't use there own SVC but would need to implement it themselves if they use their own). I've logged bug 179975 against Text for putting the preference handling in the SVC and will defer this enhancement.
I am having the same problem:

I'm using eclipse 3.3.2 M20080221-1800

I've changed the global preferences for editors to use spaces rather than tabs

General &gt; Editors &gt; Text Editors

Displayed tab width: 3
[x] Insert spaces for tabs

However, when I reformat an XML file using editor, it replaces all of the spaces with tabs.

I have also enabled this option to visually see the tabs:

[x] Show whitespace characters.

John, your problem is either wrong XML formatter preferences in your workspace or a bug in the XML formatter but definitely unrelated to the compare editor.
This seems to be working fine, at least in Java compare since we started to embedded a Java editor (see bug 169386). The pref is no longer available under "Java | Editor | Typing | Insert space for tabs" but when I played with "Java | Code Style | Formatter" I did manage to get a result when tab gets replaced with spaces. Could someone verify if my finding is correct, I'm not 100% what expected behavior should be.

Text compare doesn't use a text editor so far (see bug 259410), so the pref won't work when comparing txt .
(In reply to comment #18)
&gt; This seems to be working fine, at least in Java compare since we started to
&gt; embedded a Java editor (see bug 169386). 

I can confirm that it works the same in the java compare and java editor.
This is fixed in the java compare. It still remains in the text compare, however this is covered in bug 259410.</WithStack>
    <WithOutStack>When I type tabs in the normal Java editors, tabs are replaced by spaces
because I have set the following preference:

Java | Editor | Typing | Insert space for tabs

The compare editor however does not seem to use this setting: it keeps the
tabs I type in.
I have this same problem 3.1m2, can we have this re-targetted to 3.1 please?
The same is true for C/C++ editors.
I just noticed this in the production release of 3.2 as well.  It's a pretty painful one for me.  I have to manually spacebar in the compare editor instead of using tabs as we can't have tabs in our Java source.
The problem is that the viewer used in a comparison is not a Java editor so it has none of the niffty Java features.
*** Bug 154306 has been marked as a duplicate of this bug. ***
Re comment 4 --- I have seen this on a regular txt file.
The same applied to txt (i.e. compare makes use of a SourceViewer which has different capabilites than a text editor).
Dani, can you give me some idea of what would be involved in moving the tabbing behavior down from the Java editor into the source viewer configuration that comapre uses?
I suggest to wait because I plan to push this (see bug 82296) down to Platform Text anyway. If all goes well you should be able to simply configure this in the configuration.
Sounds good to me.
The support is now available and can be configured directly on the text viewer (see ITextViewerExtension7.setTabsToSpacesConverter(IAutoEditStrategy)).

Create a TabsToSpacesConverter and configure it as outlined in:
AbstractTextEditor.installTabsToSpacesConverter()

Here's how to find out whether the conversion is enabled:
AbstractTextEditor.isTabsToSpacesConversionEnabled()

IMPORTANT NOTE: general text editors and the Java editor DO NOT share the same preferences when it comes to tabs width and inserting tabs/spaces. Take a look at the above methods in CompilationUnitEditor for details.
We will investigate for M7, time permitting.
Dani, I've had a quick look at the places you suggested and it looks like the only way I could possibly do this right without adding API is to add the behavior to the source viewer configuration. For basic text files, I would need to subclass SourceViewrerConfiguration and for Java I would need to subclass the JavaSourceViewerConfiguration. Is there any reason why the editor behavior was implemented at the editor level and not in the SourceViewerConfiguration (i.e. do you know of any reason why the approach I just outlined wouldn't work)?
&gt;Is there any reason why the editor behavior
&gt;was implemented at the editor level and not in the SourceViewerConfiguration
That's not true for the behavior: the work is done by the TextViewer where you can call setTabsToSpacesConverter(...) and there is a TabsToSpacesConverter in jface.text. Now when it comes to the setup/configuration you're right. The main reason I've put it into the editor is because on/off and space size depends on preference and project properties, but I agree that it would also fit well into the SVC. Please file a feature request if you want this for 3.4.

Now, I don't see your point regarding subclassing the SVCs: can't you simply check the preference(s) and then call setTabsToSpacesConverter with a TabsToSpacesConverter? Keep in mind that your (Java) compare editor has to update the settings if the input changes as these settings can be project specific for CUs.
What I was trying to say was that I need to implement it in TextMergeViewer in such a way that the JavaMergeViewer can override it without providing API (or have a compare specific setting which is not good). The only point in the current API where this is possible is the TextMergeViewer#configureTextViewer which registers the SVC. Therefore, one approach would be to implement the behavior in the SVCs (one for Text and one for Java). I don't think I could just do it directly in the configureTextViewer method since we need to react to preference changes. I just wanted to make sure there was no technical reason why it could be done in the SVC.

I'm starting to think that the right way to do this is to log the request for Text to put the preference handling in the SVC. Without this, it becomes very difficult to describe to compare providers how get the behavior (i.e. they would get it for free if they don't use there own SVC but would need to implement it themselves if they use their own). I've logged bug 179975 against Text for putting the preference handling in the SVC and will defer this enhancement.
I am having the same problem:

I'm using eclipse 3.3.2 M20080221-1800

I've changed the global preferences for editors to use spaces rather than tabs

General &gt; Editors &gt; Text Editors

Displayed tab width: 3
[x] Insert spaces for tabs

However, when I reformat an XML file using editor, it replaces all of the spaces with tabs.

I have also enabled this option to visually see the tabs:

[x] Show whitespace characters.

John, your problem is either wrong XML formatter preferences in your workspace or a bug in the XML formatter but definitely unrelated to the compare editor.
This seems to be working fine, at least in Java compare since we started to embedded a Java editor (see bug 169386). The pref is no longer available under "Java | Editor | Typing | Insert space for tabs" but when I played with "Java | Code Style | Formatter" I did manage to get a result when tab gets replaced with spaces. Could someone verify if my finding is correct, I'm not 100% what expected behavior should be.

Text compare doesn't use a text editor so far (see bug 259410), so the pref won't work when comparing txt .
(In reply to comment #18)
&gt; This seems to be working fine, at least in Java compare since we started to
&gt; embedded a Java editor (see bug 169386). 

I can confirm that it works the same in the java compare and java editor.
This is fixed in the java compare. It still remains in the text compare, however this is covered in bug 259410.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54941" />
    <CreationDate amount="2004-03-16 03:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>for errors in binary classes, use sourcepath option</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098315">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CompilationResult.java:110)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationResult.java:336)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.CompilationResult.getProblems(CompilationResult.java:230)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.CompilationResult.getAllProblems(CompilationResult.java:118)</Frame>
          <Frame depth="4">org.aspectj.ajdt.internal.core.builder.AjBuildManager$2.acceptResult(AjBuildManager.java:465)</Frame>
          <Frame depth="5">org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.acceptResult(AjCompilerAdapter.java:164)</Frame>
          <Frame depth="6">org.aspectj.ajdt.internal.compiler.WeaverAdapter.finishedWith(WeaverAdapter.java:144)</Frame>
          <Frame depth="7">org.aspectj.ajdt.internal.compiler.WeaverAdapter.weaveCompleted(WeaverAdapter.java:124)</Frame>
          <Frame depth="8">org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:511)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:215)</Frame>
          <Frame depth="10">org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:107)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376)</Frame>
          <Frame depth="12">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:411)</Frame>
          <Frame depth="13">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:147)</Frame>
          <Frame depth="14">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:81)</Frame>
          <Frame depth="15">org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:104)</Frame>
          <Frame depth="16">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)</Frame>
          <Frame depth="17">org.aspectj.tools.ajc.Main.run(Main.java:231)</Frame>
          <Frame depth="18">org.aspectj.tools.ajc.Main.runMain(Main.java:168)</Frame>
          <Frame depth="19">org.aspectj.tools.ajc.Main.main(Main.java:81)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>We could use an option -sourcepath {dir..} to be able to specify paths to source
files for errors and warnings in binary input.

Right now weaver messages for binary input show up with a path composed of the
current working directory and the calculated path to the enclosing type, which
is rarely correct (but confusingly plausible!).
Created attachment 8592
sourcepath patch

Attaching a patch that plumbs -sourcepath from the command line and
ajdt/ajbrowser through the weaver, using an interface in util.	Patch lacks
documentation and tests.  It seems to work for what I'm using it for (weaving
against 1000+ .class files in ajbrowser), but I have noticed the stack trace
below when running from the command line (recent changes?).

This might belong in the weaver's public API if we want the weaver to resolve
the file references.  Conversely, the weaver could deliver its best-guess
relative path, and we could have special message handlers that rework the
source file if not found.  The problem with the latter is that the weaver can
use the sourcepath (the source-finder) to identify which of the possible paths
calculable by the weaver is the actual one.

trace noted (also noted traces being printed twice - hmm):

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CompilationResult.java:110)

	at
org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationResult.java:336)

	at
org.eclipse.jdt.internal.compiler.CompilationResult.getProblems(CompilationResult.java:230)

	at
org.eclipse.jdt.internal.compiler.CompilationResult.getAllProblems(CompilationResult.java:118)

	at
org.aspectj.ajdt.internal.core.builder.AjBuildManager$2.acceptResult(AjBuildManager.java:465)

	at
org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.acceptResult(AjCompilerAdapter.java:164)

	at
org.aspectj.ajdt.internal.compiler.WeaverAdapter.finishedWith(WeaverAdapter.java:144)

	at
org.aspectj.ajdt.internal.compiler.WeaverAdapter.weaveCompleted(WeaverAdapter.java:124)

	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:511)
	at
org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:215)

	at
org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:107)

	at
org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376)
	at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:411)

	at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:147)

	at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:81)

	at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:104)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)
	at org.aspectj.tools.ajc.Main.run(Main.java:231)
	at org.aspectj.tools.ajc.Main.runMain(Main.java:168)
	at org.aspectj.tools.ajc.Main.main(Main.java:81)</WithStack>
    <WithOutStack>We could use an option -sourcepath {dir..} to be able to specify paths to source
files for errors and warnings in binary input.

Right now weaver messages for binary input show up with a path composed of the
current working directory and the calculated path to the enclosing type, which
is rarely correct (but confusingly plausible!).
Created attachment 8592
sourcepath patch

Attaching a patch that plumbs -sourcepath from the command line and
ajdt/ajbrowser through the weaver, using an interface in util.	Patch lacks
documentation and tests.  It seems to work for what I'm using it for (weaving
against 1000+ .class files in ajbrowser), but I have noticed the stack trace
below when running from the command line (recent changes?).

This might belong in the weaver's public API if we want the weaver to resolve
the file references.  Conversely, the weaver could deliver its best-guess
relative path, and we could have special message handlers that rework the
source file if not found.  The problem with the latter is that the weaver can
use the sourcepath (the source-finder) to identify which of the possible paths
calculable by the weaver is the actual one.

trace noted (also noted traces being printed twice - hmm):</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54942" />
    <CreationDate amount="2004-03-16 04:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[BiDi] custom caret is not BIDI aware</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20040316

The smart insert caret is not BIDI aware. This was originally reported in bug 54922.
Honestly, I don't think you can fix this. Currently StyledText uses 
StyledTextBidi to do so, the new implementation uses TextLayout. Either way, 
fixing this would cause bad performance.

Note sure what you mean. We could revert to use simple I caret, wouldn't this
fix the problem?
Yes, it would. Let the StyledText take care of the caret to avoid problems.

*** Bug 81989 has been marked as a duplicate of this bug. ***
Felipe, is there API which would allow us to detect whether the BIDI
caret/support is in use or not? If so, we could disable the custom carets in
such situations.

No Daniel, there is no offical API for that.
StyledText enables bidi caret if BidiUtil#isBidiPlatform() is true or the 
widget is mirrored.

*** Bug 183527 has been marked as a duplicate of this bug. ***
this seems to be ridiculous because this is "simple" asian script. At least
this should work throughout all of eclipse.</WithStack>
    <WithOutStack>I20040316

The smart insert caret is not BIDI aware. This was originally reported in bug 54922.
Honestly, I don't think you can fix this. Currently StyledText uses 
StyledTextBidi to do so, the new implementation uses TextLayout. Either way, 
fixing this would cause bad performance.

Note sure what you mean. We could revert to use simple I caret, wouldn't this
fix the problem?
Yes, it would. Let the StyledText take care of the caret to avoid problems.

*** Bug 81989 has been marked as a duplicate of this bug. ***
Felipe, is there API which would allow us to detect whether the BIDI
caret/support is in use or not? If so, we could disable the custom carets in
such situations.

No Daniel, there is no offical API for that.
StyledText enables bidi caret if BidiUtil#isBidiPlatform() is true or the 
widget is mirrored.

*** Bug 183527 has been marked as a duplicate of this bug. ***
this seems to be ridiculous because this is "simple" asian script. At least
this should work throughout all of eclipse.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54943" />
    <CreationDate amount="2004-03-16 04:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[content assist] Parameter Hints: popup contents are not resized</Summery>
    <Patches amount="1">
      <Patch>
        <index>ContextInformationPopup.java</index>
        <original_file>ContextInformationPopup.java</original_file>
        <modified_file>ContextInformationPopup.java</modified_file>
        <Hunks>
          <hunk>import org.eclipse.swt.events.VerifyEvent;&#xD;
&#xD;
 import org.eclipse.swt.graphics.Color;&#xD;
&#xD;
 import org.eclipse.swt.graphics.Point;&#xD;
&#xD;
+import org.eclipse.swt.layout.GridData;&#xD;
&#xD;
+import org.eclipse.swt.layout.GridLayout;&#xD;
&#xD;
 import org.eclipse.swt.widgets.Control;&#xD;
&#xD;
 import org.eclipse.swt.widgets.Display;&#xD;
&#xD;
 import org.eclipse.swt.widgets.Shell;</hunk>
          <hunk>fContextSelectorShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE);&#xD;
&#xD;
 		fContextSelectorTable= new Table(fContextSelectorShell, SWT.H_SCROLL |</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="18">
      <source_code type="import">
        <location start="1046" end="1089" />
        <code>import org.eclipse.swt.events.VerifyEvent;</code>
      </source_code>
      <source_code type="import">
        <location start="1090" end="1129" />
        <code>import org.eclipse.swt.graphics.Color;</code>
      </source_code>
      <source_code type="import">
        <location start="1130" end="1169" />
        <code>import org.eclipse.swt.graphics.Point;</code>
      </source_code>
      <source_code type="import">
        <location start="1254" end="1294" />
        <code>import org.eclipse.swt.widgets.Control;</code>
      </source_code>
      <source_code type="import">
        <location start="1295" end="1335" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="1336" end="1374" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1397" end="1478" />
        <code>fContextSelectorShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1570" end="1613" />
        <code>+		fContextSelectorTable.setLocation(0, 0);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1618" end="1657" />
        <code>+		GridLayout layout= new GridLayout();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1658" end="1683" />
        <code>+		layout.marginWidth= 0;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1771" end="1822" />
        <code>+		GridData data= new GridData(GridData.FILL_BOTH);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1827" end="1885" />
        <code>int height= fContextSelectorTable.getItemHeight() * 10;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1886" end="1936" />
        <code>-		fContextSelectorShell.setSize(302, height + 2);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1937" end="1983" />
        <code>-		fContextSelectorTable.setSize(300, height);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1984" end="2027" />
        <code>-		fContextSelectorTable.setLocation(1, 1);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2032" end="2077" />
        <code>+		fContextSelectorTable.setLayoutData(data);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2078" end="2124" />
        <code>+		fContextSelectorShell.setSize(300, height);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2132" end="2222" />
        <code>fContextSelectorShell.setBackground(control.getDisplay().getSystemColor(SWT.COLOR_BLACK));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- set caret into a method invocation of an overloaded method</Line>
          <Line>- Edit &gt; Parameter Hints</Line>
          <Line>-&gt; the popup shell is resizable but the table doesn't resize, revealing black</Line>
          <Line>background</Line>
          <Line>*** Bug 60066 has been marked as a duplicate of this bug. ***</Line>
          <Line>Patch for: (org.eclipse.jface.text)</Line>
          <Line>org.eclipse.jface.text.contentassist.ContextInformationPopup</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>zrh plugin-export I20040310.from20040312_1045

- set caret into a method invocation of an overloaded method
- Edit &gt; Parameter Hints
-&gt; the popup shell is resizable but the table doesn't resize, revealing black
background
*** Bug 60066 has been marked as a duplicate of this bug. ***
Patch for: (org.eclipse.jface.text)
org.eclipse.jface.text.contentassist.ContextInformationPopup

Changed layout code to be like the CompletionProposalPopup (minus remembering
size).  No longer sets a minimum size on te table's layout, but creates the
shell with the minimum size and allows children to grow/shrink as needed.

Index: ContextInformationPopup.java
===================================================================
RCS file:
/home/eclipse/org.eclipse.jface.text/src/org/eclipse/jface/text/contentassist/ContextInformationPopup.java,v
retrieving revision 1.22
diff -u -r1.22 ContextInformationPopup.java
--- ContextInformationPopup.java	21 May 2004 09:02:35 -0000	1.22
+++ ContextInformationPopup.java	12 Jun 2004 23:30:01 -0000
@@ -25,6 +25,8 @@
 import org.eclipse.swt.events.VerifyEvent;
 import org.eclipse.swt.graphics.Color;
 import org.eclipse.swt.graphics.Point;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Control;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
@@ -476,10 +478,19 @@
 		fContextSelectorShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE);
 		fContextSelectorTable= new Table(fContextSelectorShell, SWT.H_SCROLL |
SWT.V_SCROLL);
 
+		fContextSelectorTable.setLocation(0, 0);
+		
+		GridLayout layout= new GridLayout();
+		layout.marginWidth= 0;
+		layout.marginHeight= 0;     
+		fContextSelectorShell.setLayout(layout);       
+		
+		GridData data= new GridData(GridData.FILL_BOTH);
+		
 		int height= fContextSelectorTable.getItemHeight() * 10;
-		fContextSelectorShell.setSize(302, height + 2);
-		fContextSelectorTable.setSize(300, height);
-		fContextSelectorTable.setLocation(1, 1);
+		
+		fContextSelectorTable.setLayoutData(data);
+		fContextSelectorShell.setSize(300, height);
 		
 	
fContextSelectorShell.setBackground(control.getDisplay().getSystemColor(SWT.COLOR_BLACK));
 		

Thanks for the patch. I fixed the bug differently though: the table defines the
size via layout so that we don't need to use setSize.

*** Bug 77616 has been marked as a duplicate of this bug. ***
*** Bug 83918 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>zrh plugin-export I20040310.from20040312_1045

- set caret into a method invocation of an overloaded method
- Edit &gt; Parameter Hints
-&gt; the popup shell is resizable but the table doesn't resize, revealing black
background
*** Bug 60066 has been marked as a duplicate of this bug. ***
Patch for: (org.eclipse.jface.text)
org.eclipse.jface.text.contentassist.ContextInformationPopup

Changed layout code to be like the CompletionProposalPopup (minus remembering
size).  No longer sets a minimum size on te table's layout, but creates the
shell with the minimum size and allows children to grow/shrink as needed.

Index: ContextInformationPopup.java
===================================================================
RCS file:
/home/eclipse/org.eclipse.jface.text/src/org/eclipse/jface/text/contentassist/ContextInformationPopup.java,v
retrieving revision 1.22
diff -u -r1.22 ContextInformationPopup.java
--- ContextInformationPopup.java	21 May 2004 09:02:35 -0000	1.22
+++ ContextInformationPopup.java	12 Jun 2004 23:30:01 -0000
@@ -25,6 +25,8 @@
 import org.eclipse.swt.events.VerifyEvent;
 import org.eclipse.swt.graphics.Color;
 import org.eclipse.swt.graphics.Point;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Control;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
@@ -476,10 +478,19 @@
 		fContextSelectorShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE);
 		fContextSelectorTable= new Table(fContextSelectorShell, SWT.H_SCROLL |
SWT.V_SCROLL);
 
+		fContextSelectorTable.setLocation(0, 0);
+		
+		GridLayout layout= new GridLayout();
+		layout.marginWidth= 0;
+		layout.marginHeight= 0;     
+		fContextSelectorShell.setLayout(layout);       
+		
+		GridData data= new GridData(GridData.FILL_BOTH);
+		
 		int height= fContextSelectorTable.getItemHeight() * 10;
-		fContextSelectorShell.setSize(302, height + 2);
-		fContextSelectorTable.setSize(300, height);
-		fContextSelectorTable.setLocation(1, 1);
+		
+		fContextSelectorTable.setLayoutData(data);
+		fContextSelectorShell.setSize(300, height);
 		
 	
fContextSelectorShell.setBackground(control.getDisplay().getSystemColor(SWT.COLOR_BLACK));
 		

Thanks for the patch. I fixed the bug differently though: the table defines the
size via layout so that we don't need to use setSize.

*** Bug 77616 has been marked as a duplicate of this bug. ***
*** Bug 83918 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54944" />
    <CreationDate amount="2004-03-16 04:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Class Wizard should not allow non source folders</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When choosing a sourcefolder in the new class wizard it is possible to
doubleclick a project (not only sourcefolders of the project)
We want to allow the creation of new types at all locations:
Also in non java projects and non-source folders: The wizard gives a warning
when doing that.</WithStack>
    <WithOutStack>When choosing a sourcefolder in the new class wizard it is possible to
doubleclick a project (not only sourcefolders of the project)
We want to allow the creation of new types at all locations:
Also in non java projects and non-source folders: The wizard gives a warning
when doing that.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54945" />
    <CreationDate amount="2004-03-16 04:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>content assist dropdown has no selection in KDE 3.2 / Mandrake 10.0</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am running Linux Mandrake 10.0, kernel 2.6.3

using KDE 3.2 
I experience a bug in content assist: after pressing ctrl-space in a java editor,
the dropdown list opens but has no selection on the first line (see screenshot)
I neet to press the TAB key to get the selection ! 
note that I press say arrow-down twice and then tab, the selection will show on
the third element of the dropdown list

using GNOME 2.4 - it works as expected - see screenshots
Created attachment 8593
screenshot for KDE - notice missing selection
Created attachment 8594
gnome snapshot - selection is correctly shown
Got Help from the newsgroups:

&gt; Tom Eicher wrote:
&gt;
&gt;&gt; The content assist list is rendedered using the platform defaults - It seems
that in your case, a selected list element that does not have focus is not
distiguishable.
&gt;&gt;
&gt;&gt; You should be able to change the kde colors for this.

OK, the culprit was a setting in the KDE set colors panel
that was checked by default - apply colors to non-KDE applications.
now that I unchecked it - the eclipse workbench window border has the
decorations painted like all other apps,
but the widgets internally (eg editor borders etc) are painted in a different
color - and the content assist dropdown is - surprise ;- rendered using the same
colors as in gnome (GTK).</WithStack>
    <WithOutStack>I am running Linux Mandrake 10.0, kernel 2.6.3

using KDE 3.2 
I experience a bug in content assist: after pressing ctrl-space in a java editor,
the dropdown list opens but has no selection on the first line (see screenshot)
I neet to press the TAB key to get the selection ! 
note that I press say arrow-down twice and then tab, the selection will show on
the third element of the dropdown list

using GNOME 2.4 - it works as expected - see screenshots
Created attachment 8593
screenshot for KDE - notice missing selection
Created attachment 8594
gnome snapshot - selection is correctly shown
Got Help from the newsgroups:

&gt; Tom Eicher wrote:
&gt;
&gt;&gt; The content assist list is rendedered using the platform defaults - It seems
that in your case, a selected list element that does not have focus is not
distiguishable.
&gt;&gt;
&gt;&gt; You should be able to change the kde colors for this.

OK, the culprit was a setting in the KDE set colors panel
that was checked by default - apply colors to non-KDE applications.
now that I unchecked it - the eclipse workbench window border has the
decorations painted like all other apps,
but the widgets internally (eg editor borders etc) are painted in a different
color - and the content assist dropdown is - surprise ;- rendered using the same
colors as in gnome (GTK).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54946" />
    <CreationDate amount="2004-03-16 04:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Contextual launch contribution should not set adaptable=true</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>(1) We could contribute the action of "Object". Then we add actions to the</Line>
          <Line>menu "Run..." and "Debug..." (and "Profile..."). This means the menu is never</Line>
          <Line>empty and always provides a shortcut to the launch dialog.</Line>
          <Line />
          <Line>(2) contribute the action for "IAdapatble". That way it's only appears on</Line>
          <Line>adaptables, and we don't care what kind of adaptable they are (resource, etc).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The contextual launch contribution sets adaptable=true (see below).
This means the selection is always converted to an IResource. This results in 
a loss of information, since then the enablement can only be expressed in 
terms of IResource and not in terms of the original type.

For exampe, the JUnit contextual launch needs to support launching an 
individual IMethod.

It should be up to the enablement expression to do the adaptation.  

   &lt;extension
         point="org.eclipse.ui.popupMenus"&gt;
      &lt;objectContribution
            objectClass="org.eclipse.core.resources.IResource"
            adaptable="true"
            id="org.eclipse.debug.ui.contextualLaunch"&gt;
        &lt;action
               label="%LaunchMenu.label"
               style="pulldown"
               
class="org.eclipse.debug.internal.ui.actions.ContextualLaunchObjectActionDelega
te"
               menubarPath="additions"
               enablesFor="1"
               id="org.eclipse.debug.ui.contextualLaunch.submenu"&gt;
         &lt;/action&gt;
      &lt;/objectContribution&gt;
	&lt;/extension&gt;
If we don't set adaptable="true", then the selection isn't adapted to IResource and the objectContribution 
fails.
we want to be able to run any kind of Object and not only IResources. 
Therefore the object contribution should target Object and not set adaptable 
to true:
   &lt;extension
         point="org.eclipse.ui.popupMenus"&gt;
      &lt;objectContribution
            objectClass="java.lang.Object"
            id="org.eclipse.debug.ui.contextualLaunch"&gt;

In general targetting Object is a bad thing to do, but given that we want to 
be able to run any kind of object we have no other choice.
But wouldn't that put an empty Run-&gt; menu item on everything in the workbench? Breakpoints, stack 
frames, maps, tires, compiler errors, etc.?
What if we contributed the menu item to a new interface, ILaunchable?  With adaptable="true", that 
would let you put the Run menu whereever you wanted it by providing an ILaunchable adapter, right?
yep - contributing to Object is a non-starter.

alternatives...

* use IActionFilter and define a "launchable" attribute. The issue with action 
filter is that it is adapter based and you can only have one adapter 
registered per type (debugger already registers an action filter on IMethod). 
This will also be problematic for IResources.

* your ILaunchable idea, which is good, but the issue is that the object 
contribution mechanism only supports adapting to IResource. You cannot express 
that you want to adapt to a particular adapter interface.

The new XML expression language support to specify the adapter you want to 
adapt to. It is not committed whether the new expression language will be 
supported for object contributions for 3.0. 

Given these constraints we should consider decreasing the priority. The JUnit 
scenario isn't that critical. Darin are there other scenarios e.g. XSL 
debugging for which the IResource constraint is too limiting?
"* your ILaunchable idea, which is good, but the issue is that the object 
contribution mechanism only supports adapting to IResource. You cannot express 
that you want to adapt to a particular adapter interface."

Ouch! If I contribute something to ILaunchable and then say adaptable="true" isn't it obvious that I want 
to adapt to ILaunchable? Is there a good reason that it only adapts to IResource (something to do with 
plug-in loading?) or is it just an oversight?
For 2.* this was a pragmatic decision since adapting to IResource was the most 
common case. In addition, since AdapterFactories were only defined in code you 
have the plug-in loading problem. The plug-in loading problem has been solved 
in 3.0. You can now specify the supported adapters of an AdapterFactory in the 
plugin.xml (see below). This enabled the new expression language to generalize 
the adaptable support.

   &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
	&lt;factory 
            class="org.eclipse.jdt.internal.ui.JavaElementAdapterFactory" 
            adaptableType="org.eclipse.jdt.core.IJavaElement"&gt;
            &lt;adapter type="org.eclipse.core.resources.IResource"/&gt;
            &lt;adapter type="org.eclipse.core.resources.IProject"/&gt;
        &lt;/factory&gt;
   &lt;/extension&gt;     	

Two suggestions:

(1) We could contribute the action of "Object". Then we add actions to the 
menu "Run..." and "Debug..." (and "Profile..."). This means the menu is never 
empty and always provides a shortcut to the launch dialog.

(2) contribute the action for "IAdapatble". That way it's only appears on 
adaptables, and we don't care what kind of adaptable they are (resource, etc).

Resources are too limiting for the case of mains in jars as well.
It looks like we can get the expression language for object contributions in 
(final decision by the end of this week).

With this in place we can implements Darin's proposal and improve item 2).

I'm also in favor of item 1) as long as there is no profile... menu when there 
is no profile registered (this should already be possible with the existing 
mechanisms)
Bug 59963 covers the required object contribution support.
*** Bug 54764 has been marked as a duplicate of this bug. ***
Here is one complication...
clients have already implemented contextual launches and they are expecting 
adapted selections. We will break them by this change. We should find a way to 
offer both adapted and raw selections to the contributors. 
*** Bug 50922 has been marked as a duplicate of this bug. ***
To wrap up, we are proposing to do the following:

* Contributing the context launch action to "Object" is too general, and 
to "IResource" is too specific. Thus, we want to introduce an "ILanuchable" 
interface, and contribute the action to those that adapt to "ILaunchable". 
Clients would need to contribute an ILanuchable adapter for their launchables 
using the org.eclipse.core.runtime.adapters extension point. It is possible 
that more than one ILaunchable adapter is contributed for an object, but that 
is OK since the interface is simply to tag things as being launchable (besides 
that, it has no function).
* We split the context launch menu into a submenu for each launch mode 
(i.e. "Run &gt;", "Debug &gt;", "Profile &gt;"). We provide a public implementation of 
a contextual launch action that others may subclass (to specify alternate 
modes), and we provide the actions for run, debug, and profile. Ideally, the 
actions only appear when something is launchable in that mode (but if that is 
too expensive, then we will have Run &amp; Debug appear always, and Profile only 
appears if the Profile action set is on).

Dirk &amp; Erich should comment on the proposal before we proceed.
The proposal makes sense. As a consequence the run/debug will show up for all 
methods/types (launching/junit will add adapters for IMethod and IType).

One thing to investigate is whether the contribution of the Run action can be 
improved once the Run action is loaded, i.e., it is disabled programmatically 
when there is no applicable short cut and as a consequence the action should 
not show in the menu.

Fixed. Changes in:

org.eclipse.debug.ui

* org.eclipse.debug.internal.ui.ResourceExtender
* ActionMessages.properties
* LaunchConfigurationManager
* LaunchShortcutExtension
* LaunchConfigurationMessages.properties
* plugin.xml
* plugin.properties

Added:

* DebugContextualLaunchAction.java
* LaunchablePropertyTester.java
* ContextualLaunchAction.java
* ILaunchable.java
* ProfileContextualLaunchAction.java
* RunContextualLaunchAction.java

org.eclipse.jdt.debug.ui

* JavaApplicationLaunchShortcut.java
* AppletLaunchConfigurationUtils.java
* ResourceExtender.java
* plugin.properties

org.eclipse.ant.ui

* plugin.xml
* plugin.properties

(Will create patch for JUnit)
* plugin.xml
(I released the fix to junt too)

Changes in plugin.xml &amp; plugin.propeties &amp; JavaTypeExtender

Please verify, Jared.
I cleaned up the code a little - I had added an "instanceof" property tester, 
but this is, of course, already supported by the expression language, so I 
removed it. As well, I added support for launching java elements from the 
generic navigator.
Verified. I used this support to provide context menu launching for targets in the Ant editor outline 
today. It was quick and easy.</WithStack>
    <WithOutStack>The contextual launch contribution sets adaptable=true (see below).
This means the selection is always converted to an IResource. This results in 
a loss of information, since then the enablement can only be expressed in 
terms of IResource and not in terms of the original type.

For exampe, the JUnit contextual launch needs to support launching an 
individual IMethod.

It should be up to the enablement expression to do the adaptation.  

   &lt;extension
         point="org.eclipse.ui.popupMenus"&gt;
      &lt;objectContribution
            objectClass="org.eclipse.core.resources.IResource"
            adaptable="true"
            id="org.eclipse.debug.ui.contextualLaunch"&gt;
        &lt;action
               label="%LaunchMenu.label"
               style="pulldown"
               
class="org.eclipse.debug.internal.ui.actions.ContextualLaunchObjectActionDelega
te"
               menubarPath="additions"
               enablesFor="1"
               id="org.eclipse.debug.ui.contextualLaunch.submenu"&gt;
         &lt;/action&gt;
      &lt;/objectContribution&gt;
	&lt;/extension&gt;
If we don't set adaptable="true", then the selection isn't adapted to IResource and the objectContribution 
fails.
we want to be able to run any kind of Object and not only IResources. 
Therefore the object contribution should target Object and not set adaptable 
to true:
   &lt;extension
         point="org.eclipse.ui.popupMenus"&gt;
      &lt;objectContribution
            objectClass="java.lang.Object"
            id="org.eclipse.debug.ui.contextualLaunch"&gt;

In general targetting Object is a bad thing to do, but given that we want to 
be able to run any kind of object we have no other choice.
But wouldn't that put an empty Run-&gt; menu item on everything in the workbench? Breakpoints, stack 
frames, maps, tires, compiler errors, etc.?
What if we contributed the menu item to a new interface, ILaunchable?  With adaptable="true", that 
would let you put the Run menu whereever you wanted it by providing an ILaunchable adapter, right?
yep - contributing to Object is a non-starter.

alternatives...

* use IActionFilter and define a "launchable" attribute. The issue with action 
filter is that it is adapter based and you can only have one adapter 
registered per type (debugger already registers an action filter on IMethod). 
This will also be problematic for IResources.

* your ILaunchable idea, which is good, but the issue is that the object 
contribution mechanism only supports adapting to IResource. You cannot express 
that you want to adapt to a particular adapter interface.

The new XML expression language support to specify the adapter you want to 
adapt to. It is not committed whether the new expression language will be 
supported for object contributions for 3.0. 

Given these constraints we should consider decreasing the priority. The JUnit 
scenario isn't that critical. Darin are there other scenarios e.g. XSL 
debugging for which the IResource constraint is too limiting?
"* your ILaunchable idea, which is good, but the issue is that the object 
contribution mechanism only supports adapting to IResource. You cannot express 
that you want to adapt to a particular adapter interface."

Ouch! If I contribute something to ILaunchable and then say adaptable="true" isn't it obvious that I want 
to adapt to ILaunchable? Is there a good reason that it only adapts to IResource (something to do with 
plug-in loading?) or is it just an oversight?
For 2.* this was a pragmatic decision since adapting to IResource was the most 
common case. In addition, since AdapterFactories were only defined in code you 
have the plug-in loading problem. The plug-in loading problem has been solved 
in 3.0. You can now specify the supported adapters of an AdapterFactory in the 
plugin.xml (see below). This enabled the new expression language to generalize 
the adaptable support.

   &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
	&lt;factory 
            class="org.eclipse.jdt.internal.ui.JavaElementAdapterFactory" 
            adaptableType="org.eclipse.jdt.core.IJavaElement"&gt;
            &lt;adapter type="org.eclipse.core.resources.IResource"/&gt;
            &lt;adapter type="org.eclipse.core.resources.IProject"/&gt;
        &lt;/factory&gt;
   &lt;/extension&gt;     	

Two suggestions:

(1) We could contribute the action of "Object". Then we add actions to the 
menu "Run..." and "Debug..." (and "Profile..."). This means the menu is never 
empty and always provides a shortcut to the launch dialog.

(2) contribute the action for "IAdapatble". That way it's only appears on 
adaptables, and we don't care what kind of adaptable they are (resource, etc).

Resources are too limiting for the case of mains in jars as well.
It looks like we can get the expression language for object contributions in 
(final decision by the end of this week).

With this in place we can implements Darin's proposal and improve item 2).

I'm also in favor of item 1) as long as there is no profile... menu when there 
is no profile registered (this should already be possible with the existing 
mechanisms)
Bug 59963 covers the required object contribution support.
*** Bug 54764 has been marked as a duplicate of this bug. ***
Here is one complication...
clients have already implemented contextual launches and they are expecting 
adapted selections. We will break them by this change. We should find a way to 
offer both adapted and raw selections to the contributors. 
*** Bug 50922 has been marked as a duplicate of this bug. ***
To wrap up, we are proposing to do the following:

* Contributing the context launch action to "Object" is too general, and 
to "IResource" is too specific. Thus, we want to introduce an "ILanuchable" 
interface, and contribute the action to those that adapt to "ILaunchable". 
Clients would need to contribute an ILanuchable adapter for their launchables 
using the org.eclipse.core.runtime.adapters extension point. It is possible 
that more than one ILaunchable adapter is contributed for an object, but that 
is OK since the interface is simply to tag things as being launchable (besides 
that, it has no function).
* We split the context launch menu into a submenu for each launch mode 
(i.e. "Run &gt;", "Debug &gt;", "Profile &gt;"). We provide a public implementation of 
a contextual launch action that others may subclass (to specify alternate 
modes), and we provide the actions for run, debug, and profile. Ideally, the 
actions only appear when something is launchable in that mode (but if that is 
too expensive, then we will have Run &amp; Debug appear always, and Profile only 
appears if the Profile action set is on).

Dirk &amp; Erich should comment on the proposal before we proceed.
The proposal makes sense. As a consequence the run/debug will show up for all 
methods/types (launching/junit will add adapters for IMethod and IType).

One thing to investigate is whether the contribution of the Run action can be 
improved once the Run action is loaded, i.e., it is disabled programmatically 
when there is no applicable short cut and as a consequence the action should 
not show in the menu.

Fixed. Changes in:

org.eclipse.debug.ui

* org.eclipse.debug.internal.ui.ResourceExtender
* ActionMessages.properties
* LaunchConfigurationManager
* LaunchShortcutExtension
* LaunchConfigurationMessages.properties
* plugin.xml
* plugin.properties

Added:

* DebugContextualLaunchAction.java
* LaunchablePropertyTester.java
* ContextualLaunchAction.java
* ILaunchable.java
* ProfileContextualLaunchAction.java
* RunContextualLaunchAction.java

org.eclipse.jdt.debug.ui

* JavaApplicationLaunchShortcut.java
* AppletLaunchConfigurationUtils.java
* ResourceExtender.java
* plugin.properties

org.eclipse.ant.ui

* plugin.xml
* plugin.properties

(Will create patch for JUnit)
* plugin.xml
(I released the fix to junt too)

Changes in plugin.xml &amp; plugin.propeties &amp; JavaTypeExtender

Please verify, Jared.
I cleaned up the code a little - I had added an "instanceof" property tester, 
but this is, of course, already supported by the expression language, so I 
removed it. As well, I added support for launching java elements from the 
generic navigator.
Verified. I used this support to provide context menu launching for targets in the Ant editor outline 
today. It was quick and easy.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54947" />
    <CreationDate amount="2004-03-16 04:40:00 -0500" />
    <DupId amount="48056" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>extract method: convert continue to return when extracting loop body [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="286" end="409" />
        <code>for (int i= 0; i &lt; 10; i++) {
    if (condition1)
        continue;
    if (condition2)
        continue;

    doStuff();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="465" end="512" />
        <code>for (int i= 0; i &lt; 10; i++) {
    loopBody();
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="513" end="521" />
        <code>// ...</code>
      </source_code>
      <source_code type="functiondef">
        <location start="522" end="637" />
        <code>private void loopBody() {
    if (condition1)
        return;
    if (condition2)
        return;

    doStuff();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20040310

I often want to extract a loop body to its own method. If I have "continue"
statements in the loop body, the refactoring will not be allowed. Would
converting them to "return" statements be semantically preserving (if the entire
loop body is extracted, anyway)?

Exp:

&lt;pre&gt;
for (int i= 0; i &lt; 10; i++) {
    if (condition1)
        continue;
    if (condition2)
        continue;

    doStuff();
}
&lt;/pre&gt;

Extracting the loop body would produce:

&lt;pre&gt;
for (int i= 0; i &lt; 10; i++) {
    loopBody();
}

// ...

private void loopBody() {
    if (condition1)
        return;
    if (condition2)
        return;

    doStuff();
}

&lt;/pre&gt;
wrong component
 

*** This bug has been marked as a duplicate of 48056 ***</WithStack>
    <WithOutStack>I20040310

I often want to extract a loop body to its own method. If I have "continue"
statements in the loop body, the refactoring will not be allowed. Would
converting them to "return" statements be semantically preserving (if the entire
loop body is extracted, anyway)?

Exp:

&lt;pre&gt;
for (int i= 0; i &lt; 10; i++) {
    if (condition1)
        continue;
    if (condition2)
        continue;

    doStuff();
}
&lt;/pre&gt;

Extracting the loop body would produce:

&lt;pre&gt;
for (int i= 0; i &lt; 10; i++) {
    loopBody();
}

// ...

private void loopBody() {
    if (condition1)
        return;
    if (condition2)
        return;

    doStuff();
}

&lt;/pre&gt;
wrong component
 

*** This bug has been marked as a duplicate of 48056 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54948" />
    <CreationDate amount="2004-03-16 04:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search for references to class reports constructor calls but not javadoc references</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="multicomment">
        <location start="241" end="265" />
        <code>/**
 * @see AA#AA()
 */</code>
      </source_code>
      <source_code type="class">
        <location start="266" end="308" />
        <code>public class AA{
	AA( ){
		new AA();
	};
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="531" end="604" />
        <code>class reference. In fact this search does not found the "AA" of AA() {..}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="733" end="762" />
        <code>/**
 * @see AA#AA(String)
 */</code>
      </source_code>
      <source_code type="class">
        <location start="763" end="820" />
        <code>public class AA{
	AA(String str){
		new AA("test");
	};
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1491" end="1549" />
        <code>&gt; In fact this search does not found the "AA" of AA() {..}</code>
      </source_code>
      <source_code type="class">
        <location start="2656" end="2723" />
        <code>&gt; public class AA{
&gt; 	AA(String str){
&gt; 		new AA("test");
&gt; 	};
&gt; }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20040310

Search for references to class AA. In "new AA()", "AA" is found.
In "@see AA#AA()", only the class reference (first "AA") is found, but not the
constructor (second "AA").

Either both constructors should be found or none of them.

/**
 * @see AA#AA()
 */
public class AA{
	AA( ){
		new AA();
	};
}
jdt-ui reminder: Disabled failing (new) test RenameTypeTests#test50().
The second "AA" in @see AA#AA() is not an instance of class AA, it's a 
constructor reference. So it's normal that it is not found while searching to 
class reference. In fact this search does not found the "AA" of AA() {..} for 
the same reason and it does not hurt you...
If I write this example in different manner, I'm sure it will be more obvious:
/**
 * @see AA#AA(String)
 */
public class AA{
	AA(String str){
		new AA("test");
	};
}

Isn't it?

Reopen after having talked about this with Philippe: the constructor reference
should include Type binding instead of constructor binding.
So, it should match the type reference...
Olivier, Philippe told me that you were investigating a similar problem.
Perhaps it is a duplicate ?

*** Bug 63044 has been marked as a duplicate of this bug. ***
The other PR is bug 62605.
*** Bug 62650 has been marked as a duplicate of this bug. ***
Forget all duplicate and reopening of this bug. I have mixed DOM and Compiler
AST nodes bindings...
So, resolved as invalid again as comment 2 arguments were definetely correct.

This bug causes bug 148804.

From comment 2:
&gt; In fact this search does not found the "AA" of AA() {..} for 
&gt; the same reason and it does not hurt you...

It does hurt us, but not as much as the missing constructor references in javadoc. We already rename constructors manually, but doing a second search just to find constructor references in javadocs would be too much.
(In reply to comment #9)
&gt; This bug causes bug 148804.
&gt; 
&gt; It does hurt us, but not as much as the missing constructor references in
&gt; javadoc. We already rename constructors manually, but doing a second search
&gt; just to find constructor references in javadocs would be too much.
&gt; 
I'm really interesting to know how do you rename constructor references in code?
&gt; I'm really interesting to know how do you rename constructor references in
&gt; code?

Super-easy: we get them from the search engine. Every search for references to a class also reports the names in constructor invocations.

Just the names in constructor declarations and those in javadoc references to constructors are missing. The former are cheap to update manually; the latter would require another search.
(In reply to comment #2)
&gt; /**
&gt;  * @see AA#AA(String)
&gt;  */
&gt; public class AA{
&gt; 	AA(String str){
&gt; 		new AA("test");
&gt; 	};
&gt; }

So why does a search for references to type AA find the reference to the constructor in 'new AA("test")', but not the reference to the same constructor in '#AA(String)'?

Together with comment 9, I think this should be enough justification to reopen and finally fix this bug.</WithStack>
    <WithOutStack>I20040310

Search for references to class AA. In "new AA()", "AA" is found.
In "@see AA#AA()", only the class reference (first "AA") is found, but not the
constructor (second "AA").

Either both constructors should be found or none of them.

/**
 * @see AA#AA()
 */
public class AA{
	AA( ){
		new AA();
	};
}
jdt-ui reminder: Disabled failing (new) test RenameTypeTests#test50().
The second "AA" in @see AA#AA() is not an instance of class AA, it's a 
constructor reference. So it's normal that it is not found while searching to 
class reference. In fact this search does not found the "AA" of AA() {..} for 
the same reason and it does not hurt you...
If I write this example in different manner, I'm sure it will be more obvious:
/**
 * @see AA#AA(String)
 */
public class AA{
	AA(String str){
		new AA("test");
	};
}

Isn't it?

Reopen after having talked about this with Philippe: the constructor reference
should include Type binding instead of constructor binding.
So, it should match the type reference...
Olivier, Philippe told me that you were investigating a similar problem.
Perhaps it is a duplicate ?

*** Bug 63044 has been marked as a duplicate of this bug. ***
The other PR is bug 62605.
*** Bug 62650 has been marked as a duplicate of this bug. ***
Forget all duplicate and reopening of this bug. I have mixed DOM and Compiler
AST nodes bindings...
So, resolved as invalid again as comment 2 arguments were definetely correct.

This bug causes bug 148804.

From comment 2:
&gt; In fact this search does not found the "AA" of AA() {..} for 
&gt; the same reason and it does not hurt you...

It does hurt us, but not as much as the missing constructor references in javadoc. We already rename constructors manually, but doing a second search just to find constructor references in javadocs would be too much.
(In reply to comment #9)
&gt; This bug causes bug 148804.
&gt; 
&gt; It does hurt us, but not as much as the missing constructor references in
&gt; javadoc. We already rename constructors manually, but doing a second search
&gt; just to find constructor references in javadocs would be too much.
&gt; 
I'm really interesting to know how do you rename constructor references in code?
&gt; I'm really interesting to know how do you rename constructor references in
&gt; code?

Super-easy: we get them from the search engine. Every search for references to a class also reports the names in constructor invocations.

Just the names in constructor declarations and those in javadoc references to constructors are missing. The former are cheap to update manually; the latter would require another search.
(In reply to comment #2)
&gt; /**
&gt;  * @see AA#AA(String)
&gt;  */
&gt; public class AA{
&gt; 	AA(String str){
&gt; 		new AA("test");
&gt; 	};
&gt; }

So why does a search for references to type AA find the reference to the constructor in 'new AA("test")', but not the reference to the same constructor in '#AA(String)'?

Together with comment 9, I think this should be enough justification to reopen and finally fix this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54949" />
    <CreationDate amount="2004-03-16 05:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>cannot start a plain java application from a plug-in project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="153" end="270" />
        <code>public class FooBaz {
    public static void main(String[] args) {
        System.out.println("hello world");
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am using M7 on linux Mandrake 10.0 (2.6.3) and running Sun's JDK 1.4.2._03

If I have a plug-in project and inside that I place a plain java app like

public class FooBaz {
    public static void main(String[] args) {
        System.out.println("hello world");
    }
}

It does not start when run as a java application.
If I am on Windows, it runs (and even prints "hello world" on the console ;-)
So it's a linux-specifig bug I'd say!
I now tried the latest integration build and it's fixed there.</WithStack>
    <WithOutStack>I am using M7 on linux Mandrake 10.0 (2.6.3) and running Sun's JDK 1.4.2._03

If I have a plug-in project and inside that I place a plain java app like

public class FooBaz {
    public static void main(String[] args) {
        System.out.println("hello world");
    }
}

It does not start when run as a java application.
If I am on Windows, it runs (and even prints "hello world" on the console ;-)
So it's a linux-specifig bug I'd say!
I now tried the latest integration build and it's fixed there.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54950" />
    <CreationDate amount="2004-03-16 05:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Revisit message handling implementation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>(1) Whether we can continue to generate each message incrementally</Line>
          <Line>but easily gather all associated messsages (deow, conflicts).</Line>
          <Line>to facilitate message-handling strategies that group related</Line>
          <Line>messages.  [defer until needed by client/strategy]</Line>
          <Line />
          <Line>(2) Whether we should delegate to the smarter types for their</Line>
          <Line>command-line renderings or keep using a renderer. [defer until</Line>
          <Line>need renderer-less rendering]</Line>
          <Line>Raised so that we don't lose this post 1.2...</Line>
          <Line>no immediate plans to change the message handling implementation, but these comments remain valid</Line>
          <Line>for consideration if we have to go in there again in the future.</Line>
          <Line>LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- error line and defining declare error or warning</Line>
          <Line>- one of many conflicting member declarations</Line>
          <Line>- (Do any xlint warnings have different structures?)</Line>
          <Line>- info from weaver?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>(From Wes...)

Since you're looking at this now, a step back might help,
for now or later...

It seems like IMessage is not perfect for handling some kinds
of messages we have:

- error line and defining declare error or warning
- one of many conflicting member declarations
- (Do any xlint warnings have different structures?)
- info from weaver?

We're augmenting it by kind (WEAVER_INFO?) and appendage
(details, extra source location...), so it is starting to smell.
(Details appears vestigial.  Extra source location has no context
for why it is being appended.)

One way to work around this now is instead to have different
IMessage implementations (e.g., DeclaredMessage, XLintMessage,
ConflictMessage, subclassing Message or EclipseMessage(?)).
Further, we might want an ISourceLocation implementation
"BinaryLocation" for sources in jar files.  (It might even
take on responsibility for pulling associated text from
a source path or src.zip.)

Doing this means that clients of IMessage and ISourceLocation
continue to work, but clients that know about BinaryLocation
and DeclareMessage, etc. can tailor accordingly.  This change
is nice b/c we don't change anything about how we handle messages
per se, and changing to subtypes should make sense in the context
they are being generated.  We can even have a "normal" message
subtype and audit away direct (non-testing) uses of Message.

Two unanswered and deferred questions:

(1) Whether we can continue to generate each message incrementally
but easily gather all associated messsages (deow, conflicts).
to facilitate message-handling strategies that group related
messages.  [defer until needed by client/strategy]

(2) Whether we should delegate to the smarter types for their
command-line renderings or keep using a renderer. [defer until
need renderer-less rendering]
Raised so that we don't lose this post 1.2...
no immediate plans to change the message handling implementation, but these comments remain valid 
for consideration if we have to go in there again in the future.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithStack>
    <WithOutStack>(From Wes...)

Since you're looking at this now, a step back might help,
for now or later...

It seems like IMessage is not perfect for handling some kinds
of messages we have:

- error line and defining declare error or warning
- one of many conflicting member declarations
- (Do any xlint warnings have different structures?)
- info from weaver?

We're augmenting it by kind (WEAVER_INFO?) and appendage
(details, extra source location...), so it is starting to smell.
(Details appears vestigial.  Extra source location has no context
for why it is being appended.)

One way to work around this now is instead to have different
IMessage implementations (e.g., DeclaredMessage, XLintMessage,
ConflictMessage, subclassing Message or EclipseMessage(?)).
Further, we might want an ISourceLocation implementation
"BinaryLocation" for sources in jar files.  (It might even
take on responsibility for pulling associated text from
a source path or src.zip.)

Doing this means that clients of IMessage and ISourceLocation
continue to work, but clients that know about BinaryLocation
and DeclareMessage, etc. can tailor accordingly.  This change
is nice b/c we don't change anything about how we handle messages
per se, and changing to subtypes should make sense in the context
they are being generated.  We can even have a "normal" message
subtype and audit away direct (non-testing) uses of Message.

Two unanswered and deferred questions:

(1) Whether we can continue to generate each message incrementally
but easily gather all associated messsages (deow, conflicts).
to facilitate message-handling strategies that group related
messages.  [defer until needed by client/strategy]

(2) Whether we should delegate to the smarter types for their
command-line renderings or keep using a renderer. [defer until
need renderer-less rendering]
Raised so that we don't lose this post 1.2...
no immediate plans to change the message handling implementation, but these comments remain valid 
for consideration if we have to go in there again in the future.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54951" />
    <CreationDate amount="2004-03-16 05:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[search] rename "Java Search Job"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Job description is shown to the user and Jobs are an implementation 
detail. Therefore change the Job description to Searching Java
Changed job description (i.e. query labels) to describe the query, for example
"Search for References to "Test" in Workspace".</WithStack>
    <WithOutStack>The Job description is shown to the user and Jobs are an implementation 
detail. Therefore change the Job description to Searching Java
Changed job description (i.e. query labels) to describe the query, for example
"Search for References to "Test" in Workspace".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54952" />
    <CreationDate amount="2004-03-16 05:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] Show fully quailfied name of current edit-module, in titlebar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When I use the Eclipse IDE for my Java development I strongly miss an easy way
to see the fully qualified name of which Java class that I have open in my
current edit-window. For instance in JBuilder, this is always shown in the
titlebar. Eclipse shows just the short classname it self in the titlebar. Can
you please add an option to display the fully qualified class name in the titlebar?
Moving Dougs bugs
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
(In reply to comment #0)
&gt; Eclipse shows just the short classname it self in the titlebar. Can
&gt; you please add an option to display the fully qualified class name in the titlebar?

We currently show the path to the file relative from the workspace. Per Java package specifications, this would include the package name, such as testProject/src/org/eclipse/ui/Test.java. Is this sufficient for you, Leif?</WithStack>
    <WithOutStack>When I use the Eclipse IDE for my Java development I strongly miss an easy way
to see the fully qualified name of which Java class that I have open in my
current edit-window. For instance in JBuilder, this is always shown in the
titlebar. Eclipse shows just the short classname it self in the titlebar. Can
you please add an option to display the fully qualified class name in the titlebar?
Moving Dougs bugs
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
(In reply to comment #0)
&gt; Eclipse shows just the short classname it self in the titlebar. Can
&gt; you please add an option to display the fully qualified class name in the titlebar?

We currently show the path to the file relative from the workspace. Per Java package specifications, this would include the package name, such as testProject/src/org/eclipse/ui/Test.java. Is this sufficient for you, Leif?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54953" />
    <CreationDate amount="2004-03-16 05:16:00 -0500" />
    <DupId amount="21968" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] Make support for vertical tabs the Editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Eclipse IDE can currently display editor tabs only horizontalle. This is OK
as long as you don't open more than a very few modules at a time, but if you
open many (typically during maintenance editing, which often needs changes in a
lot of source files) modules this is not good. The name of each tab gets
shortened so you can't actually see which class is in each tab. If the user
could configure Eclipse to short the tabs vertically (e.g. like in JBuilder)
then it will be easier both to see the name of all open editor files, but also
to work with many concurrent open source files. In addition; many developers
uses widescreen monitors, which workspace is easier to utilize if the tabs could
be displayed vertically.
fyi.. this bug is related to (i.e. could be solved by) the work in bug 53673.
Is this a dup of bug 58590 (or vice-versa)?
*** Bug 58590 has been marked as a duplicate of this bug. ***
 

*** This bug has been marked as a duplicate of 21968 ***</WithStack>
    <WithOutStack>The Eclipse IDE can currently display editor tabs only horizontalle. This is OK
as long as you don't open more than a very few modules at a time, but if you
open many (typically during maintenance editing, which often needs changes in a
lot of source files) modules this is not good. The name of each tab gets
shortened so you can't actually see which class is in each tab. If the user
could configure Eclipse to short the tabs vertically (e.g. like in JBuilder)
then it will be easier both to see the name of all open editor files, but also
to work with many concurrent open source files. In addition; many developers
uses widescreen monitors, which workspace is easier to utilize if the tabs could
be displayed vertically.
fyi.. this bug is related to (i.e. could be solved by) the work in bug 53673.
Is this a dup of bug 58590 (or vice-versa)?
*** Bug 58590 has been marked as a duplicate of this bug. ***
 

*** This bug has been marked as a duplicate of 21968 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54954" />
    <CreationDate amount="2004-03-16 05:24:00 -0500" />
    <DupId amount="55615" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Scrapbook Editor: Each typed character while synchronizing gives one blocked job dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. start self hosting workspace</Line>
          <Line>2. start to synchronize your full workspace with CVS</Line>
          <Line>3. while synchronizing, select a Java project</Line>
          <Line>4. create a new scrapbook page</Line>
          <Line>5. start typing (lots of chars) into the snippet editor</Line>
          <Line>==&gt; I got a blocked job dialog (see picture) for each key stroke.</Line>
          <Line>Created attachment 8598</Line>
          <Line>Picture of the dialog</Line>
          <Line>Dani - do you have any clue on this one. I noticed the Java editor does not</Line>
          <Line>cause the same problem, but all we do is subclass the abstract text editor?</Line>
          <Line>I can look closer on Monday. As as starter: check your calls to</Line>
          <Line>IFileBuffer.validateState and whether you use different scheduling rules.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20040310 + code from HEAD (incl. Debug)

1. start self hosting workspace
2. start to synchronize your full workspace with CVS
3. while synchronizing, select a Java project
4. create a new scrapbook page
5. start typing (lots of chars) into the snippet editor
==&gt; I got a blocked job dialog (see picture) for each key stroke.
Created attachment 8598
Picture of the dialog
Dani - do you have any clue on this one. I noticed the Java editor does not 
cause the same problem, but all we do is subclass the abstract text editor?
I can look closer on Monday. As as starter: check your calls to
IFileBuffer.validateState and whether you use different scheduling rules.

That it blocks at all is a consequence of bug 55615. That there's one dialog for
each keystroke still needs to be investigated.

Please consider for M8.
As far as I can tell this is a duplicate of bug 55615 and bug 53315 (which is a 
duplicate of bug 51996).
This is a dup. The snippet editor uses the FileDocumentProvider as well.

Kai, please let us know if there is something special we need to do to fix 
this - or if we will simply inherit the fix.

*** This bug has been marked as a duplicate of 55615 ***</WithStack>
    <WithOutStack>I20040310 + code from HEAD (incl. Debug)

1. start self hosting workspace
2. start to synchronize your full workspace with CVS
3. while synchronizing, select a Java project
4. create a new scrapbook page
5. start typing (lots of chars) into the snippet editor
==&gt; I got a blocked job dialog (see picture) for each key stroke.
Created attachment 8598
Picture of the dialog
Dani - do you have any clue on this one. I noticed the Java editor does not 
cause the same problem, but all we do is subclass the abstract text editor?
I can look closer on Monday. As as starter: check your calls to
IFileBuffer.validateState and whether you use different scheduling rules.

That it blocks at all is a consequence of bug 55615. That there's one dialog for
each keystroke still needs to be investigated.

Please consider for M8.
As far as I can tell this is a duplicate of bug 55615 and bug 53315 (which is a 
duplicate of bug 51996).
This is a dup. The snippet editor uses the FileDocumentProvider as well.

Kai, please let us know if there is something special we need to do to fix 
this - or if we will simply inherit the fix.

*** This bug has been marked as a duplicate of 55615 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54955" />
    <CreationDate amount="2004-03-16 06:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>New Search: text search reports incorrect number of matches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- load JUnit</Line>
          <Line>- search for TestCase (test search)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Smoke for I20040316

- load JUnit
- search for TestCase (test search)

observe: the UI claims that textui.TestRunner has 1 match, but if you open the 
editor you see 3 matches.
I'm not seeing that. I see 4 matches both in the file and in the search results
view. Is this repeateable for you?
I figure you're talking about Text search?
Currently using 3.0 M8, but have seen this problem in prior integration builds.

I also often have an incorrect number of matches show in the new search when I 
search in files. Usually the results show 1 match per file when I know the 
actual number is greater than that. Switching from flat view to tree view and 
back to flat usually corrects this and the correct number of matches per file 
is displayed.

Btw, is 57104 not a duplicate of this?
This seems to be timing dependent. Also, I suspect this only happens for the
flat view?
*** Bug 57943 has been marked as a duplicate of this bug. ***
*** Bug 57104 has been marked as a duplicate of this bug. ***
The viewer update code was treating updates as adds. Fixed.</WithStack>
    <WithOutStack>Smoke for I20040316

- load JUnit
- search for TestCase (test search)

observe: the UI claims that textui.TestRunner has 1 match, but if you open the 
editor you see 3 matches.
I'm not seeing that. I see 4 matches both in the file and in the search results
view. Is this repeateable for you?
I figure you're talking about Text search?
Currently using 3.0 M8, but have seen this problem in prior integration builds.

I also often have an incorrect number of matches show in the new search when I 
search in files. Usually the results show 1 match per file when I know the 
actual number is greater than that. Switching from flat view to tree view and 
back to flat usually corrects this and the correct number of matches per file 
is displayed.

Btw, is 57104 not a duplicate of this?
This seems to be timing dependent. Also, I suspect this only happens for the
flat view?
*** Bug 57943 has been marked as a duplicate of this bug. ***
*** Bug 57104 has been marked as a duplicate of this bug. ***
The viewer update code was treating updates as adds. Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54956" />
    <CreationDate amount="2004-03-16 06:11:00 -0500" />
    <DupId amount="54460" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New search: wrong order of history</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Smoke for I20040316

- do the text and Java search as describe in the smoke test

observe: the test search entry is the top most entry in the history list. 
Shouldn't it be at the bottom.
*** Bug 55769 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 54460 ***</WithStack>
    <WithOutStack>Smoke for I20040316

- do the text and Java search as describe in the smoke test

observe: the test search entry is the top most entry in the history list. 
Shouldn't it be at the bottom.
*** Bug 55769 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 54460 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54957" />
    <CreationDate amount="2004-03-16 06:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code Generation: method comment</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="multicomment">
        <location start="67" end="113" />
        <code>/**
 * @todo Generated comment
 * ${tags}
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="119" end="165" />
        <code>/**
 * ${tags}
 * @todo Generated comment
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="207" end="255" />
        <code>/**
 * ${todo} Generated comment
 * ${tags}
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) @todo is not an official Javadoc tag (not even in 1.5)</Line>
          <Line>2) we should not mix task tags with custom Javadoc tags</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Smoke for I20040316

Should the default comment for new method be:

/**
 * @todo Generated comment
 * ${tags}
 */

not

/**
 * ${tags}
 * @todo Generated comment
 */
It should not contain @todo but ${todo}:

/**
 * ${todo} Generated comment
 * ${tags}
 */
NOTE: we (text) removed the hard-coded recognition/coloring of @todo that you
added because:
1) @todo is not an official Javadoc tag (not even in 1.5)
2) we should not mix task tags with custom Javadoc tags

we decided to not add any todo for the method comments.</WithStack>
    <WithOutStack>Smoke for I20040316

Should the default comment for new method be:

/**
 * @todo Generated comment
 * ${tags}
 */

not

/**
 * ${tags}
 * @todo Generated comment
 */
It should not contain @todo but ${todo}:

/**
 * ${todo} Generated comment
 * ${tags}
 */
NOTE: we (text) removed the hard-coded recognition/coloring of @todo that you
added because:
1) @todo is not an official Javadoc tag (not even in 1.5)
2) we should not mix task tags with custom Javadoc tags

we decided to not add any todo for the method comments.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54958" />
    <CreationDate amount="2004-03-16 06:28:00 -0500" />
    <DupId amount="139144" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[move] Moving a class results in compile error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- create a new package in the JUnit project</Line>
          <Line>- use "Refactor&gt;Move" to move TestCase to the newly created package</Line>
          <Line>- Click preview</Line>
          <Line>- Click finish</Line>
          <Line>-&gt; compile error</Line>
          <Line>Another instance of missing visibility checks ...</Line>
          <Line>Not for 3.0.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Smoke for I20040316

- create a new package in the JUnit project
- use "Refactor&gt;Move" to move TestCase to the newly created package
- Click preview
- Click finish
-&gt; compile error
Another instance of missing visibility checks ...
Not for 3.0.


*** This bug has been marked as a duplicate of bug 139144 ***</WithStack>
    <WithOutStack>Smoke for I20040316

- create a new package in the JUnit project
- use "Refactor&gt;Move" to move TestCase to the newly created package
- Click preview
- Click finish
-&gt; compile error
Another instance of missing visibility checks ...
Not for 3.0.


*** This bug has been marked as a duplicate of bug 139144 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54959" />
    <CreationDate amount="2004-03-16 09:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Print the current value of the MONITOR_MODE option in xml trace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The current value that MONITOR_MODE is set to is not outputted in the xml trace
fragments. This needs to be done.
Value of MONITOR_MODE option should now appear in the xml trace. 
done
house keeping</WithStack>
    <WithOutStack>The current value that MONITOR_MODE is set to is not outputted in the xml trace
fragments. This needs to be done.
Value of MONITOR_MODE option should now appear in the xml trace. 
done
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54960" />
    <CreationDate amount="2004-03-16 09:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[resources] prefs: project prefs and flush</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently we hook ResourcesPlugin.shutdown to save the project preferences. This
agressively saves all project preferences. An unfortuanate side effect of this
is that some are loaded if they weren't before.

This is unnecessary and should be optimized out.
Clients who set project preferences (like in preference or project properties
pages) should call #flush when they are finished.

Removing the #flush call from ResourcesPlugin.shutdown.</WithStack>
    <WithOutStack>Currently we hook ResourcesPlugin.shutdown to save the project preferences. This
agressively saves all project preferences. An unfortuanate side effect of this
is that some are loaded if they weren't before.

This is unnecessary and should be optimized out.
Clients who set project preferences (like in preference or project properties
pages) should call #flush when they are finished.

Removing the #flush call from ResourcesPlugin.shutdown.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54961" />
    <CreationDate amount="2004-03-16 09:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Updating through http proxy (almost) locks PC with 100% CPU usage</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>1. The fix mentioned in comment #8 fixed the 100% CPU problem.</Line>
          <Line />
          <Line>2. The proxy configuration is the same. I never get a chance to enter a</Line>
          <Line>username/password. The error happens for other sites too. I don't know how to</Line>
          <Line>test with an on-disk update site.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="17">
        <Lines>
          <Line>1.  If user cancels dialog once they can naver entered a password again for</Line>
          <Line>the same proxy - they needed to restart Eclipse.  Fixed this.</Line>
          <Line>2.  Most values (except the port number) obtained from Java by</Line>
          <Line>Authenticator.getReqesting...() can be null.  Only few are documented in JDK</Line>
          <Line>docs.  This can result in NPEs in UpdateManagerAuthenticator.  I have fixed</Line>
          <Line>one as in comment #8.  Now removed rest assumptions of not null.</Line>
          <Line>3.  UpdateManagerAuthenticator was attempting to always create URL from values</Line>
          <Line>obtained from Authenticator.  This was likely to fail.  Event if values were</Line>
          <Line>not null, a protocol could have been "http/1.1" which new URL will not accept.</Line>
          <Line>Upon MalformedURL UpdateManagerAuthenticator would return blank user and one</Line>
          <Line>space password.  If it could not handle authentication, it should return null.</Line>
          <Line>4.  UpdateManagerAuthenticator contained a code for retrieving, but never</Line>
          <Line>saving user/passwords in the Platform.  Platform stores user passwords indexed</Line>
          <Line>by multiple keys, one of them URL, which makes it inapropriate for keeping</Line>
          <Line>even proxy passwords.</Line>
          <Line>5.  UpdateManagerAuthenticator had a code to cache last authentication request</Line>
          <Line>and corresponding user/pass combination.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I've correctly specified the http proxy for updates, which requires
authentication (NTLM by default, although has also worked with basic for other
applications, Java and non-Java) on a different domain than the client or proxy.
Non-NTLM authentication requires the "AUTH-DOMAIN\username" format for the username.
As soon as the updater requires some http communication, the java process hits
100% cpu usage, severely crippling other processes (i.e. they're "as slow as
molasses in January"). This continues indefinitely unless Cancel is pressed.
Can you provide a test update site that I can try to reproduce the problem?
I first experienced the problem when I tried to install the Spindle plug-in
through their update site http://spindle.sourceforge.net/updates through the
"new components" updater but I had the same results when trying the "installed
components" updater.
I'm using M7 and the Sun 1.4.2 J2RE. I tried switching eclipse to the beta J2RE
1.5 but I got the same.
One thing to note is that I had never tried to update Eclipse before, as only
recently I gained access to the web, and only through the proxy. My case is
unusual and rare, requiring an ISA server (the web proxy), two domains, the
client on one domain together with the server, which in turn allows access only
through a specific account on the second domain. There may be a less complicated
combination that still experiences the problem, but I don't have any access to
try anything.
My first question would be "why don't I get an authorization dialog?"

Can you try starting Eclipse with -console option so you get a command window 
and press Ctrl-Break in this window, when you get to 100%CPU point?  This 
should produce thread dump which can help determine what happens.
See bug 37205, as they've had success with M6 and Sun JDK 1.4.2_03.
Perhaps your unusual setup is not handled correctly.
Constantine,
-console does not seem to work when starting Eclipse from a shortcut.  Open a 
dos prompt, switch to directory
	C:\Dev\eclipse
and type
	eclipse.exe -console -data C:\Dev\workspace -vm c:\j2sdk1.4.2
\bin\javaw -vmargs -Xmx256M
there.  It should work from command line.

Created attachment 8648
console dump results

This is a copy of the Ctrl-Break dump on the console. It is reformated to
un-wrap line wraps (not sure if I got it right, though).
BTW,

The command that worked was:

eclipse.exe -console -data C:\Dev\workspace -vm c:\j2sdk1.4.2\bin\java -vmargs
-Xmx256M

(notice the java.exe instead of javaw.exe)

The console show a NPE, that leads to a loop.  I have release a fix, but was 
not able to reproduce the original problem.  What was the proxy host you 
specified?
Please verify in builds nightly &gt;20040318 or the next week integration build.

The proxy is not visible outside our LAN as it is part of our firewall. I will
try to get build and test it on a separate setup. Would that satisfy you?

I would still like to know how you specified the host.  Have you just typed a 
host name in the Update preferences, or have you specified IP, or use any 
other format that uncovered this problem.
Sorry for the delay. Here it is:

On the "Install/Update" page in the Preferences, I selected "Enable HTTP proxy 
connection" and specified the host by name (also tried by IP address, but no 
change) and the port (happens to be 8080).

Thanks.
- Update for M8

I'm testing M8 and under the same settings I now get the following lines for
"Search for updates of the currently installed features":

Unable to access "http://update.eclipse.org/updates"
  Unable to access Site stream: "http://update.eclipse.org/updates" [Server
returned HTTP response code: 407 for URL: http://update.eclipse.org/updates]
  Unable to access Site stream: "http://update.eclipse.org/updates/site.xml"
[Server returned HTTP response code: 407 for URL:
http://update.eclipse.org/updates/site.xml]

These appear in a dialog box.
There were times when eclipe.org was not available.
Have you tried pointing your browser to those sites and check the connection?
No relation, this is a 407 "Proxy Authentication Required" as per RFC 2616,
para. 10.4.8

I have no idea why this would be unexpected by the installer/updater.

BTW, sorry for "reopening" the bug ppl, if improper.
Konrad, can you re-investigate this when you have a chance? thx
My fixes in that code are shots in the dark, as I do not have access to a 
proxy, and cannot debug it.
It would help to understand what is going on, if Constantine could you provide 
more guiding details:

Has a fix talked in comment #8 fixed a 100% CPU original problem?

The problem in comment #13, I assume it is the same proxy configuration, were 
you prompted for the password, typed a correct or incorrect one to get the 
error message?
Do you know if the error prevents update from fetching updates from other 
sites, for example a local site (on your disk), or are you just concerned that 
error dialog is too imprecise and intrusive?
1. The fix mentioned in comment #8 fixed the 100% CPU problem.

2. The proxy configuration is the same. I never get a chance to enter a
username/password. The error happens for other sites too. I don't know how to
test with an on-disk update site.

I'll be happy to fill in on any other details.
Got this link from someone, it may help with settings:

Link to Microsoft technote KB295667
http://support.microsoft.com/default.aspx?scid=kb;en-us;295667
I have installed proxy at home and looked at the code around 
UpdateManagerAuthenticator:
1.  If user cancels dialog once they can naver entered a password again for 
the same proxy - they needed to restart Eclipse.  Fixed this.
2.  Most values (except the port number) obtained from Java by 
Authenticator.getReqesting...() can be null.  Only few are documented in JDK 
docs.  This can result in NPEs in UpdateManagerAuthenticator.  I have fixed 
one as in comment #8.  Now removed rest assumptions of not null.
3.  UpdateManagerAuthenticator was attempting to always create URL from values 
obtained from Authenticator.  This was likely to fail.  Event if values were 
not null, a protocol could have been "http/1.1" which new URL will not accept.
Upon MalformedURL UpdateManagerAuthenticator would return blank user and one 
space password.  If it could not handle authentication, it should return null.
4.  UpdateManagerAuthenticator contained a code for retrieving, but never 
saving user/passwords in the Platform.  Platform stores user passwords indexed 
by multiple keys, one of them URL, which makes it inapropriate for keeping 
even proxy passwords.
5.  UpdateManagerAuthenticator had a code to cache last authentication request 
and corresponding user/pass combination.

After adding fixes and refactoring UpdateManagerAuthenticator is reduced to 
few lines of logic plus the dialog class.  There is really nothing left that 
can fail there.

UpdateManagerAuthenticator had a check for authentication scheme and was only 
promting for password if it was "basic".  Recently "ntlm" was added.  Now the 
check is removed and user will be prompt for all types of autentication that 
JRE can handle.  I have tested "basic", "digest", "ntlm".
There can be only one Authenticator registered in Eclipse (1 per VM).  I have 
made sure that UserValidationDialog is passed not null string (possibly 
empty).  Since UpdateManagerAuthenticator no longer tries to create URLs. it 
should handle authentication for password protectes sites or SOCKS proxy 
(there is no preference page for SOCKS proxy, but it can be configured on 
system properties).


As for Constantine problem, it should be fixed.  If it was canceling problem 
it is gone.  It is also not clear what authentication scheme the proxy is 
using.  In original report you say: Non-NTLM authentication requires the "AUTH-
DOMAIN\username".  I know the domain can be passed with user name for NTLM, 
but have not seen this format for other schemes like basic.  If your proxy was 
not basic and not ntlm, it could have not worked as there was a specific check 
for these two.

Code in the builds 20040409 or newer.
&gt; Code in the builds 20040409 or newer.

Shouldn't that have been 20040509?

Will test ASAP. Which is better, nightly or integration?

BTW, good job!

Available in &gt;=20040509.  I cannot say which will be a good build. 20040509 
and 10 have (second) startup problems.  I suggest waiting for a good 
integration build this week.
Tested with I20040512. Same results as in comment #13.

Perhaps this integration build doesn't have the changes? How will I know when to
get an integration build?

The first integration build with the changes is I20040512 20:00.
Congratulations!!! I tried I20040513 and it works!!!

One thing to note is that it asks me for the username/password 2-3 times. That
may be intentional though...

Details:
Tried the Eclipse update site, it worked (no updates).
Tried the Splindle update site, it didn't work (there must be a problem with
thir update info, there is a parsing error).
Tried the AJDT update site, it worked (download started).

Comments:
The Eclipse update asked 3 times for username/password. Otherwise, there were no
problems
The AJDT update asked 2 times for username/password. At least, I think it was
twice only...

Problem:
After I tried the Spindle update I couldn't get the "Find and install..."
dialog. I restarted Eclipse, but it still wouldn't come up. I figured the failed
update had caused a problem, so I wiped the workspace. The new workspace was ok,
so I tried the AJDT update. I canceled the AJDT update because I couldn't wait
for it to finish, and the "Find and install..." dialog wouldn't come up again.
The strangest thing is, when I open Eclipse and I click "Find and install...", I
get a couple of seconds of hourglass cursor, and then nothing. If I try again
(not closing Eclipse in between), I don't get any hourglass cursor (i.e. I get
nowhere fast! :)

The authentication prompt comes up 2 times because the code tries to access 
the site first, then the site/site.xml. 
If you add the site as http://path/to/site/site.xml, I think you'll only get 
one prompt.

There was a problem caused by a UI bug that will be fixed in today's 8AM 
build, that caused our wizard to now come up when there is a workspace from a 
previous run.
Shouldn't there be some caching of the username/password then?

It would be nice, but new code needs to be written for that.  Adding layer of 
caching may lead to problems.  Consider logging into a ntlm proxy that with 
recently changed password.  VM may attempt to:
1 log-in with a password that it cached by JRE,
2 then it will send some generic password,
3 then it will send password it gets from Windows
4 then it will ask update for a password, and update will provide a cached one,
5 it will ask update again and update will pop-up a dialog that user will 
finally have a chance to fill in the correct password.

Every password caching adds another unsuccessful login attempt.  A proxy may 
have a limit on number of retries and block the user out.

This require more testing, beyond ensuring correctness of the code.  This bug 
was about getting it to work and I am satisfied if it works.  Caching is an 
improvement with a potential to have negative effect and we should not 
experiment with this for 3.0.  You may open a enhancement request that we will 
consider later not near the end of the release.</WithStack>
    <WithOutStack>I've correctly specified the http proxy for updates, which requires
authentication (NTLM by default, although has also worked with basic for other
applications, Java and non-Java) on a different domain than the client or proxy.
Non-NTLM authentication requires the "AUTH-DOMAIN\username" format for the username.
As soon as the updater requires some http communication, the java process hits
100% cpu usage, severely crippling other processes (i.e. they're "as slow as
molasses in January"). This continues indefinitely unless Cancel is pressed.
Can you provide a test update site that I can try to reproduce the problem?
I first experienced the problem when I tried to install the Spindle plug-in
through their update site http://spindle.sourceforge.net/updates through the
"new components" updater but I had the same results when trying the "installed
components" updater.
I'm using M7 and the Sun 1.4.2 J2RE. I tried switching eclipse to the beta J2RE
1.5 but I got the same.
One thing to note is that I had never tried to update Eclipse before, as only
recently I gained access to the web, and only through the proxy. My case is
unusual and rare, requiring an ISA server (the web proxy), two domains, the
client on one domain together with the server, which in turn allows access only
through a specific account on the second domain. There may be a less complicated
combination that still experiences the problem, but I don't have any access to
try anything.
My first question would be "why don't I get an authorization dialog?"

Can you try starting Eclipse with -console option so you get a command window 
and press Ctrl-Break in this window, when you get to 100%CPU point?  This 
should produce thread dump which can help determine what happens.
See bug 37205, as they've had success with M6 and Sun JDK 1.4.2_03.
Perhaps your unusual setup is not handled correctly.
Constantine,
-console does not seem to work when starting Eclipse from a shortcut.  Open a 
dos prompt, switch to directory
	C:\Dev\eclipse
and type
	eclipse.exe -console -data C:\Dev\workspace -vm c:\j2sdk1.4.2
\bin\javaw -vmargs -Xmx256M
there.  It should work from command line.

Created attachment 8648
console dump results

This is a copy of the Ctrl-Break dump on the console. It is reformated to
un-wrap line wraps (not sure if I got it right, though).
BTW,

The command that worked was:

eclipse.exe -console -data C:\Dev\workspace -vm c:\j2sdk1.4.2\bin\java -vmargs
-Xmx256M

(notice the java.exe instead of javaw.exe)

The console show a NPE, that leads to a loop.  I have release a fix, but was 
not able to reproduce the original problem.  What was the proxy host you 
specified?
Please verify in builds nightly &gt;20040318 or the next week integration build.

The proxy is not visible outside our LAN as it is part of our firewall. I will
try to get build and test it on a separate setup. Would that satisfy you?

I would still like to know how you specified the host.  Have you just typed a 
host name in the Update preferences, or have you specified IP, or use any 
other format that uncovered this problem.
Sorry for the delay. Here it is:

On the "Install/Update" page in the Preferences, I selected "Enable HTTP proxy 
connection" and specified the host by name (also tried by IP address, but no 
change) and the port (happens to be 8080).

Thanks.
- Update for M8

I'm testing M8 and under the same settings I now get the following lines for
"Search for updates of the currently installed features":

Unable to access "http://update.eclipse.org/updates"
  Unable to access Site stream: "http://update.eclipse.org/updates" [Server
returned HTTP response code: 407 for URL: http://update.eclipse.org/updates]
  Unable to access Site stream: "http://update.eclipse.org/updates/site.xml"
[Server returned HTTP response code: 407 for URL:
http://update.eclipse.org/updates/site.xml]

These appear in a dialog box.
There were times when eclipe.org was not available.
Have you tried pointing your browser to those sites and check the connection?
No relation, this is a 407 "Proxy Authentication Required" as per RFC 2616,
para. 10.4.8

I have no idea why this would be unexpected by the installer/updater.

BTW, sorry for "reopening" the bug ppl, if improper.
Konrad, can you re-investigate this when you have a chance? thx
My fixes in that code are shots in the dark, as I do not have access to a 
proxy, and cannot debug it.
It would help to understand what is going on, if Constantine could you provide 
more guiding details:

Has a fix talked in comment #8 fixed a 100% CPU original problem?

The problem in comment #13, I assume it is the same proxy configuration, were 
you prompted for the password, typed a correct or incorrect one to get the 
error message?
Do you know if the error prevents update from fetching updates from other 
sites, for example a local site (on your disk), or are you just concerned that 
error dialog is too imprecise and intrusive?
1. The fix mentioned in comment #8 fixed the 100% CPU problem.

2. The proxy configuration is the same. I never get a chance to enter a
username/password. The error happens for other sites too. I don't know how to
test with an on-disk update site.

I'll be happy to fill in on any other details.
Got this link from someone, it may help with settings:

Link to Microsoft technote KB295667
http://support.microsoft.com/default.aspx?scid=kb;en-us;295667
I have installed proxy at home and looked at the code around 
UpdateManagerAuthenticator:
1.  If user cancels dialog once they can naver entered a password again for 
the same proxy - they needed to restart Eclipse.  Fixed this.
2.  Most values (except the port number) obtained from Java by 
Authenticator.getReqesting...() can be null.  Only few are documented in JDK 
docs.  This can result in NPEs in UpdateManagerAuthenticator.  I have fixed 
one as in comment #8.  Now removed rest assumptions of not null.
3.  UpdateManagerAuthenticator was attempting to always create URL from values 
obtained from Authenticator.  This was likely to fail.  Event if values were 
not null, a protocol could have been "http/1.1" which new URL will not accept.
Upon MalformedURL UpdateManagerAuthenticator would return blank user and one 
space password.  If it could not handle authentication, it should return null.
4.  UpdateManagerAuthenticator contained a code for retrieving, but never 
saving user/passwords in the Platform.  Platform stores user passwords indexed 
by multiple keys, one of them URL, which makes it inapropriate for keeping 
even proxy passwords.
5.  UpdateManagerAuthenticator had a code to cache last authentication request 
and corresponding user/pass combination.

After adding fixes and refactoring UpdateManagerAuthenticator is reduced to 
few lines of logic plus the dialog class.  There is really nothing left that 
can fail there.

UpdateManagerAuthenticator had a check for authentication scheme and was only 
promting for password if it was "basic".  Recently "ntlm" was added.  Now the 
check is removed and user will be prompt for all types of autentication that 
JRE can handle.  I have tested "basic", "digest", "ntlm".
There can be only one Authenticator registered in Eclipse (1 per VM).  I have 
made sure that UserValidationDialog is passed not null string (possibly 
empty).  Since UpdateManagerAuthenticator no longer tries to create URLs. it 
should handle authentication for password protectes sites or SOCKS proxy 
(there is no preference page for SOCKS proxy, but it can be configured on 
system properties).


As for Constantine problem, it should be fixed.  If it was canceling problem 
it is gone.  It is also not clear what authentication scheme the proxy is 
using.  In original report you say: Non-NTLM authentication requires the "AUTH-
DOMAIN\username".  I know the domain can be passed with user name for NTLM, 
but have not seen this format for other schemes like basic.  If your proxy was 
not basic and not ntlm, it could have not worked as there was a specific check 
for these two.

Code in the builds 20040409 or newer.
&gt; Code in the builds 20040409 or newer.

Shouldn't that have been 20040509?

Will test ASAP. Which is better, nightly or integration?

BTW, good job!

Available in &gt;=20040509.  I cannot say which will be a good build. 20040509 
and 10 have (second) startup problems.  I suggest waiting for a good 
integration build this week.
Tested with I20040512. Same results as in comment #13.

Perhaps this integration build doesn't have the changes? How will I know when to
get an integration build?

The first integration build with the changes is I20040512 20:00.
Congratulations!!! I tried I20040513 and it works!!!

One thing to note is that it asks me for the username/password 2-3 times. That
may be intentional though...

Details:
Tried the Eclipse update site, it worked (no updates).
Tried the Splindle update site, it didn't work (there must be a problem with
thir update info, there is a parsing error).
Tried the AJDT update site, it worked (download started).

Comments:
The Eclipse update asked 3 times for username/password. Otherwise, there were no
problems
The AJDT update asked 2 times for username/password. At least, I think it was
twice only...

Problem:
After I tried the Spindle update I couldn't get the "Find and install..."
dialog. I restarted Eclipse, but it still wouldn't come up. I figured the failed
update had caused a problem, so I wiped the workspace. The new workspace was ok,
so I tried the AJDT update. I canceled the AJDT update because I couldn't wait
for it to finish, and the "Find and install..." dialog wouldn't come up again.
The strangest thing is, when I open Eclipse and I click "Find and install...", I
get a couple of seconds of hourglass cursor, and then nothing. If I try again
(not closing Eclipse in between), I don't get any hourglass cursor (i.e. I get
nowhere fast! :)

The authentication prompt comes up 2 times because the code tries to access 
the site first, then the site/site.xml. 
If you add the site as http://path/to/site/site.xml, I think you'll only get 
one prompt.

There was a problem caused by a UI bug that will be fixed in today's 8AM 
build, that caused our wizard to now come up when there is a workspace from a 
previous run.
Shouldn't there be some caching of the username/password then?

It would be nice, but new code needs to be written for that.  Adding layer of 
caching may lead to problems.  Consider logging into a ntlm proxy that with 
recently changed password.  VM may attempt to:
1 log-in with a password that it cached by JRE,
2 then it will send some generic password,
3 then it will send password it gets from Windows
4 then it will ask update for a password, and update will provide a cached one,
5 it will ask update again and update will pop-up a dialog that user will 
finally have a chance to fill in the correct password.

Every password caching adds another unsuccessful login attempt.  A proxy may 
have a limit on number of retries and block the user out.

This require more testing, beyond ensuring correctness of the code.  This bug 
was about getting it to work and I am satisfied if it works.  Caching is an 
improvement with a potential to have negative effect and we should not 
experiment with this for 3.0.  You may open a enhancement request that we will 
consider later not near the end of the release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54962" />
    <CreationDate amount="2004-03-16 09:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>plain reference to package not found in (@see) javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="package">
        <location start="0" end="10" />
        <code>package p;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="11" end="53" />
        <code>/**
 * @see p
 * @see p.A
 * @see p.AA
 */</code>
      </source_code>
      <source_code type="class">
        <location start="54" end="73" />
        <code>public class AA {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) MatchLocator method reportMatching(CompilationUnitDeclaration,boolean):</Line>
          <Line>Look for Javadoc*TypeReference which have a non-null packageBinding. If so,</Line>
          <Line>create new JavadocImportReference, match level and report import ref for it,</Line>
          <Line>2) PackageReferenceLocator methods matchReportImportRef and resolveBinding:</Line>
          <Line>Take into account that now binding can be a PackageBinding</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>package p;
/**
 * @see p
 * @see p.A
 * @see p.AA
 */
public class AA {
}

The first reference (@see p) is not found when searching for references to
package p.

jdt-ui reminder: diable RenamePackageTests#test0()
Fixed.

Solely package reference is now seen as the other.

[jtd-core-internal]
Humm, as solely package references where bound and stored inside 
Javadoc*TypeReference, the fix for this problem continue to implement 
this "bizarre" but necessary design...
Changes done in:
1) MatchLocator method reportMatching(CompilationUnitDeclaration,boolean):
   Look for Javadoc*TypeReference which have a non-null packageBinding. If so,
   create new JavadocImportReference, match level and report import ref for it,
2) PackageReferenceLocator methods matchReportImportRef and resolveBinding:
   Take into account that now binding can be a PackageBinding

Test cases added in JavadocSearchJavadocTests

Verified in 200405180816</WithStack>
    <WithOutStack>package p;
/**
 * @see p
 * @see p.A
 * @see p.AA
 */
public class AA {
}

The first reference (@see p) is not found when searching for references to
package p.

jdt-ui reminder: diable RenamePackageTests#test0()
Fixed.

Solely package reference is now seen as the other.

[jtd-core-internal]
Humm, as solely package references where bound and stored inside 
Javadoc*TypeReference, the fix for this problem continue to implement 
this "bizarre" but necessary design...
Changes done in:
1) MatchLocator method reportMatching(CompilationUnitDeclaration,boolean):
   Look for Javadoc*TypeReference which have a non-null packageBinding. If so,
   create new JavadocImportReference, match level and report import ref for it,
2) PackageReferenceLocator methods matchReportImportRef and resolveBinding:
   Take into account that now binding can be a PackageBinding

Test cases added in JavadocSearchJavadocTests

Verified in 200405180816</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54963" />
    <CreationDate amount="2004-03-16 09:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>IDEApplication.checkJavaRuntimeVersion() fails for JDK 1.4.1_01</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm running with JDK 1.4.1_01 and the new logic to check for adequate version
numbers is failing, I assume because of the _01.  Any attempt to launch results
in a message saying I require at least Java 1.4.1.
This will need to be addressed today for a rebuild either at 1pm today or 
tomorrow morning at 8am.

Problem was with the .1, not the _01.  A &gt; check on the service level should 
have been &gt;=.
Fix released for the 1pm rebuild.</WithStack>
    <WithOutStack>I'm running with JDK 1.4.1_01 and the new logic to check for adequate version
numbers is failing, I assume because of the _01.  Any attempt to launch results
in a message saying I require at least Java 1.4.1.
This will need to be addressed today for a rebuild either at 1pm today or 
tomorrow morning at 8am.

Problem was with the .1, not the _01.  A &gt; check on the service level should 
have been &gt;=.
Fix released for the 1pm rebuild.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54964" />
    <CreationDate amount="2004-03-16 10:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IDEApplication.checkInstanceLocation is throwing up an error dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There seems to be a problem with instanceLoc.lock() in this method in a runtime
workbench (perhaps otherwise too?).  The .lock() method is returning false and
then the checkInstanceLocation method drops to the error dialog and then fails.
 The workbench cannot be started.
Actually, it could be that the lock() method is throwing an exception instead of
returning false.  Either could cause the noted behaviour.
Looks like a dependency problem.  I've sent the following email to the ui dev 
list.  I'll leave this bug open for today, in case others run into the same 
problem.

The newest version of IDEApplication (in org.eclipse.ui.ide) depends on the most 
recent versions of the runtime (that were submitted for today's integration 
build).  If you are manually updating your version of the UI code, you'll also 
need the following runtime packages:

	org.eclipse.osgi
	org.eclipse.osgi.services
	org.eclipse.osgi.util
	org.eclipse.core.runtime
	org.eclipse.platform

The UI dependency is in org.eclipse.osgi, but the others will likely be used by 
osgi.

If that is too many packages to grab, you could also try running with -Declipse.
testing.ui=true, which should make the old runtime code behave as the new 
version does.
Everyone seems to be running ok now.</WithStack>
    <WithOutStack>There seems to be a problem with instanceLoc.lock() in this method in a runtime
workbench (perhaps otherwise too?).  The .lock() method is returning false and
then the checkInstanceLocation method drops to the error dialog and then fails.
 The workbench cannot be started.
Actually, it could be that the lock() method is throwing an exception instead of
returning false.  Either could cause the noted behaviour.
Looks like a dependency problem.  I've sent the following email to the ui dev 
list.  I'll leave this bug open for today, in case others run into the same 
problem.

The newest version of IDEApplication (in org.eclipse.ui.ide) depends on the most 
recent versions of the runtime (that were submitted for today's integration 
build).  If you are manually updating your version of the UI code, you'll also 
need the following runtime packages:

	org.eclipse.osgi
	org.eclipse.osgi.services
	org.eclipse.osgi.util
	org.eclipse.core.runtime
	org.eclipse.platform

The UI dependency is in org.eclipse.osgi, but the others will likely be used by 
osgi.

If that is too many packages to grab, you could also try running with -Declipse.
testing.ui=true, which should make the old runtime code behave as the new 
version does.
Everyone seems to be running ok now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54965" />
    <CreationDate amount="2004-03-16 10:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incremental compilation does twice as much work as necessary</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I added support for -outjar in the test harness, I was surprised to find 
duplicate entry exceptions coming from the output file writing to the outjar. I 
traced it through, and found that every source file passed to an incremental 
compile is in fact compiled twice!

The first time round we note the references, and of course each file has a 
reference to itself. Then we call "AjState.getFilesToCompile" looking to see if 
there are any further files to compile in another iteration. This method does 
not remember the set of files it just compiled, so since we have referenced each 
type we just compiled, and we have no reord of that fact, we compile them again. 
Second time around, the bytecodes are identical to the previous go, so 
recordClassFile doesn't note their dependents - and thus this time we terminate.
Fixed by remembering list of files we compiled on the last iteration in AjState.</WithStack>
    <WithOutStack>When I added support for -outjar in the test harness, I was surprised to find 
duplicate entry exceptions coming from the output file writing to the outjar. I 
traced it through, and found that every source file passed to an incremental 
compile is in fact compiled twice!

The first time round we note the references, and of course each file has a 
reference to itself. Then we call "AjState.getFilesToCompile" looking to see if 
there are any further files to compile in another iteration. This method does 
not remember the set of files it just compiled, so since we have referenced each 
type we just compiled, and we have no reord of that fact, we compile them again. 
Second time around, the bytecodes are identical to the previous go, so 
recordClassFile doesn't note their dependents - and thus this time we terminate.
Fixed by remembering list of files we compiled on the last iteration in AjState.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54966" />
    <CreationDate amount="2004-03-16 10:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Hyades 3.0 Example Wizards broken, exception thrown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098345">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Invalid project 
description.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.Project.checkDescription(Project.java:132)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Project.create(Project.java:225)</Frame>
          <Frame depth="2">org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.configNewProject(CreationOperation.java:207)</Frame>
          <Frame depth="3">org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.createProject(CreationOperation.java:150)</Frame>
          <Frame depth="4">org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.run(CreationOperation.java:110)</Frame>
          <Frame depth="5">org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:67)</Frame>
          <Frame depth="6">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)</Frame>
          <Frame depth="8">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="9">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
          <Frame depth="10">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="11">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:756)</Frame>
          <Frame depth="12">org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationWizard.performFinish(CreationWizard.java:389)</Frame>
          <Frame depth="13">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:606)</Frame>
          <Frame depth="14">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:319)</Frame>
          <Frame depth="15">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="21">org.eclipse.jface.window.Window.runEventLoop(Window.java:638)</Frame>
          <Frame depth="22">org.eclipse.jface.window.Window.open(Window.java:618)</Frame>
          <Frame depth="23">org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:164)</Frame>
          <Frame depth="24">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:502)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:435)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="35">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="39">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="41">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</Frame>
          <Frame depth="43">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Method.java:389)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Start Eclipse.</Line>
          <Line>2. File -&gt; New -&gt; Other. Check the Show all wizards checkbox.</Line>
          <Line>3. On the left hand side, expand Examples -&gt; Hyades Logging. Select Log Parser</Line>
          <Line>Sample. Click Next.</Line>
          <Line>4. Accept all defaults and click Finish.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Found in WSWB 3.0 I20040310 + Hyades 3.0 20040316_0040 driver (also reproduced 
in Hyades 20040309_1448 patched driver).

Steps to reproduce:
-------------------
1. Start Eclipse.
2. File -&gt; New -&gt; Other. Check the Show all wizards checkbox.
3. On the left hand side, expand Examples -&gt; Hyades Logging. Select Log Parser 
Sample. Click Next.
4. Accept all defaults and click Finish.

A progress bar appears for a split second, then disappears. All the buttons get 
re-enabled, and the wizard doesn't go away. The .log file content is included 
below.

I noticed that all of the examples wizards from Hyades are broken (same 
exception is being thrown for each). I also noticed that the AWT/Swing examples 
are also broken, although a different exception is produced for the jdt 
examples than the Hyades ones. I'm not sure if this is just a coincidence (or 
if there's actually something wrong in Eclipse itself), but opening this bug 
just in case.

!SESSION Mar 16, 2004 10:23:17.297 ---------------------------------------------
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: 
jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -shared D:\H30-20040316\eclipse\eclipse.exe -shared 
758_6c -vm D:\H30-20040316\eclipse\jre\bin\javaw.exe -vmargs -cp D:\H30-20040316
\eclipse\startup.jar org.eclipse.core.launcher.Main
!ENTRY org.eclipse.osgi Mar 16, 2004 10:23:17.297
!MESSAGE Bundle reference:file:d:/H30-
20040316/eclipse/plugins/org.eclipse.hyades.logging.adapter.ui.doc.user_1.3.0/ 
[110] was not resolved
!ENTRY org.eclipse.hyades.ui 1 0 Mar 16, 2004 10:23:49.16
!MESSAGE org.eclipse.core.internal.resources.ResourceException: Invalid project 
description.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Invalid project 
description.
	at org.eclipse.core.internal.resources.Project.checkDescription
(Project.java:132)
	at org.eclipse.core.internal.resources.Project.create(Project.java:225)
	at 
org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.configNew
Project(CreationOperation.java:207)
	at 
org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.createPro
ject(CreationOperation.java:150)
	at 
org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationOperation.run
(CreationOperation.java:110)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute
(WorkspaceModifyDelegatingOperation.java:67)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1562)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:105)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:756)
	at 
org.eclipse.hyades.ui.internal.wizard.exampleproject.CreationWizard.performFinis
h(CreationWizard.java:389)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:606)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:319)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:402)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined 
Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:638)
	at org.eclipse.jface.window.Window.open(Window.java:618)
	at org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:164)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:550)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:502)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:435)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2367)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2047)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:258)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:48)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:260)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:173)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:389)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
	at org.eclipse.core.launcher.Main.run(Main.java:745)
	at org.eclipse.core.launcher.Main.main(Main.java:713)
!SUBENTRY 1 org.eclipse.core.resources 4 77 Mar 16, 2004 10:23:49.31
!MESSAGE Invalid project description.
!SUBENTRY 2 org.eclipse.core.runtime 0 0 Mar 16, 2004 10:23:49.31
!MESSAGE 
!SUBENTRY 2 org.eclipse.core.resources 4 77 Mar 16, 2004 10:23:49.31
!MESSAGE D:/H30-20040316/eclipse/workspace/ and D:/H30-
20040316/eclipse/workspace/ overlap.
Fix for M8
This was broken by a recent change from the deprecated Platform.getLocation() 
method to the recommended Platform.getInstanceLocation(). However, these have 
different return values (the latter returns a Location rather than an IPath). 
This caused the .equals() to return false and triggered a series of failures.

Since then, Platform.getLocation() has been undeprecated. Switching back to the 
original.

Fixed.
Confirmed as fixed. Closing bug...
house keeping</WithStack>
    <WithOutStack>Found in WSWB 3.0 I20040310 + Hyades 3.0 20040316_0040 driver (also reproduced 
in Hyades 20040309_1448 patched driver).

Steps to reproduce:
-------------------
1. Start Eclipse.
2. File -&gt; New -&gt; Other. Check the Show all wizards checkbox.
3. On the left hand side, expand Examples -&gt; Hyades Logging. Select Log Parser 
Sample. Click Next.
4. Accept all defaults and click Finish.

A progress bar appears for a split second, then disappears. All the buttons get 
re-enabled, and the wizard doesn't go away. The .log file content is included 
below.

I noticed that all of the examples wizards from Hyades are broken (same 
exception is being thrown for each). I also noticed that the AWT/Swing examples 
are also broken, although a different exception is produced for the jdt 
examples than the Hyades ones. I'm not sure if this is just a coincidence (or 
if there's actually something wrong in Eclipse itself), but opening this bug 
just in case.

!SESSION Mar 16, 2004 10:23:17.297 ---------------------------------------------
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cndev-20040128 (JIT enabled: 
jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -shared D:\H30-20040316\eclipse\eclipse.exe -shared 
758_6c -vm D:\H30-20040316\eclipse\jre\bin\javaw.exe -vmargs -cp D:\H30-20040316
\eclipse\startup.jar org.eclipse.core.launcher.Main
!ENTRY org.eclipse.osgi Mar 16, 2004 10:23:17.297
!MESSAGE Bundle reference:file:d:/H30-
20040316/eclipse/plugins/org.eclipse.hyades.logging.adapter.ui.doc.user_1.3.0/ 
[110] was not resolved
!ENTRY org.eclipse.hyades.ui 1 0 Mar 16, 2004 10:23:49.16
!MESSAGE org.eclipse.core.internal.resources.ResourceException: Invalid project 
description.
!STACK 1

!SUBENTRY 1 org.eclipse.core.resources 4 77 Mar 16, 2004 10:23:49.31
!MESSAGE Invalid project description.
!SUBENTRY 2 org.eclipse.core.runtime 0 0 Mar 16, 2004 10:23:49.31
!MESSAGE 
!SUBENTRY 2 org.eclipse.core.resources 4 77 Mar 16, 2004 10:23:49.31
!MESSAGE D:/H30-20040316/eclipse/workspace/ and D:/H30-
20040316/eclipse/workspace/ overlap.
Fix for M8
This was broken by a recent change from the deprecated Platform.getLocation() 
method to the recommended Platform.getInstanceLocation(). However, these have 
different return values (the latter returns a Location rather than an IPath). 
This caused the .equals() to return false and triggered a series of failures.

Since then, Platform.getLocation() has been undeprecated. Switching back to the 
original.

Fixed.
Confirmed as fixed. Closing bug...
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54967" />
    <CreationDate amount="2004-03-16 10:45:00 -0500" />
    <DupId amount="20409" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] Export/Import of Window Preferences removes Java.ClassPath preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) Start an Eclipse session with a new workspace;</Line>
          <Line>2) Select Window/Preferences/Export (from the parent dialog, not a subordinate</Line>
          <Line>page), and save the workspace preferences to a known location;</Line>
          <Line>3) Start another Eclipse session with a new workspace;</Line>
          <Line>4) Select Window/Preferences/Java/Classpath Variables, and note the defined</Line>
          <Line>classpath variables and their values;</Line>
          <Line>5) Select Window/Preferences/Import (from the parent dialog, not a subordinate</Line>
          <Line>page), and specify the workspace preferences previously exported.</Line>
          <Line>6) Select Window/Preferences/Java/Classpath Variables, and note that all</Line>
          <Line>variables but one has been deleted.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Repro and description
----------------------
1) Start an Eclipse session with a new workspace;
2) Select Window/Preferences/Export (from the parent dialog, not a subordinate 
page), and save the workspace preferences to a known location;
3) Start another Eclipse session with a new workspace;
4) Select Window/Preferences/Java/Classpath Variables, and note the defined 
classpath variables and their values;
5) Select Window/Preferences/Import (from the parent dialog, not a subordinate 
page), and specify the workspace preferences previously exported.
6) Select Window/Preferences/Java/Classpath Variables, and note that all 
variables but one has been deleted.

This is an issue for us, as it prevents the team from sharing "standard" 
preference settings for all members of the team.

  -- Todd
The classpath variables are stored in the preferences.
I think what we need is to have a selective export or import, where you can
choose the settings to import/export.
I filed bug 54970 with ideas about the seletive import and export of preferences.
Note that there are some subtle but significant points in this bug.

If you save Window Preferences prior to examining 
Window/Preferences/Java/Classpath Variables, only the JUNIT classpath variable 
will be saved.  Should you examine the Classpath Variables preferences prior 
to saving, those will stored as preferences.

Even if you save only the preferences prior to examining the ClassPath 
Variables *and* remove the JUNIT classpath variable from the preference and 
restore that, still the JUNIT classpath variable will be blown away from the 
preferences.
I am going to mark this bug as a duplicate of Bug 20409.  Append any comments 
you feel are missing to that bug.  Thanks. 

*** This bug has been marked as a duplicate of 20409 ***
Moving duplicate resolved (but not fixed) bugs to verified for M8.</WithStack>
    <WithOutStack>Repro and description
----------------------
1) Start an Eclipse session with a new workspace;
2) Select Window/Preferences/Export (from the parent dialog, not a subordinate 
page), and save the workspace preferences to a known location;
3) Start another Eclipse session with a new workspace;
4) Select Window/Preferences/Java/Classpath Variables, and note the defined 
classpath variables and their values;
5) Select Window/Preferences/Import (from the parent dialog, not a subordinate 
page), and specify the workspace preferences previously exported.
6) Select Window/Preferences/Java/Classpath Variables, and note that all 
variables but one has been deleted.

This is an issue for us, as it prevents the team from sharing "standard" 
preference settings for all members of the team.

  -- Todd
The classpath variables are stored in the preferences.
I think what we need is to have a selective export or import, where you can
choose the settings to import/export.
I filed bug 54970 with ideas about the seletive import and export of preferences.
Note that there are some subtle but significant points in this bug.

If you save Window Preferences prior to examining 
Window/Preferences/Java/Classpath Variables, only the JUNIT classpath variable 
will be saved.  Should you examine the Classpath Variables preferences prior 
to saving, those will stored as preferences.

Even if you save only the preferences prior to examining the ClassPath 
Variables *and* remove the JUNIT classpath variable from the preference and 
restore that, still the JUNIT classpath variable will be blown away from the 
preferences.
I am going to mark this bug as a duplicate of Bug 20409.  Append any comments 
you feel are missing to that bug.  Thanks. 

*** This bug has been marked as a duplicate of 20409 ***
Moving duplicate resolved (but not fixed) bugs to verified for M8.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54968" />
    <CreationDate amount="2004-03-16 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[javadoc][select] ICodeAssist#codeSelect doesn't work for member references in javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="11" end="33" />
        <code>/** @see #method() */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="34" end="62" />
        <code>void method() {
	method();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="2">
        <Lines>
          <Line>- set the caret into #method() and hit F3 -&gt; beep, not found</Line>
          <Line>- set the caret into method(); and hit F3 -&gt; opens declaration</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- new ast selection node for javadoc</Line>
          <Line>- overiding of JavadocParser</Line>
          <Line>- improvement of inference code of SelectionEngine</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- org.eclipse.jdt.core.tests.compiler.parser.SelectionJavadocTests</Line>
          <Line>- org.eclipse.jdt.core.tests.model.SelectionJavadocModelTests</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20040310:

/** @see #method() */
void method() {
	method();
}

- set the caret into #method() and hit F3 -&gt; beep, not found
- set the caret into method(); and hit F3 -&gt; opens declaration

ICodeAssist#codeSelect works for type references in javadocs, but not for
members. To watch it, set a breakpoint in
SelectionConverter#codeResolve(IJavaElement, ITextSelection) and press F3.
Currently code select work for type with a kind of trick.
If no proposals are founds then we try to find a type with the same name as 
the selection token.

To be able to perform methods code selection we need to add a real javadoc 
support.
  - new ast selection node for javadoc
  - overiding of JavadocParser
  - improvement of inference code of SelectionEngine

To risky to do that before 3.0

Post 3.0

*** Bug 72192 has been marked as a duplicate of this bug. ***
*** Bug 22043 has been marked as a duplicate of this bug. ***
*** Bug 38833 has been marked as a duplicate of this bug. ***
Can this be reopened for 3.1?
*** Bug 75120 has been marked as a duplicate of this bug. ***
Reopened for 3.1.
*** Bug 75919 has been marked as a duplicate of this bug. ***
I'd really like to see this fixed.
*** Bug 87747 has been marked as a duplicate of this bug. ***
Created attachment 18976
Patch for the implementation of this functionality
Fixed.

Now code selection is allowed in Javadoc wherever a reference can be specified.
That means @see, @link, @linkplain, @throws, @exception, @param and @value tags.

[jdt-core-internal]
Test cases created in new classes:
 - org.eclipse.jdt.core.tests.compiler.parser.SelectionJavadocTests
 - org.eclipse.jdt.core.tests.model.SelectionJavadocModelTests

*** Bug 88587 has been marked as a duplicate of this bug. ***
Nice, thanks.

Verified in I20050330-0500</WithStack>
    <WithOutStack>I20040310:

/** @see #method() */
void method() {
	method();
}

- set the caret into #method() and hit F3 -&gt; beep, not found
- set the caret into method(); and hit F3 -&gt; opens declaration

ICodeAssist#codeSelect works for type references in javadocs, but not for
members. To watch it, set a breakpoint in
SelectionConverter#codeResolve(IJavaElement, ITextSelection) and press F3.
Currently code select work for type with a kind of trick.
If no proposals are founds then we try to find a type with the same name as 
the selection token.

To be able to perform methods code selection we need to add a real javadoc 
support.
  - new ast selection node for javadoc
  - overiding of JavadocParser
  - improvement of inference code of SelectionEngine

To risky to do that before 3.0

Post 3.0

*** Bug 72192 has been marked as a duplicate of this bug. ***
*** Bug 22043 has been marked as a duplicate of this bug. ***
*** Bug 38833 has been marked as a duplicate of this bug. ***
Can this be reopened for 3.1?
*** Bug 75120 has been marked as a duplicate of this bug. ***
Reopened for 3.1.
*** Bug 75919 has been marked as a duplicate of this bug. ***
I'd really like to see this fixed.
*** Bug 87747 has been marked as a duplicate of this bug. ***
Created attachment 18976
Patch for the implementation of this functionality
Fixed.

Now code selection is allowed in Javadoc wherever a reference can be specified.
That means @see, @link, @linkplain, @throws, @exception, @param and @value tags.

[jdt-core-internal]
Test cases created in new classes:
 - org.eclipse.jdt.core.tests.compiler.parser.SelectionJavadocTests
 - org.eclipse.jdt.core.tests.model.SelectionJavadocModelTests

*** Bug 88587 has been marked as a duplicate of this bug. ***
Nice, thanks.

Verified in I20050330-0500</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54969" />
    <CreationDate amount="2004-03-16 11:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>assertion failed when copying class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098350">
        <Exception>org.eclipse.jdt.internal.corext.Assert$AssertionFailedException</Exception>
        <Reason>assertion failed;</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.Assert$AssertionFailedException.&lt;init&gt;(Assert.java:55)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:136)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:121)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getReferences(CreateCopyOfCompilationUnitChange.java:123)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.createChangeManager(CreateCopyOfCompilationUnitChange.java:93)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getCopiedFileSource(CreateCopyOfCompilationUnitChange.java:83)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getOldFile(CreateCopyOfCompilationUnitChange.java:65)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange.perform(CreateFileChange.java:74)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.CompositeChange.perform(CompositeChange.java:251)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange.access$1(ValidationStateChange.java:1)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange$2.run(ValidationStateChange.java:174)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)</Frame>
          <Frame depth="15">org.eclipse.core.internal.resources.Workspace.run(Workspace.java)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange.perform(ValidationStateChange.java:177)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg.CopyRefactoring$1.perform(CopyRefactoring.java:111)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:192)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)</Frame>
          <Frame depth="23">org.eclipse.core.internal.resources.Workspace.run(Workspace.java)</Frame>
          <Frame depth="24">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:222)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:164)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:65)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)</Frame>
          <Frame depth="31">org.eclipse.core.internal.resources.Workspace.run(Workspace.java)</Frame>
          <Frame depth="32">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)</Frame>
          <Frame depth="33">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:50)</Frame>
          <Frame depth="35">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
          <Frame depth="36">org.eclipse.jface.operation.ModalContext.run(ModalContext.java)</Frame>
          <Frame depth="37">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:400)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:90)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgCopyStarter.run(ReorgCopyStarter.java:70)</Frame>
          <Frame depth="40">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropCopy(SelectionTransferDropAdapter.java:247)</Frame>
          <Frame depth="41">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:132)</Frame>
          <Frame depth="42">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:112)</Frame>
          <Frame depth="43">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:79)</Frame>
          <Frame depth="44">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java)</Frame>
          <Frame depth="50">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:587)</Frame>
          <Frame depth="51">org.eclipse.swt.dnd.DropTarget.drag_data_received(DropTarget.java:361)</Frame>
          <Frame depth="52">org.eclipse.swt.dnd.DropTarget.Drag_Data_Received(DropTarget.java:244)</Frame>
          <Frame depth="53">org.eclipse.swt.internal.gtk.OS.gtk_drag_get_data(Native Method)</Frame>
          <Frame depth="54">org.eclipse.swt.dnd.DropTarget.drag_drop(DropTarget.java:417)</Frame>
          <Frame depth="55">org.eclipse.swt.dnd.DropTarget.Drag_Drop(DropTarget.java:251)</Frame>
          <Frame depth="56">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.eventProc(Display.java)</Frame>
          <Frame depth="58">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)</Frame>
          <Frame depth="63">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)</Frame>
          <Frame depth="65">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="70">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="71">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.basicRun(Main.java:305)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.run(Main.java:745)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.main(Main.java:713)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20040310 + pluginexport 0315

Dragged a java file to its same package holding ctrl (copy). Got this:

org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: assertion failed;
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at
org.eclipse.jdt.internal.corext.Assert$AssertionFailedException.&lt;init&gt;(Assert.java:55)
at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:136)
at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:121)
at
org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getReferences(CreateCopyOfCompilationUnitChange.java:123)
at
org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.createChangeManager(CreateCopyOfCompilationUnitChange.java:93)
at
org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getCopiedFileSource(CreateCopyOfCompilationUnitChange.java:83)
at
org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange.getOldFile(CreateCopyOfCompilationUnitChange.java:65)
at
org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange.perform(CreateFileChange.java:74)
at
org.eclipse.jdt.internal.corext.refactoring.CompositeChange.perform(CompositeChange.java:251)
at
org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange.access$1(ValidationStateChange.java:1)
at
org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange$2.run(ValidationStateChange.java:174)
at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)
at
org.eclipse.jdt.internal.corext.refactoring.changes.ValidationStateChange.perform(ValidationStateChange.java:177)
at
org.eclipse.jdt.internal.corext.refactoring.reorg.CopyRefactoring$1.perform(CopyRefactoring.java:111)
at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:192)
at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)
at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:222)
at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:164)
at
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:65)
at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3182)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3139)
at
org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:50)
at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
at org.eclipse.jface.operation.ModalContext.run(ModalContext.java)
at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:400)
at
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:90)
at
org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgCopyStarter.run(ReorgCopyStarter.java:70)
at
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropCopy(SelectionTransferDropAdapter.java:247)
at
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:132)
at
org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:112)
at
org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:79)
at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java)
at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:587)
at org.eclipse.swt.dnd.DropTarget.drag_data_received(DropTarget.java:361)
at org.eclipse.swt.dnd.DropTarget.Drag_Data_Received(DropTarget.java:244)
at org.eclipse.swt.internal.gtk.OS.gtk_drag_get_data(Native Method)
at org.eclipse.swt.dnd.DropTarget.drag_drop(DropTarget.java:417)
at org.eclipse.swt.dnd.DropTarget.Drag_Drop(DropTarget.java:251)
at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
at org.eclipse.swt.widgets.Display.eventProc(Display.java)
at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1451)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1422)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:258)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:48)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:260)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:173)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
at java.lang.reflect.Method.invoke(Method.java:386)
at org.eclipse.core.launcher.Main.basicRun(Main.java:305)
at org.eclipse.core.launcher.Main.run(Main.java:745)
at org.eclipse.core.launcher.Main.main(Main.java:713)
Could not reproduce. The code searches for occurrences and constructors of the
copied type. The assertion fails because references were found in multiple
files, although the search scope was restricted to the declaring CU. Maybe an
erroneous search due to missing project references.

Marking as WORKSFORME. Reopen if this happens again.</WithStack>
    <WithOutStack>I20040310 + pluginexport 0315

Dragged a java file to its same package holding ctrl (copy). Got this:


Could not reproduce. The code searches for occurrences and constructors of the
copied type. The assertion fails because references were found in multiple
files, although the search scope was restricted to the declaring CU. Maybe an
erroneous search due to missing project references.

Marking as WORKSFORME. Reopen if this happens again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54970" />
    <CreationDate amount="2004-03-16 11:25:00 -0500" />
    <DupId amount="74473" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Preferences] Selective import and export of preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20040316

The current import and export functionality for preferences should allow the
user to select which preferences to export or import.
What seems important to me:

- It should be possible for the preference page provider control which the
settings are to be exported. This can be either a subset of the available
preferences (e.g. to avoid exporting deprecated settings) or additional settings
not stored in the preference store (e.g. we keep the code temaples in a separate
store, but it would be good to allow them to participate at the export)

- The UI should allow to group settings in a hierarchical way (e.g. a parent
node 'code style'), independend of the preference page or preference store they
exist (e.g. we have the UI for the jdt.core and jdt.ui settings)

- We can't present the preference values and keys to the user. They are mostly
internal, complicated names, not translated, kept stable for compatibility reasons. 

- Settings should always be stored with a version number. When importing
settings from a very old workspace, there should be code that brings the
settings to the most current form.

I was thinking it would make sense to have a new preference export / import
extendsion point where each plugin can hook in it's own page in the export UI to
allow the user to select the preferences to export and that returns an XML
string to be stored.
More preferences bugs.... 
This will be part of the work described in Bug 39965
I have released a prototype export dialog to HEAD. I will tidy this up in the 
next day or so but this should be a good indication fo where we are going.
Is this fixed for M2? 
No - there is just a first pass of the dialog available for comment.
Tod, are you sure that Bug 39965 is the correct reference?
I have no idea where I got that number from... the plan it is Bug 71124 
Marking as a dup of Bug 74473 so that the discussion can take place in one spot

*** This bug has been marked as a duplicate of 74473 ***</WithStack>
    <WithOutStack>20040316

The current import and export functionality for preferences should allow the
user to select which preferences to export or import.
What seems important to me:

- It should be possible for the preference page provider control which the
settings are to be exported. This can be either a subset of the available
preferences (e.g. to avoid exporting deprecated settings) or additional settings
not stored in the preference store (e.g. we keep the code temaples in a separate
store, but it would be good to allow them to participate at the export)

- The UI should allow to group settings in a hierarchical way (e.g. a parent
node 'code style'), independend of the preference page or preference store they
exist (e.g. we have the UI for the jdt.core and jdt.ui settings)

- We can't present the preference values and keys to the user. They are mostly
internal, complicated names, not translated, kept stable for compatibility reasons. 

- Settings should always be stored with a version number. When importing
settings from a very old workspace, there should be code that brings the
settings to the most current form.

I was thinking it would make sense to have a new preference export / import
extendsion point where each plugin can hook in it's own page in the export UI to
allow the user to select the preferences to export and that returns an XML
string to be stored.
More preferences bugs.... 
This will be part of the work described in Bug 39965
I have released a prototype export dialog to HEAD. I will tidy this up in the 
next day or so but this should be a good indication fo where we are going.
Is this fixed for M2? 
No - there is just a first pass of the dialog available for comment.
Tod, are you sure that Bug 39965 is the correct reference?
I have no idea where I got that number from... the plan it is Bug 71124 
Marking as a dup of Bug 74473 so that the discussion can take place in one spot

*** This bug has been marked as a duplicate of 74473 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54971" />
    <CreationDate amount="2004-03-16 11:25:00 -0500" />
    <DupId amount="12743" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Package explorer does not update correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="12">
        <Lines>
          <Line>- I fixed a bug where deleting read-only files caused a problem.</Line>
          <Line>- we dicovered a bug where a wrong delta was issues when copying package. This</Line>
          <Line>will be fixed for next I-Build.</Line>
          <Line>I can reproduce it almost everytime I delete a file.  :)</Line>
          <Line>Hmmm, Sean, that's interesting now since in my current version it hasn't turned</Line>
          <Line>up yet again. What exact revision are you using? Could you try the debug</Line>
          <Line>options, Erich postet? I will attach the config file...</Line>
          <Line>Created attachment 10460</Line>
          <Line>Debug options file</Line>
          <Line>I'll try the debug options.  I'm running M8.</Line>
          <Line>I also experienced this. We have read only files because of a team plug-in.</Line>
          <Line>Currently I'm using I20040512 and havn't found it yet in this build.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Team Project checked out</Line>
          <Line>- Create new class in default package</Line>
          <Line>- Do synchronize (don't check in the class)</Line>
          <Line>- Delete the default package.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- copy org.eclipsec.core.runtime from my current workspace to c:\desktop</Line>
          <Line>- start new workspace</Line>
          <Line>- File -&gt; Import -&gt; Existing project -&gt; c:\desktop\org.eclipse.core.runtime</Line>
          <Line>- switch to Java perspective</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- I cannot reproduce this with today's noon build. (i0610-1200)</Line>
          <Line>- using M9 you can close your project and then re-open it to remove the folders</Line>
          <Line>- see Jeem's comments in bug 12743</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am using 3.0M7. To reproduce, try to restore a file from the attic. For me it 
will 100% not show up in the package explorer - unless I close and reopen the 
project anfterwards. Even a refresh on the project does not change anything.
Addition to that: The actual problem does not seem to be CVS. When deleting 
files I also get the problem, that the file icon is not removed from the package 
explorer. However when I rightclick on the file icon, the delete menuitem is 
greyed out after deletion. So the file is gone but it still does show up. 
Changing the title to reflect the situation correctly. Moving to JDT/UI.
Eric, how do you delete the file ? Are you using the delete action from the 
Navigator or Package Explorer or are you deleting the file directly on the 
file system ? Deleting the file from withing Eclipse works for me without any 
problem.
I delete it from within Eclipse. (context menu of the file)
Erich, can you please investigate for M9.
This works for me and there are no similar known problems.

Can you please provide more specific information:
* does it happen with any file (.java, .txt)?
* can you reproduce it in a fresh project with a newly created file?
* is there anything special about the file (read only), anything special about 
the project
Ok, I could validate this bug now on M4 and M8. Example: I select Refactor -&gt; 
Rename on a package declaration and choose to update references. The references 
are updated, the folder is moved, *but* the "old folder" remains visible in the 
package explorer - even when I "refresh". Only reopening the project makes it 
disappear. M8 showed me a question mark on the "ghost folder" - I am not sure if 
this was due to the fact that this project is a shared project or not.
In general I am experiencing this with any kind of ressources, however not 
always, only sometimes, but then reproducably.
I could not reproduce it with a fresh file. Maybe it has to do with the CVS 
feature. I am not sure however.
Since we cannot reproduce the problem, can you reproduce it with some tracing 
options enabled. The option of interest is for org.eclipse.jdt.core 
debug/javadelta.

To enable the tracing you can call:
eclipse.exe -debug ${some-path}/.options

Here is the options file you want to use with the 
org.eclipse.jdt.core.debug/javadelta setting enabled.

# Turn on debug tracing for org.eclipse.jdt.core plugin
org.eclipse.jdt.core/debug=true

# Reports buffer manager activity
org.eclipse.jdt.core/debug/buffermanager=false

# Reports incremental builder activity : nature of build, built state reading, 
indictment process
org.eclipse.jdt.core/debug/builder=false

# Reports compiler activity
org.eclipse.jdt.core/debug/compiler=false

# Reports codeassist completion activity : recovered unit, inferred completions
org.eclipse.jdt.core/debug/completion=false

# Reports classpath variable initialization, and classpath container resolution
org.eclipse.jdt.core/debug/cpresolution=false

# Report type hierarchy connections, refreshes and deltas
org.eclipse.jdt.core/debug/hierarchy=false

# Reports background indexer activity: indexing, saving index file, index 
queries
org.eclipse.jdt.core/debug/indexmanager=false

# Print notified Java element deltas
org.eclipse.jdt.core/debug/javadelta=true
org.eclipse.jdt.core/debug/javadelta/verbose=true

# Reports Java model elements opening/closing
org.eclipse.jdt.core/debug/javamodel=false

# Reports post actions addition/run
org.eclipse.jdt.core/debug/postaction=false

# Reports java search activity
org.eclipse.jdt.core/debug/search=false

# Reports open on selection activity : recovered unit, inferred selection
org.eclipse.jdt.core/debug/selection=false

# Reports access to zip and jar files through the Java model
org.eclipse.jdt.core/debug/zipaccess=false
I also experience this bug.  I can reproduce it exactly as Eric Bodden does in
comment # 6.
That's a good thing cause I was going a bit crazy about that one already. It 
seems to really hard to track down and occur only under rare circumstances. 
Sean, do you think you would be able to reproduce it somehow?
A couple of remarks:

- I fixed a bug where deleting read-only files caused a problem.
- we dicovered a bug where a wrong delta was issues when copying package. This
  will be fixed for next I-Build.
I can reproduce it almost everytime I delete a file.  :)
Hmmm, Sean, that's interesting now since in my current version it hasn't turned 
up yet again. What exact revision are you using? Could you try the debug 
options, Erich postet? I will attach the config file...
Created attachment 10460
Debug options file
I'll try the debug options.  I'm running M8.
I also experienced this. We have read only files because of a team plug-in. 
Currently I'm using I20040512 and havn't found it yet in this build.

Ok, I can reproduce this now 100% on M4 as follows:
- Team Project checked out
- Create new class in default package
- Do synchronize (don't check in the class)
- Delete the default package.

-&gt; The nodes fot the classes remain. On project close/reopen, they are gone.
Eric, do you use Watch/Edit mode ?
Eric please try to reproduce the problem on M9
@Dirk: No, I don't.
@Erich: Yes, I will try asap. By the way: The debug log seemed to show nothing 
unusual when I reproduced it on M4.
I also experienced this. I'm using M9. I was using M8, with my projects shared
in CVS. When I installed M9, and run it one time (only to see modifications)...
Then I closed eclipse and copy all my projects from directory "workspace" to the
newly created "workspace" dir in M9. Then I started eclipse again and import one
project to the new workspace. In the Java perspective I opened in the Package
Explorer the project and it showed me a lot of CVS folders like it was packages,
OK, its was expected to see it. Then I go to pop-up menu and choose Team -&gt;
Share Project. OK, it have shared the project, but the CVS folders still there,
even when I refresh the view it remain there. So I go to pop-up menu and choose
Team -&gt;  Disconnect, and on the showed window I choose "Also delete CVS .....".
The eclipse delete it from the file system, but the CVS folders still there. I
discovered that in the Navigator view the CVS folders aren't showed, but the
remain in the Package Explorer, even with refresh. The only option is to close
the project and reopen it. This way the CVS folders are "cleaned" from the
Package Explorer. I think this way you can reproduce this bug. 
additional fixes related to updating the package explorer (incorrect Java 
model deltas) went into RC1.

without a reproducable case we cannot verify that this problem is fixed.
keeping the bug open but moving it forward to RC2. Please try again on RC1.
Erich,
Can't you reproduce the bug with the instructions on comment #20 ?
The issue seems to be that the JavaModel doesn't hide team private members.
The CVS folders are marked as team private (IResource.isTeamPrivateMember).
Team private members are supposed to be hidden from clients, but somehow the 
JavaModel surfaces them as resources.

Clients can control whether they want to get team private members when asking 
for them with the constant INCLUDE_TEAM_PRIVATE_MEMBERS.

Moving to JDT core - if trivial to fix then this would be a candidate for RC2.
Team private members are not offered until explicitly asking for them afaik. 
This means we should never see these for free, and should not have to filter 
them ever. Suspecting some platform bug were such resources would be leaking 
to us.

Moving to platform for further comment.
I can reproduce this with M9.

My steps:
- copy org.eclipsec.core.runtime from my current workspace to c:\desktop
- start new workspace
- File -&gt; Import -&gt; Existing project -&gt; c:\desktop\org.eclipse.core.runtime
- switch to Java perspective

-&gt; Note that the CVS folders appear in the Packages Explorer view

- context menu: Team -&gt; Share Project -&gt; yes use existing info

-&gt; Note that CVS folders still appear in Packages Explorer

Note:
- I cannot reproduce this with today's noon build. (i0610-1200)
- using M9 you can close your project and then re-open it to remove the folders
- see Jeem's comments in bug 12743

*** This bug has been marked as a duplicate of 12743 ***
So am I right now that this problem is assumed to have been identified (bug 
#12743) and is going to be fixed before the final release of 3.0 ?
There are no plans to change the current behaviour.  Please see comments in
referenced bug report.
Yes, bug 12743 is classified as RESOLVED_WONTFIX at the moment. So in a nutshell 
that means that people will have to live with this bug (and from the user point 
of view, that's what it is - regardless its cause) presumably forever? Is there 
really no workaround?
The work-around is to close and then re-open the project. 
Please see bug 12743 comment #2.

Just another one being confused by that:
news://news.eclipse.org:119/cb6s44$k1k$1@eclipse.org</WithStack>
    <WithOutStack>I am using 3.0M7. To reproduce, try to restore a file from the attic. For me it 
will 100% not show up in the package explorer - unless I close and reopen the 
project anfterwards. Even a refresh on the project does not change anything.
Addition to that: The actual problem does not seem to be CVS. When deleting 
files I also get the problem, that the file icon is not removed from the package 
explorer. However when I rightclick on the file icon, the delete menuitem is 
greyed out after deletion. So the file is gone but it still does show up. 
Changing the title to reflect the situation correctly. Moving to JDT/UI.
Eric, how do you delete the file ? Are you using the delete action from the 
Navigator or Package Explorer or are you deleting the file directly on the 
file system ? Deleting the file from withing Eclipse works for me without any 
problem.
I delete it from within Eclipse. (context menu of the file)
Erich, can you please investigate for M9.
This works for me and there are no similar known problems.

Can you please provide more specific information:
* does it happen with any file (.java, .txt)?
* can you reproduce it in a fresh project with a newly created file?
* is there anything special about the file (read only), anything special about 
the project
Ok, I could validate this bug now on M4 and M8. Example: I select Refactor -&gt; 
Rename on a package declaration and choose to update references. The references 
are updated, the folder is moved, *but* the "old folder" remains visible in the 
package explorer - even when I "refresh". Only reopening the project makes it 
disappear. M8 showed me a question mark on the "ghost folder" - I am not sure if 
this was due to the fact that this project is a shared project or not.
In general I am experiencing this with any kind of ressources, however not 
always, only sometimes, but then reproducably.
I could not reproduce it with a fresh file. Maybe it has to do with the CVS 
feature. I am not sure however.
Since we cannot reproduce the problem, can you reproduce it with some tracing 
options enabled. The option of interest is for org.eclipse.jdt.core 
debug/javadelta.

To enable the tracing you can call:
eclipse.exe -debug ${some-path}/.options

Here is the options file you want to use with the 
org.eclipse.jdt.core.debug/javadelta setting enabled.

# Turn on debug tracing for org.eclipse.jdt.core plugin
org.eclipse.jdt.core/debug=true

# Reports buffer manager activity
org.eclipse.jdt.core/debug/buffermanager=false

# Reports incremental builder activity : nature of build, built state reading, 
indictment process
org.eclipse.jdt.core/debug/builder=false

# Reports compiler activity
org.eclipse.jdt.core/debug/compiler=false

# Reports codeassist completion activity : recovered unit, inferred completions
org.eclipse.jdt.core/debug/completion=false

# Reports classpath variable initialization, and classpath container resolution
org.eclipse.jdt.core/debug/cpresolution=false

# Report type hierarchy connections, refreshes and deltas
org.eclipse.jdt.core/debug/hierarchy=false

# Reports background indexer activity: indexing, saving index file, index 
queries
org.eclipse.jdt.core/debug/indexmanager=false

# Print notified Java element deltas
org.eclipse.jdt.core/debug/javadelta=true
org.eclipse.jdt.core/debug/javadelta/verbose=true

# Reports Java model elements opening/closing
org.eclipse.jdt.core/debug/javamodel=false

# Reports post actions addition/run
org.eclipse.jdt.core/debug/postaction=false

# Reports java search activity
org.eclipse.jdt.core/debug/search=false

# Reports open on selection activity : recovered unit, inferred selection
org.eclipse.jdt.core/debug/selection=false

# Reports access to zip and jar files through the Java model
org.eclipse.jdt.core/debug/zipaccess=false
I also experience this bug.  I can reproduce it exactly as Eric Bodden does in
comment # 6.
That's a good thing cause I was going a bit crazy about that one already. It 
seems to really hard to track down and occur only under rare circumstances. 
Sean, do you think you would be able to reproduce it somehow?
A couple of remarks:

- I fixed a bug where deleting read-only files caused a problem.
- we dicovered a bug where a wrong delta was issues when copying package. This
  will be fixed for next I-Build.
I can reproduce it almost everytime I delete a file.  :)
Hmmm, Sean, that's interesting now since in my current version it hasn't turned 
up yet again. What exact revision are you using? Could you try the debug 
options, Erich postet? I will attach the config file...
Created attachment 10460
Debug options file
I'll try the debug options.  I'm running M8.
I also experienced this. We have read only files because of a team plug-in. 
Currently I'm using I20040512 and havn't found it yet in this build.

Ok, I can reproduce this now 100% on M4 as follows:
- Team Project checked out
- Create new class in default package
- Do synchronize (don't check in the class)
- Delete the default package.

-&gt; The nodes fot the classes remain. On project close/reopen, they are gone.
Eric, do you use Watch/Edit mode ?
Eric please try to reproduce the problem on M9
@Dirk: No, I don't.
@Erich: Yes, I will try asap. By the way: The debug log seemed to show nothing 
unusual when I reproduced it on M4.
I also experienced this. I'm using M9. I was using M8, with my projects shared
in CVS. When I installed M9, and run it one time (only to see modifications)...
Then I closed eclipse and copy all my projects from directory "workspace" to the
newly created "workspace" dir in M9. Then I started eclipse again and import one
project to the new workspace. In the Java perspective I opened in the Package
Explorer the project and it showed me a lot of CVS folders like it was packages,
OK, its was expected to see it. Then I go to pop-up menu and choose Team -&gt;
Share Project. OK, it have shared the project, but the CVS folders still there,
even when I refresh the view it remain there. So I go to pop-up menu and choose
Team -&gt;  Disconnect, and on the showed window I choose "Also delete CVS .....".
The eclipse delete it from the file system, but the CVS folders still there. I
discovered that in the Navigator view the CVS folders aren't showed, but the
remain in the Package Explorer, even with refresh. The only option is to close
the project and reopen it. This way the CVS folders are "cleaned" from the
Package Explorer. I think this way you can reproduce this bug. 
additional fixes related to updating the package explorer (incorrect Java 
model deltas) went into RC1.

without a reproducable case we cannot verify that this problem is fixed.
keeping the bug open but moving it forward to RC2. Please try again on RC1.
Erich,
Can't you reproduce the bug with the instructions on comment #20 ?
The issue seems to be that the JavaModel doesn't hide team private members.
The CVS folders are marked as team private (IResource.isTeamPrivateMember).
Team private members are supposed to be hidden from clients, but somehow the 
JavaModel surfaces them as resources.

Clients can control whether they want to get team private members when asking 
for them with the constant INCLUDE_TEAM_PRIVATE_MEMBERS.

Moving to JDT core - if trivial to fix then this would be a candidate for RC2.
Team private members are not offered until explicitly asking for them afaik. 
This means we should never see these for free, and should not have to filter 
them ever. Suspecting some platform bug were such resources would be leaking 
to us.

Moving to platform for further comment.
I can reproduce this with M9.

My steps:
- copy org.eclipsec.core.runtime from my current workspace to c:\desktop
- start new workspace
- File -&gt; Import -&gt; Existing project -&gt; c:\desktop\org.eclipse.core.runtime
- switch to Java perspective

-&gt; Note that the CVS folders appear in the Packages Explorer view

- context menu: Team -&gt; Share Project -&gt; yes use existing info

-&gt; Note that CVS folders still appear in Packages Explorer

Note:
- I cannot reproduce this with today's noon build. (i0610-1200)
- using M9 you can close your project and then re-open it to remove the folders
- see Jeem's comments in bug 12743

*** This bug has been marked as a duplicate of 12743 ***
So am I right now that this problem is assumed to have been identified (bug 
#12743) and is going to be fixed before the final release of 3.0 ?
There are no plans to change the current behaviour.  Please see comments in
referenced bug report.
Yes, bug 12743 is classified as RESOLVED_WONTFIX at the moment. So in a nutshell 
that means that people will have to live with this bug (and from the user point 
of view, that's what it is - regardless its cause) presumably forever? Is there 
really no workaround?
The work-around is to close and then re-open the project. 
Please see bug 12743 comment #2.

Just another one being confused by that:
news://news.eclipse.org:119/cb6s44$k1k$1@eclipse.org</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54972" />
    <CreationDate amount="2004-03-16 11:46:00 -0500" />
    <DupId amount="47193" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>HCR not performed until the end of team refresh</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20040310

I had a shedule team refresh running in the background, I modified the type I
was debugging, saved it. The file was marked as saved in the UI (no more '*' in
the editor tab), but the HCR, and the drop to frame, only occurs when the team
refresh terminated.
I believe that HCR/drop to frame is triggered by the build. It looks like the 
build was blocked by the team refresh.

Moving to Platform/Core for comments.
This is expected.  We only run a build if no threads are holding locks on
resources. In most cases this would cause the build to waste effort (and be in
contention with other threads).
Re-reading this bug report reminded me that I already filed almost the same
problem :) (bug 47193)


*** This bug has been marked as a duplicate of 47193 ***</WithStack>
    <WithOutStack>I20040310

I had a shedule team refresh running in the background, I modified the type I
was debugging, saved it. The file was marked as saved in the UI (no more '*' in
the editor tab), but the HCR, and the drop to frame, only occurs when the team
refresh terminated.
I believe that HCR/drop to frame is triggered by the build. It looks like the 
build was blocked by the team refresh.

Moving to Platform/Core for comments.
This is expected.  We only run a build if no threads are holding locks on
resources. In most cases this would cause the build to waste effort (and be in
contention with other threads).
Re-reading this bug report reminded me that I already filed almost the same
problem :) (bug 47193)


*** This bug has been marked as a duplicate of 47193 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54973" />
    <CreationDate amount="2004-03-16 12:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[browser] Default WindowEvent to handle normal window open case - feature request</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="1992" end="2018" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2019" end="2052" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2053" end="2087" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2088" end="2120" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2121" end="2154" />
        <code>import org.eclipse.swt.browser.*;</code>
      </source_code>
      <source_code type="class">
        <location start="2156" end="4362" />
        <code>public class PRBrowser {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main Window");
		shell.setLayout(new FillLayout());
		Browser browser = new Browser(shell, SWT.NONE);
		initialize(display, browser);
		shell.open();
		browser.setUrl("http://www.eclipse.org");
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}

	static void initialize(final Display display, Browser browser) {
		browser.addOpenWindowListener(new OpenWindowListener() {
			public void open(WindowEvent event) {
				// Certain platforms can provide a default 
full browser.
				// simply return in that case if the 
application prefers
				// the default full browser to the embedded 
one set below.
				if (!event.required)
					return;

				// Embed the new window
				Shell shell = new Shell(display);
				shell.setText("New Window");
				shell.setLayout(new FillLayout());
				Browser browser = new Browser(shell, SWT.NONE);
				initialize(display, browser);
				event.browser = browser;
			}
		});
		browser.addVisibilityWindowListener(new 
VisibilityWindowListener() {
			public void hide(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.setVisible(false);
			}

			public void show(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				if (event.location != null)
					shell.setLocation(event.location);
				if (event.size != null) {
					Point size = event.size;
					shell.setSize(shell.computeSize
(size.x, size.y));
				}
				if (event.addressBar || event.menuBar || 
event.statusBar
						|| event.toolBar) {
					// Create widgets for the address bar, 
menu bar, status bar and/or tool bar
					// leave enough space in the Shell to 
accomodate a Browser of the size
					// given by event.size
				}
				shell.open();
			}
		});
		browser.addCloseWindowListener(new CloseWindowListener() {
			public void close(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.close();
			}
		});
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the documenation for WindowEvent is about 50-lines of code that is noted as 
this is the way "..are typically handled". This makes an HTML link that opens 
another window such as &amp;lt;a href="...url.." target="_blank"&amp;gt; work. Since 
this is the typical use (as stated in the docs), why not make this the default 
behavior? It's a lot of code to get in and get right.

What I actually want is for the browser to handle _blank target by opening the 
system browser, as it would if I loaded the HTML into IE, not to open another 
SWT browser. I was not able to get this to work.
v&gt;20050207
OpenWindowListener.open(WindowEvent) can now open a standalone Internet 
Explorer on Windows. Note that you have absolutly zero control on that 
standalone IE - it even stays up after the SWT app is terminated. So not 
everyone will want to use this.

There is a new WindowEvent.required flag that specifies whether the 
WindowEvent.browser must be filled in or not. If 'event.required' is false, 
simply exiting the notification will cause the new window to appear in a 
standalone IE window.

If WindowEvent.browser is given a browser instance, it will be used as in the 
past regardless of the value of WindowEvent.required.

WARNING! This API will not be frozen until M6 (April 1st). It can change or be 
removed until then.

Opened a feature request for Mozilla embedding API to support something similar
https://bugzilla.mozilla.org/show_bug.cgi?id=281405
Safari also does not support this. On Mozilla and Safari, embedders must take 
care of new windows. Sorry. We'll keep monitoring embedding API on these 
platforms for this support.

Here's an example. See 'event.required' below. It is not expected that 
everyone take advantage of this standalone IE browser. In particular, the java 
application has no control over this system IE browser and may prefer to set 
the WindowEvent.browser field instead.

Closing PR since we believe it is the best this problem can be handled at the 
moment.

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.browser.*;

public class PRBrowser {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main Window");
		shell.setLayout(new FillLayout());
		Browser browser = new Browser(shell, SWT.NONE);
		initialize(display, browser);
		shell.open();
		browser.setUrl("http://www.eclipse.org");
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}

	static void initialize(final Display display, Browser browser) {
		browser.addOpenWindowListener(new OpenWindowListener() {
			public void open(WindowEvent event) {
				// Certain platforms can provide a default 
full browser.
				// simply return in that case if the 
application prefers
				// the default full browser to the embedded 
one set below.
				if (!event.required)
					return;

				// Embed the new window
				Shell shell = new Shell(display);
				shell.setText("New Window");
				shell.setLayout(new FillLayout());
				Browser browser = new Browser(shell, SWT.NONE);
				initialize(display, browser);
				event.browser = browser;
			}
		});
		browser.addVisibilityWindowListener(new 
VisibilityWindowListener() {
			public void hide(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.setVisible(false);
			}

			public void show(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				if (event.location != null)
					shell.setLocation(event.location);
				if (event.size != null) {
					Point size = event.size;
					shell.setSize(shell.computeSize
(size.x, size.y));
				}
				if (event.addressBar || event.menuBar || 
event.statusBar
						|| event.toolBar) {
					// Create widgets for the address bar, 
menu bar, status bar and/or tool bar
					// leave enough space in the Shell to 
accomodate a Browser of the size
					// given by event.size
				}
				shell.open();
			}
		});
		browser.addCloseWindowListener(new CloseWindowListener() {
			public void close(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.close();
			}
		});
	}
}</WithStack>
    <WithOutStack>In the documenation for WindowEvent is about 50-lines of code that is noted as 
this is the way "..are typically handled". This makes an HTML link that opens 
another window such as &amp;lt;a href="...url.." target="_blank"&amp;gt; work. Since 
this is the typical use (as stated in the docs), why not make this the default 
behavior? It's a lot of code to get in and get right.

What I actually want is for the browser to handle _blank target by opening the 
system browser, as it would if I loaded the HTML into IE, not to open another 
SWT browser. I was not able to get this to work.
v&gt;20050207
OpenWindowListener.open(WindowEvent) can now open a standalone Internet 
Explorer on Windows. Note that you have absolutly zero control on that 
standalone IE - it even stays up after the SWT app is terminated. So not 
everyone will want to use this.

There is a new WindowEvent.required flag that specifies whether the 
WindowEvent.browser must be filled in or not. If 'event.required' is false, 
simply exiting the notification will cause the new window to appear in a 
standalone IE window.

If WindowEvent.browser is given a browser instance, it will be used as in the 
past regardless of the value of WindowEvent.required.

WARNING! This API will not be frozen until M6 (April 1st). It can change or be 
removed until then.

Opened a feature request for Mozilla embedding API to support something similar
https://bugzilla.mozilla.org/show_bug.cgi?id=281405
Safari also does not support this. On Mozilla and Safari, embedders must take 
care of new windows. Sorry. We'll keep monitoring embedding API on these 
platforms for this support.

Here's an example. See 'event.required' below. It is not expected that 
everyone take advantage of this standalone IE browser. In particular, the java 
application has no control over this system IE browser and may prefer to set 
the WindowEvent.browser field instead.

Closing PR since we believe it is the best this problem can be handled at the 
moment.

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.browser.*;

public class PRBrowser {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("Main Window");
		shell.setLayout(new FillLayout());
		Browser browser = new Browser(shell, SWT.NONE);
		initialize(display, browser);
		shell.open();
		browser.setUrl("http://www.eclipse.org");
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}

	static void initialize(final Display display, Browser browser) {
		browser.addOpenWindowListener(new OpenWindowListener() {
			public void open(WindowEvent event) {
				// Certain platforms can provide a default 
full browser.
				// simply return in that case if the 
application prefers
				// the default full browser to the embedded 
one set below.
				if (!event.required)
					return;

				// Embed the new window
				Shell shell = new Shell(display);
				shell.setText("New Window");
				shell.setLayout(new FillLayout());
				Browser browser = new Browser(shell, SWT.NONE);
				initialize(display, browser);
				event.browser = browser;
			}
		});
		browser.addVisibilityWindowListener(new 
VisibilityWindowListener() {
			public void hide(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.setVisible(false);
			}

			public void show(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				if (event.location != null)
					shell.setLocation(event.location);
				if (event.size != null) {
					Point size = event.size;
					shell.setSize(shell.computeSize
(size.x, size.y));
				}
				if (event.addressBar || event.menuBar || 
event.statusBar
						|| event.toolBar) {
					// Create widgets for the address bar, 
menu bar, status bar and/or tool bar
					// leave enough space in the Shell to 
accomodate a Browser of the size
					// given by event.size
				}
				shell.open();
			}
		});
		browser.addCloseWindowListener(new CloseWindowListener() {
			public void close(WindowEvent event) {
				Browser browser = (Browser) event.widget;
				Shell shell = browser.getShell();
				shell.close();
			}
		});
	}
}</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54974" />
    <CreationDate amount="2004-03-16 12:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>fix adapter schemas to match the 1.2 XML instance</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Extractor
Formatter
ProcessUnit
Fix in CVS.
Closed
house keeping</WithStack>
    <WithOutStack>Extractor
Formatter
ProcessUnit
Fix in CVS.
Closed
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54975" />
    <CreationDate amount="2004-03-16 12:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Execution" />
    <Version amount="4.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>Migrate all Hyades examples to be NL-enabled.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Migrate all Hyades examples to be NL-enabled.

For example, create plugin.properties for all translatable strings.
Note:  All required plugin.properties current exist.

Defect requires:

-Translating the following readme and plugin.properties files:

-org.eclipse.hyades.trace.sample\archive\LogAnalyzerSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogCorrelatorSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogCorrelatorSample\plugin.properties
-org.eclipse.hyades.trace.sample\archive\LogParserSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogParserSample\plugin.properties
-
org.eclipse.hyades.logging.commons.sample\archive\HyadesLoggingCommonsSample\rea
dme.html
-
org.eclipse.hyades.logging.java14.sample\archive\HyadesLoggingJava14Sample\readm
e.html
-
org.eclipse.hyades.logging.core.sample\archive\HyadesEMFCommonBaseEventv101Sampl
e\readme.html

-Creating the neccessary infastructure to resolve the correct readme file at 
runtime based on the local locale.
Awaiting for the translated readme and plugin.properties files from translation 
centers...
We will provide the functionality required to support NL-enabled example and 
check-in any translated resources when they arrive from the translation 
centers.
patch checked in 
Reopening since translated resources have not be checked-in.
patched to support NL-enabled properties/readme files. However, translated 
readme and plugin.properties files from translation centers are not yet 
received.

Alex, please follow up with the translation center for the files. Tkx.
The translation of these readme files is handled by WSWB not by us. I have to 
contact Cam-Thu to see what's the status of these files and how to include them 
into the WSWB build.
Alex, do you have any update of the files?
The plugin.properties files were translated by IES but not the readme.html 
because their file managing tool is skipping readme.html files since they don't 
translate readme's. In order to get our readme.html files picked up by their 
tool and send for translation in the next IES translation cycle we have to 
rename our readme.html files to something else, for ex. example.html. Is this 
something we want to do for this release?
Having only one week remaining to close 3.2, I suggest to move the defect to 3.3
I will bring this into the committers call
retarget milestone to 3.3 P1 base on Harm's approval.
Keep target as emptry for now and will raise to RG for proposed new target release
Target to 4.0 as that will have the TVT available 
Update severity to blocker since this is blocking TVT defects
We have decided to move the readme.html files to the documentation solving the 
issues regarding the custom packaging and loading of the translated versions. 
Waiting for the doc. to be updated (Bugzilla 92269).
Code updated, feature will be completed when the readme file will be moved to 
the docs.
Waiting for defect #92269 to verify.
 Verified in the TPTP 4.0 (200505240100) build on May 24, 2005.
Closing.</WithStack>
    <WithOutStack>Migrate all Hyades examples to be NL-enabled.

For example, create plugin.properties for all translatable strings.
Note:  All required plugin.properties current exist.

Defect requires:

-Translating the following readme and plugin.properties files:

-org.eclipse.hyades.trace.sample\archive\LogAnalyzerSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogCorrelatorSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogCorrelatorSample\plugin.properties
-org.eclipse.hyades.trace.sample\archive\LogParserSample\readme.html
-org.eclipse.hyades.trace.sample\archive\LogParserSample\plugin.properties
-
org.eclipse.hyades.logging.commons.sample\archive\HyadesLoggingCommonsSample\rea
dme.html
-
org.eclipse.hyades.logging.java14.sample\archive\HyadesLoggingJava14Sample\readm
e.html
-
org.eclipse.hyades.logging.core.sample\archive\HyadesEMFCommonBaseEventv101Sampl
e\readme.html

-Creating the neccessary infastructure to resolve the correct readme file at 
runtime based on the local locale.
Awaiting for the translated readme and plugin.properties files from translation 
centers...
We will provide the functionality required to support NL-enabled example and 
check-in any translated resources when they arrive from the translation 
centers.
patch checked in 
Reopening since translated resources have not be checked-in.
patched to support NL-enabled properties/readme files. However, translated 
readme and plugin.properties files from translation centers are not yet 
received.

Alex, please follow up with the translation center for the files. Tkx.
The translation of these readme files is handled by WSWB not by us. I have to 
contact Cam-Thu to see what's the status of these files and how to include them 
into the WSWB build.
Alex, do you have any update of the files?
The plugin.properties files were translated by IES but not the readme.html 
because their file managing tool is skipping readme.html files since they don't 
translate readme's. In order to get our readme.html files picked up by their 
tool and send for translation in the next IES translation cycle we have to 
rename our readme.html files to something else, for ex. example.html. Is this 
something we want to do for this release?
Having only one week remaining to close 3.2, I suggest to move the defect to 3.3
I will bring this into the committers call
retarget milestone to 3.3 P1 base on Harm's approval.
Keep target as emptry for now and will raise to RG for proposed new target release
Target to 4.0 as that will have the TVT available 
Update severity to blocker since this is blocking TVT defects
We have decided to move the readme.html files to the documentation solving the 
issues regarding the custom packaging and loading of the translated versions. 
Waiting for the doc. to be updated (Bugzilla 92269).
Code updated, feature will be completed when the readme file will be moved to 
the docs.
Waiting for defect #92269 to verify.
 Verified in the TPTP 4.0 (200505240100) build on May 24, 2005.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54976" />
    <CreationDate amount="2004-03-16 12:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VM fails to launch when specifying default VM arguments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I added '-Xj9' as default VM arguments for the JRE install of j9sc, then I was
unuable to launch a Java app with j9sc.
I noticed extra ' ' in the default VM arguments field in the edit JRE dialog.
Fixed.
An extra ' ' was always added in initializing the edit JRE dialog.
ExecutionArguments$ArgumentParser was not managing correctly trailing
whitespaces, it added an extra empty argument.

Changes in AddVMDialog#initializeFields() and
ExecutionArguments$ArgumentParser#parseArguments().
Please verify, Kevin.
verified. thanks Luc</WithStack>
    <WithOutStack>I added '-Xj9' as default VM arguments for the JRE install of j9sc, then I was
unuable to launch a Java app with j9sc.
I noticed extra ' ' in the default VM arguments field in the edit JRE dialog.
Fixed.
An extra ' ' was always added in initializing the edit JRE dialog.
ExecutionArguments$ArgumentParser was not managing correctly trailing
whitespaces, it added an extra empty argument.

Changes in AddVMDialog#initializeFields() and
ExecutionArguments$ArgumentParser#parseArguments().
Please verify, Kevin.
verified. thanks Luc</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54977" />
    <CreationDate amount="2004-03-16 12:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[browser] Browser not coming up on new Eclipse test machine</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>A new Eclipse test machine was set with RH EL3. The Browser is not working on 
this machine by default. It only works when LD_LIBRARY_PATH is set explicitely 
to /usr/lib/mozilla-1.4
or it also works when set as ROOT.

A clean machine was set with RH EL3 and it is working fine.

- Infra is checking how the test machine was actually installed
We will set the LD_LIBRARY_PATH explicitly on the test machine to 
include /usr/lib/mozilla-1.4 until we can test with a reinstall for builds &gt; 
200403161700.
RHEL 3 has been reinstalled on escher and the swt tests from the N20040317 
build ran successfully with default user env for sdimitro.
verified. Marking as INVALID on the assumption that the previous install was 
not a valid RH EL3 in some way.</WithStack>
    <WithOutStack>A new Eclipse test machine was set with RH EL3. The Browser is not working on 
this machine by default. It only works when LD_LIBRARY_PATH is set explicitely 
to /usr/lib/mozilla-1.4
or it also works when set as ROOT.

A clean machine was set with RH EL3 and it is working fine.

- Infra is checking how the test machine was actually installed
We will set the LD_LIBRARY_PATH explicitly on the test machine to 
include /usr/lib/mozilla-1.4 until we can test with a reinstall for builds &gt; 
200403161700.
RHEL 3 has been reinstalled on escher and the swt tests from the N20040317 
build ran successfully with default user env for sdimitro.
verified. Marking as INVALID on the assumption that the previous install was 
not a valid RH EL3 in some way.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54978" />
    <CreationDate amount="2004-03-16 12:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] Zoom tests are now invalid valid, require updating.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We have four test failures that have now been commented out to allow the 
integration build to continue.  These test failures represent regressions in 
the zoom functionality. 
 
We've looked at this bug, and have had no luck finding the actual change  
that caused it to happen.  Ask Nick, Stefan or I about this bug if you want 
more information. 
 
The failing tests are: 
+ org.eclipse.ui.tests.zoom.ActivateTest#test6 
+ org.eclipse.ui.tests.zoom.CloseEditorTest#test2 
+ org.eclipse.ui.tests.zoom.OpenEditorTest#test2 
+ org.eclipse.ui.tests.zoom.OpenEditorTest#test4
We have looked at the zoom tests and they need to be changed in light of the
presentation changes. (individual parts should no longer be hanging on to zoom
state). I need to change the tests plus remove this state from individual part
classes.
note to self: possibly some info in 54863 worth looking at
This problem still exists in M200407150800 (i.e., uncommenting the tests still 
causes failures). 
Stefan: you've been poking in here most recently.  What happened to the
commented out tests?
I uncommented and updated the tests earlier in the cycle. Also added quite a few
new ones. Don't remember which milestone, but they've been back for some time.
Verified in I20050510-0010</WithStack>
    <WithOutStack>We have four test failures that have now been commented out to allow the 
integration build to continue.  These test failures represent regressions in 
the zoom functionality. 
 
We've looked at this bug, and have had no luck finding the actual change  
that caused it to happen.  Ask Nick, Stefan or I about this bug if you want 
more information. 
 
The failing tests are: 
+ org.eclipse.ui.tests.zoom.ActivateTest#test6 
+ org.eclipse.ui.tests.zoom.CloseEditorTest#test2 
+ org.eclipse.ui.tests.zoom.OpenEditorTest#test2 
+ org.eclipse.ui.tests.zoom.OpenEditorTest#test4
We have looked at the zoom tests and they need to be changed in light of the
presentation changes. (individual parts should no longer be hanging on to zoom
state). I need to change the tests plus remove this state from individual part
classes.
note to self: possibly some info in 54863 worth looking at
This problem still exists in M200407150800 (i.e., uncommenting the tests still 
causes failures). 
Stefan: you've been poking in here most recently.  What happened to the
commented out tests?
I uncommented and updated the tests earlier in the cycle. Also added quite a few
new ones. Don't remember which milestone, but they've been back for some time.
Verified in I20050510-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54979" />
    <CreationDate amount="2004-03-16 12:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Wizards] Export create empty file when Out of Sync</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="597" end="658" />
        <code>output = new FileOutputStream(destinationPath.toOSString());</code>
      </source_code>
      <source_code type="assignment">
        <location start="659" end="700" />
        <code>contentStream = file.getContents(false);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="706" end="735" />
        <code>} catch (IOException e) {...}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Create a Simple Project in Eclipse</Line>
          <Line>2. Create a file in the simple project</Line>
          <Line>3. Go outside of Eclipse and edit the file (using Notepad or some such)</Line>
          <Line>4. Go back to Eclipse, and export the file that has been edited</Line>
          <Line>(without doing a refresh first)</Line>
          <Line>EXPECTED RESULTS:</Line>
          <Line>export fails with out of sync message, no file generated</Line>
          <Line>ACTUAL RESULTS:</Line>
          <Line>export fails with out of sync message, a file of size 0 was created</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>SCENARIO:
1. Create a Simple Project in Eclipse
2. Create a file in the simple project
3. Go outside of Eclipse and edit the file (using Notepad or some such)
4. Go back to Eclipse, and export the file that has been edited
   (without doing a refresh first)
EXPECTED RESULTS:
export fails with out of sync message, no file generated
ACTUAL RESULTS:
export fails with out of sync message, a file of size 0 was created

P.S. As a bonus, if Bug 54018
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=54018) is implemented, that would
be really nice.
This occurs in FileSystemExporter.writeFile:

try {
	output = new FileOutputStream(destinationPath.toOSString());
	contentStream = file.getContents(false);
	...
} catch (IOException e) {...}

Note that it creates the output stream before attempting to get the source file
contents.  If these two lines are reversed, then it will not create the output
stream in failure cases such as out of sync.

Changing bug owner...
Fix released in build &gt;20040317
Marking fixed</WithStack>
    <WithOutStack>SCENARIO:
1. Create a Simple Project in Eclipse
2. Create a file in the simple project
3. Go outside of Eclipse and edit the file (using Notepad or some such)
4. Go back to Eclipse, and export the file that has been edited
   (without doing a refresh first)
EXPECTED RESULTS:
export fails with out of sync message, no file generated
ACTUAL RESULTS:
export fails with out of sync message, a file of size 0 was created

P.S. As a bonus, if Bug 54018
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=54018) is implemented, that would
be really nice.
This occurs in FileSystemExporter.writeFile:

try {
	output = new FileOutputStream(destinationPath.toOSString());
	contentStream = file.getContents(false);
	...
} catch (IOException e) {...}

Note that it creates the output stream before attempting to get the source file
contents.  If these two lines are reversed, then it will not create the output
stream in failure cases such as out of sync.

Changing bug owner...
Fix released in build &gt;20040317
Marking fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54980" />
    <CreationDate amount="2004-03-16 12:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[quick fix] supporting cast to related types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="5" end="22" />
        <code>class Ancestor {}</code>
      </source_code>
      <source_code type="class">
        <location start="23" end="59" />
        <code>class Derivered1 extends Ancestor {}</code>
      </source_code>
      <source_code type="class">
        <location start="60" end="96" />
        <code>class Derivered2 extends Ancestor {}</code>
      </source_code>
      <source_code type="class">
        <location start="97" end="137" />
        <code>class Container {
  Ancestor ancestor;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- agreed that it should not go into code assist</Line>
          <Line>- quick assist/fix could be triggered by "(x" and "(x." pattern</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>e.g.
class Ancestor {}
class Derivered1 extends Ancestor {}
class Derivered2 extends Ancestor {}
class Container {
  Ancestor ancestor;
}
void f(Container c){
  g( c.ancestor/* when pressing ctrl-space here the listbox shoul include 
    2 entries called "Cast to derivered type &gt;" and "Cast to base type &gt;"
    selecting one of these should bring up a sub list of classes containing
    either "Derivered1" and "Derivered2" or "Object"
    selecting e.g. "Cast to derivered type &gt;"."Derivered1"
    should transform the line to

  g( ((Derivered1)c.ancestor)

  */
  ...
}
code assist is more doing completions that assisting. Quick assist could help.
Will keep in mind, probably not for 3.0
Discussed at the JDT Summit 2006:
- agreed that it should not go into code assist
- quick assist/fix could be triggered by "(x" and "(x." pattern</WithStack>
    <WithOutStack>e.g.
class Ancestor {}
class Derivered1 extends Ancestor {}
class Derivered2 extends Ancestor {}
class Container {
  Ancestor ancestor;
}
void f(Container c){
  g( c.ancestor/* when pressing ctrl-space here the listbox shoul include 
    2 entries called "Cast to derivered type &gt;" and "Cast to base type &gt;"
    selecting one of these should bring up a sub list of classes containing
    either "Derivered1" and "Derivered2" or "Object"
    selecting e.g. "Cast to derivered type &gt;"."Derivered1"
    should transform the line to

  g( ((Derivered1)c.ancestor)

  */
  ...
}
code assist is more doing completions that assisting. Quick assist could help.
Will keep in mind, probably not for 3.0
Discussed at the JDT Summit 2006:
- agreed that it should not go into code assist
- quick assist/fix could be triggered by "(x" and "(x." pattern</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54981" />
    <CreationDate amount="2004-03-16 12:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>new predefined template variable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="433" end="457" />
        <code>public class Ancestor {}</code>
      </source_code>
      <source_code type="class">
        <location start="458" end="500" />
        <code>public class Derivered extends Ancestor {}</code>
      </source_code>
      <source_code type="class">
        <location start="501" end="527" />
        <code>public class HelloWorld {}</code>
      </source_code>
      <source_code type="class">
        <location start="528" end="919" />
        <code>public class Main {
	void main(String args[]){
		m(1);
		m(2);
	}
	int m(int i){
		return i+1;
	}
	void cast(){
		Ancestor ancestor = new Derivered();
		cast/*ctrl-space select "cast - dynamic cast" followed by 
another ctrl-space the given default list is of little help since the only 
class available is Main, but to get a resonable list it should show all types
in current package*/
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>when in template mode and pressing ctrl-space while template variable named 
type is selected the list should show only typenames
would technically be possible, but I'm not so conviced that this is really worth
the efford. In what situation do you get that? code assist should always give
reasonable suggestions, so if it's a position for a type, types should be shown.
Maybe you are right but, Try a project with the follow 4 class
public class Ancestor {}
public class Derivered extends Ancestor {}
public class HelloWorld {}
public class Main {
	void main(String args[]){
		m(1);
		m(2);
	}
	int m(int i){
		return i+1;
	}
	void cast(){
		Ancestor ancestor = new Derivered();
		cast/*ctrl-space select "cast - dynamic cast" followed by 
another ctrl-space the given default list is of little help since the only 
class available is Main, but to get a resonable list it should show all types
in current package*/
	}
}


I see what you mean. Code assist shows all types as soon as you enter at least
one letter. The reason is that the list of all types in the project would take
too long to show in the list.

setting this to later. No plans for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>when in template mode and pressing ctrl-space while template variable named 
type is selected the list should show only typenames
would technically be possible, but I'm not so conviced that this is really worth
the efford. In what situation do you get that? code assist should always give
reasonable suggestions, so if it's a position for a type, types should be shown.
Maybe you are right but, Try a project with the follow 4 class
public class Ancestor {}
public class Derivered extends Ancestor {}
public class HelloWorld {}
public class Main {
	void main(String args[]){
		m(1);
		m(2);
	}
	int m(int i){
		return i+1;
	}
	void cast(){
		Ancestor ancestor = new Derivered();
		cast/*ctrl-space select "cast - dynamic cast" followed by 
another ctrl-space the given default list is of little help since the only 
class available is Main, but to get a resonable list it should show all types
in current package*/
	}
}


I see what you mean. Code assist shows all types as soon as you enter at least
one letter. The reason is that the list of all types in the project would take
too long to show in the list.

setting this to later. No plans for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54982" />
    <CreationDate amount="2004-03-16 12:56:00 -0500" />
    <DupId amount="61869" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Decorators] DecoratingLabelProvider should implement IColorProvider and IFontProvider</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently I have to create my own DecoratingLabelProvider in order to support 
colors and fonts in my view. It would be better if the DecoratingLabelProvider 
was updated to support these new interfaces.
Not for 3.0
Reopening now that 3.0 has shipped


*** This bug has been marked as a duplicate of 61869 ***</WithStack>
    <WithOutStack>Currently I have to create my own DecoratingLabelProvider in order to support 
colors and fonts in my view. It would be better if the DecoratingLabelProvider 
was updated to support these new interfaces.
Not for 3.0
Reopening now that 3.0 has shipped


*** This bug has been marked as a duplicate of 61869 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54983" />
    <CreationDate amount="2004-03-16 13:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Stepping is extremely slow</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20040310

Stepping has become brutally slow. While selfhosting, stepping often takes around 2 seconds.
By the way, I'm seeing this problem in my host when debugging Eclipse. Not in my target 
debugging toy programs.
Jared, is this a dup of bug 52905? (If so, please mark as a dup, and mark as 
M9 for performance testing).
I don't know. I still don't understand that bug report. :)
Jared - is this still a problem? If so, we should analyze stepping.
No. Something else in the workbench was probably just eating my CPU.</WithStack>
    <WithOutStack>Build 20040310

Stepping has become brutally slow. While selfhosting, stepping often takes around 2 seconds.
By the way, I'm seeing this problem in my host when debugging Eclipse. Not in my target 
debugging toy programs.
Jared, is this a dup of bug 52905? (If so, please mark as a dup, and mark as 
M9 for performance testing).
I don't know. I still don't understand that bug report. :)
Jared - is this still a problem? If so, we should analyze stepping.
No. Something else in the workbench was probably just eating my CPU.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54984" />
    <CreationDate amount="2004-03-16 13:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Select correlation created when open UML2SD view from Log View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>fixed in 1.3 and HEAD(3.0)
closing bug
house keeping</WithStack>
    <WithOutStack>fixed in 1.3 and HEAD(3.0)
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54985" />
    <CreationDate amount="2004-03-16 13:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Navigator] Unable to deselect working set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If I have a working set defined and active, it shows up in the drop down list in
the navigator with a check beside it.  However, if I then select that drop down
item, it does not disable the working set.  This is inconsistent with the way
Filters work in the same drop down - selecting a selected filter disables it. 
Working sets should work in the same way instead of requiring one to use the
"Deselect working Set" menu item - which is redundant if you can deselect a
working set by selecting its checked menu entry.
The working set selection is indicated by a radio button, not a check.
This indicates a one-of-many selection, not a set of toggles like the filters.

In a radio group in a dialog, you do not expect selecting the current selection
to deselect it.  The behaviour is the same here.</WithStack>
    <WithOutStack>If I have a working set defined and active, it shows up in the drop down list in
the navigator with a check beside it.  However, if I then select that drop down
item, it does not disable the working set.  This is inconsistent with the way
Filters work in the same drop down - selecting a selected filter disables it. 
Working sets should work in the same way instead of requiring one to use the
"Deselect working Set" menu item - which is redundant if you can deselect a
working set by selecting its checked menu entry.
The working set selection is indicated by a radio button, not a check.
This indicates a one-of-many selection, not a set of toggles like the filters.

In a radio group in a dialog, you do not expect selecting the current selection
to deselect it.  The behaviour is the same here.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54986" />
    <CreationDate amount="2004-03-16 13:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>AspectJ behaves radical different for execution joinpoints than AspectJ &lt;1.0.6</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="17">
      <source_code type="package">
        <location start="115" end="154" />
        <code>package de.aspectsoft.tests.subclasses;</code>
      </source_code>
      <source_code type="import">
        <location start="155" end="203" />
        <code>import de.aspectsoft.tests.coretest.CoreObject;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="204" end="244" />
        <code>/**
 * @author Arno Schmidmeier
 * 
 */</code>
      </source_code>
      <source_code type="class">
        <location start="245" end="505" />
        <code>public class SubClassDemo extends CoreObject {

    public static void main(String[] args) {
        new SubClassDemo().foo();
        new SubClassDemo().toString();
        
        
        new MySubClass().foo();
        new MySubClass().toString();
    }
}</code>
      </source_code>
      <source_code type="package">
        <location start="548" end="587" />
        <code>package de.aspectsoft.tests.subclasses;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="588" end="629" />
        <code>/**
 * @author Arno Schmidmeier
 * 
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="665" end="822" />
        <code>before():execution(public * SubClassDemo.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="824" end="987" />
        <code>before():execution(* *.*(..))&amp;&amp;this(SubClassDemo){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="990" end="1145" />
        <code>before():execution(public * MySubClass.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1147" end="1308" />
        <code>before():execution(* *.*(..))&amp;&amp;this(MySubClass){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }</code>
      </source_code>
      <source_code type="package">
        <location start="1313" end="1352" />
        <code>package de.aspectsoft.tests.subclasses;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1353" end="1393" />
        <code>/**
 * @author Arno Schmidmeier
 * 
 */</code>
      </source_code>
      <source_code type="class">
        <location start="1394" end="1446" />
        <code>public class MyCore {
    public void foo(){
    }
}</code>
      </source_code>
      <source_code type="package">
        <location start="1448" end="1487" />
        <code>package de.aspectsoft.tests.subclasses;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1488" end="1528" />
        <code>/**
 * @author Arno Schmidmeier
 * 
 */</code>
      </source_code>
      <source_code type="class">
        <location start="1529" end="1571" />
        <code>public class MySubClass extends MyCore{

}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1960" end="2001" />
        <code>e.g. the execution of SubClassDemo.foo();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Hello,
I have one project which contains one class, the output of this project is on 
the classpath of the next. 

package de.aspectsoft.tests.subclasses;

import de.aspectsoft.tests.coretest.CoreObject;

/**
 * @author Arno Schmidmeier
 * 
 */
public class SubClassDemo extends CoreObject {

    public static void main(String[] args) {
        new SubClassDemo().foo();
        new SubClassDemo().toString();
        
        
        new MySubClass().foo();
        new MySubClass().toString();
    }
}


And a second project with the classes: 
package de.aspectsoft.tests.subclasses;


/**
 * @author Arno Schmidmeier
 * 
 */
public aspect SubClassDemoAspect {
    before():execution(public * SubClassDemo.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }

    before():execution(* *.*(..))&amp;&amp;this(SubClassDemo){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }


    before():execution(public * MySubClass.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }

    before():execution(* *.*(..))&amp;&amp;this(MySubClass){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }

}

package de.aspectsoft.tests.subclasses;

/**
 * @author Arno Schmidmeier
 * 
 */
public class MyCore {
    public void foo(){
    }
}

package de.aspectsoft.tests.subclasses;

/**
 * @author Arno Schmidmeier
 * 
 */
public class MySubClass extends MyCore{

}


Runing the second project generates following output.

SubClassDemo+ execution(public * SubClassDemo.*(..))execution(void 
de.aspectsoft.tests.subclasses.SubClassDemo.main(String[]))
SubClassDemo+ execution(* *.*(..))&amp;&amp;this(SubClassDemo))execution(void 
de.aspectsoft.tests.subclasses.MyCore.foo())

There are several execution Joinpoints missing.
e.g. all executions of to .toString()
e.g. the execution of SubClassDemo.foo();

Plattform AspectJ 1.1.6 form Ajdt 1.1.6 (development branch)
eclipse 2.1.1, windows XP and jdk 1.3

If you have some additional questions please do not hesitate to ask me.
AspectJ 1.1 behaves in the same way. 
It looks to me that your program is being handled correctly by AspectJ-1.1.1 
and I'd be surprised if this same program compiled in the same way would 
behave any differently under AspectJ-1.0.x.  Can you show what the output is 
that you get from AspectJ-1.0.x (specifying exactly which version) for 
compiling EXACTLY this same code?
I'm going to close this bug (reopen if it is still a problem).

execution() advice can only be affected on methods/ctors declarations that are
given to the AspectJ compiler for weaving.  In the code sample in the initial
bug report, the toString() is not implemented in any of the code we can see, so
presumably it is defaulting to using the toString() implementation on
java.lang.Object.  As java.lang.Object is not usually woven by the compiler, it
cannot affect advice that matches on execution() of toString(). (the join point
for execution() of toString() was never available for matching).  Similarly I
can't see the implementation of SubClassDemo().foo() so the join point is
probably not available for matching against execution() advice.  To match on the
toString() or foo() calls - use call() PCD instead.
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>Hello,
I have one project which contains one class, the output of this project is on 
the classpath of the next. 

package de.aspectsoft.tests.subclasses;

import de.aspectsoft.tests.coretest.CoreObject;

/**
 * @author Arno Schmidmeier
 * 
 */
public class SubClassDemo extends CoreObject {

    public static void main(String[] args) {
        new SubClassDemo().foo();
        new SubClassDemo().toString();
        
        
        new MySubClass().foo();
        new MySubClass().toString();
    }
}


And a second project with the classes: 
package de.aspectsoft.tests.subclasses;


/**
 * @author Arno Schmidmeier
 * 
 */
public aspect SubClassDemoAspect {
    before():execution(public * SubClassDemo.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }

    before():execution(* *.*(..))&amp;&amp;this(SubClassDemo){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }


    before():execution(public * MySubClass.*(..)){
        System.out.println("SubClassDemo+ execution(public * SubClassDemo.*
(..))"+thisJoinPoint);
    }

    before():execution(* *.*(..))&amp;&amp;this(MySubClass){
         System.out.println("SubClassDemo+ execution(* *.*(..))&amp;&amp;this
(SubClassDemo))"+thisJoinPoint);
    }

}

package de.aspectsoft.tests.subclasses;

/**
 * @author Arno Schmidmeier
 * 
 */
public class MyCore {
    public void foo(){
    }
}

package de.aspectsoft.tests.subclasses;

/**
 * @author Arno Schmidmeier
 * 
 */
public class MySubClass extends MyCore{

}


Runing the second project generates following output.

SubClassDemo+ execution(public * SubClassDemo.*(..))execution(void 
de.aspectsoft.tests.subclasses.SubClassDemo.main(String[]))
SubClassDemo+ execution(* *.*(..))&amp;&amp;this(SubClassDemo))execution(void 
de.aspectsoft.tests.subclasses.MyCore.foo())

There are several execution Joinpoints missing.
e.g. all executions of to .toString()
e.g. the execution of SubClassDemo.foo();

Plattform AspectJ 1.1.6 form Ajdt 1.1.6 (development branch)
eclipse 2.1.1, windows XP and jdk 1.3

If you have some additional questions please do not hesitate to ask me.
AspectJ 1.1 behaves in the same way. 
It looks to me that your program is being handled correctly by AspectJ-1.1.1 
and I'd be surprised if this same program compiled in the same way would 
behave any differently under AspectJ-1.0.x.  Can you show what the output is 
that you get from AspectJ-1.0.x (specifying exactly which version) for 
compiling EXACTLY this same code?
I'm going to close this bug (reopen if it is still a problem).

execution() advice can only be affected on methods/ctors declarations that are
given to the AspectJ compiler for weaving.  In the code sample in the initial
bug report, the toString() is not implemented in any of the code we can see, so
presumably it is defaulting to using the toString() implementation on
java.lang.Object.  As java.lang.Object is not usually woven by the compiler, it
cannot affect advice that matches on execution() of toString(). (the join point
for execution() of toString() was never available for matching).  Similarly I
can't see the implementation of SubClassDemo().foo() so the join point is
probably not available for matching against execution() advice.  To match on the
toString() or foo() calls - use call() PCD instead.
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54987" />
    <CreationDate amount="2004-03-16 13:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[evaluation] Can't evaluate new array assignment</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341098372">
        <Exception>com.sun.jdi.ClassNotLoadedException</Exception>
        <Reason>Type has not been loaded</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.ReferenceTypeImpl.create(ReferenceTypeImpl.java:1278)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.TypeImpl.create(TypeImpl.java:64)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.LocalVariableImpl.type(LocalVariableImpl.java:166)</Frame>
          <Frame depth="3">org.eclipse.jdi.internal.StackFrameImpl.setValue(StackFrameImpl.java:174)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.setJDIValue(JDILocalVariable.java:84)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.setValue(JDILocalVariable.java:185)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.instructions.AssignmentOperator.execute(AssignmentOperator.java:66)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:50)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1$EvaluationRunnable.run(ASTEvaluationEngine.java:347)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:565)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run(ASTEvaluationEngine.java:381)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2446)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341098372">
        <Exception>com.sun.jdi.ClassNotLoadedException</Exception>
        <Reason>Type has not been loaded</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.ReferenceTypeImpl.create(ReferenceTypeImpl.java:1278)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.TypeImpl.create(TypeImpl.java:64)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.ArrayTypeImpl.componentType(ArrayTypeImpl.java:91)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIArrayType.getComponentType(JDIArrayType.java:58)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAllocation.execute(ArrayAllocation.java:62)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:50)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1$EvaluationRunnable.run(ASTEvaluationEngine.java:347)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:565)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run(ASTEvaluationEngine.java:381)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2446)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="92" end="144" />
        <code>IMarker markers= createPersistedMarkers(resource);</code>
      </source_code>
      <source_code type="class">
        <location start="2577" end="3447" />
        <code>public class LoadingExample {
    
    public static void main(String[] args) {
        new LoadingExample().load();
    }
    
    public void load() {
        ClassLoader rootClassLoader = this.getClass().getClassLoader();
        try {
            URL url = new File("").toURL();
            URLClassLoader loader1 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            URLClassLoader loader2 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            loader1.loadClass("java.util.regex.Pattern");
            loader2.loadClass("[Ljava.util.regex.Pattern;");
            Pattern[] patterns = new Pattern[0]; // BREAKPOINT
            System.out.println(patterns);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20040310

Debug to BreakpointManager#loadBreakpoints, just after the line that reads:
  IMarker markers= createPersistedMarkers(resource);

Try to evaluate the string:
  markers= new IMarker[0]

The following exception is returned:
  Evaluation failed. Reason(s):
    com.sun.jdi.ClassNotLoadedException: Type has not been loaded occurred while attempting to 
set value of local variable.
I debugged this problem a little, the assigment fails when it checks if the
field type and the value type come from the same classloader (or two compatible
classloaders).
Need more investigation.
Re-assign for investigation.
Deferred
I think that our methods that force load classes can use the wrong class 
loader and cause this problem. The methods in Instruction.getType(...) and 
classForName(...) should be re-written to use the receiving type's class 
loader. We'll need to re-write these methods to take a classloader context 
(but I think it's do-able, as it's all internal implementation).
Created attachment 24687
Patch to use correct class loader
Released changes to fix class loader usage. Changes to IRuntimeContext, 
JavaObjectRuntimeContext, RuntimeContext, [+] AbstractRuntimeContext, and 
Instruction. The context is now responsible for loading classes, and the 
behavior is implemented/shared by our contexts via the new class 
AbstractRuntimeContext. Can't reproduce original problem due to a different 
bug.
Problem still occurrs on J9/IBM with patch. Problem does not occurr on Sun VM.
Appears to be a VM bug on J9/IBM VM? When we attempt to perform the final 'set 
value' after the evaluation we ensure that the type of the local variable 
being assigned the new value is compatible with the value's type, and the type 
for 'IMarker[]' is claimed not to be loaded in the target VM (when it is). The 
type check attempts to retrive the type of the local, which results in this 
exception (i.e. the type of the local is not loaded). It checks that the 
method'd declaring type's classloader can see the type 'IMarker[]', which 
claims it cannot (on J9, but Sun VM can). We eventually perform a JDWP call to 
get the visible classes for the classloader, and the result does not contain 
IMarker[].


com.sun.jdi.ClassNotLoadedException: Type has not been loaded
at org.eclipse.jdi.internal.ReferenceTypeImpl.create
(ReferenceTypeImpl.java:1278)
at org.eclipse.jdi.internal.TypeImpl.create(TypeImpl.java:64)
at org.eclipse.jdi.internal.LocalVariableImpl.type(LocalVariableImpl.java:166)
at org.eclipse.jdi.internal.StackFrameImpl.setValue(StackFrameImpl.java:174)
at org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.setJDIValue
(JDILocalVariable.java:84)
at org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.setValue
(JDILocalVariable.java:185)
at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.AssignmentOperator.execute
(AssignmentOperator.java:66)
at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:50)
at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1
$EvaluationRunnable.run(ASTEvaluationEngine.java:347)
at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:565)
at 
org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable
.run(ASTEvaluationEngine.java:381)
at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run
(JDIThread.java:2446)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

Would be good to write a stand-alone test case with JDI client (no Eclipse) 
that demos the problem. However, the problem appears to be related to having 
multiple class loaders.
Found a test case that fails on Sun, works on J9:
* debug to the breakpoint
* step over the line
* eval 'patterns = new Pattern[0]'

org.eclipse.debug.core.DebugException[5010]: 
com.sun.jdi.ClassNotLoadedException: Type has not been loaded
	at org.eclipse.jdi.internal.ReferenceTypeImpl.create
(ReferenceTypeImpl.java:1278)
	at org.eclipse.jdi.internal.TypeImpl.create(TypeImpl.java:64)
	at org.eclipse.jdi.internal.ArrayTypeImpl.componentType
(ArrayTypeImpl.java:91)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIArrayType.getComponentType
(JDIArrayType.java:58)
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAllocation.execute
(ArrayAllocation.java:62)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:50)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1
$EvaluationRunnable.run(ASTEvaluationEngine.java:347)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:565)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable
.run(ASTEvaluationEngine.java:381)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run
(JDIThread.java:2446)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)



public class LoadingExample {
    
    public static void main(String[] args) {
        new LoadingExample().load();
    }
    
    public void load() {
        ClassLoader rootClassLoader = this.getClass().getClassLoader();
        try {
            URL url = new File("").toURL();
            URLClassLoader loader1 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            URLClassLoader loader2 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            loader1.loadClass("java.util.regex.Pattern");
            loader2.loadClass("[Ljava.util.regex.Pattern;");
            Pattern[] patterns = new Pattern[0]; // BREAKPOINT
            System.out.println(patterns);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        
    }
}
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20040310

Debug to BreakpointManager#loadBreakpoints, just after the line that reads:
  IMarker markers= createPersistedMarkers(resource);

Try to evaluate the string:
  markers= new IMarker[0]

The following exception is returned:
  Evaluation failed. Reason(s):
    com.sun.jdi.ClassNotLoadedException: Type has not been loaded occurred while attempting to 
set value of local variable.
I debugged this problem a little, the assigment fails when it checks if the
field type and the value type come from the same classloader (or two compatible
classloaders).
Need more investigation.
Re-assign for investigation.
Deferred
I think that our methods that force load classes can use the wrong class 
loader and cause this problem. The methods in Instruction.getType(...) and 
classForName(...) should be re-written to use the receiving type's class 
loader. We'll need to re-write these methods to take a classloader context 
(but I think it's do-able, as it's all internal implementation).
Created attachment 24687
Patch to use correct class loader
Released changes to fix class loader usage. Changes to IRuntimeContext, 
JavaObjectRuntimeContext, RuntimeContext, [+] AbstractRuntimeContext, and 
Instruction. The context is now responsible for loading classes, and the 
behavior is implemented/shared by our contexts via the new class 
AbstractRuntimeContext. Can't reproduce original problem due to a different 
bug.
Problem still occurrs on J9/IBM with patch. Problem does not occurr on Sun VM.
Appears to be a VM bug on J9/IBM VM? When we attempt to perform the final 'set 
value' after the evaluation we ensure that the type of the local variable 
being assigned the new value is compatible with the value's type, and the type 
for 'IMarker[]' is claimed not to be loaded in the target VM (when it is). The 
type check attempts to retrive the type of the local, which results in this 
exception (i.e. the type of the local is not loaded). It checks that the 
method'd declaring type's classloader can see the type 'IMarker[]', which 
claims it cannot (on J9, but Sun VM can). We eventually perform a JDWP call to 
get the visible classes for the classloader, and the result does not contain 
IMarker[].



Would be good to write a stand-alone test case with JDI client (no Eclipse) 
that demos the problem. However, the problem appears to be related to having 
multiple class loaders.
Found a test case that fails on Sun, works on J9:
* debug to the breakpoint
* step over the line
* eval 'patterns = new Pattern[0]'

org.eclipse.debug.core.DebugException[5010]: 




public class LoadingExample {
    
    public static void main(String[] args) {
        new LoadingExample().load();
    }
    
    public void load() {
        ClassLoader rootClassLoader = this.getClass().getClassLoader();
        try {
            URL url = new File("").toURL();
            URLClassLoader loader1 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            URLClassLoader loader2 = new URLClassLoader(new URL[]{url}, 
rootClassLoader);
            loader1.loadClass("java.util.regex.Pattern");
            loader2.loadClass("[Ljava.util.regex.Pattern;");
            Pattern[] patterns = new Pattern[0]; // BREAKPOINT
            System.out.println(patterns);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        
    }
}
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54988" />
    <CreationDate amount="2004-03-16 13:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Removed deprecated methods in VMRunnerConfiguration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Remove depreacted methods for bootpath enhancements that were introduced in 
3.0, now that bug 50909 is fixed.
Fixed. 
Please verify, Luc.
Verified.</WithStack>
    <WithOutStack>Remove depreacted methods for bootpath enhancements that were introduced in 
3.0, now that bug 50909 is fixed.
Fixed. 
Please verify, Luc.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54989" />
    <CreationDate amount="2004-03-16 13:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CellEditors] [regression] ComboBoxCellEditor does not fire value applied</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functiondef">
        <location start="2374" end="2915" />
        <code>public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell();
	shell.setLayout(new GridLayout());
	final CCombo combo = new CCombo(shell, 0);
	combo.setItems(new String[] {"item 1","item 2","item 3"});
	
	combo.addSelectionListener(new SelectionAdapter() {
		public void widgetDefaultSelected(SelectionEvent e) {
			System.out.println("widget default selected");
		}
	});
	
	shell.setSize(400,300);
	shell.open();
	
	while (!shell.isDisposed())
		if (!display.readAndDispatch())
			display.sleep();
}</code>
      </source_code>
      <source_code type="import">
        <location start="10421" end="10447" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10448" end="10481" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10482" end="10514" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10515" end="10547" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10548" end="10580" />
        <code>import org.eclipse.swt.custom.*;</code>
      </source_code>
      <source_code type="class">
        <location start="10582" end="13151" />
        <code>public class CComboAccessibilityTest {
	static Display display;
	static Shell shell;
	static Combo combo, readOnlyCombo;
	static CCombo ccombo, readOnlyCcombo;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new GridLayout(4, true));
		shell.setText("CCombo Accessibility Test");
		
		Label comboLabel = new Label(shell, SWT.None);
		comboLabel.setText("Platform (Edit, ComboBox, ComboLBox)");
		comboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableComboLabel = new Label(shell, SWT.None);
		editableComboLabel.setText("Platform-ReadOnly");
		editableComboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label ccomboLabel = new Label(shell, SWT.None);
		ccomboLabel.setText("CCombo (Edit, Button, ListBox)");
		ccomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableCcomboLabel = new Label(shell, SWT.None);
		editableCcomboLabel.setText("CCombo-ReadOnly");
		editableCcomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));

		SelectionListener listener = new SelectionListener() {
			public void widgetSelected(SelectionEvent e) {
				System.out.println("selection");
			}
			public void widgetDefaultSelected(SelectionEvent e) {
				System.out.println("default selection");
			}
		};
		
		combo = new Combo(shell, SWT.NONE);
		for (int i = 0; i &lt; 5; i++) {
			combo.add("item" + i);
		}
		combo.setText("item0");
		combo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		combo.addSelectionListener(listener);

		readOnlyCombo = new Combo(shell, SWT.READ_ONLY);
		for (int i = 0; i &lt; 5; i++) {
			readOnlyCombo.add("item" + i);
		}
		readOnlyCombo.setText("item0");
		readOnlyCombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCombo.addSelectionListener(listener);

		ccombo = new CCombo(shell, SWT.BORDER);
		for (int i = 0; i &lt; 5; i++) {
			ccombo.add("item" + i);
		}
		ccombo.setText("item0");
		ccombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		ccombo.addSelectionListener(listener);

		readOnlyCcombo = new CCombo(shell, SWT.BORDER | SWT.READ_ONLY);

		for (int i = 0; i &lt; 5; i++) {
			readOnlyCcombo.add("item" + i);
		}
		readOnlyCcombo.setText("item0");
		readOnlyCcombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCcombo.addSelectionListener(listener);

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="4">
      <Enumeration lines="2">
        <Lines>
          <Line>1) Drop down a list of choices</Line>
          <Line>2) Select a choice that is different than the currently selected value.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1) Add a task</Line>
          <Line>2) Bring up the cell editor on the priority</Line>
          <Line>3) Select an entry</Line>
          <Line>4) Hit return</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- An item is selected with the mouse.</Line>
          <Line>- The drop down is shown by clicking on the arrow, then an item is selected</Line>
          <Line>from the drop down with the up and down arrow keys, and the enter key is</Line>
          <Line>pressed on the selected item.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- An item is selected with the mouse.</Line>
          <Line>- Traversing the items in the pull down using only the up and down arrow keys.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1) Drop down a list of choices
2) Select a choice that is different than the currently selected value.

valueApplied should be fired by the cell editor.
I wonder if this is a consequence of the changes SWT made to the CCombo control
to fix the extra events that were being fired...
It is not related.  This bug pre-dates the fix for the other bug.  I checked.
This was a new feature from Stefan
I submitted ComboViewer (not in head yet), not ComboBoxCellEditor. This is
unrelated.
When you say valueApplied you mean valueChanged(boolean oldValidState, boolean 
newValidState)correct?

Right now we cache the selection and thats it. Application happens on default 
selection or loss of focus.
"Application happens on default selection"

Then perhaps SWT is no longer firing default selection? Either way, you 
probably have no way of visually verifying this bug without a real client of 
the propertysheet/celleditors.  If you are sure that the cell editor's code has 
not changed since 2.1, then write an SWT snippet that shows that default 
selection is no longer fired.
I can test using the Tesk list that default selection is working.

STEPS
1) Add a task 
2) Bring up the cell editor on the priority
3) Select an entry
4) Hit return 

And it is applied

If you think there is some behaviour that is not happening please give clear 
steps that I can follow - I have no idea what the problem is you are referring 
to.
Sorry for not being clear.  Steps 1&amp;2 must both be performed using the Mouse, 
not the keyboard.
Actually, in your own list of steps, the value should have been applied at step 
3.

For example, if the task is currently set to LOW priority, and the CellEditor 
appears beside the icon, then you should see the icon change immediately when 
the new value is selected, not upon ENTER.

BTW, I tried sorting task list by priority, which works once.  But if you 
change a task's priority, it does not get resorted.  Is this a bug?
*** Bug 54377 has been marked as a duplicate of this bug. ***
Can you give me an example of different behaviour in 2.1? I am checking with 
the cell editor there but it is covering the icon so I can't see if this has 
been going on since 2.1 or not.
The different behavior is what I said in comment 1,
"valueApplied should be fired by the cell editor"

I have unwrapped ComboBoxCellEditor for you and isolated the SWT change:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell();
	shell.setLayout(new GridLayout());
	final CCombo combo = new CCombo(shell, 0);
	combo.setItems(new String[] {"item 1","item 2","item 3"});
	
	combo.addSelectionListener(new SelectionAdapter() {
		public void widgetDefaultSelected(SelectionEvent e) {
			System.out.println("widget default selected");
		}
	});
	
	shell.setSize(400,300);
	shell.open();
	
	while (!shell.isDisposed())
		if (!display.readAndDispatch())
			display.sleep();
}

Steve, "widget default selected" is no longer fired when you select an item 
with the mouse.  This behavior differs from the 2.1 behavior.  My guess is you 
are trying to make it act more like Combo. Is it possible to make Combo like 
CCombo was instead?  It is useful to detect the difference between using ARROW 
keys to scroll through the choices, and mouse clicking directly on the choice 
you want.  Given the current behavior, these two actions cannot be 
distinguished.
So the workaround for us would be to make widgetSelected and 
widgetDefaultSelected do the same thing.

The problem with doing that is that you could not use the mouse to navigate 
then as the editor would keep closing on you.
I didn't understant the last comment.
The workaround is problematic only when using the keyboard to navigate through 
the various choices. In other works:

ALT+DOWN..
DOWN..
DOWN..
DOWN..
ENTER

should produce 1 default selected event.

This is why I prefer the old behavior, and proposed that Combo be change to 
emulate CCombo.
Randy, widgetDefaultSelected() should never have been sent from the mouse.  It 
is sent when you hit Return in a Combo.  Can you confirm that this has changed 
between 2.x and 3.x?

One thing, Return is also used for the default button.  If you have a default 
button in a window, it gets the Return first and eats it as part of 
SWT.TRAVERSE_RETURN.  Is that what you are seeing?
Need to decide on the answer for 3.0
Steve, the test snippet is listed in comment 12.  I verified the change between 
2.1 and 3.0.

I don't care exactly what SWT does, but there needs to be a way to distinguish 
between navigating via keyboard, and selecting with the mouse. Users expect to 
see an immediate update (fire value applied) becaues this is how Combos behave 
when they are in toolbars (for example, Zoom, Font Family, Font Size, etc.)
The "widgetDefaultSelected" bug has been fixed in CCombo for 3.0.  It was 
bogusly sent in 2.1.x.  The "widgetSelected" method is called when an item is 
selected from the list.  Nothing more for SWT to do here.
Steve, from what you are saying, it is impossible to restore the 2.1 behavior. 
If widgetSelected is used to fire valueApplied, then keyboard users will have 
valueApplied fired repeatedly as they scroll up and down the list of choices 
using the arrow keys.

Bring up Display Properties in windows XP.  Press ALT+DOWN to drop down the 
choice of themes.  If you use the arrow keys to select a theme, the preview 
area does not reflect the selection changing.  But, if you select a choice from 
the drop down with the mouse, the preview area *does* update.  How can we make 
this distinction in SWT? Is there an event when the drop-down is rolled-up? I 
don't think a mouseDown event is dispatched when clicking on the dropdown.
I have verified the widgetDefaultSelected event with Eclipse 2.1, 2.1.3 and 
M8, using the code snippet from &lt;A HREF="#c12"&gt;comment 12&lt;/A&gt;.

For eclipse 2.1 and 2.1.3:
Event is fired when:
- An item is selected with the mouse.
- The drop down is shown by clicking on the arrow, then an item is selected 
from the drop down with the up and down arrow keys, and the enter key is 
pressed on the selected item.

Event is NOT fired when:
- Traversing the items in the pull down using only the up and down arrow keys.

For M8:
Event is fired when:
- The drop down is shown by clicking on the arrow, then an item is selected 
from the drop down with the up and down arrows, and the enter key is pressed 
on the selected item.

Event is NOT fired when:
- An item is selected with the mouse.
- Traversing the items in the pull down using only the up and down arrow keys.


ALT+UP_ARROW can also cause the drop-down to rollup. It would be nice if this 
fired some event as well.
Closing as this change is a result of an SWT fix.
CAR, can you decode all this and make sure that CCombo and Combo are doing the 
right thing?  Specifically we need to confirm that we are ok with comment 
#20.  Thanks.
This change in behavior is unacceptable for 3.0.
Specifically, the CellEditor behavior is unacceptable because of its widespread 
use in the property sheet. I do not have an opinion on the CCombo change.
Randy, I'm not sure why you removed Steve from the cc list when you added me.  I
assume it was an accident.

I'm reassigning this to the SWT component owner since the CCombo change is under
review by SWT.

If there will be a change to the notifications from what we had in 2.1, please
move this back to UI so we can fix up ComboBoxCellEditor accordingly.
Created attachment 9307
Excel spreadsheet showing Combo vs. CCombo events

Here's another snippet (pasted below) that compares Combo with CCombo (Editable
and Read-Only). I generated the attached Excel Spreadsheet ;) to compare
selection and defaultSelection events generated for various user mouse/keyboard
actions (if I missed any important ones, let me know).

There are a lot of differences in the 'selection' event generation. The
'defaultSelection' events are somewhat more consistent: if the user hits Enter
with the list visible or not, they get defaultSelection. (If they hit TAB in a
CCombo, they get defaultSelection too - so I can see why everybody got used to
hooking default selection in their property sheets).

I do think that the eclipse 2.1 behavior was bogus, and that it is correct not
to fire defaultSelection when an item is selected. Selecting an item should,
and does, fire the 'selection' event. (Of course, it is probably also bogus to
have Tab generate defaultSelection... Steve?).

Having said that, however, I can see that apps would like to get a consistent
event for "the user is really done selecting now". (or... "Is that your final
answer?" :)  And it seems that users cannot be trusted to hit 'Enter' - they
tend to TAB out of things, or 'select-with-mouse-and-then-go-click-elsewhere',
without ever dreaming that the UI was expecting an 'Enter'.  ;)

Steve - what is CCombo's "raison d'etre"? I think we had to create it because
Combo had a fixed size on some platforms and it looked too big and ugly in a
Table - right? Has anybody checked lately if this is still true? CCombo looks
pretty dated on XP... (but I guess that's another issue...)

Maybe we need to be thinking that CCombo is a whole different beast, and not
trying to make it behave like Combo (because we are failing at that anyhow).
Maybe CCombo is just for being in Tables. Maybe it's ok to change the semantics
of defaultSelection to mean "the list is gone and the user has really selected
something".

Other than a new event for Show/Hide of the list, I can't think of anything
else to help these people. The advantage of adding the new event is that it
allows us to think that we might one day be able to make CCombo look &amp; feel
exactly like Combo (with an extra event). Another advantage is that we don't
have mixed-up semantics for defaultSelection in SWT.

But adding a new event is a bit more of a pain for the apps - they are less
likely to think of checking for every possible case. The old bogus behavior
lets the app just hook defaultSelection, and they will catch the user hitting
Enter, TAB, or select-with-mouse. (Hmmm... just noticed that you will *not*
catch the user using arrow keys to select *without* dropping down the list.
i.e. TAB to give the CCombo focus, use UP or DOWN, then TAB out... how do you
guys handle that case today? You should only be getting 'selection'... are you
bogus in that case?)


Here's the new snippet:

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.custom.*;

public class CComboAccessibilityTest {
	static Display display;
	static Shell shell;
	static Combo combo, readOnlyCombo;
	static CCombo ccombo, readOnlyCcombo;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new GridLayout(4, true));
		shell.setText("CCombo Accessibility Test");
		
		Label comboLabel = new Label(shell, SWT.None);
		comboLabel.setText("Platform (Edit, ComboBox, ComboLBox)");
		comboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableComboLabel = new Label(shell, SWT.None);
		editableComboLabel.setText("Platform-ReadOnly");
		editableComboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label ccomboLabel = new Label(shell, SWT.None);
		ccomboLabel.setText("CCombo (Edit, Button, ListBox)");
		ccomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableCcomboLabel = new Label(shell, SWT.None);
		editableCcomboLabel.setText("CCombo-ReadOnly");
		editableCcomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));

		SelectionListener listener = new SelectionListener() {
			public void widgetSelected(SelectionEvent e) {
				System.out.println("selection");
			}
			public void widgetDefaultSelected(SelectionEvent e) {
				System.out.println("default selection");
			}
		};
		
		combo = new Combo(shell, SWT.NONE);
		for (int i = 0; i &lt; 5; i++) {
			combo.add("item" + i);
		}
		combo.setText("item0");
		combo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		combo.addSelectionListener(listener);

		readOnlyCombo = new Combo(shell, SWT.READ_ONLY);
		for (int i = 0; i &lt; 5; i++) {
			readOnlyCombo.add("item" + i);
		}
		readOnlyCombo.setText("item0");
		readOnlyCombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCombo.addSelectionListener(listener);

		ccombo = new CCombo(shell, SWT.BORDER);
		for (int i = 0; i &lt; 5; i++) {
			ccombo.add("item" + i);
		}
		ccombo.setText("item0");
		ccombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		ccombo.addSelectionListener(listener);

		readOnlyCcombo = new CCombo(shell, SWT.BORDER | SWT.READ_ONLY);

		for (int i = 0; i &lt; 5; i++) {
			readOnlyCcombo.add("item" + i);
		}
		readOnlyCcombo.setText("item0");
		readOnlyCcombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCcombo.addSelectionListener(listener);

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}
My god, we may have to put back the bogus SWT.DefaultSelection for the single 
selection case.  I will check with Veronika when she gets back.  It seems that 
we shouldn't be sending it when the user tabs out of a CCombo.

The right answer should be to remove it and fix ComboBoxCellEditor to use the 
SWT.Traverse callback to do it.  ComboBoxCellEditor must already be doing 
something when the user clicks off with the mouse.  Thoughts?
Yes, on focus lost, all types of cell editors fire value applied already.
VI is back!  She now owns the problem.  Here is my initial position: I believe 
we need to either completely remove the bogus SWT.DefaultSelection 
notification or put it all back.
1) https://bugs.eclipse.org/bugs/show_bug.cgi?id=41347
This bug report requested that CCombo NOT fire the default selection on mouse 
selection - thus the change in 3.0.  Since this is consistent with Combo, I 
think this is the correct behaviour.

I am still thinking about the case where the application wants the value 
applied immediately when selected by the mouse versus delayed when selected by 
arrows in the list versus ? when selected by arrows in the text field.

2) I can remove the default selection on tabbing from the CCombo.  I agree 
that this is behaviour teh application should provide and indeed, as Randy 
said in comment #29, Eclipse already handles the focus lost event which would 
copver the tab case as well.
Please fix the tab thing for 3.0.

If the application wants the value to apply right away, then it should hook 
the SWT.Selection callback as well.
Is it impossible to send a "rolled up" event from CCombo and Combo?  This is 
the *only* way to simulate the behavior seen on Internet Explorer's Address bar 
combo.  Both ALT+UP and MOUSE click cause the combo to "go", but changing 
selection via DOWN, PAGE_DOWN, etc, does not cause it to go.  What is the SWT 
way to do this??
Created attachment 9548
Display Properties gets it wrong

"tab in popup list causing DefaultSelection" removed in head R3.0.

I am not going to add the default selection on mouse selection for the
following reason - it causes inconsistencies between the value displayed in the
text field and the value applied.  

For example, see the Display Properties dialog attached here.  I opened the
list for the Theme combo using Alt+Down.  I then used the arrow keys to change
from Windows XP to Windows Classic.  Then I hit Escape.  Notice that the Sample
shows the Windows XP style but the Theme shows the Windows Classic style. 
Which one is right?  Even Windows does not handle this correctly.

Notice also that in the same dialog, under the Appearance tab, the "Windows and
buttons" Combo always applies the change on Selection (not Default Selection). 
So they are not even consistent within one application.
The "default selection on tab" problem has been fixed - there is no longer a 
default selection on tab.

The "no default selection on mouse selection in list" problem will not be 
fixed - this is intentional.
VI, I am not suggesting that you fire default selected, I am just suggesting 
that you make it possible to create an IE address-bar-like behavior.  There are 
times when doing something on selection change is cheap and fast and it is OK 
to do so, and then there are times (such as loading a large WinXP theme, or 
navigating to a website, or executing an undoable command from the property 
sheet) when you should wait until the user is really finished selecting what 
they want to select.

In the case of the propertysheet, if the user is selecting the layout manager 
for container, then it is unacceptable for the choices between the current and 
the desired to be applied.  If the intermediate values are applied (e.g. 
keyboard user pressing DOWN), the result is *not* the same.  Therefore, 
ComboboxCellEditor cannot apply value on selectionChanged event.
I understand the requirement.  I will have a look at what events are provided 
by the native Combo widget to see what is possible.
When it is expensive, use the SWT.DefaultSelection event and make the guy 
press CR for now?
I'm reopening this bug. It's fine that the focus-lost part has been fixed, but 
the original problem is not addressed yet.
Should this be moved to UI?  Veronika?
Randy, you are looking for "IE address-bar-like behavior" but if you look at 
that case as an example you will see that it behaves quite unlike a combo 
box.  For example, you can not use the up and down arrows in the text area to 
change the selection.

If you do not want to have a mismatch between the selection shown in the the 
text area and the selection you have applied to your UI you will need more 
than just the ability to know when the list has been closed.
Can we close this stupid PR yet?
From eclipse-dev mailing list:

&lt;quote&gt;
I am using a combobox cell editor with table. also, i am using a cell modifier 
subclass. In windows when i run the code, the selection event of the combo box 
is correctly fired in the ComboBoxCellEditor before the modify() method is
called in the CellModifier. However, in linux (red hat version 9), the order is
reversed resulting in that always the modify method is called before the 
widgetSelected() method and thus, the modify event always gets -1 in the value
parameter.
&lt;/quote&gt;

Using call hierarchy on:
+ ICellModifier.modify(...)
  + saveEditorValue (TableViewerImpl)
    + applyEditorValue (TableViewerImpl)
      + initCellEditorListener (""")

the last method there is creating an anonymous inner class to listen 
for "applyEditorValue()".  So this is probably the same problem.
Sounds like completely different problem to me (a platform difference in the 
ordering of the events).  Is there a PR and a test case for it?

Randy, I'm going to close this PR.  You can open separate PR's that describes 
the combo box behavior you want or you can try and implement what you want and 
see which API is missing and enter problem reports for that.  In any 
case, "[CellEditors] [regression] ComboBoxCellEditor does not fire value 
applied" no longer captures this discussion and we will not be changing either 
SWT.Selection or SWT.DefaultSelection here to fix that (which is what the 
problem report was about).
It is a related problem. Although the event ordering is probably an unrelated 
bug, that bug was conveniently hidden by the widgetDefaultSelected event being 
fired in the past.
moving back to UI for workaround
We don't intend to diverge from the SWT behaviour if it all possible. If you 
have a suggested patch please attach here.
Moving to later as we will not have time to address this for 3.0.
The workaround for CCombo would be to add a Shell listener, and check shell 
activation. I tried this and it works. If normal selection event is received 
when the Shell is not active, defer sending fireValueApplied until the shell 
becomes active again.  Otherwise, the user is using UP/DOWN arrow to change 
selection without dropping down the list.  So in these cases fire value changed 
immediately, or after a slight delay.

Carolyn, if you add a KeyListener to the CCombo in your snippet, it is no 
longer traversible.  I'm going to open a separate bug.
Tod, this has nothing to do with SWT behavior, but a limitation.  
The "behavior" just happened to be correct in 2.1 but is no longer.
re-opening
marking as WONTFIX, it is unfortunate that the bug was in SWT in 2.1 but 
working around it might just as well introduce other problems
Tod, I've opened bug 73478.
A similar issue is present in ComboBoxViewerCellEditor. A possible workaround is described in https://bugs.eclipse.org/bugs/show_bug.cgi?id=230398</WithStack>
    <WithOutStack>1) Drop down a list of choices
2) Select a choice that is different than the currently selected value.

valueApplied should be fired by the cell editor.
I wonder if this is a consequence of the changes SWT made to the CCombo control
to fix the extra events that were being fired...
It is not related.  This bug pre-dates the fix for the other bug.  I checked.
This was a new feature from Stefan
I submitted ComboViewer (not in head yet), not ComboBoxCellEditor. This is
unrelated.
When you say valueApplied you mean valueChanged(boolean oldValidState, boolean 
newValidState)correct?

Right now we cache the selection and thats it. Application happens on default 
selection or loss of focus.
"Application happens on default selection"

Then perhaps SWT is no longer firing default selection? Either way, you 
probably have no way of visually verifying this bug without a real client of 
the propertysheet/celleditors.  If you are sure that the cell editor's code has 
not changed since 2.1, then write an SWT snippet that shows that default 
selection is no longer fired.
I can test using the Tesk list that default selection is working.

STEPS
1) Add a task 
2) Bring up the cell editor on the priority
3) Select an entry
4) Hit return 

And it is applied

If you think there is some behaviour that is not happening please give clear 
steps that I can follow - I have no idea what the problem is you are referring 
to.
Sorry for not being clear.  Steps 1&amp;2 must both be performed using the Mouse, 
not the keyboard.
Actually, in your own list of steps, the value should have been applied at step 
3.

For example, if the task is currently set to LOW priority, and the CellEditor 
appears beside the icon, then you should see the icon change immediately when 
the new value is selected, not upon ENTER.

BTW, I tried sorting task list by priority, which works once.  But if you 
change a task's priority, it does not get resorted.  Is this a bug?
*** Bug 54377 has been marked as a duplicate of this bug. ***
Can you give me an example of different behaviour in 2.1? I am checking with 
the cell editor there but it is covering the icon so I can't see if this has 
been going on since 2.1 or not.
The different behavior is what I said in comment 1,
"valueApplied should be fired by the cell editor"

I have unwrapped ComboBoxCellEditor for you and isolated the SWT change:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell();
	shell.setLayout(new GridLayout());
	final CCombo combo = new CCombo(shell, 0);
	combo.setItems(new String[] {"item 1","item 2","item 3"});
	
	combo.addSelectionListener(new SelectionAdapter() {
		public void widgetDefaultSelected(SelectionEvent e) {
			System.out.println("widget default selected");
		}
	});
	
	shell.setSize(400,300);
	shell.open();
	
	while (!shell.isDisposed())
		if (!display.readAndDispatch())
			display.sleep();
}

Steve, "widget default selected" is no longer fired when you select an item 
with the mouse.  This behavior differs from the 2.1 behavior.  My guess is you 
are trying to make it act more like Combo. Is it possible to make Combo like 
CCombo was instead?  It is useful to detect the difference between using ARROW 
keys to scroll through the choices, and mouse clicking directly on the choice 
you want.  Given the current behavior, these two actions cannot be 
distinguished.
So the workaround for us would be to make widgetSelected and 
widgetDefaultSelected do the same thing.

The problem with doing that is that you could not use the mouse to navigate 
then as the editor would keep closing on you.
I didn't understant the last comment.
The workaround is problematic only when using the keyboard to navigate through 
the various choices. In other works:

ALT+DOWN..
DOWN..
DOWN..
DOWN..
ENTER

should produce 1 default selected event.

This is why I prefer the old behavior, and proposed that Combo be change to 
emulate CCombo.
Randy, widgetDefaultSelected() should never have been sent from the mouse.  It 
is sent when you hit Return in a Combo.  Can you confirm that this has changed 
between 2.x and 3.x?

One thing, Return is also used for the default button.  If you have a default 
button in a window, it gets the Return first and eats it as part of 
SWT.TRAVERSE_RETURN.  Is that what you are seeing?
Need to decide on the answer for 3.0
Steve, the test snippet is listed in comment 12.  I verified the change between 
2.1 and 3.0.

I don't care exactly what SWT does, but there needs to be a way to distinguish 
between navigating via keyboard, and selecting with the mouse. Users expect to 
see an immediate update (fire value applied) becaues this is how Combos behave 
when they are in toolbars (for example, Zoom, Font Family, Font Size, etc.)
The "widgetDefaultSelected" bug has been fixed in CCombo for 3.0.  It was 
bogusly sent in 2.1.x.  The "widgetSelected" method is called when an item is 
selected from the list.  Nothing more for SWT to do here.
Steve, from what you are saying, it is impossible to restore the 2.1 behavior. 
If widgetSelected is used to fire valueApplied, then keyboard users will have 
valueApplied fired repeatedly as they scroll up and down the list of choices 
using the arrow keys.

Bring up Display Properties in windows XP.  Press ALT+DOWN to drop down the 
choice of themes.  If you use the arrow keys to select a theme, the preview 
area does not reflect the selection changing.  But, if you select a choice from 
the drop down with the mouse, the preview area *does* update.  How can we make 
this distinction in SWT? Is there an event when the drop-down is rolled-up? I 
don't think a mouseDown event is dispatched when clicking on the dropdown.
I have verified the widgetDefaultSelected event with Eclipse 2.1, 2.1.3 and 
M8, using the code snippet from &lt;A HREF="#c12"&gt;comment 12&lt;/A&gt;.

For eclipse 2.1 and 2.1.3:
Event is fired when:
- An item is selected with the mouse.
- The drop down is shown by clicking on the arrow, then an item is selected 
from the drop down with the up and down arrow keys, and the enter key is 
pressed on the selected item.

Event is NOT fired when:
- Traversing the items in the pull down using only the up and down arrow keys.

For M8:
Event is fired when:
- The drop down is shown by clicking on the arrow, then an item is selected 
from the drop down with the up and down arrows, and the enter key is pressed 
on the selected item.

Event is NOT fired when:
- An item is selected with the mouse.
- Traversing the items in the pull down using only the up and down arrow keys.


ALT+UP_ARROW can also cause the drop-down to rollup. It would be nice if this 
fired some event as well.
Closing as this change is a result of an SWT fix.
CAR, can you decode all this and make sure that CCombo and Combo are doing the 
right thing?  Specifically we need to confirm that we are ok with comment 
#20.  Thanks.
This change in behavior is unacceptable for 3.0.
Specifically, the CellEditor behavior is unacceptable because of its widespread 
use in the property sheet. I do not have an opinion on the CCombo change.
Randy, I'm not sure why you removed Steve from the cc list when you added me.  I
assume it was an accident.

I'm reassigning this to the SWT component owner since the CCombo change is under
review by SWT.

If there will be a change to the notifications from what we had in 2.1, please
move this back to UI so we can fix up ComboBoxCellEditor accordingly.
Created attachment 9307
Excel spreadsheet showing Combo vs. CCombo events

Here's another snippet (pasted below) that compares Combo with CCombo (Editable
and Read-Only). I generated the attached Excel Spreadsheet ;) to compare
selection and defaultSelection events generated for various user mouse/keyboard
actions (if I missed any important ones, let me know).

There are a lot of differences in the 'selection' event generation. The
'defaultSelection' events are somewhat more consistent: if the user hits Enter
with the list visible or not, they get defaultSelection. (If they hit TAB in a
CCombo, they get defaultSelection too - so I can see why everybody got used to
hooking default selection in their property sheets).

I do think that the eclipse 2.1 behavior was bogus, and that it is correct not
to fire defaultSelection when an item is selected. Selecting an item should,
and does, fire the 'selection' event. (Of course, it is probably also bogus to
have Tab generate defaultSelection... Steve?).

Having said that, however, I can see that apps would like to get a consistent
event for "the user is really done selecting now". (or... "Is that your final
answer?" :)  And it seems that users cannot be trusted to hit 'Enter' - they
tend to TAB out of things, or 'select-with-mouse-and-then-go-click-elsewhere',
without ever dreaming that the UI was expecting an 'Enter'.  ;)

Steve - what is CCombo's "raison d'etre"? I think we had to create it because
Combo had a fixed size on some platforms and it looked too big and ugly in a
Table - right? Has anybody checked lately if this is still true? CCombo looks
pretty dated on XP... (but I guess that's another issue...)

Maybe we need to be thinking that CCombo is a whole different beast, and not
trying to make it behave like Combo (because we are failing at that anyhow).
Maybe CCombo is just for being in Tables. Maybe it's ok to change the semantics
of defaultSelection to mean "the list is gone and the user has really selected
something".

Other than a new event for Show/Hide of the list, I can't think of anything
else to help these people. The advantage of adding the new event is that it
allows us to think that we might one day be able to make CCombo look &amp; feel
exactly like Combo (with an extra event). Another advantage is that we don't
have mixed-up semantics for defaultSelection in SWT.

But adding a new event is a bit more of a pain for the apps - they are less
likely to think of checking for every possible case. The old bogus behavior
lets the app just hook defaultSelection, and they will catch the user hitting
Enter, TAB, or select-with-mouse. (Hmmm... just noticed that you will *not*
catch the user using arrow keys to select *without* dropping down the list.
i.e. TAB to give the CCombo focus, use UP or DOWN, then TAB out... how do you
guys handle that case today? You should only be getting 'selection'... are you
bogus in that case?)


Here's the new snippet:

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.custom.*;

public class CComboAccessibilityTest {
	static Display display;
	static Shell shell;
	static Combo combo, readOnlyCombo;
	static CCombo ccombo, readOnlyCcombo;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new GridLayout(4, true));
		shell.setText("CCombo Accessibility Test");
		
		Label comboLabel = new Label(shell, SWT.None);
		comboLabel.setText("Platform (Edit, ComboBox, ComboLBox)");
		comboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableComboLabel = new Label(shell, SWT.None);
		editableComboLabel.setText("Platform-ReadOnly");
		editableComboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label ccomboLabel = new Label(shell, SWT.None);
		ccomboLabel.setText("CCombo (Edit, Button, ListBox)");
		ccomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		Label editableCcomboLabel = new Label(shell, SWT.None);
		editableCcomboLabel.setText("CCombo-ReadOnly");
		editableCcomboLabel.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));

		SelectionListener listener = new SelectionListener() {
			public void widgetSelected(SelectionEvent e) {
				System.out.println("selection");
			}
			public void widgetDefaultSelected(SelectionEvent e) {
				System.out.println("default selection");
			}
		};
		
		combo = new Combo(shell, SWT.NONE);
		for (int i = 0; i &lt; 5; i++) {
			combo.add("item" + i);
		}
		combo.setText("item0");
		combo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		combo.addSelectionListener(listener);

		readOnlyCombo = new Combo(shell, SWT.READ_ONLY);
		for (int i = 0; i &lt; 5; i++) {
			readOnlyCombo.add("item" + i);
		}
		readOnlyCombo.setText("item0");
		readOnlyCombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCombo.addSelectionListener(listener);

		ccombo = new CCombo(shell, SWT.BORDER);
		for (int i = 0; i &lt; 5; i++) {
			ccombo.add("item" + i);
		}
		ccombo.setText("item0");
		ccombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		ccombo.addSelectionListener(listener);

		readOnlyCcombo = new CCombo(shell, SWT.BORDER | SWT.READ_ONLY);

		for (int i = 0; i &lt; 5; i++) {
			readOnlyCcombo.add("item" + i);
		}
		readOnlyCcombo.setText("item0");
		readOnlyCcombo.setLayoutData(new
GridData(GridData.HORIZONTAL_ALIGN_CENTER));
		readOnlyCcombo.addSelectionListener(listener);

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}
My god, we may have to put back the bogus SWT.DefaultSelection for the single 
selection case.  I will check with Veronika when she gets back.  It seems that 
we shouldn't be sending it when the user tabs out of a CCombo.

The right answer should be to remove it and fix ComboBoxCellEditor to use the 
SWT.Traverse callback to do it.  ComboBoxCellEditor must already be doing 
something when the user clicks off with the mouse.  Thoughts?
Yes, on focus lost, all types of cell editors fire value applied already.
VI is back!  She now owns the problem.  Here is my initial position: I believe 
we need to either completely remove the bogus SWT.DefaultSelection 
notification or put it all back.
1) https://bugs.eclipse.org/bugs/show_bug.cgi?id=41347
This bug report requested that CCombo NOT fire the default selection on mouse 
selection - thus the change in 3.0.  Since this is consistent with Combo, I 
think this is the correct behaviour.

I am still thinking about the case where the application wants the value 
applied immediately when selected by the mouse versus delayed when selected by 
arrows in the list versus ? when selected by arrows in the text field.

2) I can remove the default selection on tabbing from the CCombo.  I agree 
that this is behaviour teh application should provide and indeed, as Randy 
said in comment #29, Eclipse already handles the focus lost event which would 
copver the tab case as well.
Please fix the tab thing for 3.0.

If the application wants the value to apply right away, then it should hook 
the SWT.Selection callback as well.
Is it impossible to send a "rolled up" event from CCombo and Combo?  This is 
the *only* way to simulate the behavior seen on Internet Explorer's Address bar 
combo.  Both ALT+UP and MOUSE click cause the combo to "go", but changing 
selection via DOWN, PAGE_DOWN, etc, does not cause it to go.  What is the SWT 
way to do this??
Created attachment 9548
Display Properties gets it wrong

"tab in popup list causing DefaultSelection" removed in head R3.0.

I am not going to add the default selection on mouse selection for the
following reason - it causes inconsistencies between the value displayed in the
text field and the value applied.  

For example, see the Display Properties dialog attached here.  I opened the
list for the Theme combo using Alt+Down.  I then used the arrow keys to change
from Windows XP to Windows Classic.  Then I hit Escape.  Notice that the Sample
shows the Windows XP style but the Theme shows the Windows Classic style. 
Which one is right?  Even Windows does not handle this correctly.

Notice also that in the same dialog, under the Appearance tab, the "Windows and
buttons" Combo always applies the change on Selection (not Default Selection). 
So they are not even consistent within one application.
The "default selection on tab" problem has been fixed - there is no longer a 
default selection on tab.

The "no default selection on mouse selection in list" problem will not be 
fixed - this is intentional.
VI, I am not suggesting that you fire default selected, I am just suggesting 
that you make it possible to create an IE address-bar-like behavior.  There are 
times when doing something on selection change is cheap and fast and it is OK 
to do so, and then there are times (such as loading a large WinXP theme, or 
navigating to a website, or executing an undoable command from the property 
sheet) when you should wait until the user is really finished selecting what 
they want to select.

In the case of the propertysheet, if the user is selecting the layout manager 
for container, then it is unacceptable for the choices between the current and 
the desired to be applied.  If the intermediate values are applied (e.g. 
keyboard user pressing DOWN), the result is *not* the same.  Therefore, 
ComboboxCellEditor cannot apply value on selectionChanged event.
I understand the requirement.  I will have a look at what events are provided 
by the native Combo widget to see what is possible.
When it is expensive, use the SWT.DefaultSelection event and make the guy 
press CR for now?
I'm reopening this bug. It's fine that the focus-lost part has been fixed, but 
the original problem is not addressed yet.
Should this be moved to UI?  Veronika?
Randy, you are looking for "IE address-bar-like behavior" but if you look at 
that case as an example you will see that it behaves quite unlike a combo 
box.  For example, you can not use the up and down arrows in the text area to 
change the selection.

If you do not want to have a mismatch between the selection shown in the the 
text area and the selection you have applied to your UI you will need more 
than just the ability to know when the list has been closed.
Can we close this stupid PR yet?
From eclipse-dev mailing list:

&lt;quote&gt;
I am using a combobox cell editor with table. also, i am using a cell modifier 
subclass. In windows when i run the code, the selection event of the combo box 
is correctly fired in the ComboBoxCellEditor before the modify() method is
called in the CellModifier. However, in linux (red hat version 9), the order is
reversed resulting in that always the modify method is called before the 
widgetSelected() method and thus, the modify event always gets -1 in the value
parameter.
&lt;/quote&gt;

Using call hierarchy on:
+ ICellModifier.modify(...)
  + saveEditorValue (TableViewerImpl)
    + applyEditorValue (TableViewerImpl)
      + initCellEditorListener (""")

the last method there is creating an anonymous inner class to listen 
for "applyEditorValue()".  So this is probably the same problem.
Sounds like completely different problem to me (a platform difference in the 
ordering of the events).  Is there a PR and a test case for it?

Randy, I'm going to close this PR.  You can open separate PR's that describes 
the combo box behavior you want or you can try and implement what you want and 
see which API is missing and enter problem reports for that.  In any 
case, "[CellEditors] [regression] ComboBoxCellEditor does not fire value 
applied" no longer captures this discussion and we will not be changing either 
SWT.Selection or SWT.DefaultSelection here to fix that (which is what the 
problem report was about).
It is a related problem. Although the event ordering is probably an unrelated 
bug, that bug was conveniently hidden by the widgetDefaultSelected event being 
fired in the past.
moving back to UI for workaround
We don't intend to diverge from the SWT behaviour if it all possible. If you 
have a suggested patch please attach here.
Moving to later as we will not have time to address this for 3.0.
The workaround for CCombo would be to add a Shell listener, and check shell 
activation. I tried this and it works. If normal selection event is received 
when the Shell is not active, defer sending fireValueApplied until the shell 
becomes active again.  Otherwise, the user is using UP/DOWN arrow to change 
selection without dropping down the list.  So in these cases fire value changed 
immediately, or after a slight delay.

Carolyn, if you add a KeyListener to the CCombo in your snippet, it is no 
longer traversible.  I'm going to open a separate bug.
Tod, this has nothing to do with SWT behavior, but a limitation.  
The "behavior" just happened to be correct in 2.1 but is no longer.
re-opening
marking as WONTFIX, it is unfortunate that the bug was in SWT in 2.1 but 
working around it might just as well introduce other problems
Tod, I've opened bug 73478.
A similar issue is present in ComboBoxViewerCellEditor. A possible workaround is described in https://bugs.eclipse.org/bugs/show_bug.cgi?id=230398</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54990" />
    <CreationDate amount="2004-03-16 13:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>ALT+DOWN does not drop down CCombo list</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the property sheet, ALT+DOWN does not drop down the list of choices for a 
CCombo. (First press ENTER to realize the CellEditor's CCombo).

I did no test CCombos in general, only in the property sheet.
CAR to quickly investigate the standard Combo keys for various platforms and 
then most likely implement ALT+DOWN.  The bottom line is that CCombo is not 
accessible so this needs to be fixed.  We are under no obligation to use any 
particular keystroke because CCombo is an emulated control however we don't 
want to deviate from the standard.

Note that Return is not a good choice because it is used by the default button 
and also SWT.DefaultSelection.
Fixed &gt; 20040318 to work the way Windows Combo works for ALT+UP/DOWN_ARROW.</WithStack>
    <WithOutStack>In the property sheet, ALT+DOWN does not drop down the list of choices for a 
CCombo. (First press ENTER to realize the CellEditor's CCombo).

I did no test CCombos in general, only in the property sheet.
CAR to quickly investigate the standard Combo keys for various platforms and 
then most likely implement ALT+DOWN.  The bottom line is that CCombo is not 
accessible so this needs to be fixed.  We are under no obligation to use any 
particular keystroke because CCombo is an emulated control however we don't 
want to deviate from the standard.

Note that Return is not a good choice because it is used by the default button 
and also SWT.DefaultSelection.
Fixed &gt; 20040318 to work the way Windows Combo works for ALT+UP/DOWN_ARROW.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54991" />
    <CreationDate amount="2004-03-16 13:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dynamically installing new features may fail</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is a regression noticed in integration build 0316:

After installing a new feature and deciding to "Apply changes" to the current 
workbench, the new plugins are not passed to the runtime.
fixed and to be available in builds &gt; 0316</WithStack>
    <WithOutStack>This is a regression noticed in integration build 0316:

After installing a new feature and deciding to "Apply changes" to the current 
workbench, the new plugins are not passed to the runtime.
fixed and to be available in builds &gt; 0316</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54992" />
    <CreationDate amount="2004-03-16 13:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>'Hide Local Types' button hides all types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040316

The 'Hide Local Types' button in the outline view/page hides all types of the
compilation unit. Only the package declaration and the imports are displayed.
oops, you're right
fixed &gt; 20040317
*** Bug 55071 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I20040316

The 'Hide Local Types' button in the outline view/page hides all types of the
compilation unit. Only the package declaration and the imports are displayed.
oops, you're right
fixed &gt; 20040317
*** Bug 55071 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54993" />
    <CreationDate amount="2004-03-16 13:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Internal Error while building</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341098386">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Breakpoint does not have an associated
marker.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.debug.core.model.Breakpoint.ensureMarker(Breakpoint.java:258)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.isCaught(JavaExceptionBreakpoint.java:206)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.setEnabled(JavaExceptionBreakpoint.java:184)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.problemAdded(JavaDebugOptionsManager.java:289)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.resourceChanged(JavaDebugOptionsManager.java:175)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:255)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:648)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.Platform.run(Platform.java:512)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:248)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:142)</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.AutoBuildJob.broadcastChanges(AutoBuildJob.java:71)</Frame>
          <Frame depth="11">org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:138)</Frame>
          <Frame depth="12">org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:168)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>With i20040316, I am seeing this every time a build takes place (no other
visible effect other than an entry in the log):

!ENTRY org.eclipse.jdt.debug.ui 4 150 Mar 16, 2004 13:53:52.567
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Breakpoint does not have an associated
marker.
	at org.eclipse.debug.core.model.Breakpoint.ensureMarker(Breakpoint.java:258)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.isCaught(JavaExceptionBreakpoint.java:206)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.setEnabled(JavaExceptionBreakpoint.java:184)
	at
org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.problemAdded(JavaDebugOptionsManager.java:289)
	at
org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.resourceChanged(JavaDebugOptionsManager.java:175)
	at
org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:255)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:648)
	at org.eclipse.core.runtime.Platform.run(Platform.java:512)
	at
org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:248)
	at
org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:142)
	at
org.eclipse.core.internal.events.AutoBuildJob.broadcastChanges(AutoBuildJob.java:71)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:138)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:168)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!SUBENTRY 1 org.eclipse.debug.core 4 5012 Mar 16, 2004 13:53:52.567
!MESSAGE Breakpoint does not have an associated marker.
*** Bug 55130 has been marked as a duplicate of this bug. ***
*** Bug 55131 has been marked as a duplicate of this bug. ***
*** Bug 55317 has been marked as a duplicate of this bug. ***
Fixed.
Thank for the test case, Jim.
The problem was a race between the creation of the compilation error and
uncaught exception breakpoints, and the initialization of the breakpoint
manager. The two breakpoint are created as non-persistant breakpoint, then
during it's initialization, the breakpointmanager deletes all non-persistant
breakpoint markers (cleaning from the previous session).
The problem has always been there, but was hidden by a side effect of the fact
that the breakpoint view (from the debug perspective), was always open before a
Java launch in debug mode was perform. This is no more the default behavior.

Added a static initializer in Breakpoint, so the BreakpointManager is
initialized before any creation of breakpoints.
Changes in org.eclipse.debug.core.Breakpoint.
Please verify Darin W.
To reproduce a problem, lanch an Eclipse session with the breakpoints view not
open, and launch a Java app in debug mode.
*** Bug 55396 has been marked as a duplicate of this bug. ***
Verified.
*** Bug 55470 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>With i20040316, I am seeing this every time a build takes place (no other
visible effect other than an entry in the log):

!ENTRY org.eclipse.jdt.debug.ui 4 150 Mar 16, 2004 13:53:52.567
!MESSAGE Internal Error
!STACK 1

!SUBENTRY 1 org.eclipse.debug.core 4 5012 Mar 16, 2004 13:53:52.567
!MESSAGE Breakpoint does not have an associated marker.
*** Bug 55130 has been marked as a duplicate of this bug. ***
*** Bug 55131 has been marked as a duplicate of this bug. ***
*** Bug 55317 has been marked as a duplicate of this bug. ***
Fixed.
Thank for the test case, Jim.
The problem was a race between the creation of the compilation error and
uncaught exception breakpoints, and the initialization of the breakpoint
manager. The two breakpoint are created as non-persistant breakpoint, then
during it's initialization, the breakpointmanager deletes all non-persistant
breakpoint markers (cleaning from the previous session).
The problem has always been there, but was hidden by a side effect of the fact
that the breakpoint view (from the debug perspective), was always open before a
Java launch in debug mode was perform. This is no more the default behavior.

Added a static initializer in Breakpoint, so the BreakpointManager is
initialized before any creation of breakpoints.
Changes in org.eclipse.debug.core.Breakpoint.
Please verify Darin W.
To reproduce a problem, lanch an Eclipse session with the breakpoints view not
open, and launch a Java app in debug mode.
*** Bug 55396 has been marked as a duplicate of this bug. ***
Verified.
*** Bug 55470 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54994" />
    <CreationDate amount="2004-03-16 14:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Infopops for Object/Class/Host/Agent/Thread/Process view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Please provide infopops for the Object/Class/Host/Agent/Thread/Process UML2SD 
view, and any help docs required as topic link in infopops.
The doc has being written by Nellie Chau this week and reviewed on March 18th.
What is the timeframe to insert infopops to these views? If it's not too late 
for M8, this should not be a P3 but more critical, shouldn't it?
This is P1 for M8
Context xml file added + code change needed done
Added 3 missing entries in UML2SDContexts.xml file (for the 
org.eclipse.hyades.uml2sd.ui plugin)
closing bug
house keeping</WithStack>
    <WithOutStack>Please provide infopops for the Object/Class/Host/Agent/Thread/Process UML2SD 
view, and any help docs required as topic link in infopops.
The doc has being written by Nellie Chau this week and reviewed on March 18th.
What is the timeframe to insert infopops to these views? If it's not too late 
for M8, this should not be a P3 but more critical, shouldn't it?
This is P1 for M8
Context xml file added + code change needed done
Added 3 missing entries in UML2SDContexts.xml file (for the 
org.eclipse.hyades.uml2sd.ui plugin)
closing bug
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54995" />
    <CreationDate amount="2004-03-16 14:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] editor chooser (ctrl-f6) displayed off-screen</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I have more than the usual number of editors open (78...I know, that's alot) and 
found that the list that pops up after I select ctrl-F6, is displayed such that 
the first and last portions are shown off-screen.  I can still make selections 
from it, I just can't see can't see what I'm choosing, unless it happens to be 
in the middle part of the list.
this has been fixed by bug 58476
verified in june24 - 8am</WithStack>
    <WithOutStack>I have more than the usual number of editors open (78...I know, that's alot) and 
found that the list that pops up after I select ctrl-F6, is displayed such that 
the first and last portions are shown off-screen.  I can still make selections 
from it, I just can't see can't see what I'm choosing, unless it happens to be 
in the middle part of the list.
this has been fixed by bug 58476
verified in june24 - 8am</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54996" />
    <CreationDate amount="2004-03-16 14:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>plugin identifier may contain underscores</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>i20040316

PDE's new plugin wizard silently strips off underscore from the plug-in id when
creating a plug-in project.

Maybe this was not true in the past, but underscores are valid chars in plugin
identifiers.

For more info, please see bug 11873 comment 3.
RC, the 2.1 grammar for a a plugin id is:

SimpleToken := sequence of characters from ('a-z','A-Z','0-9') 
ComposedToken := SimpleToken | (SimpleToken '.' ComposedToken) 
JavaClassName := ComposedToken 
PlugInId := ComposedToken

Is an "underscore" the only new difference or are there more?

I forgot about that grammar...

So it happens that runtime (even in 2.1) is tolerant to plugins that do not
conform to the spec. We have two choices I guess: a) PDE and the spec are
changed to support underscores, or b) things are left as they are. Changing
runtime to prevent plugins with underscores in their identifiers is not a choice
because it could break any clients relying on the implementation (even if the
tool didn't allow it).

I think I am leaning towards "b". There are other examples of things that
runtime does not enforce, and we should not start changing the spec to conform
to the implementation. It is a good thing that the tool works accordingly to the
spec. 

I guess that would make this bug invalid.
It seems the wizard could be more clear about the error in the identifier
(refusing to accept it instead of just automatically changing it to conform to
the spec).
Coming up with a valid id as default (i.e. by removing illegal characters) is 
actually good UI practice.  Flipping to a wizard page for the first time and 
seeing an error message does not conform with UI guidelines. If we are 
suggesting a default, it ought to be a good one.

However, if the user then reenters illegal characters, the error message could 
be more helpful, indicating what is wrong.
I posted the original bug 11873, because we ARE developing plugins using 
underscore in plugin id.

Our domain is "top-logic.com".

According to the SUN specification, hyphens in domain names should be 
converted to underscores. And, Eclipse propose to use package names as plugins 
qualifiers too. See excerpt from SUN spec below.

So, our Java namespace is "com.top_logic.xxx", our plugin ids should be 
like "com.top_logic.xxx"
(The domain toplogic.com is reserved by another company, so we could not 
eliminate the hyphen.)

So, extend the grammer for plugin id would conform to SUN specs. Or, do you 
have another proposal for us ?


Thanks, Jochen

See also 
http://java.sun.com/docs/books/jls/second_edition/html/packages.doc.html#40169

In some cases, the internet domain name may not be a valid package name. Here 
are some suggested conventions for dealing with these situations: 

If the domain name contains a hyphen, or any other special character not 
allowed in an identifier (§3.8), convert it into an underscore. 
If any of the resulting package name components are keywords (§3.9) then 
append underscore to them. 
If any of the resulting package name components start with a digit, or any 
other character that is not allowed as an initial character of an identifier, 
have an underscore prefixed to the component. 

Jeff, comments?
comment 5 contains "the" argument for updating the grammar.  We tell people 
that they should use package naming conventions for their plugin ids.  package 
naming conventions are based somewhat on domain names.  domain names include 
some chars that are not valid in package names.  Sun defines some mappings.

Ergo...

Whatever Sun has defined as valid package name chars should be valid plugin id 
chars.

Note that this does not mean we have to do any mapping but if the user is 
mapping, we should accept as valid their mapped package names as ids.


So, PDE can't go wrong if we use JavaConventions.validatePackageName(...) to 
validate the id of a plug-in.  Correct?
not quite what I said.  the resultant id need not be a valid package name.  BUT 
if someone did use a valid package name, that should be a valid id.

Jeff, is the grammar really a recommended practice/guideline, but in fact 
anything goes?  
Is any character really illegal?  

Would the runtime accept a plug-in id containing any sequence of characters 
including DBCS, etc.?

Should PDE initially preset the id field to one that follows the recommended 
grammar, and yet let the user modify it to anything they want without 
restriction?

So many questions, yet they are pretty much the same question :-)
since there are so many of hte same question can I give one answer? ;-)

I have not read the spec for package names.  While it likely allows for DBCS 
etc chars, convention dictates that the package name is based on a domain 
name.  Domain names (to the best of my knowledge) do not allow DBCS etc chars.  
Further, someone certainly could write a plugin that would only work on a DBCS 
enabled filesystem but I suspect most people are happy using only ASCII chars 
to ensure that their plugin can be used on all machines.

So, perhaps we should step back from my ambitious statement and intersect ASCII 
with the package naming rules and call that the grammar?

Adding Jeem to the list as it feels a little lonely without him.
Jeff is feeling the heat under the cross-examination.  The prosecution rests :-
)
If the ID doesn't fit, you can't commit.
hey hey, come on.  The original issue was _ as promoted by the Java package 
naming conventions/guidelines.  There may be other such chars that have the 
same issues.
Long discussion, but good to know people joking here ;-)

I would propose, to follow the SUN package name specification and 
recommendation. From a first view into the spec, I only see the underscore as 
THE missing character. All other stuff makes life probably only more 
difficult, e.g. other special characters, DBCS, ... Don't do that !

Jochen
I agree with Jochen: the spec for plug-in identifier should be widened to 
include ASCII "_", but nothing else.  I've revised spec for plug-in manifest 
accordingly.
Validation of the wizard has been updated to reflect the revised grammar.</WithStack>
    <WithOutStack>i20040316

PDE's new plugin wizard silently strips off underscore from the plug-in id when
creating a plug-in project.

Maybe this was not true in the past, but underscores are valid chars in plugin
identifiers.

For more info, please see bug 11873 comment 3.
RC, the 2.1 grammar for a a plugin id is:

SimpleToken := sequence of characters from ('a-z','A-Z','0-9') 
ComposedToken := SimpleToken | (SimpleToken '.' ComposedToken) 
JavaClassName := ComposedToken 
PlugInId := ComposedToken

Is an "underscore" the only new difference or are there more?

I forgot about that grammar...

So it happens that runtime (even in 2.1) is tolerant to plugins that do not
conform to the spec. We have two choices I guess: a) PDE and the spec are
changed to support underscores, or b) things are left as they are. Changing
runtime to prevent plugins with underscores in their identifiers is not a choice
because it could break any clients relying on the implementation (even if the
tool didn't allow it).

I think I am leaning towards "b". There are other examples of things that
runtime does not enforce, and we should not start changing the spec to conform
to the implementation. It is a good thing that the tool works accordingly to the
spec. 

I guess that would make this bug invalid.
It seems the wizard could be more clear about the error in the identifier
(refusing to accept it instead of just automatically changing it to conform to
the spec).
Coming up with a valid id as default (i.e. by removing illegal characters) is 
actually good UI practice.  Flipping to a wizard page for the first time and 
seeing an error message does not conform with UI guidelines. If we are 
suggesting a default, it ought to be a good one.

However, if the user then reenters illegal characters, the error message could 
be more helpful, indicating what is wrong.
I posted the original bug 11873, because we ARE developing plugins using 
underscore in plugin id.

Our domain is "top-logic.com".

According to the SUN specification, hyphens in domain names should be 
converted to underscores. And, Eclipse propose to use package names as plugins 
qualifiers too. See excerpt from SUN spec below.

So, our Java namespace is "com.top_logic.xxx", our plugin ids should be 
like "com.top_logic.xxx"
(The domain toplogic.com is reserved by another company, so we could not 
eliminate the hyphen.)

So, extend the grammer for plugin id would conform to SUN specs. Or, do you 
have another proposal for us ?


Thanks, Jochen

See also 
http://java.sun.com/docs/books/jls/second_edition/html/packages.doc.html#40169

In some cases, the internet domain name may not be a valid package name. Here 
are some suggested conventions for dealing with these situations: 

If the domain name contains a hyphen, or any other special character not 
allowed in an identifier (§3.8), convert it into an underscore. 
If any of the resulting package name components are keywords (§3.9) then 
append underscore to them. 
If any of the resulting package name components start with a digit, or any 
other character that is not allowed as an initial character of an identifier, 
have an underscore prefixed to the component. 

Jeff, comments?
comment 5 contains "the" argument for updating the grammar.  We tell people 
that they should use package naming conventions for their plugin ids.  package 
naming conventions are based somewhat on domain names.  domain names include 
some chars that are not valid in package names.  Sun defines some mappings.

Ergo...

Whatever Sun has defined as valid package name chars should be valid plugin id 
chars.

Note that this does not mean we have to do any mapping but if the user is 
mapping, we should accept as valid their mapped package names as ids.


So, PDE can't go wrong if we use JavaConventions.validatePackageName(...) to 
validate the id of a plug-in.  Correct?
not quite what I said.  the resultant id need not be a valid package name.  BUT 
if someone did use a valid package name, that should be a valid id.

Jeff, is the grammar really a recommended practice/guideline, but in fact 
anything goes?  
Is any character really illegal?  

Would the runtime accept a plug-in id containing any sequence of characters 
including DBCS, etc.?

Should PDE initially preset the id field to one that follows the recommended 
grammar, and yet let the user modify it to anything they want without 
restriction?

So many questions, yet they are pretty much the same question :-)
since there are so many of hte same question can I give one answer? ;-)

I have not read the spec for package names.  While it likely allows for DBCS 
etc chars, convention dictates that the package name is based on a domain 
name.  Domain names (to the best of my knowledge) do not allow DBCS etc chars.  
Further, someone certainly could write a plugin that would only work on a DBCS 
enabled filesystem but I suspect most people are happy using only ASCII chars 
to ensure that their plugin can be used on all machines.

So, perhaps we should step back from my ambitious statement and intersect ASCII 
with the package naming rules and call that the grammar?

Adding Jeem to the list as it feels a little lonely without him.
Jeff is feeling the heat under the cross-examination.  The prosecution rests :-
)
If the ID doesn't fit, you can't commit.
hey hey, come on.  The original issue was _ as promoted by the Java package 
naming conventions/guidelines.  There may be other such chars that have the 
same issues.
Long discussion, but good to know people joking here ;-)

I would propose, to follow the SUN package name specification and 
recommendation. From a first view into the spec, I only see the underscore as 
THE missing character. All other stuff makes life probably only more 
difficult, e.g. other special characters, DBCS, ... Don't do that !

Jochen
I agree with Jochen: the spec for plug-in identifier should be widened to 
include ASCII "_", but nothing else.  I've revised spec for plug-in manifest 
accordingly.
Validation of the wizard has been updated to reflect the revised grammar.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54997" />
    <CreationDate amount="2004-03-16 14:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CbeFormatter.fromCanonicalXMLString() does not handle ExtendedDataElements with no values/hexValues.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>CbeFormatter.fromCanonicalXMLString() does not handle ExtendedDataElements with 
no values/hexValues.

Input to CbeFormatter.fromCanonicalXMLString:
&lt;CommonBaseEvent creationTime="2004-03-15 19:45:43.609000000" 
extensionName="CommonBaseEvent" 
globalInstanceId="N2D8D53006E311D88000B60C83D33035" 
localInstanceId="9.42.117.4810793979458591171597459" msg="PMGR0000E: Call 
stack:" severity="50" version="1.0.1"&gt;&lt;extendedDataElements 
name="ExtendedMessage" type="string"/&gt;&lt;extendedDataElements name="Category" 
type="string"&gt;&lt;values&gt;ERROR&lt;/values&gt;&lt;/extendedDataElements&gt;&lt;sourceComponentId 
application="ApplicationServer" component="WebSphere" 
componentIdType="ProductName" executionEnvironment="acdevx1\acdevx1\server1" 
location="9.42.117.48" locationType="IPV4" processId="2588" 
subComponent="com.ibm.ws.ejbpersistence.dataaccess.DataAccessRequestImpl" 
threadId="31e3047"/&gt;&lt;msgDataElement msgLocale="en-
US"&gt;&lt;msgId&gt;PMGR0000E&lt;/msgId&gt;&lt;msgIdType&gt;IBM4.4.1&lt;/msgIdType&gt;&lt;/msgDataElement&gt;&lt;sit
uation categoryName="ConnectSituation"&gt;&lt;situationType reasoningScope="EXTERNAL" 
situationDisposition="CLOSED" successDisposition="UNSUCCESSFUL" 
xsi:type="ConnectSituation"/&gt;&lt;/situation&gt;&lt;/CommonBaseEvent&gt;

This was converted to a CBE object and then that CBE object was converted to a 
XML fragment. Shown below
&lt;CommonBaseEvent creationTime="2004-03-15 19:45:43.609000000" 
extensionName="CommonBaseEvent" 
globalInstanceId="N2D8D53006E311D88000B60C83D33035" 
localInstanceId="9.42.117.4810793979458591171597459" msg="PMGR0000E: Call 
stack:" severity="50" version="1.0.1"&gt;&lt;extendedDataElements 
name="ExtendedMessage" 
type="string"&gt;&lt;values&gt;ERROR&lt;/values&gt;&lt;/extendedDataElements&gt;&lt;sourceComponentId 
application="ApplicationServer" component="WebSphere" 
componentIdType="ProductName" executionEnvironment="acdevx1\acdevx1\server1" 
location="9.42.117.48" locationType="IPV4" processId="2588" 
subComponent="com.ibm.ws.ejbpersistence.dataaccess.DataAccessRequestImpl" 
threadId="31e3047"/&gt;&lt;msgDataElement msgLocale="en-
US"&gt;&lt;msgId&gt;PMGR0000E&lt;/msgId&gt;&lt;msgIdType&gt;IBM4.4.1&lt;/msgIdType&gt;&lt;/msgDataElement&gt;&lt;sit
uation categoryName="ConnectSituation"&gt;&lt;situationType 
xsi:type="ConnectSituation" reasoningScope="EXTERNAL" 
successDisposition="UNSUCCESSFUL" 
situationDisposition="CLOSED"/&gt;&lt;/situation&gt;&lt;/CommonBaseEvent&gt;
Code checked-in on 16 March 2004 in 1.3.0 branch and HEAD.
Closing.
house keeping</WithStack>
    <WithOutStack>CbeFormatter.fromCanonicalXMLString() does not handle ExtendedDataElements with 
no values/hexValues.

Input to CbeFormatter.fromCanonicalXMLString:
&lt;CommonBaseEvent creationTime="2004-03-15 19:45:43.609000000" 
extensionName="CommonBaseEvent" 
globalInstanceId="N2D8D53006E311D88000B60C83D33035" 
localInstanceId="9.42.117.4810793979458591171597459" msg="PMGR0000E: Call 
stack:" severity="50" version="1.0.1"&gt;&lt;extendedDataElements 
name="ExtendedMessage" type="string"/&gt;&lt;extendedDataElements name="Category" 
type="string"&gt;&lt;values&gt;ERROR&lt;/values&gt;&lt;/extendedDataElements&gt;&lt;sourceComponentId 
application="ApplicationServer" component="WebSphere" 
componentIdType="ProductName" executionEnvironment="acdevx1\acdevx1\server1" 
location="9.42.117.48" locationType="IPV4" processId="2588" 
subComponent="com.ibm.ws.ejbpersistence.dataaccess.DataAccessRequestImpl" 
threadId="31e3047"/&gt;&lt;msgDataElement msgLocale="en-
US"&gt;&lt;msgId&gt;PMGR0000E&lt;/msgId&gt;&lt;msgIdType&gt;IBM4.4.1&lt;/msgIdType&gt;&lt;/msgDataElement&gt;&lt;sit
uation categoryName="ConnectSituation"&gt;&lt;situationType reasoningScope="EXTERNAL" 
situationDisposition="CLOSED" successDisposition="UNSUCCESSFUL" 
xsi:type="ConnectSituation"/&gt;&lt;/situation&gt;&lt;/CommonBaseEvent&gt;

This was converted to a CBE object and then that CBE object was converted to a 
XML fragment. Shown below
&lt;CommonBaseEvent creationTime="2004-03-15 19:45:43.609000000" 
extensionName="CommonBaseEvent" 
globalInstanceId="N2D8D53006E311D88000B60C83D33035" 
localInstanceId="9.42.117.4810793979458591171597459" msg="PMGR0000E: Call 
stack:" severity="50" version="1.0.1"&gt;&lt;extendedDataElements 
name="ExtendedMessage" 
type="string"&gt;&lt;values&gt;ERROR&lt;/values&gt;&lt;/extendedDataElements&gt;&lt;sourceComponentId 
application="ApplicationServer" component="WebSphere" 
componentIdType="ProductName" executionEnvironment="acdevx1\acdevx1\server1" 
location="9.42.117.48" locationType="IPV4" processId="2588" 
subComponent="com.ibm.ws.ejbpersistence.dataaccess.DataAccessRequestImpl" 
threadId="31e3047"/&gt;&lt;msgDataElement msgLocale="en-
US"&gt;&lt;msgId&gt;PMGR0000E&lt;/msgId&gt;&lt;msgIdType&gt;IBM4.4.1&lt;/msgIdType&gt;&lt;/msgDataElement&gt;&lt;sit
uation categoryName="ConnectSituation"&gt;&lt;situationType 
xsi:type="ConnectSituation" reasoningScope="EXTERNAL" 
successDisposition="UNSUCCESSFUL" 
situationDisposition="CLOSED"/&gt;&lt;/situation&gt;&lt;/CommonBaseEvent&gt;
Code checked-in on 16 March 2004 in 1.3.0 branch and HEAD.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54998" />
    <CreationDate amount="2004-03-16 14:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist]The Content Assist pop-up does not become properly high-contrasted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Currently, the background and font color do not inherit high-contrast settings.

Expected:

White on black high-contrast scheme:
   Content Assist pop-up should have a black background with white font

Yello on black high-contrast scheme:
   Content Assist pop-up should have a black background with yellow font

Black on white high-contrast scheme:
   Content Assist pop-up should have a white background with black font
We are in the process of updating the accessibility information for 3.1.  Is 
this bug going to be fixed in 3.1?

Only black on white seems to be correct currently in CDT 3.0 (build 200503211118)
We cannot address this until there's support from Platform UI or SWT, see bug 22243.
Dani are you saying that you are always using colors the user can set? If so
then this is not an issue. If you are getting colors somewhere else that can't
be set by the user (i.e. hard coding) then this needs to be resolved.
Yes, the colors are set by preferences (Java &gt; Editor &gt; Code Assist &gt; Appearance). 

If we should set these colors when the user selects the high-contrast mode we
need to have an API where we can listen for such changes.
As the OS gives us no way of knowing this is the best you can do so you can just
close this one Dani. Until we add in some sort of feature to make this easier
via themes this is the best you can do. Either way you are still satisifying
accessibility requirements.
see comment 6</WithStack>
    <WithOutStack>Currently, the background and font color do not inherit high-contrast settings.

Expected:

White on black high-contrast scheme:
   Content Assist pop-up should have a black background with white font

Yello on black high-contrast scheme:
   Content Assist pop-up should have a black background with yellow font

Black on white high-contrast scheme:
   Content Assist pop-up should have a white background with black font
We are in the process of updating the accessibility information for 3.1.  Is 
this bug going to be fixed in 3.1?

Only black on white seems to be correct currently in CDT 3.0 (build 200503211118)
We cannot address this until there's support from Platform UI or SWT, see bug 22243.
Dani are you saying that you are always using colors the user can set? If so
then this is not an issue. If you are getting colors somewhere else that can't
be set by the user (i.e. hard coding) then this needs to be resolved.
Yes, the colors are set by preferences (Java &gt; Editor &gt; Code Assist &gt; Appearance). 

If we should set these colors when the user selects the high-contrast mode we
need to have an API where we can listen for such changes.
As the OS gives us no way of knowing this is the best you can do so you can just
close this one Dani. Until we add in some sort of feature to make this easier
via themes this is the best you can do. Either way you are still satisifying
accessibility requirements.
see comment 6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="54999" />
    <CreationDate amount="2004-03-16 14:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Cannot drag views over editor area</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using I200403160800

Drag a view over the edge of the editor area. Previously it was possible to dock
the view with the edge of the editor area. This is no longer possible.
fixed in head
*** Bug 55129 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Using I200403160800

Drag a view over the edge of the editor area. Previously it was possible to dock
the view with the edge of the editor area. This is no longer possible.
fixed in head
*** Bug 55129 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="55000" />
    <CreationDate amount="2004-03-16 14:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Invalid null check in JDIModelPresentation#getExpressionText()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In JDIModelPresentation#getExpressionText(), the local variable 'label' is
initialized to a not-null value, then is check if is not null. The null check is
not needed.
Fixed.
I reorder the code a bit.
Please verify, Darin W.
OK</WithStack>
    <WithOutStack>In JDIModelPresentation#getExpressionText(), the local variable 'label' is
initialized to a not-null value, then is check if is not null. The null check is
not needed.
Fixed.
I reorder the code a bit.
Please verify, Darin W.
OK</WithOutStack>
  </Bug>
</infozilla-output>

