<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="65901" />
    <CreationDate amount="2004-06-06 06:34:00 -0400" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Can't launch target workspace anymore</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341145182">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.start() of bundle 
org.eclipse.ui.ide.</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java:59)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:73)</Frame>
          <Frame depth="2">org.osgi.framework.BundleException.&lt;init&gt;(BundleException.java:59)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:975)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:421)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:293)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:107)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)</Frame>
          <Frame depth="11">java.lang.ClassLoader.loadClass(ClassLoader.java)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:307)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:336)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1313)</Frame>
          <Frame depth="15">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:131)</Frame>
          <Frame depth="16">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:124)</Frame>
          <Frame depth="17">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:113)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:330)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="23">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341145182">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org/eclipse/core/internal/plugins/PluginDescriptor incompatible with 
org/eclipse/core/internal/plugins/PluginDescriptor</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java:59)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:73)</Frame>
          <Frame depth="2">java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:53)</Frame>
          <Frame depth="3">org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:46)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)</Frame>
          <Frame depth="5">java.security.AccessController.doPrivileged(AccessController.java:189)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:421)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:293)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:107)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)</Frame>
          <Frame depth="14">java.lang.ClassLoader.loadClass(ClassLoader.java)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:307)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:336)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1313)</Frame>
          <Frame depth="18">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:131)</Frame>
          <Frame depth="19">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:124)</Frame>
          <Frame depth="20">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:113)</Frame>
          <Frame depth="21">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:330)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- Is this reproducable?</Line>
          <Line>- does it happen with other VMs?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>200406042000

Imported binary plug-ins from that build. Trying to start target workspace 
gives the following exceptions

!SESSION Jun 06, 2004 12:31:15.251 --------------------------------------------
-
eclipse.buildId=I200406042000
java.fullversion=J2RE 1.4.1 IBM J9 build 20040510 (JIT enabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY org.eclipse.osgi Jun 06, 2004 12:31:15.251
!MESSAGE An error occured while automatically activating bundle 
org.eclipse.ui.ide (142).
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.start() of bundle 
org.eclipse.ui.ide.
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:59)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:73)
	at org.osgi.framework.BundleException.&lt;init&gt;(BundleException.java:59)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:975)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(BundleHost.java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start
(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:107)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:402)
	at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(BundleHost.java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass
(AbstractBundle.java:1313)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:131)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:124)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:113)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:330)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
Caused by: java.lang.ClassCastException: 
org/eclipse/core/internal/plugins/PluginDescriptor incompatible with 
org/eclipse/core/internal/plugins/PluginDescriptor
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:59)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:73)
	at java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:53)
	at org.eclipse.core.internal.compatibility.PluginActivator.start
(PluginActivator.java:46)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run
(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged
(AccessController.java:189)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(BundleHost.java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start
(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:107)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:402)
	at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(BundleHost.java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass
(AbstractBundle.java:1313)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:131)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:124)
	at 
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi
on(ConfigurationElement.java:113)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:330)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
My target workspace is an existing testing workspace. New workspaces work for 
me
- Is this reproducable?
- does it happen with other VMs?

you can imagine our surpise to see that there si a ClassCastException between 
classes with the same name when that class only exists in one plugin (and thus 
one classloader).

I was surprised as well ;-).

It happened to me with both IBM und Sun JDKs. I found out that creating new 
launch configs for the existing workspaces fixed the problem. So I can't 
reproduce anymore since I created new launch configs for all my test 
workspaces.
closing.  Please reopen if you see the problem again</WithStack>
    <WithOutStack>200406042000

Imported binary plug-ins from that build. Trying to start target workspace 
gives the following exceptions

!SESSION Jun 06, 2004 12:31:15.251 --------------------------------------------
-
eclipse.buildId=I200406042000
java.fullversion=J2RE 1.4.1 IBM J9 build 20040510 (JIT enabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY org.eclipse.osgi Jun 06, 2004 12:31:15.251
!MESSAGE An error occured while automatically activating bundle 
org.eclipse.ui.ide (142).
!STACK 0


My target workspace is an existing testing workspace. New workspaces work for 
me
- Is this reproducable?
- does it happen with other VMs?

you can imagine our surpise to see that there si a ClassCastException between 
classes with the same name when that class only exists in one plugin (and thus 
one classloader).

I was surprised as well ;-).

It happened to me with both IBM und Sun JDKs. I found out that creating new 
launch configs for the existing workspaces fixed the problem. So I can't 
reproduce anymore since I created new launch configs for all my test 
workspaces.
closing.  Please reopen if you see the problem again</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65902" />
    <CreationDate amount="2004-06-06 08:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Fail to launch PDE Runtime workbench (when path name includes multibyte word)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145183">
        <Exception>java.io.FileNotFoundException</Exception>
        <Reason>C:\project\jd_eclipse\web\eclipse.properties (指
定されたファイルが見つかりません。)</Reason>
        <Frames>
          <Frame depth="0">java.io.FileInputStream.open(Native Method)</Frame>
          <Frame depth="1">java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:106)</Frame>
          <Frame depth="2">java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:66)</Frame>
          <Frame depth="3">sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:69)</Frame>
          <Frame depth="4">sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:156)</Frame>
          <Frame depth="5">java.net.URL.openStream(URL.java:913)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.load(Main.java:1061)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.loadProperties(Main.java:1033)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.addBaseJars(Main.java:296)</Frame>
          <Frame depth="9">org.eclipse.core.launcher.Main.getDevPath(Main.java:286)</Frame>
          <Frame depth="10">org.eclipse.core.launcher.Main.getBootPath(Main.java:368)</Frame>
          <Frame depth="11">org.eclipse.core.launcher.Main.basicRun(Main.java:174)</Frame>
          <Frame depth="12">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>[test case]
Run -&gt; Run as -&gt; Run-time Workbench

fail to launch. log is followed.


[fail case and success case]
The fail is depends on which directory I locate eclipse.

-success location
C:/project/jd_eclipse/web/ch10/proj/eclipse

-fail location
C:/project/jd_eclipse/web/第１０回/proj/eclipse
(Sorry if you can't see the path name. I use Japanese word.)


[log file]
-------------------------------------------
!SESSION Sun Jun 06 21:08:37 JST 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 6 06, 2004 21:08:38.36
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.io.FileNotFoundException: C:\project\jd_eclipse\web\eclipse.properties (指
定されたファイルが見つかりません。)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:106)
	at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:66)
	at sun.net.www.protocol.file.FileURLConnection.connect
(FileURLConnection.java:69)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream
(FileURLConnection.java:156)
	at java.net.URL.openStream(URL.java:913)
	at org.eclipse.core.launcher.Main.load(Main.java:1061)
	at org.eclipse.core.launcher.Main.loadProperties(Main.java:1033)
	at org.eclipse.core.launcher.Main.addBaseJars(Main.java:296)
	at org.eclipse.core.launcher.Main.getDevPath(Main.java:286)
	at org.eclipse.core.launcher.Main.getBootPath(Main.java:368)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:174)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
-------------------------------------------
Fixed.
As a workaround in the meantime, go to the Configuration tab of the launch 
configuration that failed, and uncheck the 'Clear configuration area before 
launching' checkbox.  OR you can create a new launch configuration and you 
will be fine.

Next time, please specify the build id/date.</WithStack>
    <WithOutStack>[test case]
Run -&gt; Run as -&gt; Run-time Workbench

fail to launch. log is followed.


[fail case and success case]
The fail is depends on which directory I locate eclipse.

-success location
C:/project/jd_eclipse/web/ch10/proj/eclipse

-fail location
C:/project/jd_eclipse/web/第１０回/proj/eclipse
(Sorry if you can't see the path name. I use Japanese word.)


[log file]
-------------------------------------------
!SESSION Sun Jun 06 21:08:37 JST 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 6 06, 2004 21:08:38.36
!MESSAGE Exception launching the Eclipse Platform:
!STACK

-------------------------------------------
Fixed.
As a workaround in the meantime, go to the Configuration tab of the launch 
configuration that failed, and uncheck the 'Clear configuration area before 
launching' checkbox.  OR you can create a new launch configuration and you 
will be fine.

Next time, please specify the build id/date.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65903" />
    <CreationDate amount="2004-06-06 10:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Override indicators don't appear on outline for abstract methods in newly opened files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="singlecomment">
        <location start="0" end="16" />
        <code>// Using 3.0RC1</code>
      </source_code>
      <source_code type="class">
        <location start="864" end="974" />
        <code>public abstract class AbstractClass {
	public abstract void abstractMethod();
	public void normalMethod() {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="976" end="1089" />
        <code>class ImplementingClass extends AbstractClass {
	public void abstractMethod() {}
	public void normalMethod() {}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>// Using 3.0RC1

No override indicator marks appear in the outline view for methods that
implement abstract methods when a java file is newly opened. They do appear in
the vertical ruler though. However, as I edit the java file sometimes they all
just magically appear in the outline view as well.
The override decorators are now computed in background, so it might take a 
while until they show up for large hierarchies.

Philip, if they never show up do you have steps to reproduce this ?
Created attachment 11642
A picture showing missing override indicator for an abstract method

I believe this attachment will give you a better idea of what I'm talking
about.

If the indicator does show up as you type the code, try closing and then
opening the file after you complete entering the code.
Here's the code from the previous comment for easy cut and paste :-

public abstract class AbstractClass {
	public abstract void abstractMethod();
	public void normalMethod() {}
}

class ImplementingClass extends AbstractClass {
	public void abstractMethod() {}
	public void normalMethod() {}
}
This works for me using build 200406042000.

Philip, do you have anything in the log when this happens.
There is nothing in the log.

I tried the same piece of code in 2.1.3 and surprisingly, it works fine. It even
correctly shows that the abstract method is being implemented with the right
decorator.

If you look at the attached picture you will see that the decorator used for the
abstract method in the vertical ruler is an "override decorator". This I believe
is a bug (probably a different one from this but a bug nonetheless). 

I'd like you to check for that bug and if all is well close this bug report.
Created attachment 11785
Screen shot

Here is what I see using build I200406082000.
Closing as works for me. Philip, if you can reproduce the bug on 
I20040608_2000 please reopen and provide steps to do so.</WithStack>
    <WithOutStack>// Using 3.0RC1

No override indicator marks appear in the outline view for methods that
implement abstract methods when a java file is newly opened. They do appear in
the vertical ruler though. However, as I edit the java file sometimes they all
just magically appear in the outline view as well.
The override decorators are now computed in background, so it might take a 
while until they show up for large hierarchies.

Philip, if they never show up do you have steps to reproduce this ?
Created attachment 11642
A picture showing missing override indicator for an abstract method

I believe this attachment will give you a better idea of what I'm talking
about.

If the indicator does show up as you type the code, try closing and then
opening the file after you complete entering the code.
Here's the code from the previous comment for easy cut and paste :-

public abstract class AbstractClass {
	public abstract void abstractMethod();
	public void normalMethod() {}
}

class ImplementingClass extends AbstractClass {
	public void abstractMethod() {}
	public void normalMethod() {}
}
This works for me using build 200406042000.

Philip, do you have anything in the log when this happens.
There is nothing in the log.

I tried the same piece of code in 2.1.3 and surprisingly, it works fine. It even
correctly shows that the abstract method is being implemented with the right
decorator.

If you look at the attached picture you will see that the decorator used for the
abstract method in the vertical ruler is an "override decorator". This I believe
is a bug (probably a different one from this but a bug nonetheless). 

I'd like you to check for that bug and if all is well close this bug report.
Created attachment 11785
Screen shot

Here is what I see using build I200406082000.
Closing as works for me. Philip, if you can reproduce the bug on 
I20040608_2000 please reopen and provide steps to do so.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65904" />
    <CreationDate amount="2004-06-06 10:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Can't bring up file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>After downloading and re-installing the 1.0M5 release, I get the following 
error under Eclipse 3.0M9:

An internal error occurred during: "Setup Java Visual Editor".
java.lang.IllegalAccessError: tried to access method 
org.eclipse.pde.internal.core.WorkspaceModelManager.getWorkspaceModel
(Lorg/eclipse/core/resources/IProject;)Lorg/eclipse/pde/core/IModel; from class 
org.eclipse.jem.internal.proxy.core.ProxyPlugin
org.eclipse.jem.internal.proxy.core.ProxyPlugin.processPlugin
(ProxyPlugin.java:767)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:762)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:739)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:739)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.getIDsFound
(ProxyPlugin.java:716)
org.eclipse.jem.internal.proxy.core.ProxyLaunchSupport.startImplementation
(ProxyLaunchSupport.java:321)
org.eclipse.jem.internal.proxy.core.ProxyLaunchSupport.startImplementation
(ProxyLaunchSupport.java:259)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxy
FactoryRegistry(JavaVisualEditorPart.java:942)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi
alizeForProject(JavaVisualEditorPart.java:1460)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi
alize(JavaVisualEditorPart.java:1341)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run
(JavaVisualEditorPart.java:1255)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
NOTE CORRECTION
VE 1.0 M1 does NOT run on Eclipse 3.0 M9.  VE 1.0 M1 runs under Eclipse 3.0 M8,
as stated in the REQUIREMENTS section of the download page.

The latest Integration build of VE runs under M9.
VE M1 is based on Eclipse M8.  There were Eclipse API changes in M9.  As Jeff
noted, use the latest integration build for a M9 based VE.

We should be coming up with a stable M9 based build soon.
Closing</WithStack>
    <WithOutStack>After downloading and re-installing the 1.0M5 release, I get the following 
error under Eclipse 3.0M9:

An internal error occurred during: "Setup Java Visual Editor".
java.lang.IllegalAccessError: tried to access method 
org.eclipse.pde.internal.core.WorkspaceModelManager.getWorkspaceModel
(Lorg/eclipse/core/resources/IProject;)Lorg/eclipse/pde/core/IModel; from class 
org.eclipse.jem.internal.proxy.core.ProxyPlugin
org.eclipse.jem.internal.proxy.core.ProxyPlugin.processPlugin
(ProxyPlugin.java:767)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:762)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:739)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.expandProject
(ProxyPlugin.java:739)
org.eclipse.jem.internal.proxy.core.ProxyPlugin.getIDsFound
(ProxyPlugin.java:716)
org.eclipse.jem.internal.proxy.core.ProxyLaunchSupport.startImplementation
(ProxyLaunchSupport.java:321)
org.eclipse.jem.internal.proxy.core.ProxyLaunchSupport.startImplementation
(ProxyLaunchSupport.java:259)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxy
FactoryRegistry(JavaVisualEditorPart.java:942)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi
alizeForProject(JavaVisualEditorPart.java:1460)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi
alize(JavaVisualEditorPart.java:1341)
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run
(JavaVisualEditorPart.java:1255)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
NOTE CORRECTION
VE 1.0 M1 does NOT run on Eclipse 3.0 M9.  VE 1.0 M1 runs under Eclipse 3.0 M8,
as stated in the REQUIREMENTS section of the download page.

The latest Integration build of VE runs under M9.
VE M1 is based on Eclipse M8.  There were Eclipse API changes in M9.  As Jeff
noted, use the latest integration build for a M9 based VE.

We should be coming up with a stable M9 based build soon.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65905" />
    <CreationDate amount="2004-06-06 10:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Possible Memory Leaks</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>One of my users has reported me that my application was leaking some memory, slowly but 
consistently, mainly by chunks of 192 bytes.
In order to test it, I've set the environement variable MallocStackLogging using :
export MallocStackLogging=1
and then I started my application (with java_swt -cp ......)
then, from another window I've run :
leaks -nocontext 555 &gt; leaks.txt

(555 being the process ID of my application).
I'll attach the leaks.txt file, but here are some stack trace of calls that create those 192 bytes leaks :

Leak: 0x088254d0  size=192	
	Call stack: [thread 1f2b]: | 0x1000 | start | _start | main | jio_vsnprintf | JVM_UnloadLibrary | 
JVM_GetCPClassNameUTF | JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 
0x4117fb0 | 0x4117fb0 | 0x4117e30 | 0x42da964 | 0x411e580 | 
Java_org_eclipse_swt_internal_carbon_OS_SendEventToEventTarget | SendEventToEventTarget | 
SendEventToEventTargetInternal | DispatchEventToHandlers | 
ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) | 
HandleMouseEvent(OpaqueEventRef*) | HandleMouseEventForWindow(OpaqueWindowPtr*, 
OpaqueEventRef*, unsigned short) | HandleTSMMouseDownLogic | 
PromoteMouseToCursorChangeEvent(OpaqueEventRef*, OpaqueWindowPtr*, OpaqueEventRef**) | 
CopyEventAs | CopyEventInternal | malloc_zone_malloc 

Leak: 0x003d3af0  size=192	
	Call stack: [thread 1f2b]: | 0x1000 | start | _start | main | jio_vsnprintf | JVM_UnloadLibrary | 
JVM_GetCPClassNameUTF | JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 
0x4117fb0 | 0x4117fb0 | 0x4117e30 | 0x4117e30 | 0x4117e30 | 0x4117fb0 | 0x4118310 | 
0x4118310 | 0x4117fb0 | 0x4117fb0 | 0x4117ec0 | 0x4117ec0 | 0x4117ec0 | 0x4117ef0 | 
0x411e580 | Java_org_eclipse_swt_internal_carbon_OS_GetDataBrowserItems | GetDataBrowserItems | 
GetControlData | SendControlDefGetData(HIView*, unsigned long, short, void*, long, long*) | 
CreateControlEvent | CreateEvent | malloc_zone_malloc 


Leaks states that they might miss some carbon leaks, but that all leaks reported should be real...

Hoping this information will help,

Olivier Chalouhi.
Created attachment 11639
the leaks.txt file
I fixed one memory leak in Display.wake(). Here is the stack:

Leak: 0x0c085100  size=192	
	Call stack: [thread 8834f427]: | 0x0 | _pthread_body | JVM_UnloadLibrary | 
JVM_FindClassFromClass | JVM_UnloadLibrary | JVM_Interrupt | JVM_Close | JVM_GetCPClassNameUTF | 
JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 0x4117fb0 | 0x4118310 | 
0x4117fb0 | 0x4118310 | 0x4117fb0 | 0x4117fb0 | 0x43cf010 | 0x43cf6a4 | 0x43d31c4 | 
Java_org_eclipse_swt_internal_carbon_OS_CreateEvent | CreateEvent | malloc_zone_malloc 

It is unclear to me that the other stacks in the log are real leaks and if they are, they are probably leaks 
in the OS itself (hard to believe).

Anyway, the leak found is of size 192 bytes, so it is probably the one you are getting. Please try the 
latest and reopen the bug if your app still seems to leak.</WithStack>
    <WithOutStack>One of my users has reported me that my application was leaking some memory, slowly but 
consistently, mainly by chunks of 192 bytes.
In order to test it, I've set the environement variable MallocStackLogging using :
export MallocStackLogging=1
and then I started my application (with java_swt -cp ......)
then, from another window I've run :
leaks -nocontext 555 &gt; leaks.txt

(555 being the process ID of my application).
I'll attach the leaks.txt file, but here are some stack trace of calls that create those 192 bytes leaks :

Leak: 0x088254d0  size=192	
	Call stack: [thread 1f2b]: | 0x1000 | start | _start | main | jio_vsnprintf | JVM_UnloadLibrary | 
JVM_GetCPClassNameUTF | JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 
0x4117fb0 | 0x4117fb0 | 0x4117e30 | 0x42da964 | 0x411e580 | 
Java_org_eclipse_swt_internal_carbon_OS_SendEventToEventTarget | SendEventToEventTarget | 
SendEventToEventTargetInternal | DispatchEventToHandlers | 
ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) | 
HandleMouseEvent(OpaqueEventRef*) | HandleMouseEventForWindow(OpaqueWindowPtr*, 
OpaqueEventRef*, unsigned short) | HandleTSMMouseDownLogic | 
PromoteMouseToCursorChangeEvent(OpaqueEventRef*, OpaqueWindowPtr*, OpaqueEventRef**) | 
CopyEventAs | CopyEventInternal | malloc_zone_malloc 

Leak: 0x003d3af0  size=192	
	Call stack: [thread 1f2b]: | 0x1000 | start | _start | main | jio_vsnprintf | JVM_UnloadLibrary | 
JVM_GetCPClassNameUTF | JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 
0x4117fb0 | 0x4117fb0 | 0x4117e30 | 0x4117e30 | 0x4117e30 | 0x4117fb0 | 0x4118310 | 
0x4118310 | 0x4117fb0 | 0x4117fb0 | 0x4117ec0 | 0x4117ec0 | 0x4117ec0 | 0x4117ef0 | 
0x411e580 | Java_org_eclipse_swt_internal_carbon_OS_GetDataBrowserItems | GetDataBrowserItems | 
GetControlData | SendControlDefGetData(HIView*, unsigned long, short, void*, long, long*) | 
CreateControlEvent | CreateEvent | malloc_zone_malloc 


Leaks states that they might miss some carbon leaks, but that all leaks reported should be real...

Hoping this information will help,

Olivier Chalouhi.
Created attachment 11639
the leaks.txt file
I fixed one memory leak in Display.wake(). Here is the stack:

Leak: 0x0c085100  size=192	
	Call stack: [thread 8834f427]: | 0x0 | _pthread_body | JVM_UnloadLibrary | 
JVM_FindClassFromClass | JVM_UnloadLibrary | JVM_Interrupt | JVM_Close | JVM_GetCPClassNameUTF | 
JVM_GetCPMethodClassNameUTF | 0x411516c | 0x4117fb0 | 0x4117fb0 | 0x4117fb0 | 0x4118310 | 
0x4117fb0 | 0x4118310 | 0x4117fb0 | 0x4117fb0 | 0x43cf010 | 0x43cf6a4 | 0x43d31c4 | 
Java_org_eclipse_swt_internal_carbon_OS_CreateEvent | CreateEvent | malloc_zone_malloc 

It is unclear to me that the other stacks in the log are real leaks and if they are, they are probably leaks 
in the OS itself (hard to believe).

Anyway, the leak found is of size 192 bytes, so it is probably the one you are getting. Please try the 
latest and reopen the bug if your app still seems to leak.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65906" />
    <CreationDate amount="2004-06-06 11:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[KeyBindings] registry: Need way to define keybindings by OS, not by platform</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20040606

To fix bug 57290, which is marked as RC2, I need to define keybindings based 
on OS. Looking at the doc this is only possible per Platform (window system). 
Is there a way how I can do this ?
There are no plans to provide this facility in the 3.0 time frame.  The current 
solution is to define it for the corresponding widget toolkit.  For example, 
Motif would be used to change the key binding for Solaris. 
 
I agree this is less than ideal in the long run, as this also affects other 
operating systems (e.g., Linux). 
 
A fix for this would be to use "os.name" from the system properties as an 
additional filter. 
But there is nothing I can do to work around it ?
I'll look at this for 3.1.
Moving Dougs bugs
There are currently no plans to work on this feature.

PW

Changes requested on bug 193523</WithStack>
    <WithOutStack>I20040606

To fix bug 57290, which is marked as RC2, I need to define keybindings based 
on OS. Looking at the doc this is only possible per Platform (window system). 
Is there a way how I can do this ?
There are no plans to provide this facility in the 3.0 time frame.  The current 
solution is to define it for the corresponding widget toolkit.  For example, 
Motif would be used to change the key binding for Solaris. 
 
I agree this is less than ideal in the long run, as this also affects other 
operating systems (e.g., Linux). 
 
A fix for this would be to use "os.name" from the system properties as an 
additional filter. 
But there is nothing I can do to work around it ?
I'll look at this for 3.1.
Moving Dougs bugs
There are currently no plans to work on this feature.

PW

Changes requested on bug 193523</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65907" />
    <CreationDate amount="2004-06-06 11:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>unfinished comment results in weird behavior</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="93" end="123" />
        <code>void aMethod(Object param);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="153" end="399" />
        <code>/** This is a comment that will result in an interesting/weird behavior

3. press enter but not after the last word (anywhere else)

Result:
/** This is a comment that will result in an
  * 
  * Class [here is the comment for a new type]
  */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Eclipse 3.0RC1 (Build ID: 200405290105)</Line>
          <Line>2. source</Line>
          <Line>public interface IInterface {</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Scenario:
1. Eclipse 3.0RC1 (Build ID: 200405290105)
2. source
public interface IInterface {
   void aMethod(Object param);
}

2. add a javadoc comment:
    /** This is a comment that will result in an interesting/weird behavior

3. press enter but not after the last word (anywhere else)

Result:
/** This is a comment that will result in an
  * 
  * Class [here is the comment for a new type]
  */interesting/weird [the rest of the initial comment

Hope this is not a duplicate (I've searched for another one looking the same but
with no result)
This is actually the intended behavior. The use case is that at any place you 
can start writing Javadoc and eclipse will help in completing it. As we 
provide a separate action "Format Element" to format the element at the caret 
position such as the Javadoc comment of a method, we give the auto complete 
feature more weight than the non-smart enter. We also provide a way to 
temporary switch off smartness: Edit&gt;Smart Insert Mode
Maybe I forgot to tell that the javadoc comment is added just before the method
and not before the interface declaration. And so I don't understand how putting
before a method a type javadoc comment helps me completing it.

Please help explaining more. 10x for the time.</WithStack>
    <WithOutStack>Scenario:
1. Eclipse 3.0RC1 (Build ID: 200405290105)
2. source
public interface IInterface {
   void aMethod(Object param);
}

2. add a javadoc comment:
    /** This is a comment that will result in an interesting/weird behavior

3. press enter but not after the last word (anywhere else)

Result:
/** This is a comment that will result in an
  * 
  * Class [here is the comment for a new type]
  */interesting/weird [the rest of the initial comment

Hope this is not a duplicate (I've searched for another one looking the same but
with no result)
This is actually the intended behavior. The use case is that at any place you 
can start writing Javadoc and eclipse will help in completing it. As we 
provide a separate action "Format Element" to format the element at the caret 
position such as the Javadoc comment of a method, we give the auto complete 
feature more weight than the non-smart enter. We also provide a way to 
temporary switch off smartness: Edit&gt;Smart Insert Mode
Maybe I forgot to tell that the javadoc comment is added just before the method
and not before the interface declaration. And so I don't understand how putting
before a method a type javadoc comment helps me completing it.

Please help explaining more. 10x for the time.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65908" />
    <CreationDate amount="2004-06-06 12:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Intro] Add User Profiles to the Welcome page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I am not sure Platform is the product on which to enter this RFE - but I had to
pick one...

see:
http://www.sharemation.com/dhunter/public/eclpise_ideas/ideas.html#Welcome_page</WithStack>
    <WithOutStack>I am not sure Platform is the product on which to enter this RFE - but I had to
pick one...

see:
http://www.sharemation.com/dhunter/public/eclpise_ideas/ideas.html#Welcome_page</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65909" />
    <CreationDate amount="2004-06-06 14:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>config problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I'm getting a "Configuration Error" in ver 3.0 RC1 "missing plugin 
org.apache.xerces", and this config error prevents me from installing other 
plugins.  Probably something wrong with your config files??
The org.apache.xerces is no longer included in Eclipse. Do you have existing
plugins that depended on it?
As John mentions, the Eclipse SDK no longer ships the Xerces plug-in. Plug-ins
in the SDK have converted their XML processing to using the JAXP APIs provided
in 1.4.
Closing.</WithStack>
    <WithOutStack>I'm getting a "Configuration Error" in ver 3.0 RC1 "missing plugin 
org.apache.xerces", and this config error prevents me from installing other 
plugins.  Probably something wrong with your config files??
The org.apache.xerces is no longer included in Eclipse. Do you have existing
plugins that depended on it?
As John mentions, the Eclipse SDK no longer ships the Xerces plug-in. Plug-ins
in the SDK have converted their XML processing to using the JAXP APIs provided
in 1.4.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65910" />
    <CreationDate amount="2004-06-06 16:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Add resources native for AMD 64</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I was debugging issues with cvs edit not setting readonly flag correctly to the file system (refer to bug 
id 61755).  Initially i thought it was an issue with cvs plugin issuse, and i was debugging the cvs plugin 
through eclipse debugger to see what is causing the issue.  It turned out that the issue is much lower 
than i initially thought.   When eclipse is launched, it doesn't realy complain about anything.  Just starts 
up normally, but the dubugger showed that an exception is raised in CoreFileSystemLibray.java (line 
#56 in the RC1 source) where it's doing System.loadLibrary.

The below is the log dump related to this issue.
I noticed that the binary build comes with org.eclipse.core.resources.linux_3.0.0/os/linux/x86/
libcore_2_1_0b.so file, so it seems like the file is there.  maybe library path is not set properly?

i also noticed that the source distribution (as well as cvs) doesn't have a linux_3.0 resource files. 

FYI, I am running jdk 1.5 for amd 64 from sun.  i was trying to use blackdown's 1.4 version for amd 64, 
but it was having problems with cleaning up zip files after reading jar files, so i switched to sun's 1.5 
which seems to work a little better.  Just stating this to let you know this is not an issue caused by jdk 
version as the same problem existed when running eclipse with blackdown's 1.4 version. 

!SESSION Jun 06, 2004 15:51:44.748 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.5.0-beta2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=amd64, WS=gtk, NL=en_US
!ENTRY org.eclipse.core.resources 1 1 Jun 06, 2004 15:51:44.749
!MESSAGE Could not load library: libcore_2_1_0b.so.  This library provides platf
orm-specific optimizations for certain file system operations.  This library is 
not present on all platforms, so this may not be an error.  The resources plug-i
n will safely fall back to using java.io.File functionality.
We contribute the core library to the Win32 and Linux platforms. People in the
community contribute to QNX, MacOSX and HP-AIX since these platforms are extra
important to them.

We would be happy to accept your contribution and maintenance of a library to
AMD64 Linux. See bug 12358 comment #6 for a list of things required to
make the contribution accepted. 

Note that we are at the end of the release cycle and if you are to contribute a
library at this point, it is questionable as to whether we will have time to
include it in Eclipse 3.0...it might have to wait until the next release.


*** This bug has been marked as a duplicate of 12358 ***
*** Bug 69328 has been marked as a duplicate of this bug. ***
FYI, i posted this message under bug 12358, but i just took the source code for the core (for linux 32) 
from cvs and compiled it on my machine and i stick it to the directory under ecliipse distribution and it 
works fine on mine.

i don't know what eclipse folks are planning to do but i would be more than happy to send you the file 
in private. 

yujin
I'm going to reopen this to separate it from the general issue of libraries on
other platforms. Yujin, a patch for AMD 64 would be very welcome.  Simply attach
a zipped library to this bug report (using "Create a New Attachment" above).
Created attachment 16023
libcore compiled with 

Any requirement as to the JVM version?
Currently as far as I know there are only two JVMs that run on amd64 linux -
1.4.2 from blackdown and 1.5 from sun.

The attached was compiled against 1.5 header files using the core.c and core.h
that was used in the 3.0.1 build.

Uname:
Linux sirius 2.6.8-1.521 #1 Mon Aug 16 09:01:00 EDT 2004 x86_64 x86_64 x86_64
GNU/Linux

gcc version:
gcc (GCC) 3.3.3 20040412 (Red Hat Linux 3.3.3-7)

java version:
java version "1.5.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0-b64)
Yujin, we have made changes to the native since 3.0.1. To release this library
to HEAD, we would need it to be recompiled against our latest builds.  Could you
recompile the source from the 3.1 M3 build?  Or even better, just checkout the
latest org.eclipse.core.resources.linux from HEAD on dev.eclipse.org (anonymous
CVS) and recompile that source. We added native support in 3.1 stream for
reading and setting the executable bit.

Can you also confirm if you are just recompiling the exact same source as the 32
bit natives?  If you have created a different Makefile for the 64 bit version,
please also attach that.

Reassigning the bug to myself to release the native when ready.
Created attachment 16259
libcore for amd64 compiled against CVS HEAD

This file was compiled against CVS HEAD.
Created attachment 16260
Makefile patch
Great! Thanks, Yujin. I will look into releasing that soon.  Were any source
changes required at all (other than the Makefile)?  If so, please also attach
the changed source.
No problem. John.  Glad to be able to contribute to the wonderful tools you guys created anyway I can.
No code change.  When is the target date for m4?
I have not done much testing on 3.1 so I can run some test before the release etc.
If you can point me to the changes made to core, I'll hammer those and see if it works well.
M4 is scheduled for December 17th.  I will likely release this library for the
next integration build (Dec. 7th). If you can grab that build and give it a try,
that would be nice.  You can verify that the native is working by going to the
Properties dialog on a file, and setting and clearing the executable and
read-only properties.  This should cause the corresponding permission change to
the file on disk. The other native methods are just optimizations of things that
can be done in Java less efficiently, so it is hard to verify if they are working.
I have released the new library to HEAD stream. It will be in the next
integration build.
Great. 
One note I'd like make is the change (again not production quality - the script should be integrated 
with the variables the main build script is setting) is not just for amd64.  I just checked 32 bit linux 
(redhat) and it also has two different include directories.   So I think Makefile needs some work overall 
not just for amd64.   I think the same point was raised in the 3.1 plan document.
If you want to give this a run, it is available in the I20041208-1200
integration build. I have confirmed that the compiled library for AMD64 appears
in that build, but I have not tried running it.
I tracked down an AMD64-Linux box and tested this with the I20041214-2000 3.1 M4
test candidate build.  I was able to view and set the read only and executable
bits from within Eclipse, proving that the library is there and functioning. 
Marking fixed.
oh i forgot to comment on this too.
i also installed this and was able to set/unset the permission bits.
and also tested with a new project pull from cvs which sets all files to read only, and was able to start 
editing the file without changing the file permission and it made the call to cvs edit which in turn sets 
the file permission to writable etc.
so i think it looks good.

thanks john.  looking forward to 3.1 release</WithStack>
    <WithOutStack>I was debugging issues with cvs edit not setting readonly flag correctly to the file system (refer to bug 
id 61755).  Initially i thought it was an issue with cvs plugin issuse, and i was debugging the cvs plugin 
through eclipse debugger to see what is causing the issue.  It turned out that the issue is much lower 
than i initially thought.   When eclipse is launched, it doesn't realy complain about anything.  Just starts 
up normally, but the dubugger showed that an exception is raised in CoreFileSystemLibray.java (line 
#56 in the RC1 source) where it's doing System.loadLibrary.

The below is the log dump related to this issue.
I noticed that the binary build comes with org.eclipse.core.resources.linux_3.0.0/os/linux/x86/
libcore_2_1_0b.so file, so it seems like the file is there.  maybe library path is not set properly?

i also noticed that the source distribution (as well as cvs) doesn't have a linux_3.0 resource files. 

FYI, I am running jdk 1.5 for amd 64 from sun.  i was trying to use blackdown's 1.4 version for amd 64, 
but it was having problems with cleaning up zip files after reading jar files, so i switched to sun's 1.5 
which seems to work a little better.  Just stating this to let you know this is not an issue caused by jdk 
version as the same problem existed when running eclipse with blackdown's 1.4 version. 

!SESSION Jun 06, 2004 15:51:44.748 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.5.0-beta2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=amd64, WS=gtk, NL=en_US
!ENTRY org.eclipse.core.resources 1 1 Jun 06, 2004 15:51:44.749
!MESSAGE Could not load library: libcore_2_1_0b.so.  This library provides platf
orm-specific optimizations for certain file system operations.  This library is 
not present on all platforms, so this may not be an error.  The resources plug-i
n will safely fall back to using java.io.File functionality.
We contribute the core library to the Win32 and Linux platforms. People in the
community contribute to QNX, MacOSX and HP-AIX since these platforms are extra
important to them.

We would be happy to accept your contribution and maintenance of a library to
AMD64 Linux. See bug 12358 comment #6 for a list of things required to
make the contribution accepted. 

Note that we are at the end of the release cycle and if you are to contribute a
library at this point, it is questionable as to whether we will have time to
include it in Eclipse 3.0...it might have to wait until the next release.


*** This bug has been marked as a duplicate of 12358 ***
*** Bug 69328 has been marked as a duplicate of this bug. ***
FYI, i posted this message under bug 12358, but i just took the source code for the core (for linux 32) 
from cvs and compiled it on my machine and i stick it to the directory under ecliipse distribution and it 
works fine on mine.

i don't know what eclipse folks are planning to do but i would be more than happy to send you the file 
in private. 

yujin
I'm going to reopen this to separate it from the general issue of libraries on
other platforms. Yujin, a patch for AMD 64 would be very welcome.  Simply attach
a zipped library to this bug report (using "Create a New Attachment" above).
Created attachment 16023
libcore compiled with 

Any requirement as to the JVM version?
Currently as far as I know there are only two JVMs that run on amd64 linux -
1.4.2 from blackdown and 1.5 from sun.

The attached was compiled against 1.5 header files using the core.c and core.h
that was used in the 3.0.1 build.

Uname:
Linux sirius 2.6.8-1.521 #1 Mon Aug 16 09:01:00 EDT 2004 x86_64 x86_64 x86_64
GNU/Linux

gcc version:
gcc (GCC) 3.3.3 20040412 (Red Hat Linux 3.3.3-7)

java version:
java version "1.5.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0-b64)
Yujin, we have made changes to the native since 3.0.1. To release this library
to HEAD, we would need it to be recompiled against our latest builds.  Could you
recompile the source from the 3.1 M3 build?  Or even better, just checkout the
latest org.eclipse.core.resources.linux from HEAD on dev.eclipse.org (anonymous
CVS) and recompile that source. We added native support in 3.1 stream for
reading and setting the executable bit.

Can you also confirm if you are just recompiling the exact same source as the 32
bit natives?  If you have created a different Makefile for the 64 bit version,
please also attach that.

Reassigning the bug to myself to release the native when ready.
Created attachment 16259
libcore for amd64 compiled against CVS HEAD

This file was compiled against CVS HEAD.
Created attachment 16260
Makefile patch
Great! Thanks, Yujin. I will look into releasing that soon.  Were any source
changes required at all (other than the Makefile)?  If so, please also attach
the changed source.
No problem. John.  Glad to be able to contribute to the wonderful tools you guys created anyway I can.
No code change.  When is the target date for m4?
I have not done much testing on 3.1 so I can run some test before the release etc.
If you can point me to the changes made to core, I'll hammer those and see if it works well.
M4 is scheduled for December 17th.  I will likely release this library for the
next integration build (Dec. 7th). If you can grab that build and give it a try,
that would be nice.  You can verify that the native is working by going to the
Properties dialog on a file, and setting and clearing the executable and
read-only properties.  This should cause the corresponding permission change to
the file on disk. The other native methods are just optimizations of things that
can be done in Java less efficiently, so it is hard to verify if they are working.
I have released the new library to HEAD stream. It will be in the next
integration build.
Great. 
One note I'd like make is the change (again not production quality - the script should be integrated 
with the variables the main build script is setting) is not just for amd64.  I just checked 32 bit linux 
(redhat) and it also has two different include directories.   So I think Makefile needs some work overall 
not just for amd64.   I think the same point was raised in the 3.1 plan document.
If you want to give this a run, it is available in the I20041208-1200
integration build. I have confirmed that the compiled library for AMD64 appears
in that build, but I have not tried running it.
I tracked down an AMD64-Linux box and tested this with the I20041214-2000 3.1 M4
test candidate build.  I was able to view and set the read only and executable
bits from within Eclipse, proving that the library is there and functioning. 
Marking fixed.
oh i forgot to comment on this too.
i also installed this and was able to set/unset the permission bits.
and also tested with a new project pull from cvs which sets all files to read only, and was able to start 
editing the file without changing the file permission and it made the call to cvs edit which in turn sets 
the file permission to writable etc.
so i think it looks good.

thanks john.  looking forward to 3.1 release</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65911" />
    <CreationDate amount="2004-06-06 16:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>out of memory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341145200">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.OutOfMemoryError)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145200">
        <Exception>java.lang.OutOfMemoryError</Exception>
        <Reason>!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.656
!MESSAGE Failed to execute runnable (java.lang.OutOfMemoryError)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.OutOfMemoryError)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145200">
        <Exception>java.lang.OutOfMemoryError</Exception>
        <Reason>!SESSION juin 06, 2004 09:53:14.256 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.search 4 1 juin 06, 2004 09:53:14.256
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:315)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="2">org.eclipse.search.internal.ui.util.ExtendedDialogWindow.run(ExtendedDialogWindow.java:185)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.ProgressManager$5.run(ProgressManager.java:980)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:976)</Frame>
          <Frame depth="6">org.eclipse.search.internal.ui.text.ReplaceDialog2.run(ReplaceDialog2.java:312)</Frame>
          <Frame depth="7">org.eclipse.search.internal.ui.text.ReplaceDialog2.buttonPressed(ReplaceDialog2.java:278)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:506)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="16">org.eclipse.search.internal.ui.text.ReplaceAction2.run(ReplaceAction2.java:152)</Frame>
          <Frame depth="17">org.eclipse.search.internal.ui.text.TextSearchPage$1.run(TextSearchPage.java:238)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145200">
        <Exception>java.lang.OutOfMemoryError</Exception>
        <Reason>!SESSION juin 06, 2004 09:56:23.829 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.core.resources 4 567 juin 06, 2004 09:56:23.829
!MESSAGE Could not read snapshot file.
!STACK 0
java.io.EOFException</Reason>
        <Frames>
          <Frame depth="0">java.io.DataInputStream.readInt(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.SaveManager.restoreSnapshots(SaveManager.java:707)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:533)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1082)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1821)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1602)</Frame>
          <Frame depth="6">org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:325)</Frame>
          <Frame depth="7">org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:50)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)</Frame>
          <Frame depth="9">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:421)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:293)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:107)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass(BundleLoader.java:336)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass(BundleLoader.java:914)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:399)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)</Frame>
          <Frame depth="20">java.lang.ClassLoader.loadClass(Unknown Source)</Frame>
          <Frame depth="21">java.lang.ClassLoader.loadClassInternal(Unknown Source)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ide.model.WorkbenchAdapterFactory.&lt;init&gt;(WorkbenchAdapterFactory.java:26)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ide.model.WorkbenchAdapterBuilder.registerAdapters(WorkbenchAdapterBuilder.java:33)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.initialize(IDEWorkbenchAdvisor.java:155)</Frame>
          <Frame depth="25">org.eclipse.ui.application.WorkbenchAdvisor.internalBasicInitialize(WorkbenchAdvisor.java:165)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.init(Workbench.java:787)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1311)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="29">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="31">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="32">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="36">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="37">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Hello,
I've an application with more than  1000 classes. The jdt doesn't complete the
build process to its term. It ends systematically with an out of memory warning
(and even several times my pc shut down without warning :-( ). I've tried to
augment the heap size, I've disabled many options, and so on... without success.
I can't arrive to build my program at all . My configuration is :
* eclipse 3RC1
* winxp home edition
* 512MB memory
* Athlon 2500+

regards
Xavier
ps : the build process is very long too...maybe swapping
You may grant the Java VM with more memory using command: -Xmx 256M (or 
better).
I did this up to 400MB :-( with the same result.
Then something seems clearly wrong. Please provide steps to reproduce.
*** Bug 65912 has been marked as a duplicate of this bug. ***
Do you have anything in the .log file?
!SESSION juin 06, 2004 10:30:45.163 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:45.163
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:46.765
!MESSAGE Failed to execute runnable (java.lang.OutOfMemoryError)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.OutOfMemoryError)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:46.765
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:46.765
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 10:30:47.937
!MESSAGE An internal error occurred during: "Building workspace".
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:47.937
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:47.947
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 13:58:29.24 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:29.24
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 13:58:30.656
!MESSAGE An internal error occurred during: "Building Workspace".
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.656
!MESSAGE Failed to execute runnable (java.lang.OutOfMemoryError)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.OutOfMemoryError)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:30.666
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.666
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:30.916
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.916
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 21:51:30.55 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
Command-line arguments: -Xmx256M
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 21:51:30.55
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 21:51:30.226
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 21:51:30.226
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 21:51:30.346
!MESSAGE An internal error occurred during: "Building Workspace".
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 21:57:51.234 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
Command-line arguments: -Xmx256M
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 21:57:51.234
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 22:00:33.527
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 22:02:33.549
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 09:53:14.256 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.search 4 1 juin 06, 2004 09:53:14.256
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:315)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at
org.eclipse.search.internal.ui.util.ExtendedDialogWindow.run(ExtendedDialogWindow.java:185)
	at org.eclipse.ui.internal.progress.ProgressManager$5.run(ProgressManager.java:980)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:976)
	at org.eclipse.search.internal.ui.text.ReplaceDialog2.run(ReplaceDialog2.java:312)
	at
org.eclipse.search.internal.ui.text.ReplaceDialog2.buttonPressed(ReplaceDialog2.java:278)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:506)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.search.internal.ui.text.ReplaceAction2.run(ReplaceAction2.java:152)
	at
org.eclipse.search.internal.ui.text.TextSearchPage$1.run(TextSearchPage.java:238)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
Caused by: java.lang.OutOfMemoryError
Root exception:
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 09:56:23.829 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.core.resources 4 567 juin 06, 2004 09:56:23.829
!MESSAGE Could not read snapshot file.
!STACK 0
java.io.EOFException
	at java.io.DataInputStream.readInt(Unknown Source)
	at
org.eclipse.core.internal.resources.SaveManager.restoreSnapshots(SaveManager.java:707)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:533)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1082)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1821)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1602)
	at org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:325)
	at
org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:50)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)
	at
org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:421)
	at
org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:293)
	at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:107)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass(BundleLoader.java:336)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass(BundleLoader.java:914)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:399)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClassInternal(Unknown Source)
	at
org.eclipse.ui.internal.ide.model.WorkbenchAdapterFactory.&lt;init&gt;(WorkbenchAdapterFactory.java:26)
	at
org.eclipse.ui.internal.ide.model.WorkbenchAdapterBuilder.registerAdapters(WorkbenchAdapterBuilder.java:33)
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.initialize(IDEWorkbenchAdvisor.java:155)
	at
org.eclipse.ui.application.WorkbenchAdvisor.internalBasicInitialize(WorkbenchAdvisor.java:165)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:787)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1311)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
There is nothing in any of these traces that shows the builder is even running 
when you get an OOM exception.

Can you please paste in your command line arguments?
Hi,
I've tried with Eclipse 3RC2, and it works!!! It is quite long, but it works, in
contrary with RC1. I don't know what are the changes, but it is good ;)
regards
Xavier
Reopen to set correct resolution
Code hasn't been changed =&gt; close as WORKSFORME instead of FIXED</WithStack>
    <WithOutStack>Hello,
I've an application with more than  1000 classes. The jdt doesn't complete the
build process to its term. It ends systematically with an out of memory warning
(and even several times my pc shut down without warning :-( ). I've tried to
augment the heap size, I've disabled many options, and so on... without success.
I can't arrive to build my program at all . My configuration is :
* eclipse 3RC1
* winxp home edition
* 512MB memory
* Athlon 2500+

regards
Xavier
ps : the build process is very long too...maybe swapping
You may grant the Java VM with more memory using command: -Xmx 256M (or 
better).
I did this up to 400MB :-( with the same result.
Then something seems clearly wrong. Please provide steps to reproduce.
*** Bug 65912 has been marked as a duplicate of this bug. ***
Do you have anything in the .log file?
!SESSION juin 06, 2004 10:30:45.163 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:45.163
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:46.765
!MESSAGE Failed to execute runnable (java.lang.OutOfMemoryError)
!STACK 0
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:46.765
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:46.765
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 10:30:47.937
!MESSAGE An internal error occurred during: "Building workspace".
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 10:30:47.937
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 10:30:47.947
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 13:58:29.24 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:29.24
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 13:58:30.656
!MESSAGE An internal error occurred during: "Building Workspace".
!STACK 0
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:30.666
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.666
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 13:58:30.916
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 13:58:30.916
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 21:51:30.55 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
Command-line arguments: -Xmx256M
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 21:51:30.55
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.ui 4 4 juin 06, 2004 21:51:30.226
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 juin 06, 2004 21:51:30.226
!MESSAGE java.lang.OutOfMemoryError
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.core.runtime 4 2 juin 06, 2004 21:51:30.346
!MESSAGE An internal error occurred during: "Building Workspace".
!STACK 0
java.lang.OutOfMemoryError
!SESSION juin 06, 2004 21:57:51.234 --------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
Command-line arguments: -Xmx256M
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 21:57:51.234
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 22:00:33.527
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
!ENTRY org.eclipse.jdt.core 4 4 juin 06, 2004 22:02:33.549
!MESSAGE Background Indexer Crash Recovery
!STACK 0
Caused by: java.lang.OutOfMemoryError
Root exception:

There is nothing in any of these traces that shows the builder is even running 
when you get an OOM exception.

Can you please paste in your command line arguments?
Hi,
I've tried with Eclipse 3RC2, and it works!!! It is quite long, but it works, in
contrary with RC1. I don't know what are the changes, but it is good ;)
regards
Xavier
Reopen to set correct resolution
Code hasn't been changed =&gt; close as WORKSFORME instead of FIXED</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65912" />
    <CreationDate amount="2004-06-06 16:14:00 -0400" />
    <DupId amount="65911" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>out of memory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
I've an application with more than  1000 classes. The jdt doesn't complete the
build process to its term. It ends systematically with an out of memory warning
(and even several times my pc shut down without warning :-( ). I've tried to
augment the heap size, I've disabled many options, and so on... without success.
I can't arrive to build my program at all . My configuration is :
* eclipse 3RC1
* winxp home edition
* 512MB memory
* Athlon 2500+

regards
Xavier
ps : the build process is very long too...maybe swapping
Surely a double-click on 'Commit' button...

*** This bug has been marked as a duplicate of 65911 ***</WithStack>
    <WithOutStack>Hello,
I've an application with more than  1000 classes. The jdt doesn't complete the
build process to its term. It ends systematically with an out of memory warning
(and even several times my pc shut down without warning :-( ). I've tried to
augment the heap size, I've disabled many options, and so on... without success.
I can't arrive to build my program at all . My configuration is :
* eclipse 3RC1
* winxp home edition
* 512MB memory
* Athlon 2500+

regards
Xavier
ps : the build process is very long too...maybe swapping
Surely a double-click on 'Commit' button...

*** This bug has been marked as a duplicate of 65911 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65913" />
    <CreationDate amount="2004-06-06 16:16:00 -0400" />
    <DupId amount="26780" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>search/replace on several lines</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
I would like to propose to enhance the search feature. It is very needed to be
able to search text pattern with is on several lines . It sis not possible today.
The replace could be also a text on sevral lines
regards
Xavier
We need a decision wether to move away from line based matching in file search.


*** This bug has been marked as a duplicate of 26780 ***</WithStack>
    <WithOutStack>Hello,
I would like to propose to enhance the search feature. It is very needed to be
able to search text pattern with is on several lines . It sis not possible today.
The replace could be also a text on sevral lines
regards
Xavier
We need a decision wether to move away from line based matching in file search.


*** This bug has been marked as a duplicate of 26780 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65914" />
    <CreationDate amount="2004-06-06 16:18:00 -0400" />
    <DupId amount="4011" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>import java files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
it could be good that the JDT change or add "package" instruction in each file
which is imported into a given package. It is not the case up to now. If it is ,
it is not working in my case.
regards
Xavier
Move to JDT/UI


*** This bug has been marked as a duplicate of 4011 ***</WithStack>
    <WithOutStack>Hello,
it could be good that the JDT change or add "package" instruction in each file
which is imported into a given package. It is not the case up to now. If it is ,
it is not working in my case.
regards
Xavier
Move to JDT/UI


*** This bug has been marked as a duplicate of 4011 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65915" />
    <CreationDate amount="2004-06-06 17:49:00 -0400" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>RuntimeException: Application &lt;AppName&gt; not found in registry</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145204">
        <Exception>java.lang.RuntimeException</Exception>
        <Reason>Application "com.ibm.jdg2e.rcp.simple.SimpleApplicationRunnable" could not be 
found in the registry. The applications available are: &lt;NONE&gt;.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:324)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="4">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="5">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="6">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="9">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Integration Build 05/29

If you launch and RCP application without the usint the update configurator, 
specifying bundle references in config.ini, the applications do not resolve in 
the registry.  

Attached the error log:
!SESSION Jun 06, 2004 17:33:28.210 --------------------------------------------
-
eclipse.buildId=unknown
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application 
com.ibm.jdg2e.rcp.simple.SimpleApplicationRunnable
!ENTRY org.eclipse.osgi Jun 06, 2004 17:33:28.220
!MESSAGE Application error
!STACK 1
java.lang.RuntimeException: 
Application "com.ibm.jdg2e.rcp.simple.SimpleApplicationRunnable" could not be 
found in the registry. The applications available are: &lt;NONE&gt;.
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:324)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)

Config.ini
#Eclipse Runtime Configuration File
osgi.install.area=file:c:/jdg2e_rcp_exercise
eclipse.product=org.eclipse.platform
osgi.framework = 
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.osgi_3.0.0
osgi.bundles=reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.core.runt
ime_3.0.0/@2:start,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.osgi.services_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/eclipse.osgi.util_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/eclispe.core.expressions_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.jface_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.swt.win32_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.swt_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.ui.workbench_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.ui_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.ui_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.base_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.appserver_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.tomcat_3.0.0, 
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache.ant_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache.lucene_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/com.ibm.jdg2e.rcp.simple_3.0.0
osgi.bundles.defaultStartLevel=4
eclipse.application=com.ibm.jdg2e.rcp.simple
eof=eof
Do you still have this problem, or is this just because you had a problem in
your dependency graph.
Did you check in the osgi console if the plugin containing the application is
resolved?
If the problem still occurs provide the necessary plugin.xml.
Scott provided me his example and it worked.
Works inside the IDE uder a runtime launch configuration.  Same example does 
not run outside, starting from the command line. 
Why does it say "The applications available are: &lt;NONE&gt;." I've never seen 
anything but "NONE" there.
This is because your registry never contains any application, because the 
plugin declaring the extensions are not resolved.

To see something other than &lt;NONE&gt;, run Eclipse and specify -application foo.
Since foo does not exist as an application but others do, you will see the 
complete list of other applications.</WithStack>
    <WithOutStack>Integration Build 05/29

If you launch and RCP application without the usint the update configurator, 
specifying bundle references in config.ini, the applications do not resolve in 
the registry.  

Attached the error log:
!SESSION Jun 06, 2004 17:33:28.210 --------------------------------------------
-
eclipse.buildId=unknown
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application 
com.ibm.jdg2e.rcp.simple.SimpleApplicationRunnable
!ENTRY org.eclipse.osgi Jun 06, 2004 17:33:28.220
!MESSAGE Application error
!STACK 1


Config.ini
#Eclipse Runtime Configuration File
osgi.install.area=file:c:/jdg2e_rcp_exercise
eclipse.product=org.eclipse.platform
osgi.framework = 
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.osgi_3.0.0
osgi.bundles=reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.core.runt
ime_3.0.0/@2:start,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclipse.osgi.services_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/eclipse.osgi.util_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/eclispe.core.expressions_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.jface_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.swt.win32_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.swt_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.ui.workbench_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.ui_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.ui_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.base_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.help.appserver_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.eclispe.tomcat_3.0.0, 
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache.ant_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache.lucene_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/org.apache_3.0.0,
reference:file:C:/jdg2e_rcp_exercise/plugins/com.ibm.jdg2e.rcp.simple_3.0.0
osgi.bundles.defaultStartLevel=4
eclipse.application=com.ibm.jdg2e.rcp.simple
eof=eof
Do you still have this problem, or is this just because you had a problem in
your dependency graph.
Did you check in the osgi console if the plugin containing the application is
resolved?
If the problem still occurs provide the necessary plugin.xml.
Scott provided me his example and it worked.
Works inside the IDE uder a runtime launch configuration.  Same example does 
not run outside, starting from the command line. 
Why does it say "The applications available are: &lt;NONE&gt;." I've never seen 
anything but "NONE" there.
This is because your registry never contains any application, because the 
plugin declaring the extensions are not resolved.

To see something other than &lt;NONE&gt;, run Eclipse and specify -application foo.
Since foo does not exist as an application but others do, you will see the 
complete list of other applications.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65916" />
    <CreationDate amount="2004-06-06 20:33:00 -0400" />
    <DupId amount="65813" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Large negative progress on synchronization</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I200406032000

The first time I started this build, prompted for a password, noticed large 
negative progress reporting.

A build had occurred (on startup) before the start of the synchronization.
Created attachment 11643
JPG showing the large negative progress reporting.


*** This bug has been marked as a duplicate of 65813 ***</WithStack>
    <WithOutStack>I200406032000

The first time I started this build, prompted for a password, noticed large 
negative progress reporting.

A build had occurred (on startup) before the start of the synchronization.
Created attachment 11643
JPG showing the large negative progress reporting.


*** This bug has been marked as a duplicate of 65813 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65917" />
    <CreationDate amount="2004-06-06 21:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] 'Errors running operations' dialog should select first error automatically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I spent some time to day wondering why CVS didn't report the error message 
from my verifymsg script. The problem was that I didn't realise that I needed 
to select the error message in the top pane to see the details in the lower 
pane.

Please help stupid people like me everywhere by auto-selecting the first error 
message!
This dialog has been replaced by one that shows the first error like a regular
ErrorDialog.</WithStack>
    <WithOutStack>I spent some time to day wondering why CVS didn't report the error message 
from my verifymsg script. The problem was that I didn't realise that I needed 
to select the error message in the top pane to see the details in the lower 
pane.

Please help stupid people like me everywhere by auto-selecting the first error 
message!
This dialog has been replaced by one that shows the first error like a regular
ErrorDialog.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65918" />
    <CreationDate amount="2004-06-06 22:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>wrong perspective name displayed for the one being used in the perspective switch</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>the label displayed in the perspective switch should be of the currently being 
used perspective, and should be displayed as a pressed-down button.
ok, I have some idea on the intent of the current behavior. that the recent 
used perspective name is displayed to open it quickly, good, but a little 
confusing at first.</WithStack>
    <WithOutStack>the label displayed in the perspective switch should be of the currently being 
used perspective, and should be displayed as a pressed-down button.
ok, I have some idea on the intent of the current behavior. that the recent 
used perspective name is displayed to open it quickly, good, but a little 
confusing at first.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65919" />
    <CreationDate amount="2004-06-07 00:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Copy Paste Problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I got a error when press Ctrl+C to copy a large text amount.
Its ok with a small text or user popup menu on right click.
Which build of 3.0 were you using?
Is there anything in the .log file?
What was the error you got?
What exactly were you doing when you got the error?  Were you copying a large 
chunk of text in the editor?  Were you copying markers in the Tasks view?
Can you reproduce this problem?  If so, please provide exact details on how to 
reproduce?
Do you have any non-Eclipse plugins installed?
There was a problem logged recently with regard to text folding and copy/paste.
 Could be a dupe.
Nam, please check bug 65975 in case it is a duplicate of this one.

I think the reason caused i use the ColorEditor plugin.

Regards
:)

So I can close this bug then?</WithStack>
    <WithOutStack>I got a error when press Ctrl+C to copy a large text amount.
Its ok with a small text or user popup menu on right click.
Which build of 3.0 were you using?
Is there anything in the .log file?
What was the error you got?
What exactly were you doing when you got the error?  Were you copying a large 
chunk of text in the editor?  Were you copying markers in the Tasks view?
Can you reproduce this problem?  If so, please provide exact details on how to 
reproduce?
Do you have any non-Eclipse plugins installed?
There was a problem logged recently with regard to text folding and copy/paste.
 Could be a dupe.
Nam, please check bug 65975 in case it is a duplicate of this one.

I think the reason caused i use the ColorEditor plugin.

Regards
:)

So I can close this bug then?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65920" />
    <CreationDate amount="2004-06-07 00:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AnnotationPainter overachieves in debug mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This may have been a problem before, but just noticed in RC1. 
When I "run workbench" from development environment, and select "enable tracing" 
and use "select all" on that tracing page, I get LOTS of stack trace print outs 
as follows:
AP: WORLD CHANGED, stack trace follows:
java.lang.Throwable
	at org.eclipse.jface.text.source.AnnotationPainter.
modelChanged(AnnotationPainter.java:896)
	at org.eclipse.jface.text.source.AnnotationModel.
fireModelChanged(AnnotationModel.java:390)
	at org.eclipse.jface.text.source.AnnotationModel$InternalModelListener.
modelChanged(AnnotationModel.java:55)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.
fireModelChanged(DocumentLineDiffer.java:1263)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.
fireModelChanged(DocumentLineDiffer.java:1246)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer$1.
run(DocumentLineDiffer.java:498)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

This apparently comes from modelChanged method in AnnotationPainter. 
While I suppose it could be argued "I asked for trace/debug info", this seems to 
be a little too much to be the default, and I suggest it be made a made more 
specific than just "DEBUG" (and/or default .options changed).
This particular info is to find out which annotation model is sending out 
world changes rather than detailed events. This is on purpose.
Sorry to re-open Kai, just wanted to be sure I was clear, Its not the printout 
I'm concerned about, just that you get it my default. So, if its so important 
information that it really should be default, guess I'd like to know why, since 
our editors caues it to print out all the time. Thanks for your time. 
OK. I200406081200.
start verifying...
verified in 20040608. Didn't see any stacktraces as described anymore.</WithStack>
    <WithOutStack>This may have been a problem before, but just noticed in RC1. 
When I "run workbench" from development environment, and select "enable tracing" 
and use "select all" on that tracing page, I get LOTS of stack trace print outs 
as follows:
AP: WORLD CHANGED, stack trace follows:
java.lang.Throwable
	at org.eclipse.jface.text.source.AnnotationPainter.
modelChanged(AnnotationPainter.java:896)
	at org.eclipse.jface.text.source.AnnotationModel.
fireModelChanged(AnnotationModel.java:390)
	at org.eclipse.jface.text.source.AnnotationModel$InternalModelListener.
modelChanged(AnnotationModel.java:55)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.
fireModelChanged(DocumentLineDiffer.java:1263)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.
fireModelChanged(DocumentLineDiffer.java:1246)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer$1.
run(DocumentLineDiffer.java:498)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

This apparently comes from modelChanged method in AnnotationPainter. 
While I suppose it could be argued "I asked for trace/debug info", this seems to 
be a little too much to be the default, and I suggest it be made a made more 
specific than just "DEBUG" (and/or default .options changed).
This particular info is to find out which annotation model is sending out 
world changes rather than detailed events. This is on purpose.
Sorry to re-open Kai, just wanted to be sure I was clear, Its not the printout 
I'm concerned about, just that you get it my default. So, if its so important 
information that it really should be default, guess I'd like to know why, since 
our editors caues it to print out all the time. Thanks for your time. 
OK. I200406081200.
start verifying...
verified in 20040608. Didn't see any stacktraces as described anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65921" />
    <CreationDate amount="2004-06-07 01:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Visual Editor Not working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I tried using VE on eclipse-SDK-31.0M8-win32 , but it is not giving me option 
of open with. so how can I use it.
What level of EMF and GEF are you using?  make sure you have everyting as noted
in
http://fullmoon.torolab.ibm.com/tools/ve/downloads/drops/S-1.0M1-200405031421/index.html.
... check the .log file it will give you an 


Also, check the news group, many folks came up with similar problem which turned
out to be bad configurations.
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithStack>
    <WithOutStack>I tried using VE on eclipse-SDK-31.0M8-win32 , but it is not giving me option 
of open with. so how can I use it.
What level of EMF and GEF are you using?  make sure you have everyting as noted
in
http://fullmoon.torolab.ibm.com/tools/ve/downloads/drops/S-1.0M1-200405031421/index.html.
... check the .log file it will give you an 


Also, check the news group, many folks came up with similar problem which turned
out to be bad configurations.
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65922" />
    <CreationDate amount="2004-06-07 01:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>z/OS: DCE cannot start file server</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Now that the DCE on z/OS can load the 1.4.1 JVM dll (bugzilla 62005), the file 
server cannot be started due to the following error reported in the 
servicelog.log file:

severity="SEVERE" text="Could not get ID for method file server constructor" 
file="./framework/RAServer/RACommS.c" line="798"/&gt;

The file server constructor method cannot be found.

I was using the 20040604_1149 Hyades M10 build.
Checked in files 

org/eclipse/hyades/execution/local/file/FileManagerImpl.java
org/eclipse/hyades/internal/collection/framework/FileClientHandlerImpl.java

to branch 3.0.1 and to HEAD.

Tagged 3.0.1 files bugzilla_65922.
Tagged HEAD files bugzilla_65922_HEAD.
Anandi has checked in the code for this bug.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Now that the DCE on z/OS can load the 1.4.1 JVM dll (bugzilla 62005), the file 
server cannot be started due to the following error reported in the 
servicelog.log file:

severity="SEVERE" text="Could not get ID for method file server constructor" 
file="./framework/RAServer/RACommS.c" line="798"/&gt;

The file server constructor method cannot be found.

I was using the 20040604_1149 Hyades M10 build.
Checked in files 

org/eclipse/hyades/execution/local/file/FileManagerImpl.java
org/eclipse/hyades/internal/collection/framework/FileClientHandlerImpl.java

to branch 3.0.1 and to HEAD.

Tagged 3.0.1 files bugzilla_65922.
Tagged HEAD files bugzilla_65922_HEAD.
Anandi has checked in the code for this bug.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65923" />
    <CreationDate amount="2004-06-07 02:04:00 -0400" />
    <DupId amount="64672" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>RC1 code formatter preference page can not be created</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>After a new installation I get the following error when attempting to display 
the preference page for the code formatter.

Unable to create the selected preference page.
    
    Reason:
     Plug-in "org.eclipse.jdt.ui" was unable to instantiate 
class "org.eclipse.jdt.internal.ui.preferences.CodeFormatterPreferencePage


*** This bug has been marked as a duplicate of 64672 ***</WithStack>
    <WithOutStack>After a new installation I get the following error when attempting to display 
the preference page for the code formatter.

Unable to create the selected preference page.
    
    Reason:
     Plug-in "org.eclipse.jdt.ui" was unable to instantiate 
class "org.eclipse.jdt.internal.ui.preferences.CodeFormatterPreferencePage


*** This bug has been marked as a duplicate of 64672 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65924" />
    <CreationDate amount="2004-06-07 02:20:00 -0400" />
    <DupId amount="66228" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Performance of plugin.xml builder is slow</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Recently we started migration of our plugins to Eclipse 3.0. We noticed that 
the performance is comparable slower when using 3.0 plugins than it is with 
the 2.1 plugins.

The plugin.xml of our main plugin id around 75k size and it needs around 20 
seconds to compile. The build progress shows "Verifying .../plugin.xml". It's 
interesting that this was noticable faster when developing against 2.1 plugins 
(imported as binary projects) using 3.0 RC1.
Note thatt binary plug-ins do/should not get validated at all by the PDE 
builder.  That is why you saw a big difference between binary and non-binary 
projects.

That 20 seconds was taken up to validate how many plugin.xml files?  what 
sizes?
We do validate every attributes and we do call the Java model to verify that 
every class you list exists, etc.  So if we are dealing with large plugin.xml 
files, then it might just be that it is a fact of life that it will 20 seconds.
20 seconds just for the one (75k) file. Not to mention the others that it 
validates.
Created attachment 11694
Screenshot of progress view

This screenshot show the build is verifying plugin.xml of jdt.ui plug-in.
According to you comment, this should not happen because jdt.ui is imported as
binary project (with real content, not with linked content).

However, verifying of jdt.ui plugin.xml (binary project) took 34 seconds which
is a lot more time that the Java build needs for a project of comparable size.

It's also noticable that the progress indicator also stays the same amount of
time at a fixed possition which leads me to say it cann't be just a forgotten
progress monitor update. Don't know.

P4 2.8 Ghz hHyperthreading CPU. The PC is usually fast (example: it only takes
14 second to build a full feature zip with all 3 plugins (around 100 classes)
using the generated build files and ANT (from within Eclipse).
The fact that a binary project was being validated is a bug that was addressed 
today (bug 65578).

I never claimed that the builder's performance is optimal.  I was just 
enquiring how slow it is for you.
*** Bug 66198 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 66228 ***</WithStack>
    <WithOutStack>Recently we started migration of our plugins to Eclipse 3.0. We noticed that 
the performance is comparable slower when using 3.0 plugins than it is with 
the 2.1 plugins.

The plugin.xml of our main plugin id around 75k size and it needs around 20 
seconds to compile. The build progress shows "Verifying .../plugin.xml". It's 
interesting that this was noticable faster when developing against 2.1 plugins 
(imported as binary projects) using 3.0 RC1.
Note thatt binary plug-ins do/should not get validated at all by the PDE 
builder.  That is why you saw a big difference between binary and non-binary 
projects.

That 20 seconds was taken up to validate how many plugin.xml files?  what 
sizes?
We do validate every attributes and we do call the Java model to verify that 
every class you list exists, etc.  So if we are dealing with large plugin.xml 
files, then it might just be that it is a fact of life that it will 20 seconds.
20 seconds just for the one (75k) file. Not to mention the others that it 
validates.
Created attachment 11694
Screenshot of progress view

This screenshot show the build is verifying plugin.xml of jdt.ui plug-in.
According to you comment, this should not happen because jdt.ui is imported as
binary project (with real content, not with linked content).

However, verifying of jdt.ui plugin.xml (binary project) took 34 seconds which
is a lot more time that the Java build needs for a project of comparable size.

It's also noticable that the progress indicator also stays the same amount of
time at a fixed possition which leads me to say it cann't be just a forgotten
progress monitor update. Don't know.

P4 2.8 Ghz hHyperthreading CPU. The PC is usually fast (example: it only takes
14 second to build a full feature zip with all 3 plugins (around 100 classes)
using the generated build files and ANT (from within Eclipse).
The fact that a binary project was being validated is a bug that was addressed 
today (bug 65578).

I never claimed that the builder's performance is optimal.  I was just 
enquiring how slow it is for you.
*** Bug 66198 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 66228 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65925" />
    <CreationDate amount="2004-06-07 02:42:00 -0400" />
    <DupId amount="67591" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>type flagged by XLint:invalidAbsoluteTypeName if not accessible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="91" end="146" />
        <code>e.g., for class C { private static class Nested { .. }}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Type names that are valid but inaccessable seem to trigger
XLint:invalidAbsoluteTypeName.

e.g., for class C { private static class Nested { .. }}, 

    execution(void C.Nested.method())

provokes XLint but otherwise works correctly.

Test case put in
tests/bugs/invalidAbsoluteTypeName/False_InvalidAbsoluteTypeName.java.
marked as target 1.2.1
I fixed one very similar to this one - I'll take it.
The other bug was sooo similar in fact that the fix covers this case :) 
Resolving as dup of the one I fixed it under, bug 67591 (see that bug for more
info).

*** This bug has been marked as a duplicate of 67591 ***
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>Type names that are valid but inaccessable seem to trigger
XLint:invalidAbsoluteTypeName.

e.g., for class C { private static class Nested { .. }}, 

    execution(void C.Nested.method())

provokes XLint but otherwise works correctly.

Test case put in
tests/bugs/invalidAbsoluteTypeName/False_InvalidAbsoluteTypeName.java.
marked as target 1.2.1
I fixed one very similar to this one - I'll take it.
The other bug was sooo similar in fact that the fix covers this case :) 
Resolving as dup of the one I fixed it under, bug 67591 (see that bug for more
info).

*** This bug has been marked as a duplicate of 67591 ***
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65926" />
    <CreationDate amount="2004-06-07 03:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>plugin.xml compiler/verifyer doesn't react on auto build cancels</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 RC1

Auto builds are likly to be canceled and reschedulded very often. I noticed 
that the plugin.xml compiler/verifyer doesn't react very well on these cancel 
request. The build is only canceled after the "Verifying ...plugin.xml" is 
finished. 

Thus, the UI is blocked unnecessarly when trying to save or open files because 
the user hast to wait till the build is canceled.
John, isn't the response to Cancel handled at the IncrementalProjectBuilder 
level?
The platform checks for autobuild interruption between each builder invocation.
If you want to check for this more frequently (such as during the invocation of
a particular long builder), you can call
IncrementalProjectBuilder.isInterrupted() from within your builder. This is not
strictly necessary if your builder is relatively quick.
I guess a better wording for my question would have been:
When someone presses cancel on a PDE manifest builder job in the Progress 
view, doesn't Core handle the cancelation and the speedy termination of the 
job?
IMHO Core handles the cancelation if the builder is finished. Thus, it depends 
on the builder.

Example: A builder requires 40 secondes to finish and doesn't check if it's 
interrupted during this time, Core will first recognize the cancelation when 
the 40 seconds are over.

If the Java builder wouldn't check for cancelation it would be hard to cancel 
full builds.
To clarify, there are two different "cancelation" mechanisms for builders:

 - autobuild can be automatically preempted if another thread tries to modify
the workspace during a build. This uses the
IncrementalProjectBuilder.isInterrupted() test.

 - The job can be explicitly canceled (either from the progress view, or from a
progress dialog). In this case, the build can check this by calling
IProgressMonitor.isCanceled().

Either way, it is up to the builder to decide if it wants to respond to
cancelation. A builder will never be interrupted in the middle if it doesn't
want to - it's not really possible to do this safely in Java. A builder that
takes more than a couple of seconds should honor cancelation. A builder that
often takes more than about ten seconds should handle the autobuild
interruption. The Java builder honors cancelation, but does not honor interruption.

Ah I see. But isn't the monitor canceled, too? I'm wondering because for me it 
seems the Java builder is responding to auto build interruptions.
Fixed. 
Explicitly canceling a PDE build job in the progress view now results in an 
instantaneous termination of the job.  Thanks JohnA for your pointers.
*** Bug 60776 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>3.0 RC1

Auto builds are likly to be canceled and reschedulded very often. I noticed 
that the plugin.xml compiler/verifyer doesn't react very well on these cancel 
request. The build is only canceled after the "Verifying ...plugin.xml" is 
finished. 

Thus, the UI is blocked unnecessarly when trying to save or open files because 
the user hast to wait till the build is canceled.
John, isn't the response to Cancel handled at the IncrementalProjectBuilder 
level?
The platform checks for autobuild interruption between each builder invocation.
If you want to check for this more frequently (such as during the invocation of
a particular long builder), you can call
IncrementalProjectBuilder.isInterrupted() from within your builder. This is not
strictly necessary if your builder is relatively quick.
I guess a better wording for my question would have been:
When someone presses cancel on a PDE manifest builder job in the Progress 
view, doesn't Core handle the cancelation and the speedy termination of the 
job?
IMHO Core handles the cancelation if the builder is finished. Thus, it depends 
on the builder.

Example: A builder requires 40 secondes to finish and doesn't check if it's 
interrupted during this time, Core will first recognize the cancelation when 
the 40 seconds are over.

If the Java builder wouldn't check for cancelation it would be hard to cancel 
full builds.
To clarify, there are two different "cancelation" mechanisms for builders:

 - autobuild can be automatically preempted if another thread tries to modify
the workspace during a build. This uses the
IncrementalProjectBuilder.isInterrupted() test.

 - The job can be explicitly canceled (either from the progress view, or from a
progress dialog). In this case, the build can check this by calling
IProgressMonitor.isCanceled().

Either way, it is up to the builder to decide if it wants to respond to
cancelation. A builder will never be interrupted in the middle if it doesn't
want to - it's not really possible to do this safely in Java. A builder that
takes more than a couple of seconds should honor cancelation. A builder that
often takes more than about ten seconds should handle the autobuild
interruption. The Java builder honors cancelation, but does not honor interruption.

Ah I see. But isn't the monitor canceled, too? I'm wondering because for me it 
seems the Java builder is responding to auto build interruptions.
Fixed. 
Explicitly canceling a PDE build job in the progress view now results in an 
instantaneous termination of the job.  Thanks JohnA for your pointers.
*** Bug 60776 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65927" />
    <CreationDate amount="2004-06-07 03:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS Commit window should have focus in 'Commit comment' text field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>CVS Commit window should have focus in 'Commit comment' text field. Currently
'Cancel' button is focused - to proceed user has to press Tab or click mouse in
the comment text field first. What's more important, current behavior is very
unintuitive.

If I remember correctly previous Eclipse versions focused comment field correctly.

3.0RC1 Linux/GTK
Works on windows xp, must be a platform issue. Will see what we can do becaus
this is really annoying.
Fixed</WithStack>
    <WithOutStack>CVS Commit window should have focus in 'Commit comment' text field. Currently
'Cancel' button is focused - to proceed user has to press Tab or click mouse in
the comment text field first. What's more important, current behavior is very
unintuitive.

If I remember correctly previous Eclipse versions focused comment field correctly.

3.0RC1 Linux/GTK
Works on windows xp, must be a platform issue. Will see what we can do becaus
this is really annoying.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65928" />
    <CreationDate amount="2004-06-07 03:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[browsing] Link with editor on for Types, off for Packages, clicking package that is already selected does not refresh Types after "Ctrl+Shift+T" [browsing]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Open JUnit project</Line>
          <Line>2. Open Java Browsing perspective</Line>
          <Line>3. Make sure Packages view has got "Link with editor" off, "Types" has got</Line>
          <Line>"Link with editor" on</Line>
          <Line>4. Choose package "junit.awtui" in Packages view</Line>
          <Line>5. Ctrl+Shit+T and choose ResultPrinter class from the "junit.textui" package</Line>
          <Line>6. Single-click package "junit.awt" in packages view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Steps:

1. Open JUnit project
2. Open Java Browsing perspective
3. Make sure Packages view has got "Link with editor" off, "Types" has got
   "Link with editor" on
4. Choose package "junit.awtui" in Packages view
5. Ctrl+Shit+T and choose ResultPrinter class from the "junit.textui" package
6. Single-click package "junit.awt" in packages view

Observed:

Types view still displayes contents of the junit.textui package.

Expcted:

If in step 7 we single-click some other package in packages view, for instance
junit.extensions, then "Types" view will refresh to contents of "unit.
extensions". For the sake of consistency it is desirable that when in step 7 we 
click "junit.awtui" the "Types" view would also refresh and start displaying 
contents of "unit.awtui"

Note:

If we already have "ResultPrinter.java" already open in editor, in step 5 we may 
just single click this editor instead of doing "Ctrl+Shit+T".

Build: 200405280010
First described as part of bug #65327.
That bug in general was incorrect,
however it helped me to detect this bug.

Reproduced on I20040607_2000. Doesn't happen when linked with editor is on in 
packages view.

Dani, IMO not critical for 3.0. Opinion ?
not for 3.0
Reassigning to inbox since there are currently no plans to work on this.</WithStack>
    <WithOutStack>Steps:

1. Open JUnit project
2. Open Java Browsing perspective
3. Make sure Packages view has got "Link with editor" off, "Types" has got
   "Link with editor" on
4. Choose package "junit.awtui" in Packages view
5. Ctrl+Shit+T and choose ResultPrinter class from the "junit.textui" package
6. Single-click package "junit.awt" in packages view

Observed:

Types view still displayes contents of the junit.textui package.

Expcted:

If in step 7 we single-click some other package in packages view, for instance
junit.extensions, then "Types" view will refresh to contents of "unit.
extensions". For the sake of consistency it is desirable that when in step 7 we 
click "junit.awtui" the "Types" view would also refresh and start displaying 
contents of "unit.awtui"

Note:

If we already have "ResultPrinter.java" already open in editor, in step 5 we may 
just single click this editor instead of doing "Ctrl+Shit+T".

Build: 200405280010
First described as part of bug #65327.
That bug in general was incorrect,
however it helped me to detect this bug.

Reproduced on I20040607_2000. Doesn't happen when linked with editor is on in 
packages view.

Dani, IMO not critical for 3.0. Opinion ?
not for 3.0
Reassigning to inbox since there are currently no plans to work on this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65929" />
    <CreationDate amount="2004-06-07 03:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in AdapterManager#getFactory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145217">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.AdapterManager.getFactory(AdapterManager.java:210)</Frame>
          <Frame depth="1">org.eclipse.core.internal.runtime.AdapterManager.getAdapter(AdapterManager.java:154)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.PlatformObject.getAdapter(PlatformObject.java:64)</Frame>
          <Frame depth="3">com.intershop.enfinity.studio.core.common.LocalAdapterHandlerElement.getAdapter(LocalAdapterHandlerElement.java:111)</Frame>
          <Frame depth="4">com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getWorkbenchAdapter(BeehiveLabelProvider.java:652)</Frame>
          <Frame depth="5">com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getBaseText(BeehiveLabelProvider.java:468)</Frame>
          <Frame depth="6">com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getText(BeehiveLabelProvider.java:619)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:109)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:83)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:459)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:128)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1368)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:376)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:356)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="19">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:342)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:782)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:863)</Frame>
          <Frame depth="22">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:772)</Frame>
          <Frame depth="23">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1058)</Frame>
          <Frame depth="25">com.intershop.enfinity.studio.view.CartridgeView.initViewer(CartridgeView.java:103)</Frame>
          <Frame depth="26">com.intershop.enfinity.studio.view.BeehiveView.createViewerArea(BeehiveView.java:473)</Frame>
          <Frame depth="27">com.intershop.enfinity.studio.view.BeehiveView.createPartControl(BeehiveView.java:201)</Frame>
          <Frame depth="28">com.intershop.enfinity.studio.view.BeehiveTreeView.createPartControl(BeehiveTreeView.java:56)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.PartPane$2.run(PartPane.java:131)</Frame>
          <Frame depth="30">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:127)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:131)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:332)</Frame>
          <Frame depth="35">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="36">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:254)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:511)</Frame>
          <Frame depth="39">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:509)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.ViewFactory$ViewReference.getPart(ViewFactory.java:102)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPage$1.propertyChange(WorkbenchPage.java:130)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:257)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:311)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:551)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:122)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.presentations.DefaultPartPresentation.selectPart(DefaultPartPresentation.java:1090)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:922)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:897)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.PartStack.showPart(PartStack.java:996)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.PartStack.createControl(PartStack.java:383)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.PartStack.createControl(PartStack.java:367)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:427)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:156)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:720)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2743)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:733)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:718)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2886)</Frame>
          <Frame depth="60">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2884)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.ChangeToPerspectiveMenu.run(ChangeToPerspectiveMenu.java:87)</Frame>
          <Frame depth="63">org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:303)</Frame>
          <Frame depth="64">org.eclipse.ui.actions.PerspectiveMenu.runOther(PerspectiveMenu.java:318)</Frame>
          <Frame depth="65">org.eclipse.ui.actions.PerspectiveMenu$4.widgetSelected(PerspectiveMenu.java:134)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="74">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="76">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="77">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="78">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="79">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="81">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="82">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="572" end="599" />
        <code>lookup = new HashMap(30);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="600" end="640" />
        <code>lookup.put(adaptable.getName(), table);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 RC1

I don't know how we get this but we are in the cycle of migrating our plugins 
to 3.0.

java.lang.NullPointerException
	at org.eclipse.core.internal.runtime.AdapterManager.getFactory
(AdapterManager.java:210)
	at org.eclipse.core.internal.runtime.AdapterManager.getAdapter
(AdapterManager.java:154)
	at org.eclipse.core.runtime.PlatformObject.getAdapter
(PlatformObject.java:64)
	at 
com.intershop.enfinity.studio.core.common.LocalAdapterHandlerElement.getAdapter
(LocalAdapterHandlerElement.java:111)
	at 
com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getWorkbenchA
dapter(BeehiveLabelProvider.java:652)
	at 
com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getBaseText
(BeehiveLabelProvider.java:468)
	at 
com.intershop.enfinity.studio.ui.viewsupport.BeehiveLabelProvider.getText
(BeehiveLabelProvider.java:619)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem
(TreeViewer.java:109)
	at 
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run
(AbstractTreeViewer.java:83)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:758)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:459)
	at 
org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:128)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:758)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1368)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:376)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:356)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:342)
	at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:782)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:863)
	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:772)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:238)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1058)
	at com.intershop.enfinity.studio.view.CartridgeView.initViewer
(CartridgeView.java:103)
	at com.intershop.enfinity.studio.view.BeehiveView.createViewerArea
(BeehiveView.java:473)
	at com.intershop.enfinity.studio.view.BeehiveView.createPartControl
(BeehiveView.java:201)
	at com.intershop.enfinity.studio.view.BeehiveTreeView.createPartControl
(BeehiveTreeView.java:56)
	at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:131)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:758)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:127)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:131)
	at org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:332)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:758)
	at org.eclipse.ui.internal.ViewFactory.busyRestoreView
(ViewFactory.java:254)
	at org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:511)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.ViewFactory.restoreView
(ViewFactory.java:509)
	at org.eclipse.ui.internal.ViewFactory$ViewReference.getPart
(ViewFactory.java:102)
	at org.eclipse.ui.internal.WorkbenchPage$1.propertyChange
(WorkbenchPage.java:130)
	at org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:257)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:311)
	at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:551)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible
(PresentablePart.java:122)
	at 
org.eclipse.ui.internal.presentations.DefaultPartPresentation.selectPart
(DefaultPartPresentation.java:1090)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection
(PartStack.java:922)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:897)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:996)
	at org.eclipse.ui.internal.PartStack.createControl(PartStack.java:383)
	at org.eclipse.ui.internal.PartStack.createControl(PartStack.java:367)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:427)
	at org.eclipse.ui.internal.PerspectiveHelper.activate
(PerspectiveHelper.java:156)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:720)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2743)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:733)
	at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:718)
	at org.eclipse.ui.internal.WorkbenchPage$12.run
(WorkbenchPage.java:2886)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2884)
	at org.eclipse.ui.internal.ChangeToPerspectiveMenu.run
(ChangeToPerspectiveMenu.java:87)
	at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:303)
	at org.eclipse.ui.actions.PerspectiveMenu.runOther
(PerspectiveMenu.java:318)
	at org.eclipse.ui.actions.PerspectiveMenu$4.widgetSelected
(PerspectiveMenu.java:134)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
For RC1, the revision number for AdapterManager was 1.22. Looking at the source
code, one way I could see a NPE happening there would be if a 3rd-party adapter
factory caused the lookup cache to be reset by calling (directly or not) one of
the (un)registerAdapter(s) methods from the implementation of getAdapterList.

True, although it sounds unlikely. We can be certain it is never null by
assigning the lookup field immediately before accessing it:

	if (lookup == null)
		lookup = new HashMap(30);
	lookup.put(adaptable.getName(), table);

CCing DJ for fix approval.
&gt; one way I could see a NPE happening there would be 
&gt; if a 3rd-party adapter factory caused the lookup 
&gt; cache to be reset by calling (directly or not) one 
&gt; of the (un)registerAdapter(s) methods from the 
&gt; implementation of getAdapterList

That might be our factory. We introduced it in 2.1 to register our adapters 
dynamically. Now the code is available in 3.0 and I'ss see to migrate 
everything.

Thanks,
Gunnar
Fix for RC2.
Fix released. Rafael, can you also verify the fix since you pointed out the bug?
I believe it is now impossible for lookup to be null when it is referenced,
since all writes to the field are protected by synchronized blocks.
Verified.</WithStack>
    <WithOutStack>3.0 RC1

I don't know how we get this but we are in the cycle of migrating our plugins 
to 3.0.


For RC1, the revision number for AdapterManager was 1.22. Looking at the source
code, one way I could see a NPE happening there would be if a 3rd-party adapter
factory caused the lookup cache to be reset by calling (directly or not) one of
the (un)registerAdapter(s) methods from the implementation of getAdapterList.

True, although it sounds unlikely. We can be certain it is never null by
assigning the lookup field immediately before accessing it:

	if (lookup == null)
		lookup = new HashMap(30);
	lookup.put(adaptable.getName(), table);

CCing DJ for fix approval.
&gt; one way I could see a NPE happening there would be 
&gt; if a 3rd-party adapter factory caused the lookup 
&gt; cache to be reset by calling (directly or not) one 
&gt; of the (un)registerAdapter(s) methods from the 
&gt; implementation of getAdapterList

That might be our factory. We introduced it in 2.1 to register our adapters 
dynamically. Now the code is available in 3.0 and I'ss see to migrate 
everything.

Thanks,
Gunnar
Fix for RC2.
Fix released. Rafael, can you also verify the fix since you pointed out the bug?
I believe it is now impossible for lookup to be null when it is referenced,
since all writes to the field are protected by synchronized blocks.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65930" />
    <CreationDate amount="2004-06-07 04:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Error while stopping search plugin (caused by NPE)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341145219">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop() of bundle 
org.eclipse.search.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:1010)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:502)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.AbstractBundle.stop(AbstractBundle.java:437)</Frame>
          <Frame depth="3">org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:65)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:52)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(EclipseAdaptor.java:538)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:452)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)</Frame>
          <Frame depth="8">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341145219">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.filebuffers.FileBuffers.getTextFileBufferManager(FileBuffers.java:42)</Frame>
          <Frame depth="1">org.eclipse.search2.internal.ui.text.PositionTracker.&lt;init&gt;(PositionTracker.java:58)</Frame>
          <Frame depth="2">org.eclipse.search2.internal.ui.InternalSearchUI.&lt;init&gt;(InternalSearchUI.java:113)</Frame>
          <Frame depth="3">org.eclipse.search2.internal.ui.InternalSearchUI.getInstance(InternalSearchUI.java:124)</Frame>
          <Frame depth="4">org.eclipse.search.internal.ui.SearchPlugin.shutdown(SearchPlugin.java:233)</Frame>
          <Frame depth="5">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:74)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)</Frame>
          <Frame depth="7">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341145219">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.filebuffers.FileBuffers.getTextFileBufferManager(FileBuffers.java:42)</Frame>
          <Frame depth="1">org.eclipse.search2.internal.ui.text.PositionTracker.&lt;init&gt;(PositionTracker.java:58)</Frame>
          <Frame depth="2">org.eclipse.search2.internal.ui.InternalSearchUI.&lt;init&gt;(InternalSearchUI.java:113)</Frame>
          <Frame depth="3">org.eclipse.search2.internal.ui.InternalSearchUI.getInstance(InternalSearchUI.java:124)</Frame>
          <Frame depth="4">org.eclipse.search.internal.ui.SearchPlugin.shutdown(SearchPlugin.java:233)</Frame>
          <Frame depth="5">org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:74)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)</Frame>
          <Frame depth="7">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:502)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.AbstractBundle.stop(AbstractBundle.java:437)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:65)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:52)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(EclipseAdaptor.java:538)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:452)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)</Frame>
          <Frame depth="16">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) the filebuffers plugin has never been activated</Line>
          <Line>2) The filebuffers plugin has been activated, but has been shut down before the</Line>
          <Line>search plugin.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 RC1

During shutdown I found this in the log:


!ENTRY org.eclipse.osgi Jun 07, 2004 10:00:18.843
!MESSAGE Error while stopping "org.eclipse.search_3.0.0".
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop() of bundle 
org.eclipse.search.
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop
(BundleContextImpl.java:1010)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:502)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.stop
(AbstractBundle.java:437)
	at org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles
(BundleStopper.java:65)
	at org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles
(BundleStopper.java:52)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping
(EclipseAdaptor.java:538)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:452)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:181)
	at java.lang.Thread.run(Thread.java:534)
Caused by: java.lang.NullPointerException
	at org.eclipse.core.filebuffers.FileBuffers.getTextFileBufferManager
(FileBuffers.java:42)
	at org.eclipse.search2.internal.ui.text.PositionTracker.&lt;init&gt;
(PositionTracker.java:58)
	at org.eclipse.search2.internal.ui.InternalSearchUI.&lt;init&gt;
(InternalSearchUI.java:113)
	at org.eclipse.search2.internal.ui.InternalSearchUI.getInstance
(InternalSearchUI.java:124)
	at org.eclipse.search.internal.ui.SearchPlugin.shutdown
(SearchPlugin.java:233)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:74)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run
(BundleContextImpl.java:994)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop
(BundleContextImpl.java:990)
	... 8 more
Root exception:
java.lang.NullPointerException
	at org.eclipse.core.filebuffers.FileBuffers.getTextFileBufferManager
(FileBuffers.java:42)
	at org.eclipse.search2.internal.ui.text.PositionTracker.&lt;init&gt;
(PositionTracker.java:58)
	at org.eclipse.search2.internal.ui.InternalSearchUI.&lt;init&gt;
(InternalSearchUI.java:113)
	at org.eclipse.search2.internal.ui.InternalSearchUI.getInstance
(InternalSearchUI.java:124)
	at org.eclipse.search.internal.ui.SearchPlugin.shutdown
(SearchPlugin.java:233)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop
(PluginActivator.java:74)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run
(BundleContextImpl.java:994)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop
(BundleContextImpl.java:990)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker
(BundleHost.java:502)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.stop
(AbstractBundle.java:437)
	at org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles
(BundleStopper.java:65)
	at org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles
(BundleStopper.java:52)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping
(EclipseAdaptor.java:538)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown
(Framework.java:452)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run
(SystemBundle.java:181)
	at java.lang.Thread.run(Thread.java:534)
I can imagine 2 causes for the exception:

1) the filebuffers plugin has never been activated
2) The filebuffers plugin has been activated, but has been shut down before the
search plugin. 

I'm not quite sure what the cause is, but I shouldn't activate the filebuffers
plugin when it's not loaded yet at shutdown time (whether it works or not).
I don't think I can actually fix this in search. I'm uncomfortable with having
to check the activation state of foreign plugins before calling static methods
in it. I'll move the PR to Platform-text to fix the null pointer, but I think we
should discuss the issue more broadly.
I changed InternalSearchUI to only shut down if initialized.
Added null check. I200406091200. Will raise discussion on this issue.
start verifying
verified in I200406110010 through code inspection</WithStack>
    <WithOutStack>3.0 RC1

During shutdown I found this in the log:


!ENTRY org.eclipse.osgi Jun 07, 2004 10:00:18.843
!MESSAGE Error while stopping "org.eclipse.search_3.0.0".
!STACK 0
	... 8 more
Root exception:

I can imagine 2 causes for the exception:

1) the filebuffers plugin has never been activated
2) The filebuffers plugin has been activated, but has been shut down before the
search plugin. 

I'm not quite sure what the cause is, but I shouldn't activate the filebuffers
plugin when it's not loaded yet at shutdown time (whether it works or not).
I don't think I can actually fix this in search. I'm uncomfortable with having
to check the activation state of foreign plugins before calling static methods
in it. I'll move the PR to Platform-text to fix the null pointer, but I think we
should discuss the issue more broadly.
I changed InternalSearchUI to only shut down if initialized.
Added null check. I200406091200. Will raise discussion on this issue.
start verifying
verified in I200406110010 through code inspection</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65931" />
    <CreationDate amount="2004-06-07 05:05:00 -0400" />
    <DupId amount="65954" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>NullPointer in CVS synchronization -&gt; update</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145220">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)</Frame>
          <Frame depth="1">java.util.TimeZone.getTimeZone(TimeZone.java:450)</Frame>
          <Frame depth="2">java.util.TimeZone.getTimeZone(TimeZone.java:444)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone(CVSDateFormatter.java:97)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate(CVSDateFormatter.java:42)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle(ModTimeHandler.java:43)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:232)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.client.Command.doExecute(Command.java:421)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.client.Update.doExecute(Update.java:201)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.client.UpdateMergableOnly.doExecute(UpdateMergableOnly.java:142)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.client.Command$1.run(Command.java:337)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1405)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'm not quite sure if this is the right module to submit this bug. Anyway, I
have been getting NullPointer for a long time from 3.0 stream builds when I try
CVS update. The UI says that an internal error has occured during CVS Update.
The log from workspace shows a stacktrace:

!MESSAGE An internal error occurred during: "CVS Update".
!STACK 0
java.lang.NullPointerException
        at java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)
        at java.util.TimeZone.getTimeZone(TimeZone.java:450)
        at java.util.TimeZone.getTimeZone(TimeZone.java:444)
        at
org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone(CVSDateFormatter.java:97)
        at
org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate(CVSDateFormatter.java:42)
        at
org.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle(ModTimeHandler.java:43)
        at
org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:232)
        at
org.eclipse.team.internal.ccvs.core.client.Command.doExecute(Command.java:421)
        at
org.eclipse.team.internal.ccvs.core.client.Update.doExecute(Update.java:201)
        at
org.eclipse.team.internal.ccvs.core.client.UpdateMergableOnly.doExecute(UpdateMergableOnly.java:142)
        at
org.eclipse.team.internal.ccvs.core.client.Command$1.run(Command.java:337)
        at
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1405)


I have tried to change user.timezone (it is Europe/Helsinki by default in my
Mandrake 10.0 OS) to America/Los_Angeles and god knows what else but that
doesn't seem to help at all. In windows XP this bug doesn't occur for me.

-Perttu
What VM are you using? Could you try a different one to see if it is a 
VM/Class library issue?


*** This bug has been marked as a duplicate of 65954 ***</WithStack>
    <WithOutStack>I'm not quite sure if this is the right module to submit this bug. Anyway, I
have been getting NullPointer for a long time from 3.0 stream builds when I try
CVS update. The UI says that an internal error has occured during CVS Update.
The log from workspace shows a stacktrace:

!MESSAGE An internal error occurred during: "CVS Update".
!STACK 0



I have tried to change user.timezone (it is Europe/Helsinki by default in my
Mandrake 10.0 OS) to America/Los_Angeles and god knows what else but that
doesn't seem to help at all. In windows XP this bug doesn't occur for me.

-Perttu
What VM are you using? Could you try a different one to see if it is a 
VM/Class library issue?


*** This bug has been marked as a duplicate of 65954 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65932" />
    <CreationDate amount="2004-06-07 05:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="WSVT" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Not Importing xsd correclty</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>WSLD validator does not import types defined in an external xsd file and
imported into wsdl using XMLSchema import clause as follows:

&lt;s:import schemaLocation="my.xsd" namespace="my schema namespace" /&gt;
Michael, Please attach complete WSDL and XSD samples to reproduce the problem.
Thanks.
This is a bug in wsdl4j, namely com.ibm.wsdl.util.StringUtils, which can't 
correctly resolve imports in both wsdl and xsd when the imported file is in the 
same directory of the importing file without specifying "./" in front of file 
name.

e.g. wsdl4j works well in following situations:

&lt;xs:import schemaLocation="./my.xsd" namespace="my schema namespace" /&gt;
&lt;wsdl:import location="./my.wsdl" namespace="target namespace" /&gt;

but it does NOT worl in:

&lt;xs:import schemaLocation="my.xsd" namespace="my schema namespace" /&gt;
&lt;wsdl:import location="my.wsdl" namespace="target namespace" /&gt;

Bo Wang notified bug was in wsdl4j and had to do with format of xsd file string. 
That you had to prefix current directory locs with "./". 
 
I tried this but it did NOT resolve issue. 
 
xsd remained not imported  
Fixed when upgrading to newer version of Xerces.
Closing old WSVT bug.</WithStack>
    <WithOutStack>WSLD validator does not import types defined in an external xsd file and
imported into wsdl using XMLSchema import clause as follows:

&lt;s:import schemaLocation="my.xsd" namespace="my schema namespace" /&gt;
Michael, Please attach complete WSDL and XSD samples to reproduce the problem.
Thanks.
This is a bug in wsdl4j, namely com.ibm.wsdl.util.StringUtils, which can't 
correctly resolve imports in both wsdl and xsd when the imported file is in the 
same directory of the importing file without specifying "./" in front of file 
name.

e.g. wsdl4j works well in following situations:

&lt;xs:import schemaLocation="./my.xsd" namespace="my schema namespace" /&gt;
&lt;wsdl:import location="./my.wsdl" namespace="target namespace" /&gt;

but it does NOT worl in:

&lt;xs:import schemaLocation="my.xsd" namespace="my schema namespace" /&gt;
&lt;wsdl:import location="my.wsdl" namespace="target namespace" /&gt;

Bo Wang notified bug was in wsdl4j and had to do with format of xsd file string. 
That you had to prefix current directory locs with "./". 
 
I tried this but it did NOT resolve issue. 
 
xsd remained not imported  
Fixed when upgrading to newer version of Xerces.
Closing old WSVT bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65933" />
    <CreationDate amount="2004-06-07 05:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[find/replace] Whole Word definition in FindReplaceDialog should probe IFindReplaceTarget implementation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>RC1

FindReplaceDialog uses its private isWholeWord predicate to check whether the
find string is an entire word. However, implementations of IFindReplaceTarget
may not share the definition of a word (e.g. the JavaEditor may find java
identifiers are words, while the text editor uses platform word breaks etc.).

To get this right, FindReplaceDialog should probe the target for its word
definition; a possible solution would be to create a test document containing
the find string and performing a "whole word" search on it. If the find string
is found, the "whole word" option would be enabled.
post 3.0</WithStack>
    <WithOutStack>RC1

FindReplaceDialog uses its private isWholeWord predicate to check whether the
find string is an entire word. However, implementations of IFindReplaceTarget
may not share the definition of a word (e.g. the JavaEditor may find java
identifiers are words, while the text editor uses platform word breaks etc.).

To get this right, FindReplaceDialog should probe the target for its word
definition; a possible solution would be to create a test document containing
the find string and performing a "whole word" search on it. If the find string
is found, the "whole word" option would be enabled.
post 3.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65934" />
    <CreationDate amount="2004-06-07 05:37:00 -0400" />
    <DupId amount="30153" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Add Javadoc comment  does not update previous comment</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- void int foo()</Line>
          <Line>When I select foo and choose "Add Javadoc comment" I have correct Javadoc</Line>
          <Line>comment. Now I change my mind and add a parameter to my method:</Line>
          <Line>- void int foo(int param)</Line>
          <Line>and again choose "Add Javadoc comment" the comment is added as the command name</Line>
          <Line>shows :) but after this I have 2 javadoc comments one after one.</Line>
          <Line>If I add parameter using "Refactor-&gt;Change Method Singature" then Javadoc gets</Line>
          <Line>updated correctly.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi,
  I am working on a class and input new method, fo example:
- void int foo()
  When I select foo and choose "Add Javadoc comment" I have correct Javadoc
comment. Now I change my mind and add a parameter to my method:
- void int foo(int param) 
and again choose "Add Javadoc comment" the comment is added as the command name
shows :) but after this I have 2 javadoc comments one after one.
  If I add parameter using "Refactor-&gt;Change Method Singature" then Javadoc gets
updated correctly.

Is it possible to make "Add Javadoc comment" work in update mode - when there is
javadoc comment then add/remove changed parameters or Exception info.

Bye,
Piotr


*** This bug has been marked as a duplicate of 30153 ***</WithStack>
    <WithOutStack>Hi,
  I am working on a class and input new method, fo example:
- void int foo()
  When I select foo and choose "Add Javadoc comment" I have correct Javadoc
comment. Now I change my mind and add a parameter to my method:
- void int foo(int param) 
and again choose "Add Javadoc comment" the comment is added as the command name
shows :) but after this I have 2 javadoc comments one after one.
  If I add parameter using "Refactor-&gt;Change Method Singature" then Javadoc gets
updated correctly.

Is it possible to make "Add Javadoc comment" work in update mode - when there is
javadoc comment then add/remove changed parameters or Exception info.

Bye,
Piotr


*** This bug has been marked as a duplicate of 30153 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65935" />
    <CreationDate amount="2004-06-07 05:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Plugin wizard can become very large</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- In the Java &gt; Build Path &gt; New Project page specify to use source and output</Line>
          <Line>folder and set the default for the source folder to a very long name</Line>
          <Line>- Open the new Plugin wizard. The size of the wizard is as wide as the source</Line>
          <Line>folder name</Line>
          <Line>Fixed and released to head :)</Line>
          <Line>Nice work, Cherie.</Line>
          <Line>I hope you didn't injure yourself writing those three lines of code :-)</Line>
          <Line>My head still hurts ;-)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>RC1

- In the Java &gt; Build Path &gt; New Project page specify to use source and output
folder and set the default for the source folder to a very long name
- Open the new Plugin wizard. The size of the wizard is as wide as the source
folder name
Fixed and released to head :)
Nice work, Cherie.
I hope you didn't injure yourself writing those three lines of code :-)
My head still hurts ;-)</WithStack>
    <WithOutStack>RC1

- In the Java &gt; Build Path &gt; New Project page specify to use source and output
folder and set the default for the source folder to a very long name
- Open the new Plugin wizard. The size of the wizard is as wide as the source
folder name
Fixed and released to head :)
Nice work, Cherie.
I hope you didn't injure yourself writing those three lines of code :-)
My head still hurts ;-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65936" />
    <CreationDate amount="2004-06-07 05:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refactor Rename incorrectly suggests to rename class not method if we have a static method with same name and signature as non-static</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="57" end="168" />
        <code>public class A
{
	public static A show( int i )
	{
		return new A();
	}
	
	public void show( int i )
	{
		
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Create the following (incorrect) java class:</Line>
          <Line />
          <Line />
          <Line />
          <Line>2. select the static "show( int i )" method</Line>
          <Line />
          <Line>3. Do Refactor -&gt; Rename (or Alt+Shift+R)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Steps:

1. Create the following (incorrect) java class:

public class A
{
	public static A show( int i )
	{
		return new A();
	}
	
	public void show( int i )
	{
		
	}
}

2. select the static "show( int i )" method

3. Do Refactor -&gt; Rename (or Alt+Shift+R)

Observed:

    "Rename Type" , New Name = "A"

Build: 200405280010

Expected:

    "Rename Method", New Name = "show"
The problem here is that the type A has to method show resulting in the fact 
that the CU can't be properly parsed. We then default back to the type.

Won't fix.
Reopening since analysis wasn't correct.
Doing a code resolve with the cursor positioned at sh&lt;cursor&gt;ow( int i ) 
returns the type A as a result. 

Moving to JDT/Core.
Cannot reproduce using RC3 build.
Please set as VERIFIED if you agree or reopen the bug, thx
Yes, really works in RC3
Really thanx :-)</WithStack>
    <WithOutStack>Steps:

1. Create the following (incorrect) java class:

public class A
{
	public static A show( int i )
	{
		return new A();
	}
	
	public void show( int i )
	{
		
	}
}

2. select the static "show( int i )" method

3. Do Refactor -&gt; Rename (or Alt+Shift+R)

Observed:

    "Rename Type" , New Name = "A"

Build: 200405280010

Expected:

    "Rename Method", New Name = "show"
The problem here is that the type A has to method show resulting in the fact 
that the CU can't be properly parsed. We then default back to the type.

Won't fix.
Reopening since analysis wasn't correct.
Doing a code resolve with the cursor positioned at sh&lt;cursor&gt;ow( int i ) 
returns the type A as a result. 

Moving to JDT/Core.
Cannot reproduce using RC3 build.
Please set as VERIFIED if you agree or reopen the bug, thx
Yes, really works in RC3
Really thanx :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65937" />
    <CreationDate amount="2004-06-07 05:52:00 -0400" />
    <DupId amount="65036" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>java.io.FileNotFoundException for .state when running with -configuration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341145226">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop() of bundle
org.eclipse.osgi.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:1010)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.StartLevelManager.suspendAllBundles(StartLevelManager.java:658)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:602)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:281)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:254)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:196)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:461)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)</Frame>
          <Frame depth="8">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341145226">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:808)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStop(EclipseAdaptor.java:291)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop(SystemBundleActivator.java:66)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)</Frame>
          <Frame depth="4">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)</Frame>
        </Frames>
      </Cause>
      <Cause timestamp="1437341145226">
        <Exception>java.io.FileNotFoundException</Exception>
        <Reason>:
c:\local\eclipse\3.0RC1\eclipse\configuration\org.eclipse.osgi\.state (The
system cannot find the path specified)</Reason>
        <Frames>
          <Frame depth="0">java.io.FileOutputStream.open(Native Method)</Frame>
          <Frame depth="1">java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:179)</Frame>
          <Frame depth="2">java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:131)</Frame>
          <Frame depth="3">org.eclipse.osgi.internal.resolver.StateManager.writeState(StateManager.java:84)</Frame>
          <Frame depth="4">org.eclipse.osgi.internal.resolver.StateManager.shutdown(StateManager.java:42)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:806)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341145226">
        <Exception>java.io.FileNotFoundException</Exception>
        <Reason>:
c:\local\eclipse\3.0RC1\eclipse\configuration\org.eclipse.osgi\.state (The
system cannot find the path specified)</Reason>
        <Frames>
          <Frame depth="0">java.io.FileOutputStream.open(Native Method)</Frame>
          <Frame depth="1">java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:179)</Frame>
          <Frame depth="2">java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:131)</Frame>
          <Frame depth="3">org.eclipse.osgi.internal.resolver.StateManager.writeState(StateManager.java:84)</Frame>
          <Frame depth="4">org.eclipse.osgi.internal.resolver.StateManager.shutdown(StateManager.java:42)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:806)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStop(EclipseAdaptor.java:291)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop(SystemBundleActivator.java:66)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)</Frame>
          <Frame depth="9">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.StartLevelManager.suspendAllBundles(StartLevelManager.java:658)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:602)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:281)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:254)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:196)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:461)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)</Frame>
          <Frame depth="18">java.lang.Thread.run(Thread.java:534)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse RC1
Eclipse is started with -configuration C:\local\eclipse\3.0RC1\config but osgi
is looking for .state in Eclipse install dir getting java.io.FileNotFoundException.
This error is new in RC1 since this way of starting eclipse has always worked in
2.1 and 3.0 M1 to M8.

!SESSION Jun 07, 2004 11:43:30.160 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY System Bundle 0 0 Jun 07, 2004 11:43:30.160
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop() of bundle
org.eclipse.osgi.
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:1010)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.suspendAllBundles(StartLevelManager.java:658)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:602)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:281)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:254)
	at
org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:196)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:461)
	at
org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)
	at java.lang.Thread.run(Thread.java:534)
Caused by: org.osgi.framework.BundleException
	at
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:808)
	at
org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStop(EclipseAdaptor.java:291)
	at
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop(SystemBundleActivator.java:66)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)
	at java.security.AccessController.doPrivileged(Native Method)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)
	... 8 more
Caused by: java.io.FileNotFoundException:
c:\local\eclipse\3.0RC1\eclipse\configuration\org.eclipse.osgi\.state (The
system cannot find the path specified)
	at java.io.FileOutputStream.open(Native Method)
	at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:179)
	at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:131)
	at org.eclipse.osgi.internal.resolver.StateManager.writeState(StateManager.java:84)
	at org.eclipse.osgi.internal.resolver.StateManager.shutdown(StateManager.java:42)
	at
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:806)
	... 13 more
Root exception:
java.io.FileNotFoundException:
c:\local\eclipse\3.0RC1\eclipse\configuration\org.eclipse.osgi\.state (The
system cannot find the path specified)
	at java.io.FileOutputStream.open(Native Method)
	at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:179)
	at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:131)
	at org.eclipse.osgi.internal.resolver.StateManager.writeState(StateManager.java:84)
	at org.eclipse.osgi.internal.resolver.StateManager.shutdown(StateManager.java:42)
	at
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStop(DefaultAdaptor.java:806)
	at
org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStop(EclipseAdaptor.java:291)
	at
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.stop(SystemBundleActivator.java:66)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)
	at java.security.AccessController.doPrivileged(Native Method)
	at
org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:990)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.suspendAllBundles(StartLevelManager.java:658)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:602)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:281)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:254)
	at
org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:196)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:461)
	at
org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:181)
	at java.lang.Thread.run(Thread.java:534)


*** This bug has been marked as a duplicate of 65036 ***</WithStack>
    <WithOutStack>Eclipse RC1
Eclipse is started with -configuration C:\local\eclipse\3.0RC1\config but osgi
is looking for .state in Eclipse install dir getting java.io.FileNotFoundException.
This error is new in RC1 since this way of starting eclipse has always worked in
2.1 and 3.0 M1 to M8.

!SESSION Jun 07, 2004 11:43:30.160 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY System Bundle 0 0 Jun 07, 2004 11:43:30.160
!MESSAGE FrameworkEvent.ERROR
!STACK 0
	... 8 more
	... 13 more
Root exception:



*** This bug has been marked as a duplicate of 65036 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65938" />
    <CreationDate amount="2004-06-07 06:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cannot generate Javadoc with excluded source folder [javadoc]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- create a new Java project with source folder 'src'</Line>
          <Line>- add the project root folder to the source path</Line>
          <Line>- add an exclusion filter for 'src' to the project source folder</Line>
          <Line>- add 'pack/A.java' to 'src'</Line>
          <Line>- Project &gt; Generate Javadoc</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I200406042000

- create a new Java project with source folder 'src'
- add the project root folder to the source path
- add an exclusion filter for 'src' to the project source folder
- add 'pack/A.java' to 'src'
- Project &gt; Generate Javadoc

The wizard shows the project without children, and I can't check the project
(checkmark not accepted on mouseClick or Space key).
Martin, can you please comment.
Martin ...
fixed &gt; 20040610
start verifying...
reopening. I can check uncheck the project put the wizard claims that it 
doesn't hava Java source although the package explorer shows src/pack/A.java.
Created attachment 12142
proposed fix
Martin - what are the consequences of not fixing this one, i.e., are there 
workarounds?
You currecntly can't use the Javadoc wizard to create Javadoc when the project 
is a source folder containing a nested source folder. The nested folder is 
ignored (not shown -&gt; not available for selection)
suggest to fix for 3.0.1
verified proposed fix

Released in HEAD (for 3.1).
Fix reviewed by Andre Weinand and Dirk Baeumer.
Fix released to 3.0.1.
start verifying for 3.1 M1
Verified OK in Head (3.1) - somebody please change the Status to Verified.
More precisely, verified OK in Build id: 200408101200
marked as Verfied for Danny
Reopen to remove verified mark. This bug has target milestone 3.0.1 and should
be verified in a 3.0.1 maintenance build.
.
Verified on M200409010800</WithStack>
    <WithOutStack>I200406042000

- create a new Java project with source folder 'src'
- add the project root folder to the source path
- add an exclusion filter for 'src' to the project source folder
- add 'pack/A.java' to 'src'
- Project &gt; Generate Javadoc

The wizard shows the project without children, and I can't check the project
(checkmark not accepted on mouseClick or Space key).
Martin, can you please comment.
Martin ...
fixed &gt; 20040610
start verifying...
reopening. I can check uncheck the project put the wizard claims that it 
doesn't hava Java source although the package explorer shows src/pack/A.java.
Created attachment 12142
proposed fix
Martin - what are the consequences of not fixing this one, i.e., are there 
workarounds?
You currecntly can't use the Javadoc wizard to create Javadoc when the project 
is a source folder containing a nested source folder. The nested folder is 
ignored (not shown -&gt; not available for selection)
suggest to fix for 3.0.1
verified proposed fix

Released in HEAD (for 3.1).
Fix reviewed by Andre Weinand and Dirk Baeumer.
Fix released to 3.0.1.
start verifying for 3.1 M1
Verified OK in Head (3.1) - somebody please change the Status to Verified.
More precisely, verified OK in Build id: 200408101200
marked as Verfied for Danny
Reopen to remove verified mark. This bug has target milestone 3.0.1 and should
be verified in a 3.0.1 maintenance build.
.
Verified on M200409010800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65939" />
    <CreationDate amount="2004-06-07 06:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse wont restart after installing CDT 2.0 M9</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341145228">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.PackageAdminImpl.setResolvedBundles(PackageAdminImpl.java:698)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:469)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:166)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:425)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:126)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145228">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:137)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="3">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="4">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Eclipse RC1
After installing CDT 2.0 M9 on eclipse RC1 from
http://update.eclipse.org/tools/cdt/updates/builds/2.0M9, eclipse will not start
anymore, giving the following error:

!SESSION Jun 07, 2004 12:35:16.578 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY org.eclipse.osgi Jun 07, 2004 12:35:16.578
!MESSAGE Startup error
!STACK 1
java.lang.NullPointerException
	at
org.eclipse.osgi.framework.internal.core.PackageAdminImpl.setResolvedBundles(PackageAdminImpl.java:698)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:469)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)
	at
org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)
	at
org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:166)
	at org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:425)
	at org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
!SESSION Mon Jun 07 12:35:16 CEST 2004 -----------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Jun 07, 2004 12:35:16.594
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.NullPointerException
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
Just for your information, i installed build 2.0.0.200406070300 and with it the
problem doesn't happen.
May be you should signal on the download page that the M9 build doesn't work
with RC1.
Regards,  Gabriele.
Actually the download page indicates that M9 (CDT) will work on M9 (Eclipse).

Both eclipse and CDT change between milestone builds and there are problems 
mixing them.</WithStack>
    <WithOutStack>Eclipse RC1
After installing CDT 2.0 M9 on eclipse RC1 from
http://update.eclipse.org/tools/cdt/updates/builds/2.0M9, eclipse will not start
anymore, giving the following error:

!SESSION Jun 07, 2004 12:35:16.578 ---------------------------------------------
eclipse.buildId=I200405290105
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
!ENTRY org.eclipse.osgi Jun 07, 2004 12:35:16.578
!MESSAGE Startup error
!STACK 1
!SESSION Mon Jun 07 12:35:16 CEST 2004 -----------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Jun 07, 2004 12:35:16.594
!MESSAGE Exception launching the Eclipse Platform:
!STACK

Just for your information, i installed build 2.0.0.200406070300 and with it the
problem doesn't happen.
May be you should signal on the download page that the M9 build doesn't work
with RC1.
Regards,  Gabriele.
Actually the download page indicates that M9 (CDT) will work on M9 (Eclipse).

Both eclipse and CDT change between milestone builds and there are problems 
mixing them.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65940" />
    <CreationDate amount="2004-06-07 06:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[navigation] 'Last Edit Position' comes back with different scroll</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>3m9.

Fully clear navigation back &amp; forward might be assisted by restoring or using a 
close-by 'Scroll Location', as well as the 'Cursor Location'.

The 'Last Edit Position' button is correct as to cursor position, but esp when 
editing within the same file is noticeable to return with different scroll-
positions of the view. 

It appears the row may tend to locate slightly above mid-height. However if the 
edit had been performed with a substantially different scroll locn, 
particularly near structural (method or inner cl) boundaries, the returned-to 
view may be structurally quite different.

'Normalizing' scroll posns, towards the 40% line or so, is valid and would not 
impact site recognition for 5-6 lines worth; but ideally or optionally large 
view changes should *not* be introduced while users are navigating in the space.</WithStack>
    <WithOutStack>3m9.

Fully clear navigation back &amp; forward might be assisted by restoring or using a 
close-by 'Scroll Location', as well as the 'Cursor Location'.

The 'Last Edit Position' button is correct as to cursor position, but esp when 
editing within the same file is noticeable to return with different scroll-
positions of the view. 

It appears the row may tend to locate slightly above mid-height. However if the 
edit had been performed with a substantially different scroll locn, 
particularly near structural (method or inner cl) boundaries, the returned-to 
view may be structurally quite different.

'Normalizing' scroll posns, towards the 40% line or so, is valid and would not 
impact site recognition for 5-6 lines worth; but ideally or optionally large 
view changes should *not* be introduced while users are navigating in the space.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65941" />
    <CreationDate amount="2004-06-07 07:10:00 -0400" />
    <DupId amount="65121" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>UnManaged Projects - problem with backwards compatability</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="41">
        <Lines>
          <Line>1. At the bottom of the file, under &lt;natures&gt; add the following line:</Line>
          <Line>&lt;nature&gt;org.eclipse.cdt.make.core.ScannerConfigNature&lt;/nature&gt;</Line>
          <Line>2. In the middle of the file, under &lt;buildSpec&gt; add the following lines:</Line>
          <Line>&lt;buildCommand&gt;</Line>
          <Line />
          <Line>&lt;name&gt;org.eclipse.cdt.make.core.ScannerConfigBuilder&lt;/name&gt;</Line>
          <Line>&lt;arguments&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.ScannerConfigDiscoveryEnabled&lt;/key&gt;</Line>
          <Line>&lt;value&gt;true&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.esiProviderCommandEnabled&lt;/key&gt;</Line>
          <Line>&lt;value&gt;true&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserId&lt;/key&gt;</Line>
          <Line />
          <Line>&lt;value&gt;org.eclipse.cdt.make.core.GCCScannerInfoConsoleParser&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.useDefaultESIProviderCmd&lt;/key&gt;</Line>
          <Line>&lt;value&gt;true&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserEnabled&lt;/key&gt;</Line>
          <Line>&lt;value&gt;true&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;dictionary&gt;</Line>
          <Line />
          <Line>&lt;key&gt;org.eclipse.cdt.make.core.esiProviderParserId&lt;/key&gt;</Line>
          <Line />
          <Line>&lt;value&gt;org.eclipse.cdt.make.core.GCCSpecsConsoleParser&lt;/value&gt;</Line>
          <Line>&lt;/dictionary&gt;</Line>
          <Line>&lt;/arguments&gt;</Line>
          <Line>&lt;/buildCommand&gt;</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>OK, so I finally decided to upgrade from my M6 system to M9, looking for
some improvements...
Unfortunately I seem to have a lot of problems.

The one I am most concerned about is the 'conversion' of old format
projects to new.

I have found that if I add an 'old' Managed Project into an M9 workspace,
and then exit, and re-enter Eclipse, then the system recognises that the
project needs upgrading, and then does so.

This does not seem to happen for 'old' UnManaged projects, however.

So, when I try and change the Project Properties (specifically the C/C++
Make Project section), I get the following report:

Error setting options
Reason:
Missing builder: org.eclipse.cdt.make.core.ScannerConfigBuilder

Does anybody have any suggestions how to get past this??
This is a duplicate of 65121.

John, your feedback is valuable, so here's a workaround:

You need to edit the .project file in two places, discussed below.
The .project file is normally filtered out from the C/C++ Projects view,
and normally not to be edited directly, so proceed with caution.
You can copy the information from here or (on Solaris this is more
convenient) from an existing newly created .project file.
Once done, close and reopen the project.  You should be good to go.

The two changes are:
1. At the bottom of the file, under &lt;natures&gt; add the following line:
		&lt;nature&gt;org.eclipse.cdt.make.core.ScannerConfigNature&lt;/nature&gt;
2. In the middle of the file, under &lt;buildSpec&gt; add the following lines:
		&lt;buildCommand&gt;
		
	&lt;name&gt;org.eclipse.cdt.make.core.ScannerConfigBuilder&lt;/name&gt;
			&lt;arguments&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.ScannerConfigDiscoveryEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.esiProviderCommandEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserId&lt;/key&gt;
				
	&lt;value&gt;org.eclipse.cdt.make.core.GCCScannerInfoConsoleParser&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.useDefaultESIProviderCmd&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.esiProviderParserId&lt;/key&gt;
				
	&lt;value&gt;org.eclipse.cdt.make.core.GCCSpecsConsoleParser&lt;/value&gt;
				&lt;/dictionary&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;



*** This bug has been marked as a duplicate of 65121 ***</WithStack>
    <WithOutStack>OK, so I finally decided to upgrade from my M6 system to M9, looking for
some improvements...
Unfortunately I seem to have a lot of problems.

The one I am most concerned about is the 'conversion' of old format
projects to new.

I have found that if I add an 'old' Managed Project into an M9 workspace,
and then exit, and re-enter Eclipse, then the system recognises that the
project needs upgrading, and then does so.

This does not seem to happen for 'old' UnManaged projects, however.

So, when I try and change the Project Properties (specifically the C/C++
Make Project section), I get the following report:

Error setting options
Reason:
Missing builder: org.eclipse.cdt.make.core.ScannerConfigBuilder

Does anybody have any suggestions how to get past this??
This is a duplicate of 65121.

John, your feedback is valuable, so here's a workaround:

You need to edit the .project file in two places, discussed below.
The .project file is normally filtered out from the C/C++ Projects view,
and normally not to be edited directly, so proceed with caution.
You can copy the information from here or (on Solaris this is more
convenient) from an existing newly created .project file.
Once done, close and reopen the project.  You should be good to go.

The two changes are:
1. At the bottom of the file, under &lt;natures&gt; add the following line:
		&lt;nature&gt;org.eclipse.cdt.make.core.ScannerConfigNature&lt;/nature&gt;
2. In the middle of the file, under &lt;buildSpec&gt; add the following lines:
		&lt;buildCommand&gt;
		
	&lt;name&gt;org.eclipse.cdt.make.core.ScannerConfigBuilder&lt;/name&gt;
			&lt;arguments&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.ScannerConfigDiscoveryEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.esiProviderCommandEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserId&lt;/key&gt;
				
	&lt;value&gt;org.eclipse.cdt.make.core.GCCScannerInfoConsoleParser&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.useDefaultESIProviderCmd&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.makeBuilderParserEnabled&lt;/key&gt;
					&lt;value&gt;true&lt;/value&gt;
				&lt;/dictionary&gt;
				&lt;dictionary&gt;
				
	&lt;key&gt;org.eclipse.cdt.make.core.esiProviderParserId&lt;/key&gt;
				
	&lt;value&gt;org.eclipse.cdt.make.core.GCCSpecsConsoleParser&lt;/value&gt;
				&lt;/dictionary&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;



*** This bug has been marked as a duplicate of 65121 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65942" />
    <CreationDate amount="2004-06-07 07:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Closing/opening a project doesn't have the correct delta</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20040529

Closing a project shows the following Java delta:
Java Model[*]: {CHILDREN | CONTENT}
   Test[-]: {}
   ResourceDelta(/Test)[*]

It should show:
Java Model[*]: {CHILDREN | CONTENT}
   Test[*]: {CLOSED}
   ResourceDelta(/Test)[*]

The F_CLOSED flag is not set.
Problem was identified investigating bug 64887 which is targeted at 3.0 RC2.
Created attachment 11647
Proposed patch

Changed DeltaProcessor to create a CHANGED delta with F_CLOSED/F_OPENED flag
set if the project is closed/opened. Changed TypeHierarchy delta processing to
handle this flag.
Discarding</WithStack>
    <WithOutStack>I20040529

Closing a project shows the following Java delta:
Java Model[*]: {CHILDREN | CONTENT}
   Test[-]: {}
   ResourceDelta(/Test)[*]

It should show:
Java Model[*]: {CHILDREN | CONTENT}
   Test[*]: {CLOSED}
   ResourceDelta(/Test)[*]

The F_CLOSED flag is not set.
Problem was identified investigating bug 64887 which is targeted at 3.0 RC2.
Created attachment 11647
Proposed patch

Changed DeltaProcessor to create a CHANGED delta with F_CLOSED/F_OPENED flag
set if the project is closed/opened. Changed TypeHierarchy delta processing to
handle this flag.
Discarding</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65943" />
    <CreationDate amount="2004-06-07 07:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Closing/opening a project doesn't have the correct delta</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040529

Closing a project shows the following Java delta:
Java Model[*]: {CHILDREN | CONTENT}
   Test[-]: {}
   ResourceDelta(/Test)[*]

It should show:
Java Model[*]: {CHILDREN | CONTENT}
   Test[*]: {CLOSED}
   ResourceDelta(/Test)[*]

The F_CLOSED flag is not set.
Same problem for the F_OPENED flag.
Problem was identified investigating bug 64887 which is targeted at 3.0 RC2.
Created attachment 11649
Proposed patch

Changed DeltaProcessor to create a CHANGED delta with F_CLOSED/F_OPENED flag
set if the project is closed/opened. Changed TypeHierarchy delta processing to
handle this flag.
Created attachment 11650
Updated tests

Changed JavaElementDeltaTests and JavaProjectTests to reflect this change.
Philippe should this be fixed for 3.0, or 3.1 ?
I think it is late in the game to perform such a change. We have been living 
with the bug since 2.0, and thus should stick to this behavior for 3.0, until 
we understand ramifications for our client (package explorer seems ok, but 
what about others?). 

Should release early post 3.0.
Reopening for inclusion in 3.1
Could be backported to 3.0.1 (unsure yet)
Released fix and tests in R3_0_maintenance and HEAD.
The fact that this fix brokes the all types cache (see bug 72388) is IMO a 
clear indication that we shouldn't put the fix into the maintenance build. It 
might break other clients as well. So I opt to remove the fix from the 3.0.1 
stream. Comments ?
Will revert this change in R3_0_maintance only.
Change reverted in R3_0_maintenance only. Changing target milestone to 3.1 M1.</WithStack>
    <WithOutStack>I20040529

Closing a project shows the following Java delta:
Java Model[*]: {CHILDREN | CONTENT}
   Test[-]: {}
   ResourceDelta(/Test)[*]

It should show:
Java Model[*]: {CHILDREN | CONTENT}
   Test[*]: {CLOSED}
   ResourceDelta(/Test)[*]

The F_CLOSED flag is not set.
Same problem for the F_OPENED flag.
Problem was identified investigating bug 64887 which is targeted at 3.0 RC2.
Created attachment 11649
Proposed patch

Changed DeltaProcessor to create a CHANGED delta with F_CLOSED/F_OPENED flag
set if the project is closed/opened. Changed TypeHierarchy delta processing to
handle this flag.
Created attachment 11650
Updated tests

Changed JavaElementDeltaTests and JavaProjectTests to reflect this change.
Philippe should this be fixed for 3.0, or 3.1 ?
I think it is late in the game to perform such a change. We have been living 
with the bug since 2.0, and thus should stick to this behavior for 3.0, until 
we understand ramifications for our client (package explorer seems ok, but 
what about others?). 

Should release early post 3.0.
Reopening for inclusion in 3.1
Could be backported to 3.0.1 (unsure yet)
Released fix and tests in R3_0_maintenance and HEAD.
The fact that this fix brokes the all types cache (see bug 72388) is IMO a 
clear indication that we shouldn't put the fix into the maintenance build. It 
might break other clients as well. So I opt to remove the fix from the 3.0.1 
stream. Comments ?
Will revert this change in R3_0_maintance only.
Change reverted in R3_0_maintenance only. Changing target milestone to 3.1 M1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65944" />
    <CreationDate amount="2004-06-07 07:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>"Clean selected projects" should use last selection as default</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From a usability perspective if I select a project and then select
Project/Clean... from the menu I would expect to be the option "Clean selected
projects" selected as default.
We will not be changing the defaults
I don't want to be annoying, but I don't understand the decision that this won't
be changed.
The observations I made from how my colleagues and I were using this function
show exactly the opposite: To about 100% of all cases we had to select "Clean
selected projects" instead of "Clean all projects".

Could you please at least explain to me, why this won't be changed?
Perhaps then I can understand the decision better.

Thanks,
Andreas.

I was going to open a bug report on this same issue. I am also curious what the
reasoning is behind the current default. It's confusing to me because the other
items in the "Project" menu pertain to the selected project. I have personally
never used "Clean all projects" either.

Same for me and all of my coworkers. It's annoying to always have to click the 
project in an additional step. Nobody wants to clean all projects (by 
default) ...
I actually do the opposite - I only clean when I turned off autobuild becuase 
of a large refactoring so clearly there is a usecase for both.

I think the compormise is that the dialog should remember your last selection 
and make that the default next time.
Also, should detect project more intelligently, from currently selected project
resource(java or any other file). Now I must click on project name in navigator
or package explorer. Because I must clean often it is quite annoying now :(  
Re comment #6: I believe you are mistaken.  The clean dialog takes its selection
from the selection service's active selection. If this is not available, it
checks if the active part is an editor, and if so derives the selection from the
editor's input.  I.e., select project A in Package Explorer, and then select an
editor on a file in project B.  The clean dialog's default selection will be
project B.

Your comment is correct for the "Build Project" action, for which bug 77871 has
been entered.
Sorry, I didn't give correct details. Detecting project works if selection is in
editor and navigator. But doesn't work if selection is for example in Java
outline view etc.
The navigator set the selection in the selection service but the Outline view 
does not so the navigator/package explorer selection will take precendence.
"I only clean when I turned off autobuild because of a large refactoring so 
clearly there is a usecase for both."

I'm curious - why don't you just use "Build All"?
(In reply to comment #5)
&gt; I think the compormise is that the dialog should remember your last 
selection 
&gt; and make that the default next time.
I have implemented this comprimise

Changes to CleanDialog to use dialog settings to persist the user 
customization of the "session" with the dialog.
Size, location and when to build all of clean selected is remembered.
Please verify John.
Verified.  I made one small change.  The "Build immediately" checkbox default
value changed to "false", since when there is no saved dialog settings,
IDialogSettings.getBoolean() returns false by default.  I changed this to use
IDialogSettings.get(), and then set the selection to "true" when there is no
saved value. This preserves the old behaviour.

While testing I got an invalid thread access exception, because
CleanDialog.buttonPressed called GlobalBuildAction.run() from a job, and this
can prompt the user in some cases.  I changed this call to
GlobalBuildAction.doBuild(), which doesn't prompt the user.
Comment #13 should have gone into bug 61838 (very similar bug).</WithStack>
    <WithOutStack>From a usability perspective if I select a project and then select
Project/Clean... from the menu I would expect to be the option "Clean selected
projects" selected as default.
We will not be changing the defaults
I don't want to be annoying, but I don't understand the decision that this won't
be changed.
The observations I made from how my colleagues and I were using this function
show exactly the opposite: To about 100% of all cases we had to select "Clean
selected projects" instead of "Clean all projects".

Could you please at least explain to me, why this won't be changed?
Perhaps then I can understand the decision better.

Thanks,
Andreas.

I was going to open a bug report on this same issue. I am also curious what the
reasoning is behind the current default. It's confusing to me because the other
items in the "Project" menu pertain to the selected project. I have personally
never used "Clean all projects" either.

Same for me and all of my coworkers. It's annoying to always have to click the 
project in an additional step. Nobody wants to clean all projects (by 
default) ...
I actually do the opposite - I only clean when I turned off autobuild becuase 
of a large refactoring so clearly there is a usecase for both.

I think the compormise is that the dialog should remember your last selection 
and make that the default next time.
Also, should detect project more intelligently, from currently selected project
resource(java or any other file). Now I must click on project name in navigator
or package explorer. Because I must clean often it is quite annoying now :(  
Re comment #6: I believe you are mistaken.  The clean dialog takes its selection
from the selection service's active selection. If this is not available, it
checks if the active part is an editor, and if so derives the selection from the
editor's input.  I.e., select project A in Package Explorer, and then select an
editor on a file in project B.  The clean dialog's default selection will be
project B.

Your comment is correct for the "Build Project" action, for which bug 77871 has
been entered.
Sorry, I didn't give correct details. Detecting project works if selection is in
editor and navigator. But doesn't work if selection is for example in Java
outline view etc.
The navigator set the selection in the selection service but the Outline view 
does not so the navigator/package explorer selection will take precendence.
"I only clean when I turned off autobuild because of a large refactoring so 
clearly there is a usecase for both."

I'm curious - why don't you just use "Build All"?
(In reply to comment #5)
&gt; I think the compormise is that the dialog should remember your last 
selection 
&gt; and make that the default next time.
I have implemented this comprimise

Changes to CleanDialog to use dialog settings to persist the user 
customization of the "session" with the dialog.
Size, location and when to build all of clean selected is remembered.
Please verify John.
Verified.  I made one small change.  The "Build immediately" checkbox default
value changed to "false", since when there is no saved dialog settings,
IDialogSettings.getBoolean() returns false by default.  I changed this to use
IDialogSettings.get(), and then set the selection to "true" when there is no
saved value. This preserves the old behaviour.

While testing I got an invalid thread access exception, because
CleanDialog.buttonPressed called GlobalBuildAction.run() from a job, and this
can prompt the user in some cases.  I changed this call to
GlobalBuildAction.doBuild(), which doesn't prompt the user.
Comment #13 should have gone into bug 61838 (very similar bug).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65945" />
    <CreationDate amount="2004-06-07 07:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Platform ignores setting of OS locale settings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="import">
        <location start="236" end="261" />
        <code>import java.util.Locale;</code>
      </source_code>
      <source_code type="class">
        <location start="263" end="376" />
        <code>public class Test {
  public static void main(String[] args) {
    System.out.println(Locale.getDefault());
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- in the Windows control panel set the language to be English (United Kingdom)</Line>
          <Line>- run the sample program from the command-line</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- start Eclipse</Line>
          <Line>- notice that the Target Environment says nl=en_GB</Line>
          <Line>- create a new Java project and run the sample program as a java app.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Using Eclipse 3.0 RC1, build 200405290105.
Windows 2000 regional settings are configured for United Kingdom. I ran the
following test program at the command line and got "en_GB". I ran it again in
Eclipse and got "en_US" as the output.

import java.util.Locale;

public class Test {
  public static void main(String[] args) {
    System.out.println(Locale.getDefault());
  }
}

I added "-nl en_GB" to the eclipse.exe shortcut, restarted the platform and ran
it again. I still got "en_US".
The -nl command-line arg is for the instance of Eclipse that you are running. If
you run Eclipse with "-nl en_GB" and then go into your prefs (Window -&gt;
Preferences -&gt; Plug-in Development -&gt; Target Environment) it will show that you
are running in en_GB.

When you launch a test program from within Eclipse, you are using a separate VM
and the program is getting the Locale information from the operating system.

If you set up a launch configuration for a runtime workbench and use the -nl
arg, then you will get the correct values in your test workbench.
It seems I didn't make myself clear enough on the initial report, and the -nl
might be a red herring.

If I run the test program on the command line, the result is "en_GB".
If I run the test program in Eclipse, using the same VM, the result is "en_US".

It's not a plug-in, just a Java Application. We're trying to get the correct
locale (as configured in Windows Regional Settings and recognised by the
command-line JVM) when running our program in Eclipse. It seems something in
Eclipse is overriding the OS setting, which is not as per DJ's comment.
Here are the exact steps to reproduce (build i0610-1200):

- in the Windows control panel set the language to be English (United Kingdom)
- run the sample program from the command-line

    -&gt; output is en_GB

- start Eclipse
- notice that the Target Environment says nl=en_GB
- create a new Java project and run the sample program as a java app.

   -&gt; output is en_US

I have no idea where to start on this one. Adding Jeff and Darin for insight.
This works for me on XP, may be a Win2000 problem. I don't even have to 
restart Eclipse - I can change it in the control panel and run the program 
iteratively getting the correct/current locale setting.
works for me on Mac OS (v 10.3.4)
It appears the program picks up the NL setting from the OS, not matter what 
Eclipse was launched with.

I don't think there is anything to be done here.
Locale picks up the settings from the VM (which gets them from the OS by default). You can set locale 
with the system properties user.language and user.country. Adding "-Duser.country=ES 
-Duser.language=FR" to the VM arguements of my launch config gave me the (bizarre but) correct 
output of fr_ES. 
Note that VM args can be set on the Installed JRE's Preference Page if you always want to run VM's with 
a locale different from your OS. 
Sorry but is -nl really being ignored?
-nl is not being ignored. It launches the workbench with that NL setting. 
However, the NL of your host workbench does not determine the NL of your 
target workbench (unless you specify it explicitly). The default NL setting 
comes from the OS (this just appears to be a "java" thing).
As well, setting the NL of Eclipse, does not determine the NL of target 
processes - the NL setting comes from the OS unless specified as a system 
property.
I've changed the description since it was confusing everyone.
This bug has nothing to do with the -nl setting, that was a red herring (as
pointed out by DJ Houghton). It's also not a Host/Target workbench issue.

For me, Eclipse is NOT picking up the locale from the VM/OS settings when
running a Java application, but overriding with "en_US". See comment #3 for
exact steps to reproduce.
(And you using Win2000? can you try XP to see if it works there? I think this 
may be a Win2000 bug).
and, what VM are you using (exact version)?
Behavior appears to be VM specific. Using the IBM VM, we pick up the default 
locale from the OS. Using the Sun VM, the default locale appears to be en_US 
no matter what the OS setting is.
There's nothing we can do to fix this. It appears to be a VM bug/issue. There 
is a bug in the Sun Bug Parade database that confirms this: 4989534.
The Sun VM bug mentioned does not apply.
I'm using Sun J2SDK 1.4.2_04 on Win2K.
When running the test program from the console in the above VM, the locale is
correctly detected. When running the test program from Eclipse using the SAME
VM, the locale is incorrectly set to en_US.
Sun Bug Parade issue 4989534 was reported on tiger-beta, i.e. 1.5.0 beta 1.
See the related bug: 4854349 for 1.4.2 

FULL PRODUCT VERSION :
java version "1.4.2-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-beta-b19)
Java HotSpot(TM) Client VM (build 1.4.2-beta-b19, mixed mode)

Since it works for IBM VM, and not Sun, and we do not pass in anything 
different, I fail to see how this is an Eclipse bug. 
Further investigation points to javaw.exe being the culprit. Eclipse 
uses "javaw" to launch by default. These launches result in the described in 
comment #3. Changing the launch config to use "java" instead of "javaw" 
results in the same behavior that you see from the command line.

To use java... Open your launch configuration (Run/Run.../[select your 
config]), go to the JRE tab, choose "Alternate JRE" radio button, then in 
the "Java executable" group, select "Alternate" and specify "java".
*Of course if isn't on your PATH you'll need to provide the full path to 
java.exe.</WithStack>
    <WithOutStack>Using Eclipse 3.0 RC1, build 200405290105.
Windows 2000 regional settings are configured for United Kingdom. I ran the
following test program at the command line and got "en_GB". I ran it again in
Eclipse and got "en_US" as the output.

import java.util.Locale;

public class Test {
  public static void main(String[] args) {
    System.out.println(Locale.getDefault());
  }
}

I added "-nl en_GB" to the eclipse.exe shortcut, restarted the platform and ran
it again. I still got "en_US".
The -nl command-line arg is for the instance of Eclipse that you are running. If
you run Eclipse with "-nl en_GB" and then go into your prefs (Window -&gt;
Preferences -&gt; Plug-in Development -&gt; Target Environment) it will show that you
are running in en_GB.

When you launch a test program from within Eclipse, you are using a separate VM
and the program is getting the Locale information from the operating system.

If you set up a launch configuration for a runtime workbench and use the -nl
arg, then you will get the correct values in your test workbench.
It seems I didn't make myself clear enough on the initial report, and the -nl
might be a red herring.

If I run the test program on the command line, the result is "en_GB".
If I run the test program in Eclipse, using the same VM, the result is "en_US".

It's not a plug-in, just a Java Application. We're trying to get the correct
locale (as configured in Windows Regional Settings and recognised by the
command-line JVM) when running our program in Eclipse. It seems something in
Eclipse is overriding the OS setting, which is not as per DJ's comment.
Here are the exact steps to reproduce (build i0610-1200):

- in the Windows control panel set the language to be English (United Kingdom)
- run the sample program from the command-line

    -&gt; output is en_GB

- start Eclipse
- notice that the Target Environment says nl=en_GB
- create a new Java project and run the sample program as a java app.

   -&gt; output is en_US

I have no idea where to start on this one. Adding Jeff and Darin for insight.
This works for me on XP, may be a Win2000 problem. I don't even have to 
restart Eclipse - I can change it in the control panel and run the program 
iteratively getting the correct/current locale setting.
works for me on Mac OS (v 10.3.4)
It appears the program picks up the NL setting from the OS, not matter what 
Eclipse was launched with.

I don't think there is anything to be done here.
Locale picks up the settings from the VM (which gets them from the OS by default). You can set locale 
with the system properties user.language and user.country. Adding "-Duser.country=ES 
-Duser.language=FR" to the VM arguements of my launch config gave me the (bizarre but) correct 
output of fr_ES. 
Note that VM args can be set on the Installed JRE's Preference Page if you always want to run VM's with 
a locale different from your OS. 
Sorry but is -nl really being ignored?
-nl is not being ignored. It launches the workbench with that NL setting. 
However, the NL of your host workbench does not determine the NL of your 
target workbench (unless you specify it explicitly). The default NL setting 
comes from the OS (this just appears to be a "java" thing).
As well, setting the NL of Eclipse, does not determine the NL of target 
processes - the NL setting comes from the OS unless specified as a system 
property.
I've changed the description since it was confusing everyone.
This bug has nothing to do with the -nl setting, that was a red herring (as
pointed out by DJ Houghton). It's also not a Host/Target workbench issue.

For me, Eclipse is NOT picking up the locale from the VM/OS settings when
running a Java application, but overriding with "en_US". See comment #3 for
exact steps to reproduce.
(And you using Win2000? can you try XP to see if it works there? I think this 
may be a Win2000 bug).
and, what VM are you using (exact version)?
Behavior appears to be VM specific. Using the IBM VM, we pick up the default 
locale from the OS. Using the Sun VM, the default locale appears to be en_US 
no matter what the OS setting is.
There's nothing we can do to fix this. It appears to be a VM bug/issue. There 
is a bug in the Sun Bug Parade database that confirms this: 4989534.
The Sun VM bug mentioned does not apply.
I'm using Sun J2SDK 1.4.2_04 on Win2K.
When running the test program from the console in the above VM, the locale is
correctly detected. When running the test program from Eclipse using the SAME
VM, the locale is incorrectly set to en_US.
Sun Bug Parade issue 4989534 was reported on tiger-beta, i.e. 1.5.0 beta 1.
See the related bug: 4854349 for 1.4.2 

FULL PRODUCT VERSION :
java version "1.4.2-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-beta-b19)
Java HotSpot(TM) Client VM (build 1.4.2-beta-b19, mixed mode)

Since it works for IBM VM, and not Sun, and we do not pass in anything 
different, I fail to see how this is an Eclipse bug. 
Further investigation points to javaw.exe being the culprit. Eclipse 
uses "javaw" to launch by default. These launches result in the described in 
comment #3. Changing the launch config to use "java" instead of "javaw" 
results in the same behavior that you see from the command line.

To use java... Open your launch configuration (Run/Run.../[select your 
config]), go to the JRE tab, choose "Alternate JRE" radio button, then in 
the "Java executable" group, select "Alternate" and specify "java".
*Of course if isn't on your PATH you'll need to provide the full path to 
java.exe.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65946" />
    <CreationDate amount="2004-06-07 07:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Replacement for deprecated ViewForm RGB constants?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The three public RGB constants borderInsideRGB, borderMiddleRGB, and borderOutsideRGB are 
deprecated (since when?) but no replacement is given.
I think they are not used anymore in by the implementation.
But the Compare plugin uses them.
So what should I use now?
What does the Compare plugin use them for?

They were deprecated for 3.0.  The ViewForm now only draws a single line and 
it uses the colour SWT.COLOR_WIDGET_NORMAL_SHADOW.  A selection border can 
also be drawn and uses the colour SWT.COLOR_LIST_BACKGROUND.  Colours 
specified by the graphic artist.
OK, I'm using the SWT.COLOR_WIDGET_NORMAL_SHADOW now.

Can be closed.
Andre is now using SWT.COLOR_WIDGET_NORMAL_SHADOW and no change will be made 
to ViewForm.</WithStack>
    <WithOutStack>The three public RGB constants borderInsideRGB, borderMiddleRGB, and borderOutsideRGB are 
deprecated (since when?) but no replacement is given.
I think they are not used anymore in by the implementation.
But the Compare plugin uses them.
So what should I use now?
What does the Compare plugin use them for?

They were deprecated for 3.0.  The ViewForm now only draws a single line and 
it uses the colour SWT.COLOR_WIDGET_NORMAL_SHADOW.  A selection border can 
also be drawn and uses the colour SWT.COLOR_LIST_BACKGROUND.  Colours 
specified by the graphic artist.
OK, I'm using the SWT.COLOR_WIDGET_NORMAL_SHADOW now.

Can be closed.
Andre is now using SWT.COLOR_WIDGET_NORMAL_SHADOW and no change will be made 
to ViewForm.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65947" />
    <CreationDate amount="2004-06-07 07:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SWT Carbon makefile still uses JNI 1.3.1 headers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>For 3.0 SWT requires Java 1.4.1.
However, the Carbon makefile still uses the JNI 1.3.1 headers.

I suggest to use the path
      /System/Library/Frameworks/JavaVM.framework/Headers
instead of 
      /System/Library/Frameworks/JavaVM.framework/Versions/1.3.1/Headers 

The former automatically uses the headers for the default Java VM installed on the platform.
See attached patch.
Created attachment 11651
patch for make_carbon.mak
Seems like we should just do this.
After I applied the patch I could not compile the code anymore. There is something fun with my 
machine, the file /System/Library/Frameworks/JavaVM.framework/Headers/jni.h exists, but it is a link 
and if I doubleclick in the Finder, I cannot open it either. I believe that was why I pointed to 1.3.1 in the 
past. Andre, are you able to compile? Do have any idea of what might be wrong with my machine? I 
believe Vikki had the same probem.

        [exec] In file included from swt.c:12:
        [exec] swt.h:23:17: jni.h: No such file or directory
        [exec] make: *** [swt.o] Error 1
        [exec] Result: 2
It seems that the JDK1.4.2 install does not have the Headers subdir on my machine. I am not sure this 
was a problem in the update or what else. Anyway, I released the changes.
verified for I200406110010</WithStack>
    <WithOutStack>For 3.0 SWT requires Java 1.4.1.
However, the Carbon makefile still uses the JNI 1.3.1 headers.

I suggest to use the path
      /System/Library/Frameworks/JavaVM.framework/Headers
instead of 
      /System/Library/Frameworks/JavaVM.framework/Versions/1.3.1/Headers 

The former automatically uses the headers for the default Java VM installed on the platform.
See attached patch.
Created attachment 11651
patch for make_carbon.mak
Seems like we should just do this.
After I applied the patch I could not compile the code anymore. There is something fun with my 
machine, the file /System/Library/Frameworks/JavaVM.framework/Headers/jni.h exists, but it is a link 
and if I doubleclick in the Finder, I cannot open it either. I believe that was why I pointed to 1.3.1 in the 
past. Andre, are you able to compile? Do have any idea of what might be wrong with my machine? I 
believe Vikki had the same probem.

        [exec] In file included from swt.c:12:
        [exec] swt.h:23:17: jni.h: No such file or directory
        [exec] make: *** [swt.o] Error 1
        [exec] Result: 2
It seems that the JDK1.4.2 install does not have the Headers subdir on my machine. I am not sure this 
was a problem in the update or what else. Anyway, I released the changes.
verified for I200406110010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65948" />
    <CreationDate amount="2004-06-07 07:52:00 -0400" />
    <DupId amount="66271" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CodeSelect - CodeSelect does not work for duplicate field declaration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="43" end="81" />
        <code>public class {
  int bar;
  int bar;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) create the following class</Line>
          <Line />
          <Line>2) select the first 'bar' fied</Line>
          <Line>3) do F3</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build 3.0RC1
1) create the following class
public class {
  int bar;
  int bar;
}
2) select the first 'bar' fied
3) do F3

codeselect does not work. (same result with the second field)
Would this work with your latest changes for selecting declarations ?
this will work with the proposed patch for bug 66271.


*** This bug has been marked as a duplicate of 66271 ***</WithStack>
    <WithOutStack>build 3.0RC1
1) create the following class
public class {
  int bar;
  int bar;
}
2) select the first 'bar' fied
3) do F3

codeselect does not work. (same result with the second field)
Would this work with your latest changes for selecting declarations ?
this will work with the proposed patch for bug 66271.


*** This bug has been marked as a duplicate of 66271 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65949" />
    <CreationDate amount="2004-06-07 08:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[typing] Spaces Only mode: Paste of commented code with wrong indentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="1609" end="1644" />
        <code>System.out.println("test");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1645" end="1680" />
        <code>System.out.println("test");</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1749" end="1788" />
        <code>//        System.out.println("test");</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1788" end="1826" />
        <code>//        System.out.println("test");</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1937" end="1974" />
        <code>//      System.out.println("test");</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1974" end="2010" />
        <code>//      System.out.println("test");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. In a method (that is indented) insert these 2 lines:</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>2. Comment them (e.g. Source &gt; Toggle comment). Result is correct:</Line>
          <Line />
          <Line>3. Select those 2 lines (e.g. with mouse), copy (CTRL+C), and insert them 2 lines below, the wrong result is:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I have 2 editors open. Copy one method from one editor to the others creates 
the correct indentaion in the second editor. But when i first comment the 
method, than select and copy it and then paste it in the second editor, the 
pasted code misses 2 spaces between "//" and the code start (for each line).

why i do this? well i often comment methods that i don't need in this class but 
still may handy. when i found the place to copy it to, i just copy&amp;paste the 
comment code and uncomment it in the destination editor. with the wrong paste 
as described above.
*** Bug 66180 has been marked as a duplicate of this bug. ***
Also see bug 66180 for another detailed case.
even with Eclipse 3.0, when i copy a comment (that was indented) and paste this 
in a new line where the cursor is correctly is indented in a method (8 spaces), 
when i press STRG+V (for paste), the resulting comment slashes (//) start at the 
beginning of the line (column 0) and the comment text starts 8 spaces later ...
This is a duplicate of bug 65841; could someone mark it as such?
This still occurs in 3.0.1
Sure, the bug is till open ==&gt; not fixed.
Re comment 4: it's not quite the same problem: in bug 65841 spaces are added -
we try to treat it as commented code (spaces are added). In this bug the spaces
somehow got lost, the code gets reformatted.
M.H. can you confirm that the bug reported in comment 0 and comment 4 differ? Comment 3 is indeed a duplicate of bug 65841.
I guess it's another bug. Here's how you can reproduced the bug I described in comment #0:

1. In a method (that is indented) insert these 2 lines:

        System.out.println("test");
        System.out.println("test");

2. Comment them (e.g. Source &gt; Toggle comment). Result is correct:

//        System.out.println("test");
//        System.out.println("test");

3. Select those 2 lines (e.g. with mouse), copy (CTRL+C), and insert them 2 lines below, the wrong result is:

//      System.out.println("test");
//      System.out.println("test");

because 2 spaces are suddenly removed after each "//".
Works for me using I20091103-0941.
To reproduce comment 9 in HEAD, the code formatter's "Tab Policy" must be set to "Spaces only", and "Java &gt; Editor &gt; Typing &gt; When pasting &gt; Adjust indentation" must be turned on.

I think the right fix for this would be to fix the Toggle Comment command: If a line starts with more than two spaces, then don't just prepend "//", but replace the first two spaces by "//".
The proposed solution in comment #11 looks wrong to me, since it means that commented code that did not move has 2 additional spaces indented compared to commented code that was moved.

In my view all commented code should have the same amount of indenting.

Two additional spaces would probably be easiest, as manually prefixing a line with "//" (in column 0) would then also have the same result. However, I can imagine that some people prefer not having additional white space in commented code.
Perhaps when moving/copying a block of commented code, uncomment it, move/copy, and add comments again?
That should give consistent results in every case.
Yes, that's the workaround for me. BUt it's a workaround that involves more clicks than necessary. Toggle comments should be very simple: add 2 slashes and remove 2 slashes - each time at the beginning of the lines no matter if the line starts with spaces or not.</WithStack>
    <WithOutStack>I have 2 editors open. Copy one method from one editor to the others creates 
the correct indentaion in the second editor. But when i first comment the 
method, than select and copy it and then paste it in the second editor, the 
pasted code misses 2 spaces between "//" and the code start (for each line).

why i do this? well i often comment methods that i don't need in this class but 
still may handy. when i found the place to copy it to, i just copy&amp;paste the 
comment code and uncomment it in the destination editor. with the wrong paste 
as described above.
*** Bug 66180 has been marked as a duplicate of this bug. ***
Also see bug 66180 for another detailed case.
even with Eclipse 3.0, when i copy a comment (that was indented) and paste this 
in a new line where the cursor is correctly is indented in a method (8 spaces), 
when i press STRG+V (for paste), the resulting comment slashes (//) start at the 
beginning of the line (column 0) and the comment text starts 8 spaces later ...
This is a duplicate of bug 65841; could someone mark it as such?
This still occurs in 3.0.1
Sure, the bug is till open ==&gt; not fixed.
Re comment 4: it's not quite the same problem: in bug 65841 spaces are added -
we try to treat it as commented code (spaces are added). In this bug the spaces
somehow got lost, the code gets reformatted.
M.H. can you confirm that the bug reported in comment 0 and comment 4 differ? Comment 3 is indeed a duplicate of bug 65841.
I guess it's another bug. Here's how you can reproduced the bug I described in comment #0:

1. In a method (that is indented) insert these 2 lines:

        System.out.println("test");
        System.out.println("test");

2. Comment them (e.g. Source &gt; Toggle comment). Result is correct:

//        System.out.println("test");
//        System.out.println("test");

3. Select those 2 lines (e.g. with mouse), copy (CTRL+C), and insert them 2 lines below, the wrong result is:

//      System.out.println("test");
//      System.out.println("test");

because 2 spaces are suddenly removed after each "//".
Works for me using I20091103-0941.
To reproduce comment 9 in HEAD, the code formatter's "Tab Policy" must be set to "Spaces only", and "Java &gt; Editor &gt; Typing &gt; When pasting &gt; Adjust indentation" must be turned on.

I think the right fix for this would be to fix the Toggle Comment command: If a line starts with more than two spaces, then don't just prepend "//", but replace the first two spaces by "//".
The proposed solution in comment #11 looks wrong to me, since it means that commented code that did not move has 2 additional spaces indented compared to commented code that was moved.

In my view all commented code should have the same amount of indenting.

Two additional spaces would probably be easiest, as manually prefixing a line with "//" (in column 0) would then also have the same result. However, I can imagine that some people prefer not having additional white space in commented code.
Perhaps when moving/copying a block of commented code, uncomment it, move/copy, and add comments again?
That should give consistent results in every case.
Yes, that's the workaround for me. BUt it's a workaround that involves more clicks than necessary. Toggle comments should be very simple: add 2 slashes and remove 2 slashes - each time at the beginning of the lines no matter if the line starts with spaces or not.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65950" />
    <CreationDate amount="2004-06-07 08:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>UIJob should check cancellation more</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>RC1

We should check cancellation before we start an asyncExec and before we call 
runInUIThread.
RC2 Candidate
Fixed for build &gt;20040607</WithStack>
    <WithOutStack>RC1

We should check cancellation before we start an asyncExec and before we call 
runInUIThread.
RC2 Candidate
Fixed for build &gt;20040607</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65951" />
    <CreationDate amount="2004-06-07 08:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>IProgressService.run should use a singleton job to open the progress dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>IProgressService.run should use a singleton job to open the progress dialog 
as it can happen quite a bit.
RC2 candidate
Deferred
Bug 64937 makes this less of an issue although we are not using a singleton 
job as it now opens on a callback.

marking as WONTFIX</WithStack>
    <WithOutStack>IProgressService.run should use a singleton job to open the progress dialog 
as it can happen quite a bit.
RC2 candidate
Deferred
Bug 64937 makes this less of an issue although we are not using a singleton 
job as it now opens on a callback.

marking as WONTFIX</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65952" />
    <CreationDate amount="2004-06-07 08:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Commit Sets] are useless for outgoing changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Group by commit sets or not (on top level)</Line>
          <Line>2. How to show resources in commit sets (or on top level, if commit sets are</Line>
          <Line>disabled): compressed tree, tree, flat</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Commit Sets are very good when I look at incoming changes, but for outgoing
changes it displays files plain list, instead of folders. Would be good to fix
this and be able to configure separately incoming and outgoing layouts.
Agreed, didn't have time in 3.0. In some cases I don't mind looking at outgoing
as a list, and if there are too many changes, I simply switch to another layout.
And one more addition about CVS layouts. I like commit sets, but inside of them
files are placed in "flat" mode. If there are much files in this commit set, it
is hard to understand what was changed. I would like to have "Commit sets with
compressed folders" layout, or may be just option for using commit sets with
compressed folders or not.
*** Bug 69111 has been marked as a duplicate of this bug. ***
*** Bug 69496 has been marked as a duplicate of this bug. ***
I am currently in the process of implementing outgoing commit sets. This will 
allow the user to create commit sets and group their outgoing changes 
logically by the feature or bug the file changes are associated with. They 
will also be able to sepcify the comment that should be used when the set is 
committed.
To be honest, I don't think that will be helpful (to me at least).  If I have 
enough to 'assemble and label a commit set', I'll commit it and be done with 
it. 
 
I'd much rather have seperate mode settings for ingoing and outgoing changes. 
Seconded. And as I already said in Bug 69111:

"Perhaps the commit sets layout actually should be an option in parallel to the 
other two layouts. That is, I want to choose wether I have a tree- or 
compressed folders layout, and *additionally* be able to toggle showing commit 
sets. A commit set would be the top level node and would then have it's content 
shown in a tree/compressed folders structure (you could also provide a "flat" 
layout, if you like, of course)."

Exactly!
For incoming changes I would like to have two separate options:
1. Group by commit sets or not (on top level)
2. How to show resources in commit sets (or on top level, if commit sets are
disabled): compressed tree, tree, flat

For outgoing changes commit sets are not required. As someone already told here,
we create outgoing commit set just by fact of commiting some set of resources
with some comment. I don't think that preparing outgoing commit sets just to
commit them later is very useful...

And again, please allow to configure incoming and outgoing views separately. For
'both' and 'conflicts' we could also have separate configurations, most probably
also without commit sets, but these point of view are not so important
personally for me.
All the previous comments are being considered. We are adding outgoing commit 
sets because, although not all people may find the useful, some will 
(including myself). We are doing it first because it is far simpler from an 
implementation standpoint. When I have completed the outgoing commit set work, 
I will leave this bug open until all comments have been addressed.
The initial pass at this has been released to HEAD. Basically, as suggested in 
comment 7, the commit set layout is enabled/disabled on the toolbar and uses 
the active layout to arrange child nodes. In outgoing mode, commit sets will 
not appear unless outgoing commit sets have been defined or there are conflicts
(which should satisfy the request in comment 8).

Pleae note that this feature will not be in tomorrows integration build to 
give us a week of self-hosting on it before it goes live.
*** Bug 73484 has been marked as a duplicate of this bug. ***
*** Bug 74554 has been marked as a duplicate of this bug. ***
verified - good work michael! 
It doesn't appear (from the comments) to me that the original complaint has been
addressed by your fix, yet the bug is now VERIFIED FIX.  
Have you tried it out yet? If not, please do so and then you can make comments 
about how it works now. The original complaint was not addressed in the manner 
requested in comment #1. However, if the user does not define any outgoing 
commit sets, then outgoing mode will use whatever layout is chosen by the user 
(Flat, Tree or Compressed Folder). In light of this, having the ability to 
specify different layouts for the modes may not be required.


We talked about having different layouts for each mode but found that a better
solution is to support composite layouts instead. The configuration of layouts
per mode is too complex for the user to manage. Our solution does address the
initial problem - we just didn't use the same solution as he proposed. For
outgoing changes in commit set mode you are no longer forced to see them in flat
mode, commit set isn't a layout but another mode and you can selected any of the
flat, compressed, hierarchical, layouts when using commit sets.</WithStack>
    <WithOutStack>Commit Sets are very good when I look at incoming changes, but for outgoing
changes it displays files plain list, instead of folders. Would be good to fix
this and be able to configure separately incoming and outgoing layouts.
Agreed, didn't have time in 3.0. In some cases I don't mind looking at outgoing
as a list, and if there are too many changes, I simply switch to another layout.
And one more addition about CVS layouts. I like commit sets, but inside of them
files are placed in "flat" mode. If there are much files in this commit set, it
is hard to understand what was changed. I would like to have "Commit sets with
compressed folders" layout, or may be just option for using commit sets with
compressed folders or not.
*** Bug 69111 has been marked as a duplicate of this bug. ***
*** Bug 69496 has been marked as a duplicate of this bug. ***
I am currently in the process of implementing outgoing commit sets. This will 
allow the user to create commit sets and group their outgoing changes 
logically by the feature or bug the file changes are associated with. They 
will also be able to sepcify the comment that should be used when the set is 
committed.
To be honest, I don't think that will be helpful (to me at least).  If I have 
enough to 'assemble and label a commit set', I'll commit it and be done with 
it. 
 
I'd much rather have seperate mode settings for ingoing and outgoing changes. 
Seconded. And as I already said in Bug 69111:

"Perhaps the commit sets layout actually should be an option in parallel to the 
other two layouts. That is, I want to choose wether I have a tree- or 
compressed folders layout, and *additionally* be able to toggle showing commit 
sets. A commit set would be the top level node and would then have it's content 
shown in a tree/compressed folders structure (you could also provide a "flat" 
layout, if you like, of course)."

Exactly!
For incoming changes I would like to have two separate options:
1. Group by commit sets or not (on top level)
2. How to show resources in commit sets (or on top level, if commit sets are
disabled): compressed tree, tree, flat

For outgoing changes commit sets are not required. As someone already told here,
we create outgoing commit set just by fact of commiting some set of resources
with some comment. I don't think that preparing outgoing commit sets just to
commit them later is very useful...

And again, please allow to configure incoming and outgoing views separately. For
'both' and 'conflicts' we could also have separate configurations, most probably
also without commit sets, but these point of view are not so important
personally for me.
All the previous comments are being considered. We are adding outgoing commit 
sets because, although not all people may find the useful, some will 
(including myself). We are doing it first because it is far simpler from an 
implementation standpoint. When I have completed the outgoing commit set work, 
I will leave this bug open until all comments have been addressed.
The initial pass at this has been released to HEAD. Basically, as suggested in 
comment 7, the commit set layout is enabled/disabled on the toolbar and uses 
the active layout to arrange child nodes. In outgoing mode, commit sets will 
not appear unless outgoing commit sets have been defined or there are conflicts
(which should satisfy the request in comment 8).

Pleae note that this feature will not be in tomorrows integration build to 
give us a week of self-hosting on it before it goes live.
*** Bug 73484 has been marked as a duplicate of this bug. ***
*** Bug 74554 has been marked as a duplicate of this bug. ***
verified - good work michael! 
It doesn't appear (from the comments) to me that the original complaint has been
addressed by your fix, yet the bug is now VERIFIED FIX.  
Have you tried it out yet? If not, please do so and then you can make comments 
about how it works now. The original complaint was not addressed in the manner 
requested in comment #1. However, if the user does not define any outgoing 
commit sets, then outgoing mode will use whatever layout is chosen by the user 
(Flat, Tree or Compressed Folder). In light of this, having the ability to 
specify different layouts for the modes may not be required.


We talked about having different layouts for each mode but found that a better
solution is to support composite layouts instead. The configuration of layouts
per mode is too complex for the user to manage. Our solution does address the
initial problem - we just didn't use the same solution as he proposed. For
outgoing changes in commit set mode you are no longer forced to see them in flat
mode, commit set isn't a layout but another mode and you can selected any of the
flat, compressed, hierarchical, layouts when using commit sets.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65953" />
    <CreationDate amount="2004-06-07 08:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[1.5] Internal Compiler Error: ArrayIndexOutOfBoundsException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145246">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>22</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:665)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="4">
      <source_code type="singlecomment">
        <location start="0" end="13" />
        <code>//Cheetah 05</code>
      </source_code>
      <source_code type="package">
        <location start="22" end="32" />
        <code>package p;</code>
      </source_code>
      <source_code type="package">
        <location start="68" end="78" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="79" end="121" />
        <code>public class Super&lt;T&gt; implements Top&lt;T&gt;{ }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>//Cheetah 05

=======
package p;
public interface Top&lt;T&gt; {}
=======
package p;
public class Super&lt;T&gt; implements Top&lt;T&gt;{ }

====

On *every other* edit and save get:

java.lang.ArrayIndexOutOfBoundsException: 22
	at
org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:665)
	at ...
    ... at
org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:204)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
	Super.java	Cheetah Trial/uk/ac/york/cs/wood/cheetahtrial/basics	line 0	07 June
2004 12:54:34
Reproduced in latest.
Compiler was misgenerating signatures for generic interfaces. Therefore, it 
was failing to read it back in on incremental compilation scenario.


Fixed. Added regression test: GenericTypeTest#test211
Also added: GenericTypeSignatureTests#test015</WithStack>
    <WithOutStack>//Cheetah 05

=======
package p;
public interface Top&lt;T&gt; {}
=======
package p;
public class Super&lt;T&gt; implements Top&lt;T&gt;{ }

====

On *every other* edit and save get:


	at ...
    ... at
org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:204)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
	Super.java	Cheetah Trial/uk/ac/york/cs/wood/cheetahtrial/basics	line 0	07 June
2004 12:54:34
Reproduced in latest.
Compiler was misgenerating signatures for generic interfaces. Therefore, it 
was failing to read it back in on incremental compilation scenario.


Fixed. Added regression test: GenericTypeTest#test211
Also added: GenericTypeSignatureTests#test015</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65954" />
    <CreationDate amount="2004-06-07 08:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>CVS update for new files causes NullPointerException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145248">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)</Frame>
          <Frame depth="1">java.util.TimeZone.getTimeZone(TimeZone.java:450)</Frame>
          <Frame depth="2">java.util.TimeZone.getTimeZone(TimeZone.java:444)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone(CVSDateFormatter.java:97)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate(CVSDateFormatter.java:42)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle(ModTimeHandler.java:43)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="5">
      <source_code type="multicomment">
        <location start="1940" end="1960" />
        <code>/* Start of code */</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1985" end="2165" />
        <code>if(tz!=null) 
  {
    resultTz.append(tz.substring(1, 3) /*hours*/ + ":" + tz.substring(3, 5)
/*minutes*/);//$NON-NLS-1$
    return TimeZone.getTimeZone(resultTz.toString());
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2166" end="2274" />
        <code>} catch(RuntimeException e) /* Here is the change! */
{
  return TimeZone.getTimeZone("GMT");//$NON-NLS-1$
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2275" end="2293" />
        <code>/* End of code */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3456" end="3500" />
        <code>java.util.TimeZone.getTimeZone("GMT-00:00");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Hi.

I was having pretty fatal problems with eclipse's cvs-support in my Linux-box.
While trying to
update a folder in synchronize-view containing new files(!), I always received
this error:

!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 12:25:27.613
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 12:25:27.614
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
        at java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)
        at java.util.TimeZone.getTimeZone(TimeZone.java:450)
        at java.util.TimeZone.getTimeZone(TimeZone.java:444)
        at
org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone(CVSDateFormatter.java:97)
        at
org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate(CVSDateFormatter.java:42)
        at
org.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle(ModTimeHandler.java:43)

I don't get this bug in windows, but in linux it always occurs, eclipse version
2.1 and 3.0-stream-builds
also contain it. This might have something to do with my environment's locales,
but I tried
to mess around with all sorts of environment-variables and
user.timezone-variable with little success.

My system-configuration is this:

OS: Mandrake 10.0
Java version: 1.4.2_04-b05
Eclipse version: Any version above and including 2.1
user.timezone: Europe/Helsinki
locale settings:
LANG=en_US
LC_CTYPE=en_US
LC_NUMERIC=fi_FI
LC_TIME=en_US
LC_COLLATE=en_US
LC_MONETARY=fi_FI
LC_MESSAGES=en_US
LC_PAPER=fi_FI
LC_NAME=fi_FI
LC_ADDRESS=fi_FI
LC_TELEPHONE=fi_FI
LC_MEASUREMENT=fi_FI
LC_IDENTIFICATION=fi_FI
LC_ALL=
        
I started to look into it, and the problem seemed to be in
CVSDateFormatter-class in 
method:

static private TimeZone getTimeZone(String dateFromServer)

I got some (new-ish) version of this file from CVS:

org/eclipse/team/internal/ccvs/core/util/CVSDateFormatter
Revision 1.15 (Mon Apr 12 19:38:16 2004 UTC)

I played around with the class adding some System.err.printlns and found out the
following

The value of dateFromServer in my case looks like this: 

4 Jun 2004 11:32:57 -0000

And resultTz.toString() value:

GMT-00:00

Now this won't work with TimeZone-class's getTimeZone-method, this produces the
NullPointerException which is the problem:

java.util.TimeZone.getTimeZone("GMT-00:00")

Now, I changed line 99, I changed the abstraction-level of the Exception:

IndexOutOfBoundsException  -&gt; RuntimeException

/* Start of code */
                
try 
{
  if(tz!=null) 
  {
    resultTz.append(tz.substring(1, 3) /*hours*/ + ":" + tz.substring(3, 5)
/*minutes*/);//$NON-NLS-1$
    return TimeZone.getTimeZone(resultTz.toString());
  }
} catch(RuntimeException e) /* Here is the change! */
{
  return TimeZone.getTimeZone("GMT");//$NON-NLS-1$
}

/* End of code */

Now, I'm not sure if this is the right fix for this (timestamps might get messed
up a bit..)
but at least I can now update CVS from synchronize-view. Please let me know if
you find out something more about
this.

-Perttu (perttu.auramo@ekahau.com)
*** Bug 65931 has been marked as a duplicate of this bug. ***
I've tried it out on my windows box and passing "GMT-00:00" to the 
TimeZone.getTimeZone() works fine. What VM are you using? Could you try 
another to see if that is the problem?
Hmm, I had a nagging feeling that it's about the VM version (on a certain 
platform). My VM version is 1.4.2_04: 
 
java version "1.4.2_04" 
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05) 
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode) 
 
It seems to be still the newest for linux(downloaded it from sun and checked). 
I don't feel like downgrading but I might try older versions if I have the 
time (and if I can find older versions somewhere).  
 
-Perttu 
 
I have pinpointed the problem now after some tests on different platforms. Linux
version/locale-settings are irrelevant. The NullPointer always occurs when using
this code:

java.util.TimeZone.getTimeZone("GMT-00:00");

with JDK version 1.4.2_04-b05 on any Linux I've tried it with (SuSE 9.0, Debian
SID, Mandrake 10.0).

Windows version of 1.4.2_04 doesn't crash in NullPointer with the code above.
Neither does JDK 1.4.2_02 on Linux (I haven't tried _03).

This is obviously Sun's bug, but I am too lazy to report it to Sun. My
workaround above works for me (what do you think, should CVSDateFormatter
really be patched that way?), and I can always downgrade to 1.4.2_02. 

-Perttu
Downgrading because of investigation that this is a VM bug. I don't want to
patch our code to workaround a VM bug. Instead I will keep this bug open for
reference.
VM bug.</WithStack>
    <WithOutStack>Hi.

I was having pretty fatal problems with eclipse's cvs-support in my Linux-box.
While trying to
update a folder in synchronize-view containing new files(!), I always received
this error:

!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 12:25:27.613
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 12:25:27.614
!MESSAGE java.lang.NullPointerException
!STACK 0


I don't get this bug in windows, but in linux it always occurs, eclipse version
2.1 and 3.0-stream-builds
also contain it. This might have something to do with my environment's locales,
but I tried
to mess around with all sorts of environment-variables and
user.timezone-variable with little success.

My system-configuration is this:

OS: Mandrake 10.0
Java version: 1.4.2_04-b05
Eclipse version: Any version above and including 2.1
user.timezone: Europe/Helsinki
locale settings:
LANG=en_US
LC_CTYPE=en_US
LC_NUMERIC=fi_FI
LC_TIME=en_US
LC_COLLATE=en_US
LC_MONETARY=fi_FI
LC_MESSAGES=en_US
LC_PAPER=fi_FI
LC_NAME=fi_FI
LC_ADDRESS=fi_FI
LC_TELEPHONE=fi_FI
LC_MEASUREMENT=fi_FI
LC_IDENTIFICATION=fi_FI
LC_ALL=
        
I started to look into it, and the problem seemed to be in
CVSDateFormatter-class in 
method:

static private TimeZone getTimeZone(String dateFromServer)

I got some (new-ish) version of this file from CVS:

org/eclipse/team/internal/ccvs/core/util/CVSDateFormatter
Revision 1.15 (Mon Apr 12 19:38:16 2004 UTC)

I played around with the class adding some System.err.printlns and found out the
following

The value of dateFromServer in my case looks like this: 

4 Jun 2004 11:32:57 -0000

And resultTz.toString() value:

GMT-00:00

Now this won't work with TimeZone-class's getTimeZone-method, this produces the
NullPointerException which is the problem:

java.util.TimeZone.getTimeZone("GMT-00:00")

Now, I changed line 99, I changed the abstraction-level of the Exception:

IndexOutOfBoundsException  -&gt; RuntimeException

/* Start of code */
                
try 
{
  if(tz!=null) 
  {
    resultTz.append(tz.substring(1, 3) /*hours*/ + ":" + tz.substring(3, 5)
/*minutes*/);//$NON-NLS-1$
    return TimeZone.getTimeZone(resultTz.toString());
  }
} catch(RuntimeException e) /* Here is the change! */
{
  return TimeZone.getTimeZone("GMT");//$NON-NLS-1$
}

/* End of code */

Now, I'm not sure if this is the right fix for this (timestamps might get messed
up a bit..)
but at least I can now update CVS from synchronize-view. Please let me know if
you find out something more about
this.

-Perttu (perttu.auramo@ekahau.com)
*** Bug 65931 has been marked as a duplicate of this bug. ***
I've tried it out on my windows box and passing "GMT-00:00" to the 
TimeZone.getTimeZone() works fine. What VM are you using? Could you try 
another to see if that is the problem?
Hmm, I had a nagging feeling that it's about the VM version (on a certain 
platform). My VM version is 1.4.2_04: 
 
java version "1.4.2_04" 
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05) 
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode) 
 
It seems to be still the newest for linux(downloaded it from sun and checked). 
I don't feel like downgrading but I might try older versions if I have the 
time (and if I can find older versions somewhere).  
 
-Perttu 
 
I have pinpointed the problem now after some tests on different platforms. Linux
version/locale-settings are irrelevant. The NullPointer always occurs when using
this code:

java.util.TimeZone.getTimeZone("GMT-00:00");

with JDK version 1.4.2_04-b05 on any Linux I've tried it with (SuSE 9.0, Debian
SID, Mandrake 10.0).

Windows version of 1.4.2_04 doesn't crash in NullPointer with the code above.
Neither does JDK 1.4.2_02 on Linux (I haven't tried _03).

This is obviously Sun's bug, but I am too lazy to report it to Sun. My
workaround above works for me (what do you think, should CVSDateFormatter
really be patched that way?), and I can always downgrade to 1.4.2_02. 

-Perttu
Downgrading because of investigation that this is a VM bug. I don't want to
patch our code to workaround a VM bug. Instead I will keep this bug open for
reference.
VM bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65955" />
    <CreationDate amount="2004-06-07 08:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[key binding] Ctrl+Insert/Shift+Insert and ^C/^V on Windows NT do different things</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="functioncall">
        <location start="111" end="126" />
        <code>void a( B b );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="145" end="156" />
        <code>void b();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="294" end="309" />
        <code>void a( B b );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="360" end="375" />
        <code>void a( B b );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="394" end="405" />
        <code>void b();</code>
      </source_code>
      <source_code type="import">
        <location start="596" end="622" />
        <code>import java.util.HashMap;</code>
      </source_code>
      <source_code type="import">
        <location start="623" end="644" />
        <code>import java.util.Map;</code>
      </source_code>
      <source_code type="class">
        <location start="646" end="743" />
        <code>public class B
{
	public static void main( final String args )
	{
		Map map = new HashMap();
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="774" end="844" />
        <code>public class C
{
	public static void main( final String args )
	{
	}
}</code>
      </source_code>
      <source_code type="import">
        <location start="1001" end="1027" />
        <code>import java.util.HashMap;</code>
      </source_code>
      <source_code type="import">
        <location start="1028" end="1049" />
        <code>import java.util.Map;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="24">
        <Lines>
          <Line>0) Make sure you're on Windows NT</Line>
          <Line />
          <Line>1) Create the following interface</Line>
          <Line />
          <Line>public interface A</Line>
          <Line>{</Line>
          <Line />
          <Line />
          <Line>interface B</Line>
          <Line>{</Line>
          <Line />
          <Line>}</Line>
          <Line>}</Line>
          <Line />
          <Line />
          <Line>2) Fold interface A.B</Line>
          <Line />
          <Line>3) ^A</Line>
          <Line />
          <Line>4) Ctrl+Insert</Line>
          <Line />
          <Line>5) run notepad</Line>
          <Line />
          <Line>6) paste clipboard back to notepad</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="16">
        <Lines>
          <Line>1. create class B in file B.java</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>2. Create class C in C.java</Line>
          <Line />
          <Line />
          <Line />
          <Line>3. Select body of main in B.java (that is select the line Map map = new</Line>
          <Line>HashMap();)</Line>
          <Line />
          <Line>4. Do Ctrl+Insert in B.java</Line>
          <Line />
          <Line>5. Do Shift+Insert in C.java</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- folding</Line>
          <Line>- smart copy/paste (imports)</Line>
          <Line>...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Section A)

Steps:

0) Make sure you're on Windows NT

1) Create the following interface

public interface A
{
	void a( B b );
	
	interface B
	{
		void b();
	}
}


2) Fold interface A.B

3) ^A

4) Ctrl+Insert

5) run notepad

6) paste clipboard back to notepad

Observed:

public interface A
{
	void a( B b );
	
	interface B
}

Expected:

public interface A
{
	void a( B b );
	
	interface B
	{
		void b();
	}
}

Build: 200405280010

Notice, that ^C and mouse menu action Edit/Copy DO copy contents of folded 
section, but Ctrl+Insert does not

Section B)

Steps

1. create class B in file B.java

import java.util.HashMap;
import java.util.Map;

public class B
{
	public static void main( final String args )
	{
		Map map = new HashMap();
	}
}

2. Create class C in C.java

public class C
{
	public static void main( final String args )
	{
	}
}

3. Select body of main in B.java (that is select the line Map map = new 
HashMap();)

4. Do Ctrl+Insert in B.java

5. Do Shift+Insert in C.java

Observed:

import java.util.HashMap;
import java.util.Map;

have not appeared in C.java

Expected:

if in steps 4 and 5 we used ^C / ^V then the imports would have gotten copied
to C.java. I expect exactly the same to happen regardless of wether I press ^C 
or ^Ins, ^V, or Shift+Ins.

Notice:

in the last example all of the following combinations fail to transfer imports:

Ctrl+Ins/Shift+Ins
^C/Shift+Ins
Ctrl+Ins/^V

and on the following one does work

^C/^V
Ctrl+Insert, Shift+Insert, Shift+Delete are not bound to their corresponding
commands.
I am increasing this since many people using Windows use Insert and Delete keys.
If we don't bind them we have problems with
- folding
- smart copy/paste (imports)
...

*** Bug 65791 has been marked as a duplicate of this bug. ***
*** Bug 65325 has been marked as a duplicate of this bug. ***
Fix: Introduce keybindings. Adding Dirk for second vote.
Approved by Dirk &amp; Kai.
Needs to be discussed with Platform UI: they already register those key bindings
for "gtk" and "motif" - why not for win32?
Discussed with Platform UI. We do not want to take the risk to change the key
binding for all of those retargeting cut/copy/paste. For now we will add the key
binding definitions to the text editing context and discuss after 3.0 whether
this should be in the general context (see bug 67651).

There was one minor problem with adding those key bindings: the UI showed those
new key sequences in the context menus instead of Ctrl+X/C/V. This is fixed by
also defining the original key bindings for cut/copy/paste again.
Reviewed by Kai
Fixed in HEAD.
Will be released into I200406171600
Verified in 200406180010.</WithStack>
    <WithOutStack>Section A)

Steps:

0) Make sure you're on Windows NT

1) Create the following interface

public interface A
{
	void a( B b );
	
	interface B
	{
		void b();
	}
}


2) Fold interface A.B

3) ^A

4) Ctrl+Insert

5) run notepad

6) paste clipboard back to notepad

Observed:

public interface A
{
	void a( B b );
	
	interface B
}

Expected:

public interface A
{
	void a( B b );
	
	interface B
	{
		void b();
	}
}

Build: 200405280010

Notice, that ^C and mouse menu action Edit/Copy DO copy contents of folded 
section, but Ctrl+Insert does not

Section B)

Steps

1. create class B in file B.java

import java.util.HashMap;
import java.util.Map;

public class B
{
	public static void main( final String args )
	{
		Map map = new HashMap();
	}
}

2. Create class C in C.java

public class C
{
	public static void main( final String args )
	{
	}
}

3. Select body of main in B.java (that is select the line Map map = new 
HashMap();)

4. Do Ctrl+Insert in B.java

5. Do Shift+Insert in C.java

Observed:

import java.util.HashMap;
import java.util.Map;

have not appeared in C.java

Expected:

if in steps 4 and 5 we used ^C / ^V then the imports would have gotten copied
to C.java. I expect exactly the same to happen regardless of wether I press ^C 
or ^Ins, ^V, or Shift+Ins.

Notice:

in the last example all of the following combinations fail to transfer imports:

Ctrl+Ins/Shift+Ins
^C/Shift+Ins
Ctrl+Ins/^V

and on the following one does work

^C/^V
Ctrl+Insert, Shift+Insert, Shift+Delete are not bound to their corresponding
commands.
I am increasing this since many people using Windows use Insert and Delete keys.
If we don't bind them we have problems with
- folding
- smart copy/paste (imports)
...

*** Bug 65791 has been marked as a duplicate of this bug. ***
*** Bug 65325 has been marked as a duplicate of this bug. ***
Fix: Introduce keybindings. Adding Dirk for second vote.
Approved by Dirk &amp; Kai.
Needs to be discussed with Platform UI: they already register those key bindings
for "gtk" and "motif" - why not for win32?
Discussed with Platform UI. We do not want to take the risk to change the key
binding for all of those retargeting cut/copy/paste. For now we will add the key
binding definitions to the text editing context and discuss after 3.0 whether
this should be in the general context (see bug 67651).

There was one minor problem with adding those key bindings: the UI showed those
new key sequences in the context menus instead of Ctrl+X/C/V. This is fixed by
also defining the original key bindings for cut/copy/paste again.
Reviewed by Kai
Fixed in HEAD.
Will be released into I200406171600
Verified in 200406180010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65956" />
    <CreationDate amount="2004-06-07 08:39:00 -0400" />
    <DupId amount="65361" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Two short cut keys in one line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The following file has two short-cut keys in one line.

eclipse\plugins\org.eclipse.jdt.ui\jdt_jar\org\eclipse\jdt\internal\ui\preferences\
PreferencesMessages.properties

Line 183:
JavaEditorPreferencePage.smartHomeEnd= &amp;Smart cursor positioning at &amp;line start
and end


*** This bug has been marked as a duplicate of 65361 ***
closing</WithStack>
    <WithOutStack>The following file has two short-cut keys in one line.

eclipse\plugins\org.eclipse.jdt.ui\jdt_jar\org\eclipse\jdt\internal\ui\preferences\
PreferencesMessages.properties

Line 183:
JavaEditorPreferencePage.smartHomeEnd= &amp;Smart cursor positioning at &amp;line start
and end


*** This bug has been marked as a duplicate of 65361 ***
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65957" />
    <CreationDate amount="2004-06-07 08:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>EventFormatter SAX-based de-serialization CBE APIs create multiple ExtendedDataElements.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>EventFormatter SAX-based de-serialization CBE APIs create multiple 
ExtendedDataElements.

For example, the Common Base Event returned from calling the 
EventFormatter.eventFromCanonicalXML(String) with below Common Base Event XML 
fragment as the parameter, contains an ExtendedDataElement with three values 
for the 'version' ExtendedDataElement and should only contain one 
ExtendedDataElement:

&lt;CommonBaseEvent creationTime="2004-06-06T15:13:21.891Z" 
globalInstanceId="don6:1086534779703:3" msg="ADMN0015I: AdminService 
initialized." severity="10" version="1.0.1"&gt;
	&lt;extendedDataElements name="sequenceNumber" type="long"&gt;
		&lt;values&gt;4&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="threadID" type="int"&gt;
		&lt;values&gt;10&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="level"&gt;
		&lt;children name="name" type="string"&gt;
			&lt;values&gt;AUDIT&lt;/values&gt;
		&lt;/children&gt;
		&lt;children name="value" type="int"&gt;
			&lt;values&gt;850&lt;/values&gt;
		&lt;/children&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="loggerName" type="string"&gt;
		&lt;values&gt;com.ibm.ws.management.AdminInitializer&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="organization" type="string"&gt;
		&lt;values&gt;IBM&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="product" type="string"&gt;
		&lt;values&gt;WebSphere&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="component" type="string"&gt;
		&lt;values&gt;Application Server&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="version" type="string"&gt;
		&lt;values&gt;Platform 6.0 Beta [BASE 6.0.0.0 o0418.30] &lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="processId" type="string"&gt;
		&lt;values&gt;628&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="processName" type="string"&gt;
		&lt;values&gt;don6\don6\server1&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="localizable" type="string"&gt;
		&lt;values&gt;yes&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;sourceComponentId component="com.ibm.ws.management.AdminInitializer" 
executionEnvironment="Windows 2000[x86]#5.0" instanceId="don6\don6\server1" 
location="don6" locationType="Hostname" processId="1086534779703" 
threadId="main" 
componentType="http://www.ibm.com/namespaces/autonomic/WebSphereApplicationServe
r"/&gt;
	&lt;msgDataElement msgLocale="en_US"&gt;
		&lt;msgCatalogId&gt;ADMN0015I&lt;/msgCatalogId&gt;
		&lt;msgCatalogType&gt;Java&lt;/msgCatalogType&gt;
	
	&lt;msgCatalog&gt;com.ibm.ws.management.resources.adminservice&lt;/msgCatalog&gt;
	&lt;/msgDataElement&gt;
&lt;/CommonBaseEvent&gt;

As such, calling the ExtendedDataElement's getValuesAsString() API on 
the 'version' ExtendedDataElement causes an IllegalStateException to be thrown.
This defect is due to the org.xml.sax.ContentHandler.characters(char[], int, 
int) not being invoked for contiguous PCDATA.  Some SAX parsers do not return 
all contiguous PCDATA in a single chunk (e.g. single invocation of 
org.xml.sax.ContentHandler.characters(char[], int, int)) and they may split it 
into several chunks.  

The fix for this defect includes buffering all PCDATA (e.g. all invocations of 
org.xml.sax.ContentHandler.characters(char[], int, int)) until the appropriate 
end element event has been fired (e.g. invocation of 
org.xml.sax.ContentHandler.endElement(java.lang.String,java.lang.String, 
java.lang.String)), at which time the buffered PCDATA is set in the associated 
Common Base Event property.   

This fix has been unit tested and the new test cases added to the 
EventFormatter's JUnit test suite.
Created attachment 11740
CVS org.eclipse.hyades.logging.events.cbe.util.SAXEventHandler patch.
Created attachment 11741
CVS org.eclipse.hyades.logging.events.cbe.util.tests.EventFormatterTest patch.
Code checked-in to HEAD on June 8, 2004.
Verified in Toronto's 20040713_1106 build.
Closing.</WithStack>
    <WithOutStack>EventFormatter SAX-based de-serialization CBE APIs create multiple 
ExtendedDataElements.

For example, the Common Base Event returned from calling the 
EventFormatter.eventFromCanonicalXML(String) with below Common Base Event XML 
fragment as the parameter, contains an ExtendedDataElement with three values 
for the 'version' ExtendedDataElement and should only contain one 
ExtendedDataElement:

&lt;CommonBaseEvent creationTime="2004-06-06T15:13:21.891Z" 
globalInstanceId="don6:1086534779703:3" msg="ADMN0015I: AdminService 
initialized." severity="10" version="1.0.1"&gt;
	&lt;extendedDataElements name="sequenceNumber" type="long"&gt;
		&lt;values&gt;4&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="threadID" type="int"&gt;
		&lt;values&gt;10&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="level"&gt;
		&lt;children name="name" type="string"&gt;
			&lt;values&gt;AUDIT&lt;/values&gt;
		&lt;/children&gt;
		&lt;children name="value" type="int"&gt;
			&lt;values&gt;850&lt;/values&gt;
		&lt;/children&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="loggerName" type="string"&gt;
		&lt;values&gt;com.ibm.ws.management.AdminInitializer&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="organization" type="string"&gt;
		&lt;values&gt;IBM&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="product" type="string"&gt;
		&lt;values&gt;WebSphere&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="component" type="string"&gt;
		&lt;values&gt;Application Server&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="version" type="string"&gt;
		&lt;values&gt;Platform 6.0 Beta [BASE 6.0.0.0 o0418.30] &lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="processId" type="string"&gt;
		&lt;values&gt;628&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="processName" type="string"&gt;
		&lt;values&gt;don6\don6\server1&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;extendedDataElements name="localizable" type="string"&gt;
		&lt;values&gt;yes&lt;/values&gt;
	&lt;/extendedDataElements&gt;
	&lt;sourceComponentId component="com.ibm.ws.management.AdminInitializer" 
executionEnvironment="Windows 2000[x86]#5.0" instanceId="don6\don6\server1" 
location="don6" locationType="Hostname" processId="1086534779703" 
threadId="main" 
componentType="http://www.ibm.com/namespaces/autonomic/WebSphereApplicationServe
r"/&gt;
	&lt;msgDataElement msgLocale="en_US"&gt;
		&lt;msgCatalogId&gt;ADMN0015I&lt;/msgCatalogId&gt;
		&lt;msgCatalogType&gt;Java&lt;/msgCatalogType&gt;
	
	&lt;msgCatalog&gt;com.ibm.ws.management.resources.adminservice&lt;/msgCatalog&gt;
	&lt;/msgDataElement&gt;
&lt;/CommonBaseEvent&gt;

As such, calling the ExtendedDataElement's getValuesAsString() API on 
the 'version' ExtendedDataElement causes an IllegalStateException to be thrown.
This defect is due to the org.xml.sax.ContentHandler.characters(char[], int, 
int) not being invoked for contiguous PCDATA.  Some SAX parsers do not return 
all contiguous PCDATA in a single chunk (e.g. single invocation of 
org.xml.sax.ContentHandler.characters(char[], int, int)) and they may split it 
into several chunks.  

The fix for this defect includes buffering all PCDATA (e.g. all invocations of 
org.xml.sax.ContentHandler.characters(char[], int, int)) until the appropriate 
end element event has been fired (e.g. invocation of 
org.xml.sax.ContentHandler.endElement(java.lang.String,java.lang.String, 
java.lang.String)), at which time the buffered PCDATA is set in the associated 
Common Base Event property.   

This fix has been unit tested and the new test cases added to the 
EventFormatter's JUnit test suite.
Created attachment 11740
CVS org.eclipse.hyades.logging.events.cbe.util.SAXEventHandler patch.
Created attachment 11741
CVS org.eclipse.hyades.logging.events.cbe.util.tests.EventFormatterTest patch.
Code checked-in to HEAD on June 8, 2004.
Verified in Toronto's 20040713_1106 build.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65958" />
    <CreationDate amount="2004-06-07 09:22:00 -0400" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>hang while shutting down</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="6">
        <Lines>
          <Line>- waiting on &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- waiting on &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x45a70060&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x45a70060&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20040604

When shutting down, eclispe hangs indefinitely. Not reproducable.

Seems similar to bug 63654, bug 58630 and bug 58626 but not quite the same, as
no other thread seems to be competing for the semaphore. VM Dump: 

Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Reference Cleaner - 2" prio=1 tid=0x08245788 nid=0x1dce in Object.wait()
[58ef3000..58ef3854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Reference Cleaner - 1" prio=1 tid=0x082454d8 nid=0x1dce in Object.wait()
[58b29000..58b29854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Start Level Event Dispatcher" daemon prio=1 tid=0x08239b38 nid=0x1dce in
Object.wait() [58a93000..58a93854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x45a70060&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x45a70060&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x08141db8 nid=0x1dce in
Object.wait() [58a12000..58a12854]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x45a70290&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0808d2f0 nid=0x1dce waiting on condition
[0..0]

"Finalizer" daemon prio=1 tid=0x080886c0 nid=0x1dce in Object.wait()
[583f5000..583f5854]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x45a703b8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08087ad0 nid=0x1dce in Object.wait()
[58374000..58374854]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x45a700b0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x080522f8 nid=0x1dce in Object.wait() [bfffc000..bfffcd38]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at org.eclipse.core.runtime.adaptor.Semaphore.acquire(Semaphore.java:30)
        - locked &lt;0x44ff4a50&gt; (a org.eclipse.core.runtime.adaptor.Semaphore)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.stopSystemBundle(EclipseStarter.java:873)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStarter.java:296)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:144)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:638)
        at org.eclipse.core.launcher.Main.main(Main.java:622)

"VM Thread" prio=1 tid=0x080867b0 nid=0x1dce runnable

"VM Periodic Task Thread" prio=1 tid=0x0808fb00 nid=0x1dce waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0808c938 nid=0x1dce runnable
Very curious.  As far as the stack trace shows anyone waiting is waiting on a 
lock they already have (i.e., normal).  Look if any timing issues in the 
Semaphore code.  Perhaps we missed a notify?

Investigate for RC2
Need John's help on this one.
John and I looked at the code and we can't really see how we could be missing
the STARTLEVEL_CHANGED event.
Tom (from Austin), I quickly stepped through the code and did not see anything
that would prevent the start level to be decreased, could you confirm that
missing such an event is possible.

Tom (from zurich) have you tried with a more recent VMs, it seems that you are
the only one reporting such a problem (bug #58630 and bug #58626 are not related
to this problem).
had it again today, still with 

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)

What other vm would you suggest - this seems the newest one from that vendor. I
cannot remember seeing exactly this with an IBM vm, but haven't run on one since
I file this PR.
Personnaly I run with 
java version "1.4.2_03"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_03-b02)
Java HotSpot(TM) Client VM (build 1.4.2_03-b02, mixed mode)

or 

java version "1.4.2"
J9 - VM for the Java(TM) platform (build 2.1)
IBM J9SE VM (build 2.1, J2RE 1.4.1 IBM J9 build 20040309 (JIT enabled))

and never saw this problem.
One way to prevent the StartLevel event from being published is if the 
start/stop method of a BundleActivator hung.  But this is obviously not the 
case in this Thread dump because we would have seen a Thread with a stack trace 
calling the stop() method of the hung BundleActivator.  I also checked out the 
code and do not see how we could have missed the StartLevel event.

From the thread dump it looks as if the Start Level change has completed 
because we do not see a "System Bundle Shutdown" thread which is created as a 
result of the call to systemBundle.stop().  There is a potential that a 
RuntimeException or Error was thrown by calling Framework.shutdown() from 
the "System Bundle Shutdown" thread.  There is nobody around to catch such an 
exception so it is not logged and since this is a separate thread there is 
nobody in the call stack to handle the exception and as a result the thread 
will terminate.  If this happened then the StartLevel event may not have been 
published and there would be no indication of what the error was.

Even if we logged the exception, I'm not sure how we could prevent this hang 
because the only way out is to publish the startlevel changed event...
Tom W., could you provide Tom E. with an instrumented version of osgi that
display directly if an exception is being thrown so we can get an idea if this
happens and why?
I'm working on bug 61942.  Which when fixed will take care of the situation 
when a RuntimeException or Error gets thrown in the shutdown process.  I hope 
to get this integrated for todays RC2 build.
I integrated the fix for bug 61942.  This should cause a log to be writen if a 
RuntimeException or Error was thrown.  Also note that we do a System.exit here 
as well so if this was causing the hang it will certainly break the hang but 
it will not complete the shutdown process.
Tom E., please try to run with RC2 and let us know if you have the problem. Note
that now you should have infos into the log file. Thx.
will try as soon as a working version for GTK comes out (bug 66492 is currently
blocking use of RC2 on GTK).
Please reopen if you can reproduce.</WithStack>
    <WithOutStack>I20040604

When shutting down, eclispe hangs indefinitely. Not reproducable.

Seems similar to bug 63654, bug 58630 and bug 58626 but not quite the same, as
no other thread seems to be competing for the semaphore. VM Dump: 

Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Reference Cleaner - 2" prio=1 tid=0x08245788 nid=0x1dce in Object.wait()
[58ef3000..58ef3854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x464698d0&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Reference Cleaner - 1" prio=1 tid=0x082454d8 nid=0x1dce in Object.wait()
[58b29000..58b29854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x46469940&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Start Level Event Dispatcher" daemon prio=1 tid=0x08239b38 nid=0x1dce in
Object.wait() [58a93000..58a93854]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x45a70060&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x45a70060&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x08141db8 nid=0x1dce in
Object.wait() [58a12000..58a12854]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x45a70290&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0808d2f0 nid=0x1dce waiting on condition
[0..0]

"Finalizer" daemon prio=1 tid=0x080886c0 nid=0x1dce in Object.wait()
[583f5000..583f5854]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x45a703b8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08087ad0 nid=0x1dce in Object.wait()
[58374000..58374854]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x45a700b0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x080522f8 nid=0x1dce in Object.wait() [bfffc000..bfffcd38]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at org.eclipse.core.runtime.adaptor.Semaphore.acquire(Semaphore.java:30)
        - locked &lt;0x44ff4a50&gt; (a org.eclipse.core.runtime.adaptor.Semaphore)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.stopSystemBundle(EclipseStarter.java:873)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStarter.java:296)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:144)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:638)
        at org.eclipse.core.launcher.Main.main(Main.java:622)

"VM Thread" prio=1 tid=0x080867b0 nid=0x1dce runnable

"VM Periodic Task Thread" prio=1 tid=0x0808fb00 nid=0x1dce waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0808c938 nid=0x1dce runnable
Very curious.  As far as the stack trace shows anyone waiting is waiting on a 
lock they already have (i.e., normal).  Look if any timing issues in the 
Semaphore code.  Perhaps we missed a notify?

Investigate for RC2
Need John's help on this one.
John and I looked at the code and we can't really see how we could be missing
the STARTLEVEL_CHANGED event.
Tom (from Austin), I quickly stepped through the code and did not see anything
that would prevent the start level to be decreased, could you confirm that
missing such an event is possible.

Tom (from zurich) have you tried with a more recent VMs, it seems that you are
the only one reporting such a problem (bug #58630 and bug #58626 are not related
to this problem).
had it again today, still with 

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)

What other vm would you suggest - this seems the newest one from that vendor. I
cannot remember seeing exactly this with an IBM vm, but haven't run on one since
I file this PR.
Personnaly I run with 
java version "1.4.2_03"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_03-b02)
Java HotSpot(TM) Client VM (build 1.4.2_03-b02, mixed mode)

or 

java version "1.4.2"
J9 - VM for the Java(TM) platform (build 2.1)
IBM J9SE VM (build 2.1, J2RE 1.4.1 IBM J9 build 20040309 (JIT enabled))

and never saw this problem.
One way to prevent the StartLevel event from being published is if the 
start/stop method of a BundleActivator hung.  But this is obviously not the 
case in this Thread dump because we would have seen a Thread with a stack trace 
calling the stop() method of the hung BundleActivator.  I also checked out the 
code and do not see how we could have missed the StartLevel event.

From the thread dump it looks as if the Start Level change has completed 
because we do not see a "System Bundle Shutdown" thread which is created as a 
result of the call to systemBundle.stop().  There is a potential that a 
RuntimeException or Error was thrown by calling Framework.shutdown() from 
the "System Bundle Shutdown" thread.  There is nobody around to catch such an 
exception so it is not logged and since this is a separate thread there is 
nobody in the call stack to handle the exception and as a result the thread 
will terminate.  If this happened then the StartLevel event may not have been 
published and there would be no indication of what the error was.

Even if we logged the exception, I'm not sure how we could prevent this hang 
because the only way out is to publish the startlevel changed event...
Tom W., could you provide Tom E. with an instrumented version of osgi that
display directly if an exception is being thrown so we can get an idea if this
happens and why?
I'm working on bug 61942.  Which when fixed will take care of the situation 
when a RuntimeException or Error gets thrown in the shutdown process.  I hope 
to get this integrated for todays RC2 build.
I integrated the fix for bug 61942.  This should cause a log to be writen if a 
RuntimeException or Error was thrown.  Also note that we do a System.exit here 
as well so if this was causing the hang it will certainly break the hang but 
it will not complete the shutdown process.
Tom E., please try to run with RC2 and let us know if you have the problem. Note
that now you should have infos into the log file. Thx.
will try as soon as a working version for GTK comes out (bug 66492 is currently
blocking use of RC2 on GTK).
Please reopen if you can reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65959" />
    <CreationDate amount="2004-06-07 09:32:00 -0400" />
    <DupId amount="64745" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Progress] "Check-out" operation hangs on a clean workspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Start from a clean workspace</Line>
          <Line>- Switch to CVS perspective and check out a project</Line>
          <Line>- The “check-out” operation seems to hang (the percentage in the status bar does</Line>
          <Line>not change anymore). I usually have to "force quit" eclipse and start over</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am using 3.0RC1.

Steps:
- Start from a clean workspace
- Switch to CVS perspective and check out a project
- The “check-out” operation seems to hang (the percentage in the status bar does
not change anymore). I usually have to "force quit" eclipse and start over

I do not believe this happens every time, but it has happened to me quite a few
times.
I forgot to mention that I run the job in the background (when the dialog appears).
I think this is a dup of Bug 64745

*** This bug has been marked as a duplicate of 64745 ***</WithStack>
    <WithOutStack>I am using 3.0RC1.

Steps:
- Start from a clean workspace
- Switch to CVS perspective and check out a project
- The “check-out” operation seems to hang (the percentage in the status bar does
not change anymore). I usually have to "force quit" eclipse and start over

I do not believe this happens every time, but it has happened to me quite a few
times.
I forgot to mention that I run the job in the background (when the dialog appears).
I think this is a dup of Bug 64745

*** This bug has been marked as a duplicate of 64745 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65960" />
    <CreationDate amount="2004-06-07 09:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE while launching (debugging)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341145264">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:787)</Frame>
          <Frame depth="1">org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:959)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145264">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: -1)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:582)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145264">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>-1</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.text.rules.BufferedRuleBasedScanner.read(BufferedRuleBasedScanner.java:118)</Frame>
          <Frame depth="1">org.eclipse.jface.text.rules.PatternRule.doEvaluate(PatternRule.java:165)</Frame>
          <Frame depth="2">org.eclipse.jface.text.rules.PatternRule.evaluate(PatternRule.java:256)</Frame>
          <Frame depth="3">org.eclipse.jface.text.rules.PatternRule.evaluate(PatternRule.java:182)</Frame>
          <Frame depth="4">org.eclipse.jface.text.rules.RuleBasedScanner.nextToken(RuleBasedScanner.java:155)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.text.AbstractJavaScanner.nextToken(AbstractJavaScanner.java:115)</Frame>
          <Frame depth="6">org.eclipse.jface.text.rules.DefaultDamagerRepairer.createPresentation(DefaultDamagerRepairer.java:166)</Frame>
          <Frame depth="7">org.eclipse.jface.text.presentation.PresentationReconciler.createPresentation(PresentationReconciler.java:446)</Frame>
          <Frame depth="8">org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:555)</Frame>
          <Frame depth="9">org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:553)</Frame>
          <Frame depth="10">org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.textChanged(PresentationReconciler.java:222)</Frame>
          <Frame depth="11">org.eclipse.jface.text.TextViewer.updateTextListeners(TextViewer.java:2235)</Frame>
          <Frame depth="12">org.eclipse.jface.text.TextViewer.invalidateTextPresentation(TextViewer.java:2931)</Frame>
          <Frame depth="13">org.eclipse.jface.text.source.projection.ProjectionViewer.processChanges(ProjectionViewer.java:884)</Frame>
          <Frame depth="14">org.eclipse.jface.text.source.projection.ProjectionViewer.catchupWithProjectionAnnotationModel(ProjectionViewer.java:781)</Frame>
          <Frame depth="15">org.eclipse.jface.text.source.projection.ProjectionViewer.access$7(ProjectionViewer.java:750)</Frame>
          <Frame depth="16">org.eclipse.jface.text.source.projection.ProjectionViewer$1.run(ProjectionViewer.java:721)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="24">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="26">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="31">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="32">java.lang.reflect.Method.invoke(Method.java:582)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="652" end="723" />
        <code>boolean autobuilding = ResourcesPlugin.getWorkspace().isAutoBuilding();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I200406042000

Sorry, I have currently no access to a newer Integration build. Otherwise this
problem is not reliably reproducable and only happens randomly, so it would
probably not make a big difference if it will not happen directly after
installing the newest build.

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 15:27:25.875
!MESSAGE An internal error occurred during: "Launching".
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:787)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:959)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Steps to reproduce would be good. It looks like a job to launch is being 
executed after the workspace has shutdown, causing an NPE. However, jobs 
should not be executing after workspace shutdown. (John, is that correct?). 
The code looks like this:

boolean autobuilding = ResourcesPlugin.getWorkspace().isAutoBuilding();
Unfortunately I can't reproduce this. (The current .log starts 26. Mai and that
was the first time this error was in the log)

But I had a deeper look at the log and ~2 minutes before this there was another
exception (below). Can this cause the Workbench to "shut down" (without beeing
physically closed - I closed the workbench manually) and than cause the
launch-task (which was not visible in the progress view) to fail?

Next time I will examine the .log before manually shutting down the workbench. 

!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 15:25:50.343
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 15:25:50.359
!MESSAGE Failed to execute runnable (java.lang.ArrayIndexOutOfBoundsException: -1)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: -1)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 15:25:50.359
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 15:25:50.359
!MESSAGE -1
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: -1
	at
org.eclipse.jface.text.rules.BufferedRuleBasedScanner.read(BufferedRuleBasedScanner.java:118)
	at org.eclipse.jface.text.rules.PatternRule.doEvaluate(PatternRule.java:165)
	at org.eclipse.jface.text.rules.PatternRule.evaluate(PatternRule.java:256)
	at org.eclipse.jface.text.rules.PatternRule.evaluate(PatternRule.java:182)
	at
org.eclipse.jface.text.rules.RuleBasedScanner.nextToken(RuleBasedScanner.java:155)
	at
org.eclipse.jdt.internal.ui.text.AbstractJavaScanner.nextToken(AbstractJavaScanner.java:115)
	at
org.eclipse.jface.text.rules.DefaultDamagerRepairer.createPresentation(DefaultDamagerRepairer.java:166)
	at
org.eclipse.jface.text.presentation.PresentationReconciler.createPresentation(PresentationReconciler.java:446)
	at
org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:555)
	at
org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:553)
	at
org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.textChanged(PresentationReconciler.java:222)
	at org.eclipse.jface.text.TextViewer.updateTextListeners(TextViewer.java:2235)
	at
org.eclipse.jface.text.TextViewer.invalidateTextPresentation(TextViewer.java:2931)
	at
org.eclipse.jface.text.source.projection.ProjectionViewer.processChanges(ProjectionViewer.java:884)
	at
org.eclipse.jface.text.source.projection.ProjectionViewer.catchupWithProjectionAnnotationModel(ProjectionViewer.java:781)
	at
org.eclipse.jface.text.source.projection.ProjectionViewer.access$7(ProjectionViewer.java:750)
	at
org.eclipse.jface.text.source.projection.ProjectionViewer$1.run(ProjectionViewer.java:721)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:638)
	at org.eclipse.core.launcher.Main.main(Main.java:622)
This sort of exception should not cause the workbench to shutdown.
Marking as works for me. Please re-open if the problem persists.</WithStack>
    <WithOutStack>I200406042000

Sorry, I have currently no access to a newer Integration build. Otherwise this
problem is not reliably reproducable and only happens randomly, so it would
probably not make a big difference if it will not happen directly after
installing the newest build.

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 15:27:25.875
!MESSAGE An internal error occurred during: "Launching".
!STACK 0
Steps to reproduce would be good. It looks like a job to launch is being 
executed after the workspace has shutdown, causing an NPE. However, jobs 
should not be executing after workspace shutdown. (John, is that correct?). 
The code looks like this:

boolean autobuilding = ResourcesPlugin.getWorkspace().isAutoBuilding();
Unfortunately I can't reproduce this. (The current .log starts 26. Mai and that
was the first time this error was in the log)

But I had a deeper look at the log and ~2 minutes before this there was another
exception (below). Can this cause the Workbench to "shut down" (without beeing
physically closed - I closed the workbench manually) and than cause the
launch-task (which was not visible in the progress view) to fail?

Next time I will examine the .log before manually shutting down the workbench. 

!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 15:25:50.343
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 15:25:50.359
!MESSAGE Failed to execute runnable (java.lang.ArrayIndexOutOfBoundsException: -1)
!STACK 0
!ENTRY org.eclipse.ui 4 4 Jun 07, 2004 15:25:50.359
!MESSAGE *** SWT nested exception
!ENTRY org.eclipse.ui 4 0 Jun 07, 2004 15:25:50.359
!MESSAGE -1
!STACK 0

This sort of exception should not cause the workbench to shutdown.
Marking as works for me. Please re-open if the problem persists.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65961" />
    <CreationDate amount="2004-06-07 09:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] Need to test behaviour of various API in different threading situations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>a) in the UI thread</Line>
          <Line>b) in a new Thread()</Line>
          <Line>c) in a Job</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It would be good if we could write tests that cover the usage of our core APIs
when used in different threading situations:

a) in the UI thread
b) in a new Thread()
c) in a Job

At the very least such tests can help us clarify our API docs.
There are currently no plans to work on this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>It would be good if we could write tests that cover the usage of our core APIs
when used in different threading situations:

a) in the UI thread
b) in a new Thread()
c) in a Job

At the very least such tests can help us clarify our API docs.
There are currently no plans to work on this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65962" />
    <CreationDate amount="2004-06-07 09:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Reverting encoding doesn't delete file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- load project from repo</Line>
          <Line>- set encoding on a file</Line>
          <Line>-&gt; .settings/org.eclipse.core.resources.prefs file is created</Line>
          <Line>- go to the file properties and change the encoding to inherit the default</Line>
          <Line>-&gt; the prefs file is still there. There is an entry for the project.</Line>
          <Line>Shouldn't it just inherit the encoding from the workspace still and the prefs</Line>
          <Line>file be deleted?</Line>
          <Line>This is supposedly what happens (although the .settings directory is not deleted).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>build i0604-1200

- load project from repo
- set encoding on a file
   -&gt; .settings/org.eclipse.core.resources.prefs file is created
- go to the file properties and change the encoding to inherit the default
   -&gt; the prefs file is still there. There is an entry for the project.
Shouldn't it just inherit the encoding from the workspace still and the prefs
file be deleted?
This is supposedly what happens (although the .settings directory is not deleted).

Are you sure the project you got from the repo did not already have a project
default encoding set? Most of our projects in Core have.
Oops. Just checking to see if you were paying attention. Happy Monday Morning!</WithStack>
    <WithOutStack>build i0604-1200

- load project from repo
- set encoding on a file
   -&gt; .settings/org.eclipse.core.resources.prefs file is created
- go to the file properties and change the encoding to inherit the default
   -&gt; the prefs file is still there. There is an entry for the project.
Shouldn't it just inherit the encoding from the workspace still and the prefs
file be deleted?
This is supposedly what happens (although the .settings directory is not deleted).

Are you sure the project you got from the repo did not already have a project
default encoding set? Most of our projects in Core have.
Oops. Just checking to see if you were paying attention. Happy Monday Morning!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65963" />
    <CreationDate amount="2004-06-07 09:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Intro] Include the org.eclipse.jdt.ui.example.projects as a sample project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>This sample should be included in the 'Samples' page.
Created attachment 12111
patch
updated wrong bug.
closing the bug - we do not want to promote this example further</WithStack>
    <WithOutStack>This sample should be included in the 'Samples' page.
Created attachment 12111
patch
updated wrong bug.
closing the bug - we do not want to promote this example further</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65964" />
    <CreationDate amount="2004-06-07 09:56:00 -0400" />
    <DupId amount="65403" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="enhancement" />
    <Summery>Rename a project in the Test Navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be nive to rename e project in the Test Navigator


*** This bug has been marked as a duplicate of 65403 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>It would be nive to rename e project in the Test Navigator


*** This bug has been marked as a duplicate of 65403 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65965" />
    <CreationDate amount="2004-06-07 10:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>BendpointEditPolicy should handle multiple automatic bendpoints</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A connections points and its bendpoint may be very different.  For example, 
using the new ShortestPathConnectionRouter, a connection may have several 
automatic bendpoints spread out among user bendpoints.  We will insert bend 
handles at the midpoints of all segments, and move handles whever existing 
bends may lie.
Released to HEAD</WithStack>
    <WithOutStack>A connections points and its bendpoint may be very different.  For example, 
using the new ShortestPathConnectionRouter, a connection may have several 
automatic bendpoints spread out among user bendpoints.  We will insert bend 
handles at the midpoints of all segments, and move handles whever existing 
bends may lie.
Released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65966" />
    <CreationDate amount="2004-06-07 10:11:00 -0400" />
    <DupId amount="63115" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Run &gt; JUnit Test option slow to appear [Junit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I right-click an item to run as a JUnit test, the "Run" context menu takes
several seconds to appear. It used to be almost immediate. This breaks the
test/code rhythm when I need to switch test classes.
This occurs in 3.0rc1
This appears not to happen all the time. It /does/ happen more often when JUnit
Test is the only item in the Run context menu.
Move to JDT/UI
The content of the context menu is computed when it opens to save CPU cycles 
on selection changes. So this is for sure slow the first time you open the 
menu, but should be faster when used the next time.

Darin, do you have any profile numbers regarding resolving the Run/Debug menu. 

Moving to Debug.

When I choose Run on a resource I haven't Run before, that's when this menu is
slow. After that I can just press Ctrl+F11, so there's no need to select Run
again for the same resource, so I'll never see the performance benefit.


*** This bug has been marked as a duplicate of 63115 ***</WithStack>
    <WithOutStack>When I right-click an item to run as a JUnit test, the "Run" context menu takes
several seconds to appear. It used to be almost immediate. This breaks the
test/code rhythm when I need to switch test classes.
This occurs in 3.0rc1
This appears not to happen all the time. It /does/ happen more often when JUnit
Test is the only item in the Run context menu.
Move to JDT/UI
The content of the context menu is computed when it opens to save CPU cycles 
on selection changes. So this is for sure slow the first time you open the 
menu, but should be faster when used the next time.

Darin, do you have any profile numbers regarding resolving the Run/Debug menu. 

Moving to Debug.

When I choose Run on a resource I haven't Run before, that's when this menu is
slow. After that I can just press Ctrl+F11, so there's no need to select Run
again for the same resource, so I'll never see the performance benefit.


*** This bug has been marked as a duplicate of 63115 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65967" />
    <CreationDate amount="2004-06-07 10:20:00 -0400" />
    <DupId amount="44724" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>compute content in background job for debug views</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The debug views compute labels in the background, but compute content in the 
main thread. We should also compute content in the background.
Deferred
This is a dup of Bug 44724.
Re-open for 3.1 investigation.
Suggest reopening the dup instead of starting with a blank bug report.


*** This bug has been marked as a duplicate of 44724 ***</WithStack>
    <WithOutStack>The debug views compute labels in the background, but compute content in the 
main thread. We should also compute content in the background.
Deferred
This is a dup of Bug 44724.
Re-open for 3.1 investigation.
Suggest reopening the dup instead of starting with a blank bug report.


*** This bug has been marked as a duplicate of 44724 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65968" />
    <CreationDate amount="2004-06-07 10:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Webapp] Access</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>For a blind user the help system is difficult to navigate because the user, 
using a screen reader, needs to go through all the links to get to the 
content.  It would be very helpful if a link at the top of the page would skip 
all navigations and go directly to the content and if any of the links could 
take the user not just to the relevant page but to the content part of the page.

Thank you for your consideration.
It is not necessary to go through all the links.  On Windows, for example, 
user can press Ctrl+Tab to navigate to the next frame (toolbar or view etc.), 
and not go throgh all links inside frames.  As documented in bug 56956, in 
3.0M9, there is even another shortcut, that eliminates a need for multiple 
Ctrl+Tab to get to the content frame. ALT+K will get user there.

"link at the top of the page would skip all navigations and go directly to the 
content" - could you provide more details, a graphics mockup of proposed 
desing?
"not just to the relevant page but to the content part of the page" - what 
exactly is the difference between the two?  Help does not have much control on 
the design of the content.

Thanks.

Post 3.0.
We are going to be improving the accessibility of the help system in Eclipse 3.3, including better support for screenreaders. I'll add updates as our plans become more detailed.</WithStack>
    <WithOutStack>For a blind user the help system is difficult to navigate because the user, 
using a screen reader, needs to go through all the links to get to the 
content.  It would be very helpful if a link at the top of the page would skip 
all navigations and go directly to the content and if any of the links could 
take the user not just to the relevant page but to the content part of the page.

Thank you for your consideration.
It is not necessary to go through all the links.  On Windows, for example, 
user can press Ctrl+Tab to navigate to the next frame (toolbar or view etc.), 
and not go throgh all links inside frames.  As documented in bug 56956, in 
3.0M9, there is even another shortcut, that eliminates a need for multiple 
Ctrl+Tab to get to the content frame. ALT+K will get user there.

"link at the top of the page would skip all navigations and go directly to the 
content" - could you provide more details, a graphics mockup of proposed 
desing?
"not just to the relevant page but to the content part of the page" - what 
exactly is the difference between the two?  Help does not have much control on 
the design of the content.

Thanks.

Post 3.0.
We are going to be improving the accessibility of the help system in Eclipse 3.3, including better support for screenreaders. I'll add updates as our plans become more detailed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65969" />
    <CreationDate amount="2004-06-07 10:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inconsistant behaviour between MacOS and Win32 Shell.setEnabled()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) From the editor chevron, the user opens an editor that is currently</Line>
          <Line>unrealized.  This is done prior to the closing of the editor list shell</Line>
          <Line>2) This causes the editor to be created</Line>
          <Line>3) In the case of a text editor, it's creation causes WorkbenchWindow.run() to</Line>
          <Line>be called</Line>
          <Line>4) ApplicationWindow.run calls setEnabled(false) on all shells that are not the</Line>
          <Line>window shell</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>RC1

This is the root cause of Bug 64784.  This is essentially the course of events
that's causing it:

1) From the editor chevron, the user opens an editor that is currently
unrealized.  This is done prior to the closing of the editor list shell
2) This causes the editor to be created
3) In the case of a text editor, it's creation causes WorkbenchWindow.run() to
be called
4) ApplicationWindow.run calls setEnabled(false) on all shells that are not the
window shell

This is where behavior deviates.  On MacOS the WorkbenchWindow shell gets an
SWT.Activate event when the editor list shell has setEnabled(false) called. 
This doesn't happen on Windows (or GTK).  This event has the side effect of
causing the active editor in the workbench window to be activated.  But this
can't work because we're still in the process of creating the editor.  This is
where we explode.

We've altered the behavior of the editor list to close its shell before
activating the editor (which makes sense anyway) but the underlying discrepancy
still exists.
SSQ to investigate.
There is nothing we can do here. The OS activates the parent when the child shell is disabled.</WithStack>
    <WithOutStack>RC1

This is the root cause of Bug 64784.  This is essentially the course of events
that's causing it:

1) From the editor chevron, the user opens an editor that is currently
unrealized.  This is done prior to the closing of the editor list shell
2) This causes the editor to be created
3) In the case of a text editor, it's creation causes WorkbenchWindow.run() to
be called
4) ApplicationWindow.run calls setEnabled(false) on all shells that are not the
window shell

This is where behavior deviates.  On MacOS the WorkbenchWindow shell gets an
SWT.Activate event when the editor list shell has setEnabled(false) called. 
This doesn't happen on Windows (or GTK).  This event has the side effect of
causing the active editor in the workbench window to be activated.  But this
can't work because we're still in the process of creating the editor.  This is
where we explode.

We've altered the behavior of the editor list to close its shell before
activating the editor (which makes sense anyway) but the underlying discrepancy
still exists.
SSQ to investigate.
There is nothing we can do here. The OS activates the parent when the child shell is disabled.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65970" />
    <CreationDate amount="2004-06-07 10:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Outline View] Contents of Includes displayed in Outline for STRUCTURAL_PARSE mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Set preference follow includes when generating the outline view" to true.</Line>
          <Line>2. Create a new project (Managed Make) and include &lt;iostream&gt;</Line>
          <Line>3. View the outline.</Line>
          <Line>Fixed in HEAD.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>To reproduce. 

1. Set preference follow includes when generating the outline view" to true.
2. Create a new project (Managed Make) and include &lt;iostream&gt;
3. View the outline.
Fixed in HEAD.</WithStack>
    <WithOutStack>To reproduce. 

1. Set preference follow includes when generating the outline view" to true.
2. Create a new project (Managed Make) and include &lt;iostream&gt;
3. View the outline.
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65971" />
    <CreationDate amount="2004-06-07 10:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>search view should move focus with selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="5">
      <Enumeration lines="2">
        <Lines>
          <Line>1) This is GTK only (at least it doesn't happen on windows).</Line>
          <Line>2) the package explorer has the same behaviour</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- Smoke test: Text Search for TestCase in *.java</Line>
          <Line>- Search View is active</Line>
          <Line>- the keyboard focus is on the results tree, or</Line>
          <Line>- Press Ctrl+. to iterate over the matches</Line>
          <Line>- press UP/DOWN</Line>
          <Line>-&gt; note that the selection jumps around as the keyboard focus is someplace else</Line>
          <Line>thant Ctrl+. took you.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- Smoke test: Text Search for TestCase in *.java</Line>
          <Line>- Search View is active</Line>
          <Line>- the keyboard focus is on the view toolbar</Line>
          <Line>- Press Ctrl+. to iterate over the matches</Line>
          <Line>- press TAB</Line>
          <Line>-&gt; note that the keyboard selection jumps to the most recent focus item in the</Line>
          <Line>tree, not where the selection is.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- close the search view</Line>
          <Line>- JUnit in source (for the sake of the example - anything goes)</Line>
          <Line>- have an editor open. Give focus to the editor</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- press Ctrl+H to bring up (Java) search</Line>
          <Line>- press Shift+Tab to give focus to the tab control, press LEFT to select 'File</Line>
          <Line>Search'</Line>
          <Line>- enter 'TestCase' as search expression, '*.java' as file name pattern</Line>
          <Line>- press Alt+S to start the search</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20040607

- Smoke test: Text Search for TestCase in *.java
- Search View is active
- the keyboard focus is on the results tree, or
- Press Ctrl+. to iterate over the matches
- press UP/DOWN
-&gt; note that the selection jumps around as the keyboard focus is someplace else
thant Ctrl+. took you.

Version b)
- Smoke test: Text Search for TestCase in *.java
- Search View is active
- the keyboard focus is on the view toolbar
- Press Ctrl+. to iterate over the matches
- press TAB
-&gt; note that the keyboard selection jumps to the most recent focus item in the
tree, not where the selection is.

Moving the selection by "Go to Next /Previous" should also move the focus.
2 pieces of information:

1) This is GTK only (at least it doesn't happen on windows).
2) the package explorer has the same behaviour

I suspect this is a SWT issue. If we should be doing something special with the
Focus, SWT please advise.


CAR to determine if this is just a platform difference or a real bug.
Not reproducable for me using I20050426, please re-open if I'm mistaken.
reopening - the problem shows a slightly different behavior, though. The
following steps are 100% reproducible with a fresh workspace with JUnit imported
on I20050426-0849.

- close the search view
- JUnit in source (for the sake of the example - anything goes)
- have an editor open. Give focus to the editor

(the following steps have to be carried out entirely by using the keyboard, no
mouse!)
- press Ctrl+H to bring up (Java) search
- press Shift+Tab to give focus to the tab control, press LEFT to select 'File
Search'
- enter 'TestCase' as search expression, '*.java' as file name pattern
- press Alt+S to start the search

&gt; the search view opens, showing the search result tree
&gt; the search view is decorated as having focus (dark blue tab)
&gt; the tree shows a selection, but no focus

In fact, the keyboard focus is completetely gone. Pressing any cursor keys, Tab,
Ctrl+Tab, or Ctrl+F10 does not do anything. It seems that the keyboard focus is
on some inexistent or invisible control. Alt+Tabbing away and back to eclipse,
or minimizing and maximizing eclipse does not help.

The only thing that works is the main menu. The only way I can regain control of
eclipse without using the mouse is selecting 'Activate Editor' from the 'Window
(Alt+W) &gt; Navigation' menu.
The steps you described reproduce bug 65053, which is now fixed.  The problem is
no longer reproducable in more recent builds.

I would just mark this as a duplicate, but the original steps in this bug don't
match bug 65053.  Since I can't reproduce the original bug, I would like to
return this to WORKSFORME unless you have some new steps. :)
cannot reproduce with the steps from comment 0 - fine to close.
Great, please re-open if the original bug returns.</WithStack>
    <WithOutStack>I20040607

- Smoke test: Text Search for TestCase in *.java
- Search View is active
- the keyboard focus is on the results tree, or
- Press Ctrl+. to iterate over the matches
- press UP/DOWN
-&gt; note that the selection jumps around as the keyboard focus is someplace else
thant Ctrl+. took you.

Version b)
- Smoke test: Text Search for TestCase in *.java
- Search View is active
- the keyboard focus is on the view toolbar
- Press Ctrl+. to iterate over the matches
- press TAB
-&gt; note that the keyboard selection jumps to the most recent focus item in the
tree, not where the selection is.

Moving the selection by "Go to Next /Previous" should also move the focus.
2 pieces of information:

1) This is GTK only (at least it doesn't happen on windows).
2) the package explorer has the same behaviour

I suspect this is a SWT issue. If we should be doing something special with the
Focus, SWT please advise.


CAR to determine if this is just a platform difference or a real bug.
Not reproducable for me using I20050426, please re-open if I'm mistaken.
reopening - the problem shows a slightly different behavior, though. The
following steps are 100% reproducible with a fresh workspace with JUnit imported
on I20050426-0849.

- close the search view
- JUnit in source (for the sake of the example - anything goes)
- have an editor open. Give focus to the editor

(the following steps have to be carried out entirely by using the keyboard, no
mouse!)
- press Ctrl+H to bring up (Java) search
- press Shift+Tab to give focus to the tab control, press LEFT to select 'File
Search'
- enter 'TestCase' as search expression, '*.java' as file name pattern
- press Alt+S to start the search

&gt; the search view opens, showing the search result tree
&gt; the search view is decorated as having focus (dark blue tab)
&gt; the tree shows a selection, but no focus

In fact, the keyboard focus is completetely gone. Pressing any cursor keys, Tab,
Ctrl+Tab, or Ctrl+F10 does not do anything. It seems that the keyboard focus is
on some inexistent or invisible control. Alt+Tabbing away and back to eclipse,
or minimizing and maximizing eclipse does not help.

The only thing that works is the main menu. The only way I can regain control of
eclipse without using the mouse is selecting 'Activate Editor' from the 'Window
(Alt+W) &gt; Navigation' menu.
The steps you described reproduce bug 65053, which is now fixed.  The problem is
no longer reproducable in more recent builds.

I would just mark this as a duplicate, but the original steps in this bug don't
match bug 65053.  Since I can't reproduce the original bug, I would like to
return this to WORKSFORME unless you have some new steps. :)
cannot reproduce with the steps from comment 0 - fine to close.
Great, please re-open if the original bug returns.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65972" />
    <CreationDate amount="2004-06-07 10:30:00 -0400" />
    <DupId amount="64898" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception during Smoke Test</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145275">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Index out of bounds</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2677)</Frame>
          <Frame depth="3">org.eclipse.swt.SWT.error(SWT.java)</Frame>
          <Frame depth="4">org.eclipse.swt.SWT.error(SWT.java)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.StyledText.getLocationAtOffset(StyledText.java)</Frame>
          <Frame depth="6">org.eclipse.jface.text.CursorLinePainter.drawHighlightLine(CursorLinePainter.java:173)</Frame>
          <Frame depth="7">org.eclipse.jface.text.CursorLinePainter.paint(CursorLinePainter.java:239)</Frame>
          <Frame depth="8">org.eclipse.jface.text.PaintManager.paint(PaintManager.java)</Frame>
          <Frame depth="9">org.eclipse.jface.text.PaintManager.selectionChanged(PaintManager.java:335)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)</Frame>
          <Frame depth="14">org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.java:2145)</Frame>
          <Frame depth="15">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:2128)</Frame>
          <Frame depth="16">org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:1910)</Frame>
          <Frame depth="17">org.eclipse.jface.text.DefaultUndoManager.selectAndReveal(DefaultUndoManager.java:832)</Frame>
          <Frame depth="18">org.eclipse.jface.text.DefaultUndoManager$TextCommand.undo(DefaultUndoManager.java:94)</Frame>
          <Frame depth="19">org.eclipse.jface.text.DefaultUndoManager.internalUndo(DefaultUndoManager.java:556)</Frame>
          <Frame depth="20">org.eclipse.jface.text.DefaultUndoManager.undo(DefaultUndoManager.java:821)</Frame>
          <Frame depth="21">org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3358)</Frame>
          <Frame depth="22">org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:744)</Frame>
          <Frame depth="23">org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1153)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:151)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:188)</Frame>
          <Frame depth="26">org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java)</Frame>
          <Frame depth="28">org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)</Frame>
          <Frame depth="29">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="30">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:469)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:928)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:546)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:494)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:259)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.filterEvent(Display.java)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1725)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1721)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3049)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="48">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="54">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="56">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="58">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="60">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="61">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="62">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Smoke test input 2004-06-07, J9 2004-05-12

During the smoke test I got this exception in the log:

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:19:25.823
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.ru
ntime".
!STACK 0
java.lang.IllegalArgumentException: Index out of bounds
        at java.lang.Throwable.&lt;init&gt;(Throwable.java)
        at java.lang.Throwable.&lt;init&gt;(Throwable.java)
        at org.eclipse.swt.SWT.error(SWT.java:2677)
        at org.eclipse.swt.SWT.error(SWT.java)
        at org.eclipse.swt.SWT.error(SWT.java)
        at org.eclipse.swt.custom.StyledText.getLocationAtOffset(StyledText.java
)
        at org.eclipse.jface.text.CursorLinePainter.drawHighlightLine(CursorLine
Painter.java:173)
        at org.eclipse.jface.text.CursorLinePainter.paint(CursorLinePainter.java
:239)
        at org.eclipse.jface.text.PaintManager.paint(PaintManager.java)
        at org.eclipse.jface.text.PaintManager.selectionChanged(PaintManager.jav
a:335)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)
        at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatfo
rm.java)
        at org.eclipse.core.runtime.Platform.run(Platform.java)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)
        at org.eclipse.jface.text.TextViewer.fireSelectionChanged(TextViewer.jav
a:2145)
        at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:21
28)
        at org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:19
10)
        at org.eclipse.jface.text.DefaultUndoManager.selectAndReveal(DefaultUndo
Manager.java:832)
        at org.eclipse.jface.text.DefaultUndoManager$TextCommand.undo(DefaultUnd
oManager.java:94)
        at org.eclipse.jface.text.DefaultUndoManager.internalUndo(DefaultUndoMan
ager.java:556)
        at org.eclipse.jface.text.DefaultUndoManager.undo(DefaultUndoManager.jav
a:821)
        at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3358)
        at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.j
ava:744)
        at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation
(ProjectionViewer.java:1153)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(J
avaSourceViewer.java:151)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedS
ourceViewer.doOperation(CompilationUnitEditor.java:188)
        at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationActi
on.java:122)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java)
        at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction
.java:120)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)

        at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(Workben
chKeyboard.java:469)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboar
d.java)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(Workbe
nchKeyboard.java:928)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindi
ngs(WorkbenchKeyboard.java:546)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyb
oard.java:494)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(Workbenc
hKeyboard.java:259)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1725)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1721)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3049)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav
a:253)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96
)
        at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct
ivator.java:334)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:273)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:128)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:79)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:41)
        at java.lang.reflect.Method.invoke(Method.java:386)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:638)
        at org.eclipse.core.launcher.Main.main(Main.java:622)


Unfortunately, I didn't notice it right away, so I can't say what caused it. It
might have happened while I was undoing the generation of getters/setters while
in segmented mode.


*** This bug has been marked as a duplicate of 64898 ***</WithStack>
    <WithOutStack>Smoke test input 2004-06-07, J9 2004-05-12

During the smoke test I got this exception in the log:

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:19:25.823
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.ru
ntime".
!STACK 0



Unfortunately, I didn't notice it right away, so I can't say what caused it. It
might have happened while I was undoing the generation of getters/setters while
in segmented mode.


*** This bug has been marked as a duplicate of 64898 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65973" />
    <CreationDate amount="2004-06-07 10:32:00 -0400" />
    <DupId amount="40422" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incomplete AST for function pointer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="37" end="73" />
        <code>typedef int(*fp)(void(*)(char));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Consider the following declaration.

    typedef int(*fp)(void(*)(char));

A structural parse yields an AST like what's shown in the projects view:
    fp : int(*)(void)

The parameter type is wrong!


*** This bug has been marked as a duplicate of 40422 ***</WithStack>
    <WithOutStack>Consider the following declaration.

    typedef int(*fp)(void(*)(char));

A structural parse yields an AST like what's shown in the projects view:
    fp : int(*)(void)

The parameter type is wrong!


*** This bug has been marked as a duplicate of 40422 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65974" />
    <CreationDate amount="2004-06-07 10:36:00 -0400" />
    <DupId amount="45159" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JDT formatting weirdness</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="singlecomment">
        <location start="280" end="290" />
        <code>// BEGIN</code>
      </source_code>
      <source_code type="import">
        <location start="290" end="316" />
        <code>import java.awt.Graphics;</code>
      </source_code>
      <source_code type="class">
        <location start="318" end="876" />
        <code>public class Dummy {

	double[] h;
	double[] H;
	double[] v;

	int width = 600;
	int height = 400;

	private class InnerDummy {
		public void paint(Graphics g) {
			double hmin = Double.MAX_VALUE, hmax = 
Double.MIN_VALUE;
			double vmin = 0, vmax = 0;

			for (int i = 0; i &lt; h.length; i++) {
				g
						.drawLine(
								i * width / 
h.length,
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height),
								(int) ((i + 5 
* v[i] / vmax) * width / h.length),
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height));
			}

		}
	}
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="877" end="885" />
        <code>// END</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Some code pieces are formatted weirdly (I don't know how else to put it).

PLS find an example below. The code itself is irrelevant, my point is that 
g.drawLine is picked to pieces. If you try it out, note how e.g. removing the 
first occurrence of "/ 2" makes a big difference.

// BEGIN

import java.awt.Graphics;

public class Dummy {

	double[] h;
	double[] H;
	double[] v;

	int width = 600;
	int height = 400;

	private class InnerDummy {
		public void paint(Graphics g) {
			double hmin = Double.MAX_VALUE, hmax = 
Double.MIN_VALUE;
			double vmin = 0, vmax = 0;

			for (int i = 0; i &lt; h.length; i++) {
				g
						.drawLine(
								i * width / 
h.length,
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height),
								(int) ((i + 5 
* v[i] / vmax) * width / h.length),
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height));
			}

		}
	}
}

// END
Heiko, can you please provide your code formatter settings.
My code formatter setting is "Default [built-in]" without any changes.
Choosing "Java Conventions [built-in]" doesn't change the behaviour.
I use Eclipse 3.0M9.



*** This bug has been marked as a duplicate of 45159 ***</WithStack>
    <WithOutStack>Some code pieces are formatted weirdly (I don't know how else to put it).

PLS find an example below. The code itself is irrelevant, my point is that 
g.drawLine is picked to pieces. If you try it out, note how e.g. removing the 
first occurrence of "/ 2" makes a big difference.

// BEGIN

import java.awt.Graphics;

public class Dummy {

	double[] h;
	double[] H;
	double[] v;

	int width = 600;
	int height = 400;

	private class InnerDummy {
		public void paint(Graphics g) {
			double hmin = Double.MAX_VALUE, hmax = 
Double.MIN_VALUE;
			double vmin = 0, vmax = 0;

			for (int i = 0; i &lt; h.length; i++) {
				g
						.drawLine(
								i * width / 
h.length,
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height),
								(int) ((i + 5 
* v[i] / vmax) * width / h.length),
								(int) ((hmax - 
h[i] - H[i] / 2) / (hmax - hmin) * height));
			}

		}
	}
}

// END
Heiko, can you please provide your code formatter settings.
My code formatter setting is "Default [built-in]" without any changes.
Choosing "Java Conventions [built-in]" doesn't change the behaviour.
I use Eclipse 3.0M9.



*** This bug has been marked as a duplicate of 45159 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65975" />
    <CreationDate amount="2004-06-07 10:41:00 -0400" />
    <DupId amount="70077" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Ctrl+C broken in Java editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. navigate the text cursor to the beginning of line 40</Line>
          <Line>2. Using SHIFT+DownArrow, select lines 40-42</Line>
          <Line>3. Press Ctrl+C to copy the selection to the clipboard</Line>
          <Line>4. Navigate to the beginning of line 43</Line>
          <Line>5. Press Ctrl+V to paste the clipboard contents</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Pressing Ctrl+C inside a Java editor doesn't always copy the selection to the 
clipboard.  Instead, the clipboard is empty.  Sometimes it works when pressing 
Ctrl+C again, but very often I have to hold down Ctrl+C until an error message 
pops up:
Title: "Problem Copying to Clipboard"
Message: "There was a problem when accessing the system clipboard. Retry?"
If I then click Yes, nothing gets copied to the clipboard, but if I click No 
instead, the copy operation is successful.

I am not sure when the problem started to occur, but around 3.0M8 or M9 (it 
didn't happen in early milestones, up to about M7; definitely not in 2.x).  It 
was present in RC1 and still exists in I20040604.

System info:

Dell Precision Workstation 650 (2x Intel Xeon 2.6GHz, 2GB RAM) running Windows 
XP Professional.

Note: this bug happens to a number of colleagues of mine who use similarly 
spec'ed machines.  It does not happen on my home machine which is a single-CPU.

Also, I'm not sure if this is related, but: I seem to remember that on my Dell 
Precision, Adobe Acrobat Reader sometimes has problems copying text into the 
clipboard, coming up with a "Clipboard error" -- could that be a Windows 
problem??

This bug is really annoying, please fix for 3.0 if you can :)

Many thanks!
*** Bug 65983 has been marked as a duplicate of this bug. ***
The main reason for this problem was bug 57868.

What you say:
&gt;If I then click Yes, nothing gets copied to the clipboard, but if I click No 
&gt;instead, the copy operation is successful.
sounds like a bug to me: if you click yes it should try again and if you say no
it should discard the copy operation.

Martin, this dialog comes from your ClipboardOperationAction. The strange
behavior that after pressing NO it copied text is because you first call
fOperationTarget.doOperation(fOperationCode) which triggers StyleText.copy().
This seems strange to me. See also bug 66005.




I don't know if this helps, but: Ctrl+X always works (cuts the selection into 
the clipboard), I find myself using this as a workaround to the Ctrl+C issue.

Also: at first I thought the bug would manifest itself only with the keyboard 
shortcut, but it turns out that a right-click "Copy" on the selection also 
fails from time to time.

I haven't noticed the problem to be correlated to the way in which I do the 
text selection.  Code folding is turned off.

Happens in the Java editor only, there's no issue copying text in other 
editors.

You're right, the dialog doesn't really make sense as I only add an extra data
element to the clipboard. So if if fails you still have the original content.

I removed my dialog and now silently fail (as it seesm also be done in the
styled text widget)

Howenever, I'm moving this bug to SWT. The special setup used is interesting
(2x Intel Xeon 2.6GHz, 2GB RAM) running Windows XP Professional.
Another clipboard failure.
I just had another clipboard problem (I think).  This time I did Team-&gt;Create 
Patch (CVS), and left 'Save to Clipboard' selected.  The error message was 
something along the lines, "an SWT error occurred and it is recommended to 
exit the Workbench", which strongly reminded me of the error message I got 
using Ctrl+C with earlier builds (~M8).

Also, it looks like I can work around the Ctrl+C bug in the Java editor, by 
pressing Ctrl+Insert instead which seems to work OK.

Do you use any clipboard monitoring applications such as Autoclip or ClipMagic 
or Reget Deluxe?  If so, try turning it off and see if the problem goes away.  
Report the application name here and I will try to recreate your problem.
No I'm afraid I don't use any of these.  I am running Outlook 2002, but have 
turned off its office clipboard (the thingy that keeps collecting anything one 
copies to the clipboard).  I haven't tried running Eclipse in isolation (i.e. 
without anything else running that might interfere).  Will give that a try 
when I'm back in the office.

*** Bug 64430 has been marked as a duplicate of this bug. ***
I have released a change to Clipboard that will be included in tonight's 8PM 
build.  Could you please give this a try and see if it solves your Clipboard 
problem?
I have released another change to clipboard. It will be part of I20040617 4PM.

I am going to close this bug report as fixed.  Please reopen it if you 
continue to have this problem.
Hi I've tried the 15062004 8pm build and it is looking good!  I had only 
limited time for testing, but haven't had any clipboard probs so far...

Many thanks to the whole team for developing this great product, and for the 
fabulous support you've given!

No problems yet for me either. Thanks a bunch!
problem re-appears in RC3, although seems to be happening less frequently.
Matt, please identify steps to make this happen.  Is there an entry in the .log 
file related to this problem?  Downgrading severity because I do not think this 
happens very often any more.
Created attachment 12786
test file for reproducing Ctrl+C bug

I've created this little test class as the only resource in a new workspace in
RC3 (I200406152000).

Steps to reproduce the bug:
1. navigate the text cursor to the beginning of line 40
2. Using SHIFT+DownArrow, select lines 40-42
3. Press Ctrl+C to copy the selection to the clipboard
4. Navigate to the beginning of line 43
5. Press Ctrl+V to paste the clipboard contents

This normally works fine, but occasionally nothing gets copied to the clipboard
(step 5 does nothing), in other words one has to do this several times before
the bug becomes apparent.  Note that Eclipse no longer gives any SWT error
message if the copy operation fails (in contrast to previous builds), neither
could I find anything in the .log file.
Also note that, as I reported earlier (#6), pressing Ctrl+Insert instead of 
Ctrl+C will _always_ successfully copy to clipboard.

I just had this happen again in the final 3.0 release. Happily coding along and
suddenly c-C didn't copy. c-X worked, and the data went to the paste buffer (so
c-X, c-V, c-V is my current work-around). c-C *does* affect the buffer -- if I
use c-C after c-X, the buffer is cleared and c-V pastes nothing.
see also bug 70077


*** This bug has been marked as a duplicate of 70077 ***</WithStack>
    <WithOutStack>Pressing Ctrl+C inside a Java editor doesn't always copy the selection to the 
clipboard.  Instead, the clipboard is empty.  Sometimes it works when pressing 
Ctrl+C again, but very often I have to hold down Ctrl+C until an error message 
pops up:
Title: "Problem Copying to Clipboard"
Message: "There was a problem when accessing the system clipboard. Retry?"
If I then click Yes, nothing gets copied to the clipboard, but if I click No 
instead, the copy operation is successful.

I am not sure when the problem started to occur, but around 3.0M8 or M9 (it 
didn't happen in early milestones, up to about M7; definitely not in 2.x).  It 
was present in RC1 and still exists in I20040604.

System info:

Dell Precision Workstation 650 (2x Intel Xeon 2.6GHz, 2GB RAM) running Windows 
XP Professional.

Note: this bug happens to a number of colleagues of mine who use similarly 
spec'ed machines.  It does not happen on my home machine which is a single-CPU.

Also, I'm not sure if this is related, but: I seem to remember that on my Dell 
Precision, Adobe Acrobat Reader sometimes has problems copying text into the 
clipboard, coming up with a "Clipboard error" -- could that be a Windows 
problem??

This bug is really annoying, please fix for 3.0 if you can :)

Many thanks!
*** Bug 65983 has been marked as a duplicate of this bug. ***
The main reason for this problem was bug 57868.

What you say:
&gt;If I then click Yes, nothing gets copied to the clipboard, but if I click No 
&gt;instead, the copy operation is successful.
sounds like a bug to me: if you click yes it should try again and if you say no
it should discard the copy operation.

Martin, this dialog comes from your ClipboardOperationAction. The strange
behavior that after pressing NO it copied text is because you first call
fOperationTarget.doOperation(fOperationCode) which triggers StyleText.copy().
This seems strange to me. See also bug 66005.




I don't know if this helps, but: Ctrl+X always works (cuts the selection into 
the clipboard), I find myself using this as a workaround to the Ctrl+C issue.

Also: at first I thought the bug would manifest itself only with the keyboard 
shortcut, but it turns out that a right-click "Copy" on the selection also 
fails from time to time.

I haven't noticed the problem to be correlated to the way in which I do the 
text selection.  Code folding is turned off.

Happens in the Java editor only, there's no issue copying text in other 
editors.

You're right, the dialog doesn't really make sense as I only add an extra data
element to the clipboard. So if if fails you still have the original content.

I removed my dialog and now silently fail (as it seesm also be done in the
styled text widget)

Howenever, I'm moving this bug to SWT. The special setup used is interesting
(2x Intel Xeon 2.6GHz, 2GB RAM) running Windows XP Professional.
Another clipboard failure.
I just had another clipboard problem (I think).  This time I did Team-&gt;Create 
Patch (CVS), and left 'Save to Clipboard' selected.  The error message was 
something along the lines, "an SWT error occurred and it is recommended to 
exit the Workbench", which strongly reminded me of the error message I got 
using Ctrl+C with earlier builds (~M8).

Also, it looks like I can work around the Ctrl+C bug in the Java editor, by 
pressing Ctrl+Insert instead which seems to work OK.

Do you use any clipboard monitoring applications such as Autoclip or ClipMagic 
or Reget Deluxe?  If so, try turning it off and see if the problem goes away.  
Report the application name here and I will try to recreate your problem.
No I'm afraid I don't use any of these.  I am running Outlook 2002, but have 
turned off its office clipboard (the thingy that keeps collecting anything one 
copies to the clipboard).  I haven't tried running Eclipse in isolation (i.e. 
without anything else running that might interfere).  Will give that a try 
when I'm back in the office.

*** Bug 64430 has been marked as a duplicate of this bug. ***
I have released a change to Clipboard that will be included in tonight's 8PM 
build.  Could you please give this a try and see if it solves your Clipboard 
problem?
I have released another change to clipboard. It will be part of I20040617 4PM.

I am going to close this bug report as fixed.  Please reopen it if you 
continue to have this problem.
Hi I've tried the 15062004 8pm build and it is looking good!  I had only 
limited time for testing, but haven't had any clipboard probs so far...

Many thanks to the whole team for developing this great product, and for the 
fabulous support you've given!

No problems yet for me either. Thanks a bunch!
problem re-appears in RC3, although seems to be happening less frequently.
Matt, please identify steps to make this happen.  Is there an entry in the .log 
file related to this problem?  Downgrading severity because I do not think this 
happens very often any more.
Created attachment 12786
test file for reproducing Ctrl+C bug

I've created this little test class as the only resource in a new workspace in
RC3 (I200406152000).

Steps to reproduce the bug:
1. navigate the text cursor to the beginning of line 40
2. Using SHIFT+DownArrow, select lines 40-42
3. Press Ctrl+C to copy the selection to the clipboard
4. Navigate to the beginning of line 43
5. Press Ctrl+V to paste the clipboard contents

This normally works fine, but occasionally nothing gets copied to the clipboard
(step 5 does nothing), in other words one has to do this several times before
the bug becomes apparent.  Note that Eclipse no longer gives any SWT error
message if the copy operation fails (in contrast to previous builds), neither
could I find anything in the .log file.
Also note that, as I reported earlier (#6), pressing Ctrl+Insert instead of 
Ctrl+C will _always_ successfully copy to clipboard.

I just had this happen again in the final 3.0 release. Happily coding along and
suddenly c-C didn't copy. c-X worked, and the data went to the paste buffer (so
c-X, c-V, c-V is my current work-around). c-C *does* affect the buffer -- if I
use c-C after c-X, the buffer is cleared and c-V pastes nothing.
see also bug 70077


*** This bug has been marked as a duplicate of 70077 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65976" />
    <CreationDate amount="2004-06-07 10:41:00 -0400" />
    <DupId amount="64182" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>refactoring extension point marked as warning in plugin.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In the "org.eclipse.ltk.core.refactoring.renameParticipants" extension point
as it appears in the jdt.debug.ui plugin,

The "enablement" element is marked as a warning.
...
  &lt;enablement&gt;
           &lt;with variable="affectedNatures"&gt;
             &lt;iterate operator="or"&gt;
               &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
             &lt;/iterate&gt;
           &lt;/with&gt;
           &lt;with variable="element"&gt;
   	         &lt;instanceof value="org.eclipse.jdt.core.IType"/&gt;
           &lt;/with&gt;
   &lt;/enablement&gt;
...

Is this because the schema is not up to date?
Move to PDE/UI.
Although there might be PDE manifest validation problems, the schema for said 
extension point is not up-to-date.

Darin, let's start there first, and move back to PDE afterwards to address the 
validation problem, if any remains.
Looks like a refactoring issue. Assigning to Luc.
Reassigning to Dirk, the schema is defined by the refactoring framework.
I think this problem is related to bug 60508 and bug 64182.
Wassim, the schema for the refactoring extension points are up-to-date. 

If I open jdt.debug.ui in my workspace with ltk.core &amp; expression in source 
the extension doesn't show any warning. IMO this is a dup of bug 64182.

Wassim, if you think it isn't up-to-date please let me know what is out-dated.


*** This bug has been marked as a duplicate of 64182 ***</WithStack>
    <WithOutStack>In the "org.eclipse.ltk.core.refactoring.renameParticipants" extension point
as it appears in the jdt.debug.ui plugin,

The "enablement" element is marked as a warning.
...
  &lt;enablement&gt;
           &lt;with variable="affectedNatures"&gt;
             &lt;iterate operator="or"&gt;
               &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
             &lt;/iterate&gt;
           &lt;/with&gt;
           &lt;with variable="element"&gt;
   	         &lt;instanceof value="org.eclipse.jdt.core.IType"/&gt;
           &lt;/with&gt;
   &lt;/enablement&gt;
...

Is this because the schema is not up to date?
Move to PDE/UI.
Although there might be PDE manifest validation problems, the schema for said 
extension point is not up-to-date.

Darin, let's start there first, and move back to PDE afterwards to address the 
validation problem, if any remains.
Looks like a refactoring issue. Assigning to Luc.
Reassigning to Dirk, the schema is defined by the refactoring framework.
I think this problem is related to bug 60508 and bug 64182.
Wassim, the schema for the refactoring extension points are up-to-date. 

If I open jdt.debug.ui in my workspace with ltk.core &amp; expression in source 
the extension doesn't show any warning. IMO this is a dup of bug 64182.

Wassim, if you think it isn't up-to-date please let me know what is out-dated.


*** This bug has been marked as a duplicate of 64182 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65977" />
    <CreationDate amount="2004-06-07 10:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Navigator] keyboard selection in tree makes selection jump</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>- navigator view (for demonstration purposes)</Line>
          <Line>- have enough nodes open so you can scroll around vertically a couple times the</Line>
          <Line>size of the viewpart</Line>
          <Line>- go to the top of the tree</Line>
          <Line>- press and hold the DOWN cursor for a while, then switch to UP and let go</Line>
          <Line>-&gt; Observe: the selection in the tree jumps around after letting go.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- go to the last item in the navigator tree</Line>
          <Line>- go up a couple of items</Line>
          <Line>- press and hold PAGE_DOWN</Line>
          <Line>-&gt; sometimes, the selection will only go to the second last item, or flicker</Line>
          <Line>between the two last items</Line>
          <Line>-&gt; moving the mouse thereafter also lets the selection jump around</Line>
          <Line>Sounds like GTK-specific behaviour.  I assume you don't have single click open</Line>
          <Line>mode selected in the preferences.</Line>
          <Line>CAR to reproduce and assess.  Could be native behavior or Eclipse playing with</Line>
          <Line>the Tree.  Could also be us ...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I200406070800

Not sure whether this is UI or SWT, please forward as needed.

- navigator view (for demonstration purposes)
- have enough nodes open so you can scroll around vertically a couple times the
size of the viewpart
- go to the top of the tree
- press and hold the DOWN cursor for a while, then switch to UP and let go
-&gt; Observe: the selection in the tree jumps around after letting go. 

It seems not just to repeat events that have been put into the keyboard queue.
For example, when going UP for a while, letting go the UP key will cause the
selection to go down a couple of entries. 

I also found this related behavior:
- go to the last item in the navigator tree
- go up a couple of items
- press and hold PAGE_DOWN
-&gt; sometimes, the selection will only go to the second last item, or flicker
between the two last items
-&gt; moving the mouse thereafter also lets the selection jump around
Sounds like GTK-specific behaviour.  I assume you don't have single click open
mode selected in the preferences.
CAR to reproduce and assess.  Could be native behavior or Eclipse playing with 
the Tree.  Could also be us ...</WithStack>
    <WithOutStack>I200406070800

Not sure whether this is UI or SWT, please forward as needed.

- navigator view (for demonstration purposes)
- have enough nodes open so you can scroll around vertically a couple times the
size of the viewpart
- go to the top of the tree
- press and hold the DOWN cursor for a while, then switch to UP and let go
-&gt; Observe: the selection in the tree jumps around after letting go. 

It seems not just to repeat events that have been put into the keyboard queue.
For example, when going UP for a while, letting go the UP key will cause the
selection to go down a couple of entries. 

I also found this related behavior:
- go to the last item in the navigator tree
- go up a couple of items
- press and hold PAGE_DOWN
-&gt; sometimes, the selection will only go to the second last item, or flicker
between the two last items
-&gt; moving the mouse thereafter also lets the selection jump around
Sounds like GTK-specific behaviour.  I assume you don't have single click open
mode selected in the preferences.
CAR to reproduce and assess.  Could be native behavior or Eclipse playing with 
the Tree.  Could also be us ...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65978" />
    <CreationDate amount="2004-06-07 10:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ReferenceContext of problems inside a method with a wrong signature is not correct</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="14" end="30" />
        <code>public class X {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="31" end="73" />
        <code>void foo(){
		foo()
	
	void bar(){
	
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 3.0RC1

public class X {
	void foo(){
		foo()
	
	void bar(){
	
	}
}

Diagnose for methods with wrong signature is done during diet parse. So the 
reference context of the produced IProblem is a CompilationUnitDeclaration.

Reference context must be a CompilationUnitDeclaration for problem inside the 
signature and a MethodDeclaration for problem inside the body.
Created attachment 11697
jdtcore patch

This patch change the reference context if a problem is inside method body.

This patch needs to be improve (test DietRecoverytest#test31 fails).
This patch could add some sideeffect.

Post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>build 3.0RC1

public class X {
	void foo(){
		foo()
	
	void bar(){
	
	}
}

Diagnose for methods with wrong signature is done during diet parse. So the 
reference context of the produced IProblem is a CompilationUnitDeclaration.

Reference context must be a CompilationUnitDeclaration for problem inside the 
signature and a MethodDeclaration for problem inside the body.
Created attachment 11697
jdtcore patch

This patch change the reference context if a problem is inside method body.

This patch needs to be improve (test DietRecoverytest#test31 fails).
This patch could add some sideeffect.

Post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65979" />
    <CreationDate amount="2004-06-07 10:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"File changed outside of this compare editor" when saving from within editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) do a sync with HEAD when you have outgoing changes</Line>
          <Line>2) open one of the changes by doubleclickin in the sync view.  This opens a</Line>
          <Line>compare editor</Line>
          <Line>3) make some changes in the file using the compare editor</Line>
          <Line>4) ctrl-s to save</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>200406042000
Lets try this again...

200406042000

1) do a sync with HEAD when you have outgoing changes
2) open one of the changes by doubleclickin in the sync view.  This opens a
compare editor
3) make some changes in the file using the compare editor
4) ctrl-s to save


You are prompted with a dialog warning you that the file has been saved outside
of the compare editor.
Looks like a regression between I20040604_1600 and I20040604_2000

Since I didn't change anything in that area, moving to platform/team for comment.
(Please note: dialog only appears if global Save action is used in Compare editor launched from Synch 
view. I could not get the dialog with "Compare with Each Other")
This was a side-effect of a new fix for keeping compare editors in sync with
file changes. fixed.
*** Bug 66366 has been marked as a duplicate of this bug. ***
*** Bug 66414 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>200406042000
Lets try this again...

200406042000

1) do a sync with HEAD when you have outgoing changes
2) open one of the changes by doubleclickin in the sync view.  This opens a
compare editor
3) make some changes in the file using the compare editor
4) ctrl-s to save


You are prompted with a dialog warning you that the file has been saved outside
of the compare editor.
Looks like a regression between I20040604_1600 and I20040604_2000

Since I didn't change anything in that area, moving to platform/team for comment.
(Please note: dialog only appears if global Save action is used in Compare editor launched from Synch 
view. I could not get the dialog with "Compare with Each Other")
This was a side-effect of a new fix for keeping compare editors in sync with
file changes. fixed.
*** Bug 66366 has been marked as a duplicate of this bug. ***
*** Bug 66414 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65980" />
    <CreationDate amount="2004-06-07 10:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PerspectiveBar] Perspective bar chevron does not disappear</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open a new workspace</Line>
          <Line>2) Open three perspectives, or enough to cause a chevron to appear on the</Line>
          <Line>perspective bar</Line>
          <Line>3) Right click on perspective bar, and click "Show Text"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20040607

1) Open a new workspace
2) Open three perspectives, or enough to cause a chevron to appear on the
perspective bar
3) Right click on perspective bar, and click "Show Text"

-&gt; The chevron does not go away, even though it is no longer needed. Clicking on
the chevron has no effect.
We have seen something similar on the MAC (see bug 62180).  But I'm not sure 
if this is a dup.  
The fix for bug 65766 also fixed this issue. Verified for RC3.</WithStack>
    <WithOutStack>Build: I20040607

1) Open a new workspace
2) Open three perspectives, or enough to cause a chevron to appear on the
perspective bar
3) Right click on perspective bar, and click "Show Text"

-&gt; The chevron does not go away, even though it is no longer needed. Clicking on
the chevron has no effect.
We have seen something similar on the MAC (see bug 62180).  But I'm not sure 
if this is a dup.  
The fix for bug 65766 also fixed this issue. Verified for RC3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65981" />
    <CreationDate amount="2004-06-07 10:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>empty compare viewer has no focus</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341145293">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)</Frame>
          <Frame depth="1">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:307)</Frame>
          <Frame depth="2">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="3">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="4">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="5">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="6">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="7">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="16">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="17">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="18">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="23">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="24">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)</Frame>
          <Frame depth="25">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)</Frame>
          <Frame depth="32">org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)</Frame>
          <Frame depth="33">org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)</Frame>
          <Frame depth="34">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)</Frame>
          <Frame depth="35">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)</Frame>
          <Frame depth="36">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="37">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)</Frame>
          <Frame depth="38">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="39">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="40">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="41">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="42">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="43">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="44">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="45">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="47">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="48">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="49">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="50">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="51">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="52">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="53">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="54">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="59">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="60">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)</Frame>
          <Frame depth="61">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)</Frame>
          <Frame depth="64">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)</Frame>
          <Frame depth="68">org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)</Frame>
          <Frame depth="69">org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)</Frame>
          <Frame depth="70">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)</Frame>
          <Frame depth="71">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)</Frame>
          <Frame depth="72">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="73">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)</Frame>
          <Frame depth="74">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="75">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="76">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="77">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="78">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="79">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="80">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="81">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="82">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="83">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="84">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="85">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="86">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="87">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="88">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="89">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="90">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="91">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="92">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="93">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="94">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="95">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="96">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)</Frame>
          <Frame depth="97">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)</Frame>
          <Frame depth="98">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)</Frame>
          <Frame depth="99">org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)</Frame>
          <Frame depth="100">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="101">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)</Frame>
          <Frame depth="102">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)</Frame>
          <Frame depth="103">org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)</Frame>
          <Frame depth="104">org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)</Frame>
          <Frame depth="105">org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)</Frame>
          <Frame depth="106">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)</Frame>
          <Frame depth="107">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)</Frame>
          <Frame depth="108">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="109">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)</Frame>
          <Frame depth="110">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="111">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="112">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="113">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="114">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="115">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="116">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="117">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="118">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="119">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="120">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="121">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="122">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="123">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="124">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="125">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="126">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="127">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="128">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="129">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="130">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="131">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="132">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)</Frame>
          <Frame depth="133">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)</Frame>
          <Frame depth="134">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)</Frame>
          <Frame depth="135">org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)</Frame>
          <Frame depth="136">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="137">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)</Frame>
          <Frame depth="138">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)</Frame>
          <Frame depth="139">org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)</Frame>
          <Frame depth="140">org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)</Frame>
          <Frame depth="141">org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)</Frame>
          <Frame depth="142">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)</Frame>
          <Frame depth="143">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)</Frame>
          <Frame depth="144">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="145">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)</Frame>
          <Frame depth="146">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="147">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="148">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="149">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="150">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="151">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="152">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="153">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="154">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="155">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="156">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="157">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="158">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="159">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="160">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="161">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="162">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="163">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="164">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="165">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="166">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="167">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)</Frame>
          <Frame depth="168">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)</Frame>
          <Frame depth="169">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)</Frame>
          <Frame depth="170">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)</Frame>
          <Frame depth="171">org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)</Frame>
          <Frame depth="172">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="173">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)</Frame>
          <Frame depth="174">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)</Frame>
          <Frame depth="175">org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)</Frame>
          <Frame depth="176">org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)</Frame>
          <Frame depth="177">org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)</Frame>
          <Frame depth="178">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)</Frame>
          <Frame depth="179">org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)</Frame>
          <Frame depth="180">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="181">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)</Frame>
          <Frame depth="182">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="183">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="184">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="185">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="186">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="187">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="188">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="189">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="190">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="191">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="192">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="193">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="194">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="195">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="196">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="197">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="198">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="199">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="200">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="201">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="202">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="203">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="204">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="205">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:124)</Frame>
          <Frame depth="206">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="207">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:137)</Frame>
          <Frame depth="208">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)</Frame>
          <Frame depth="209">org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:54)</Frame>
          <Frame depth="210">org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)</Frame>
          <Frame depth="211">org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:108)</Frame>
          <Frame depth="212">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:175)</Frame>
          <Frame depth="213">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:128)</Frame>
          <Frame depth="214">org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)</Frame>
          <Frame depth="215">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)</Frame>
          <Frame depth="216">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="217">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="218">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="219">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="220">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:469)</Frame>
          <Frame depth="221">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:887)</Frame>
          <Frame depth="222">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:928)</Frame>
          <Frame depth="223">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:546)</Frame>
          <Frame depth="224">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:494)</Frame>
          <Frame depth="225">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:259)</Frame>
          <Frame depth="226">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="227">org.eclipse.swt.widgets.Display.filterEvent(Display.java:949)</Frame>
          <Frame depth="228">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:943)</Frame>
          <Frame depth="229">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)</Frame>
          <Frame depth="230">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)</Frame>
          <Frame depth="231">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2305)</Frame>
          <Frame depth="232">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1801)</Frame>
          <Frame depth="233">org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:439)</Frame>
          <Frame depth="234">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1194)</Frame>
          <Frame depth="235">org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)</Frame>
          <Frame depth="236">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="237">org.eclipse.swt.widgets.Display.eventProc(Display.java:815)</Frame>
          <Frame depth="238">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="239">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2222)</Frame>
          <Frame depth="240">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="241">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="242">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="243">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="244">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="245">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="246">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="247">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="248">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="249">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="250">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="251">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="252">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="253">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="254">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341145293">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">java.lang.NullPointerException.&lt;init&gt;(NullPointerException.java:60)</Frame>
          <Frame depth="3">org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)</Frame>
          <Frame depth="4">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:305)</Frame>
          <Frame depth="5">org.eclipse.compare.EditionSelectionDialog.setInput(EditionSelectionDialog.java:1080)</Frame>
          <Frame depth="6">org.eclipse.compare.EditionSelectionDialog.feedInput(EditionSelectionDialog.java:1115)</Frame>
          <Frame depth="7">org.eclipse.compare.EditionSelectionDialog.access$15(EditionSelectionDialog.java:1088)</Frame>
          <Frame depth="8">org.eclipse.compare.EditionSelectionDialog$7.widgetSelected(EditionSelectionDialog.java:782)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.runEventLoop(Window.java:707)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.open(Window.java:685)</Frame>
          <Frame depth="16">org.eclipse.compare.EditionSelectionDialog.selectEdition(EditionSelectionDialog.java:451)</Frame>
          <Frame depth="17">org.eclipse.compare.internal.EditionAction.doFromHistory(EditionAction.java:144)</Frame>
          <Frame depth="18">org.eclipse.compare.internal.EditionAction.run(EditionAction.java:95)</Frame>
          <Frame depth="19">org.eclipse.compare.internal.BaseCompareAction.run(BaseCompareAction.java:26)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:298)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:946)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:896)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:810)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1443)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1414)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:271)</Frame>
          <Frame depth="31">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="33">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="38">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- smoke test, replace from local history</Line>
          <Line>- compare viewer comes up emtpy (ok, no changes)</Line>
          <Line>-&gt; press Esc, Tab, Ctrl+Tab etc: no reaction</Line>
          <Line>-&gt; the keyboard focus is somehow lost</Line>
          <Line>-&gt; clicking in the top left pane gives the focus to the dialog, I can then Tab</Line>
          <Line>to the Cancel button</Line>
          <Line>Oh, I found a number of these in the log:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200406070800 + ZRH plugin-export

- smoke test, replace from local history
- compare viewer comes up emtpy (ok, no changes)
-&gt; press Esc, Tab, Ctrl+Tab etc: no reaction
-&gt; the keyboard focus is somehow lost
-&gt; clicking in the top left pane gives the focus to the dialog, I can then Tab
to the Cancel button
Oh, I found a number of these in the log:

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:30:08.986
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:307)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)
        at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)
        at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)
        at
org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)
        at
org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)
        at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)
        at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)
        at
org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)
        at
org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)
        at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)
        at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)
        at
org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)
        at
org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)
        at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)
        at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)
        at
org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)
        at
org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:262)
        at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:397)
        at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:236)
        at
org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:772)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:806)
        at
org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:783)
        at
org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:962)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.doDiff(TextMergeViewer.java:2258)
        at
org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:1642)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:661)
        at
org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:558)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:302)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:124)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:137)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)
        at
org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:54)
        at
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)
        at
org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:108)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:175)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:128)
        at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
        at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:469)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:887)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:928)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:546)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:494)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:259)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:949)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:943)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2305)
        at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1801)
        at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:439)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1194)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
        at org.eclipse.swt.widgets.Display.eventProc(Display.java:815)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2222)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:638)
        at org.eclipse.core.launcher.Main.main(Main.java:622)

I200410190941 runtime

I found a similar stacktrace after canceling the 'compute differences' job.

java.lang.NullPointerException
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.NullPointerException.&lt;init&gt;(NullPointerException.java:60)
	at org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)
	at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:305)
	at
org.eclipse.compare.EditionSelectionDialog.setInput(EditionSelectionDialog.java:1080)
	at
org.eclipse.compare.EditionSelectionDialog.feedInput(EditionSelectionDialog.java:1115)
	at
org.eclipse.compare.EditionSelectionDialog.access$15(EditionSelectionDialog.java:1088)
	at
org.eclipse.compare.EditionSelectionDialog$7.widgetSelected(EditionSelectionDialog.java:782)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:707)
	at org.eclipse.jface.window.Window.open(Window.java:685)
	at
org.eclipse.compare.EditionSelectionDialog.selectEdition(EditionSelectionDialog.java:451)
	at org.eclipse.compare.internal.EditionAction.doFromHistory(EditionAction.java:144)
	at org.eclipse.compare.internal.EditionAction.run(EditionAction.java:95)
	at org.eclipse.compare.internal.BaseCompareAction.run(BaseCompareAction.java:26)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:298)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:946)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:896)
	at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:810)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1443)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1414)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:271)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

fixed for N20041026</WithStack>
    <WithOutStack>I200406070800 + ZRH plugin-export

- smoke test, replace from local history
- compare viewer comes up emtpy (ok, no changes)
-&gt; press Esc, Tab, Ctrl+Tab etc: no reaction
-&gt; the keyboard focus is somehow lost
-&gt; clicking in the top left pane gives the focus to the dialog, I can then Tab
to the Cancel button
Oh, I found a number of these in the log:

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:30:08.986
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0

I200410190941 runtime

I found a similar stacktrace after canceling the 'compute differences' job.



fixed for N20041026</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65982" />
    <CreationDate amount="2004-06-07 11:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PerspectiveBar] RC1 - Perspective bar items are created on left</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) the most recently opened or switched to perspectives are more likely NOT to</Line>
          <Line>be bumped off to the right</Line>
          <Line>2) there is a lot less flicker and flash in the event that we try to always</Line>
          <Line>keep the currently selected item visible as when it is on the left it is most</Line>
          <Line>likely to remain visible when resizing the bar, or the shell</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Didn't try M9, but in RC1, when you open a new perspective, the perspective item
in the perspective bar, appears on the left of those already opened pushing away
them.
In M8 the new item were instead appearing on the right.
In Rc2 on the right, and in RC3 appearing on the left again.

Aarrrgghhh!!

PB
see https://bugs.eclipse.org/bugs/show_bug.cgi?id=65766#c19 the desired 
behaviour was adding on the right, but due to other limitations this solution 
did not produce an acceptable result
omg :-((
Sorry to bother you again Michael, but i'm not sure to understand.
Are you saying that this is temporary behaviour, waiting for GTK to fix their
problems, and then you'll revert again to the "right" :) behaviour, or that
we'll have to stick forever with the "wrong" :( behaviour?
Thanks, Gabriele.
Oh dear.

This wrong behaviour is er...well, wrong.  Surely we can't be stuck with this?

Please can we re-open this?

Everyone please vote for this!

PB
This bug clearly has my vote. I'm all for reopening it again.
I'm not saying that the current behaviour is wrong.  There are pros and cons 
to both approaches.  Adding on the left has some advantages, such as: 

1) the most recently opened or switched to perspectives are more likely NOT to 
be bumped off to the right
2) there is a lot less flicker and flash in the event that we try to always 
keep the currently selected item visible as when it is on the left it is most 
likely to remain visible when resizing the bar, or the shell

There are bugs on MAC and GTK that made it impossible to persue the opposite 
approach, if these are fixed we would be able to revisit this.
&gt; 1) the most recently opened or switched to perspectives are more likely NOT to 
&gt; be bumped off to the right

Granted.

&gt; 2) there is a lot less flicker and flash in the event that we try to always 
&gt; keep the currently selected item visible as when it is on the left it is most 
&gt; likely to remain visible when resizing the bar, or the shell

In this respect, I don't really see why the current behaviour should be superior
to the old behaviour of adding to the right. I mean, to open a new perspective I
have to at least drop down some menu or even open the perspective chooser
window. There's a lot more GUI activity going on in those, so that little button
activity is kind of negligible.

&gt; There are bugs on MAC and GTK that made it impossible to persue the opposite 
&gt; approach, if these are fixed we would be able to revisit this.

So, in that case, shouldn't the bug rather be marked as LATER instead of WONTFIX?

Ok Michael, if some OS platforms bugs prevent from going the old way, i
understand your point, but please consider the following.
It is not a big problem for me right now, even if i consider this behaviour
counterintuitive, i'm fortunate enough to be working, since a few days, with a
21" LCD screen and i've plenty of screen estate, but all the contractors working
here are still using 15" screens and for them it is a problem.
What i describe here is a real scenario, while working on a project i have seen
that normally there are opened the perpectives "debug", "java" and "resources"
but on a 15" screen only "debug" and "java" are visible in the switcher bar; to
reach "resources" you have to use the chevron.
Now you do a simple synchronize action, the "team sync" perspective is activated
and voilà the "java" perspective button goes out of screen.
Now, while going to "synch" perspective is the result of an action in a context
menu, going back to "java" perspective requires that i click on the chevron
(that by the way is too small, see bug 66071) and then click on the menu selection.
So what it happens is that the perspectives that are opened first and that are
more used tends to be constantly pushed out of screen by seldom used
perspectives and more work is required to reach the more used perspectives than
the seldom ones.
Now, if i go back in old glorious days when i was working for IBM, our usability
review team would have hit my fingers with a stick for that.

So to conclude, if you prefer we can consider this to be not a bug, but in this
case i'll open an enhancement request to have back the old behaviuor, so that it
can stand as a reminder to check for the resolution of those OS problems.

Please tell me what you think.
Regards,  Gabriele.

PS. It's just coming to my mind that a possible bypass could be that perspective
buttons are made movable like the editor tabs, so that we can move and group
them at will, could it be possible?
understood, certainly lots of enhancements are possible.  In the final week 
before RC3, we did not have the time to explore all of them, but likely will 
look for ways to improve in the future as we always strive to do.
*** Bug 62778 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Didn't try M9, but in RC1, when you open a new perspective, the perspective item
in the perspective bar, appears on the left of those already opened pushing away
them.
In M8 the new item were instead appearing on the right.
In Rc2 on the right, and in RC3 appearing on the left again.

Aarrrgghhh!!

PB
see https://bugs.eclipse.org/bugs/show_bug.cgi?id=65766#c19 the desired 
behaviour was adding on the right, but due to other limitations this solution 
did not produce an acceptable result
omg :-((
Sorry to bother you again Michael, but i'm not sure to understand.
Are you saying that this is temporary behaviour, waiting for GTK to fix their
problems, and then you'll revert again to the "right" :) behaviour, or that
we'll have to stick forever with the "wrong" :( behaviour?
Thanks, Gabriele.
Oh dear.

This wrong behaviour is er...well, wrong.  Surely we can't be stuck with this?

Please can we re-open this?

Everyone please vote for this!

PB
This bug clearly has my vote. I'm all for reopening it again.
I'm not saying that the current behaviour is wrong.  There are pros and cons 
to both approaches.  Adding on the left has some advantages, such as: 

1) the most recently opened or switched to perspectives are more likely NOT to 
be bumped off to the right
2) there is a lot less flicker and flash in the event that we try to always 
keep the currently selected item visible as when it is on the left it is most 
likely to remain visible when resizing the bar, or the shell

There are bugs on MAC and GTK that made it impossible to persue the opposite 
approach, if these are fixed we would be able to revisit this.
&gt; 1) the most recently opened or switched to perspectives are more likely NOT to 
&gt; be bumped off to the right

Granted.

&gt; 2) there is a lot less flicker and flash in the event that we try to always 
&gt; keep the currently selected item visible as when it is on the left it is most 
&gt; likely to remain visible when resizing the bar, or the shell

In this respect, I don't really see why the current behaviour should be superior
to the old behaviour of adding to the right. I mean, to open a new perspective I
have to at least drop down some menu or even open the perspective chooser
window. There's a lot more GUI activity going on in those, so that little button
activity is kind of negligible.

&gt; There are bugs on MAC and GTK that made it impossible to persue the opposite 
&gt; approach, if these are fixed we would be able to revisit this.

So, in that case, shouldn't the bug rather be marked as LATER instead of WONTFIX?

Ok Michael, if some OS platforms bugs prevent from going the old way, i
understand your point, but please consider the following.
It is not a big problem for me right now, even if i consider this behaviour
counterintuitive, i'm fortunate enough to be working, since a few days, with a
21" LCD screen and i've plenty of screen estate, but all the contractors working
here are still using 15" screens and for them it is a problem.
What i describe here is a real scenario, while working on a project i have seen
that normally there are opened the perpectives "debug", "java" and "resources"
but on a 15" screen only "debug" and "java" are visible in the switcher bar; to
reach "resources" you have to use the chevron.
Now you do a simple synchronize action, the "team sync" perspective is activated
and voilà the "java" perspective button goes out of screen.
Now, while going to "synch" perspective is the result of an action in a context
menu, going back to "java" perspective requires that i click on the chevron
(that by the way is too small, see bug 66071) and then click on the menu selection.
So what it happens is that the perspectives that are opened first and that are
more used tends to be constantly pushed out of screen by seldom used
perspectives and more work is required to reach the more used perspectives than
the seldom ones.
Now, if i go back in old glorious days when i was working for IBM, our usability
review team would have hit my fingers with a stick for that.

So to conclude, if you prefer we can consider this to be not a bug, but in this
case i'll open an enhancement request to have back the old behaviuor, so that it
can stand as a reminder to check for the resolution of those OS problems.

Please tell me what you think.
Regards,  Gabriele.

PS. It's just coming to my mind that a possible bypass could be that perspective
buttons are made movable like the editor tabs, so that we can move and group
them at will, could it be possible?
understood, certainly lots of enhancements are possible.  In the final week 
before RC3, we did not have the time to explore all of them, but likely will 
look for ways to improve in the future as we always strive to do.
*** Bug 62778 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65983" />
    <CreationDate amount="2004-06-07 11:15:00 -0400" />
    <DupId amount="65975" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Ctrl+C broken in Java editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Pressing Ctrl+C inside a Java editor doesn't always copy the selection to the 
clipboard.  Instead, the clipboard is empty.  Sometimes it works when pressing 
Ctrl+C again, but very often I have to hold down Ctrl+C until an error message 
pops up:
Title: "Problem Copying to Clipboard"
Message: "There was a problem when accessing the system clipboard. Retry?"
If I then click Yes, nothing gets copied to the clipboard, but if I click No 
instead, the copy operation is successful.

I am not sure when the problem started to occur, but around 3.0M8 or M9 (it 
didn't happen in early milestones, up to about M7; definitely not in 2.x).  It 
was present in RC1 and still exists in I20040604.

System info:

Dell Precision Workstation 650 (2x Intel Xeon 2.6GHz, 2GB RAM) running Windows 
XP Professional.

Note: this bug happens to a number of colleagues of mine who use similarly 
spec'ed machines.  It does not happen on my home machine which is a single-CPU.

Also, I'm not sure if this is related, but: I seem to remember that on my Dell 
Precision, Adobe Acrobat Reader sometimes has problems copying text into the 
clipboard, coming up with a "Clipboard error" -- could that be a Windows 
problem??

This bug is really annoying, please fix for 3.0 if you can :)

Many thanks!
whoops I'm terribly sorry, I accidentally hit refresh in the browser!


*** This bug has been marked as a duplicate of 65975 ***</WithStack>
    <WithOutStack>Pressing Ctrl+C inside a Java editor doesn't always copy the selection to the 
clipboard.  Instead, the clipboard is empty.  Sometimes it works when pressing 
Ctrl+C again, but very often I have to hold down Ctrl+C until an error message 
pops up:
Title: "Problem Copying to Clipboard"
Message: "There was a problem when accessing the system clipboard. Retry?"
If I then click Yes, nothing gets copied to the clipboard, but if I click No 
instead, the copy operation is successful.

I am not sure when the problem started to occur, but around 3.0M8 or M9 (it 
didn't happen in early milestones, up to about M7; definitely not in 2.x).  It 
was present in RC1 and still exists in I20040604.

System info:

Dell Precision Workstation 650 (2x Intel Xeon 2.6GHz, 2GB RAM) running Windows 
XP Professional.

Note: this bug happens to a number of colleagues of mine who use similarly 
spec'ed machines.  It does not happen on my home machine which is a single-CPU.

Also, I'm not sure if this is related, but: I seem to remember that on my Dell 
Precision, Adobe Acrobat Reader sometimes has problems copying text into the 
clipboard, coming up with a "Clipboard error" -- could that be a Windows 
problem??

This bug is really annoying, please fix for 3.0 if you can :)

Many thanks!
whoops I'm terribly sorry, I accidentally hit refresh in the browser!


*** This bug has been marked as a duplicate of 65975 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65984" />
    <CreationDate amount="2004-06-07 11:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse 3.0RC1 is missing the  Help &gt; Software Updates ] option in the java perspectives</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0rc1 doesnt display the option to update plugins throw the software 
update option.
the view that missing these feature are the java views.
they do appear under other perspectives
Works for me using build I200406082000.
This bug have to be removed.
the way to see the Software update is to use "Customize perspective"
and mark the software update.


Nir.</WithStack>
    <WithOutStack>Eclipse 3.0rc1 doesnt display the option to update plugins throw the software 
update option.
the view that missing these feature are the java views.
they do appear under other perspectives
Works for me using build I200406082000.
This bug have to be removed.
the way to see the Software update is to use "Customize perspective"
and mark the software update.


Nir.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65985" />
    <CreationDate amount="2004-06-07 11:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Disabled controls still get keystrokes [was [Progress] NPE in log while refactoring]</Summery>
    <Patches amount="1">
      <Patch>
        <index>ProgressManager.java</index>
        <original_file>ProgressManager.java</original_file>
        <modified_file>ProgressManager.java</modified_file>
        <Hunks>
          <hunk>IWorkbench workbench = PlatformUI.getWorkbench();&#xD;
&#xD;
 		Shell[] shells = workbench.getDisplay().getShells();&#xD;
&#xD;
 		for (int i = 0; i &lt; shells.length; i++) {&#xD;
&#xD;
-			shells[i].setEnabled(active);&#xD;
&#xD;
+			if(shells[i].isVisible())&#xD;
&#xD;
+				shells[i].setEnabled(active);&#xD;
&#xD;
 		}&#xD;
&#xD;
 	}&#xD;
&#xD;
 	/**</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145313">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)</Frame>
          <Frame depth="1">org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:307)</Frame>
          <Frame depth="2">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)</Frame>
          <Frame depth="3">org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)</Frame>
          <Frame depth="4">org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)</Frame>
          <Frame depth="5">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)</Frame>
          <Frame depth="6">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)</Frame>
          <Frame depth="7">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)</Frame>
          <Frame depth="16">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)</Frame>
          <Frame depth="17">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)</Frame>
          <Frame depth="18">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="25">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:124)</Frame>
          <Frame depth="26">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="27">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:137)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:54)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)</Frame>
          <Frame depth="31">org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:108)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:175)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:128)</Frame>
          <Frame depth="34">org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)</Frame>
          <Frame depth="35">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)</Frame>
          <Frame depth="36">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="37">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="38">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:469)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:887)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:928)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:546)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:494)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:259)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.filterEvent(Display.java:949)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:943)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2305)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1801)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:439)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1194)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)</Frame>
          <Frame depth="56">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.eventProc(Display.java:815)</Frame>
          <Frame depth="58">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2222)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="63">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="65">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="70">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="71">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="7">
      <source_code type="functioncall">
        <location start="4815" end="4838" />
        <code>System.out.println("");</code>
      </source_code>
      <source_code type="assignment">
        <location start="5602" end="5654" />
        <code>IWorkbench workbench = PlatformUI.getWorkbench();</code>
      </source_code>
      <source_code type="assignment">
        <location start="5655" end="5710" />
        <code>Shell[] shells = workbench.getDisplay().getShells();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="5711" end="5859" />
        <code>for (int i = 0; i &lt; shells.length; i++) {
-			shells[i].setEnabled(active);
+			if(shells[i].isVisible())
+				shells[i].setEnabled(active);
 		}</code>
      </source_code>
      <source_code type="assignment">
        <location start="10848" end="10883" />
        <code>Control control= (Control)e.widget;</code>
      </source_code>
      <source_code type="assignment">
        <location start="10884" end="10916" />
        <code>Shell shell= control.getShell();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10997" end="11001" />
        <code>());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="5">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Have JUnit in source</Line>
          <Line>2. refactor-&gt;rename Test to Toast</Line>
          <Line>3. in the preview, scroll down to the end of the edit list by pressing and</Line>
          <Line>holding DOWN</Line>
          <Line>4. when I reach the end of the list, I get the exceptions.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1) Java perspective, fairly large workspace, one open Java editor</Line>
          <Line>2) Shutdown Eclipse</Line>
          <Line>3) Startup again</Line>
          <Line>4) Immediately on startup, hit Ctrl+Shift+T</Line>
          <Line>5) Quickly start typing.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- rename Test to Toast</Line>
          <Line>- preview</Line>
          <Line>- in the preview, scroll down to the end of the edit list by pressing and</Line>
          <Line>holding DOWN</Line>
          <Line>- when I reach the end of the list, I get the exceptions.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>- the first selection triggers an open event</Line>
          <Line>- this feeds the input into the compare viewer which uses the progress</Line>
          <Line>service to show delayed progress. However, the UI is still active (the</Line>
          <Line>progress service spins the event loop even if no dialog is open).</Line>
          <Line>- the next keydown is processed by the spinning event loop in the</Line>
          <Line>progress service resulting in another selection event</Line>
          <Line>- this one is stack on top of the current one feeding the next selection into</Line>
          <Line>the same compare viewer (the viewer is reused to same change types).</Line>
          <Line>- the last element in the change list doesn't have an associated compare</Line>
          <Line>viewer, hence it gets disposed</Line>
          <Line>- since the events are stack on top of each other the first open event</Line>
          <Line>triggered tries to set the image into an compare viewer that got already</Line>
          <Line>disposed. Hence the NPE</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- open PackageExplorerPart</Line>
          <Line>- position cursor after class PackageExplorerPart</Line>
          <Line>- type t Ctrl+Shift+T t t t t ...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200406070800 - smoke test

found a number of the exceptions below in the log. Steps:

- rename Test to Toast
- preview
- in the preview, scroll down to the end of the edit list by pressing and
holding DOWN
- when I reach the end of the list, I get the exceptions.

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:30:09.243
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.compare.CompareViewerPane.setImage(CompareViewerPane.java:99)
        at
org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:307)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:220)
        at
org.eclipse.ltk.internal.ui.refactoring.TextChangePreviewViewer.setInput(TextChangePreviewViewer.java:190)
        at
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement.feedInput(DefaultChangeElement.java:57)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:376)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$2(PreviewWizardPage.java:355)
        at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged(PreviewWizardPage.java:346)
        at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
        at org.eclipse.core.runtime.Platform.run(Platform.java:758)
        at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
        at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1388)
        at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:694)
        at
org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:253)
        at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:720)
        at
org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:180)
        at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:175)
        at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:324)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2512)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2223)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:124)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:137)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)
        at
org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:54)
        at
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)
        at
org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:108)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:175)
        at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:128)
        at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:127)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
        at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:469)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:887)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:928)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:546)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:494)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:259)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:949)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:943)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2305)
        at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1801)
        at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:439)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1194)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
        at org.eclipse.swt.widgets.Display.eventProc(Display.java:815)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2222)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:638)
        at org.eclipse.core.launcher.Main.main(Main.java:622)
Created attachment 11672
a longer variant...
The problem seems to be as follows:

- the first selection triggers an open event
- this feeds the input into the compare viewer which uses the progress
  service to show delayed progress. However, the UI is still active (the
  progress service spins the event loop even if no dialog is open).
- the next keydown is processed by the spinning event loop in the 
  progress service resulting in another selection event
- this one is stack on top of the current one feeding the next selection into
  the same compare viewer (the viewer is reused to same change types).
- the last element in the change list doesn't have an associated compare
  viewer, hence it gets disposed
- since the events are stack on top of each other the first open event
  triggered tries to set the image into an compare viewer that got already
  disposed. Hence the NPE

The progress service should diabled all user input before it starts spinning 
the event loop. 
The explanations in #2 refer to the stack trace in #1
The best I can do in busyCursorWhile is to go to each shell and call setEnabled
(false) as to go deeper I could potentially mess up enablement state when I re-
enable. On most platforms this does not do much.

Other than that what you currently have is the same behaviour as BusyCursor 
showWhile(). The technique we use elsewhere in the UI is to disable widgets 
that we are worried are going to cause us problems.

As you have marked it critical I will move it back to you so it doesn't get 
lost.
Tod,

IMO this should be fixed by Platform/UI not by clients. This can now happen at 
various places since many clients converted from ProgressMonitorDialog (which 
didn't have this behaviour) to IProgressService. 
The question is if it is possible to do this generically. I call setEnabled on 
all of the open shells to try and disable menus but SWT does not lock out 
other widget when I do this. This is why we disable buttons in dialogs etc. 
when OK/Finish is pressed and a progress monitor is running.

I tried going though and disabling the entire tree of widgets but this had the 
problem of re-enabling widgets that shouldn't have been (for instance if 
setEnabled gets called during the operation).

If there was a way to do this and still paint the UI I would be happy to but I 
don't think there is. Do you have a suggestion? 
Doing a deep disablement of the widget tree has another disadvantage: it might 
take some time so we spent n hundreds miliseconds to wait 800ms ...

I disucessed several other solutions with Erich and Andre and we decided that 
the communication should go through one channel. So Erich is taking care of it.
Thanks Dirk. I am not opposed to providing a solution to this but we have 
never had one that does not have adverse side effects.

if we can get an SWT approved solution I will be happy to include it. 
Basically all I want is something that allows painting but nothing else.
Re: "The best I can do in busyCursorWhile is to go to each shell and call setEnabled
(false) as to go deeper I could potentially mess up enablement state when I re-
enable. On most platforms this does not do much."

Steve and I tried this, and it appears that disabling the shell *does* prevent the children from receiving 
mouse/keyboard events. I also looked at the code in the ProgressManager, and it does appear to be 
disabling all of the shells.

What gives? Steve is it possible that it doesn't disable nested children? I think we need your assistance 
with this one.
Are there repeatable steps to cause this? Steve suggested that we put code in to verify that no one is 
gratuitously re-enabling shells, but without steps to reproduce it, we're kind of stuck.
The steps in comment 0 apply to the ZRH smoke test
(http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/jdt-ui-home/smoke-test/smoke.html?rev=HEAD&amp;content-type=text/html,
Refactoring-&gt;Rename Type section):

1. Have JUnit in source
2. refactor-&gt;rename Test to Toast
3. in the preview, scroll down to the end of the edit list by pressing and
holding DOWN
4. when I reach the end of the list, I get the exceptions.


consistently reproduceable on Linux-GTK.
Excellent. Thanks.
McQ and I hacked a path through it.  McQ will post the results.
Reproducable on wiondows too.

Byt here was something interesting. I do attempt to disable the UI.

If you add the line 

System.out.println("");

to setUserInterfaceActive() in ProgressManager the problems stop happening. Is 
this potentially kickstarting something?
Digging deeper if I make it so that I only pay with visible shells (apply the 
patch below) I can no longer replicate on Windows. Dirk could you see if this 
makes any difference for you (your hand of doom is stronger than mine &lt;grin&gt;).

Index: ProgressManager.java
===================================================================
RCS file: /home/eclipse/org.eclipse.ui.workbench/Eclipse 
UI/org/eclipse/ui/internal/progress/ProgressManager.java,v
retrieving revision 1.91
diff -u -r1.91 ProgressManager.java
--- ProgressManager.java	8 Jun 2004 19:03:13 -0000	1.91
+++ ProgressManager.java	8 Jun 2004 20:59:23 -0000
@@ -1081,7 +1081,8 @@
 		IWorkbench workbench = PlatformUI.getWorkbench();
 		Shell[] shells = workbench.getDisplay().getShells();
 		for (int i = 0; i &lt; shells.length; i++) {
-			shells[i].setEnabled(active);
+			if(shells[i].isVisible())
+				shells[i].setEnabled(active);
 		}
 	}
 	/**

Ignore that. Just managed to do it again with only playing with visible shells.
I hacked the PreviewWizardPage and the OpenStrategy to see what is happening. 
The trace is as follows:

Shell: Rename Compilation Unit enabled: true
Shell: Rename Compilation Unit enabled: true
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34473447
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@344d344d
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34533453
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34593459
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@345f345f
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34653465
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@346b346b
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34713471
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34773477
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34913491
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34973497
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@349d349d
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34a334a3
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34a934a9
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34af34af
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34d234d2
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34d834d8
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34de34de
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34e434e4
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34ea34ea
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left

Read trace as follows:

- Shell: Rename Compilation Unit enabled: true ==&gt; a widget in the shell
  Rename Compilation Unit received an event and the shell was enabled.

- Shell: Rename Compilation Unit enabled: false==&gt; a widget in the shell
  Rename Compilation Unit received an event and the shell was disabled.

So the listener install by the OpenStrategy on the tree viewer in the preview 
page receives events although the shell seems to be disabled.

I added the following lines to OpenStrategy line 234 to produce the trace:

Control control= (Control)e.widget;
Shell shell= control.getShell();
System.out.println("Shell: " + shell.getText() + " enabled: " + shell.isEnabled
());

The same problem happens with views inside the application windows. The open 
type selection dialog checks if the cache is up to date using 
PlatformUI.getWorkbench().getProgressService().run
(true, true, runnable); and although all shells are disabled in that situation 
keyevents are still processed. Tracing it produces the following result:

Enter cache up to date                  &lt;== start of the runnable
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Leave cache up to date                 &lt;== end of the runnable

See bug for details 66050
Happens on Windows.
We will look into this for RC3.  I can't look at it now.  Tod, could you 
construct a simple test case for us to debug?  Thanks.
JDT team will attempt SWT testcase
Don't bother, I have a simple one which I will attach to this PR.  I also have 
the fixes for every platform.  This involves giving focus to the desktop which 
is horrible but there is no alternative.  There actually was code in there 
since 2.1 do to this but it had bug and was not running.

I'm going to refine them a bit and send them by SSQ before considering them 
for release.
Dirk have you worked around this for RC2? Steve and I couldn't make it happen 
again.
I believe I can reproduce a similar test case in RC2.

1) Java perspective, fairly large workspace, one open Java editor
2) Shutdown Eclipse
3) Startup again
4) Immediately on startup, hit Ctrl+Shift+T
5) Quickly start typing.

The first few characters appear in the editor buffer.

I can reproduce this every time in RC2.
John, this got reported via bug 66050.
Answer to comment #25

JDT/UI didn't put in any work arounds to avoid this into RC2.

I can also reproduce it using the following steps on RC2

- open PackageExplorerPart
- position cursor after class PackageExplorerPart
- type t Ctrl+Shift+T t t t t ...

the ts after Ctrl+Shift+T are inserted into the editor.
I have the code for every platform but want to test it.  I will get Tod to 
help me recreate the problem to ensure that my fix is fixing something (I 
could never make the original problem happen).  When the code is release, Dirk 
and John can you please verify the fix too?  Thanks.
Fixed &gt; 20040615

NOTE: It was broken on all platforms.  Please check in the nightly or in the 
next build of RC3.  Watch out for keyboard and accelerator problems.  I am 
prepared to remove this if it causes too much trouble.
The fix for this bug causes the active shell to become null.  Originally, I 
felt this was a regression caused by Bug 56842 (as the caret disappears), but 
going back to an early version of SWT and adding fixes one-by-one shows that it 
was the fix for this bug that caused the problem. 
 
My reproducible steps in I200406171625 (and later) are the following:  
1.) Select two items in the package explorer 
2.) Right-click and open a compare editor 
 
At this point, there is no longer an active shell, and hence no active focus 
control.  This means that no keys work (not even typing), and that workbench 
parts stop getting fully activated.  The caret is also gone. 
 
Activating a new shell (either within Eclipse, or a different application)  
fixes this problem.  
  
GTK+ 2.4.1, KDE 3.2.2, Linux 2.6.4.  This problem is also reproducible on 
Billy's machine (GTK+ 2.4.3, GNOME). 
  
Billy and I are working on this problem.  Feel free to stop by.  
 
If the fix is to set the deactivate the active shell, what happens if the user 
clicks or alt-tabs back to the shell again? Does the window titlebar color 
change?
Fixed &gt; 20040618.
*** Bug 66050 has been marked as a duplicate of this bug. ***
Steve, I think this fix has introduced a bug in a GEF client.
On mouse-down, selection is changed which causes a selection listener (in a 
client application) to invoke an IRunnableWithProgress.  So during the handling 
of the mouseDown, the Control receives a focusLost event, which sets a couple 
of things to null.

Does the fix made here cause the focus owner to lose focus?
Sorry, forgot to mention: bug 68003
It can.  The bug happened because "shell.setEnabled(false)" simply failed to 
reassign the focus, leaving it in a disabled child.  This was wrong.  We will 
need a simple case to decide whether what you are seeing is a bug or just the 
new behavior.

Does the problem happen on every platform?  How about isolating it and 
entering a new bug report.  It is unlikely that we will remove the changes 
that fixed this one.  Thanks.
Sorry ... forgot to read bug 68003.</WithStack>
    <WithOutStack>I200406070800 - smoke test

found a number of the exceptions below in the log. Steps:

- rename Test to Toast
- preview
- in the preview, scroll down to the end of the edit list by pressing and
holding DOWN
- when I reach the end of the list, I get the exceptions.

!ENTRY org.eclipse.core.runtime 4 2 Jun 07, 2004 16:30:09.243
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0

Created attachment 11672
a longer variant...
The problem seems to be as follows:

- the first selection triggers an open event
- this feeds the input into the compare viewer which uses the progress
  service to show delayed progress. However, the UI is still active (the
  progress service spins the event loop even if no dialog is open).
- the next keydown is processed by the spinning event loop in the 
  progress service resulting in another selection event
- this one is stack on top of the current one feeding the next selection into
  the same compare viewer (the viewer is reused to same change types).
- the last element in the change list doesn't have an associated compare
  viewer, hence it gets disposed
- since the events are stack on top of each other the first open event
  triggered tries to set the image into an compare viewer that got already
  disposed. Hence the NPE

The progress service should diabled all user input before it starts spinning 
the event loop. 
The explanations in #2 refer to the stack trace in #1
The best I can do in busyCursorWhile is to go to each shell and call setEnabled
(false) as to go deeper I could potentially mess up enablement state when I re-
enable. On most platforms this does not do much.

Other than that what you currently have is the same behaviour as BusyCursor 
showWhile(). The technique we use elsewhere in the UI is to disable widgets 
that we are worried are going to cause us problems.

As you have marked it critical I will move it back to you so it doesn't get 
lost.
Tod,

IMO this should be fixed by Platform/UI not by clients. This can now happen at 
various places since many clients converted from ProgressMonitorDialog (which 
didn't have this behaviour) to IProgressService. 
The question is if it is possible to do this generically. I call setEnabled on 
all of the open shells to try and disable menus but SWT does not lock out 
other widget when I do this. This is why we disable buttons in dialogs etc. 
when OK/Finish is pressed and a progress monitor is running.

I tried going though and disabling the entire tree of widgets but this had the 
problem of re-enabling widgets that shouldn't have been (for instance if 
setEnabled gets called during the operation).

If there was a way to do this and still paint the UI I would be happy to but I 
don't think there is. Do you have a suggestion? 
Doing a deep disablement of the widget tree has another disadvantage: it might 
take some time so we spent n hundreds miliseconds to wait 800ms ...

I disucessed several other solutions with Erich and Andre and we decided that 
the communication should go through one channel. So Erich is taking care of it.
Thanks Dirk. I am not opposed to providing a solution to this but we have 
never had one that does not have adverse side effects.

if we can get an SWT approved solution I will be happy to include it. 
Basically all I want is something that allows painting but nothing else.
Re: "The best I can do in busyCursorWhile is to go to each shell and call setEnabled
(false) as to go deeper I could potentially mess up enablement state when I re-
enable. On most platforms this does not do much."

Steve and I tried this, and it appears that disabling the shell *does* prevent the children from receiving 
mouse/keyboard events. I also looked at the code in the ProgressManager, and it does appear to be 
disabling all of the shells.

What gives? Steve is it possible that it doesn't disable nested children? I think we need your assistance 
with this one.
Are there repeatable steps to cause this? Steve suggested that we put code in to verify that no one is 
gratuitously re-enabling shells, but without steps to reproduce it, we're kind of stuck.
The steps in comment 0 apply to the ZRH smoke test
(http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/jdt-ui-home/smoke-test/smoke.html?rev=HEAD&amp;content-type=text/html,
Refactoring-&gt;Rename Type section):

1. Have JUnit in source
2. refactor-&gt;rename Test to Toast
3. in the preview, scroll down to the end of the edit list by pressing and
holding DOWN
4. when I reach the end of the list, I get the exceptions.


consistently reproduceable on Linux-GTK.
Excellent. Thanks.
McQ and I hacked a path through it.  McQ will post the results.
Reproducable on wiondows too.

Byt here was something interesting. I do attempt to disable the UI.

If you add the line 

System.out.println("");

to setUserInterfaceActive() in ProgressManager the problems stop happening. Is 
this potentially kickstarting something?
Digging deeper if I make it so that I only pay with visible shells (apply the 
patch below) I can no longer replicate on Windows. Dirk could you see if this 
makes any difference for you (your hand of doom is stronger than mine &lt;grin&gt;).

Index: ProgressManager.java
===================================================================
RCS file: /home/eclipse/org.eclipse.ui.workbench/Eclipse 
UI/org/eclipse/ui/internal/progress/ProgressManager.java,v
retrieving revision 1.91
diff -u -r1.91 ProgressManager.java
--- ProgressManager.java	8 Jun 2004 19:03:13 -0000	1.91
+++ ProgressManager.java	8 Jun 2004 20:59:23 -0000
@@ -1081,7 +1081,8 @@
 		IWorkbench workbench = PlatformUI.getWorkbench();
 		Shell[] shells = workbench.getDisplay().getShells();
 		for (int i = 0; i &lt; shells.length; i++) {
-			shells[i].setEnabled(active);
+			if(shells[i].isVisible())
+				shells[i].setEnabled(active);
 		}
 	}
 	/**

Ignore that. Just managed to do it again with only playing with visible shells.
I hacked the PreviewWizardPage and the OpenStrategy to see what is happening. 
The trace is as follows:

Shell: Rename Compilation Unit enabled: true
Shell: Rename Compilation Unit enabled: true
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34473447
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@344d344d
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34533453
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34593459
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@345f345f
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34653465
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@346b346b
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34713471
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34773477
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34913491
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34973497
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@349d349d
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34a334a3
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34a934a9
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34af34af
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34d234d2
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34d834d8
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34de34de
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34e434e4
Shell: Rename Compilation Unit enabled: false
Shell: Rename Compilation Unit enabled: false
Selection changed entered: 
org.eclipse.ltk.internal.ui.refactoring.DefaultChangeElement@34ea34ea
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left
Selection changed left

Read trace as follows:

- Shell: Rename Compilation Unit enabled: true ==&gt; a widget in the shell
  Rename Compilation Unit received an event and the shell was enabled.

- Shell: Rename Compilation Unit enabled: false==&gt; a widget in the shell
  Rename Compilation Unit received an event and the shell was disabled.

So the listener install by the OpenStrategy on the tree viewer in the preview 
page receives events although the shell seems to be disabled.

I added the following lines to OpenStrategy line 234 to produce the trace:

Control control= (Control)e.widget;
Shell shell= control.getShell();
System.out.println("Shell: " + shell.getText() + " enabled: " + shell.isEnabled
());

The same problem happens with views inside the application windows. The open 
type selection dialog checks if the cache is up to date using 
PlatformUI.getWorkbench().getProgressService().run
(true, true, runnable); and although all shells are disabled in that situation 
keyevents are still processed. Tracing it produces the following result:

Enter cache up to date                  &lt;== start of the runnable
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Processing Key Event. Enabled: false
Leave cache up to date                 &lt;== end of the runnable

See bug for details 66050
Happens on Windows.
We will look into this for RC3.  I can't look at it now.  Tod, could you 
construct a simple test case for us to debug?  Thanks.
JDT team will attempt SWT testcase
Don't bother, I have a simple one which I will attach to this PR.  I also have 
the fixes for every platform.  This involves giving focus to the desktop which 
is horrible but there is no alternative.  There actually was code in there 
since 2.1 do to this but it had bug and was not running.

I'm going to refine them a bit and send them by SSQ before considering them 
for release.
Dirk have you worked around this for RC2? Steve and I couldn't make it happen 
again.
I believe I can reproduce a similar test case in RC2.

1) Java perspective, fairly large workspace, one open Java editor
2) Shutdown Eclipse
3) Startup again
4) Immediately on startup, hit Ctrl+Shift+T
5) Quickly start typing.

The first few characters appear in the editor buffer.

I can reproduce this every time in RC2.
John, this got reported via bug 66050.
Answer to comment #25

JDT/UI didn't put in any work arounds to avoid this into RC2.

I can also reproduce it using the following steps on RC2

- open PackageExplorerPart
- position cursor after class PackageExplorerPart
- type t Ctrl+Shift+T t t t t ...

the ts after Ctrl+Shift+T are inserted into the editor.
I have the code for every platform but want to test it.  I will get Tod to 
help me recreate the problem to ensure that my fix is fixing something (I 
could never make the original problem happen).  When the code is release, Dirk 
and John can you please verify the fix too?  Thanks.
Fixed &gt; 20040615

NOTE: It was broken on all platforms.  Please check in the nightly or in the 
next build of RC3.  Watch out for keyboard and accelerator problems.  I am 
prepared to remove this if it causes too much trouble.
The fix for this bug causes the active shell to become null.  Originally, I 
felt this was a regression caused by Bug 56842 (as the caret disappears), but 
going back to an early version of SWT and adding fixes one-by-one shows that it 
was the fix for this bug that caused the problem. 
 
My reproducible steps in I200406171625 (and later) are the following:  
1.) Select two items in the package explorer 
2.) Right-click and open a compare editor 
 
At this point, there is no longer an active shell, and hence no active focus 
control.  This means that no keys work (not even typing), and that workbench 
parts stop getting fully activated.  The caret is also gone. 
 
Activating a new shell (either within Eclipse, or a different application)  
fixes this problem.  
  
GTK+ 2.4.1, KDE 3.2.2, Linux 2.6.4.  This problem is also reproducible on 
Billy's machine (GTK+ 2.4.3, GNOME). 
  
Billy and I are working on this problem.  Feel free to stop by.  
 
If the fix is to set the deactivate the active shell, what happens if the user 
clicks or alt-tabs back to the shell again? Does the window titlebar color 
change?
Fixed &gt; 20040618.
*** Bug 66050 has been marked as a duplicate of this bug. ***
Steve, I think this fix has introduced a bug in a GEF client.
On mouse-down, selection is changed which causes a selection listener (in a 
client application) to invoke an IRunnableWithProgress.  So during the handling 
of the mouseDown, the Control receives a focusLost event, which sets a couple 
of things to null.

Does the fix made here cause the focus owner to lose focus?
Sorry, forgot to mention: bug 68003
It can.  The bug happened because "shell.setEnabled(false)" simply failed to 
reassign the focus, leaving it in a disabled child.  This was wrong.  We will 
need a simple case to decide whether what you are seeing is a bug or just the 
new behavior.

Does the problem happen on every platform?  How about isolating it and 
entering a new bug report.  It is unlikely that we will remove the changes 
that fixed this one.  Thanks.
Sorry ... forgot to read bug 68003.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65986" />
    <CreationDate amount="2004-06-07 11:18:00 -0400" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Classloader problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Plugin A requires plugins B</Line>
          <Line>2. Plugin B requires plugin C with optional="true"</Line>
          <Line>3. Plugin B requires plugin D with export="true"</Line>
          <Line>4. Plugin A "implicity" requires plugin D (A gets D by B)</Line>
          <Line>5. Plugin C is not available at runtime</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1. Change the order of the import statements of C and D in the manifest file</Line>
          <Line>of the plugin B (so B imports D before C)</Line>
          <Line>2. Remove the import of C</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>1. Extratct the "org.eclipse.ui.tutorials.rcp.part3" from the Eclipse</Line>
          <Line>repository.</Line>
          <Line>2. Install the UIExporter plugin project attached here</Line>
          <Line>3. Run the RCP Part3 application using the launcher "RCP Tut_1"</Line>
          <Line>- This works fine</Line>
          <Line>4. Change the plugin.xml of "org.eclipse.ui.tutorials.rcp.part3" by</Line>
          <Line>- removing the import of "org.eclipse.ui"</Line>
          <Line>- appending "UIExport" to the list of required plugins</Line>
          <Line>5. Run the RCP Part3 application using the launcher "RCP Tut_2"</Line>
          <Line>- This launcher includes UIExport</Line>
          <Line>- This launcher doesn't include "org.eclipse.core.resources" (it is</Line>
          <Line>optional in "UIExport)</Line>
          <Line>- This fails (ClassNotFound Exception)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- This works fine</Line>
          <Line>4. Change the plugin.xml of "org.eclipse.ui.tutorials.rcp.part3" by</Line>
          <Line>- removing the import of "org.eclipse.ui"</Line>
          <Line>- appending "UIExport" to the list of required plugins</Line>
          <Line>5. Run the RCP Part3 application using the launcher "RCP Tut_2"</Line>
          <Line>- This launcher includes UIExport</Line>
          <Line>- This launcher doesn't include "org.eclipse.core.resources" (it is</Line>
          <Line>optional in "UIExport)</Line>
          <Line>- This fails (ClassNotFound Exception)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We found a very tricky problem when we were working on generating RCP 
application.  After a couple of hours we were able to narrow down the 
problem.  The scenario is:

1. Plugin A requires plugins B
2. Plugin B requires plugin C with optional="true"
3. Plugin B requires plugin D with export="true"
4. Plugin A "implicity" requires plugin D (A gets D by B)
5. Plugin C is not available at runtime

In this case, A doesn't launch (stack trace with ClassNotFound exception(s)).  
Any of the follow steps fixes the problem:

1. Change the order of the import statements of C and D in the manifest file 
of the plugin B (so B imports D before C)
2. Remove the import of C

I will attach a sample that will make it easier to reproduce the problem.

I am openning this bug as "critical" because usually the developers have no 
control over how the plugins they depend on are importing plugins.
Created attachment 11665
Plugin project to demostrate the problem

To reproduce the problem:

1. Extratct the "org.eclipse.ui.tutorials.rcp.part3" from the Eclipse
repository.
2. Install the UIExporter plugin project attached here
3. Run the RCP Part3 application using the launcher "RCP Tut_1"
    - This works fine
4. Change the plugin.xml of "org.eclipse.ui.tutorials.rcp.part3" by
    - removing the import of "org.eclipse.ui"
    - appending "UIExport" to the list of required plugins
5. Run the RCP Part3 application using the launcher "RCP Tut_2"
    - This launcher includes UIExport
    - This launcher doesn't include "org.eclipse.core.resources" (it is
optional in "UIExport)
    - This fails (ClassNotFound Exception)


To fix the problem, open the manifest file of the UIExport plugin and either:

1. Remove the import of "org.eclipse.core.resources"
   - This won't cause a compilation error because no classes from resources is
used in UIExport
2. Move the "org.eclipse.core.resources" import statement down
Maybe a state problem? Will  investigate.
Created attachment 11681
patch for org.eclipse.osgi (BundleLoader)

Optionally required bundles that did not appear in the end of the list would
trigger this problem. Harder to find than it was to fix it. Thanks for the test
case.

The attached patch fixes the problem (in BundleLoader).
This is bad enough to go into RC2. Jeff, please review (and release if you wish).
patch looks good. please release.
Fixed released to HEAD.</WithStack>
    <WithOutStack>We found a very tricky problem when we were working on generating RCP 
application.  After a couple of hours we were able to narrow down the 
problem.  The scenario is:

1. Plugin A requires plugins B
2. Plugin B requires plugin C with optional="true"
3. Plugin B requires plugin D with export="true"
4. Plugin A "implicity" requires plugin D (A gets D by B)
5. Plugin C is not available at runtime

In this case, A doesn't launch (stack trace with ClassNotFound exception(s)).  
Any of the follow steps fixes the problem:

1. Change the order of the import statements of C and D in the manifest file 
of the plugin B (so B imports D before C)
2. Remove the import of C

I will attach a sample that will make it easier to reproduce the problem.

I am openning this bug as "critical" because usually the developers have no 
control over how the plugins they depend on are importing plugins.
Created attachment 11665
Plugin project to demostrate the problem

To reproduce the problem:

1. Extratct the "org.eclipse.ui.tutorials.rcp.part3" from the Eclipse
repository.
2. Install the UIExporter plugin project attached here
3. Run the RCP Part3 application using the launcher "RCP Tut_1"
    - This works fine
4. Change the plugin.xml of "org.eclipse.ui.tutorials.rcp.part3" by
    - removing the import of "org.eclipse.ui"
    - appending "UIExport" to the list of required plugins
5. Run the RCP Part3 application using the launcher "RCP Tut_2"
    - This launcher includes UIExport
    - This launcher doesn't include "org.eclipse.core.resources" (it is
optional in "UIExport)
    - This fails (ClassNotFound Exception)


To fix the problem, open the manifest file of the UIExport plugin and either:

1. Remove the import of "org.eclipse.core.resources"
   - This won't cause a compilation error because no classes from resources is
used in UIExport
2. Move the "org.eclipse.core.resources" import statement down
Maybe a state problem? Will  investigate.
Created attachment 11681
patch for org.eclipse.osgi (BundleLoader)

Optionally required bundles that did not appear in the end of the list would
trigger this problem. Harder to find than it was to fix it. Thanks for the test
case.

The attached patch fixes the problem (in BundleLoader).
This is bad enough to go into RC2. Jeff, please review (and release if you wish).
patch looks good. please release.
Fixed released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65987" />
    <CreationDate amount="2004-06-07 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Intro] Welcome testing - "Action not implemented".</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This error message, "Action not implemented." appears when the following items 
are selected: 


Samples -&gt; SWT -&gt; Workbench Views

What's New -&gt; New &amp; Noteworthy

What's New -&gt; Migration from the previous release
*** Bug 63545 has been marked as a duplicate of this bug. ***
Fixed two of the broken links in HEAD.
will fix third soon.
+1 - must fix the broken link for RC3.
So are we going to remove the link or enable it to show a sample?
When I created the two separate links, it was under the assumption that SWT 
launcher and SWT examples as views are separate. It turned out that each SWT 
example simultanously contribute into the launcher AND contributes a view.

We should remove the broken link and change the text so that it is clear what 
will happen (some samples will be available as workbench views, plus SWT 
launcher view will be contributed from which other samples can be launched).
Kim,
can you investigate? do you have a cycle for RC3?
Yup, I will investigate.
The broken link will be removed from the samples page, and the remaining link
text will be modified to include both the view samples and the standalone samples.

On the SWT Examples standby page we will also fix the following links:
- The "Read More" link will point to the "Using the SWT example launcher" link: 
/org.eclipse.platform.doc.isv/samples/org.eclipse.swt.examples.launcher/doc-html/swt_launcher_ex.html

- The "help document" link will point to "Running and browsing the SWT examples
manually": 
/org.eclipse.platform.doc.isv/samples/org.eclipse.swt.examples/doc-html/swt_manual_setup.html

Created attachment 12412
fix the 2 broken links in the samples standby content

The fix for the main Samples page link is in HEAD.

Dejan, I don't have commit rights to pde.ui
Here is a patch to fix the two links in SamplesStandbyContent.
Kim, the patch for PDE UI is wrong. The help URLs for samples are in 
plugin.xml - each sample has its own URL. The value should not be hard-coded 
in the standby content part.
Correction, it is in plugin.xml of org.eclipse.sdk.samples plug-in (in twix).
Right, ofcourse..  fixing the link on twix
I rebuilt the update site to pick up the changes on twix.

Closing as fixed.</WithStack>
    <WithOutStack>This error message, "Action not implemented." appears when the following items 
are selected: 


Samples -&gt; SWT -&gt; Workbench Views

What's New -&gt; New &amp; Noteworthy

What's New -&gt; Migration from the previous release
*** Bug 63545 has been marked as a duplicate of this bug. ***
Fixed two of the broken links in HEAD.
will fix third soon.
+1 - must fix the broken link for RC3.
So are we going to remove the link or enable it to show a sample?
When I created the two separate links, it was under the assumption that SWT 
launcher and SWT examples as views are separate. It turned out that each SWT 
example simultanously contribute into the launcher AND contributes a view.

We should remove the broken link and change the text so that it is clear what 
will happen (some samples will be available as workbench views, plus SWT 
launcher view will be contributed from which other samples can be launched).
Kim,
can you investigate? do you have a cycle for RC3?
Yup, I will investigate.
The broken link will be removed from the samples page, and the remaining link
text will be modified to include both the view samples and the standalone samples.

On the SWT Examples standby page we will also fix the following links:
- The "Read More" link will point to the "Using the SWT example launcher" link: 
/org.eclipse.platform.doc.isv/samples/org.eclipse.swt.examples.launcher/doc-html/swt_launcher_ex.html

- The "help document" link will point to "Running and browsing the SWT examples
manually": 
/org.eclipse.platform.doc.isv/samples/org.eclipse.swt.examples/doc-html/swt_manual_setup.html

Created attachment 12412
fix the 2 broken links in the samples standby content

The fix for the main Samples page link is in HEAD.

Dejan, I don't have commit rights to pde.ui
Here is a patch to fix the two links in SamplesStandbyContent.
Kim, the patch for PDE UI is wrong. The help URLs for samples are in 
plugin.xml - each sample has its own URL. The value should not be hard-coded 
in the standby content part.
Correction, it is in plugin.xml of org.eclipse.sdk.samples plug-in (in twix).
Right, ofcourse..  fixing the link on twix
I rebuilt the update site to pick up the changes on twix.

Closing as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65988" />
    <CreationDate amount="2004-06-07 11:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Intro] Welcome - erasing window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>-if you drag a new window it wipes out the screen behind it.
Andrea,
can you please give us more info? What do you mean "wipes out the screen 
behind it". I tried moving a window over the intro window, all is well. 


no further action needed.
closing.</WithStack>
    <WithOutStack>-if you drag a new window it wipes out the screen behind it.
Andrea,
can you please give us more info? What do you mean "wipes out the screen 
behind it". I tried moving a window over the intro window, all is well. 


no further action needed.
closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65989" />
    <CreationDate amount="2004-06-07 11:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Strange default execution history name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When executing a test for the first time in a Hyades URL run configuration, and 
selecting the execution results tab before selecting a test suite a strange 
default name is used.  It should probably be blank.  A screenshot is attached.
Created attachment 11667
execution results problem
This behavior is no longer exhibited and has been fixed indirectly.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>When executing a test for the first time in a Hyades URL run configuration, and 
selecting the execution results tab before selecting a test suite a strange 
default name is used.  It should probably be blank.  A screenshot is attached.
Created attachment 11667
execution results problem
This behavior is no longer exhibited and has been fixed indirectly.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65990" />
    <CreationDate amount="2004-06-07 11:35:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.wsi" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>version of "Basic Profile Test Assertions" does NOT match required</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>org.wsi.util.Utils.isValidProfileTADVersion() requires TAD 1.0.1 but wsvt 
bundles TAD 1.0 in its org.eclipse.wsi.test.tools plugin, which cause wsi 
validation err.
The WSVT project has graduated. The tools are now part of the Web Tools Platform
project.

Reassigning bugs to the Web Tools -&gt; wst.wsi component.
This bug is quite old now. The WTP WS-I validator does not bundle the TADs anymore. I will mark this as invalid. Please re-open if this is still an issue.
Closing. Please re-open if still an issue.</WithStack>
    <WithOutStack>org.wsi.util.Utils.isValidProfileTADVersion() requires TAD 1.0.1 but wsvt 
bundles TAD 1.0 in its org.eclipse.wsi.test.tools plugin, which cause wsi 
validation err.
The WSVT project has graduated. The tools are now part of the Web Tools Platform
project.

Reassigning bugs to the Web Tools -&gt; wst.wsi component.
This bug is quite old now. The WTP WS-I validator does not bundle the TADs anymore. I will mark this as invalid. Please re-open if this is still an issue.
Closing. Please re-open if still an issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65991" />
    <CreationDate amount="2004-06-07 11:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Intro] Welcome Tutorials  -Java Development</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Java Development- Simple Java Application

-Step 2 (Create a Java project)
 Should include manual instructions to create a New Java project.
 Select File-&gt; New-&gt; Project from the menu bar. Select Java Project and
 click Next, then complete the New Java Project Wizard as required.
-Step 3 (Create your HelloWorld class)
 Replace abbreviation of application with full word in last sentence.
-Step 4 (Add a System.out.printIn line in your main method)
 specify exactly where the line should appear
-Step 5 (Test your application)
 remove reference to running man
 replace "Application" with "Java Application"
-If the user fails to select "Click to begin" in the introduction step, 
 or the buttons in any previous step and instead simply expands the next 
 step the buttons do not appear in the subsequent steps. 
Andrea, your point on the buttons not appear is by designed. A cheat sheet is 
attempting to have the user follow the steps in the required order. Once a user 
learning the basics of a cheat sheet, I believe it is easy for them to follow 
along with the steps.
Created attachment 12280
Patch for cheat sheet
Dejan, can you please review the patch and vote for this bug to be fixed.
+1
The fix for this bug has been released to HEAD.
*** Bug 66921 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Java Development- Simple Java Application

-Step 2 (Create a Java project)
 Should include manual instructions to create a New Java project.
 Select File-&gt; New-&gt; Project from the menu bar. Select Java Project and
 click Next, then complete the New Java Project Wizard as required.
-Step 3 (Create your HelloWorld class)
 Replace abbreviation of application with full word in last sentence.
-Step 4 (Add a System.out.printIn line in your main method)
 specify exactly where the line should appear
-Step 5 (Test your application)
 remove reference to running man
 replace "Application" with "Java Application"
-If the user fails to select "Click to begin" in the introduction step, 
 or the buttons in any previous step and instead simply expands the next 
 step the buttons do not appear in the subsequent steps. 
Andrea, your point on the buttons not appear is by designed. A cheat sheet is 
attempting to have the user follow the steps in the required order. Once a user 
learning the basics of a cheat sheet, I believe it is easy for them to follow 
along with the steps.
Created attachment 12280
Patch for cheat sheet
Dejan, can you please review the patch and vote for this bug to be fixed.
+1
The fix for this bug has been released to HEAD.
*** Bug 66921 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65992" />
    <CreationDate amount="2004-06-07 11:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Progress] Rescheduled jobs are not shown in the progress view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 RC1
Update to the latest ui jobs example and create a job that reschedules. The
first invocation of the job will show in the progress view, but subsequent ones
will only show in verbose mode. Although the status line does correctly show the
job.
This is a consequence of bug #68151
Created attachment 12636
Patch for NewProgressViewer.java

Relayouts the view if a refresh(item) was in fact an add(item).
patch just adds an additional refresh to the view in case an refresh(item) event was in fact a add(item) 
event. The old code already added the item but didn't refresh the view. 

very low risk
suggest to fix for RC4
Jean-Michel, could you give it a try?
Thanks.

Verified with the test view. +1 from me.

Note that this is a workaround for Bug 68151 which will not be revisited until 
post 3.0.


*** This bug has been marked as a duplicate of 62955 ***
Wrong dup
Here is a test case that I believe is related. Using the Job Factory view:

Duration: 1 minute
Start delay: 1000
Quantity: 1

Click "Create jobs"

The job starts after the 1 second delay, but never shows in the progress view. 
The job does correctly appear in the status line. Toggling verbose on and off 
will cause the job to appear.
Test case in comment #8 works fine after applying the patch of #2.

John can you confirm?
(Please note that due to bug #68150 sometimes the first job doesn't show up immediately.
But this is true both for the ProgressViewer and the StatusLine which seems to confirm bug #68150)

If yes, I suggest to release patch for next RC4 build.
Patch reviewed by KH and TC. Released for build 20040623-1200
Verified in 20040623-1800</WithStack>
    <WithOutStack>3.0 RC1
Update to the latest ui jobs example and create a job that reschedules. The
first invocation of the job will show in the progress view, but subsequent ones
will only show in verbose mode. Although the status line does correctly show the
job.
This is a consequence of bug #68151
Created attachment 12636
Patch for NewProgressViewer.java

Relayouts the view if a refresh(item) was in fact an add(item).
patch just adds an additional refresh to the view in case an refresh(item) event was in fact a add(item) 
event. The old code already added the item but didn't refresh the view. 

very low risk
suggest to fix for RC4
Jean-Michel, could you give it a try?
Thanks.

Verified with the test view. +1 from me.

Note that this is a workaround for Bug 68151 which will not be revisited until 
post 3.0.


*** This bug has been marked as a duplicate of 62955 ***
Wrong dup
Here is a test case that I believe is related. Using the Job Factory view:

Duration: 1 minute
Start delay: 1000
Quantity: 1

Click "Create jobs"

The job starts after the 1 second delay, but never shows in the progress view. 
The job does correctly appear in the status line. Toggling verbose on and off 
will cause the job to appear.
Test case in comment #8 works fine after applying the patch of #2.

John can you confirm?
(Please note that due to bug #68150 sometimes the first job doesn't show up immediately.
But this is true both for the ProgressViewer and the StatusLine which seems to confirm bug #68150)

If yes, I suggest to release patch for next RC4 build.
Patch reviewed by KH and TC. Released for build 20040623-1200
Verified in 20040623-1800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65993" />
    <CreationDate amount="2004-06-07 11:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>workbench status bar takes too much vertical space</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I can't help notice that the vertical space the workbench staus bar occupies is
too much. 
I often work on a laptop and there at 1280x1024, I maximize the workbench and
get rid of the window manager borders (on linux, KDE 3.2) - under such
circumstances the waste looks striking.

It's not the only component that is wasting screen estate, but it is a major one.
Others are, IMO the tabs and the toolbar - they could all be shorter. 
the right size for me would be roughly the height of a menu.
Compare the status bar height with the toolbar height, I think they will be the
same.  I think the status bar is large so that it can fit toolbar items (fast
view buttons and the progress bar button, for example).
yes they are about the same, and as I said, all of them could be shorter.
admittedly, changing them *all* would be a big saving. 
I think this is an SWT issue.

If you compare Windows with Linux-Gtk+ in this respect you will see that Gtk+
toolbars are taller by a few pixels.  I do not know whether the padding is
something internal (defined in gtktoolbar.c or gtkbutton.c) or whether it is
something from the theme itself, but figuring that out might be worthwhile: if
it's the theme, maybe SWT can override it if they are careful.

Having the size of the status bar / tabs / toolbar depend on whether there are
actually buttons in it I think would be too inconsistent.
I'm going to mark this as WONTFIX for now.  We shouldn't be overriding GTK 
defaults, even it we find a way.</WithStack>
    <WithOutStack>I can't help notice that the vertical space the workbench staus bar occupies is
too much. 
I often work on a laptop and there at 1280x1024, I maximize the workbench and
get rid of the window manager borders (on linux, KDE 3.2) - under such
circumstances the waste looks striking.

It's not the only component that is wasting screen estate, but it is a major one.
Others are, IMO the tabs and the toolbar - they could all be shorter. 
the right size for me would be roughly the height of a menu.
Compare the status bar height with the toolbar height, I think they will be the
same.  I think the status bar is large so that it can fit toolbar items (fast
view buttons and the progress bar button, for example).
yes they are about the same, and as I said, all of them could be shorter.
admittedly, changing them *all* would be a big saving. 
I think this is an SWT issue.

If you compare Windows with Linux-Gtk+ in this respect you will see that Gtk+
toolbars are taller by a few pixels.  I do not know whether the padding is
something internal (defined in gtktoolbar.c or gtkbutton.c) or whether it is
something from the theme itself, but figuring that out might be worthwhile: if
it's the theme, maybe SWT can override it if they are careful.

Having the size of the status bar / tabs / toolbar depend on whether there are
actually buttons in it I think would be too inconsistent.
I'm going to mark this as WONTFIX for now.  We shouldn't be overriding GTK 
defaults, even it we find a way.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65994" />
    <CreationDate amount="2004-06-07 11:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Draw2d [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Traverse in LightweightSystem. (e.doit should not be set to true)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="502" end="712" />
        <code>graphicalViewer.getControl().addTraverseListener(new TraverseListener() {
	public void keyTraversed(TraverseEvent e) {
		if (currentToolWouldLikeTAB())
			e.doit = false;// allow dispatchKeyPressed() later
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The event dispatcher is not getting a key down event for TAB because the 
method keyTraversed in LightweightSystem.EventHandler is setting e.doit = 
true. 

I tryied to work it around by subclassing EventHandler but I can't do this 
because createEventHandler() is final and internalCreateEventHandler is 
default.

I would like to override (configure) e.doit so that the tool would get the TAB 
as e key event.
You don't need to subclass anything, just add another traverse listener to the 
control.

graphicalViewer.getControl().addTraverseListener(new TraverseListener() {
	public void keyTraversed(TraverseEvent e) {
		if (currentToolWouldLikeTAB())
			e.doit = false;// allow dispatchKeyPressed() later
	}
});
I think the only thing we could do here would be to add some new API to tools 
so that they can intercept (and therefore prevent) the traverse event.  We 
can't make API changes at this point.  Deferred to 3.1
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.</WithStack>
    <WithOutStack>The event dispatcher is not getting a key down event for TAB because the 
method keyTraversed in LightweightSystem.EventHandler is setting e.doit = 
true. 

I tryied to work it around by subclassing EventHandler but I can't do this 
because createEventHandler() is final and internalCreateEventHandler is 
default.

I would like to override (configure) e.doit so that the tool would get the TAB 
as e key event.
You don't need to subclass anything, just add another traverse listener to the 
control.

graphicalViewer.getControl().addTraverseListener(new TraverseListener() {
	public void keyTraversed(TraverseEvent e) {
		if (currentToolWouldLikeTAB())
			e.doit = false;// allow dispatchKeyPressed() later
	}
});
I think the only thing we could do here would be to add some new API to tools 
so that they can intercept (and therefore prevent) the traverse event.  We 
can't make API changes at this point.  Deferred to 3.1
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65995" />
    <CreationDate amount="2004-06-07 11:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error exporting plugin as deployable feature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Checkout some plugin project from a repository</Line>
          <Line>2) Export &gt; Deployable plugins and fragments</Line>
          <Line>3) Enter a zip file location in a nonexistent directory (such as</Line>
          <Line>c:\foo\bar.zip).</Line>
          <Line>4) Click Finish</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20040607

1) Checkout some plugin project from a repository
2) Export &gt; Deployable plugins and fragments
3) Enter a zip file location in a nonexistent directory (such as 
c:\foo\bar.zip).
4) Click Finish

Error occurs: Problems during export. Problem creating zip: c:\foo\bar.zip 
(The system cannot find the path specified)(and the archive is probably 
corrupt but I could not delete it)

Expected result: It creates the directory for me, or at least gives a more 
accurate description of the problem. The "archive is probably corrupt" is a 
scary error message.
This has been fixed in HEAD.</WithStack>
    <WithOutStack>Build: I20040607

1) Checkout some plugin project from a repository
2) Export &gt; Deployable plugins and fragments
3) Enter a zip file location in a nonexistent directory (such as 
c:\foo\bar.zip).
4) Click Finish

Error occurs: Problems during export. Problem creating zip: c:\foo\bar.zip 
(The system cannot find the path specified)(and the archive is probably 
corrupt but I could not delete it)

Expected result: It creates the directory for me, or at least gives a more 
accurate description of the problem. The "archive is probably corrupt" is a 
scary error message.
This has been fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65996" />
    <CreationDate amount="2004-06-07 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[M9] Problem with project properties dialog, build command</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the 'C/C++ Make Project' dialog, 'Build command' box.
If I do not use the default, any changes that I make to the 'Build command' edit
box are ignored when I click either Apply or OK.

I make a change, I click OK, I go back into it to check and the change is gone.
A bug shared is a bug solved. Or something like that.
This has already been fixed using the latest CDT builds along with RC1 of the
platform.
A duplicate of bug 65848.

*** Bug 66575 has been marked as a duplicate of this bug. ***
*** Bug 68492 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>In the 'C/C++ Make Project' dialog, 'Build command' box.
If I do not use the default, any changes that I make to the 'Build command' edit
box are ignored when I click either Apply or OK.

I make a change, I click OK, I go back into it to check and the change is gone.
A bug shared is a bug solved. Or something like that.
This has already been fixed using the latest CDT builds along with RC1 of the
platform.
A duplicate of bug 65848.

*** Bug 66575 has been marked as a duplicate of this bug. ***
*** Bug 68492 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65997" />
    <CreationDate amount="2004-06-07 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.wsdl" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>wsdlvalidateui -- ant: could not find files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="assignment">
        <location start="686" end="764" />
        <code>DirectoryScanner ds = fileset.getDirectoryScanner(fileset.getProject());</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="765" end="785" />
        <code>//added line</code>
      </source_code>
      <source_code type="assignment">
        <location start="785" end="846" />
        <code>String basedir = ds.getBasedir().toString() + File.separator;</code>
      </source_code>
      <source_code type="assignment">
        <location start="848" end="896" />
        <code>String[] filelist = ds.getIncludedFiles();</code>
      </source_code>
      <source_code type="assignment">
        <location start="897" end="934" />
        <code>int numFiles = filelist.length;</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="935" end="1124" />
        <code>if (files != null &amp;&amp; numFiles &gt; 0)
      {
        for (int i = 0; i &lt; numFiles; i++)
        {
          //changed line 
          files.add(basedir + filelist[i]);
        }
      }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.wsdl.validate.ui.ant.WSDLValidate.getFileList() return a list of 
files with relative path to project dir. This is wrong when to-be-validated 
wsdl files are located elsewhere 

In the following ant snippet, wsvt will report "can't find files" error since 
it tries to locate files relative to project rather than ${demo.wsdl.dir}.

    &lt;target name="demos.wsdl.validate"&gt;
        &lt;eclipse.wsdl.validate failonerror="false" wsicompliance="REQUIRE" 
schemaDir="${schema.dir}"&gt;
            &lt;fileset dir="${demo.wsdl.dir}"&gt;
                &lt;filename name="**/*.wsdl"/&gt;
            &lt;/fileset&gt;
        &lt;/eclipse.wsdl.validate&gt;
    &lt;/target&gt;

the solution: in getFileset method:

      DirectoryScanner ds = fileset.getDirectoryScanner(fileset.getProject());

//added line      
String basedir = ds.getBasedir().toString() + File.separator;

      String[] filelist = ds.getIncludedFiles();
      int numFiles = filelist.length;
      if (files != null &amp;&amp; numFiles &gt; 0)
      {
        for (int i = 0; i &lt; numFiles; i++)
        {
          //changed line 
          files.add(basedir + filelist[i]);
        }
      }
Changing components as the WSVT project has merged with the WTP project.
This is incorrect behaviour as reported. Thanks for the suggested fix. I've
incorporated the change into the WSDL validator. Please verify with a WTP driver
from 0602 or later.
Thanks Bo. Closing bug.</WithStack>
    <WithOutStack>org.eclipse.wsdl.validate.ui.ant.WSDLValidate.getFileList() return a list of 
files with relative path to project dir. This is wrong when to-be-validated 
wsdl files are located elsewhere 

In the following ant snippet, wsvt will report "can't find files" error since 
it tries to locate files relative to project rather than ${demo.wsdl.dir}.

    &lt;target name="demos.wsdl.validate"&gt;
        &lt;eclipse.wsdl.validate failonerror="false" wsicompliance="REQUIRE" 
schemaDir="${schema.dir}"&gt;
            &lt;fileset dir="${demo.wsdl.dir}"&gt;
                &lt;filename name="**/*.wsdl"/&gt;
            &lt;/fileset&gt;
        &lt;/eclipse.wsdl.validate&gt;
    &lt;/target&gt;

the solution: in getFileset method:

      DirectoryScanner ds = fileset.getDirectoryScanner(fileset.getProject());

//added line      
String basedir = ds.getBasedir().toString() + File.separator;

      String[] filelist = ds.getIncludedFiles();
      int numFiles = filelist.length;
      if (files != null &amp;&amp; numFiles &gt; 0)
      {
        for (int i = 0; i &lt; numFiles; i++)
        {
          //changed line 
          files.add(basedir + filelist[i]);
        }
      }
Changing components as the WSVT project has merged with the WTP project.
This is incorrect behaviour as reported. Thanks for the suggested fix. I've
incorporated the change into the WSDL validator. Please verify with a WTP driver
from 0602 or later.
Thanks Bo. Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65998" />
    <CreationDate amount="2004-06-07 11:55:00 -0400" />
    <DupId amount="64861" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>code assist popup selection highlight invisible on linux</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>cod assist popup menu selection colors are extremely close to the popup background color on 
linux+gtk (and possibly osx too, i can't recall), making it very difficult to determine which item is 
the current selection. 
 
There seems to be no way to configure this setting as well, unless i'm just missing it.
Having the same problem (linux+gtk) - selection is invisible.  Changing setting
for background color of menu does help as custom background color appears for a
moment then is replaced with the off-white default.
Sorry, meant to say changing background color does NOT help...


*** This bug has been marked as a duplicate of 64861 ***</WithStack>
    <WithOutStack>cod assist popup menu selection colors are extremely close to the popup background color on 
linux+gtk (and possibly osx too, i can't recall), making it very difficult to determine which item is 
the current selection. 
 
There seems to be no way to configure this setting as well, unless i'm just missing it.
Having the same problem (linux+gtk) - selection is invisible.  Changing setting
for background color of menu does help as custom background color appears for a
moment then is replaced with the off-white default.
Sorry, meant to say changing background color does NOT help...


*** This bug has been marked as a duplicate of 64861 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="65999" />
    <CreationDate amount="2004-06-07 11:59:00 -0400" />
    <DupId amount="64136" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>source not found for anonymous classes anymore</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>when an exception is thrown from an anonymous class, clicking the link in the
traceback displays a message "Source not found for Bug$1." this used to work in
previous versions, although it didn't work in M9.

i'm using 3.0rc1.
Created attachment 11670
demonstrates source not found for anonymous class bug

run this, it fails with an exception. click on the various links in the
traceback to demonstrate the bug.
Move to JDT/Debug


*** This bug has been marked as a duplicate of 64136 ***</WithStack>
    <WithOutStack>when an exception is thrown from an anonymous class, clicking the link in the
traceback displays a message "Source not found for Bug$1." this used to work in
previous versions, although it didn't work in M9.

i'm using 3.0rc1.
Created attachment 11670
demonstrates source not found for anonymous class bug

run this, it fails with an exception. click on the various links in the
traceback to demonstrate the bug.
Move to JDT/Debug


*** This bug has been marked as a duplicate of 64136 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="66000" />
    <CreationDate amount="2004-06-07 12:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>[ViewMgmt] AssertionFailedException in DefaultPartPresentation.getTabFolder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341145328">
        <Exception>org.eclipse.jface.util.Assert$AssertionFailedException</Exception>
        <Reason>Assertion failed:</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.util.Assert.isTrue(Assert.java:168)</Frame>
          <Frame depth="1">org.eclipse.jface.util.Assert.isTrue(Assert.java:154)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.presentations.DefaultPartPresentation.getTabFolder(DefaultPartPresentation.java:627)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.presentations.DefaultEditorPresentation$1.propertyChange(DefaultEditorPresentation.java:70)</Frame>
          <Frame depth="4">org.eclipse.ui.plugin.AbstractUIPlugin$2.run(AbstractUIPlugin.java:266)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="7">org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.firePropertyChangeEvent(AbstractUIPlugin.java:264)</Frame>
          <Frame depth="8">org.eclipse.ui.plugin.AbstractUIPlugin$1.propertyChange(AbstractUIPlugin.java:204)</Frame>
          <Frame depth="9">org.eclipse.core.internal.preferences.PreferenceForwarder.preferenceChange(PreferenceForwarder.java:115)</Frame>
          <Frame depth="10">org.eclipse.core.internal.preferences.EclipsePreferences$4.run(EclipsePreferences.java:743)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="13">org.eclipse.core.internal.preferences.EclipsePreferences.preferenceChanged(EclipsePreferences.java:746)</Frame>
          <Frame depth="14">org.eclipse.core.internal.preferences.EclipsePreferences.put(EclipsePreferences.java:757)</Frame>
          <Frame depth="15">org.eclipse.core.internal.preferences.PreferenceForwarder.setValue(PreferenceForwarder.java:604)</Frame>
          <Frame depth="16">org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.setValue(AbstractUIPlugin.java:473)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations(EditorRegistry.java:879)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.performOk(FileEditorsPreferencePage.java:407)</Frame>
          <Frame depth="19">org.eclipse.jface.preference.PreferenceDialog$11.run(PreferenceDialog.java:745)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:758)</Frame>
          <Frame depth="22">org.eclipse.jface.preference.PreferenceDialog.okPressed(PreferenceDialog.java:728)</Frame>
          <Frame depth="23">org.eclipse.jface.preference.PreferenceDialog.buttonPressed(PreferenceDialog.java:199)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.buttonPressed(WorkbenchPreferenceDialog.java:75)</Frame>
          <Frame depth="25">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:506)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)</Frame>
          <Frame depth="31">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="32">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)</Frame>
          <Frame depth="34">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)</Frame>
          <Frame depth="37">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)</Frame>
          <Frame depth="45">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="47">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)</Frame>
          <Frame depth="48">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="49">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="50">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="51">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="52">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="53">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.run(Main.java:638)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.main(Main.java:622)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- open new workbench window</Line>
          <Line>- split and unsplit a bunch of editor panes using drag/drop</Line>
          <Line>- close the new workbench window</Line>
          <Line>- change the "show multiple editor tabs" and "editor tabs on top/bottom"</Line>
          <Line>preferences.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20040604-1600

Noticed several occurrences of the following in my .log from Friday:

Should investigate for RC2.

org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed:
at org.eclipse.jface.util.Assert.isTrue(Assert.java:168)
at org.eclipse.jface.util.Assert.isTrue(Assert.java:154)
at
org.eclipse.ui.internal.presentations.DefaultPartPresentation.getTabFolder(DefaultPartPresentation.java:627)
at
org.eclipse.ui.internal.presentations.DefaultEditorPresentation$1.propertyChange(DefaultEditorPresentation.java:70)
at org.eclipse.ui.plugin.AbstractUIPlugin$2.run(AbstractUIPlugin.java:266)
at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
at org.eclipse.core.runtime.Platform.run(Platform.java:758)
at
org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.firePropertyChangeEvent(AbstractUIPlugin.java:264)
at
org.eclipse.ui.plugin.AbstractUIPlugin$1.propertyChange(AbstractUIPlugin.java:204)
at
org.eclipse.core.internal.preferences.PreferenceForwarder.preferenceChange(PreferenceForwarder.java:115)
at
org.eclipse.core.internal.preferences.EclipsePreferences$4.run(EclipsePreferences.java:743)
at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
at org.eclipse.core.runtime.Platform.run(Platform.java:758)
at
org.eclipse.core.internal.preferences.EclipsePreferences.preferenceChanged(EclipsePreferences.java:746)
at
org.eclipse.core.internal.preferences.EclipsePreferences.put(EclipsePreferences.java:757)
at
org.eclipse.core.internal.preferences.PreferenceForwarder.setValue(PreferenceForwarder.java:604)
at
org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.setValue(AbstractUIPlugin.java:473)
at
org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations(EditorRegistry.java:879)
at
org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.performOk(FileEditorsPreferencePage.java:407)
at org.eclipse.jface.preference.PreferenceDialog$11.run(PreferenceDialog.java:745)
at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
at org.eclipse.core.runtime.Platform.run(Platform.java:758)
at
org.eclipse.jface.preference.PreferenceDialog.okPressed(PreferenceDialog.java:728)
at
org.eclipse.jface.preference.PreferenceDialog.buttonPressed(PreferenceDialog.java:199)
at
org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.buttonPressed(WorkbenchPreferenceDialog.java:75)
at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:506)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
at org.eclipse.jface.window.Window.open(Window.java:648)
at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)
at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)
at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
at org.eclipse.core.launcher.Main.run(Main.java:638)
at org.eclipse.core.launcher.Main.main(Main.java:622)


*** This bug has been marked as a duplicate of 59571 ***
You can reproduce this by leaking an editor presentation as described in bug
59571,  then sending it a property change by changing one of the global
preferrences (I changed both show editor tabs on top and show multiple tabs at
the same time).

I suspect this is a dupe of bug 59571.
turns out this is not a dup.  using the steps above, the assertion still 
happens after applying the fix from bug 59571
To reproduce: 

- open new workbench window
- split and unsplit a bunch of editor panes using drag/drop
- close the new workbench window
- change the "show multiple editor tabs" and "editor tabs on top/bottom"
preferences.

You'll get the assertation failure.
I get this exception in my target just by exiting and restarting my target. I just cleared my log, 
shutdown, and restarted. When the target came up, it had the above exception in the log. No split 
editors, no new workbench windows, no preference changes.
Fixed in head (inspected by Michael)
Jared, can you provide steps to recreate this? This will help us verifiy that is
has actually been fixed.
Unfortunately, I can't. I've just seen it intermittently.
Verified in I20040611 (0010) by Ines.</WithStack>
    <WithOutStack>build I20040604-1600

Noticed several occurrences of the following in my .log from Friday:

Should investigate for RC2.




*** This bug has been marked as a duplicate of 59571 ***
You can reproduce this by leaking an editor presentation as described in bug
59571,  then sending it a property change by changing one of the global
preferrences (I changed both show editor tabs on top and show multiple tabs at
the same time).

I suspect this is a dupe of bug 59571.
turns out this is not a dup.  using the steps above, the assertion still 
happens after applying the fix from bug 59571
To reproduce: 

- open new workbench window
- split and unsplit a bunch of editor panes using drag/drop
- close the new workbench window
- change the "show multiple editor tabs" and "editor tabs on top/bottom"
preferences.

You'll get the assertation failure.
I get this exception in my target just by exiting and restarting my target. I just cleared my log, 
shutdown, and restarted. When the target came up, it had the above exception in the log. No split 
editors, no new workbench windows, no preference changes.
Fixed in head (inspected by Michael)
Jared, can you provide steps to recreate this? This will help us verifiy that is
has actually been fixed.
Unfortunately, I can't. I've just seen it intermittently.
Verified in I20040611 (0010) by Ines.</WithOutStack>
  </Bug>
</infozilla-output>

