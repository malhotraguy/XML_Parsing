<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="68801" />
    <CreationDate amount="2004-06-28 14:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Doc seems out of date. ( Missing javadoc for classes )</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The class ContentAssistHandler was added some time after M7 and while it
is a public class there is no javadoc for it.
The source of ContentAssistHandler has javadoc. However, this package is missing
its package.html file so it is not included in the generated documentation.
Moving to text.
*** Bug 83932 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
start verifying
The package and the class are there but the package is missing in the contents
list (left side).

The package is missing in doc.isv's topics_Reference.html

Approving for RC2.
Fixed in HEAD
Fixed in HEAD
VERIFIED in N20050607-0010.  Dani, please update state
.</WithStack>
    <WithOutStack>The class ContentAssistHandler was added some time after M7 and while it
is a public class there is no javadoc for it.
The source of ContentAssistHandler has javadoc. However, this package is missing
its package.html file so it is not included in the generated documentation.
Moving to text.
*** Bug 83932 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
start verifying
The package and the class are there but the package is missing in the contents
list (left side).

The package is missing in doc.isv's topics_Reference.html

Approving for RC2.
Fixed in HEAD
Fixed in HEAD
VERIFIED in N20050607-0010.  Dani, please update state
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68802" />
    <CreationDate amount="2004-06-28 14:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.ui.themes identifier incorrect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>On the page
/org.eclipse.platform.doc.isv/reference/extension-points/org_eclipse_ui_themes.html
 the identifier for the themes extension point is listed as
org.eclipse.ui.TThthemes.  Shouldn't this be org.eclipse.ui.themes?

This extension point is listed as org.eclipse.ui.themes on the Platform
Extension Points page
(/org.eclipse.platform.doc.isv/reference/extension-points/index.html).
Kim, Can you comment on this and then pass it onto doc?
This is a problem in our schema file.  
Created attachment 12909
Patch for org.eclipse.ui
Mvm, 3.0.1?
yes
Fix in HEAD and in 3.0.1.
Verified in M20040715.
Also verified in 200409081421/GTK</WithStack>
    <WithOutStack>On the page
/org.eclipse.platform.doc.isv/reference/extension-points/org_eclipse_ui_themes.html
 the identifier for the themes extension point is listed as
org.eclipse.ui.TThthemes.  Shouldn't this be org.eclipse.ui.themes?

This extension point is listed as org.eclipse.ui.themes on the Platform
Extension Points page
(/org.eclipse.platform.doc.isv/reference/extension-points/index.html).
Kim, Can you comment on this and then pass it onto doc?
This is a problem in our schema file.  
Created attachment 12909
Patch for org.eclipse.ui
Mvm, 3.0.1?
yes
Fix in HEAD and in 3.0.1.
Verified in M20040715.
Also verified in 200409081421/GTK</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68803" />
    <CreationDate amount="2004-06-28 14:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>takes 5+ minutes to startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I just downloaded the 3.0 official release after using the m7, and m8 releases.
 i completely purged the m8 release directory off of my system and re-extracted
the 3.0 platform linux gTk and 3.0 ftp &amp; webdav plugin. and started eclipse..
and proceeded to wait over 5 minutes for eclipse to get past the the startup
splash screen and show the ide.  M7 did this as well, but M8 did not.
I have GTK 2.2.2 installed (ximian release) RH 7.3, with J2SDK 1..4.2_03 from sun.
Are there any log entries for the time you started Eclipse 3.0 for the first time?

Did it happen on subsequent startups?
no there are no log entries in the directory.
and yes it happens every single time.
Except now..
I started it 3 times and it took 5+ minutes..
I installed the subversion addon through the updates and it "Restarted" itself
and took 5+ minutes...
Just ran it now.. and it actually USED CPU.. and started fine. Twice in a row..

changing but to 'WorksForme'.
if it happens again.. i'll try to track down what may be causing it and reopen.
A good thing to do is to get a (few) thread dump(s) next time it takes too long
to start. That may give us a clue where it is spending so much time.
Can you give a quick HOW-TO of getting thread dumps?
Please see bug 50632 comment 2 for instructions on how to do it.</WithStack>
    <WithOutStack>I just downloaded the 3.0 official release after using the m7, and m8 releases.
 i completely purged the m8 release directory off of my system and re-extracted
the 3.0 platform linux gTk and 3.0 ftp &amp; webdav plugin. and started eclipse..
and proceeded to wait over 5 minutes for eclipse to get past the the startup
splash screen and show the ide.  M7 did this as well, but M8 did not.
I have GTK 2.2.2 installed (ximian release) RH 7.3, with J2SDK 1..4.2_03 from sun.
Are there any log entries for the time you started Eclipse 3.0 for the first time?

Did it happen on subsequent startups?
no there are no log entries in the directory.
and yes it happens every single time.
Except now..
I started it 3 times and it took 5+ minutes..
I installed the subversion addon through the updates and it "Restarted" itself
and took 5+ minutes...
Just ran it now.. and it actually USED CPU.. and started fine. Twice in a row..

changing but to 'WorksForme'.
if it happens again.. i'll try to track down what may be causing it and reopen.
A good thing to do is to get a (few) thread dump(s) next time it takes too long
to start. That may give us a clue where it is spending so much time.
Can you give a quick HOW-TO of getting thread dumps?
Please see bug 50632 comment 2 for instructions on how to do it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68804" />
    <CreationDate amount="2004-06-28 14:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] Always Run in background not restored to default in Workbench preference page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>R 3.0

If you select Restore defaults on the Workbench preference page always Run in 
background is not affected.
Fixed in build &gt;20040714
Marking closed</WithStack>
    <WithOutStack>R 3.0

If you select Restore defaults on the Workbench preference page always Run in 
background is not affected.
Fixed in build &gt;20040714
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68805" />
    <CreationDate amount="2004-06-28 14:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Plat) Accessibility: User should be able to use Hyades without a mouse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Users should be able to use Hyades without a mouse. Except of course functions 
like mouse-overs, etc that inherently depend on a mouse. This includes having 
good tab traversal (including view toolbars), keyboard shortcuts for all 
functions, and anything else that is required to use Hyades using only a 
keyboard.
in Profile launch configurations, only Common tab has keyboard shortcut,
other tabs need keyboard shortcuts eigher, or it is not convenient only using
keyboard.
This should be covered by Eclipse 
Can you give more information on what is not accesible ( exact view or steps to 
get there )
In Profile launch configurations,
tabs Host,Main,Profiling,Enviroment in 'Exnernal Java Application' node,
tab Agent in 'Attach - Java Process' node,
tabs Test,Excectution Results in 'Test' node 
etc. 


Console view need a keyboard shortcut for keyboard user.
Now the view just can be accessed by Window&gt;Show View&gt;Console using keyboard 
shortcut.
The Console is part of Eclipse, not Hyades

For the launch tabs, please check if the Eclipse launch config tabs can be 
navigated without the mouse ( I am trying to understand if this is a problem 
and if it is if it's an eclipse bug )

Eclipse launch config tabs can be navigated using arrow key &lt;- and -&gt;
but prerequisite is that one tab must be focused.
It's inconvenient.
I am not sure if it is necessary to implement context menu showing with 
keyboard shortcuts, when a node selected.
It seems Eclipse has no this feature.
Now haydes has no functionality to open the properties wizard of a profiling 
agent in Profiling Monitor without using mouse. 
Just like Package Explorer in the Java perspective, if you select a node in 
your project, you can open the properties via Alt-Enter action.
We should implement the same action here for keyboard users.

The launch configuration can be navigator with mouse, in order to focus on the
tab, all you need is use the 'tab' key to jump to the first tab, and then use
arrow key to continue.
Fixed in 3.3 and 4.0.
Verified. Closing bug.</WithStack>
    <WithOutStack>Users should be able to use Hyades without a mouse. Except of course functions 
like mouse-overs, etc that inherently depend on a mouse. This includes having 
good tab traversal (including view toolbars), keyboard shortcuts for all 
functions, and anything else that is required to use Hyades using only a 
keyboard.
in Profile launch configurations, only Common tab has keyboard shortcut,
other tabs need keyboard shortcuts eigher, or it is not convenient only using
keyboard.
This should be covered by Eclipse 
Can you give more information on what is not accesible ( exact view or steps to 
get there )
In Profile launch configurations,
tabs Host,Main,Profiling,Enviroment in 'Exnernal Java Application' node,
tab Agent in 'Attach - Java Process' node,
tabs Test,Excectution Results in 'Test' node 
etc. 


Console view need a keyboard shortcut for keyboard user.
Now the view just can be accessed by Window&gt;Show View&gt;Console using keyboard 
shortcut.
The Console is part of Eclipse, not Hyades

For the launch tabs, please check if the Eclipse launch config tabs can be 
navigated without the mouse ( I am trying to understand if this is a problem 
and if it is if it's an eclipse bug )

Eclipse launch config tabs can be navigated using arrow key &lt;- and -&gt;
but prerequisite is that one tab must be focused.
It's inconvenient.
I am not sure if it is necessary to implement context menu showing with 
keyboard shortcuts, when a node selected.
It seems Eclipse has no this feature.
Now haydes has no functionality to open the properties wizard of a profiling 
agent in Profiling Monitor without using mouse. 
Just like Package Explorer in the Java perspective, if you select a node in 
your project, you can open the properties via Alt-Enter action.
We should implement the same action here for keyboard users.

The launch configuration can be navigator with mouse, in order to focus on the
tab, all you need is use the 'tab' key to jump to the first tab, and then use
arrow key to continue.
Fixed in 3.3 and 4.0.
Verified. Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68806" />
    <CreationDate amount="2004-06-28 15:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Execution Flow View allows multiple zoom buttons to be selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In the Execution Flow View
When there is data available the current zoom buttons only allow one to be 
selected. However when the view is on "No data is available for display." it 
allows all three of the current zoom buttons to be selected at once.

Also:
If you have the "zoom in" button selected in the Execution Flow view, and link 
to viewer is on. Then you move to a profiling run without Execution Flow data 
it will select the "Select Zoom" button as well. Then when you move back to the 
run with Execution Flow data, both buttons are selected and the behavior is 
changed to "Select Zoom".
Fix submitted.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>In the Execution Flow View
When there is data available the current zoom buttons only allow one to be 
selected. However when the view is on "No data is available for display." it 
allows all three of the current zoom buttons to be selected at once.

Also:
If you have the "zoom in" button selected in the Execution Flow view, and link 
to viewer is on. Then you move to a profiling run without Execution Flow data 
it will select the "Select Zoom" button as well. Then when you move back to the 
run with Execution Flow data, both buttons are selected and the behavior is 
changed to "Select Zoom".
Fix submitted.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68807" />
    <CreationDate amount="2004-06-28 15:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Workbench] clearcase plugin checkin dialog at Eclipse shutdown broken by 3.0M9 or later (it worked in 3.0M8)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341155959">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">com.rational.clearcase.RSCMService.onDemandCheckIn(RSCMService.java:1694)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341155959">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">com.rational.clearcase.RSCMService.onDemandCheckIn(RSCMService.java:1694)</Frame>
          <Frame depth="1">com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1574)</Frame>
          <Frame depth="2">com.rational.clearcase.RSCMService.onWorkspaceSave(RSCMService.java:2003)</Frame>
          <Frame depth="3">com.rational.clearcase.ClearCasePlugin.prepareToSave(ClearCasePlugin.java:407)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:305)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:129)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:141)</Frame>
          <Frame depth="9">org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1321)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1707)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$5.run(IDEWorkbenchAdvisor.java:468)</Frame>
          <Frame depth="12">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341155959">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">com.rational.clearcase.RSCMService.onDemandCheckIn(RSCMService.java:1694)</Frame>
          <Frame depth="1">com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1574)</Frame>
          <Frame depth="2">com.rational.clearcase.RSCMService.onWorkspaceSave(RSCMService.java:2003)</Frame>
          <Frame depth="3">com.rational.clearcase.ClearCasePlugin.prepareToSave(ClearCasePlugin.java:407)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:305)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:129)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:141)</Frame>
          <Frame depth="9">org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1321)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1707)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$5.run(IDEWorkbenchAdvisor.java:468)</Frame>
          <Frame depth="12">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When the Clearcase plugin made by Rational is connected to the Clearcase 
server, and files are checked out, then upon closing Eclipse a dialog used to 
come up asking whether I want to checkin any files currently checked out.

It WAS working in Eclipe 3.0M8 (with the Xerces plugin copied over from M7 and 
Clearcase dependency on Xerces plugin version bumped up to 4.0.13 in the 
Clearcase plugin).

In 3.0 it is broken, it throws two exceptions in the log, both at the same line 
in the same class: 
java.lang.NullPointerException
	at com.rational.clearcase.RSCMService.onDemandCheckIn
(RSCMService.java:1694)
        ...

That line is the following, according to JAD:

  elementselectiondialog = 
    new ElementSelectionDialog(
       Display.getCurrent().getActiveShell(), 
       unitstatuscache, byte0, 
       ResourceClass.GetResourceString
("elementSelectionDialog.Check_In_Elements"), 
       false);

I guess Display.getCurrent() returns null in this case.

It was working in 3.0M8 (other things were not).

The entire exception is the following:

!SESSION Jun 28, 2004 19:57:18.901 ---------------------------------------------
eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.core.runtime 4 2 Jun 28, 2004 19:57:18.901
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
	at com.rational.clearcase.RSCMService.onDemandCheckIn
(RSCMService.java:1694)
	at com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1574)
	at com.rational.clearcase.RSCMService.onWorkspaceSave
(RSCMService.java:2003)
	at com.rational.clearcase.ClearCasePlugin.prepareToSave
(ClearCasePlugin.java:407)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:305)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:129)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:141)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:1321)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1707)
	at org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$5.run
(IDEWorkbenchAdvisor.java:468)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)

!ENTRY org.eclipse.ui.ide 4 4 Jun 28, 2004 19:57:21.589
!MESSAGE Problems saving workspace

!ENTRY org.eclipse.ui.ide 2 1 Jun 28, 2004 19:57:21.589
!MESSAGE Problems occurred while trying to save the state of the workbench.
!SUBENTRY 1 org.eclipse.core.resources 2 566 Jun 28, 2004 19:57:21.589
!MESSAGE Problems occurred during save.
!STACK 0
java.lang.NullPointerException
	at com.rational.clearcase.RSCMService.onDemandCheckIn
(RSCMService.java:1694)
	at com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1574)
	at com.rational.clearcase.RSCMService.onWorkspaceSave
(RSCMService.java:2003)
	at com.rational.clearcase.ClearCasePlugin.prepareToSave
(ClearCasePlugin.java:407)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:305)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:129)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:141)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:1321)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1707)
	at org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$5.run
(IDEWorkbenchAdvisor.java:468)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)

Those are the only exceptions in the log for this Eclipse session.
Display.getCurrent() is spec'd to be able to return null.  It appears that your
code is running during shutdown and this is after the display is disposed.  Have
you considered writing this as a background job that will be handled by the UI?
 The same as a workspace build will open a dialog on exit and give the user an
opportunity to cancel it and finish the exit right away?  

I'm marking this as INVALID, but plesae if you have a clearer example of how
Eclipse has changed in some unexpected way to introduce this reopen this bug.
It is not my code, it is the Rational Clearcase plugin.

Anyway, they have fixed this bug by now in the plugin, so it can remain as it is.</WithStack>
    <WithOutStack>When the Clearcase plugin made by Rational is connected to the Clearcase 
server, and files are checked out, then upon closing Eclipse a dialog used to 
come up asking whether I want to checkin any files currently checked out.

It WAS working in Eclipe 3.0M8 (with the Xerces plugin copied over from M7 and 
Clearcase dependency on Xerces plugin version bumped up to 4.0.13 in the 
Clearcase plugin).

In 3.0 it is broken, it throws two exceptions in the log, both at the same line 
in the same class: 
        ...

That line is the following, according to JAD:

  elementselectiondialog = 
    new ElementSelectionDialog(
       Display.getCurrent().getActiveShell(), 
       unitstatuscache, byte0, 
       ResourceClass.GetResourceString
("elementSelectionDialog.Check_In_Elements"), 
       false);

I guess Display.getCurrent() returns null in this case.

It was working in 3.0M8 (other things were not).

The entire exception is the following:

!SESSION Jun 28, 2004 19:57:18.901 ---------------------------------------------
eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.core.runtime 4 2 Jun 28, 2004 19:57:18.901
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0

!ENTRY org.eclipse.ui.ide 4 4 Jun 28, 2004 19:57:21.589
!MESSAGE Problems saving workspace

!ENTRY org.eclipse.ui.ide 2 1 Jun 28, 2004 19:57:21.589
!MESSAGE Problems occurred while trying to save the state of the workbench.
!SUBENTRY 1 org.eclipse.core.resources 2 566 Jun 28, 2004 19:57:21.589
!MESSAGE Problems occurred during save.
!STACK 0


Those are the only exceptions in the log for this Eclipse session.
Display.getCurrent() is spec'd to be able to return null.  It appears that your
code is running during shutdown and this is after the display is disposed.  Have
you considered writing this as a background job that will be handled by the UI?
 The same as a workspace build will open a dialog on exit and give the user an
opportunity to cancel it and finish the exit right away?  

I'm marking this as INVALID, but plesae if you have a clearer example of how
Eclipse has changed in some unexpected way to introduce this reopen this bug.
It is not my code, it is the Rational Clearcase plugin.

Anyway, they have fixed this bug by now in the plugin, so it can remain as it is.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68808" />
    <CreationDate amount="2004-06-28 15:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>all debug actions (step, terminate, etc), should be done async</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="3177" end="3230" />
        <code>protected void update(IAction action, ISelection s) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="3231" end="3393" />
        <code>if (isRunInBackground() &amp;&amp; fgBackgroundActionManager.isJobRunning()) {
		// Don't update enablement of background delegates while a job 
is running.
		return;
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>All of the debug actions (step, terminate, etc), currently communicate with 
the debug target in the main (UI) thread. Instead, the actions should be 
asyncronous (via jobs, debug async queue, etc). This avoids blocking the UI 
thread for targets that are not responding in a timely fashion. This may 
change the enablement logic for the associated actions.
I think this would be a big responsiveness improvement, but I have concerns
about the multi-threading problems that this will introduce. Not only for the
JDT debugger, but for others as well.

If we perform the debug actions in the background that means that the UI thread
will be able to call methods during operations that were previously
single-threaded for all intents and purposes.
If we use jobs, we can impose scheduling rules to avoid the problem.
Hmm... I don't think so. Scheduling rules don't apply to method calls coming out
of the UI thread.
You can make your own scheduling rule - one that says it can't run in parralel 
with another "step" action for the same thread.
Oops. I thought I replied to this yesterday.

My concern isn't about the actions being called again. It's about any number of
unknown events that can happen from the UI thread. A view can refresh, the user
can select an item, expand a tree, or perform an action from some other plugin.
It's just a sea of unknowns.
We won't know until we try - I.e. we need to understand the unknowns.
Created attachment 13496
org.eclipse.debug.ui.68808.patch

This patch moves terminate, disconnect, suspend, terminate-and-remove, and the
suspend actions into background jobs. No scheduling rule yet, but it's a
working progress report.
Implemented. Most of the changes are in the AbstractDebugActionDelegate. I added the notion of 
"isRunInBackground()" to the actions for the ones that should be run in a job. These actions 
automatically register themselves with a singleton "BackgroundActionManager". When a "background 
action" is run it tells the manager, which then disables all the other background actions. When the job 
finishes, it tells the manager, which then updates the action enablement.

The fact that all the other actions are disabled while one of them is running should prevent most 
multi-threading issues. But I still worry about problems related to UI refresh during one of these 
operations.

Changes to:
AbstractDebugActionDelegate - Added support for running actions in the background
DisconnectActionDelegate - run in background
ResumeActionDelegate - run in background
StepActionDelegate - run in background
SuspendActionDelegate - run in background
TerminateActionDelegate - run in background
TerminateAllAction - run in background + refactoring to make it consistent with other actions
TerminateAndRemoveActionDelegate - run in background

Please verify, DW.
Jared, the implementation looks reasonable. Just one subtle point: when a job 
finishes, we update the other actions based on "delegate.getSelection()". 
However, we do not cache the selection on selection change notification if the 
action is a "background" action. Should the code in "update..." also cache the 
selection if the action is a background action?

protected void update(IAction action, ISelection s) {
	if (isRunInBackground() &amp;&amp; fgBackgroundActionManager.isJobRunning()) {
		// Don't update enablement of background delegates while a job 
is running.
		return;
	}
On a second look, this is OK, as we don't want the selection to change before 
the job starts.</WithStack>
    <WithOutStack>All of the debug actions (step, terminate, etc), currently communicate with 
the debug target in the main (UI) thread. Instead, the actions should be 
asyncronous (via jobs, debug async queue, etc). This avoids blocking the UI 
thread for targets that are not responding in a timely fashion. This may 
change the enablement logic for the associated actions.
I think this would be a big responsiveness improvement, but I have concerns
about the multi-threading problems that this will introduce. Not only for the
JDT debugger, but for others as well.

If we perform the debug actions in the background that means that the UI thread
will be able to call methods during operations that were previously
single-threaded for all intents and purposes.
If we use jobs, we can impose scheduling rules to avoid the problem.
Hmm... I don't think so. Scheduling rules don't apply to method calls coming out
of the UI thread.
You can make your own scheduling rule - one that says it can't run in parralel 
with another "step" action for the same thread.
Oops. I thought I replied to this yesterday.

My concern isn't about the actions being called again. It's about any number of
unknown events that can happen from the UI thread. A view can refresh, the user
can select an item, expand a tree, or perform an action from some other plugin.
It's just a sea of unknowns.
We won't know until we try - I.e. we need to understand the unknowns.
Created attachment 13496
org.eclipse.debug.ui.68808.patch

This patch moves terminate, disconnect, suspend, terminate-and-remove, and the
suspend actions into background jobs. No scheduling rule yet, but it's a
working progress report.
Implemented. Most of the changes are in the AbstractDebugActionDelegate. I added the notion of 
"isRunInBackground()" to the actions for the ones that should be run in a job. These actions 
automatically register themselves with a singleton "BackgroundActionManager". When a "background 
action" is run it tells the manager, which then disables all the other background actions. When the job 
finishes, it tells the manager, which then updates the action enablement.

The fact that all the other actions are disabled while one of them is running should prevent most 
multi-threading issues. But I still worry about problems related to UI refresh during one of these 
operations.

Changes to:
AbstractDebugActionDelegate - Added support for running actions in the background
DisconnectActionDelegate - run in background
ResumeActionDelegate - run in background
StepActionDelegate - run in background
SuspendActionDelegate - run in background
TerminateActionDelegate - run in background
TerminateAllAction - run in background + refactoring to make it consistent with other actions
TerminateAndRemoveActionDelegate - run in background

Please verify, DW.
Jared, the implementation looks reasonable. Just one subtle point: when a job 
finishes, we update the other actions based on "delegate.getSelection()". 
However, we do not cache the selection on selection change notification if the 
action is a "background" action. Should the code in "update..." also cache the 
selection if the action is a background action?

protected void update(IAction action, ISelection s) {
	if (isRunInBackground() &amp;&amp; fgBackgroundActionManager.isJobRunning()) {
		// Don't update enablement of background delegates while a job 
is running.
		return;
	}
On a second look, this is OK, as we don't want the selection to change before 
the job starts.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68809" />
    <CreationDate amount="2004-06-28 15:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support for breakpoints in 1.5 source code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- Enhanced for Loop, breakpoints can be set in the expression and in the body.</Line>
          <Line>- Typesafe Enums, breakpoints can be set in the parameter of the enum constants,</Line>
          <Line>and in the methods and field, as in other types (not tested, will not work until</Line>
          <Line>jdt.core generate the AST elements for the enums).</Line>
          <Line>- Generic Types, breakpoints cannot be set on a line containing only generic</Line>
          <Line>type name, like for non-generic type name (a type name is not executable code,</Line>
          <Line>the breakpoint will be set on the next executable line if available).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Ensure we support breakpoint creation in 1.5 source code.
I released a new version of ValibBreakpointLocationLocator. It manages the
source element added in Java 5.0 :
- Enhanced for Loop, breakpoints can be set in the expression and in the body.
- Typesafe Enums, breakpoints can be set in the parameter of the enum constants,
and in the methods and field, as in other types (not tested, will not work until
jdt.core generate the AST elements for the enums).
- Generic Types, breakpoints cannot be set on a line containing only generic
type name, like for non-generic type name (a type name is not executable code,
the breakpoint will be set on the next executable line if available).

We need to test the code for the Enums when jdt.core manage then.
I tested the support for the Enums with jdt.core from HEAD, I'm able to add
breakpoints where I want.
Marking this bug fixed.
Please verify, Darin W.
Verified.
*** Bug 57977 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Ensure we support breakpoint creation in 1.5 source code.
I released a new version of ValibBreakpointLocationLocator. It manages the
source element added in Java 5.0 :
- Enhanced for Loop, breakpoints can be set in the expression and in the body.
- Typesafe Enums, breakpoints can be set in the parameter of the enum constants,
and in the methods and field, as in other types (not tested, will not work until
jdt.core generate the AST elements for the enums).
- Generic Types, breakpoints cannot be set on a line containing only generic
type name, like for non-generic type name (a type name is not executable code,
the breakpoint will be set on the next executable line if available).

We need to test the code for the Enums when jdt.core manage then.
I tested the support for the Enums with jdt.core from HEAD, I'm able to add
breakpoints where I want.
Marking this bug fixed.
Please verify, Darin W.
Verified.
*** Bug 57977 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68810" />
    <CreationDate amount="2004-06-28 15:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support for evaluations using 1.5 source code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="2294" end="2478" />
        <code>public class Main {

    public static void main(String[] args) {
        Vector&lt;String&gt; strings = new Vector&lt;String&gt;();
        strings.add("one");
**      strings.add("two");
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Our AST evaluation engine needs to support 1.5 source code.
Implemented the basic support for evaluation in Java 5.0 code.
Method calls on/from/with generic types, and access to field of/in generics are
working. I will file individual bugs for the other parts of the support.
There are no major changes in the code, the generics are a compiler thing, not a
runtime problem. The jdt compiler does the main job (resolving the method/field
names).
What was needed to be done was to generate a valid evaluation source with all
the generic information from the original source.

I also remove the class GenericSignature. It was no more needed, the jdt class
Signature was updated to manage generic signatures.
And I reworked a bit the JDI client implementation to return the 'simple' type
name (without generic information) for all the *typeName() methods (to be
consistent with bug 54913).

. ASTEvaluationEngine, EvaluationSourceGenerator: set parser options to JLS3 if
evaluation in Java 5.0 code.
. ASTInstructionCompiler: implemented new visitor() method (except for
visitor(EnhancedForStatement)).
. SourceBasedSourceGenerator: updated to generate code with all the generic
information if available.
. GenericSignature: removed, use jdt.core.Signature instead.
. ArrayTypeImpl, ReferenceTypeImpl, TypeImpl, ClassUnloadEventImpl: replaced
calls to GenericSignature by calls to Signature.
. FieldImpl, LocalVariableImpl, MethodImpl: replaced calls to GenericSignature
by calls to Signature, modified *typeName() methods.
Please verify, Darin W.
The class jdt.core.Signature doesn't generate exactly the name we need from a
type signature (it replaces '$' by '.', we need to keep the '$'s). I reverted to
the orginal implementation, using some custom code in TypeImpl.
This was the cause of the test failures in yesterday nightly build.

ArrayTypeImpl, ReferenceTypeImpl, TypeImpl, ClassUnloadEventImpl, FieldImpl,
LocalVariableImpl, MethodImpl: replace calls to Signature.toString(...) by calls
to TypeImpl.signatureToName(...).
Re-open to address the problem with casting. When a breakpoint is placed 
on "**", and the evaluations is "strings.get(1)", an error is produced:

Evaluation failed. Reason(s):
		Method "next" with signature "()Ljava/lang/String;" is not 
applicable on this object

public class Main {

    public static void main(String[] args) {
        Vector&lt;String&gt; strings = new Vector&lt;String&gt;();
        strings.add("one");
**      strings.add("two");
    }
}
Yes, I already filled bug 73822 for this problem.
The way I was creating method signature for Java 1.4 code doesn't work well with
the AST for Java 5.0. I'm working on it.
OK, marking this as fixed.
Verified</WithStack>
    <WithOutStack>Our AST evaluation engine needs to support 1.5 source code.
Implemented the basic support for evaluation in Java 5.0 code.
Method calls on/from/with generic types, and access to field of/in generics are
working. I will file individual bugs for the other parts of the support.
There are no major changes in the code, the generics are a compiler thing, not a
runtime problem. The jdt compiler does the main job (resolving the method/field
names).
What was needed to be done was to generate a valid evaluation source with all
the generic information from the original source.

I also remove the class GenericSignature. It was no more needed, the jdt class
Signature was updated to manage generic signatures.
And I reworked a bit the JDI client implementation to return the 'simple' type
name (without generic information) for all the *typeName() methods (to be
consistent with bug 54913).

. ASTEvaluationEngine, EvaluationSourceGenerator: set parser options to JLS3 if
evaluation in Java 5.0 code.
. ASTInstructionCompiler: implemented new visitor() method (except for
visitor(EnhancedForStatement)).
. SourceBasedSourceGenerator: updated to generate code with all the generic
information if available.
. GenericSignature: removed, use jdt.core.Signature instead.
. ArrayTypeImpl, ReferenceTypeImpl, TypeImpl, ClassUnloadEventImpl: replaced
calls to GenericSignature by calls to Signature.
. FieldImpl, LocalVariableImpl, MethodImpl: replaced calls to GenericSignature
by calls to Signature, modified *typeName() methods.
Please verify, Darin W.
The class jdt.core.Signature doesn't generate exactly the name we need from a
type signature (it replaces '$' by '.', we need to keep the '$'s). I reverted to
the orginal implementation, using some custom code in TypeImpl.
This was the cause of the test failures in yesterday nightly build.

ArrayTypeImpl, ReferenceTypeImpl, TypeImpl, ClassUnloadEventImpl, FieldImpl,
LocalVariableImpl, MethodImpl: replace calls to Signature.toString(...) by calls
to TypeImpl.signatureToName(...).
Re-open to address the problem with casting. When a breakpoint is placed 
on "**", and the evaluations is "strings.get(1)", an error is produced:

Evaluation failed. Reason(s):
		Method "next" with signature "()Ljava/lang/String;" is not 
applicable on this object

public class Main {

    public static void main(String[] args) {
        Vector&lt;String&gt; strings = new Vector&lt;String&gt;();
        strings.add("one");
**      strings.add("two");
    }
}
Yes, I already filled bug 73822 for this problem.
The way I was creating method signature for Java 1.4 code doesn't work well with
the AST for Java 5.0. I'm working on it.
OK, marking this as fixed.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68811" />
    <CreationDate amount="2004-06-28 15:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Commit: Cancel button behaves unexpectedly when there are resources to be added</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>3.0 final on linux-gtk

When using a project's popup menu in the Package Explorer view to invoke
"Team/Commit...", the following dialog appears if there are resources not under
repository control:

--- snip ---
There are &lt;number&gt; resources that are not under CVS version control. Do you want
to add them?
--- snap ---

The buttons in that dialog are "Yes", "No", "Cancel" and "Details &gt;&gt;".

Clicking the "Cancel" button does behave unexpectedly. I would expect it to
cancel the whole commit process, but there is a new dialog asking me for the
commit log message instead.
Yes, this actually only cancels the add. This is inconsistent with the fact that
the operation that showed this dialog was 'commit', as such, the commit should
be cancelled.
Is this one still valid? I mean, it's been quite a while since I filed it...
No it is not, there is now only a single commit wizard that handles the add 
and the commit.</WithStack>
    <WithOutStack>3.0 final on linux-gtk

When using a project's popup menu in the Package Explorer view to invoke
"Team/Commit...", the following dialog appears if there are resources not under
repository control:

--- snip ---
There are &lt;number&gt; resources that are not under CVS version control. Do you want
to add them?
--- snap ---

The buttons in that dialog are "Yes", "No", "Cancel" and "Details &gt;&gt;".

Clicking the "Cancel" button does behave unexpectedly. I would expect it to
cancel the whole commit process, but there is a new dialog asking me for the
commit log message instead.
Yes, this actually only cancels the add. This is inconsistent with the fact that
the operation that showed this dialog was 'commit', as such, the commit should
be cancelled.
Is this one still valid? I mean, it's been quite a while since I filed it...
No it is not, there is now only a single commit wizard that handles the add 
and the commit.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68812" />
    <CreationDate amount="2004-06-28 15:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>when cancelling checkout from clearcase, the editor(!!!) drops its content, and will contain an error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341155979">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Attempted to beginRule: R/, does not match 
outer scope rule: F/ThinkHealth Server/res</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)</Frame>
          <Frame depth="1">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPush(ImplicitJobs.java:86)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.push(ImplicitJobs.java:167)</Frame>
          <Frame depth="3">org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:241)</Frame>
          <Frame depth="4">org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:149)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:88)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1521)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1578)</Frame>
          <Frame depth="9">com.rational.clearcase.RSCMService.update(RSCMService.java:3407)</Frame>
          <Frame depth="10">com.rational.clearcase.RSCMService.updateUI(RSCMService.java:3549)</Frame>
          <Frame depth="11">com.rational.clearcase.RSCMService.updateUI(RSCMService.java:3565)</Frame>
          <Frame depth="12">com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1515)</Frame>
          <Frame depth="13">com.rational.clearcase.team.core.clearcase.CCFileModificationValidator$1.run(CCFileModificationValidator.java:176)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:135)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:25)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.syncExec(Display.java:2902)</Frame>
          <Frame depth="17">com.rational.clearcase.team.core.clearcase.CCFileModificationValidator.validateEdit(CCFileModificationValidator.java:172)</Frame>
          <Frame depth="18">org.eclipse.team.internal.core.FileModificationValidatorManager.validateEdit(FileModificationValidatorManager.java:70)</Frame>
          <Frame depth="19">org.eclipse.core.internal.resources.Workspace$5.run(Workspace.java:1755)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:521)</Frame>
          <Frame depth="22">org.eclipse.core.internal.resources.Workspace.validateEdit(Workspace.java:1761)</Frame>
          <Frame depth="23">org.eclipse.core.internal.filebuffers.ResourceFileBuffer.validateState(ResourceFileBuffer.java:312)</Frame>
          <Frame depth="24">org.eclipse.ui.editors.text.TextFileDocumentProvider$4.execute(TextFileDocumentProvider.java:822)</Frame>
          <Frame depth="25">org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:94)</Frame>
          <Frame depth="26">org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:67)</Frame>
          <Frame depth="27">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="28">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1559)</Frame>
          <Frame depth="29">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="30">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:73)</Frame>
          <Frame depth="31">org.eclipse.ui.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:63)</Frame>
          <Frame depth="32">org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:392)</Frame>
          <Frame depth="33">org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState(TextFileDocumentProvider.java:835)</Frame>
          <Frame depth="34">org.eclipse.ui.texteditor.AbstractTextEditor.validateState(AbstractTextEditor.java:3029)</Frame>
          <Frame depth="35">org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:3077)</Frame>
          <Frame depth="36">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="37">org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState(AbstractTextEditor.java:3072)</Frame>
          <Frame depth="38">org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.verifyText(AbstractTextEditor.java:208)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:193)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:793)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:778)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:586)</Frame>
          <Frame depth="45">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5539)</Frame>
          <Frame depth="46">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6391)</Frame>
          <Frame depth="47">org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2526)</Frame>
          <Frame depth="48">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4948)</Frame>
          <Frame depth="49">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4971)</Frame>
          <Frame depth="50">org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4720)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:793)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:778)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3041)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Control.windowProc(Control.java:2944)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.windowProc(Display.java:3146)</Frame>
          <Frame depth="60">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="61">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1374)</Frame>
          <Frame depth="62">org.eclipse.swt.internal.BidiUtil.windowProc(BidiUtil.java:647)</Frame>
          <Frame depth="63">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="64">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1450)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2254)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)</Frame>
          <Frame depth="68">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)</Frame>
          <Frame depth="69">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)</Frame>
          <Frame depth="71">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:277)</Frame>
          <Frame depth="72">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:239)</Frame>
          <Frame depth="73">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)</Frame>
          <Frame depth="74">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="75">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="76">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="77">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="78">org.eclipse.core.launcher.Main.basicRun(Main.java:267)</Frame>
          <Frame depth="79">org.eclipse.core.launcher.Main.run(Main.java:692)</Frame>
          <Frame depth="80">org.eclipse.core.launcher.Main.main(Main.java:676)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Upwards from 3.0M8, I think, the following thing happened:

With the Clearcase plugin made by Rational, when I try to modify a file that is 
not checked out to me in source control, instead of the normal dialog asking me 
if I would like to check out the file, the content of the editor containing the 
file to be modified WAS DROPPED and an error message appeared INSIDE THE EDITOR 
NOT EVEN IN THE normal style of the editor telling:

"Exception running validator code."

After this I could only close the editor, it was not usable to anything anymore.

The exception was probably this:

!ENTRY org.eclipse.core.runtime 4 2 Jun 28, 2004 21:05:57.635
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.IllegalArgumentException: Attempted to beginRule: R/, does not match 
outer scope rule: F/ThinkHealth Server/res
	at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)
	at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPush
(ImplicitJobs.java:86)
	at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.push
(ImplicitJobs.java:167)
	at org.eclipse.core.internal.jobs.ImplicitJobs.begin
(ImplicitJobs.java:241)
	at org.eclipse.core.internal.jobs.JobManager.beginRule
(JobManager.java:149)
	at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java:88)
	at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java:1521)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1554)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1578)
	at com.rational.clearcase.RSCMService.update(RSCMService.java:3407)
	at com.rational.clearcase.RSCMService.updateUI(RSCMService.java:3549)
	at com.rational.clearcase.RSCMService.updateUI(RSCMService.java:3565)
	at com.rational.clearcase.RSCMService.onDemand(RSCMService.java:1515)
	at 
com.rational.clearcase.team.core.clearcase.CCFileModificationValidator$1.run
(CCFileModificationValidator.java:176)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:135)
	at org.eclipse.ui.internal.UISynchronizer.syncExec
(UISynchronizer.java:25)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:2902)
	at 
com.rational.clearcase.team.core.clearcase.CCFileModificationValidator.validateE
dit(CCFileModificationValidator.java:172)
	at 
org.eclipse.team.internal.core.FileModificationValidatorManager.validateEdit
(FileModificationValidatorManager.java:70)
	at org.eclipse.core.internal.resources.Workspace$5.run
(Workspace.java:1755)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:610)
	at org.eclipse.core.runtime.Platform.run(Platform.java:521)
	at org.eclipse.core.internal.resources.Workspace.validateEdit
(Workspace.java:1761)
	at 
org.eclipse.core.internal.filebuffers.ResourceFileBuffer.validateState
(ResourceFileBuffer.java:312)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$4.execute
(TextFileDocumentProvider.java:822)
	at 
org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.r
un(TextFileDocumentProvider.java:94)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute
(WorkspaceModifyDelegatingOperation.java:67)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1559)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:105)
	at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:73)
	at org.eclipse.ui.editors.text.WorkspaceOperationRunner.run
(WorkspaceOperationRunner.java:63)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation
(TextFileDocumentProvider.java:392)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.validateState
(TextFileDocumentProvider.java:835)
	at org.eclipse.ui.texteditor.AbstractTextEditor.validateState
(AbstractTextEditor.java:3029)
	at org.eclipse.ui.texteditor.AbstractTextEditor$16.run
(AbstractTextEditor.java:3077)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.texteditor.AbstractTextEditor.validateEditorInputState
(AbstractTextEditor.java:3072)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ElementStateListener$Validator.veri
fyText(AbstractTextEditor.java:208)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:193)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:793)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:778)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:586)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5539)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6391)
	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2526)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4948)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4971)
	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4720)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:793)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:778)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1720)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1716)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3041)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2944)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3146)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1374)
	at org.eclipse.swt.internal.BidiUtil.windowProc(BidiUtil.java:647)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1450)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2254)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:257)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:90)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:277)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:239)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
	at org.eclipse.core.launcher.Main.run(Main.java:692)
	at org.eclipse.core.launcher.Main.main(Main.java:676)


This was working up to 3.0M7 as far as I remember, correctly bringing up a 
dialog asking if I want to check out the file, or complaining about not being 
connected to clearcase.

----------------------------------------------------

Now, that seems to be somewhat fixed in 3.0 release. If I am connected to 
clearcase and the status of the file is not unknown (it has been refreshed), 
then it properly brings up the dialog to check out the files.

However if I am not connected to clearcase, the same dropping the content of 
the editor and displaying an error message instead is still happens (although 
the usual error dialog which was there in this scenario until 3.0M7 (including) 
is now displayed before dropping the content) with the following error message:

File is read-only but not under version control (the usual not connected to 
clearcase error message).

If I am connected to clearcase, status is refreshed, but I cancel the checkout, 
or it is already checked out to someone else, then the same happens with the 
following message:

"User canceled checkout or checkout failed."


This might be considered a bug on the plugin's side of not complying to the 3.0 
API, but I am actually reluctant to accept any kind of editor dropping its 
content in favor of displaying an error message (which has been already 
displayed in a dialog box) instead as correct behavior.

There is no exception for this in the log.

The editor is still useless after the content is dropped and the error message 
appears in it (can only be closed).

Regards,

Robert Varga
The original bug (the exception) was Bug 59256 (fixed in 3.0).

The second message is from the clearcase plugin - you should report it to them.

*** This bug has been marked as a duplicate of 59256 ***
This bug was incorrectly marked as duplicate based on the first part of the bug 
that was necessary to understand what happened (that fixing the bug 59256) did 
not fully resolve the problem!!! 

Actually it has incorrectly been marked as resolved, since the problem that the 
content of the editor is dropped, is NOT FIXED, only a couple of specific 
validator messages are caught and handled, but not all.

There are also cases when the bug is not fixed, only a different error message 
is displayed. Two of them are outlined in this bug.

Therefore reopening this bug. Please read the entire original comment for this 
bug.
As to the second message is from the CC plugin:

the CC plugin correctly displays an error dialog, telling the message.

After manually closing the error dialog, THE CONTENT OF THE EDITOR THE FILE WAS 
OPENED IN IS DROPPED, AND THE EXACT SAME MESSAGE IS WRITTEN INTO THE EDITOR! 
Afterwards the editor is unusable, it can only be closed. This behaves so only 
since 3.0M8. This is the editor also behaving incorrectly, according to my 
opinion. I don't think the Clearcase plugin would instruct the editor to drop 
its content, since it has not changed since the Eclipse 2.0/2.1 times, and this 
bug exists since 3.0M8.

This can be any editor, normal text, or Java, or build.xml, anything. It will 
display the error message again instead of its current content.


And as to reporting the bug to the Clearcase plugin writers:

It was written by Rational. Rational was bought by IBM. You are from IBM. So 
you are even the closest person to whom I can report this bug, since I cannot 
find an address to where I could report this bug. 

Could you supply one that would be usable to reach the maintainer team of the 
Clearcase plugin at IBM? Or would you make me believe that IBM does not care 
about the Clearcase plugin for Eclipse withing one year of buying Rational?
Robert, 

Indeed some of us do work for IBM and want you to be successful here, but this 
fact does not mean we should handle IBM product requests on eclipse.org.  To 
help we have compiled some information to help get your answers.  In reading 
the forums on the ClearCase web site they do not seem to have ported to the 
Eclipse R3.0 level yet.  Only the owners of the ClearCase plug-ins can give 
the real answers to when they will do this.

We have found a Rational Support Number (in North America): 1-800-433-5444

Also the Rational support page: 
http://www-306.ibm.com/software/rational/support/contact.html
This page talks about how to submit support requests to Rational.  They use an 
electronic system called ESR.  To use it I think you must have an id,  you 
might need to talk to the person who has your ClearCase software license 
information and support agreement?


Hello Michael,

thanks for the information. I agree that Eclipse maintainers should not care 
for bugs in the Clearcase plugin.

However I am still not entirely convinced that this scenario (displaying an 
error message TWICE, and for the second time IN AN EDITOR IN THE PLACE OF THE 
EDITOR CONTENT after it has been displayed in an error dialog, rendering that 
editor instance unusable) is really the fault of the Clearcase plugin and only 
the Clearcase plugin, considering that this broke only in 3.0M8, but it worked 
without a problem until 3.0M7 (included).

Of course I am not an expert on Eclipse matters, but my hunch tells me that it 
may eventually turn out to be a bug in the framework and not in the plugin. I 
have this hunch because the normal error dialog is displayed first when the 
plugin is not connected to clearcase, and this redisplay of the error in the 
editor happens after it. If the dialog had not turned up, I would say, maybe it 
is really only the plugin.

Regards,

Robert Varga

What you say might be true, no arguments there.  The way we would resolve this is:

#1) Please log a bug against ClearCase (we do not have it running here, so we
would not be able to debug this scenario)
#1b) you could also post the bug number here so we could track it
#2) if a ClearCase team member investigates and indeed finds that the problem is
in Eclipse, they would post a simpler test case (not based on ClearCase) to
Eclipse so they can track this problem.
#3) Once we fix it we would tell them, and they would in-turn notify you.

thanks for staying in touch on this bug.
closing, please re-open when information from the ClearCase team is available</WithStack>
    <WithOutStack>Upwards from 3.0M8, I think, the following thing happened:

With the Clearcase plugin made by Rational, when I try to modify a file that is 
not checked out to me in source control, instead of the normal dialog asking me 
if I would like to check out the file, the content of the editor containing the 
file to be modified WAS DROPPED and an error message appeared INSIDE THE EDITOR 
NOT EVEN IN THE normal style of the editor telling:

"Exception running validator code."

After this I could only close the editor, it was not usable to anything anymore.

The exception was probably this:

!ENTRY org.eclipse.core.runtime 4 2 Jun 28, 2004 21:05:57.635
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0



This was working up to 3.0M7 as far as I remember, correctly bringing up a 
dialog asking if I want to check out the file, or complaining about not being 
connected to clearcase.

----------------------------------------------------

Now, that seems to be somewhat fixed in 3.0 release. If I am connected to 
clearcase and the status of the file is not unknown (it has been refreshed), 
then it properly brings up the dialog to check out the files.

However if I am not connected to clearcase, the same dropping the content of 
the editor and displaying an error message instead is still happens (although 
the usual error dialog which was there in this scenario until 3.0M7 (including) 
is now displayed before dropping the content) with the following error message:

File is read-only but not under version control (the usual not connected to 
clearcase error message).

If I am connected to clearcase, status is refreshed, but I cancel the checkout, 
or it is already checked out to someone else, then the same happens with the 
following message:

"User canceled checkout or checkout failed."


This might be considered a bug on the plugin's side of not complying to the 3.0 
API, but I am actually reluctant to accept any kind of editor dropping its 
content in favor of displaying an error message (which has been already 
displayed in a dialog box) instead as correct behavior.

There is no exception for this in the log.

The editor is still useless after the content is dropped and the error message 
appears in it (can only be closed).

Regards,

Robert Varga
The original bug (the exception) was Bug 59256 (fixed in 3.0).

The second message is from the clearcase plugin - you should report it to them.

*** This bug has been marked as a duplicate of 59256 ***
This bug was incorrectly marked as duplicate based on the first part of the bug 
that was necessary to understand what happened (that fixing the bug 59256) did 
not fully resolve the problem!!! 

Actually it has incorrectly been marked as resolved, since the problem that the 
content of the editor is dropped, is NOT FIXED, only a couple of specific 
validator messages are caught and handled, but not all.

There are also cases when the bug is not fixed, only a different error message 
is displayed. Two of them are outlined in this bug.

Therefore reopening this bug. Please read the entire original comment for this 
bug.
As to the second message is from the CC plugin:

the CC plugin correctly displays an error dialog, telling the message.

After manually closing the error dialog, THE CONTENT OF THE EDITOR THE FILE WAS 
OPENED IN IS DROPPED, AND THE EXACT SAME MESSAGE IS WRITTEN INTO THE EDITOR! 
Afterwards the editor is unusable, it can only be closed. This behaves so only 
since 3.0M8. This is the editor also behaving incorrectly, according to my 
opinion. I don't think the Clearcase plugin would instruct the editor to drop 
its content, since it has not changed since the Eclipse 2.0/2.1 times, and this 
bug exists since 3.0M8.

This can be any editor, normal text, or Java, or build.xml, anything. It will 
display the error message again instead of its current content.


And as to reporting the bug to the Clearcase plugin writers:

It was written by Rational. Rational was bought by IBM. You are from IBM. So 
you are even the closest person to whom I can report this bug, since I cannot 
find an address to where I could report this bug. 

Could you supply one that would be usable to reach the maintainer team of the 
Clearcase plugin at IBM? Or would you make me believe that IBM does not care 
about the Clearcase plugin for Eclipse withing one year of buying Rational?
Robert, 

Indeed some of us do work for IBM and want you to be successful here, but this 
fact does not mean we should handle IBM product requests on eclipse.org.  To 
help we have compiled some information to help get your answers.  In reading 
the forums on the ClearCase web site they do not seem to have ported to the 
Eclipse R3.0 level yet.  Only the owners of the ClearCase plug-ins can give 
the real answers to when they will do this.

We have found a Rational Support Number (in North America): 1-800-433-5444

Also the Rational support page: 
http://www-306.ibm.com/software/rational/support/contact.html
This page talks about how to submit support requests to Rational.  They use an 
electronic system called ESR.  To use it I think you must have an id,  you 
might need to talk to the person who has your ClearCase software license 
information and support agreement?


Hello Michael,

thanks for the information. I agree that Eclipse maintainers should not care 
for bugs in the Clearcase plugin.

However I am still not entirely convinced that this scenario (displaying an 
error message TWICE, and for the second time IN AN EDITOR IN THE PLACE OF THE 
EDITOR CONTENT after it has been displayed in an error dialog, rendering that 
editor instance unusable) is really the fault of the Clearcase plugin and only 
the Clearcase plugin, considering that this broke only in 3.0M8, but it worked 
without a problem until 3.0M7 (included).

Of course I am not an expert on Eclipse matters, but my hunch tells me that it 
may eventually turn out to be a bug in the framework and not in the plugin. I 
have this hunch because the normal error dialog is displayed first when the 
plugin is not connected to clearcase, and this redisplay of the error in the 
editor happens after it. If the dialog had not turned up, I would say, maybe it 
is really only the plugin.

Regards,

Robert Varga

What you say might be true, no arguments there.  The way we would resolve this is:

#1) Please log a bug against ClearCase (we do not have it running here, so we
would not be able to debug this scenario)
#1b) you could also post the bug number here so we could track it
#2) if a ClearCase team member investigates and indeed finds that the problem is
in Eclipse, they would post a simpler test case (not based on ClearCase) to
Eclipse so they can track this problem.
#3) Once we fix it we would tell them, and they would in-turn notify you.

thanks for staying in touch on this bug.
closing, please re-open when information from the ClearCase team is available</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68813" />
    <CreationDate amount="2004-06-28 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Interrupted AutoBuild job still blocks workspace operation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="353" end="404" />
        <code>CCorePlugin.getWorkspace().run(acceptMatchOp,null);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="495" end="523" />
        <code>buildManager.interrupt();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The CDT build that comes up as AutoBuildJob blocks workspace operations for a 
very long time (or indefenetely?) if workspace operation is performed right 
after AutoBuild has started.

In the debugger this looks in the following way:
 
Portion of my code eventyally results in the call to  
org.eclipse.cdt.internal.core.search.matching.MatchLocator:

CCorePlugin.getWorkspace().run(acceptMatchOp,null);

this kicks in org.eclipse.core.internal.resources.Workspace.prepareOperation 
that does:
			buildManager.interrupt();

later as it tries to schedule the job, it gets to 
org.eclipse.core.internal.jobs.JobManager:

	findBlockingJob() finds AutoBuildJob as running (and at this point 
AutoBuildJob has "interrupted=true")

as result, dialog locks up until cancelled (typically, multiple cancelations 
are required as is comes up time after time).
Changed priority to P2 as it will significantly impact user workflow.
Please use the severity field to describe the relevance of the problem for you.
The target milestone is used by the bug owner for planning purposes.
I'm not sure if I understand what you're describing. I will describe how
autobuild interruption should work, and then you can tell me if this matches
what you see.

- When another thread tries to modify the workspace while autobuild is running,
the "interrupted" flag on the build job is set to true. Before calling each
individual builder, we check this flag, and abort the build process if an
interrupt has occurred. If an individual builder is very long running, it can
check for interruption by calling IncrementalProjectBuilder#isInterrupted(). If
interruption has occurred, it should try to complete in a timely manner (see bug
41804).

So, if an individual builder is very long running, and does not respond to
interruption, then I expect to see what you describe: the concurrent operation
will be blocked until that builder completes. Is this what you see, or does the
concurrent operation never proceed even after a builder has completed running?
From the originator:

Is AutoBuilder supplied by Eclipse or CDT? What I see is that it gets
"interrupted" flag set, and when findBlockingJob()  runs in a cycle (and every
time it is picking up AutoBuilder as blocking - until it gets cancelled). 

Should CDT remove AutoBuilder from the list of running items or is it the other
way around - AutoBuilder tells CDT build to stop? 
"AutoBuild" is a generic infrastructure that runs builds automatically in a
background thread whenever the workspace is modified. The actual builders that
are run are supplied by CDT, JDT, etc. Autobuild is able to automatically detect
when an interrupt occurs, but it is the responsibility of the builder to respond
to this interruption.

I still don't understand the behaviour you are seeing. Do the builders NEVER
finish, or do they just take a few seconds to finish? Do you observe some kind
of infinite loop?
That's right; the block never goes away - I get "The user operation is waiting 
for "Building workspace" to complete" message that stays until canceled.

The infinite loop I see is in the findBlockingJob() that finds AutoBuildJob 
being blocking for as long as it is allowed to run. 

The AutoBuildJob is in the "running" data member and I don't see anybody 
removing it.



Can you attach a stack trace that illustrates the loop that you see?
Created attachment 12984
Picture of the stack trace at the time Eclipse reports workspace being blocked

Added screenshot of the stack trace at the time Eclipse reports workspace being
blocked.
There was no activity on this topic for the 3+ weeks. Should it be assigned to 
somebody?

Sorry but between it being post-release and summer, the halls are empty. It will
be investigated in due time.

I was never able to reproduce this.</WithStack>
    <WithOutStack>The CDT build that comes up as AutoBuildJob blocks workspace operations for a 
very long time (or indefenetely?) if workspace operation is performed right 
after AutoBuild has started.

In the debugger this looks in the following way:
 
Portion of my code eventyally results in the call to  
org.eclipse.cdt.internal.core.search.matching.MatchLocator:

CCorePlugin.getWorkspace().run(acceptMatchOp,null);

this kicks in org.eclipse.core.internal.resources.Workspace.prepareOperation 
that does:
			buildManager.interrupt();

later as it tries to schedule the job, it gets to 
org.eclipse.core.internal.jobs.JobManager:

	findBlockingJob() finds AutoBuildJob as running (and at this point 
AutoBuildJob has "interrupted=true")

as result, dialog locks up until cancelled (typically, multiple cancelations 
are required as is comes up time after time).
Changed priority to P2 as it will significantly impact user workflow.
Please use the severity field to describe the relevance of the problem for you.
The target milestone is used by the bug owner for planning purposes.
I'm not sure if I understand what you're describing. I will describe how
autobuild interruption should work, and then you can tell me if this matches
what you see.

- When another thread tries to modify the workspace while autobuild is running,
the "interrupted" flag on the build job is set to true. Before calling each
individual builder, we check this flag, and abort the build process if an
interrupt has occurred. If an individual builder is very long running, it can
check for interruption by calling IncrementalProjectBuilder#isInterrupted(). If
interruption has occurred, it should try to complete in a timely manner (see bug
41804).

So, if an individual builder is very long running, and does not respond to
interruption, then I expect to see what you describe: the concurrent operation
will be blocked until that builder completes. Is this what you see, or does the
concurrent operation never proceed even after a builder has completed running?
From the originator:

Is AutoBuilder supplied by Eclipse or CDT? What I see is that it gets
"interrupted" flag set, and when findBlockingJob()  runs in a cycle (and every
time it is picking up AutoBuilder as blocking - until it gets cancelled). 

Should CDT remove AutoBuilder from the list of running items or is it the other
way around - AutoBuilder tells CDT build to stop? 
"AutoBuild" is a generic infrastructure that runs builds automatically in a
background thread whenever the workspace is modified. The actual builders that
are run are supplied by CDT, JDT, etc. Autobuild is able to automatically detect
when an interrupt occurs, but it is the responsibility of the builder to respond
to this interruption.

I still don't understand the behaviour you are seeing. Do the builders NEVER
finish, or do they just take a few seconds to finish? Do you observe some kind
of infinite loop?
That's right; the block never goes away - I get "The user operation is waiting 
for "Building workspace" to complete" message that stays until canceled.

The infinite loop I see is in the findBlockingJob() that finds AutoBuildJob 
being blocking for as long as it is allowed to run. 

The AutoBuildJob is in the "running" data member and I don't see anybody 
removing it.



Can you attach a stack trace that illustrates the loop that you see?
Created attachment 12984
Picture of the stack trace at the time Eclipse reports workspace being blocked

Added screenshot of the stack trace at the time Eclipse reports workspace being
blocked.
There was no activity on this topic for the 3+ weeks. Should it be assigned to 
somebody?

Sorry but between it being post-release and summer, the halls are empty. It will
be investigated in due time.

I was never able to reproduce this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68814" />
    <CreationDate amount="2004-06-28 15:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Spurious hard crash when double-clicking on search result</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>3.0 final on linux-gtk

Sometimes when I double-click on a search result, Eclipse would hard crash on
me. It's closing all its windows and displaying the error message dialog telling
me about the exit code and the VM startup parameters.

Unfortunately, there is nothing in the log at all. I'm really willing to provide
more info. Please advise on how to do so.
There should be some VM dump either in your home, where the VM is or where you
started Eclipse. Please attach it.
Hm, it looks like I can't find a VM dump anywhere (all those I found are quite
old). I'm closing this bug and will open a new one should it appear again.</WithStack>
    <WithOutStack>3.0 final on linux-gtk

Sometimes when I double-click on a search result, Eclipse would hard crash on
me. It's closing all its windows and displaying the error message dialog telling
me about the exit code and the VM startup parameters.

Unfortunately, there is nothing in the log at all. I'm really willing to provide
more info. Please advise on how to do so.
There should be some VM dump either in your home, where the VM is or where you
started Eclipse. Please attach it.
Hm, it looks like I can't find a VM dump anywhere (all those I found are quite
old). I'm closing this bug and will open a new one should it appear again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68815" />
    <CreationDate amount="2004-06-28 15:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ask the user before switching to profiling &amp; logging perspective on launch</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When the user launches from another perspective, we bring the user to the 
profiling &amp; logging perspective without asking them. We should follow the 
standard way to do this (like when you debug). Ask the user whether they want 
to switch, and have a checkbox to remember the setting and not ask again.
This seems to be implemented in the 20040813_1815 driver on hoplite4.  Is this
defect out of date?

As an example, import the first sample under Hyades Logging.
I tried profiling something from the java perspective; it automatically brings 
me to the Profiling and Logging perspective without asking. I think the same 
happens when importing logs.

It's implemented in some places, but not in others.
Adriana, we need to find all the places where we switch perspective for the 
user automatically. For all these cases, we need to ask the user before 
switching, like in all other places in eclipse. For example, if you create a 
new java project, then it asks if you want to go to the java perspective.

Right now I think this is done programatically; by calling some UI method that 
brings us there. A better way to do this is to specify the finalPerspective=___ 
attribute in the extension (in plugin.xml) for the wizard. So we need to remove 
all the instances of doing this programatically (unless they are absolutely 
required). This way, it's all automatically provided by the platform.
Just to make sure we don't forget; if we end up having to switch to our 
perspective without using a platform helper method, we will also have to check 
to make sure that any required activities are enabled before continuing.
Delaying to 3.2 for more testing..
Fix submitted.
Problem found relating to opening the log view. The log view will only open if 
the dialog was shown and the user said yes. If the user was already in the 
profiling and logging perspective, it won't open.

The decision to open the log view should be based on whether we are currently 
in the right perspective, not on whether the user said yes or no.
New fix for log view submitted.
Verified. Closing bug.</WithStack>
    <WithOutStack>When the user launches from another perspective, we bring the user to the 
profiling &amp; logging perspective without asking them. We should follow the 
standard way to do this (like when you debug). Ask the user whether they want 
to switch, and have a checkbox to remember the setting and not ask again.
This seems to be implemented in the 20040813_1815 driver on hoplite4.  Is this
defect out of date?

As an example, import the first sample under Hyades Logging.
I tried profiling something from the java perspective; it automatically brings 
me to the Profiling and Logging perspective without asking. I think the same 
happens when importing logs.

It's implemented in some places, but not in others.
Adriana, we need to find all the places where we switch perspective for the 
user automatically. For all these cases, we need to ask the user before 
switching, like in all other places in eclipse. For example, if you create a 
new java project, then it asks if you want to go to the java perspective.

Right now I think this is done programatically; by calling some UI method that 
brings us there. A better way to do this is to specify the finalPerspective=___ 
attribute in the extension (in plugin.xml) for the wizard. So we need to remove 
all the instances of doing this programatically (unless they are absolutely 
required). This way, it's all automatically provided by the platform.
Just to make sure we don't forget; if we end up having to switch to our 
perspective without using a platform helper method, we will also have to check 
to make sure that any required activities are enabled before continuing.
Delaying to 3.2 for more testing..
Fix submitted.
Problem found relating to opening the log view. The log view will only open if 
the dialog was shown and the user said yes. If the user was already in the 
profiling and logging perspective, it won't open.

The decision to open the log view should be based on whether we are currently 
in the right perspective, not on whether the user said yes or no.
New fix for log view submitted.
Verified. Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68816" />
    <CreationDate amount="2004-06-28 16:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>MS JAWS cannot read icons in Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>This issue needs to be resolved in order to meet accessibility standards.
I am pretty sure there was a bug report about this in the past but I can't 
seem to find it.
JAWS requires scripting to match an image to a word - it is not something that 
can be supplied by a component unless they also supply a patch.

Which standards are you referring to? This is not a 508 or IBM accessibility 
requirement to the best of my knowledge.

Carolyn I don't think there is anything for us to do here.
Closing this bug as "won't fix" because there is not enough detail. Which 
icons, specifically, are a problem and which requirement, specifically, is not 
being met?
MS JAWS cannot read the tool tips available for icons such as the New..., 
Save, Print icons (available in the application toolbar).
Oh - tooltips! You actually have to tell JAWS to read tooltips. Here's how:
In JAWS, select Utilities -&gt; Configuration Manager
Then in the window that opens, select Set Options -&gt; Verbosity Options...
In the dialog that opens, make sure you have "Verbosity Level" set 
to "Beginner, Highest" and click "Beginner Preferences".
At the bottom of the list, check "Tool Tip". Then click OK, and OK again.
Now, in the Configuration Manager window, select File -&gt; Exit, and in 
the "Save Settings" dialog, click YES.
Now JAWS will read the New, Save, Print, ... tooltips.

By the way, in eclipse 3.1, you can now give focus to the toolbar using tab 
(or shift+tab, depending on where you start), and then use the tab key and 
left/right arrow keys to switch focus to different tools in the toolbar. JAWS 
will read out the name of the tool when you do this. This is a better solution 
than getting JAWS to read the tooltips, because a blind user does not use 
tooltips.</WithStack>
    <WithOutStack>This issue needs to be resolved in order to meet accessibility standards.
I am pretty sure there was a bug report about this in the past but I can't 
seem to find it.
JAWS requires scripting to match an image to a word - it is not something that 
can be supplied by a component unless they also supply a patch.

Which standards are you referring to? This is not a 508 or IBM accessibility 
requirement to the best of my knowledge.

Carolyn I don't think there is anything for us to do here.
Closing this bug as "won't fix" because there is not enough detail. Which 
icons, specifically, are a problem and which requirement, specifically, is not 
being met?
MS JAWS cannot read the tool tips available for icons such as the New..., 
Save, Print icons (available in the application toolbar).
Oh - tooltips! You actually have to tell JAWS to read tooltips. Here's how:
In JAWS, select Utilities -&gt; Configuration Manager
Then in the window that opens, select Set Options -&gt; Verbosity Options...
In the dialog that opens, make sure you have "Verbosity Level" set 
to "Beginner, Highest" and click "Beginner Preferences".
At the bottom of the list, check "Tool Tip". Then click OK, and OK again.
Now, in the Configuration Manager window, select File -&gt; Exit, and in 
the "Save Settings" dialog, click YES.
Now JAWS will read the New, Save, Print, ... tooltips.

By the way, in eclipse 3.1, you can now give focus to the toolbar using tab 
(or shift+tab, depending on where you start), and then use the tab key and 
left/right arrow keys to switch focus to different tools in the toolbar. JAWS 
will read out the name of the tool when you do this. This is a better solution 
than getting JAWS to read the tooltips, because a blind user does not use 
tooltips.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68817" />
    <CreationDate amount="2004-06-28 16:09:00 -0400" />
    <DupId amount="68818" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dots in element names result in bad "resource" attribute values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If a test suite is named "xxx.yyy.testsuite", the resource attribute of the 
implementor will be set to "test.xxx". This incorrect value is manifest in a 
number of places where we depend on this value.

It appears that the name processing algorithm stops at the first (leftmost) 
dot. The algorithm should likely use the package (the default being "test") 
and the base file name (extension not included). In the example of a suite 
named "xxx.yyy.testsuite", resource the value might be "test.xxx.yyy".


*** This bug has been marked as a duplicate of 68818 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>If a test suite is named "xxx.yyy.testsuite", the resource attribute of the 
implementor will be set to "test.xxx". This incorrect value is manifest in a 
number of places where we depend on this value.

It appears that the name processing algorithm stops at the first (leftmost) 
dot. The algorithm should likely use the package (the default being "test") 
and the base file name (extension not included). In the example of a suite 
named "xxx.yyy.testsuite", resource the value might be "test.xxx.yyy".


*** This bug has been marked as a duplicate of 68818 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68818" />
    <CreationDate amount="2004-06-28 16:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Dots in element names result in bad "resource" attribute values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>If a test suite is named "xxx.yyy.testsuite", the resource attribute of the 
implementor will be set to "test.xxx". This incorrect value is manifest in a 
number of places where we depend on this value.

It appears that the name processing algorithm stops at the first (leftmost) 
dot. The algorithm should likely use the package (the default being "test") 
and the base file name (extension not included). In the example of a suite 
named "xxx.yyy.testsuite", resource the value might be "test.xxx.yyy".
*** Bug 68817 has been marked as a duplicate of this bug. ***
put target to 3.0.1
In the base class for all test artifact creation wizard HyadesNewWizard, it 
checks for . and remove the portion after the last . if there is one. This 
assumes the last portion has to be the file extension. Added checking if the 
last portion is the file extension of this wizard, and only remove if it is.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>If a test suite is named "xxx.yyy.testsuite", the resource attribute of the 
implementor will be set to "test.xxx". This incorrect value is manifest in a 
number of places where we depend on this value.

It appears that the name processing algorithm stops at the first (leftmost) 
dot. The algorithm should likely use the package (the default being "test") 
and the base file name (extension not included). In the example of a suite 
named "xxx.yyy.testsuite", resource the value might be "test.xxx.yyy".
*** Bug 68817 has been marked as a duplicate of this bug. ***
put target to 3.0.1
In the base class for all test artifact creation wizard HyadesNewWizard, it 
checks for . and remove the portion after the last . if there is one. This 
assumes the last portion has to be the file extension. Added checking if the 
last portion is the file extension of this wizard, and only remove if it is.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68819" />
    <CreationDate amount="2004-06-28 16:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Difference in behavior for an "eventLoopIdle" on Mac and on Windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="import">
        <location start="1250" end="1294" />
        <code>import org.eclipse.swt.events.ShellAdapter;</code>
      </source_code>
      <source_code type="import">
        <location start="1295" end="1336" />
        <code>import org.eclipse.swt.events.ShellEvent;</code>
      </source_code>
      <source_code type="import">
        <location start="1337" end="1376" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="1377" end="1414" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="class">
        <location start="1416" end="2222" />
        <code>public class Main {

static Display display;

static Shell shell;

public static void main(String[] args) {
display = new Display();
shell = new Shell(display);
shell.addShellListener(new ShellAdapter() {
public void shellActivated(ShellEvent e) {
shell.setText("shellActivated");
}

public void shellDeactivated(ShellEvent e) {
shell.setText("shellDeactivated");
}
});
shell.setSize(300, 300);
shell.open();
runEventLoop();

}

public static void eventLoopIdle() {
display.sleep();
shell.setText("After Display.sleep()");

}

public static void runEventLoop() {
if (shell == null)
display = Display.getCurrent();
else
display = shell.getDisplay();

while (shell != null &amp;&amp; !shell.isDisposed()) {
try {
if (!display.readAndDispatch())
eventLoopIdle();

} catch (Throwable e) {
e.printStackTrace();
}
}
}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I am using Eclipse 3.0. This is also reproducible in earlier versions.

I wrote some “junit” tests that automatically open and close the workbench
several times. To do so, I have a class that extends the "WorkbenchAdvisor",
where an "eventLoopIdle(Display display)" method is defined (all it does is call
“display.sleep()”). In that "eventLoopIdle" method, I close the workbench. This
has an effect of opening (in the set up method) and closing (in the “junit”
tests) the workbench for every test defined.

This works well on Windows, where the workbench is closed and re-opened
successively. However, on the Mac, the workbench closes and opens correctly the
first few times, but gets stuck every once in a while. I have to trigger an
event (mouse event, for example) for the workbench to finally close.

I have noticed a difference in behavior on both platforms. I have an SWT snipped
that I ran on the Mac and on Windows. Run the simple java application. A shell
appears. Switch focus in an out of the shell. Notice that on Windows, the
shell's title is set to "After display.sleep()", while on the Mac, you have to
move the mouse in order for the title to update. The snippet below is the
closest example I could find to the “junit” tests I have:

import org.eclipse.swt.events.ShellAdapter;
import org.eclipse.swt.events.ShellEvent;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

public class Main {

static Display display;

static Shell shell;

public static void main(String[] args) {
display = new Display();
shell = new Shell(display);
shell.addShellListener(new ShellAdapter() {
public void shellActivated(ShellEvent e) {
shell.setText("shellActivated");
}

public void shellDeactivated(ShellEvent e) {
shell.setText("shellDeactivated");
}
});
shell.setSize(300, 300);
shell.open();
runEventLoop();

}

public static void eventLoopIdle() {
display.sleep();
shell.setText("After Display.sleep()");

}

public static void runEventLoop() {
if (shell == null)
display = Display.getCurrent();
else
display = shell.getDisplay();

while (shell != null &amp;&amp; !shell.isDisposed()) {
try {
if (!display.readAndDispatch())
eventLoopIdle();

} catch (Throwable e) {
e.printStackTrace();
}
}
}

}
Display.sleep() waits until an event is available from the operating system.  
The actual event in question and circumstances that generate events are 
plaform specific.  This means that some platforms will sleep more than others 
and at different times.  This is correct for the platform.  A C program would 
exhibit the same behavior.

Please reopen if I am missing something.
Andrew, can you add to this since you have seen the described behavior as well?
I've used this alot on windows and observed that eventLoopIdle gets called after 
the application has started.  However, I've never investigated why it was 
called, it just worked for me so I stopped investigating.

However, it sounds like this is platform specific behaviour and it behaves 
differently on mac (maybe the windows version has some event in the queue during 
startup, while the mac does not?).

I'm only using it as a trigger during some test cases, so the difference isn't 
yet critical to me.  Perhaps another way to achieve the same thing would be to 
enqueue an IRunnable?
It's not a bug but rather a platform difference.  If one operating system 
decides to queue an event at a certain time and another does not, there's 
nothing we can do about it.  Seems to me that's what is happening.</WithStack>
    <WithOutStack>I am using Eclipse 3.0. This is also reproducible in earlier versions.

I wrote some “junit” tests that automatically open and close the workbench
several times. To do so, I have a class that extends the "WorkbenchAdvisor",
where an "eventLoopIdle(Display display)" method is defined (all it does is call
“display.sleep()”). In that "eventLoopIdle" method, I close the workbench. This
has an effect of opening (in the set up method) and closing (in the “junit”
tests) the workbench for every test defined.

This works well on Windows, where the workbench is closed and re-opened
successively. However, on the Mac, the workbench closes and opens correctly the
first few times, but gets stuck every once in a while. I have to trigger an
event (mouse event, for example) for the workbench to finally close.

I have noticed a difference in behavior on both platforms. I have an SWT snipped
that I ran on the Mac and on Windows. Run the simple java application. A shell
appears. Switch focus in an out of the shell. Notice that on Windows, the
shell's title is set to "After display.sleep()", while on the Mac, you have to
move the mouse in order for the title to update. The snippet below is the
closest example I could find to the “junit” tests I have:

import org.eclipse.swt.events.ShellAdapter;
import org.eclipse.swt.events.ShellEvent;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

public class Main {

static Display display;

static Shell shell;

public static void main(String[] args) {
display = new Display();
shell = new Shell(display);
shell.addShellListener(new ShellAdapter() {
public void shellActivated(ShellEvent e) {
shell.setText("shellActivated");
}

public void shellDeactivated(ShellEvent e) {
shell.setText("shellDeactivated");
}
});
shell.setSize(300, 300);
shell.open();
runEventLoop();

}

public static void eventLoopIdle() {
display.sleep();
shell.setText("After Display.sleep()");

}

public static void runEventLoop() {
if (shell == null)
display = Display.getCurrent();
else
display = shell.getDisplay();

while (shell != null &amp;&amp; !shell.isDisposed()) {
try {
if (!display.readAndDispatch())
eventLoopIdle();

} catch (Throwable e) {
e.printStackTrace();
}
}
}

}
Display.sleep() waits until an event is available from the operating system.  
The actual event in question and circumstances that generate events are 
plaform specific.  This means that some platforms will sleep more than others 
and at different times.  This is correct for the platform.  A C program would 
exhibit the same behavior.

Please reopen if I am missing something.
Andrew, can you add to this since you have seen the described behavior as well?
I've used this alot on windows and observed that eventLoopIdle gets called after 
the application has started.  However, I've never investigated why it was 
called, it just worked for me so I stopped investigating.

However, it sounds like this is platform specific behaviour and it behaves 
differently on mac (maybe the windows version has some event in the queue during 
startup, while the mac does not?).

I'm only using it as a trigger during some test cases, so the difference isn't 
yet critical to me.  Perhaps another way to achieve the same thing would be to 
enqueue an IRunnable?
It's not a bug but rather a platform difference.  If one operating system 
decides to queue an event at a certain time and another does not, there's 
nothing we can do about it.  Seems to me that's what is happening.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68820" />
    <CreationDate amount="2004-06-28 16:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Duplicate project when changing nature in the CView</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When converting a project to a C Nature.

The C View will show the project twice(They are the same).
A fix on its way.

Fix in the head.</WithStack>
    <WithOutStack>When converting a project to a C Nature.

The C View will show the project twice(They are the same).
A fix on its way.

Fix in the head.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68821" />
    <CreationDate amount="2004-06-28 17:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Datapools with dots in name do not show in Test Navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>To reproduce:
1. Create a datapool named "xxx.yyy.datapool". It will not show up in the Test 
Navigator.
Works for me.
Can you give me the build number used to reproduce this bug ?
Thanks
Works for me as well.   Tried creating via File -&gt; New -&gt; Test Artifact -&gt; 
Datapool, and also from context menu.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>To reproduce:
1. Create a datapool named "xxx.yyy.datapool". It will not show up in the Test 
Navigator.
Works for me.
Can you give me the build number used to reproduce this bug ?
Thanks
Works for me as well.   Tried creating via File -&gt; New -&gt; Test Artifact -&gt; 
Datapool, and also from context menu.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68822" />
    <CreationDate amount="2004-06-28 17:10:00 -0400" />
    <DupId amount="57752" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>search for implementors includes hits outside working set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- start new workspace</Line>
          <Line>- import all projects as binary projects</Line>
          <Line>- open the IResourceChangeListener interface</Line>
          <Line>- search for all implementors in a working set (for instance, including only the</Line>
          <Line>org.eclipse.core.resources plugin) - result includes 50 hits, found throughout</Line>
          <Line>workspace.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0

Searching for implementors of an interface in the context of a working set
reutns hits outside the working set (seems to be completely ignore the working
set definition and do a global search).
Steps:
- start new workspace
- import all projects as binary projects
- open the IResourceChangeListener interface
- search for all implementors in a working set (for instance, including only the
org.eclipse.core.resources plugin) - result includes 50 hits, found throughout
workspace.

Related issue (not sure it is a bug): it seems that sometimes the "Implementors"
menu shows up in the context menu when an interface is selected, sometimes if
deos not, for no apparent reason. The workaround is to go through the "Search"
menu. 
The problem are the PDE plug-in library containers. They are considered being 
part of the project. This is an architectural issue we have to solve for 3.0.


*** This bug has been marked as a duplicate of 57752 ***</WithStack>
    <WithOutStack>3.0

Searching for implementors of an interface in the context of a working set
reutns hits outside the working set (seems to be completely ignore the working
set definition and do a global search).
Steps:
- start new workspace
- import all projects as binary projects
- open the IResourceChangeListener interface
- search for all implementors in a working set (for instance, including only the
org.eclipse.core.resources plugin) - result includes 50 hits, found throughout
workspace.

Related issue (not sure it is a bug): it seems that sometimes the "Implementors"
menu shows up in the context menu when an interface is selected, sometimes if
deos not, for no apparent reason. The workaround is to go through the "Search"
menu. 
The problem are the PDE plug-in library containers. They are considered being 
part of the project. This is an architectural issue we have to solve for 3.0.


*** This bug has been marked as a duplicate of 57752 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68823" />
    <CreationDate amount="2004-06-28 17:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[dom] Ctrl+C command fails when "assert" is enabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341155989">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2587)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1810)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:770)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:336)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:439)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:363)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:300)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:256)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:225)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:223)</Frame>
          <Frame depth="18">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="19">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="38">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="43">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="45">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="47">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="49">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="50">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="51">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="103" end="128" />
        <code>assert (true): ("hello");</code>
      </source_code>
      <source_code type="class">
        <location start="1640" end="1709" />
        <code>public class X{
	public void foo() {
		assert (true): ("hello");
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Steps to reproduce the bug:

* create a new java file and add a line with an assert statement such as:
assert (true): ("hello");

* eclipse v3.0 won't be able to compile the file unless the jdk compliance is
adjusted to jdk1.4, namely, by changing the settings:
Project -&gt; Properties -&gt; Java Compiler -&gt; Use project settings -&gt; Compliance and
Classfiles -&gt; change all settings values to 1.4

* once the compliance is changed to 1.4, then Ctrl+C doesn't work properly. for
example, first type Ctrl+A to select all contents of the java file, and type
Ctrl+C, then you will get a warning popup window which says:
"Error Executing Command
The command for the key you pressed failed
Reason:
The command for the key you pressed failed"
Could not reproduce. Please provide the log file at &lt;workspace&gt;/.metadata/.log.
It should contain entries related to what caused the action to fail.
&amp;#65279;
The content of the log file is as follows:

!ENTRY org.eclipse.ui 4 4 &amp;#20845;&amp;#26376; 28, 2004 14:43:28.736
!MESSAGE The command for the key you pressed failed

!ENTRY org.eclipse.ui 4 0 &amp;#20845;&amp;#26376; 28, 2004 14:43:28.746
!MESSAGE The command for the key you pressed failed
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2587)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1810)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:770)
	at
org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:336)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)
	at org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
	at
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)
	at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:363)
	at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:300)
	at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:256)
	at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:225)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:223)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

The ast should be created using the project's settings.
Is this supported in Java Editor?

Move to JDT/UI for comment.
The AST is created via the ASTParser. Source is set via setSource methods. 
Regarding to the Javadoc this should automatically use the compiler options 
appropriate for the compilation unit or class file.

Moving back to JDT/Core
*** Bug 68829 has been marked as a duplicate of this bug. ***
The following cu reproduces the problem in 3.1 M4:
public class X{
	public void foo() {
		assert (true): ("hello");
	}
}
Fixed and released in HEAD.
Regression test added in ASTConverter15Test.test0101.
Verified in I20050215-2300</WithStack>
    <WithOutStack>Steps to reproduce the bug:

* create a new java file and add a line with an assert statement such as:
assert (true): ("hello");

* eclipse v3.0 won't be able to compile the file unless the jdk compliance is
adjusted to jdk1.4, namely, by changing the settings:
Project -&gt; Properties -&gt; Java Compiler -&gt; Use project settings -&gt; Compliance and
Classfiles -&gt; change all settings values to 1.4

* once the compliance is changed to 1.4, then Ctrl+C doesn't work properly. for
example, first type Ctrl+A to select all contents of the java file, and type
Ctrl+C, then you will get a warning popup window which says:
"Error Executing Command
The command for the key you pressed failed
Reason:
The command for the key you pressed failed"
Could not reproduce. Please provide the log file at &lt;workspace&gt;/.metadata/.log.
It should contain entries related to what caused the action to fail.
&amp;#65279;
The content of the log file is as follows:

!ENTRY org.eclipse.ui 4 4 &amp;#20845;&amp;#26376; 28, 2004 14:43:28.736
!MESSAGE The command for the key you pressed failed

!ENTRY org.eclipse.ui 4 0 &amp;#20845;&amp;#26376; 28, 2004 14:43:28.746
!MESSAGE The command for the key you pressed failed
!STACK 0


The ast should be created using the project's settings.
Is this supported in Java Editor?

Move to JDT/UI for comment.
The AST is created via the ASTParser. Source is set via setSource methods. 
Regarding to the Javadoc this should automatically use the compiler options 
appropriate for the compilation unit or class file.

Moving back to JDT/Core
*** Bug 68829 has been marked as a duplicate of this bug. ***
The following cu reproduces the problem in 3.1 M4:
public class X{
	public void foo() {
		assert (true): ("hello");
	}
}
Fixed and released in HEAD.
Regression test added in ASTConverter15Test.test0101.
Verified in I20050215-2300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68824" />
    <CreationDate amount="2004-06-28 17:19:00 -0400" />
    <DupId amount="58657" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[1.5] detect unused type parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0
unused type parameters (for types and methods) could be detected - a jdtui
action would then take care of removing them.


*** This bug has been marked as a duplicate of 58657 ***
i meant more like: not used at all - can be removed altogether.
but dup'ing is ok for me</WithStack>
    <WithOutStack>3.0
unused type parameters (for types and methods) could be detected - a jdtui
action would then take care of removing them.


*** This bug has been marked as a duplicate of 58657 ***
i meant more like: not used at all - can be removed altogether.
but dup'ing is ok for me</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68825" />
    <CreationDate amount="2004-06-28 17:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[compiler][1.5] detect not-exhaustive enum switches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0
switches on enums should be exhaustive - if they're not, we should show a warning
# Added optional compiler diagnosis to flag incomplete enum switch statements.
Corresponding problem ID is: IProblem.MissingEnumConstantCase

* COMPILER / Reporting Incomplete Enum Switch
*    When enabled, the compiler will issue an error or a warning whenever an
enum constant has
*    no corresponding case label in an enum switch statement
*    type has no case label matching an enum constant.
*     - option id:       
"org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch"
*     - possible values:   { "error", "warning", "ignore" }
*     - default:           "ignore"

Fixed
Verified in 20050330-0500</WithStack>
    <WithOutStack>3.0
switches on enums should be exhaustive - if they're not, we should show a warning
# Added optional compiler diagnosis to flag incomplete enum switch statements.
Corresponding problem ID is: IProblem.MissingEnumConstantCase

* COMPILER / Reporting Incomplete Enum Switch
*    When enabled, the compiler will issue an error or a warning whenever an
enum constant has
*    no corresponding case label in an enum switch statement
*    type has no case label matching an enum constant.
*     - option id:       
"org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch"
*     - possible values:   { "error", "warning", "ignore" }
*     - default:           "ignore"

Fixed
Verified in 20050330-0500</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68826" />
    <CreationDate amount="2004-06-28 17:24:00 -0400" />
    <DupId amount="71562" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[1.5][templates] add templates for new language features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0
templates for the new for loop etc. would be cool
marking as dup of the newer bug 71562 since it contains more details.

*** This bug has been marked as a duplicate of 71562 ***</WithStack>
    <WithOutStack>3.0
templates for the new for loop etc. would be cool
marking as dup of the newer bug 71562 since it contains more details.

*** This bug has been marked as a duplicate of 71562 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68827" />
    <CreationDate amount="2004-06-28 18:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>3.0 starup fails - No application id has been found</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341155989">
        <Exception>java.lang.RuntimeException</Exception>
        <Reason>No application id has been found.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:313)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="4">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="5">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="6">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="9">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- downloaded the SDK and not the RCP SDK. You can determine this by checking the</Line>
          <Line>number of plug-ins in your /eclipse/plugins directory. The RCP SDK will have</Line>
          <Line>only 11 plug-ins. The RCP download is intended to be a framework and this is the</Line>
          <Line>error that you will get if you try and run it without creating your own application.</Line>
          <Line>- make sure you uninstalled your old version of Eclipse or installed Eclipse 3.0</Line>
          <Line>to a different directory. (ensure you didn't extract 3.0 over-top of your old</Line>
          <Line>install) Installation instructions can be found at /eclipse/readme.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Several folks are experiencing this problem as seen on the message boards. All
RC version of Eclipse 3 work fine. Now the release versino fails to start with
the following error:


!SESSION Jun 28, 2004 14:35:17.205 ---------------------------------------------
eclipse.buildId=I200406251208
java.version=1.4.2_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -Xms128 -Xmx512 -vm:D:\JDK14\jre

!ENTRY org.eclipse.osgi Jun 28, 2004 14:35:17.205
!MESSAGE Application error
!STACK 1
java.lang.RuntimeException: No application id has been found. 
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:313)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
update description
Please ensure that you have:
- downloaded the SDK and not the RCP SDK. You can determine this by checking the
number of plug-ins in your /eclipse/plugins directory. The RCP SDK will have
only 11 plug-ins. The RCP download is intended to be a framework and this is the
error that you will get if you try and run it without creating your own application.
- make sure you uninstalled your old version of Eclipse or installed Eclipse 3.0
to a different directory. (ensure you didn't extract 3.0 over-top of your old
install) Installation instructions can be found at /eclipse/readme.

If check the above things and still get the same result, then please re-open
this report.

All of us with this problem downloaded the SDK ( eclipse-SDK-3.0-win32.zip ).
I have reverted back to RC3 because 3.0 will not even start up.
Sorry. Premature reopen. I re-installed in a new directory. Then copied 
evertything that was not shipped with 3.0 into the new directory and it worked. 

This has not been a required step in the past. Many of us have always installed 
bback to the same directory. As you would expect from most applications. 
Evidently doing so with 3.0 is a problem. Not sure what would cause that, but 
it might be a consideration for future upgrades.</WithStack>
    <WithOutStack>Several folks are experiencing this problem as seen on the message boards. All
RC version of Eclipse 3 work fine. Now the release versino fails to start with
the following error:


!SESSION Jun 28, 2004 14:35:17.205 ---------------------------------------------
eclipse.buildId=I200406251208
java.version=1.4.2_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -Xms128 -Xmx512 -vm:D:\JDK14\jre

!ENTRY org.eclipse.osgi Jun 28, 2004 14:35:17.205
!MESSAGE Application error
!STACK 1

update description
Please ensure that you have:
- downloaded the SDK and not the RCP SDK. You can determine this by checking the
number of plug-ins in your /eclipse/plugins directory. The RCP SDK will have
only 11 plug-ins. The RCP download is intended to be a framework and this is the
error that you will get if you try and run it without creating your own application.
- make sure you uninstalled your old version of Eclipse or installed Eclipse 3.0
to a different directory. (ensure you didn't extract 3.0 over-top of your old
install) Installation instructions can be found at /eclipse/readme.

If check the above things and still get the same result, then please re-open
this report.

All of us with this problem downloaded the SDK ( eclipse-SDK-3.0-win32.zip ).
I have reverted back to RC3 because 3.0 will not even start up.
Sorry. Premature reopen. I re-installed in a new directory. Then copied 
evertything that was not shipped with 3.0 into the new directory and it worked. 

This has not been a required step in the past. Many of us have always installed 
bback to the same directory. As you would expect from most applications. 
Evidently doing so with 3.0 is a problem. Not sure what would cause that, but 
it might be a consideration for future upgrades.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68828" />
    <CreationDate amount="2004-06-28 18:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Help Wanted] [Managed Build] Support Project Creation on FreeBSD</Summery>
    <Patches amount="1">
      <Patch>
        <index>ErrorParserBlock.java</index>
        <original_file>ErrorParserBlock.java</original_file>
        <modified_file>ErrorParserBlock.java</modified_file>
        <Hunks>
          <hunk>NewManagedProjectOptionPage parent =</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="766" end="810" />
        <code>(NewManagedProjectOptionPage)getContainer();</code>
      </source_code>
      <source_code type="assignment">
        <location start="811" end="892" />
        <code>NewManagedProjectWizard wizard = (NewManagedProjectWizard)parent.getWizard();</code>
      </source_code>
      <source_code type="assignment">
        <location start="893" end="941" />
        <code>ITarget target = wizard.getSelectedTarget();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="966" end="1027" />
        <code>+				return CCorePlugin.getDefault().getAllErrorParsersIDs();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1028" end="1065" />
        <code>return getErrorParserIDs(target);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1071" end="1130" />
        <code>return CCorePlugin.getDefault().getAllErrorParsersIDs();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>When I'm trying to create managed C++ project, NullException raised. This
happened in following code. targen is suddenly become NULL. I don't understand
why, but this hot fix helps me. 

Eclipse Platform Version: 3.0.0 Build id: 200406251208
Eclipse C/C++ Development Tools Version: 2.0.0 Build id: 200405290301

Index: ErrorParserBlock.java
===================================================================
RCS file:
/home/tools/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/internal/ui/ErrorParserBlock.java,v
retrieving revision 1.1
diff -u -r1.1 ErrorParserBlock.java
--- ErrorParserBlock.java	22 Apr 2004 18:10:51 -0000	1.1
+++ ErrorParserBlock.java	28 Jun 2004 22:02:33 -0000
@@ -67,6 +67,8 @@
 			NewManagedProjectOptionPage parent =
(NewManagedProjectOptionPage)getContainer();
 			NewManagedProjectWizard wizard = (NewManagedProjectWizard)parent.getWizard();
 			ITarget target = wizard.getSelectedTarget();
+			if (target == null)
+				return CCorePlugin.getDefault().getAllErrorParsersIDs();
 			return getErrorParserIDs(target);
 		}
 		return CCorePlugin.getDefault().getAllErrorParsersIDs();
I's not a bug. I think, that there must be error message instead of
NullPointerException, f.e. "No targets aviable for current OS".
PR was not targeted to any particular release. Changing target milestone to 2.1
Changing the target milestone.
This is not going to be addressed before the 2.1 release
Fixed in 2.1 but still a potential problem is 2.0.X
I have been thinking about this, and while the risk of this bug fix is low, 
the problem I have is that this is not a supported platform. What I am going 
to do is make this an enhancement request to support the BSD platform for 3.0. 
As discussed in the weekly meeting -- all enhancements requests that had a
target milestone of 3.0 but were assigned to an inbox owner (which is an invalid
combination), have been moved to Target Milestone "--".
No one is currently looking at this.  Right now BSD is not a supported platform for either running CDT on, or targeting for cross-compile or remote builds.

Someone will have to step up in order to make this happen.</WithStack>
    <WithOutStack>When I'm trying to create managed C++ project, NullException raised. This
happened in following code. targen is suddenly become NULL. I don't understand
why, but this hot fix helps me. 

Eclipse Platform Version: 3.0.0 Build id: 200406251208
Eclipse C/C++ Development Tools Version: 2.0.0 Build id: 200405290301

Index: ErrorParserBlock.java
===================================================================
RCS file:
/home/tools/org.eclipse.cdt.managedbuilder.ui/src/org/eclipse/cdt/managedbuilder/internal/ui/ErrorParserBlock.java,v
retrieving revision 1.1
diff -u -r1.1 ErrorParserBlock.java
--- ErrorParserBlock.java	22 Apr 2004 18:10:51 -0000	1.1
+++ ErrorParserBlock.java	28 Jun 2004 22:02:33 -0000
@@ -67,6 +67,8 @@
 			NewManagedProjectOptionPage parent =
(NewManagedProjectOptionPage)getContainer();
 			NewManagedProjectWizard wizard = (NewManagedProjectWizard)parent.getWizard();
 			ITarget target = wizard.getSelectedTarget();
+			if (target == null)
+				return CCorePlugin.getDefault().getAllErrorParsersIDs();
 			return getErrorParserIDs(target);
 		}
 		return CCorePlugin.getDefault().getAllErrorParsersIDs();
I's not a bug. I think, that there must be error message instead of
NullPointerException, f.e. "No targets aviable for current OS".
PR was not targeted to any particular release. Changing target milestone to 2.1
Changing the target milestone.
This is not going to be addressed before the 2.1 release
Fixed in 2.1 but still a potential problem is 2.0.X
I have been thinking about this, and while the risk of this bug fix is low, 
the problem I have is that this is not a supported platform. What I am going 
to do is make this an enhancement request to support the BSD platform for 3.0. 
As discussed in the weekly meeting -- all enhancements requests that had a
target milestone of 3.0 but were assigned to an inbox owner (which is an invalid
combination), have been moved to Target Milestone "--".
No one is currently looking at this.  Right now BSD is not a supported platform for either running CDT on, or targeting for cross-compile or remote builds.

Someone will have to step up in order to make this happen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68829" />
    <CreationDate amount="2004-06-28 19:10:00 -0400" />
    <DupId amount="68823" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>refactory doesn't work properly when "assert" is used in java code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341155999">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2587)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1810)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:770)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:336)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:439)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolvePartialAstAtOffset(JavaTextSelection.java:94)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolveSelectedNodes(JavaTextSelection.java:103)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolveInMethodBody(JavaTextSelection.java:125)</Frame>
          <Frame depth="15">org.eclipse.jdt.ui.actions.ExtractMethodAction.canEnable(ExtractMethodAction.java:84)</Frame>
          <Frame depth="16">org.eclipse.jdt.ui.actions.ExtractMethodAction.selectionChanged(ExtractMethodAction.java:80)</Frame>
          <Frame depth="17">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:202)</Frame>
          <Frame depth="18">org.eclipse.jdt.ui.actions.SelectionDispatchAction.update(SelectionDispatchAction.java:114)</Frame>
          <Frame depth="19">org.eclipse.jdt.ui.actions.RefactorActionGroup.refactorMenuShown(RefactorActionGroup.java:512)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.RefactorActionGroup.access$1(RefactorActionGroup.java:497)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.RefactorActionGroup$1.menuAboutToShow(RefactorActionGroup.java:451)</Frame>
          <Frame depth="22">org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:286)</Frame>
          <Frame depth="23">org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:370)</Frame>
          <Frame depth="24">org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:367)</Frame>
          <Frame depth="25">org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:383)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:116)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:801)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3320)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:2993)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Menu._setVisible(Menu.java:222)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.runPopups(Display.java:2798)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2425)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="42">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="44">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="49">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="50">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="884" end="1033" />
        <code>public class A {
	
	public static void main(String[] args) {
		assert (true) : "Testing";
	}
	
	public void foo() {
		assert (true) : "Testing";
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>enviroment: Sun jdk1.4.2_04 on Windows 2000 Server

For eclipse v3.0:
When an "assert" statement is used in a java code, and the JDK compliance is set
to 1.4 (in order to enable the "assert" feature), the refactory function is not
available. Please see the screenshot at:
http://www.javaworld.com.tw/jute/upload/2004/06/29/65845852.gif

For eclipse v2.1.3:
When an "assert" statement is used in a java code, and the JDK compliance is set
to 1.4 (in order to enable the "assert" feature), the refactory function doesn't
work. Please see picture:
http://www.javaworld.com.tw/jute/upload/2004/06/24/97320716.gif
There is no response after clicking on "Rename..." in the picture.
Only setting the Compliance Level to 1.4 is enough. To get assert support you 
have to set the source and class file compatibility to 1.4 as well 
(uncheck "Use defautl compliance level).

I tested it with 

public class A {
	
	public static void main(String[] args) {
		assert (true) : "Testing";
	}
	
	public void foo() {
		assert (true) : "Testing";
	}
}

and it works. But please note that you can't rename main method.
There must be some different settings between yours and my environment.
I did the same configurations (for both v.2.1.3 and v.3.0) as you did:
Set the Compliance Level to 1.4 and set the source and class file compatibility
to 1.4 as well (uncheck "Use defautl compliance level).
But I still have the problem with refactoring.
Please let me know if you need any further info from my side in order to assist
you to reproduce this bug. Thanks.

By the way, of course we can rename the "main" method. If you cannot rename it
with your eclipse, then it is probably a bug.

Here shows the error messages in the .log file (of eclipse v. 3.0) when trying
to use the refactoring feature (via right-clicking through the method name).

==================================================================

!ENTRY org.eclipse.ui 4 0 &amp;#20845;&amp;#26376; 29, 2004 11:19:04.323
!MESSAGE java.lang.IllegalArgumentException
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2587)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1810)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:770)
	at
org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:336)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)
	at org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
	at
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolvePartialAstAtOffset(JavaTextSelection.java:94)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolveSelectedNodes(JavaTextSelection.java:103)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection.resolveInMethodBody(JavaTextSelection.java:125)
	at
org.eclipse.jdt.ui.actions.ExtractMethodAction.canEnable(ExtractMethodAction.java:84)
	at
org.eclipse.jdt.ui.actions.ExtractMethodAction.selectionChanged(ExtractMethodAction.java:80)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:202)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.update(SelectionDispatchAction.java:114)
	at
org.eclipse.jdt.ui.actions.RefactorActionGroup.refactorMenuShown(RefactorActionGroup.java:512)
	at
org.eclipse.jdt.ui.actions.RefactorActionGroup.access$1(RefactorActionGroup.java:497)
	at
org.eclipse.jdt.ui.actions.RefactorActionGroup$1.menuAboutToShow(RefactorActionGroup.java:451)
	at org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:286)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:370)
	at org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:367)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:383)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:116)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:801)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3320)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2993)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:222)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:2798)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2425)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Regarding renaming the "main" method. We can do it in v. 2.1.3 but cannot do it
in v. 3.0.
This is a dup of 68823. The problem is that the AST creation fails, hence no 
refactoring is available.

Please provide steps to reproduce the problem (best would be source code 
showing the problem).


*** This bug has been marked as a duplicate of 68823 ***</WithStack>
    <WithOutStack>enviroment: Sun jdk1.4.2_04 on Windows 2000 Server

For eclipse v3.0:
When an "assert" statement is used in a java code, and the JDK compliance is set
to 1.4 (in order to enable the "assert" feature), the refactory function is not
available. Please see the screenshot at:
http://www.javaworld.com.tw/jute/upload/2004/06/29/65845852.gif

For eclipse v2.1.3:
When an "assert" statement is used in a java code, and the JDK compliance is set
to 1.4 (in order to enable the "assert" feature), the refactory function doesn't
work. Please see picture:
http://www.javaworld.com.tw/jute/upload/2004/06/24/97320716.gif
There is no response after clicking on "Rename..." in the picture.
Only setting the Compliance Level to 1.4 is enough. To get assert support you 
have to set the source and class file compatibility to 1.4 as well 
(uncheck "Use defautl compliance level).

I tested it with 

public class A {
	
	public static void main(String[] args) {
		assert (true) : "Testing";
	}
	
	public void foo() {
		assert (true) : "Testing";
	}
}

and it works. But please note that you can't rename main method.
There must be some different settings between yours and my environment.
I did the same configurations (for both v.2.1.3 and v.3.0) as you did:
Set the Compliance Level to 1.4 and set the source and class file compatibility
to 1.4 as well (uncheck "Use defautl compliance level).
But I still have the problem with refactoring.
Please let me know if you need any further info from my side in order to assist
you to reproduce this bug. Thanks.

By the way, of course we can rename the "main" method. If you cannot rename it
with your eclipse, then it is probably a bug.

Here shows the error messages in the .log file (of eclipse v. 3.0) when trying
to use the refactoring feature (via right-clicking through the method name).

==================================================================

!ENTRY org.eclipse.ui 4 0 &amp;#20845;&amp;#26376; 29, 2004 11:19:04.323
!MESSAGE java.lang.IllegalArgumentException
!STACK 0


Regarding renaming the "main" method. We can do it in v. 2.1.3 but cannot do it
in v. 3.0.
This is a dup of 68823. The problem is that the AST creation fails, hence no 
refactoring is available.

Please provide steps to reproduce the problem (best would be source code 
showing the problem).


*** This bug has been marked as a duplicate of 68823 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68830" />
    <CreationDate amount="2004-06-28 23:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>build-site function corrupts feature.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="18">
        <Lines>
          <Line>1. Create a new Feature project with the following values:</Line>
          <Line>Feature ID: "org.tigris.subversion.subclipse.osx"</Line>
          <Line>Feature name: "Subclipse"</Line>
          <Line>provider-name: "tigris.org"</Line>
          <Line>Click Finish.  You will see that the feature.xml generated is well-formed.</Line>
          <Line />
          <Line>2. Export the feature to a directory using the feature export wizard.  The</Line>
          <Line>export will finish fine.  However, when you go and you try to open the</Line>
          <Line>exported feature.xml, you will see that it is corrupted.</Line>
          <Line>wassim could you please attach the original feature and the resulting feature</Line>
          <Line>(the xml files only).</Line>
          <Line>It is probably the id replacer that put this mess.</Line>
          <Line>Created attachment 13159</Line>
          <Line>Original feature.xml</Line>
          <Line>Created attachment 13160</Line>
          <Line>Exported feature.xml</Line>
          <Line>Created attachment 13171</Line>
          <Line>Patch fixing the problem</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>given a normal feature.xml, running the "build update site"  will create a feature jar containing a 
corrupted feature.xml. specifically, the label attribute of the feature element is overwritten with the 
version:

&lt;feature
      id="org.tigris.subversion.subclipse.osx"0.9.4"Subclipse"
      version="0.9.4"
      provider-name="tigris.org"
      os="macosx"
      ws="carbon"
      arch="ppc"&gt;


should be:

&lt;feature
      id="org.tigris.subversion.subclipse.osx" label="Subclipse"
      version="0.9.4"
      provider-name="tigris.org"
      os="macosx"
      ws="carbon"
      arch="ppc"&gt;
i've also verified this bug on linux
Candidate for 3.0.1
Cherie, please investigate.

Something wacky is corrupting the feature.xml during the export.

To easily reproduce:
1. Create a new Feature project with the following values:
Feature ID: "org.tigris.subversion.subclipse.osx"
Feature name: "Subclipse"
provider-name: "tigris.org"
Click Finish.  You will see that the feature.xml generated is well-formed.

2. Export the feature to a directory using the feature export wizard.  The 
export will finish fine.  However, when you go and you try to open the 
exported feature.xml, you will see that it is corrupted.
wassim could you please attach the original feature and the resulting feature 
(the xml files only).
It is probably the id replacer that put this mess.
Created attachment 13159
Original feature.xml
Created attachment 13160
Exported feature.xml
Created attachment 13171
Patch fixing the problem

The idReplacer does not use an XML parser and just browse through the stream
looking for the string 'version' and try to replace what is after.
But of course in this case the word version being found is the one in the
feature id...

This patch fixes this problem.
Created attachment 13178
Patch fixing the same problem in the pluginVersion replacer

PluginVersionReplaceTask suffers from the same problem than the idreplacer (for
features). This patch fixes the problem.
Created attachment 13270
New patch

This patch fixes problems discovered in the previous patches
Created attachment 14055
patch
Created attachment 14057
patch

Make the two code similar and change the comparison to be case insensitive.
Pascal, Will this be fixed for 3.0.1 RC1?
Yes, we just need to review the fix and integrate it.
Fix reviewed and committed with DJ.
Pascal to put it in HEAD.
Released into HEAD</WithStack>
    <WithOutStack>given a normal feature.xml, running the "build update site"  will create a feature jar containing a 
corrupted feature.xml. specifically, the label attribute of the feature element is overwritten with the 
version:

&lt;feature
      id="org.tigris.subversion.subclipse.osx"0.9.4"Subclipse"
      version="0.9.4"
      provider-name="tigris.org"
      os="macosx"
      ws="carbon"
      arch="ppc"&gt;


should be:

&lt;feature
      id="org.tigris.subversion.subclipse.osx" label="Subclipse"
      version="0.9.4"
      provider-name="tigris.org"
      os="macosx"
      ws="carbon"
      arch="ppc"&gt;
i've also verified this bug on linux
Candidate for 3.0.1
Cherie, please investigate.

Something wacky is corrupting the feature.xml during the export.

To easily reproduce:
1. Create a new Feature project with the following values:
Feature ID: "org.tigris.subversion.subclipse.osx"
Feature name: "Subclipse"
provider-name: "tigris.org"
Click Finish.  You will see that the feature.xml generated is well-formed.

2. Export the feature to a directory using the feature export wizard.  The 
export will finish fine.  However, when you go and you try to open the 
exported feature.xml, you will see that it is corrupted.
wassim could you please attach the original feature and the resulting feature 
(the xml files only).
It is probably the id replacer that put this mess.
Created attachment 13159
Original feature.xml
Created attachment 13160
Exported feature.xml
Created attachment 13171
Patch fixing the problem

The idReplacer does not use an XML parser and just browse through the stream
looking for the string 'version' and try to replace what is after.
But of course in this case the word version being found is the one in the
feature id...

This patch fixes this problem.
Created attachment 13178
Patch fixing the same problem in the pluginVersion replacer

PluginVersionReplaceTask suffers from the same problem than the idreplacer (for
features). This patch fixes the problem.
Created attachment 13270
New patch

This patch fixes problems discovered in the previous patches
Created attachment 14055
patch
Created attachment 14057
patch

Make the two code similar and change the comparison to be case insensitive.
Pascal, Will this be fixed for 3.0.1 RC1?
Yes, we just need to review the fix and integrate it.
Fix reviewed and committed with DJ.
Pascal to put it in HEAD.
Released into HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68831" />
    <CreationDate amount="2004-06-29 02:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[CellEditors] TextCellEditor copies values to other rows in same column</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="1309" end="1351" />
        <code>absTextEditor = new TextCellEditor(table);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1495" end="1537" />
        <code>// to allow onl y float values</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1598" end="1644" />
        <code>absTextEditor.getControl()).getText()+e.text);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2030" end="2075" />
        <code>// TODO Auto-generated method stub</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2139" end="2199" />
        <code>((Text) absTextEditor.getControl()).setText("");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I am Using 3.0RC3 for my aplication. I have a Table and a TableViewer for
it. I have also assigned a few TextCellEditors to various columns of this
table. The problem is that when I click form one cell to another cell, the
value from the first cell get copied to all the cells on which i click after
clicking onto the first cell. This phenomenon is only if i move along the
same column and not across columns. Also i have noticed this phenomenon for 
text cell editors with restriction on the values entered. for e.g if i have a 
text cell editor with no VerifyListener, for restricting the values entered, 
then it works fine. ( as in the case of text cell editor used in "Tasks" view). 
but when there is a verify listener this problems occurs. for code reference 
take a look at http://www.eclipse.org/articles/index.html  and go for "Building 
and delivering a table editor with SWT/JFace" and 
download "TableViewerExamplePlugin". This plugin gives a problem with 3.0 M4. I 
wasnt able to make this example appear on 3.0RC3. In this example 
the "Description" column works fine but the "% Complete" has this problem. I 
have used exactly same procedure in my code too.
Hi Tod,

I figured out somethin else also. The mentioned problem occurs only when u add 
a VerifyListener to a text cell editor. e.g.

absTextEditor = new TextCellEditor(table);
((Text) absTextEditor.getControl()).addVerifyListener
(
    new VerifyListener()
    {
        public void verifyText(VerifyEvent e)
        {
           // to allow onl y float values
           e.doit = Pattern.matches("\\d*(\\.)?\\d*",((Text)
absTextEditor.getControl()).getText()+e.text);
        }
    }

);

so what was happening was that when you click on one of the cells of a 
perticular column, "absTextEditor.getControl()).getText()" was retaining its 
value even efter focus was lost. so i added a focus listener to it e.g.

((Text) absTextEditor.getControl()).addFocusListener
(
    new FocusListener()
    {
        public void focusGained(FocusEvent e)
        {
          // TODO Auto-generated method stub
        }
        public void focusLost(FocusEvent e)
        {
            ((Text) absTextEditor.getControl()).setText("");
        }
    }
);

and the problem was solved. I am not sure if that the proper way to do it or if 
it is a bug and what i did was a workaround.

Thanks,
Vishal

Bug 34819 might be similar if not the same as this one. So are you saying that
you can only reproduce the problem in 3.0 M4 and not 3.0RC3?
No, as far as i can make out, the "Bug 34819" talks abt the problem with 
DialogCellEditor and not the TextCellEditor. What i was saying that i 
downloaded the example plugin from the "articles" at eclipse.org, I had 
mentioned about this earlier, and i was able to add that plugin to 3.0M4 and 
wasnt able to add it to 3.0RC3 (this is the plugin which also has a problem of 
data getting copied from one cell of a table to another when i move in same 
table). But now i am using 3.0, the lastest one, and the probable bug was still 
there. in my last additional comment i was able to find a temporary fix for it 
(see additional comments #1 for actual code of the fix). Actually 
TextCellEditor works fine till only VerifyListener is assigned to it. 

Hope that makes it more clearer.
I checked this problem on WinXP and Win2000 platforms 
in the Eclipse 3.2 RC2. Everything works ok.
Marking as WORKSFORME</WithStack>
    <WithOutStack>I am Using 3.0RC3 for my aplication. I have a Table and a TableViewer for
it. I have also assigned a few TextCellEditors to various columns of this
table. The problem is that when I click form one cell to another cell, the
value from the first cell get copied to all the cells on which i click after
clicking onto the first cell. This phenomenon is only if i move along the
same column and not across columns. Also i have noticed this phenomenon for 
text cell editors with restriction on the values entered. for e.g if i have a 
text cell editor with no VerifyListener, for restricting the values entered, 
then it works fine. ( as in the case of text cell editor used in "Tasks" view). 
but when there is a verify listener this problems occurs. for code reference 
take a look at http://www.eclipse.org/articles/index.html  and go for "Building 
and delivering a table editor with SWT/JFace" and 
download "TableViewerExamplePlugin". This plugin gives a problem with 3.0 M4. I 
wasnt able to make this example appear on 3.0RC3. In this example 
the "Description" column works fine but the "% Complete" has this problem. I 
have used exactly same procedure in my code too.
Hi Tod,

I figured out somethin else also. The mentioned problem occurs only when u add 
a VerifyListener to a text cell editor. e.g.

absTextEditor = new TextCellEditor(table);
((Text) absTextEditor.getControl()).addVerifyListener
(
    new VerifyListener()
    {
        public void verifyText(VerifyEvent e)
        {
           // to allow onl y float values
           e.doit = Pattern.matches("\\d*(\\.)?\\d*",((Text)
absTextEditor.getControl()).getText()+e.text);
        }
    }

);

so what was happening was that when you click on one of the cells of a 
perticular column, "absTextEditor.getControl()).getText()" was retaining its 
value even efter focus was lost. so i added a focus listener to it e.g.

((Text) absTextEditor.getControl()).addFocusListener
(
    new FocusListener()
    {
        public void focusGained(FocusEvent e)
        {
          // TODO Auto-generated method stub
        }
        public void focusLost(FocusEvent e)
        {
            ((Text) absTextEditor.getControl()).setText("");
        }
    }
);

and the problem was solved. I am not sure if that the proper way to do it or if 
it is a bug and what i did was a workaround.

Thanks,
Vishal

Bug 34819 might be similar if not the same as this one. So are you saying that
you can only reproduce the problem in 3.0 M4 and not 3.0RC3?
No, as far as i can make out, the "Bug 34819" talks abt the problem with 
DialogCellEditor and not the TextCellEditor. What i was saying that i 
downloaded the example plugin from the "articles" at eclipse.org, I had 
mentioned about this earlier, and i was able to add that plugin to 3.0M4 and 
wasnt able to add it to 3.0RC3 (this is the plugin which also has a problem of 
data getting copied from one cell of a table to another when i move in same 
table). But now i am using 3.0, the lastest one, and the probable bug was still 
there. in my last additional comment i was able to find a temporary fix for it 
(see additional comments #1 for actual code of the fix). Actually 
TextCellEditor works fine till only VerifyListener is assigned to it. 

Hope that makes it more clearer.
I checked this problem on WinXP and Win2000 platforms 
in the Eclipse 3.2 RC2. Everything works ok.
Marking as WORKSFORME</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68832" />
    <CreationDate amount="2004-06-29 03:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>double click in display view selects whole line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>in earlier releases (2.1.x) double clicking in display view in debug perspective
selected single word (re = \b.*\b). in 3.0 double clicking selects whole line no
matter where I click.
this is confusing and strange - was that intended?
This was intentional. See Bug 45481 for details.
Marking as won't fix, as this was intentional.
Bug 45481 was a very bad idea and should be reverted.

Double-click has a well-defined meaning (select word), and this is broken not only in the Display view, but also in the breakpoints condition editor, etc.

Use triple click to select a whole line, and triple-click-drag (keeping the mouse down on the third click) to select multiple lines.
I agree that we should not change the notion of what double / triple click do, that is why I pushed the change to revert to the default behavior to:

http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=473a726270ed527d7e83283bf3d47a8fec0747e1

Thanks for finding + reopening this Markus.
Thanks a lot.

I should have investigated this much earlier, but I always thought it would be hard to fix, since I didn't imagine code that actively destroys the right behavior...
Verified in:

Version: 4.2.0
Build id: I20120313-0610</WithStack>
    <WithOutStack>in earlier releases (2.1.x) double clicking in display view in debug perspective
selected single word (re = \b.*\b). in 3.0 double clicking selects whole line no
matter where I click.
this is confusing and strange - was that intended?
This was intentional. See Bug 45481 for details.
Marking as won't fix, as this was intentional.
Bug 45481 was a very bad idea and should be reverted.

Double-click has a well-defined meaning (select word), and this is broken not only in the Display view, but also in the breakpoints condition editor, etc.

Use triple click to select a whole line, and triple-click-drag (keeping the mouse down on the third click) to select multiple lines.
I agree that we should not change the notion of what double / triple click do, that is why I pushed the change to revert to the default behavior to:

http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=473a726270ed527d7e83283bf3d47a8fec0747e1

Thanks for finding + reopening this Markus.
Thanks a lot.

I should have investigated this much earlier, but I always thought it would be hard to fix, since I didn't imagine code that actively destroys the right behavior...
Verified in:

Version: 4.2.0
Build id: I20120313-0610</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68833" />
    <CreationDate amount="2004-06-29 04:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ditch codegen "inline finally blocks"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. The finally block is on a hot path once the code runs.  The JVM sees this and</Line>
          <Line>inlines the finally block, at least for the hot catch blocks.  Having it inlined</Line>
          <Line>in the cold catch blocks as well (which this feature does) is a waste of space</Line>
          <Line>and may pollute the CPU's code cache with junk.</Line>
          <Line />
          <Line>2. The finally block in not on a hot path.  Inlining it (which this feature</Line>
          <Line>does) is a waste of space and may pollute the CPU's code cache with junk.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In Eclipse 3.0GA:
Go to Window -&gt; Preferences -&gt; Java -&gt; Compiler -&gt; Compliance &amp; Class Files.

On this page there's a checkbox for having the Java compiler inlining finally
blocks.  I fail to see the point of this feature.  I can see two cases:

1. The finally block is on a hot path once the code runs.  The JVM sees this and
inlines the finally block, at least for the hot catch blocks.  Having it inlined
in the cold catch blocks as well (which this feature does) is a waste of space
and may pollute the CPU's code cache with junk.

2. The finally block in not on a hot path.  Inlining it (which this feature
does) is a waste of space and may pollute the CPU's code cache with junk.

Is there a third option that I'm missing?  The description of the option says
that it leads to "larger class files" (correct) and "improved performance". 
Under what conditions have the inlined finally blocks actually lead to "improved
performance"?

If this (premature AFAICT) optimization actually yields a performance gain, a
bug should be raised with the JVM vendor.
JSR202 describes this evolution. Basically, from 1.5 on, compilers are no 
longer supposed to generate bytecode instruction 'jsr' (jump subroutine) which 
is used for finally blocks. This instruction is giving headaches to VM 
implementors, so the VM specs are being evolved to deprecate this instruction 
(sadly for compilers which have to generate longer bytecode sequence due to 
inlining).

I fully agree with your claim, but we have to comply. Note that space is 
bigger, but the file will load faster, since the verification process will be 
much faster...

In preparation for this evolution, we added an option to our compiler for 
enabling this behavior so as for clients to measure its impact.
My previous should have said: "from target 1.5 on".
Cool.  Thanks for the explanation.</WithStack>
    <WithOutStack>In Eclipse 3.0GA:
Go to Window -&gt; Preferences -&gt; Java -&gt; Compiler -&gt; Compliance &amp; Class Files.

On this page there's a checkbox for having the Java compiler inlining finally
blocks.  I fail to see the point of this feature.  I can see two cases:

1. The finally block is on a hot path once the code runs.  The JVM sees this and
inlines the finally block, at least for the hot catch blocks.  Having it inlined
in the cold catch blocks as well (which this feature does) is a waste of space
and may pollute the CPU's code cache with junk.

2. The finally block in not on a hot path.  Inlining it (which this feature
does) is a waste of space and may pollute the CPU's code cache with junk.

Is there a third option that I'm missing?  The description of the option says
that it leads to "larger class files" (correct) and "improved performance". 
Under what conditions have the inlined finally blocks actually lead to "improved
performance"?

If this (premature AFAICT) optimization actually yields a performance gain, a
bug should be raised with the JVM vendor.
JSR202 describes this evolution. Basically, from 1.5 on, compilers are no 
longer supposed to generate bytecode instruction 'jsr' (jump subroutine) which 
is used for finally blocks. This instruction is giving headaches to VM 
implementors, so the VM specs are being evolved to deprecate this instruction 
(sadly for compilers which have to generate longer bytecode sequence due to 
inlining).

I fully agree with your claim, but we have to comply. Note that space is 
bigger, but the file will load faster, since the verification process will be 
much faster...

In preparation for this evolution, we added an option to our compiler for 
enabling this behavior so as for clients to measure its impact.
My previous should have said: "from target 1.5 on".
Cool.  Thanks for the explanation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68834" />
    <CreationDate amount="2004-06-29 04:39:00 -0400" />
    <DupId amount="35615" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exclusion Filter a/* excludes package a.b</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse 3.0

&lt;classpath&gt;
	&lt;classpathentry excluding="a/*" kind="src" path="src"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind="output" path="bin"/&gt;
&lt;/classpath&gt;

=&gt; expected: all files in package 'a' excluded, subfolders of 'a' not excluded
=&gt; was: everything below 'a' excluded (same as with "a/" or "a/**").

This behavior is not in sync with the Javadoc for
IClasspathEntry#getExclusionPatterns().


*** This bug has been marked as a duplicate of 35615 ***</WithStack>
    <WithOutStack>Eclipse 3.0

&lt;classpath&gt;
	&lt;classpathentry excluding="a/*" kind="src" path="src"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind="output" path="bin"/&gt;
&lt;/classpath&gt;

=&gt; expected: all files in package 'a' excluded, subfolders of 'a' not excluded
=&gt; was: everything below 'a' excluded (same as with "a/" or "a/**").

This behavior is not in sync with the Javadoc for
IClasspathEntry#getExclusionPatterns().


*** This bug has been marked as a duplicate of 35615 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68835" />
    <CreationDate amount="2004-06-29 04:53:00 -0400" />
    <DupId amount="67618" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Wrong result when using Team &gt; Synchronize with Repository on a sticky resource</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have a sticky file (with a tag) in my workspace with revision 1.2.2.2
The repository contains already a revision 1.2.2.3 on the same branch.

When I perform now a Team &gt; Synchronize with repository just on that file the 
synchronize view shows a comparision between 1.2.2.2 - 1.2.2.2

If the file in the workpsace is modified (dirty) I don't have any chance to 
commit/synchronize it! Commit override is disabled, also Mark as Merged and a 
simple commit fails cos of an Up-to-date check failure.

I get the correct result when the parent folder is sticky either.


*** This bug has been marked as a duplicate of 67618 ***</WithStack>
    <WithOutStack>I have a sticky file (with a tag) in my workspace with revision 1.2.2.2
The repository contains already a revision 1.2.2.3 on the same branch.

When I perform now a Team &gt; Synchronize with repository just on that file the 
synchronize view shows a comparision between 1.2.2.2 - 1.2.2.2

If the file in the workpsace is modified (dirty) I don't have any chance to 
commit/synchronize it! Commit override is disabled, also Mark as Merged and a 
simple commit fails cos of an Up-to-date check failure.

I get the correct result when the parent folder is sticky either.


*** This bug has been marked as a duplicate of 67618 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68836" />
    <CreationDate amount="2004-06-29 05:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[key binding] Default Emacs key binding for TAB should be "indent line"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="129" end="184" />
        <code>public static void main(String args[]) {
args = null;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Try this is with 3.0GA:
-----------------------
Enable Emacs keybindings.
Create a Java-program with the following main method:

public static void main(String args[]) {
args = null;
}

Put the cursor between "null" and ";".
Press TAB.


Current behaviour:
------------------
A tab character is inserted between "null" and ";".


Expected behaviour:
-------------------
The line should have been indented to the correct position.


Note:
-----
I have changed this manually for my own use, and it works fine.  So this isn't
about me personally but rather that Eclipse's Emacs key bindings should be as
close to the Emacs' key bindings as possible.
No plans to change this.
Daniel,

can you please provide a rationale for Eclipse's current behavior before closing this again?

I'm not sure that even emacs user won't expect a Tab being entered. How would you enter the Tab then?
Having TAB adjusting the indentation of a line is the default behavior of Emacs.

Why should Eclipse do something else when the user has specifically requested Emacs keybindings mode?

To be clear here, TAB indenting a line is the default Emacs behavior in C and Java modes.

In a plain-text buffer in Emacs, TAB inserts a TAB character.

But how do would you enter the Tab character?
(In reply to comment #6)
&gt; But how do would you enter the Tab character?

For indentation or for something else (and if so, what)?
To put a Tab between "null" and ";".
(In reply to comment #8)
&gt; To put a Tab between "null" and ";".

Now that's something you don't see every day :-).

But if you really want to, you can insert TAB characters at random places in the code by doing ^q TAB.

OK, I see. Note that you can assign Tab to 'Indent Line' on the Keys preference page to get what you want.
(In reply to comment #10)
&gt; OK, I see. Note that you can assign Tab to 'Indent Line' on the Keys preference
&gt; page to get what you want.

As mentioned in comments in bug 4135 and bug 37472, this seems to break Code Assist. I'd confirm that were true if I could get it to work myself.

I personally never want a TAB in my code. Having a preference to make TAB always indent the current line regardless of where your cursor is on the line would make me very happy. For people that think TABs are somehow useful in code, they can turn the preference off.</WithStack>
    <WithOutStack>Try this is with 3.0GA:
-----------------------
Enable Emacs keybindings.
Create a Java-program with the following main method:

public static void main(String args[]) {
args = null;
}

Put the cursor between "null" and ";".
Press TAB.


Current behaviour:
------------------
A tab character is inserted between "null" and ";".


Expected behaviour:
-------------------
The line should have been indented to the correct position.


Note:
-----
I have changed this manually for my own use, and it works fine.  So this isn't
about me personally but rather that Eclipse's Emacs key bindings should be as
close to the Emacs' key bindings as possible.
No plans to change this.
Daniel,

can you please provide a rationale for Eclipse's current behavior before closing this again?

I'm not sure that even emacs user won't expect a Tab being entered. How would you enter the Tab then?
Having TAB adjusting the indentation of a line is the default behavior of Emacs.

Why should Eclipse do something else when the user has specifically requested Emacs keybindings mode?

To be clear here, TAB indenting a line is the default Emacs behavior in C and Java modes.

In a plain-text buffer in Emacs, TAB inserts a TAB character.

But how do would you enter the Tab character?
(In reply to comment #6)
&gt; But how do would you enter the Tab character?

For indentation or for something else (and if so, what)?
To put a Tab between "null" and ";".
(In reply to comment #8)
&gt; To put a Tab between "null" and ";".

Now that's something you don't see every day :-).

But if you really want to, you can insert TAB characters at random places in the code by doing ^q TAB.

OK, I see. Note that you can assign Tab to 'Indent Line' on the Keys preference page to get what you want.
(In reply to comment #10)
&gt; OK, I see. Note that you can assign Tab to 'Indent Line' on the Keys preference
&gt; page to get what you want.

As mentioned in comments in bug 4135 and bug 37472, this seems to break Code Assist. I'd confirm that were true if I could get it to work myself.

I personally never want a TAB in my code. Having a preference to make TAB always indent the current line regardless of where your cursor is on the line would make me very happy. For people that think TABs are somehow useful in code, they can turn the preference off.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68837" />
    <CreationDate amount="2004-06-29 05:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] AST: Missing source range in parameterized type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="120" end="178" />
        <code>public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040629

1. Look at the following code in the AST view (1.5 mode):
   the name node 'Comparator' has no source range.

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}
Fixed and released in stream 1.5.
Regression test added.
Verified using build 3.1</WithStack>
    <WithOutStack>20040629

1. Look at the following code in the AST view (1.5 mode):
   the name node 'Comparator' has no source range.

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}
Fixed and released in stream 1.5.
Regression test added.
Verified using build 3.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68838" />
    <CreationDate amount="2004-06-29 05:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] AST: Missing bindings in type parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="120" end="178" />
        <code>public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040629

1. Look at the following code in the AST view (1.5 mode):
   the type parameters 'Y' and 'X' have no binding

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}
*** Bug 69133 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression test added.
Verified in I200409212000.</WithStack>
    <WithOutStack>20040629

1. Look at the following code in the AST view (1.5 mode):
   the type parameters 'Y' and 'X' have no binding

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {

}
*** Bug 69133 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression test added.
Verified in I200409212000.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68839" />
    <CreationDate amount="2004-06-29 05:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>[builder] Compiler tries to compile .java files in folder with illegal package name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="162" end="192" />
        <code>"package a; public class AB {}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- a-b is rendered as folder, not as package</Line>
          <Line>- AB.java is a file (shallow "J" icon), not a compilation unit</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Eclipse 3.0. I'm not completely sure whether this is a bug or intended behavior:

Inside a source folder, create a folder 'a-b' with a file AB.java with contents
"package a; public class AB {}".

The compiler tries to compile the class 'AB' even though it is in a non-package
folder. There's a compile error since the package declaration doesn't match the
folder name. Since the java model categorizes 'a-b' as resource, I would expect
that the compiler doesn't look at files inside the folder.
We could indeed skip these
Is it really worth it for the builder to check EVERY folder to see if its a 
valid package name?

I don't think it is.

This is a very rare case. We shouldn't slow down normal behaviour to report a 
different error or no error at all (it could have been a spelling mistake).
Maybe the JavaModel could record the fact such a check is necessary when
rebuilding... so it would not affect normal building scenario.
Why doesn't the JavaModel just report another error?

We definitely need some form of an error (and I think the current one is fine).

Its not like we would skip these files and not complain, how else would you 
find a spelling mistake in the 'package name'?
You would find the mistake in the Package Explorer:
- a-b is rendered as folder, not as package
- AB.java is a file (shallow "J" icon), not a compilation unit

However, I agree that this is minor and I certainly won't object to WONTFIX if
performance would suffer.
I understand that it shows up as a non-package &amp; a non-Java file (in the 
Package Explorer) but with compilation errors.

I guess I'm asking what's wrong with that?

The user clearly made a mistake by defining .java files in a non-package 
inside a source folder (spelling mistake in package name?).

We need to generate an error somewhere &amp; I think the existing one is fine IMO.
Why should it be an error? Maybe the user just wanted to "comment out" a package
and renamed it in the Resource Navigator. (On certain systems, you could even
try to prepend // to a folder name;-)
Why rename it when you can just drag it outside the source folder?

If this case ever did happen, I suspect the user would want to know (thru some 
error), than for us to silent ignore it.
unlikely we will change our behaviour
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Eclipse 3.0. I'm not completely sure whether this is a bug or intended behavior:

Inside a source folder, create a folder 'a-b' with a file AB.java with contents
"package a; public class AB {}".

The compiler tries to compile the class 'AB' even though it is in a non-package
folder. There's a compile error since the package declaration doesn't match the
folder name. Since the java model categorizes 'a-b' as resource, I would expect
that the compiler doesn't look at files inside the folder.
We could indeed skip these
Is it really worth it for the builder to check EVERY folder to see if its a 
valid package name?

I don't think it is.

This is a very rare case. We shouldn't slow down normal behaviour to report a 
different error or no error at all (it could have been a spelling mistake).
Maybe the JavaModel could record the fact such a check is necessary when
rebuilding... so it would not affect normal building scenario.
Why doesn't the JavaModel just report another error?

We definitely need some form of an error (and I think the current one is fine).

Its not like we would skip these files and not complain, how else would you 
find a spelling mistake in the 'package name'?
You would find the mistake in the Package Explorer:
- a-b is rendered as folder, not as package
- AB.java is a file (shallow "J" icon), not a compilation unit

However, I agree that this is minor and I certainly won't object to WONTFIX if
performance would suffer.
I understand that it shows up as a non-package &amp; a non-Java file (in the 
Package Explorer) but with compilation errors.

I guess I'm asking what's wrong with that?

The user clearly made a mistake by defining .java files in a non-package 
inside a source folder (spelling mistake in package name?).

We need to generate an error somewhere &amp; I think the existing one is fine IMO.
Why should it be an error? Maybe the user just wanted to "comment out" a package
and renamed it in the Resource Navigator. (On certain systems, you could even
try to prepend // to a folder name;-)
Why rename it when you can just drag it outside the source folder?

If this case ever did happen, I suspect the user would want to know (thru some 
error), than for us to silent ignore it.
unlikely we will change our behaviour
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68840" />
    <CreationDate amount="2004-06-29 05:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source not found on Console hyperlink for Separate VM builds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="119" end="142" />
        <code>package pl.kapital.bug;</code>
      </source_code>
      <source_code type="class">
        <location start="144" end="355" />
        <code>public class Main {

	public static void main(String[] args) {
		try {
			System.out.println(args[1]);
		} catch (RuntimeException e) {
			System.err.println("ERROR:");
			e.printStackTrace(System.err);
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Hi
Problem is I can't track errors when I run programs using Ant script. 

There is en exaple:
Java source 
Main.java:
package pl.kapital.bug;

public class Main {

	public static void main(String[] args) {
		try {
			System.out.println(args[1]);
		} catch (RuntimeException e) {
			System.err.println("ERROR:");
			e.printStackTrace(System.err);
		}
	}
}

Ant script
build.xml:
&lt;project basedir="." default="exec" name="application"&gt;
	&lt;target name="exec" description="Execute Main Class"&gt;
		&lt;java classname="pl.kapital.bug.Main" fork="true"&gt;
			&lt;classpath path="."&gt;&lt;/classpath&gt;
		&lt;/java&gt;
	&lt;/target&gt;
&lt;/project&gt;

Console output:
Buildfile: w:\eclipse_BUG\BUG_REPORT\build.xml
exec:
     [java] ERROR:
     [java] java.lang.ArrayIndexOutOfBoundsException: 1
     [java] at pl.kapital.bug.Main.main(Main.java:19)
BUILD SUCCESSFUL
Total time: 1 second

When I click on line
     [java] at pl.kapital.bug.Main.main(Main.java:19)
I see information window: "Source not found for pl.kapital.bug.Main"

It works fine for 3.0M8
Since 3.0M9 hyperliks are broken.
Move to Platform/Ant.
I have verified that this is a problem if you run the Ant build in a separate 
VM. 

If you run the build in the same JRE as Eclipse the source lookup works as 
expected. 
To set a build to run in the same JRE as Eclipse, configure on the JRE tab of 
the Ant launch configuration.
This problem was introduced with the fix for bug 48127.

With the improvements in source lookup for 3.0 the fix for bug 48127 is no 
longer needed.

However with an incomplete classpath the source lookup fails...I would expect 
that it should do as well as it can with the incomplete classpath but I am out 
of touch on the specifics of source lookup.
I have released the change to AntLaunchDelegate so that source lookup works in 
the general case.

Would it be possible or desirable for the StandardSourcePathProvider to do as 
well as it can when resolving the classpath instead of failing with a 
CoreException on the first problem?
DarinW, please verify (as well with the test case from bug 48127).
verified,
DarinS please update build notes.
Thanks. Build notes updated.
Note: the source path provider will fail on a core exception. It does not have 
the required info to decide whether the exception is fatal or not - its API is 
just to throw the exception up. This is a general problem with 
classpath/source path computation.
We have been experiencing this problem ourselves for a while and testing with a
recently nightly build (N20040720) the problem remains.

Will one eventually be able to run ant builds in a separate JRE or is the
officially stance not to do so if one wants source code stack trace hyperlinks?
If the problem persists, please re-open with steps to reproduce.
*** Bug 70238 has been marked as a duplicate of this bug. ***
*** Bug 71801 has been marked as a duplicate of this bug. ***
*** Bug 72216 has been marked as a duplicate of this bug. ***
*** Bug 82294 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Hi
Problem is I can't track errors when I run programs using Ant script. 

There is en exaple:
Java source 
Main.java:
package pl.kapital.bug;

public class Main {

	public static void main(String[] args) {
		try {
			System.out.println(args[1]);
		} catch (RuntimeException e) {
			System.err.println("ERROR:");
			e.printStackTrace(System.err);
		}
	}
}

Ant script
build.xml:
&lt;project basedir="." default="exec" name="application"&gt;
	&lt;target name="exec" description="Execute Main Class"&gt;
		&lt;java classname="pl.kapital.bug.Main" fork="true"&gt;
			&lt;classpath path="."&gt;&lt;/classpath&gt;
		&lt;/java&gt;
	&lt;/target&gt;
&lt;/project&gt;

Console output:
Buildfile: w:\eclipse_BUG\BUG_REPORT\build.xml
exec:
     [java] ERROR:
     [java] java.lang.ArrayIndexOutOfBoundsException: 1
     [java] at pl.kapital.bug.Main.main(Main.java:19)
BUILD SUCCESSFUL
Total time: 1 second

When I click on line
     [java] at pl.kapital.bug.Main.main(Main.java:19)
I see information window: "Source not found for pl.kapital.bug.Main"

It works fine for 3.0M8
Since 3.0M9 hyperliks are broken.
Move to Platform/Ant.
I have verified that this is a problem if you run the Ant build in a separate 
VM. 

If you run the build in the same JRE as Eclipse the source lookup works as 
expected. 
To set a build to run in the same JRE as Eclipse, configure on the JRE tab of 
the Ant launch configuration.
This problem was introduced with the fix for bug 48127.

With the improvements in source lookup for 3.0 the fix for bug 48127 is no 
longer needed.

However with an incomplete classpath the source lookup fails...I would expect 
that it should do as well as it can with the incomplete classpath but I am out 
of touch on the specifics of source lookup.
I have released the change to AntLaunchDelegate so that source lookup works in 
the general case.

Would it be possible or desirable for the StandardSourcePathProvider to do as 
well as it can when resolving the classpath instead of failing with a 
CoreException on the first problem?
DarinW, please verify (as well with the test case from bug 48127).
verified,
DarinS please update build notes.
Thanks. Build notes updated.
Note: the source path provider will fail on a core exception. It does not have 
the required info to decide whether the exception is fatal or not - its API is 
just to throw the exception up. This is a general problem with 
classpath/source path computation.
We have been experiencing this problem ourselves for a while and testing with a
recently nightly build (N20040720) the problem remains.

Will one eventually be able to run ant builds in a separate JRE or is the
officially stance not to do so if one wants source code stack trace hyperlinks?
If the problem persists, please re-open with steps to reproduce.
*** Bug 70238 has been marked as a duplicate of this bug. ***
*** Bug 71801 has been marked as a duplicate of this bug. ***
*** Bug 72216 has been marked as a duplicate of this bug. ***
*** Bug 82294 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68841" />
    <CreationDate amount="2004-06-29 05:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse 3.0 does not start due to ClassNotFoundException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341156009">
        <Exception>java.lang.ClassNotFoundException</Exception>
        <Reason>javax.xml.parsers.SAXParserFactory</Reason>
        <Frames>
          <Frame depth="0">java.net.URLClassLoader$1.run(URLClassLoader.java:195)</Frame>
          <Frame depth="1">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="2">java.net.URLClassLoader.findClass(URLClassLoader.java:183)</Frame>
          <Frame depth="3">java.lang.ClassLoader.loadClass(ClassLoader.java:294)</Frame>
          <Frame depth="4">java.lang.ClassLoader.loadClass(ClassLoader.java:250)</Frame>
          <Frame depth="5">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)</Frame>
          <Frame depth="6">java.lang.Class.forName0(Native Method)</Frame>
          <Frame depth="7">java.lang.Class.forName(Class.java:115)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseAdaptor.registerEndorsedXMLParser(EclipseAdaptor.java:272)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart(EclipseAdaptor.java:253)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start(SystemBundleActivator.java:61)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)</Frame>
          <Frame depth="12">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:553)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:477)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:166)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:425)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:127)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341156009">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/xml/sax/helpers/DefaultHandler</Reason>
        <Frames>
          <Frame depth="0">java.lang.ClassLoader.defineClass0(Native Method)</Frame>
          <Frame depth="1">java.lang.ClassLoader.defineClass(ClassLoader.java:488)</Frame>
          <Frame depth="2">java.security.SecureClassLoader.defineClass(SecureClassLoader.java:106)</Frame>
          <Frame depth="3">java.net.URLClassLoader.defineClass(URLClassLoader.java:243)</Frame>
          <Frame depth="4">java.net.URLClassLoader.access$100(URLClassLoader.java:51)</Frame>
          <Frame depth="5">java.net.URLClassLoader$1.run(URLClassLoader.java:190)</Frame>
          <Frame depth="6">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="7">java.net.URLClassLoader.findClass(URLClassLoader.java:183)</Frame>
          <Frame depth="8">java.lang.ClassLoader.loadClass(ClassLoader.java:294)</Frame>
          <Frame depth="9">java.lang.ClassLoader.loadClass(ClassLoader.java:250)</Frame>
          <Frame depth="10">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.PluginConverterImpl.parsePluginInfo(PluginConverterImpl.java:552)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.PluginConverterImpl.fillPluginInfo(PluginConverterImpl.java:111)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.adaptor.PluginConverterImpl.convertManifest(PluginConverterImpl.java:655)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseBundleData.generateManifest(EclipseBundleData.java:219)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.adaptor.EclipseBundleData.loadManifest(EclipseBundleData.java:177)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.adaptor.EclipseBundleData.getManifest(EclipseBundleData.java:159)</Frame>
          <Frame depth="17">org.eclipse.core.runtime.adaptor.EclipseBundleData.loadFromManifest(EclipseBundleData.java:266)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultBundleData.initializeNewBundle(DefaultBundleData.java:77)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor$1.begin(DefaultAdaptor.java:451)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged(Framework.java:746)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.Framework$2.run(Framework.java:664)</Frame>
          <Frame depth="22">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="23">org.eclipse.osgi.framework.internal.core.Framework.installWorker(Framework.java:715)</Frame>
          <Frame depth="24">org.eclipse.osgi.framework.internal.core.Framework.installBundle(Framework.java:659)</Frame>
          <Frame depth="25">org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle(BundleContextImpl.java:219)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.adaptor.EclipseStarter.installBundles(EclipseStarter.java:800)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles(EclipseStarter.java:429)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:222)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:127)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Tested on WinXP SP1 and on WinNT4.0SP6a.

Logfile included:

!SESSION Jun 29, 2004 11:14:55.39 ----------------------------------------------
eclipse.buildId=I200406251208
java.version=1.3.1_07
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.49
!MESSAGE Error registering XML parser services.
!STACK 0
java.lang.ClassNotFoundException: javax.xml.parsers.SAXParserFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:183)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:294)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:250)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:115)
	at 
org.eclipse.core.runtime.adaptor.EclipseAdaptor.registerEndorsedXMLParser
(EclipseAdaptor.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart
(EclipseAdaptor.java:253)
	at org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start
(SystemBundleActivator.java:61)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run
(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:937)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles
(StartLevelManager.java:553)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL
(StartLevelManager.java:477)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel
(StartLevelManager.java:273)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.launch
(StartLevelManager.java:243)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.resume
(SystemBundle.java:166)
	at org.eclipse.osgi.framework.internal.core.Framework.launch
(Framework.java:425)
	at org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup
(EclipseStarter.java:216)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:127)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.169
!MESSAGE Startup error
!STACK 1
java.lang.NoClassDefFoundError: org/xml/sax/helpers/DefaultHandler
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:488)
	at java.security.SecureClassLoader.defineClass
(SecureClassLoader.java:106)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:243)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:51)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:190)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:183)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:294)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:250)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)
	at org.eclipse.core.runtime.adaptor.PluginConverterImpl.parsePluginInfo
(PluginConverterImpl.java:552)
	at org.eclipse.core.runtime.adaptor.PluginConverterImpl.fillPluginInfo
(PluginConverterImpl.java:111)
	at org.eclipse.core.runtime.adaptor.PluginConverterImpl.convertManifest
(PluginConverterImpl.java:655)
	at org.eclipse.core.runtime.adaptor.EclipseBundleData.generateManifest
(EclipseBundleData.java:219)
	at org.eclipse.core.runtime.adaptor.EclipseBundleData.loadManifest
(EclipseBundleData.java:177)
	at org.eclipse.core.runtime.adaptor.EclipseBundleData.getManifest
(EclipseBundleData.java:159)
	at org.eclipse.core.runtime.adaptor.EclipseBundleData.loadFromManifest
(EclipseBundleData.java:266)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultBundleData.initializeN
ewBundle(DefaultBundleData.java:77)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor$1.begin
(DefaultAdaptor.java:451)
	at 
org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged
(Framework.java:746)
	at org.eclipse.osgi.framework.internal.core.Framework$2.run
(Framework.java:664)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.Framework.installWorker
(Framework.java:715)
	at org.eclipse.osgi.framework.internal.core.Framework.installBundle
(Framework.java:659)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle
(BundleContextImpl.java:219)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.installBundles
(EclipseStarter.java:800)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles
(EclipseStarter.java:429)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup
(EclipseStarter.java:222)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:127)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.179
!MESSAGE Bundle initial@reference:file:c:/DEV/eclipse 
3.0/plugins/org.eclipse.core.runtime_3.0.0/ [1] was not resolved.
Additional info: 3.0RC3 does not have this problem
Eclipse 3.0 requires a 1.4 VM. Please see the readme in /eclipse/readme for more
details.</WithStack>
    <WithOutStack>Tested on WinXP SP1 and on WinNT4.0SP6a.

Logfile included:

!SESSION Jun 29, 2004 11:14:55.39 ----------------------------------------------
eclipse.buildId=I200406251208
java.version=1.3.1_07
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.49
!MESSAGE Error registering XML parser services.
!STACK 0

!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.169
!MESSAGE Startup error
!STACK 1


!ENTRY org.eclipse.osgi Jun 29, 2004 11:14:55.179
!MESSAGE Bundle initial@reference:file:c:/DEV/eclipse 
3.0/plugins/org.eclipse.core.runtime_3.0.0/ [1] was not resolved.
Additional info: 3.0RC3 does not have this problem
Eclipse 3.0 requires a 1.4 VM. Please see the readme in /eclipse/readme for more
details.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68842" />
    <CreationDate amount="2004-06-29 05:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] AST: parameter type binding: getKey seems wrong</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="143" end="238" />
        <code>public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {
    protected Function&lt;Y,X&gt; function;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040629

1. In the following code get the IBindings of Y and X;
  both IBinding.getKey() return a string 'java.lang.Object' what seems wrong

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {
    protected Function&lt;Y,X&gt; function;
}
I've clarified the spec for getKey() to suggest how to make suitable keys
for new bindings that come with JLS3 features.
Now you get:
YC

I will discuss this key with Jim, when he is back from vacations.
Fixed and released in HEAD.
Regression test added. The format of the key might change. I think the current
spec is still not good enough to remove ambiguities.
Verified in I200409212000.</WithStack>
    <WithOutStack>20040629

1. In the following code get the IBindings of Y and X;
  both IBinding.getKey() return a string 'java.lang.Object' what seems wrong

public abstract class C&lt;Y,X&gt; implements Comparator&lt;X&gt; {
    protected Function&lt;Y,X&gt; function;
}
I've clarified the spec for getKey() to suggest how to make suitable keys
for new bindings that come with JLS3 features.
Now you get:
YC

I will discuss this key with Jim, when he is back from vacations.
Fixed and released in HEAD.
Regression test added. The format of the key might change. I think the current
spec is still not good enough to remove ambiguities.
Verified in I200409212000.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68843" />
    <CreationDate amount="2004-06-29 05:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[build path] Multiple entries in "source folder name"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When creating a "New Java Project", I am asked for the Project Name, Location 
and Layout. Under Layout, I click "Configure Details" which takes me to a 
Preferences window. In this window I can enter the default source folder name, 
and default output folder name.

I think it would be useful to be able to specify multiple folder names 
under "source folder name" separated by semicolons. Each one would then parsed 
out and multiple source folders would be created for the project.

My reason for this is that in our company we use JUnit extensively for 
testing, but sometimes we do not wish to compile and / or ship that code with 
the main codebase. Hence, our codebase is in /src, but the JUnit test code is 
in /usrc. There may well be other instances where source code in one project 
is divided among two or more source folders.

It would be great if Eclipse could automatically make these source folders 
when creating the project.
no plans for this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When creating a "New Java Project", I am asked for the Project Name, Location 
and Layout. Under Layout, I click "Configure Details" which takes me to a 
Preferences window. In this window I can enter the default source folder name, 
and default output folder name.

I think it would be useful to be able to specify multiple folder names 
under "source folder name" separated by semicolons. Each one would then parsed 
out and multiple source folders would be created for the project.

My reason for this is that in our company we use JUnit extensively for 
testing, but sometimes we do not wish to compile and / or ship that code with 
the main codebase. Hence, our codebase is in /src, but the JUnit test code is 
in /usrc. There may well be other instances where source code in one project 
is divided among two or more source folders.

It would be great if Eclipse could automatically make these source folders 
when creating the project.
no plans for this
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68844" />
    <CreationDate amount="2004-06-29 05:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Actions] "Add to .cvsignore" doesn't support mixed gender selections</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Change to CVS perspective, and browse from CVS root to a module</Line>
          <Line>2. Right click - Check out as</Line>
          <Line>3. Check out as project in workspace, project name: ignoretest, click Finish</Line>
          <Line>4. Change to Resource perspective</Line>
          <Line>5. Right click on project - New Folder, name foo</Line>
          <Line>6. Click on foo</Line>
          <Line>7. Control click on .project (which is also not in cvs, or another file not in</Line>
          <Line>cvs). Both file and folder are on the same level.</Line>
          <Line>8. Right click - Team - only two options are "Commit" and "Synchronise with</Line>
          <Line>Rep"</Line>
          <Line>9. Right click on foo alone, or on .project alone, and each one now has the</Line>
          <Line>options "Add to .cvsignore" and "Add to version control"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In Resource view, I can right click on one or more files, or folders, choose 
the Team submenu and click "Add to .cvsignore". However, if I select a file 
AND a folder together, the options to "Add to .cvsignore" and "Add to version 
control" are missing. Why disallow these operations on a file and folder when 
they are allowed on these items if dealt with individually?
This works for me except when the selected file is inside the selected folder. 
If this is not the case for you, please reopen with more details about the 
relationship between the selected file and folder (i.e. same project, etc.).
1. Change to CVS perspective, and browse from CVS root to a module
2. Right click - Check out as
3. Check out as project in workspace, project name: ignoretest, click Finish
4. Change to Resource perspective
5. Right click on project - New Folder, name foo
6. Click on foo
7. Control click on .project (which is also not in cvs, or another file not in 
cvs). Both file and folder are on the same level.
8. Right click - Team - only two options are "Commit" and "Synchronise with 
Rep"
9. Right click on foo alone, or on .project alone, and each one now has the 
options "Add to .cvsignore" and "Add to version control"

Summary of my problem: Why is "Add to .cvsingore" not available when the file 
AND folder are selected?
Updated title
Works for me in N20071111-0010.</WithStack>
    <WithOutStack>In Resource view, I can right click on one or more files, or folders, choose 
the Team submenu and click "Add to .cvsignore". However, if I select a file 
AND a folder together, the options to "Add to .cvsignore" and "Add to version 
control" are missing. Why disallow these operations on a file and folder when 
they are allowed on these items if dealt with individually?
This works for me except when the selected file is inside the selected folder. 
If this is not the case for you, please reopen with more details about the 
relationship between the selected file and folder (i.e. same project, etc.).
1. Change to CVS perspective, and browse from CVS root to a module
2. Right click - Check out as
3. Check out as project in workspace, project name: ignoretest, click Finish
4. Change to Resource perspective
5. Right click on project - New Folder, name foo
6. Click on foo
7. Control click on .project (which is also not in cvs, or another file not in 
cvs). Both file and folder are on the same level.
8. Right click - Team - only two options are "Commit" and "Synchronise with 
Rep"
9. Right click on foo alone, or on .project alone, and each one now has the 
options "Add to .cvsignore" and "Add to version control"

Summary of my problem: Why is "Add to .cvsingore" not available when the file 
AND folder are selected?
Updated title
Works for me in N20071111-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68845" />
    <CreationDate amount="2004-06-29 05:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] AST: AbstractTypeDeclaration should have resolveBinding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20040629

For convenience it would be good add 'resolveBinding' to AbstractTypeDeclaration
as all subclasses of AbstractTypeDeclaration have a 'resolveBinding', otherwise
the workaround 'AbstractTypeDeclaration.getName().resolveBinding()' has to be used.
Jim, could you please handle this one?
Added to AbstractTypeDeclaration:
public final ITypeBinding resolveBinding().

This is a non-breaking API addition since API methods with the same signature 
already existed on the subclasses.

Fixed in 1.5 stream. Build notes updated.</WithStack>
    <WithOutStack>20040629

For convenience it would be good add 'resolveBinding' to AbstractTypeDeclaration
as all subclasses of AbstractTypeDeclaration have a 'resolveBinding', otherwise
the workaround 'AbstractTypeDeclaration.getName().resolveBinding()' has to be used.
Jim, could you please handle this one?
Added to AbstractTypeDeclaration:
public final ITypeBinding resolveBinding().

This is a non-breaking API addition since API methods with the same signature 
already existed on the subclasses.

Fixed in 1.5 stream. Build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68846" />
    <CreationDate amount="2004-06-29 06:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[introduce parameter] should let choose parameter type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>The Introduce Parameter refactoring should not only allow to choose the name of 
the parameter, but also the type (from all allowed subtypes of the choosen 
expression).
IMO we can only offer all super types. Otherwise the calling side will not 
compile. 

Can be achieved by combining introduce paramter with generalize type.
Of course I *did* mean supertypes... :o</WithStack>
    <WithOutStack>The Introduce Parameter refactoring should not only allow to choose the name of 
the parameter, but also the type (from all allowed subtypes of the choosen 
expression).
IMO we can only offer all super types. Otherwise the calling side will not 
compile. 

Can be achieved by combining introduce paramter with generalize type.
Of course I *did* mean supertypes... :o</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68847" />
    <CreationDate amount="2004-06-29 06:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] DCR Signature: API to separate raw type and type parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040629

"QList&lt;QString;&gt;;" is a signature notation for a parameterized type. Signature
should offer API to get the raw type "QList;" and the type parameters { "QString;" }

Signature.getTypeParameters sounds useful for the second request, but it expects
the signature to start with '&lt;'
Agreed.

#getParameterizedTypeErasure()
#getParameterizedTypeArguments()

(maybe we should drop the leading 'Parameterized').

#getTypeParameters() is meant for declaration of type parameters, as opposed 
to your request for decoding arguments of a parameterized type.
Added getTypeErasure(...) and getTypeArguments(...).
Added tests SignatureTests#testGetTypeArguments1-5() and testGetTypeErasure1-2
().
Verified in I200409212000.</WithStack>
    <WithOutStack>20040629

"QList&lt;QString;&gt;;" is a signature notation for a parameterized type. Signature
should offer API to get the raw type "QList;" and the type parameters { "QString;" }

Signature.getTypeParameters sounds useful for the second request, but it expects
the signature to start with '&lt;'
Agreed.

#getParameterizedTypeErasure()
#getParameterizedTypeArguments()

(maybe we should drop the leading 'Parameterized').

#getTypeParameters() is meant for declaration of type parameters, as opposed 
to your request for decoding arguments of a parameterized type.
Added getTypeErasure(...) and getTypeArguments(...).
Added tests SignatureTests#testGetTypeArguments1-5() and testGetTypeErasure1-2
().
Verified in I200409212000.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68848" />
    <CreationDate amount="2004-06-29 06:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Pointers to class objects are incorrectly displayed in variable view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="104" end="210" />
        <code>class Class1{
	std::vector&lt;std::string&gt; p_v1;
	std::string p_s1;
public:

	Class1();
	virtual ~Class1();
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="254" end="282" />
        <code>Class1 * p_c = new Class1();</code>
      </source_code>
      <source_code type="assignment">
        <location start="283" end="303" />
        <code>Class1 &amp; r_c = *p_c;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Environment: Eclipse 3.0 RC3, CDT 2.0 M9, GDB 6.1.

Code example:

#include &lt;string&gt;
#include &lt;vector&gt;

class Class1{
	std::vector&lt;std::string&gt; p_v1;
	std::string p_s1;
public:

	Class1();
	virtual ~Class1();
};

In the main function I do the following

Class1 * p_c = new Class1();
Class1 &amp; r_c = *p_c;

Then I expand pointer in variable view and &amp;#8220;private&amp;#8221; keyword is displayed with 
0x0 value. For example

p_c = 0x40234567
   private = 0x0

The same for references.
The "getChildren" method of "Variable" evaluates the type 
of "public", "protected" or "private" child to the "pointer" type. 
Created attachment 13699
Potential fix
&gt; Potential fix

Actually Andrew, we want to retain the grouping, it seems to convey
information to the users.  So we're thinking of have some sort
of special variable, that will serve as a "separator/grouping" but
that debug ui should just ignore i.e. no actions etc ..

Moving this to 2.1, comments ?

Moving to future.
need more time to provide a solution.
Returning to the pool.
Wrong inbox.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
please check if it is still an issue in CDT 5.0.2
Assuming patch not applied in fix.</WithStack>
    <WithOutStack>Environment: Eclipse 3.0 RC3, CDT 2.0 M9, GDB 6.1.

Code example:

#include &lt;string&gt;
#include &lt;vector&gt;

class Class1{
	std::vector&lt;std::string&gt; p_v1;
	std::string p_s1;
public:

	Class1();
	virtual ~Class1();
};

In the main function I do the following

Class1 * p_c = new Class1();
Class1 &amp; r_c = *p_c;

Then I expand pointer in variable view and &amp;#8220;private&amp;#8221; keyword is displayed with 
0x0 value. For example

p_c = 0x40234567
   private = 0x0

The same for references.
The "getChildren" method of "Variable" evaluates the type 
of "public", "protected" or "private" child to the "pointer" type. 
Created attachment 13699
Potential fix
&gt; Potential fix

Actually Andrew, we want to retain the grouping, it seems to convey
information to the users.  So we're thinking of have some sort
of special variable, that will serve as a "separator/grouping" but
that debug ui should just ignore i.e. no actions etc ..

Moving this to 2.1, comments ?

Moving to future.
need more time to provide a solution.
Returning to the pool.
Wrong inbox.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
please check if it is still an issue in CDT 5.0.2
Assuming patch not applied in fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68849" />
    <CreationDate amount="2004-06-29 07:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Merge fails with obfuscated error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156021">
        <Exception>org.eclipse.team.internal.ccvs.core.connection.CVSServerException</Exception>
        <Reason>The server
reported an error while performing the "cvs update" command.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchNewDirectory(RemoteFolderTreeBuilder.java:687)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:439)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchNewDirectories(RemoteFolderTreeBuilder.java:260)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildTree(RemoteFolderTreeBuilder.java:193)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ccvs.core.resources.FileContentCachingService.buildRemoteTree(FileContentCachingService.java:45)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTree(CVSWorkspaceRoot.java:228)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.fetchVariant(CVSResourceVariantTree.java:100)</Frame>
          <Frame depth="16">org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:94)</Frame>
          <Frame depth="17">org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh(CVSResourceVariantTree.java:303)</Frame>
          <Frame depth="18">org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:63)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ccvs.core.CVSMergeSubscriber$MergeBaseTree.refresh(CVSMergeSubscriber.java:66)</Frame>
          <Frame depth="20">org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:155)</Frame>
          <Frame depth="21">org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:123)</Frame>
          <Frame depth="22">org.eclipse.team.internal.ui.synchronize.RefreshSubscriberJob.run(RefreshSubscriberJob.java:279)</Frame>
          <Frame depth="23">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On Eclipse 3.0 final, i'm trying to merge a branch on the HEAD branch, but the
merge command fails: it reports an error on the 'cvs update' command, but
doesn't give a clue about what this error can be. 
The logs also don't give more informations. 

!ENTRY org.eclipse.team.core 4 0 juin 29, 2004 12:46:14.854
!MESSAGE Problems reported while synchronizing CVS Merge
'Root_REFACTORING_ECHEANCES to REFACTORING_ECHEANCES'. 0 of 1 resources were
synchronized.
!SUBENTRY 1 org.eclipse.team.core 4 0 juin 29, 2004 12:46:14.854
!MESSAGE An error occurred synchronizing /insito-ejb: The server reported an
error while performing the "cvs update" command.
!STACK 1
org.eclipse.team.internal.ccvs.core.connection.CVSServerException: The server
reported an error while performing the "cvs update" command.
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchNewDirectory(RemoteFolderTreeBuilder.java:687)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:439)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:542)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchNewDirectories(RemoteFolderTreeBuilder.java:260)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildTree(RemoteFolderTreeBuilder.java:193)
	at
org.eclipse.team.internal.ccvs.core.resources.FileContentCachingService.buildRemoteTree(FileContentCachingService.java:45)
	at
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTree(CVSWorkspaceRoot.java:228)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.fetchVariant(CVSResourceVariantTree.java:100)
	at
org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:94)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh(CVSResourceVariantTree.java:303)
	at
org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:63)
	at
org.eclipse.team.internal.ccvs.core.CVSMergeSubscriber$MergeBaseTree.refresh(CVSMergeSubscriber.java:66)
	at
org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:155)
	at
org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:123)
	at
org.eclipse.team.internal.ui.synchronize.RefreshSubscriberJob.run(RefreshSubscriberJob.java:279)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
The CVS protocol is weak when it comes to error reporting. Try enabling the 
CVS Console view in the Team&gt;CVS&gt;CVS Console preference page. This will have 
more details about the failure. If you see something about a broken pipe, then 
this is caused by scripts being run on the server when an update takes place. 
The workaround is to perform a Team&gt;Update before running the merge. Let us 
know what you find so we can better categorize this bug report.
I think you can close this bug. The problem disapeared once there was no
activity on the cvs server, and if i remember well, i performed an update before
running merge.

Thanks for your help,
Ludovic</WithStack>
    <WithOutStack>On Eclipse 3.0 final, i'm trying to merge a branch on the HEAD branch, but the
merge command fails: it reports an error on the 'cvs update' command, but
doesn't give a clue about what this error can be. 
The logs also don't give more informations. 

!ENTRY org.eclipse.team.core 4 0 juin 29, 2004 12:46:14.854
!MESSAGE Problems reported while synchronizing CVS Merge
'Root_REFACTORING_ECHEANCES to REFACTORING_ECHEANCES'. 0 of 1 resources were
synchronized.
!SUBENTRY 1 org.eclipse.team.core 4 0 juin 29, 2004 12:46:14.854
!MESSAGE An error occurred synchronizing /insito-ejb: The server reported an
error while performing the "cvs update" command.
!STACK 1

The CVS protocol is weak when it comes to error reporting. Try enabling the 
CVS Console view in the Team&gt;CVS&gt;CVS Console preference page. This will have 
more details about the failure. If you see something about a broken pipe, then 
this is caused by scripts being run on the server when an update takes place. 
The workaround is to perform a Team&gt;Update before running the merge. Let us 
know what you find so we can better categorize this bug report.
I think you can close this bug. The problem disapeared once there was no
activity on the cvs server, and if i remember well, i performed an update before
running merge.

Thanks for your help,
Ludovic</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68850" />
    <CreationDate amount="2004-06-29 07:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[content assist] Completion for array initialization</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="113" end="161" />
        <code>void foo() {
    Integer I = new ${cursor}
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="306" end="356" />
        <code>void foo() {
    Integer I[] = new ${cursor}
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Currently Eclipse can assist in variable initialization with new class instance.
For example, in following code:
  void foo() {
    Integer I = new ${cursor}
  }
when I press Ctrl+Space, Eclipse shows popup with "Integer" and "Test" ("Test"
is name of public class).
  Now, if we have following situation:
  void foo() {
    Integer I[] = new ${cursor}
  }
and Eclipse shows only "Test". :-(
  Same sitiation for simple types arrays.

  Would be good to show also "Integer []", i.e. "TypeName []" in general case.
I am adding my vote to this bug. I find the lack of completion for array initialization very annoying.
+1. Isn't this JDT/Core?
Moving to JDT Core for comment. A new proposal type would be needed.</WithStack>
    <WithOutStack>Currently Eclipse can assist in variable initialization with new class instance.
For example, in following code:
  void foo() {
    Integer I = new ${cursor}
  }
when I press Ctrl+Space, Eclipse shows popup with "Integer" and "Test" ("Test"
is name of public class).
  Now, if we have following situation:
  void foo() {
    Integer I[] = new ${cursor}
  }
and Eclipse shows only "Test". :-(
  Same sitiation for simple types arrays.

  Would be good to show also "Integer []", i.e. "TypeName []" in general case.
I am adding my vote to this bug. I find the lack of completion for array initialization very annoying.
+1. Isn't this JDT/Core?
Moving to JDT Core for comment. A new proposal type would be needed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68851" />
    <CreationDate amount="2004-06-29 07:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Properties view: errors in Button/Label aligment property</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Create a SWT visual class
Add a Button + a Label
Show advanced properties in the Properties sheet

The "Alignment" property displays an error:
IWAV0104E ERROR - Value not one of the enumerated values

The combo-box values are:
LEFT, CENTRE, RIGHT, UP, !alignment down!

This last looks like a missing String in properties file
The !alignment down! has been fixed - minor typo in the .properties.

I think the problem with the default Alignment is by default it's set to
SWT.NONE, and that value isn't an option on the combo.  The problem is there's
no concept of &lt;not set&gt; in such an enumeration list.  Have to think about this one.
Fixed... please verify
1.0M2 is out, so these are now closed in M2.</WithStack>
    <WithOutStack>Create a SWT visual class
Add a Button + a Label
Show advanced properties in the Properties sheet

The "Alignment" property displays an error:
IWAV0104E ERROR - Value not one of the enumerated values

The combo-box values are:
LEFT, CENTRE, RIGHT, UP, !alignment down!

This last looks like a missing String in properties file
The !alignment down! has been fixed - minor typo in the .properties.

I think the problem with the default Alignment is by default it's set to
SWT.NONE, and that value isn't an option on the combo.  The problem is there's
no concept of &lt;not set&gt; in such an enumeration list.  Have to think about this one.
Fixed... please verify
1.0M2 is out, so these are now closed in M2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68852" />
    <CreationDate amount="2004-06-29 08:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[SSH2] Bug in Socks5 authentication</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="assignment">
        <location start="67" end="141" />
        <code>String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);</code>
      </source_code>
      <source_code type="assignment">
        <location start="142" end="216" />
        <code>String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);</code>
      </source_code>
      <source_code type="assignment">
        <location start="244" end="269" />
        <code>String _user = null;</code>
      </source_code>
      <source_code type="assignment">
        <location start="270" end="295" />
        <code>String _pass = null;</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="418" end="588" />
        <code>if (map != null) {
						_user = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_USER);
						_pass = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_PASS);
					}</code>
      </source_code>
      <source_code type="assignment">
        <location start="2264" end="2334" />
        <code>String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2335" end="2405" />
        <code>String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Following code in org.eclipse.team.internal.ccvs.ssh2.JSchSession:
					String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);
					String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);

should be replaced with:

					String _user = null;
					String _pass = null;
					Map map = Platform.getAuthorizationInfo(CVSSSH2PreferencePage.FAKE_URL,
"proxy", CVSSSH2PreferencePage.AUTH_SCHEME);
					if (map != null) {
						_user = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_USER);
						_pass = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_PASS);
					}
  Preferences page does not saves it in preperences store, it uses
addAuthorizationInfo instead.
I'm not sure you want to save the password into the keyring file? Are you saying
that the password isn't savecd between sessions?
I just see that preference page already saves user/password in keyring.
But code in JSchSession attempts to read them from preference store, and of
course reads empty string's, so authentication for Socks5 does not work!

And yes, I've missed this, but I remember that I lost passwords after I close
Eclipse and start again, but now this does not happen. As I can see, 

Also notice that there are following code in CVSSSH2PreferencePage.performOk,
i.e. in any case after "Ok" user and password in preference store will be
cleared, and then saved in keyring. So, JSchSession also should read them from
keyring.

      store.setValue(KEY_PROXY_USER, ""); //$NON-NLS-1$
      store.setValue(KEY_PROXY_PASS, ""); //$NON-NLS-1$

Ok, I'll ensure that the passwords are saved correctly. If we saved to the
keyring we need to add the 'save' warning messages too.
I have released a fix, could you please verify? It has been released to both the
3.0.1 and 3.1 builds. For the moment I've decided to persist the authentication
information into the keyring file and have opened bug 70930 to track the fact
that the user should be able to decide. at least this should get proxy
authentication working.
No, it does not work.
Yes, now it saves password in keyring, but it does not uses keyring, when
attempts to connect! I still see this code in JSchSession:
	boolean useAuth =
store.getString(CVSSSH2PreferencePage.KEY_PROXY_AUTH).equals("true"); //$NON-NLS-1$
	String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);
	String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);

  It still reads values for preference store!
  Replace this code with code that is specified in my initial request. I already
did this for my 3.0 release and can use Socks5 proxy with authorization, so I am
sure that this code works.
I forgot to release my changes into the 3.0.1 build. That is what happens when
you spend too much time on vacation :) That is why it doesn't work yet. 

Try after the next 3.0.1 build and re-open if it still doesn't work.
Could you please verify that the fix works for you?
Yes, thank you.
I just installed recent integration build and ssh2 with socks5 works great.
verified by bug creator. Thanks.</WithStack>
    <WithOutStack>Following code in org.eclipse.team.internal.ccvs.ssh2.JSchSession:
					String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);
					String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);

should be replaced with:

					String _user = null;
					String _pass = null;
					Map map = Platform.getAuthorizationInfo(CVSSSH2PreferencePage.FAKE_URL,
"proxy", CVSSSH2PreferencePage.AUTH_SCHEME);
					if (map != null) {
						_user = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_USER);
						_pass = (String) map.get(CVSSSH2PreferencePage.KEY_PROXY_PASS);
					}
  Preferences page does not saves it in preperences store, it uses
addAuthorizationInfo instead.
I'm not sure you want to save the password into the keyring file? Are you saying
that the password isn't savecd between sessions?
I just see that preference page already saves user/password in keyring.
But code in JSchSession attempts to read them from preference store, and of
course reads empty string's, so authentication for Socks5 does not work!

And yes, I've missed this, but I remember that I lost passwords after I close
Eclipse and start again, but now this does not happen. As I can see, 

Also notice that there are following code in CVSSSH2PreferencePage.performOk,
i.e. in any case after "Ok" user and password in preference store will be
cleared, and then saved in keyring. So, JSchSession also should read them from
keyring.

      store.setValue(KEY_PROXY_USER, ""); //$NON-NLS-1$
      store.setValue(KEY_PROXY_PASS, ""); //$NON-NLS-1$

Ok, I'll ensure that the passwords are saved correctly. If we saved to the
keyring we need to add the 'save' warning messages too.
I have released a fix, could you please verify? It has been released to both the
3.0.1 and 3.1 builds. For the moment I've decided to persist the authentication
information into the keyring file and have opened bug 70930 to track the fact
that the user should be able to decide. at least this should get proxy
authentication working.
No, it does not work.
Yes, now it saves password in keyring, but it does not uses keyring, when
attempts to connect! I still see this code in JSchSession:
	boolean useAuth =
store.getString(CVSSSH2PreferencePage.KEY_PROXY_AUTH).equals("true"); //$NON-NLS-1$
	String _user = store.getString(CVSSSH2PreferencePage.KEY_PROXY_USER);
	String _pass = store.getString(CVSSSH2PreferencePage.KEY_PROXY_PASS);

  It still reads values for preference store!
  Replace this code with code that is specified in my initial request. I already
did this for my 3.0 release and can use Socks5 proxy with authorization, so I am
sure that this code works.
I forgot to release my changes into the 3.0.1 build. That is what happens when
you spend too much time on vacation :) That is why it doesn't work yet. 

Try after the next 3.0.1 build and re-open if it still doesn't work.
Could you please verify that the fix works for you?
Yes, thank you.
I just installed recent integration build and ssh2 with socks5 works great.
verified by bug creator. Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68853" />
    <CreationDate amount="2004-06-29 08:50:00 -0400" />
    <DupId amount="91821" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Restoring default field name makes in uneditable in Properties sheet</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Create a visual class (AWT, Swing, SWT - it doesn't matter)
Select an item in the visual editor
In the Properties sheet, select the "field name" property
Right-click and choose "Restore Default Value"
The field is cleared + is subsequently uneditable

You can work round this by closing + opening the editor
The variable name in the generated code is unaffected
We fixed this with this bug.

*** This bug has been marked as a duplicate of 91821 ***
closing</WithStack>
    <WithOutStack>Create a visual class (AWT, Swing, SWT - it doesn't matter)
Select an item in the visual editor
In the Properties sheet, select the "field name" property
Right-click and choose "Restore Default Value"
The field is cleared + is subsequently uneditable

You can work round this by closing + opening the editor
The variable name in the generated code is unaffected
We fixed this with this bug.

*** This bug has been marked as a duplicate of 91821 ***
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68854" />
    <CreationDate amount="2004-06-29 08:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Variable view fails to display variable toString() value in the detail pane</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>While in debug mode, the detail pane of the variable view automatically invokes 
the toString() method on the selected object in the variable pane.
If the currently running process was launched using a scrapbook page, the 
detail pane just keep writing "Cannot perform nested evaluations".
It appears that popup menus are also not exactly the same in the Editor area as 
for a standard java process (launched using a main() method)
This is a known limitation. If the target VM does not support nested 
evaluations (i.e. its already doing a scrapbook evaluation), then we cannot 
perform the toString().</WithStack>
    <WithOutStack>While in debug mode, the detail pane of the variable view automatically invokes 
the toString() method on the selected object in the variable pane.
If the currently running process was launched using a scrapbook page, the 
detail pane just keep writing "Cannot perform nested evaluations".
It appears that popup menus are also not exactly the same in the Editor area as 
for a standard java process (launched using a main() method)
This is a known limitation. If the target VM does not support nested 
evaluations (i.e. its already doing a scrapbook evaluation), then we cannot 
perform the toString().</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68855" />
    <CreationDate amount="2004-06-29 09:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.swt.tools.internal.SwtJniGen is not working properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Jni generator uses org.eclipse.swt.internal.Platform claas to determine 
platform. This class is not part of SWT package for amd64 it generates it still 
thinks that platform is win32. This is happening due to swttools.jar is built 
using win32 platform and final PLATFORM string is inline into swttools.jar. So I 
had to rebuild swttools.jar and make some dances to feed proper Platform.java.

I suggest passing platform attribute to ant task org.eclipse.swt.tools.internal.
SwtJniGen so swttool.jar has no dependency on org.eclipse.swt.internal.Platform 
class
Chrix and I to investigate this when he is back from vacation.
fixed v&gt;20040720
backported to 3.0.1
*** Bug 73538 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Jni generator uses org.eclipse.swt.internal.Platform claas to determine 
platform. This class is not part of SWT package for amd64 it generates it still 
thinks that platform is win32. This is happening due to swttools.jar is built 
using win32 platform and final PLATFORM string is inline into swttools.jar. So I 
had to rebuild swttools.jar and make some dances to feed proper Platform.java.

I suggest passing platform attribute to ant task org.eclipse.swt.tools.internal.
SwtJniGen so swttool.jar has no dependency on org.eclipse.swt.internal.Platform 
class
Chrix and I to investigate this when he is back from vacation.
fixed v&gt;20040720
backported to 3.0.1
*** Bug 73538 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68856" />
    <CreationDate amount="2004-06-29 09:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error when cancelling a Search [search]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341156021">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:394)</Frame>
          <Frame depth="2">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:293)</Frame>
          <Frame depth="3">org.eclipse.jdt.ui.actions.FindReferencesAction.run(FindReferencesAction.java:84)</Frame>
          <Frame depth="4">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:239)</Frame>
          <Frame depth="5">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:216)</Frame>
          <Frame depth="6">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="7">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:509)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:461)</Frame>
          <Frame depth="10">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:408)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="18">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="24">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="25">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.basicRun(Main.java:279)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.run(Main.java:742)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.main(Main.java:581)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341156021">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.search.SearchEngine.createSearchPattern(SearchEngine.java:381)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute(JavaSearchOperation.java:99)</Frame>
          <Frame depth="2">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)</Frame>
          <Frame depth="4">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="5">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Highlight a letter anywhere on a java page (c for example).</Line>
          <Line>2. Search for references: Search &gt; References &gt; Workspace or equivalent.</Line>
          <Line>3. A list of classes named c appears. Hit cancel.</Line>
          <Line>4. An error message appears and the following stack trace is written to the log</Line>
          <Line>file:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Highlight a letter anywhere on a java page (c for example).
2. Search for references: Search &gt; References &gt; Workspace or equivalent.
3. A list of classes named c appears. Hit cancel.
4. An error message appears and the following stack trace is written to the log 
file:

!ENTRY org.eclipse.jdt.ui 4 10001 Jun 29, 2004 08:52:22.359
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:394)
	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:293)
	at org.eclipse.jdt.ui.actions.FindReferencesAction.run
(FindReferencesAction.java:84)
	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:239)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:216)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:188)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:509)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:461)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:408)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2311)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1992)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.core.search.SearchEngine.createSearchPattern
(SearchEngine.java:381)
	at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute
(JavaSearchOperation.java:99)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1555)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:105)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
Thomas, can you please comment.
I can't reproduce this with the given scenario. I used ctrl-shift-g as the
search command.
Yann, which build are you using. 

Thomas, org.eclipse.jdt.internal.ui.search.JavaSearchOperation is the old Java 
search. Right ?
Yes, that's old search.
Sorry,
I was using M6. I installed 3.0 release today and I don't get 
this bug anymore.
Closing as works for me then.</WithStack>
    <WithOutStack>1. Highlight a letter anywhere on a java page (c for example).
2. Search for references: Search &gt; References &gt; Workspace or equivalent.
3. A list of classes named c appears. Hit cancel.
4. An error message appears and the following stack trace is written to the log 
file:

!ENTRY org.eclipse.jdt.ui 4 10001 Jun 29, 2004 08:52:22.359
!MESSAGE Internal Error
!STACK 0


Thomas, can you please comment.
I can't reproduce this with the given scenario. I used ctrl-shift-g as the
search command.
Yann, which build are you using. 

Thomas, org.eclipse.jdt.internal.ui.search.JavaSearchOperation is the old Java 
search. Right ?
Yes, that's old search.
Sorry,
I was using M6. I installed 3.0 release today and I don't get 
this bug anymore.
Closing as works for me then.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68857" />
    <CreationDate amount="2004-06-29 09:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Agent Controller" />
    <component amount="Platform.Collection" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Next error message when Enabling Hiades 3.0</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hyades Core (3.0.0) requires pluggin "org.apache.xerces"
Hyades Examples (3.0.0) requires pluggin "org.eclipse.hiades.sd.ui"
Hyades Component Test (3.0.0) requires pluggin "org.apache.xerces"
Hyades Component Test Examples (3.0.0) requires pluggin "org.apache.xerces"
OK, I'm not sure what the point of this defect is.  Can you provide some 
context?  Is this from the .log file?  It looks like the samples have been 
installed but not the core.  
Qiyan,

Can you confirm our packaging is good and this is not showing up in the log 
file?  Thanks.
The packaging appears to be correct, although the org.apache.xerces 'requires'
should really be removed from the features.  The features require restructuring,
and this problem will be resolved during that process.

This is a duplicate of 67850.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality
by resolving relevant defects and increasing test coverage through test
creation, automation, Build Verification Tests (BVTs), and expanded run-time
execution. Since this defect is more than 2 years old, it may be no longer
relevant. As part of the TPTP Bugzilla housecleaning process (see
http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is
resolved as WONTFIX. If this defect is still relevant and reproducible in the
latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please
re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Hyades Core (3.0.0) requires pluggin "org.apache.xerces"
Hyades Examples (3.0.0) requires pluggin "org.eclipse.hiades.sd.ui"
Hyades Component Test (3.0.0) requires pluggin "org.apache.xerces"
Hyades Component Test Examples (3.0.0) requires pluggin "org.apache.xerces"
OK, I'm not sure what the point of this defect is.  Can you provide some 
context?  Is this from the .log file?  It looks like the samples have been 
installed but not the core.  
Qiyan,

Can you confirm our packaging is good and this is not showing up in the log 
file?  Thanks.
The packaging appears to be correct, although the org.apache.xerces 'requires'
should really be removed from the features.  The features require restructuring,
and this problem will be resolved during that process.

This is a duplicate of 67850.
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality
by resolving relevant defects and increasing test coverage through test
creation, automation, Build Verification Tests (BVTs), and expanded run-time
execution. Since this defect is more than 2 years old, it may be no longer
relevant. As part of the TPTP Bugzilla housecleaning process (see
http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is
resolved as WONTFIX. If this defect is still relevant and reproducible in the
latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please
re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68858" />
    <CreationDate amount="2004-06-29 09:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>eclipse doesn´t run after installing VE S20040628</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156031">
        <Exception>java.lang.RuntimeException</Exception>
        <Reason>No application id has been found.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:313)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="3">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="4">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="5">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="6">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="9">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Hi,

after installing the new VE version, eclipse won´t start, all the required 
libraries are installed and eclipse runs again after deleting all the VE 
folder. I got the following error:

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE

!ENTRY org.eclipse.osgi Jun 29, 2004 15:27:23.666
!MESSAGE Application error
!STACK 1
java.lang.RuntimeException: No application id has been found.
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:313)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Regards
Klaus-Peter Schulze
I don't see how this could be a VE problem. The error shown says it couldn't
even find the eclipse default application. VE has absolutely nothing to do with
this.

You said you deleted the VE folders and it started working? This just doesn't
make sense. 

Are you able to switch to an English local instead of a German locale? I'd like
to see if that has anything to do with it. Thanks.
I just saw this on the eclipse.platform newsgroup:

news://news.eclipse.org:119/cbsfho$8kb$1@eclipse.org

Maybe that is your problem. It sounds the same.
Please reopen and provide more information if still a problem on the latest VE
build.
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithStack>
    <WithOutStack>Hi,

after installing the new VE version, eclipse won´t start, all the required 
libraries are installed and eclipse runs again after deleting all the VE 
folder. I got the following error:

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE

!ENTRY org.eclipse.osgi Jun 29, 2004 15:27:23.666
!MESSAGE Application error
!STACK 1


Regards
Klaus-Peter Schulze
I don't see how this could be a VE problem. The error shown says it couldn't
even find the eclipse default application. VE has absolutely nothing to do with
this.

You said you deleted the VE folders and it started working? This just doesn't
make sense. 

Are you able to switch to an English local instead of a German locale? I'd like
to see if that has anything to do with it. Thanks.
I just saw this on the eclipse.platform newsgroup:

news://news.eclipse.org:119/cbsfho$8kb$1@eclipse.org

Maybe that is your problem. It sounds the same.
Please reopen and provide more information if still a problem on the latest VE
build.
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68859" />
    <CreationDate amount="2004-06-29 09:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No Subpackages possible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It is not possible to create a subpackage of a earlier created package under
linux using your gtk distribution, neither by creating one inside the other nor
by moving  one, which is in the same level, inside the other!
On windows you can do that and/or move a package in another to get a nested
hierarchy.
As this is kind of important it would be great ifsomeone could fix that!
Thanks a lot!
Frederic - pls investigate
Yesterday i wrote that this would be possible using your windows version. That
is not true, you can´t do that there also. Sorry for the wrong information!
Perhaps I've wrongly understood your problem but it is possible to create a
subpackage of an existing package.

Just select the existing package (let say "org.eclipse"), then click on "New
Java Package" button and add name at the end of this existing package (let say
"org.eclipse.jdt.core"). Click on OK button and your subpackage is created (in
my sample, I've created two sub-levels in one shot).

With my example, you should have a new empty package "org.eclipse.jdt.core"
under your project (perhaps not shown in package explorer if you filter empty
packages). Verify in Resource perspective that you have correct hierarchy of
folders created in your project:
Project
  + org
    + eclipse
      + jdt
        + core

Reopen if I missed something.</WithStack>
    <WithOutStack>It is not possible to create a subpackage of a earlier created package under
linux using your gtk distribution, neither by creating one inside the other nor
by moving  one, which is in the same level, inside the other!
On windows you can do that and/or move a package in another to get a nested
hierarchy.
As this is kind of important it would be great ifsomeone could fix that!
Thanks a lot!
Frederic - pls investigate
Yesterday i wrote that this would be possible using your windows version. That
is not true, you can´t do that there also. Sorry for the wrong information!
Perhaps I've wrongly understood your problem but it is possible to create a
subpackage of an existing package.

Just select the existing package (let say "org.eclipse"), then click on "New
Java Package" button and add name at the end of this existing package (let say
"org.eclipse.jdt.core"). Click on OK button and your subpackage is created (in
my sample, I've created two sub-levels in one shot).

With my example, you should have a new empty package "org.eclipse.jdt.core"
under your project (perhaps not shown in package explorer if you filter empty
packages). Verify in Resource perspective that you have correct hierarchy of
folders created in your project:
Project
  + org
    + eclipse
      + jdt
        + core

Reopen if I missed something.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68860" />
    <CreationDate amount="2004-06-29 09:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Swapping text for image in Button can stop image from displaying</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="843" end="2026" />
        <code>private ImageData convertDepth(ImageData mask) {
        //if (true) return mask;
        if (mask.depth == 1) return mask;
        PaletteData palette = new PaletteData(new RGB[] {new RGB(0, 0, 0), new
RGB(255,255,255)});
        ImageData tempMask = new ImageData(mask.width, mask.height, 1, palette);
        /* Find index of black in mask palette */
        int blackIndex = 0;
        RGB[] rgbs = mask.getRGBs();
        if (rgbs != null) {
            while (blackIndex &lt; rgbs.length) {
                if (rgbs[blackIndex].equals(palette.colors[0])) break;
                blackIndex++;
            }
            if (blackIndex == rgbs.length) SWT.error(SWT.ERROR_INVALID_ARGUMENT);
        }
        int[] pixels = new int[mask.width];
        for (int y = 0; y &lt; mask.height; y++) {
            mask.getPixels(0, y, mask.width, pixels, 0);
            for (int i = 0; i &lt; pixels.length; i++) {
                if (pixels[i] == blackIndex) {
                    pixels[i] = 0;
                } else {
                    pixels[i] = 1;
                }
            }
            tempMask.setPixels(0, y, mask.width, pixels, 0);
        }
        return tempMask;
    }</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2027" end="2293" />
        <code>/**
     * Method add.  Add a new perspective to the perspective changer.
     * @param id The perspective's String ID
     * @param name The perspective name, for the button and/or tool tip
     * @param icon The perspective's icon or null if none.
     */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2294" end="7562" />
        <code>public void add(String id, String caption, Image icon) {
        Button button = new Button(this, SWT.TOGGLE);
        button.setData(id);
        if (icon != null) {
            /*
             * FEATURE IN SWT:  Button can't display both an image and a 
             * text caption at the same time.  The workaround is to make 
             * your own image containing the icon and the caption and use
             * that instead.
             */
            
            // We still have to set the text in order for accelerator keys to
            // work correctly.  The text just won't be displayed once the 
            // image is set.
            button.setText(caption);
    
            // Figure out how big everything has to be
            Rectangle iconSize = icon.getBounds();
            
            GC gc = new GC(button);
            Point captionSize = gc.textExtent(caption, SWT.DRAW_MNEMONIC);
    
            Rectangle iconTotalSize = icon.getBounds();
            iconTotalSize.width += 4;
            iconTotalSize.width += captionSize.x;
            gc.dispose();
            
            // Draw the icon
            Image image = new Image(Display.getDefault(), iconTotalSize.width,
iconTotalSize.height);
            gc = new GC(image);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
            gc.setForeground(button.getForeground());
            gc.fillRectangle(iconTotalSize);
            if (iconSize.height &gt; captionSize.y) {
                gc.drawImage(icon, 0, 0);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.drawImage(icon, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
            
            // Draw the transparancy mask
            ImageData iconTransparancy = icon.getImageData().getTransparencyMask();
            Image iconTransparancyMask = new Image(Display.getDefault(),
iconTransparancy);
            PaletteData palette = new PaletteData (
                new RGB [] {
                    new RGB (0, 0, 0),          // transparant pixels are white
                    new RGB (0xFF, 0xFF, 0xFF), // opaque pixels are black
                });
            ImageData maskData = new ImageData (iconTotalSize.width,
iconTotalSize.height, 1, palette);
            Image mask = new Image (Display.getDefault(), maskData);
            gc = new GC (mask);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_BLACK));
            gc.fillRectangle(0, 0, iconTotalSize.width, iconTotalSize.height);
            if (iconSize.height &gt; captionSize.y) {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0, 0);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
    
            // Get the data for the image and mask so we can compose them into
            // the final icon...
            maskData = mask.getImageData ();
            mask.dispose();
    
            ImageData imageData = image.getImageData();
            image.dispose();

            /*
             * Feature in SWT: On Linux, the depth winds up getting set to
something other
             * than 1 and there's an assert in the code to make sure it's 1. 
The workaround
             * is to manually convert the bit-depth to 1 each time.  See bug #64266.
             */
            // Make the final image (including transparancy)
            Image iconPlusText = new Image(Display.getDefault(), imageData,
convertDepth(maskData));
            button.addDisposeListener(new DisposeListener() {
                public void widgetDisposed(DisposeEvent e) {
                    Button b = (Button) e.widget;
                    Image image = b.getImage();
                    if (image != null)
                        image.dispose();
                }
            });
            
            button.setImage(iconPlusText);
        } else {
            button.setText(caption);
        }
        button.addSelectionListener(selectionListener);
        perspectives.put(id, button);
        getParent().layout(true);
        if (current == null) {
            current = id;
            button.setSelection(true);
        }
    }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8683" end="8704" />
        <code>button.setText("");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Get SWT to fix their bug, either by having a new emulated Button widget that</Line>
          <Line>uses the code I attached below or by really fixing it across platforms.</Line>
          <Line />
          <Line>2) Include our own CButton widget with VE if the SWT team won't so we can tell</Line>
          <Line>people to use our widget rather than SWT's when they complain about VE's behavior.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Create a visual class with a SWT Button
Set an image on it (it renders OK)
Set text on the button
(the image isn't rendered; the text is - this is consistent with runtime)
Use the Properties sheet to restore default text (to never set)
The image isn't rendered

This is fairly minor; reopening the editor displays the image again
Please check if this is still a problem in the latest code base. Rich fixed some
problems with VM refreshes in which the 'text' setting for many controls didn't
show until you did a reload. I believe that same fix will take care of this
problem as well. 
Please close if no longer a problem. Thx...
This is a SWT bug.  Let me see if I can find the exact bug number and I'll
resolve it as a dup.

As a workaround, my own applications use the following code (code from the
RCPLite framework at swtworkbench.com):


    private ImageData convertDepth(ImageData mask) {
        //if (true) return mask;
        if (mask.depth == 1) return mask;
        PaletteData palette = new PaletteData(new RGB[] {new RGB(0, 0, 0), new
RGB(255,255,255)});
        ImageData tempMask = new ImageData(mask.width, mask.height, 1, palette);
        /* Find index of black in mask palette */
        int blackIndex = 0;
        RGB[] rgbs = mask.getRGBs();
        if (rgbs != null) {
            while (blackIndex &lt; rgbs.length) {
                if (rgbs[blackIndex].equals(palette.colors[0])) break;
                blackIndex++;
            }
            if (blackIndex == rgbs.length) SWT.error(SWT.ERROR_INVALID_ARGUMENT);
        }
        int[] pixels = new int[mask.width];
        for (int y = 0; y &lt; mask.height; y++) {
            mask.getPixels(0, y, mask.width, pixels, 0);
            for (int i = 0; i &lt; pixels.length; i++) {
                if (pixels[i] == blackIndex) {
                    pixels[i] = 0;
                } else {
                    pixels[i] = 1;
                }
            }
            tempMask.setPixels(0, y, mask.width, pixels, 0);
        }
        return tempMask;
    }
    
    /**
     * Method add.  Add a new perspective to the perspective changer.
     * @param id The perspective's String ID
     * @param name The perspective name, for the button and/or tool tip
     * @param icon The perspective's icon or null if none.
     */
    public void add(String id, String caption, Image icon) {
        Button button = new Button(this, SWT.TOGGLE);
        button.setData(id);
        if (icon != null) {
            /*
             * FEATURE IN SWT:  Button can't display both an image and a 
             * text caption at the same time.  The workaround is to make 
             * your own image containing the icon and the caption and use
             * that instead.
             */
            
            // We still have to set the text in order for accelerator keys to
            // work correctly.  The text just won't be displayed once the 
            // image is set.
            button.setText(caption);
    
            // Figure out how big everything has to be
            Rectangle iconSize = icon.getBounds();
            
            GC gc = new GC(button);
            Point captionSize = gc.textExtent(caption, SWT.DRAW_MNEMONIC);
    
            Rectangle iconTotalSize = icon.getBounds();
            iconTotalSize.width += 4;
            iconTotalSize.width += captionSize.x;
            gc.dispose();
            
            // Draw the icon
            Image image = new Image(Display.getDefault(), iconTotalSize.width,
iconTotalSize.height);
            gc = new GC(image);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
            gc.setForeground(button.getForeground());
            gc.fillRectangle(iconTotalSize);
            if (iconSize.height &gt; captionSize.y) {
                gc.drawImage(icon, 0, 0);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.drawImage(icon, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
            
            // Draw the transparancy mask
            ImageData iconTransparancy = icon.getImageData().getTransparencyMask();
            Image iconTransparancyMask = new Image(Display.getDefault(),
iconTransparancy);
            PaletteData palette = new PaletteData (
                new RGB [] {
                    new RGB (0, 0, 0),          // transparant pixels are white
                    new RGB (0xFF, 0xFF, 0xFF), // opaque pixels are black
                });
            ImageData maskData = new ImageData (iconTotalSize.width,
iconTotalSize.height, 1, palette);
            Image mask = new Image (Display.getDefault(), maskData);
            gc = new GC (mask);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_BLACK));
            gc.fillRectangle(0, 0, iconTotalSize.width, iconTotalSize.height);
            if (iconSize.height &gt; captionSize.y) {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0, 0);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
    
            // Get the data for the image and mask so we can compose them into
            // the final icon...
            maskData = mask.getImageData ();
            mask.dispose();
    
            ImageData imageData = image.getImageData();
            image.dispose();

            /*
             * Feature in SWT: On Linux, the depth winds up getting set to
something other
             * than 1 and there's an assert in the code to make sure it's 1. 
The workaround
             * is to manually convert the bit-depth to 1 each time.  See bug #64266.
             */
            // Make the final image (including transparancy)
            Image iconPlusText = new Image(Display.getDefault(), imageData,
convertDepth(maskData));
            button.addDisposeListener(new DisposeListener() {
                public void widgetDisposed(DisposeEvent e) {
                    Button b = (Button) e.widget;
                    Image image = b.getImage();
                    if (image != null)
                        image.dispose();
                }
            });
            
            button.setImage(iconPlusText);
        } else {
            button.setText(caption);
        }
        button.addSelectionListener(selectionListener);
        perspectives.put(id, button);
        getParent().layout(true);
        if (current == null) {
            current = id;
            button.setSelection(true);
        }
    }

OK, I can't resolve it as a dup 'cause I don't own it.  But the bug I believe
this duplicates is bug 33967.
OK; maybe I don't understand this bug.

SWT's behavior is to display the last of (image, text) that was set.  You'll
only get one or the other from SWT.  We probably be deterministic about what we
do--set the Image first or set the Text first, so VE's behavior is always the same.

The trouble is that SWT's behavior does not follow the principle of least
suprise here, and I expect we'll continue to get bug reports about this.  So it
seems to me that we really have two options:

1) Get SWT to fix their bug, either by having a new emulated Button widget that
uses the code I attached below or by really fixing it across platforms.

2) Include our own CButton widget with VE if the SWT team won't so we can tell
people to use our widget rather than SWT's when they complain about VE's behavior.


I don't think this is a dupe of bug 33967 exactly, but fixing 33967 would 
invalidate this one.

Its tricky because we can't set the button text to null and to reset the image 
we need to do something like this:
  button.setText("");
  button.setImage(button.getImage()); //assuming we have an image</WithStack>
    <WithOutStack>Create a visual class with a SWT Button
Set an image on it (it renders OK)
Set text on the button
(the image isn't rendered; the text is - this is consistent with runtime)
Use the Properties sheet to restore default text (to never set)
The image isn't rendered

This is fairly minor; reopening the editor displays the image again
Please check if this is still a problem in the latest code base. Rich fixed some
problems with VM refreshes in which the 'text' setting for many controls didn't
show until you did a reload. I believe that same fix will take care of this
problem as well. 
Please close if no longer a problem. Thx...
This is a SWT bug.  Let me see if I can find the exact bug number and I'll
resolve it as a dup.

As a workaround, my own applications use the following code (code from the
RCPLite framework at swtworkbench.com):


    private ImageData convertDepth(ImageData mask) {
        //if (true) return mask;
        if (mask.depth == 1) return mask;
        PaletteData palette = new PaletteData(new RGB[] {new RGB(0, 0, 0), new
RGB(255,255,255)});
        ImageData tempMask = new ImageData(mask.width, mask.height, 1, palette);
        /* Find index of black in mask palette */
        int blackIndex = 0;
        RGB[] rgbs = mask.getRGBs();
        if (rgbs != null) {
            while (blackIndex &lt; rgbs.length) {
                if (rgbs[blackIndex].equals(palette.colors[0])) break;
                blackIndex++;
            }
            if (blackIndex == rgbs.length) SWT.error(SWT.ERROR_INVALID_ARGUMENT);
        }
        int[] pixels = new int[mask.width];
        for (int y = 0; y &lt; mask.height; y++) {
            mask.getPixels(0, y, mask.width, pixels, 0);
            for (int i = 0; i &lt; pixels.length; i++) {
                if (pixels[i] == blackIndex) {
                    pixels[i] = 0;
                } else {
                    pixels[i] = 1;
                }
            }
            tempMask.setPixels(0, y, mask.width, pixels, 0);
        }
        return tempMask;
    }
    
    /**
     * Method add.  Add a new perspective to the perspective changer.
     * @param id The perspective's String ID
     * @param name The perspective name, for the button and/or tool tip
     * @param icon The perspective's icon or null if none.
     */
    public void add(String id, String caption, Image icon) {
        Button button = new Button(this, SWT.TOGGLE);
        button.setData(id);
        if (icon != null) {
            /*
             * FEATURE IN SWT:  Button can't display both an image and a 
             * text caption at the same time.  The workaround is to make 
             * your own image containing the icon and the caption and use
             * that instead.
             */
            
            // We still have to set the text in order for accelerator keys to
            // work correctly.  The text just won't be displayed once the 
            // image is set.
            button.setText(caption);
    
            // Figure out how big everything has to be
            Rectangle iconSize = icon.getBounds();
            
            GC gc = new GC(button);
            Point captionSize = gc.textExtent(caption, SWT.DRAW_MNEMONIC);
    
            Rectangle iconTotalSize = icon.getBounds();
            iconTotalSize.width += 4;
            iconTotalSize.width += captionSize.x;
            gc.dispose();
            
            // Draw the icon
            Image image = new Image(Display.getDefault(), iconTotalSize.width,
iconTotalSize.height);
            gc = new GC(image);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
            gc.setForeground(button.getForeground());
            gc.fillRectangle(iconTotalSize);
            if (iconSize.height &gt; captionSize.y) {
                gc.drawImage(icon, 0, 0);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.drawImage(icon, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
                gc.setFont(button.getFont());
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
            
            // Draw the transparancy mask
            ImageData iconTransparancy = icon.getImageData().getTransparencyMask();
            Image iconTransparancyMask = new Image(Display.getDefault(),
iconTransparancy);
            PaletteData palette = new PaletteData (
                new RGB [] {
                    new RGB (0, 0, 0),          // transparant pixels are white
                    new RGB (0xFF, 0xFF, 0xFF), // opaque pixels are black
                });
            ImageData maskData = new ImageData (iconTotalSize.width,
iconTotalSize.height, 1, palette);
            Image mask = new Image (Display.getDefault(), maskData);
            gc = new GC (mask);
            gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_BLACK));
            gc.fillRectangle(0, 0, iconTotalSize.width, iconTotalSize.height);
            if (iconSize.height &gt; captionSize.y) {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0, 0);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2,
iconSize.height-captionSize.y-(iconSize.height-captionSize.y)/2,
SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT);
            } else {
                gc.setBackground
(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawImage(iconTransparancyMask, 0,
captionSize.y-iconSize.height-(captionSize.y-iconSize.height)/2);
               
gc.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_WHITE));
                gc.drawText(caption, iconSize.width+2, 0, SWT.DRAW_MNEMONIC |
SWT.DRAW_TRANSPARENT);
            }
            gc.dispose();
    
            // Get the data for the image and mask so we can compose them into
            // the final icon...
            maskData = mask.getImageData ();
            mask.dispose();
    
            ImageData imageData = image.getImageData();
            image.dispose();

            /*
             * Feature in SWT: On Linux, the depth winds up getting set to
something other
             * than 1 and there's an assert in the code to make sure it's 1. 
The workaround
             * is to manually convert the bit-depth to 1 each time.  See bug #64266.
             */
            // Make the final image (including transparancy)
            Image iconPlusText = new Image(Display.getDefault(), imageData,
convertDepth(maskData));
            button.addDisposeListener(new DisposeListener() {
                public void widgetDisposed(DisposeEvent e) {
                    Button b = (Button) e.widget;
                    Image image = b.getImage();
                    if (image != null)
                        image.dispose();
                }
            });
            
            button.setImage(iconPlusText);
        } else {
            button.setText(caption);
        }
        button.addSelectionListener(selectionListener);
        perspectives.put(id, button);
        getParent().layout(true);
        if (current == null) {
            current = id;
            button.setSelection(true);
        }
    }

OK, I can't resolve it as a dup 'cause I don't own it.  But the bug I believe
this duplicates is bug 33967.
OK; maybe I don't understand this bug.

SWT's behavior is to display the last of (image, text) that was set.  You'll
only get one or the other from SWT.  We probably be deterministic about what we
do--set the Image first or set the Text first, so VE's behavior is always the same.

The trouble is that SWT's behavior does not follow the principle of least
suprise here, and I expect we'll continue to get bug reports about this.  So it
seems to me that we really have two options:

1) Get SWT to fix their bug, either by having a new emulated Button widget that
uses the code I attached below or by really fixing it across platforms.

2) Include our own CButton widget with VE if the SWT team won't so we can tell
people to use our widget rather than SWT's when they complain about VE's behavior.


I don't think this is a dupe of bug 33967 exactly, but fixing 33967 would 
invalidate this one.

Its tricky because we can't set the button text to null and to reset the image 
we need to do something like this:
  button.setText("");
  button.setImage(button.getImage()); //assuming we have an image</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68861" />
    <CreationDate amount="2004-06-29 09:56:00 -0400" />
    <DupId amount="67018" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java Editor preference page cut off in High Contrast</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Set your machine to High Constrast by selecting Control Panel -&gt;</Line>
          <Line>Accessibility Options -&gt; Display -&gt;High Contrast</Line>
          <Line>2) Start Eclipse</Line>
          <Line>3) Open Window-&gt;Preferences=&gt; Java-&gt;Editor</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0

If you open the Java Editor page in high contrast all of the colour options on 
the first page are cut off. This is especially bad as this options need to be 
set in high contrast to see anything as the default colours are unusable.

STEPS
1) Set your machine to High Constrast by selecting Control Panel -&gt; 
Accessibility Options -&gt; Display -&gt;High Contrast
2) Start Eclipse
3) Open Window-&gt;Preferences=&gt; Java-&gt;Editor


*** This bug has been marked as a duplicate of 67018 ***</WithStack>
    <WithOutStack>3.0

If you open the Java Editor page in high contrast all of the colour options on 
the first page are cut off. This is especially bad as this options need to be 
set in high contrast to see anything as the default colours are unusable.

STEPS
1) Set your machine to High Constrast by selecting Control Panel -&gt; 
Accessibility Options -&gt; Display -&gt;High Contrast
2) Start Eclipse
3) Open Window-&gt;Preferences=&gt; Java-&gt;Editor


*** This bug has been marked as a duplicate of 67018 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68862" />
    <CreationDate amount="2004-06-29 10:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] ClassCastException when moving a a java file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156031">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(TypeReferenceLocator.java:327)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclaration(TypeReferenceLocator.java:308)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportReference(TypeReferenceLocator.java:166)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:1500)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:1590)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:1456)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1120)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:748)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:776)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:879)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.search.SearchEngine.searchDeclarations(SearchEngine.java:1060)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:1204)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:63)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:55)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:46)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:224)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:141)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:127)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:91)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1760)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1859)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="81" end="108" />
        <code>public class X&lt;T&gt; {
	T t;
}</code>
      </source_code>
      <source_code type="class">
        <location start="109" end="120" />
        <code>class T {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) create a Java project 'P'</Line>
          <Line>2) create a class 'X.java'</Line>
          <Line />
          <Line />
          <Line>3) create a package 'p'</Line>
          <Line>4) Inside package explorer try to move 'X.java' to 'p'</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 3.0 + JDT/JDK_1_5

1) create a Java project 'P'
2) create a class 'X.java'
public class X&lt;T&gt; {
	T t;
}
class T {
}
3) create a package 'p'
4) Inside package explorer try to move 'X.java' to 'p'

a ClassCastException occurs

java.lang.ClassCastException
	at 
org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclar
ation(TypeReferenceLocator.java:327)
	at 
org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.reportDeclar
ation(TypeReferenceLocator.java:308)
	at 
org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.matchReportR
eference(TypeReferenceLocator.java:166)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching
(MatchLocator.java:1500)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching
(MatchLocator.java:1590)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching
(MatchLocator.java:1456)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process
(MatchLocator.java:1120)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:748)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:776)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:879)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at org.eclipse.jdt.core.search.SearchEngine.searchDeclarations
(SearchEngine.java:1060)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:1204)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:63)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:55)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:46)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:224)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:141)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:127)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:91)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1760)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1859)
	at ...
Works for me with latest. Can you still reproduce ?
I can reproduce with latest.

I forgot to say that the compliance level must be 1.5. The problem does not 
occur with 1.4
I have the compliance level set to 1.5 as well. I would need more details.
My fault: missed the declaration of secondary type T.
Changed TypeReferenceLocator.reportDeclartion(ASTNode, ...) to report the 
erasure of the type binding instead of the type variable binding.

Added regression test JavaSearchTests.testDeclarationOfReferencedTypes09()</WithStack>
    <WithOutStack>build 3.0 + JDT/JDK_1_5

1) create a Java project 'P'
2) create a class 'X.java'
public class X&lt;T&gt; {
	T t;
}
class T {
}
3) create a package 'p'
4) Inside package explorer try to move 'X.java' to 'p'

a ClassCastException occurs


	at ...
Works for me with latest. Can you still reproduce ?
I can reproduce with latest.

I forgot to say that the compliance level must be 1.5. The problem does not 
occur with 1.4
I have the compliance level set to 1.5 as well. I would need more details.
My fault: missed the declaration of secondary type T.
Changed TypeReferenceLocator.reportDeclartion(ASTNode, ...) to report the 
erasure of the type binding instead of the type variable binding.

Added regression test JavaSearchTests.testDeclarationOfReferencedTypes09()</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68863" />
    <CreationDate amount="2004-06-29 10:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing entry in local variable attribute</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="104" end="313" />
        <code>public class X {
	public static void main(String[] args) {
		int i;	
		outer: {
			if (args == null) {
				i = 0;
				break outer;
			}
			return;
		}
		System.out.println(i);	// no entry in var attribute
	}
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="825" end="1044" />
        <code>if (mergedInitStateIndex != -1) {
  codeStream.removeNotDefinitelyAssignedVariables(
    currentScope, mergedInitStateIndex);
  codeStream.addDefinitelyAssignedVariables(      
    currentScope, mergedInitStateIndex);
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1045" end="1098" />
        <code>codeStream.recordPositionsFrom(pc, this.sourceStart);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>R3.0

On following code, we are not generating the proper variable entry in local 
variable attribute:

public class X {
	public static void main(String[] args) {
		int i;	
		outer: {
			if (args == null) {
				i = 0;
				break outer;
			}
			return;
		}
		System.out.println(i);	// no entry in var attribute
	}
}

Thus if breaking in debugging on println(i) line, the variable 'i' isn't 
visible where it should be.
we should generate sthg like:

      Local variable table:
        [pc: 6, pc: 9] local: i index: 1 type: I
        [pc: 0, pc: 18] local: args index: 0 type: [Ljava/lang/String;
        [pc: 10, pc: 18] local: i index: 1 type: I
Similar issue with do-while statement.
Similar issue for all control flow statements (including foreach).
The following templates where missing #addDefinitelyAssignedVariables.

if (mergedInitStateIndex != -1) {
  codeStream.removeNotDefinitelyAssignedVariables(
    currentScope, mergedInitStateIndex);
  codeStream.addDefinitelyAssignedVariables(      
    currentScope, mergedInitStateIndex);
}
codeStream.recordPositionsFrom(pc, this.sourceStart);
Could be backported to 3.0 maintenance stream.

Fixed in 1.5 stream, added regression tests: ConformTest#test241-244 + 
ForeachStatementTest#test027.
Backported to 3.0.x stream.
Verified for 3.0.1 RC1</WithStack>
    <WithOutStack>R3.0

On following code, we are not generating the proper variable entry in local 
variable attribute:

public class X {
	public static void main(String[] args) {
		int i;	
		outer: {
			if (args == null) {
				i = 0;
				break outer;
			}
			return;
		}
		System.out.println(i);	// no entry in var attribute
	}
}

Thus if breaking in debugging on println(i) line, the variable 'i' isn't 
visible where it should be.
we should generate sthg like:

      Local variable table:
        [pc: 6, pc: 9] local: i index: 1 type: I
        [pc: 0, pc: 18] local: args index: 0 type: [Ljava/lang/String;
        [pc: 10, pc: 18] local: i index: 1 type: I
Similar issue with do-while statement.
Similar issue for all control flow statements (including foreach).
The following templates where missing #addDefinitelyAssignedVariables.

if (mergedInitStateIndex != -1) {
  codeStream.removeNotDefinitelyAssignedVariables(
    currentScope, mergedInitStateIndex);
  codeStream.addDefinitelyAssignedVariables(      
    currentScope, mergedInitStateIndex);
}
codeStream.recordPositionsFrom(pc, this.sourceStart);
Could be backported to 3.0 maintenance stream.

Fixed in 1.5 stream, added regression tests: ConformTest#test241-244 + 
ForeachStatementTest#test027.
Backported to 3.0.x stream.
Verified for 3.0.1 RC1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68864" />
    <CreationDate amount="2004-06-29 10:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JUnit] JUnit Plugin Tests fail</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156041">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason>org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:161)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:25)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.syncExec(Display.java:3096)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.testing.WorkbenchTestable.runTest(WorkbenchTestable.java:83)</Frame>
          <Frame depth="6">org.eclipse.pde.internal.junit.runtime.UITestApplication.runTests(UITestApplication.java:90)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.testing.WorkbenchTestable$1.run(WorkbenchTestable.java:56)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="import">
        <location start="2224" end="2257" />
        <code>import junit.framework.TestCase;</code>
      </source_code>
      <source_code type="class">
        <location start="2259" end="2362" />
        <code>public class MyTest extends TestCase {
	public void testSomething() {
		System.out.println("foo");
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Hi everybody!

I found some postings in the newsgroup related to this topic before, but none
helped. 

When running a JUnit Plugin Test, the test classes are not found and execution
of some runnable fails with a NullPointerException.

The affected plugin is a new E3.0 plugin, but depends on some older (still using
the deprecated ctors) plugnis. I am using WinXP. My tests are in a seperate
source folder. The JUnit plugin (org.junit) is a plugin dependency, and these
classes are found (at least Eclipse does not complain), so I currently have no
idea how to fix this.

Thanks for any hints!

Regards,
	Max

Class not found org.eclipse.JUnitCIA.batch.TestTSParsing
Class not found org.eclipse.JUnitCIA.batch.TestPackageCollector
Unhandled event loop exception
Reason:
Failed to execute runnable (java.lang.NullPointerException)
*** SWT nested exception
Reason:
java.lang.NullPointerException
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:161)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:25)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:3096)
	at
org.eclipse.ui.internal.testing.WorkbenchTestable.runTest(WorkbenchTestable.java:83)
	at
org.eclipse.pde.internal.junit.runtime.UITestApplication.runTests(UITestApplication.java:90)
	at
org.eclipse.ui.internal.testing.WorkbenchTestable$1.run(WorkbenchTestable.java:56)
	at java.lang.Thread.run(Unknown Source)
Erich, can you please comment.
Hi!

Just found out something new: my plugin had both the runtime and the
runtime.compatibility plugin as dependency. When I removed the compatibility
plugin, Elipse found my classes again. So now I can run my tests, all classes
are found.

Maybe it might be a good idea to add a check (warning) to either include the new
runtime or the old compatiblity plugin but not both in the plugin.xml editor.
However, I am not sure about this because I also did some other major
reorganization of my plugin project.

Checked it with the following setup:

Created new plugin project, added org.junit and the compatiility plugin as
dependency, added two source folders (src, test), created simple test in "test"
(see below), tried to run -&gt; class not found MyTest.

plugin.xml:

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?eclipse version="3.0"?&gt;
&lt;plugin
   id="Foo"
   name="Foo Plug-in"
   version="1.0.0"
   provider-name=""
   class="Foo.FooPlugin"&gt;

   &lt;runtime&gt;
      &lt;library name="Foo.jar"&gt;
         &lt;export name="*"/&gt;
      &lt;/library&gt;
   &lt;/runtime&gt;

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility"/&gt;
      &lt;import plugin="org.junit"/&gt;
   &lt;/requires&gt;

&lt;/plugin&gt;

MyTest.java:

import junit.framework.TestCase;

public class MyTest extends TestCase {
	public void testSomething() {
		System.out.println("foo");
	}
}

Running this setup fails (class not found MyTest), after removing compatibility
everything is ok.

Regards,
    Max
Actually the NPE happens in PDE JUnit. Moving to PDE to comment on the problem.
Tom,
does the presence of both org.eclipse.core.runtime and 
org.eclipse.core.runtime.compatibility in a plugin.xml cause problems?
Re comment 4: I do not know of any issues with requiring both runtime and 
runtime.compatibility.  Pascal, do you see any issues?
having core.runtime and core.runtime.compatibility at the same time should cause no problems.

There must have been other factors at play.

resolving as worksforme since no action was done.  Reopen if it happens again.</WithStack>
    <WithOutStack>Hi everybody!

I found some postings in the newsgroup related to this topic before, but none
helped. 

When running a JUnit Plugin Test, the test classes are not found and execution
of some runnable fails with a NullPointerException.

The affected plugin is a new E3.0 plugin, but depends on some older (still using
the deprecated ctors) plugnis. I am using WinXP. My tests are in a seperate
source folder. The JUnit plugin (org.junit) is a plugin dependency, and these
classes are found (at least Eclipse does not complain), so I currently have no
idea how to fix this.

Thanks for any hints!

Regards,
	Max

Class not found org.eclipse.JUnitCIA.batch.TestTSParsing
Class not found org.eclipse.JUnitCIA.batch.TestPackageCollector
Unhandled event loop exception
Reason:
Failed to execute runnable (java.lang.NullPointerException)
*** SWT nested exception
Reason:

	at java.lang.Thread.run(Unknown Source)
Erich, can you please comment.
Hi!

Just found out something new: my plugin had both the runtime and the
runtime.compatibility plugin as dependency. When I removed the compatibility
plugin, Elipse found my classes again. So now I can run my tests, all classes
are found.

Maybe it might be a good idea to add a check (warning) to either include the new
runtime or the old compatiblity plugin but not both in the plugin.xml editor.
However, I am not sure about this because I also did some other major
reorganization of my plugin project.

Checked it with the following setup:

Created new plugin project, added org.junit and the compatiility plugin as
dependency, added two source folders (src, test), created simple test in "test"
(see below), tried to run -&gt; class not found MyTest.

plugin.xml:

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?eclipse version="3.0"?&gt;
&lt;plugin
   id="Foo"
   name="Foo Plug-in"
   version="1.0.0"
   provider-name=""
   class="Foo.FooPlugin"&gt;

   &lt;runtime&gt;
      &lt;library name="Foo.jar"&gt;
         &lt;export name="*"/&gt;
      &lt;/library&gt;
   &lt;/runtime&gt;

   &lt;requires&gt;
      &lt;import plugin="org.eclipse.ui"/&gt;
      &lt;import plugin="org.eclipse.core.runtime"/&gt;
      &lt;import plugin="org.eclipse.core.runtime.compatibility"/&gt;
      &lt;import plugin="org.junit"/&gt;
   &lt;/requires&gt;

&lt;/plugin&gt;

MyTest.java:

import junit.framework.TestCase;

public class MyTest extends TestCase {
	public void testSomething() {
		System.out.println("foo");
	}
}

Running this setup fails (class not found MyTest), after removing compatibility
everything is ok.

Regards,
    Max
Actually the NPE happens in PDE JUnit. Moving to PDE to comment on the problem.
Tom,
does the presence of both org.eclipse.core.runtime and 
org.eclipse.core.runtime.compatibility in a plugin.xml cause problems?
Re comment 4: I do not know of any issues with requiring both runtime and 
runtime.compatibility.  Pascal, do you see any issues?
having core.runtime and core.runtime.compatibility at the same time should cause no problems.

There must have been other factors at play.

resolving as worksforme since no action was done.  Reopen if it happens again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68865" />
    <CreationDate amount="2004-06-29 10:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>The ManagedBuild Schema is not bundled in build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Makes it pretty much impossible to add a new target.
All we need to do is add the schema to the list of elements bundled in the 
build via the build.properties file. 
Actually, this looks like wider problem in the build. For both tests I 
performed, I started with a clean install of the 30 SDK from the Eclipse site. 
First, I installed the CDT from the update site and chose the CDT SDK only. 
Next I unzipped the cdt sdk from dschaefer2.

After the first test, I could not import any of the cdt plugins as projects in 
my workspace (using import external plugins wizard), and when creating a new 
PDE project, none of the extension points supplied by the CDT were visible in 
the wizard.

After the second test, I could import the cdt plugins as projects, but the 
schema for the managed build info was missing. My understanding is that this 
file will be present in the SDK distribution, so maybe I have a bad project 
setting. I still could not create an extension based on (any) extension points 
supplied via the CDT. 

I am punting this to you, Doug, since this is well beyond my area of 
expertise.v I will help in any way I can, but I hope you can figure this out 
faster than I could. Feel free to change the priority as you see fit.
Sorry, let me correct that report. After installing the zipped version, I 
could add an extension after I properly spec'd the dependency in the test PDE 
project. Sorry. Still did not get the schema, but I don't think that matters 
too much.
The update site problem stems from the incorrect way I was creating the jar 
files. This will be fixed in the next build.

I just tried the zip files and the schema seems to work. It is bundled in the 
source plugin.</WithStack>
    <WithOutStack>Makes it pretty much impossible to add a new target.
All we need to do is add the schema to the list of elements bundled in the 
build via the build.properties file. 
Actually, this looks like wider problem in the build. For both tests I 
performed, I started with a clean install of the 30 SDK from the Eclipse site. 
First, I installed the CDT from the update site and chose the CDT SDK only. 
Next I unzipped the cdt sdk from dschaefer2.

After the first test, I could not import any of the cdt plugins as projects in 
my workspace (using import external plugins wizard), and when creating a new 
PDE project, none of the extension points supplied by the CDT were visible in 
the wizard.

After the second test, I could import the cdt plugins as projects, but the 
schema for the managed build info was missing. My understanding is that this 
file will be present in the SDK distribution, so maybe I have a bad project 
setting. I still could not create an extension based on (any) extension points 
supplied via the CDT. 

I am punting this to you, Doug, since this is well beyond my area of 
expertise.v I will help in any way I can, but I hope you can figure this out 
faster than I could. Feel free to change the priority as you see fit.
Sorry, let me correct that report. After installing the zipped version, I 
could add an extension after I properly spec'd the dependency in the test PDE 
project. Sorry. Still did not get the schema, but I don't think that matters 
too much.
The update site problem stems from the incorrect way I was creating the jar 
files. This will be fixed in the next build.

I just tried the zip files and the schema seems to work. It is bundled in the 
source plugin.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68866" />
    <CreationDate amount="2004-06-29 11:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT3.0:  Profiling Java Application in NL locale fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Start Remote Agent Controlloer</Line>
          <Line>2) Create Java Project</Line>
          <Line>3) Create package under java project with name</Line>
          <Line>'org.eclipse.hyades.test.collection.framework'</Line>
          <Line>4) Import PerformanceExample.java</Line>
          <Line>5) Right-click PerformanceExample.java, and select Profile &gt; Profile Java</Line>
          <Line>application</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>With the NL fragment installed, I am unable to Profile the
PerformanceExample.java file.  I have no problems on an english only system, it
works fine.  

Steps to reproduce are:
1) Start Remote Agent Controlloer
2) Create Java Project
3) Create package under java project with name
'org.eclipse.hyades.test.collection.framework'
4) Import PerformanceExample.java
5) Right-click PerformanceExample.java, and select Profile &gt; Profile Java
application

No error message is printed to the screen.  However when you check the log file
you see that an Null Pointer Exception has occured.

I have attached the log file.
Created attachment 12876
the log file
Curtis, please take a look at this. The profiling set may have mistaken's 
translated and ProfilingSetsManager cannot recognize them properly.
Fix ready. Awaiting approval.
fix checked in v3_0_1 and HEAD
fixed</WithStack>
    <WithOutStack>With the NL fragment installed, I am unable to Profile the
PerformanceExample.java file.  I have no problems on an english only system, it
works fine.  

Steps to reproduce are:
1) Start Remote Agent Controlloer
2) Create Java Project
3) Create package under java project with name
'org.eclipse.hyades.test.collection.framework'
4) Import PerformanceExample.java
5) Right-click PerformanceExample.java, and select Profile &gt; Profile Java
application

No error message is printed to the screen.  However when you check the log file
you see that an Null Pointer Exception has occured.

I have attached the log file.
Created attachment 12876
the log file
Curtis, please take a look at this. The profiling set may have mistaken's 
translated and ProfilingSetsManager cannot recognize them properly.
Fix ready. Awaiting approval.
fix checked in v3_0_1 and HEAD
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68867" />
    <CreationDate amount="2004-06-29 11:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ImageData - remove ImageLoader dependencies</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="package">
        <location start="2041" end="2074" />
        <code>package org.eclipse.swt.graphics;</code>
      </source_code>
      <source_code type="import">
        <location start="2075" end="2093" />
        <code>import java.io.*;</code>
      </source_code>
      <source_code type="class">
        <location start="2096" end="2309" />
        <code>class ImageLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return null; // go to native eSWT
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return null; // go to native eSWT
	}

}</code>
      </source_code>
      <source_code type="class">
        <location start="2811" end="3040" />
        <code>class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return new ImageLoader().load(stream);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return new ImageLoader().load(filename);
	}

}</code>
      </source_code>
      <source_code type="class">
        <location start="3092" end="3296" />
        <code>class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return nativeESWTCall(..);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return nativeESWTCall(...);
	}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Leave ImageData as it is (i.e. reference ImageLoader.load)</Line>
          <Line>2. Replace the SWT implementation of ImageLoader with your implementation of</Line>
          <Line>ImageDataLoader.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- People might ask for similar decoupling in other areas (GC, etc.). Do you</Line>
          <Line>have other areas in mind? Decoupling can be arbitrary so we can't please</Line>
          <Line>everyone through that mechanism.</Line>
          <Line>- Solution 1. is more optimal for the end user, solution 2 is better for</Line>
          <Line>sharing code. It's just about adding a single and simple class though.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>v3062b

eSWT supports only the png image format; therefore, we want to remove the 
classes ImageLoader, ImageLoaderEvent, and ImageLoaderListener from the spec 
and the win32 and wm2003 implementations.  However, ImageData refers to 
ImageLoader and all of our eSWT implementations are using the common ImageData 
code.  Could you please change ImageData to remove the references to 
ImageLoader?
I'm not sure how we can do this.  ImageLoader is reference in an ImageData 
constructor which is API.
I only see these ImageData constructors, which don't reference ImageLoader:

ImageData(InputStream)
ImageData(int, int, int, PaletteData)
ImageData(int, int, int, PaletteData, int, byte[])
ImageData(String)
ImageLoader is only referenced in the implementation. You could change this to
reference an internal class. E.g., move the ImageLoader.load implementation to 
ImageData and reference ImageData in ImageLoader.
Can you provide a patch of what you have in mind? I looked into it and 
dependencies are more intricate than first thought.

The java image decoders and FileFormat class have a dependency on ImageLoader. 
If you don't use them (custom native image decoders?) then removing the 
dependency of ImageLoader on ImageData is OK but otherwise it is not.

Maybe it looked simple on your side because you don't depend on the java image 
decoders?
Created attachment 18424
Internal class that separates ImageData and ImageLoader

New non-public class forwards loading to ImageLoader. eSWT would implement this
to call the native image loader without involving the ImageLoader class.
I agree with Chrix that there is no way to separate ImageLoader by shuffling
code to ImageData.
Created attachment 18425
ImageData calling ImageDataLoader
Since you need to provide a custom implementation of ImageDataLoader in the 
solution you are proposing, can you do the following instead:
1. Leave ImageData as it is (i.e. reference ImageLoader.load)
2. Replace the SWT implementation of ImageLoader with your implementation of 
ImageDataLoader.

package org.eclipse.swt.graphics;

import java.io.*;


class ImageLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return null; // go to native eSWT
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return null; // go to native eSWT
	}

}

Maybe I don't understand. What you propose is exactly what we want to avoid.
Currently we call the native image decoder API and the encoder API in our eSWT
ImageLoader. 
Our goal is to package ImageLoader separately from ImageData for those that do
not need the image save eSWT API. Sorry if this wasn't clear.
Yes - your ImageLoader will not be the SWT ImageLoader. It won't be public, it 
won't have the save method - just as in comment 7.

From comment 5:
You're suggesting SWT adds a new class:

class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return new ImageLoader().load(stream);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return new ImageLoader().load(filename);
	}

}

Which you would reimplement your own custom way:

class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return nativeESWTCall(..);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return nativeESWTCall(...);
	}

}

Instead we might as well do this:
SWT keeps the existing ImageLoader class as it is currently.
eSWT provides a custom implementation of ImageLoader similar to your suggested 
ImageDataLoader (comment 7). Your ImageLoader is not public, does not have 
save method etc. But you still share the same ImageData class with SWT.

Let me know if that's still confusing?
eSWT is split into Core eSWT and Expanded eSWT.  Core eSWT is the minimal set 
to run on an embedded device.  It does not require Expanded eSWT and we do not 
want to require image saving behavior for Core since it is a big hit to supply 
this.  Therefore, we want ImageData to be in Core eSWT and ImageLoader to be in 
Expanded eSWT.  We need ImageData to have no dependency on ImageLoader.  So 
your suggestions don't help us.
To further clarify, we want to be able to package eSWT Expanded as a separate
jar that simply adds to eSWT Core. Therefore a private ImageLoader in eSWT Core
would get in the way when we add the public one in eSWT Expanded.
Can you confirm you are also replacing the SWT PNGFileFormat class with your 
own PNGFileFormat class that uses a native decoder? ImageLoader.Load will 
search for that class and it should be the same native decoder as the one 
invoked by your implementation of ImageDataLoader.

The 2 solutions we've seen so far are:
1. eSWT does not completely share the ImageData anymore. Their version does 
not directly reference ImageLoader so that ImageLoader can be removed in the 
Core distribution. They can also remove java code that does dithering if they 
don't need it and might be slow to do on the java side on certain devices.
2. SWT adds an extra class so that ImageLoader.save can be removed without 
using jxelink style of technique. This makes things a little bit bigger for 
SWT and a bit easier for eSWT implementors reusing SWT source. 

The problem for SWT with 2. is that
- People might ask for similar decoupling in other areas (GC, etc.). Do you 
have other areas in mind? Decoupling can be arbitrary so we can't please 
everyone through that mechanism.
- Solution 1. is more optimal for the end user, solution 2 is better for 
sharing code. It's just about adding a single and simple class though.

Given that, we'd prefer to wait for Steve to come back from vacation (just in 
time for M6, april 1st). Can you wait till then?
We don't have any kind of FileFormat classes. Our ImageLoader implementation
calls the native image decoder directly. The platform figures out what format
the image is in.
You are correct that solution 1) is an alternative if 2) is too painful. 

I'll let Tim answer whether or not we can wait for a decision.

 We have some work to do here to get ImageLoader officially moved out of CORE
 and into EXPANDED - not a big deal (spec changes, test cases), but this is a
 pre-requisite for gaining closure on the spec.  Getting the spec closed is
 really the milestone we are pushing hard on from a plan/schedule standpoint.

 That said, its probably not a surprise that I have a fairly strong preference
 for proposal #2. I know of no other decoupling requirements or needs stemming
 from the eRCP/eSWT work. Once we have Spec Closure (we are beyond the planned
 date for this and are working hard to achieve this), I would expect that there
 will (should) be very few if any future SWT requests from the eRCP/eSWT 
 work.

 My strong preference for #2 is that I believe it to be a very lightweight
 solution to the decoupling, while it does keep ImageData in the shareable
 space. ImageData is one of those classes that just has a lot of stuff in it
 that for all intents and purposes, is neutral to the platform, so it is a 
 particularly appealing class to have in the set of common classes.
 
 If there is strong opposition to option #2 by Steve or others, then I think 
 Option #1 will be our only other avenue, and because of the tremendous bulk 
 that comes with Image Saving (100K+ to the native DLL), and the fact that
 there are so many embedded platforms that either don't need it, and/or have
 no OS support for it, we would prefer Option #1 over leaving ImageLoader in
 CORE (which I don't feel is really an option).
 
 We can wait for Steve's response to find out whether ImageData can continue 
 to be part of the shared/common classes.  In the meantime, because of time
 constraints, we will go ahead and make the changes to the eSWT spec.
 
 
fixed v&gt;20050413
Added ImageDataLoader class as described in comment 5. ImageData now uses 
ImageDataLoader instead of ImageLoader.</WithStack>
    <WithOutStack>v3062b

eSWT supports only the png image format; therefore, we want to remove the 
classes ImageLoader, ImageLoaderEvent, and ImageLoaderListener from the spec 
and the win32 and wm2003 implementations.  However, ImageData refers to 
ImageLoader and all of our eSWT implementations are using the common ImageData 
code.  Could you please change ImageData to remove the references to 
ImageLoader?
I'm not sure how we can do this.  ImageLoader is reference in an ImageData 
constructor which is API.
I only see these ImageData constructors, which don't reference ImageLoader:

ImageData(InputStream)
ImageData(int, int, int, PaletteData)
ImageData(int, int, int, PaletteData, int, byte[])
ImageData(String)
ImageLoader is only referenced in the implementation. You could change this to
reference an internal class. E.g., move the ImageLoader.load implementation to 
ImageData and reference ImageData in ImageLoader.
Can you provide a patch of what you have in mind? I looked into it and 
dependencies are more intricate than first thought.

The java image decoders and FileFormat class have a dependency on ImageLoader. 
If you don't use them (custom native image decoders?) then removing the 
dependency of ImageLoader on ImageData is OK but otherwise it is not.

Maybe it looked simple on your side because you don't depend on the java image 
decoders?
Created attachment 18424
Internal class that separates ImageData and ImageLoader

New non-public class forwards loading to ImageLoader. eSWT would implement this
to call the native image loader without involving the ImageLoader class.
I agree with Chrix that there is no way to separate ImageLoader by shuffling
code to ImageData.
Created attachment 18425
ImageData calling ImageDataLoader
Since you need to provide a custom implementation of ImageDataLoader in the 
solution you are proposing, can you do the following instead:
1. Leave ImageData as it is (i.e. reference ImageLoader.load)
2. Replace the SWT implementation of ImageLoader with your implementation of 
ImageDataLoader.

package org.eclipse.swt.graphics;

import java.io.*;


class ImageLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return null; // go to native eSWT
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return null; // go to native eSWT
	}

}

Maybe I don't understand. What you propose is exactly what we want to avoid.
Currently we call the native image decoder API and the encoder API in our eSWT
ImageLoader. 
Our goal is to package ImageLoader separately from ImageData for those that do
not need the image save eSWT API. Sorry if this wasn't clear.
Yes - your ImageLoader will not be the SWT ImageLoader. It won't be public, it 
won't have the save method - just as in comment 7.

From comment 5:
You're suggesting SWT adds a new class:

class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return new ImageLoader().load(stream);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return new ImageLoader().load(filename);
	}

}

Which you would reimplement your own custom way:

class ImageDataLoader {

	/**
	 */
	public ImageData[] load(InputStream stream) {
		return nativeESWTCall(..);
	}

	/**
	 */
	public ImageData[] load(String filename) {
		return nativeESWTCall(...);
	}

}

Instead we might as well do this:
SWT keeps the existing ImageLoader class as it is currently.
eSWT provides a custom implementation of ImageLoader similar to your suggested 
ImageDataLoader (comment 7). Your ImageLoader is not public, does not have 
save method etc. But you still share the same ImageData class with SWT.

Let me know if that's still confusing?
eSWT is split into Core eSWT and Expanded eSWT.  Core eSWT is the minimal set 
to run on an embedded device.  It does not require Expanded eSWT and we do not 
want to require image saving behavior for Core since it is a big hit to supply 
this.  Therefore, we want ImageData to be in Core eSWT and ImageLoader to be in 
Expanded eSWT.  We need ImageData to have no dependency on ImageLoader.  So 
your suggestions don't help us.
To further clarify, we want to be able to package eSWT Expanded as a separate
jar that simply adds to eSWT Core. Therefore a private ImageLoader in eSWT Core
would get in the way when we add the public one in eSWT Expanded.
Can you confirm you are also replacing the SWT PNGFileFormat class with your 
own PNGFileFormat class that uses a native decoder? ImageLoader.Load will 
search for that class and it should be the same native decoder as the one 
invoked by your implementation of ImageDataLoader.

The 2 solutions we've seen so far are:
1. eSWT does not completely share the ImageData anymore. Their version does 
not directly reference ImageLoader so that ImageLoader can be removed in the 
Core distribution. They can also remove java code that does dithering if they 
don't need it and might be slow to do on the java side on certain devices.
2. SWT adds an extra class so that ImageLoader.save can be removed without 
using jxelink style of technique. This makes things a little bit bigger for 
SWT and a bit easier for eSWT implementors reusing SWT source. 

The problem for SWT with 2. is that
- People might ask for similar decoupling in other areas (GC, etc.). Do you 
have other areas in mind? Decoupling can be arbitrary so we can't please 
everyone through that mechanism.
- Solution 1. is more optimal for the end user, solution 2 is better for 
sharing code. It's just about adding a single and simple class though.

Given that, we'd prefer to wait for Steve to come back from vacation (just in 
time for M6, april 1st). Can you wait till then?
We don't have any kind of FileFormat classes. Our ImageLoader implementation
calls the native image decoder directly. The platform figures out what format
the image is in.
You are correct that solution 1) is an alternative if 2) is too painful. 

I'll let Tim answer whether or not we can wait for a decision.

 We have some work to do here to get ImageLoader officially moved out of CORE
 and into EXPANDED - not a big deal (spec changes, test cases), but this is a
 pre-requisite for gaining closure on the spec.  Getting the spec closed is
 really the milestone we are pushing hard on from a plan/schedule standpoint.

 That said, its probably not a surprise that I have a fairly strong preference
 for proposal #2. I know of no other decoupling requirements or needs stemming
 from the eRCP/eSWT work. Once we have Spec Closure (we are beyond the planned
 date for this and are working hard to achieve this), I would expect that there
 will (should) be very few if any future SWT requests from the eRCP/eSWT 
 work.

 My strong preference for #2 is that I believe it to be a very lightweight
 solution to the decoupling, while it does keep ImageData in the shareable
 space. ImageData is one of those classes that just has a lot of stuff in it
 that for all intents and purposes, is neutral to the platform, so it is a 
 particularly appealing class to have in the set of common classes.
 
 If there is strong opposition to option #2 by Steve or others, then I think 
 Option #1 will be our only other avenue, and because of the tremendous bulk 
 that comes with Image Saving (100K+ to the native DLL), and the fact that
 there are so many embedded platforms that either don't need it, and/or have
 no OS support for it, we would prefer Option #1 over leaving ImageLoader in
 CORE (which I don't feel is really an option).
 
 We can wait for Steve's response to find out whether ImageData can continue 
 to be part of the shared/common classes.  In the meantime, because of time
 constraints, we will go ahead and make the changes to the eSWT spec.
 
 
fixed v&gt;20050413
Added ImageDataLoader class as described in comment 5. ImageData now uses 
ImageDataLoader instead of ImageLoader.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68868" />
    <CreationDate amount="2004-06-29 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sometime a search results in the error "Memento problem" [search]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Sometimes when I do a search via Java editor popup menu References-&gt;Workspace,
I get the following error in the error log:



Memento problem - invalid integer for key:
org.eclipse.jdt.search.resultpage.grouping value: TRUE

An exception stack trace could not be found.

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US



Seems to be random. I can't find a specific search that causes the error,
but it happens somewhat frequently.
This is related to bug 66737. However, looking at the source code shows that 
there is another occurrences where we use the wrong key. The problematic code 
is in JavaSearchResultPage#enableLimit.

Martin, we should think about fixing this for 3.0.1. Fix seems to be trivial.
the warning printed from the memento must have come from an older installation and 
can't be easely prevented. But it should only show up once and has no bad side
effects

The patch fixes the problem found by Dirk in comment 1 which is unreleated to
the memento.
Created attachment 13235
proposed fix
fix released in HEAD (3.1 stream) &gt; 20040714
fix verified
Fix reviewed.
Fix released for 3.0.1.
started verifying for 3.1 M1...
verified for 3.1 M1
Verified via code inspection on M200409010800.</WithStack>
    <WithOutStack>Sometimes when I do a search via Java editor popup menu References-&gt;Workspace,
I get the following error in the error log:



Memento problem - invalid integer for key:
org.eclipse.jdt.search.resultpage.grouping value: TRUE

An exception stack trace could not be found.

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US



Seems to be random. I can't find a specific search that causes the error,
but it happens somewhat frequently.
This is related to bug 66737. However, looking at the source code shows that 
there is another occurrences where we use the wrong key. The problematic code 
is in JavaSearchResultPage#enableLimit.

Martin, we should think about fixing this for 3.0.1. Fix seems to be trivial.
the warning printed from the memento must have come from an older installation and 
can't be easely prevented. But it should only show up once and has no bad side
effects

The patch fixes the problem found by Dirk in comment 1 which is unreleated to
the memento.
Created attachment 13235
proposed fix
fix released in HEAD (3.1 stream) &gt; 20040714
fix verified
Fix reviewed.
Fix released for 3.0.1.
started verifying for 3.1 M1...
verified for 3.1 M1
Verified via code inspection on M200409010800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68869" />
    <CreationDate amount="2004-06-29 11:13:00 -0400" />
    <DupId amount="67286" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Block comment then Format cannot be correctly Uncommented</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="16" end="88" />
        <code>01 class A {
02   void a() {
03     System.out.println("a");
04   }
05 }</code>
      </source_code>
      <source_code type="class">
        <location start="161" end="249" />
        <code>01 class A {
02   /*
03   void a() {
04     System.out.println("a");
05   }
06   */
07 }</code>
      </source_code>
      <source_code type="class">
        <location start="294" end="374" />
        <code>01 class A {
02   /*
03    * void a() { System.out.println("a"); }
04    */
05 }</code>
      </source_code>
      <source_code type="class">
        <location start="447" end="510" />
        <code>01 class A {
02    * void a() { System.out.println("a"); }
03 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>with 3.0 final

01 class A {
02   void a() {
03     System.out.println("a");
04   }
05 }

select from line 02 to 04 and right click &gt; source &gt;add block comment

01 class A {
02   /*
03   void a() {
04     System.out.println("a");
05   }
06   */
07 }

then select right click &gt; source &gt; format

01 class A {
02   /*
03    * void a() { System.out.println("a"); }
04    */
05 }

then select line 02 to 04 right click &gt; source &gt; Remove block comment

01 class A {
02    * void a() { System.out.println("a"); }
03 }

It doesn't remove the stars


*** This bug has been marked as a duplicate of 67286 ***</WithStack>
    <WithOutStack>with 3.0 final

01 class A {
02   void a() {
03     System.out.println("a");
04   }
05 }

select from line 02 to 04 and right click &gt; source &gt;add block comment

01 class A {
02   /*
03   void a() {
04     System.out.println("a");
05   }
06   */
07 }

then select right click &gt; source &gt; format

01 class A {
02   /*
03    * void a() { System.out.println("a"); }
04    */
05 }

then select line 02 to 04 right click &gt; source &gt; Remove block comment

01 class A {
02    * void a() { System.out.println("a"); }
03 }

It doesn't remove the stars


*** This bug has been marked as a duplicate of 67286 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68870" />
    <CreationDate amount="2004-06-29 11:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] interactions: Alt+S doesn't open Source menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>For some reason, Alt+S (either Alt key) won't open the Source menu in Eclipse
3.0.  The other menus open fine with their underlined letters (except Search,
which has no shortcut).  From what I can tell, Alt+S isn't assigned as a key
binding.
What key configuration are you using?  Do you have any plug-ins installed?  
When you press "Alt+S", does anything appear in the status bar? 
I'm using the default key configuration.  When I look up the Alt+S key sequence,
nothing appears in the list.  When I press Alt+S in the main window, nothing
shows up in the status bar (nothing happens at all).
No one else has reported this bug.  Do you have any third-party applications
running on your computer that might trap keys?  I've heard to things like Palm's
sync tool having a similar effect....
I just tried it again and it worked fine.  I'm not sure why it wasn't 
working.  I don't have a Palm sync tool, and I don't think there were other 
apps listening for keys, but I suppose it's possible.
Okay, closing as WORKSFORME.  Thanks for your quick reply....</WithStack>
    <WithOutStack>For some reason, Alt+S (either Alt key) won't open the Source menu in Eclipse
3.0.  The other menus open fine with their underlined letters (except Search,
which has no shortcut).  From what I can tell, Alt+S isn't assigned as a key
binding.
What key configuration are you using?  Do you have any plug-ins installed?  
When you press "Alt+S", does anything appear in the status bar? 
I'm using the default key configuration.  When I look up the Alt+S key sequence,
nothing appears in the list.  When I press Alt+S in the main window, nothing
shows up in the status bar (nothing happens at all).
No one else has reported this bug.  Do you have any third-party applications
running on your computer that might trap keys?  I've heard to things like Palm's
sync tool having a similar effect....
I just tried it again and it worked fine.  I'm not sure why it wasn't 
working.  I don't have a Palm sync tool, and I don't think there were other 
apps listening for keys, but I suppose it's possible.
Okay, closing as WORKSFORME.  Thanks for your quick reply....</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68871" />
    <CreationDate amount="2004-06-29 11:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Improve GridBag customizer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>(1) Putting the constraint properties on the 'Customize Layout' Dialogue.</Line>
          <Line>Note, currently if you edit a contraint property on the 'Properties' view you</Line>
          <Line>lose the selection on the 'Customize Layout' Dialogue.</Line>
          <Line />
          <Line>(2) Making the controls on the 'Customize Layout' Dialogue more like those on</Line>
          <Line>the bottom left of the Netbeans GridBagLayout Customizer.</Line>
          <Line>this has been fixed in VE 1.1 as part of bug 91097</Line>
          <Line>(In reply to comment #1)</Line>
          <Line>&gt; this has been fixed in VE 1.1 as part of bug 91097</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I have used the NetBeans GridBag customizer extensively.
See: http://ui.netbeans.org/docs/ui/customizer/  

I find the VE GridBag customizer harder to use.

I think it could be improved by:
(1) Putting the constraint properties on the 'Customize Layout' Dialogue.
Note, currently if you edit a contraint property on the 'Properties' view you
lose the selection on the 'Customize Layout' Dialogue. 

(2) Making the controls on the 'Customize Layout' Dialogue more like those on
the bottom left of the Netbeans GridBagLayout Customizer.
this has been fixed in VE 1.1 as part of bug 91097
(In reply to comment #1)
&gt; this has been fixed in VE 1.1 as part of bug 91097


closed</WithStack>
    <WithOutStack>I have used the NetBeans GridBag customizer extensively.
See: http://ui.netbeans.org/docs/ui/customizer/  

I find the VE GridBag customizer harder to use.

I think it could be improved by:
(1) Putting the constraint properties on the 'Customize Layout' Dialogue.
Note, currently if you edit a contraint property on the 'Properties' view you
lose the selection on the 'Customize Layout' Dialogue. 

(2) Making the controls on the 'Customize Layout' Dialogue more like those on
the bottom left of the Netbeans GridBagLayout Customizer.
this has been fixed in VE 1.1 as part of bug 91097
(In reply to comment #1)
&gt; this has been fixed in VE 1.1 as part of bug 91097


closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68872" />
    <CreationDate amount="2004-06-29 11:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Error in JavaFamily's plugin.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>R3.0

   &lt;extension
         point="org.eclipse.debug.core.sourceLocators"&gt;
      &lt;sourceLocator
            name="%TomcatSourceLocator.name"
            class="org.eclipse.jsp.launching.TomcatSourceLocator"
            id="org.eclipse.jsp.TOMCAT_SOURCE_LOCATOR"&gt;
      &lt;/sourceLocator&gt;
   &lt;/extension&gt;

org.eclipse.jsp.launching.TomcatSourceLocator does not exist
This extension should be removed from plug-in XML. The example Tomcat launch 
config type now uses the standard Java source locator, based on JSR045.
Took DW's word for it. :) Please verify, Luc.
verified.</WithStack>
    <WithOutStack>R3.0

   &lt;extension
         point="org.eclipse.debug.core.sourceLocators"&gt;
      &lt;sourceLocator
            name="%TomcatSourceLocator.name"
            class="org.eclipse.jsp.launching.TomcatSourceLocator"
            id="org.eclipse.jsp.TOMCAT_SOURCE_LOCATOR"&gt;
      &lt;/sourceLocator&gt;
   &lt;/extension&gt;

org.eclipse.jsp.launching.TomcatSourceLocator does not exist
This extension should be removed from plug-in XML. The example Tomcat launch 
config type now uses the standard Java source locator, based on JSR045.
Took DW's word for it. :) Please verify, Luc.
verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68873" />
    <CreationDate amount="2004-06-29 11:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Trace) Execution Flow/Method Invocation diagrams should have toggle button for table</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, the Execution Flow and Method Invocation diagram views have tables 
associated with them and are accessible by the view's context menu. This opens 
a separate view with the table. We should instead have a toggle button in the 
view toolbar that toggles between the table and the diagram (in the same view).

Requires PII change, but should go in 3.0.1. This problem needs to be resolved.
Not urgent enough for 3.0.1. Moving to 3.1.
New action icon is created in view to allow user open table view. It is a push
button but not an toggle button.

patch submitted. 

Icon of the action needed to be updated once a new icon is available from MDS.
Icon request 0931 submitted.
Icon updated in 3.3. Attach patch for 4.0
Created attachment 17398
patch
Created attachment 17399
icons
retarget to the correct iteration
Could you add "Documentation" as a keyword since this has a doc hit?

Thanx.
And, please prefix the defect summary with either Mon, Trace, or Plat 
This fix is no longer relevant due to bug 87100, which removed the button in 
favor of having the table in the same view as the graph. Closing bug.
Docs updated in 3.3 i2.</WithStack>
    <WithOutStack>Currently, the Execution Flow and Method Invocation diagram views have tables 
associated with them and are accessible by the view's context menu. This opens 
a separate view with the table. We should instead have a toggle button in the 
view toolbar that toggles between the table and the diagram (in the same view).

Requires PII change, but should go in 3.0.1. This problem needs to be resolved.
Not urgent enough for 3.0.1. Moving to 3.1.
New action icon is created in view to allow user open table view. It is a push
button but not an toggle button.

patch submitted. 

Icon of the action needed to be updated once a new icon is available from MDS.
Icon request 0931 submitted.
Icon updated in 3.3. Attach patch for 4.0
Created attachment 17398
patch
Created attachment 17399
icons
retarget to the correct iteration
Could you add "Documentation" as a keyword since this has a doc hit?

Thanx.
And, please prefix the defect summary with either Mon, Trace, or Plat 
This fix is no longer relevant due to bug 87100, which removed the button in 
favor of having the table in the same view as the graph. Closing bug.
Docs updated in 3.3 i2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68874" />
    <CreationDate amount="2004-06-29 11:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error in Ant UI plugin.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Platform Core to update the extension point schema</Line>
          <Line>- PDE to offer a way to exclude such errors from being presented</Line>
          <Line>In this case, we use the ILaunchable adapter simply as a "tag" that something</Line>
          <Line>is launchable (i.e. hasAdapater(ILaunchable)). We never instantiate a class</Line>
          <Line>(or consult an adapter factory), and this things work as expected.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>R3.0

   &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
         &lt;factory 
            class=""
            adaptableType="org.eclipse.core.resources.IFile"&gt;
            &lt;adapter type="org.eclipse.debug.ui.actions.ILaunchable"/&gt;
         &lt;/factory&gt;
    &lt;/extension&gt;

According to the extension point schema doc class is required and must implement
IAdapterFactory, hence class="" is not valid and gets flagged as error by PDE. 

If you argue that class="" is valid then this PR has to be forwarded to
- Platform Core to update the extension point schema
- PDE to offer a way to exclude such errors from being presented
In this case, we use the ILaunchable adapter simply as a "tag" that something 
is launchable (i.e. hasAdapater(ILaunchable)). We never instantiate a class 
(or consult an adapter factory), and this things work as expected.

CC'ing DJ for comment/concerns. We could provide an adapater factory in the 
debug platform that others could reference, or we could leave as is.
Leave as is is only an option if the schema gets changed.
If someone were to call IAdapterManager.getAdapter() for this extension, it
would fail. So, I would argue that the schema is correct. The Ant usage is just
getting lucky that it is only touching a subset of the functionality that uses
this extension point. This is true for many extensions - since we don't
agressively validate extensions against the schema at runtime, there are many
"invalid" extensions that actually work just fine. This is analagous to a class
with a error in one of its methods - if the method is never called, the class
works fine.
Couldn't you provide a dummy class?
Deferred to post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>R3.0

   &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
         &lt;factory 
            class=""
            adaptableType="org.eclipse.core.resources.IFile"&gt;
            &lt;adapter type="org.eclipse.debug.ui.actions.ILaunchable"/&gt;
         &lt;/factory&gt;
    &lt;/extension&gt;

According to the extension point schema doc class is required and must implement
IAdapterFactory, hence class="" is not valid and gets flagged as error by PDE. 

If you argue that class="" is valid then this PR has to be forwarded to
- Platform Core to update the extension point schema
- PDE to offer a way to exclude such errors from being presented
In this case, we use the ILaunchable adapter simply as a "tag" that something 
is launchable (i.e. hasAdapater(ILaunchable)). We never instantiate a class 
(or consult an adapter factory), and this things work as expected.

CC'ing DJ for comment/concerns. We could provide an adapater factory in the 
debug platform that others could reference, or we could leave as is.
Leave as is is only an option if the schema gets changed.
If someone were to call IAdapterManager.getAdapter() for this extension, it
would fail. So, I would argue that the schema is correct. The Ant usage is just
getting lucky that it is only touching a subset of the functionality that uses
this extension point. This is true for many extensions - since we don't
agressively validate extensions against the schema at runtime, there are many
"invalid" extensions that actually work just fine. This is analagous to a class
with a error in one of its methods - if the method is never called, the class
works fine.
Couldn't you provide a dummy class?
Deferred to post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68875" />
    <CreationDate amount="2004-06-29 11:53:00 -0400" />
    <DupId amount="68240" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE in jobs.Worker.run  breaks eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In Eclipse 3.0.0 build 200406251208.

I debug a runtime workbench (debugging the cdt).  In the runtime workbench, I 
start a build.
Then, in the JDT, while the build is running in the runtime workbench, I 
terminate the debug session.

In the shell where I started eclipse from, I get the following:
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))

Eclipse itself gives no indication of an error.  However, after this, things 
stop working. Starting a new debug session does nothing, doing an open Type 
shows nothing in the dialog when typing in a type, doing a search doesn't work, 
opening the call hierarchy doesn't work.


*** This bug has been marked as a duplicate of 68240 ***</WithStack>
    <WithOutStack>In Eclipse 3.0.0 build 200406251208.

I debug a runtime workbench (debugging the cdt).  In the runtime workbench, I 
start a build.
Then, in the JDT, while the build is running in the runtime workbench, I 
terminate the debug session.

In the shell where I started eclipse from, I get the following:
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))
java.lang.NullPointerException
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java(Compiled Code))

Eclipse itself gives no indication of an error.  However, after this, things 
stop working. Starting a new debug session does nothing, doing an open Type 
shows nothing in the dialog when typing in a type, doing a search doesn't work, 
opening the call hierarchy doesn't work.


*** This bug has been marked as a duplicate of 68240 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68876" />
    <CreationDate amount="2004-06-29 11:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Sashes should resize interactively</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

The following patch modifies Sash to resize interactively, rather than drawing
an XOR stipple.  This makes Eclipse feel a lot more modern, and follows the
behaviour of other Linux applications.
Created attachment 12879
Interactive resizing for Sash
SN - write a snippet that shows how to do this with existing SWT API and 
implementation.
I would have rather seen this done in SWT, but we're doing it in the Eclipse UI
now anyway.  Closing this bug.
... and it looks bad because the sash is drawing an Xor'd image.
Right, which is why I liked my patch since it doesn't draw anything (it knows
its interactive).  Is there a way to ask Sash not to draw?
Reopening: IMNO, this enhancement has some merit:

The current Eclipse UI workaround is a hack -- the Sash class should follow the
accepted behavior for the native OS, and should omit the XOR drawing if it is
resizing interactivley (On windows, it should probably be based on the "show
window contents while dragging" option).

Fixed &gt; 20041015 (see SWT.SMOOTH)
Hi,

What about the SashForm? Could it also use the SWT.SMOOTH style? That would
require passing of the style to the instantiations of Sash inside SashForm.

Ben</WithStack>
    <WithOutStack>3.0

The following patch modifies Sash to resize interactively, rather than drawing
an XOR stipple.  This makes Eclipse feel a lot more modern, and follows the
behaviour of other Linux applications.
Created attachment 12879
Interactive resizing for Sash
SN - write a snippet that shows how to do this with existing SWT API and 
implementation.
I would have rather seen this done in SWT, but we're doing it in the Eclipse UI
now anyway.  Closing this bug.
... and it looks bad because the sash is drawing an Xor'd image.
Right, which is why I liked my patch since it doesn't draw anything (it knows
its interactive).  Is there a way to ask Sash not to draw?
Reopening: IMNO, this enhancement has some merit:

The current Eclipse UI workaround is a hack -- the Sash class should follow the
accepted behavior for the native OS, and should omit the XOR drawing if it is
resizing interactivley (On windows, it should probably be based on the "show
window contents while dragging" option).

Fixed &gt; 20041015 (see SWT.SMOOTH)
Hi,

What about the SashForm? Could it also use the SWT.SMOOTH style? That would
require passing of the style to the instantiations of Sash inside SashForm.

Ben</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68877" />
    <CreationDate amount="2004-06-29 12:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Spec for OleClientSite mentions the wrong error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>R 3.0

The javadoc for OleClientSite mentions that it throws an SwtError. It actually 
throws and SWTException

@exception SWTError
 * &lt;ul&gt;&lt;li&gt;ERROR_THREAD_INVALID_ACCESS when called from the wrong thread
 *     &lt;li&gt;ERROR_ERROR_NULL_ARGUMENT when the parent is null&lt;/ul&gt;
 * @exception SWTError
 * &lt;ul&gt;&lt;li&gt;ERROR_CANNOT_CREATE_OBJECT when failed to create OLE Object
 *     &lt;li&gt;ERROR_INVALID_ARGUMENT when the parent is not an OleFrame
 *     &lt;li&gt;ERROR_CANNOT_OPEN_FILE when failed to open file
 *     &lt;li&gt;ERROR_INTERFACES_NOT_INITIALIZED when unable to create callbacks 
for OLE Interfaces&lt;/ul&gt;
Fixed in HEAD</WithStack>
    <WithOutStack>R 3.0

The javadoc for OleClientSite mentions that it throws an SwtError. It actually 
throws and SWTException

@exception SWTError
 * &lt;ul&gt;&lt;li&gt;ERROR_THREAD_INVALID_ACCESS when called from the wrong thread
 *     &lt;li&gt;ERROR_ERROR_NULL_ARGUMENT when the parent is null&lt;/ul&gt;
 * @exception SWTError
 * &lt;ul&gt;&lt;li&gt;ERROR_CANNOT_CREATE_OBJECT when failed to create OLE Object
 *     &lt;li&gt;ERROR_INVALID_ARGUMENT when the parent is not an OleFrame
 *     &lt;li&gt;ERROR_CANNOT_OPEN_FILE when failed to open file
 *     &lt;li&gt;ERROR_INTERFACES_NOT_INITIALIZED when unable to create callbacks 
for OLE Interfaces&lt;/ul&gt;
Fixed in HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68878" />
    <CreationDate amount="2004-06-29 12:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[PerspectiveBar] removing the perspective bar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>in cases where the user has said they want one perspective per window, the 
perspective bar is not needed.  Having it there all the time conflicts with the 
desire to either have lots of tool bar items, have not tool bar or have small 
windows.

Suggest that if the one perspective per window perference is selected, the 
perspecitve bar just not be drawn.  That includes the curve, the open 
perspective button and the current perspective name/icon.</WithStack>
    <WithOutStack>in cases where the user has said they want one perspective per window, the 
perspective bar is not needed.  Having it there all the time conflicts with the 
desire to either have lots of tool bar items, have not tool bar or have small 
windows.

Suggest that if the one perspective per window perference is selected, the 
perspecitve bar just not be drawn.  That includes the curve, the open 
perspective button and the current perspective name/icon.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68879" />
    <CreationDate amount="2004-06-29 12:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] removing the toolbar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>in most of my perspectives I do not use any of the buttons on the toolbar.  I 
have tried disabling the actions related to the toolbar buttons but this often 
has the side-effect of diabling the related key strokes making the function 
hard to use (e.g., ctrl-shft-T does not work if the Open Type tool bar button 
is disabled).

One option would be to retain the key bindings but disable the presentation of 
the buttons.  Then a user could disable all the buttons.  If there are no 
enabled buttons then the tool bar should be coded to not draw.

Another option is to simply bracket the drawing of the toolbar with a 
preference that allows the user to turn it off.

This combined with bug 68878 would allow the creation (through preference 
settings) of prespectives in the Eclipse IDE which have just the menubar.  This 
is a major win for people with limited real estate or wanting to use many 
windows.
We have an option (usable via RCP and used currently by the maximized intro) for
hiding the toolbar and perspective bar already.  Perhaps we could put a flag
into the perspective extension specifying that it should not show the bar?
*** Bug 88984 has been marked as a duplicate of this bug. ***
Bug  88984 has been marked as a duplicate of 68879 

I don't think so : it's not a function to change the content of IDE or RCP perspectives, suppress toolbar and other, it's only an action to put the perspective's space in fullscreen mode. 
In the bug 88984, I suggest to implement a full screen mode with auto hidden menus, toolbars, perpective bar and status bar like Firefox, AvantBrowser overIE,... This would be done with a actions (F11 key perhaps) but also programmaticly.

With this fonction Eclipse RCP applications would be able to implement Portal Application. 


The toolbar can now be hidden from the context menu on the toolbar or (on OS X) the "hide toolbar" window trim button.  

Christian, if you feel your bug is not a dupe of this bug please comment on the original to that effect.  

Marking this one as fixed.
Verified in 20070321-0100</WithStack>
    <WithOutStack>in most of my perspectives I do not use any of the buttons on the toolbar.  I 
have tried disabling the actions related to the toolbar buttons but this often 
has the side-effect of diabling the related key strokes making the function 
hard to use (e.g., ctrl-shft-T does not work if the Open Type tool bar button 
is disabled).

One option would be to retain the key bindings but disable the presentation of 
the buttons.  Then a user could disable all the buttons.  If there are no 
enabled buttons then the tool bar should be coded to not draw.

Another option is to simply bracket the drawing of the toolbar with a 
preference that allows the user to turn it off.

This combined with bug 68878 would allow the creation (through preference 
settings) of prespectives in the Eclipse IDE which have just the menubar.  This 
is a major win for people with limited real estate or wanting to use many 
windows.
We have an option (usable via RCP and used currently by the maximized intro) for
hiding the toolbar and perspective bar already.  Perhaps we could put a flag
into the perspective extension specifying that it should not show the bar?
*** Bug 88984 has been marked as a duplicate of this bug. ***
Bug  88984 has been marked as a duplicate of 68879 

I don't think so : it's not a function to change the content of IDE or RCP perspectives, suppress toolbar and other, it's only an action to put the perspective's space in fullscreen mode. 
In the bug 88984, I suggest to implement a full screen mode with auto hidden menus, toolbars, perpective bar and status bar like Firefox, AvantBrowser overIE,... This would be done with a actions (F11 key perhaps) but also programmaticly.

With this fonction Eclipse RCP applications would be able to implement Portal Application. 


The toolbar can now be hidden from the context menu on the toolbar or (on OS X) the "hide toolbar" window trim button.  

Christian, if you feel your bug is not a dupe of this bug please comment on the original to that effect.  

Marking this one as fixed.
Verified in 20070321-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68880" />
    <CreationDate amount="2004-06-29 12:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Progress] NewProgressViewer uses hard coded colours</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="249" end="306" />
        <code>linkColor= display.getSystemColor(SWT.COLOR_DARK_BLUE);</code>
      </source_code>
      <source_code type="assignment">
        <location start="307" end="360" />
        <code>linkColor2= display.getSystemColor(SWT.COLOR_BLUE);</code>
      </source_code>
      <source_code type="assignment">
        <location start="361" end="418" />
        <code>errorColor= display.getSystemColor(SWT.COLOR_DARK_RED);</code>
      </source_code>
      <source_code type="assignment">
        <location start="419" end="472" />
        <code>errorColor2= display.getSystemColor(SWT.COLOR_RED);</code>
      </source_code>
      <source_code type="assignment">
        <location start="473" end="534" />
        <code>highlightColor= display.getSystemColor(SWT.COLOR_DARK_RED);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>R3.0

The NewProgressViewer uses a series of hard coded colours for its hyperlinks. 
It should use the values set in the workbench.

You should use
HYPERLINK_COLOR
ACTIVE_HYPERLINK_COLOR
ERROR_COLOR

from JFacePreferences

here is the problem code

		linkColor= display.getSystemColor(SWT.COLOR_DARK_BLUE);
		linkColor2= display.getSystemColor(SWT.COLOR_BLUE);
		errorColor= display.getSystemColor(SWT.COLOR_DARK_RED);
		errorColor2= display.getSystemColor(SWT.COLOR_RED);
		highlightColor= display.getSystemColor(SWT.COLOR_DARK_RED);
Fixed in build &gt;20040915. 
Verified in 200409210800</WithStack>
    <WithOutStack>R3.0

The NewProgressViewer uses a series of hard coded colours for its hyperlinks. 
It should use the values set in the workbench.

You should use
HYPERLINK_COLOR
ACTIVE_HYPERLINK_COLOR
ERROR_COLOR

from JFacePreferences

here is the problem code

		linkColor= display.getSystemColor(SWT.COLOR_DARK_BLUE);
		linkColor2= display.getSystemColor(SWT.COLOR_BLUE);
		errorColor= display.getSystemColor(SWT.COLOR_DARK_RED);
		errorColor2= display.getSystemColor(SWT.COLOR_RED);
		highlightColor= display.getSystemColor(SWT.COLOR_DARK_RED);
Fixed in build &gt;20040915. 
Verified in 200409210800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68881" />
    <CreationDate amount="2004-06-29 12:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>3.0 Core dumps on Mandrake Linux 10.0 official release</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When starting eclipse 3.0 from a desktop icon, I get a core dump.

Envionment

Eclipse 3.0 
Mandrake 10.0
kernel 2.6.3
NVIDIA 5336 driver
Pentium4 1.8GHZ
NVIDIA GeForceFX 5200 video card
Intel motherboard
1GB ram
JVM 1.4.2_04



---------------------------Start of hs_err_XXX.log --------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x4D88853C
Function=XftCharIndex+0x1C
Library=/usr/X11R6/lib/libXft.so.2

Current Java thread:
	at org.eclipse.swt.internal.motif.OS.XtDispatchEvent(Native Method)
	- locked &lt;0x48b0fa30&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.Display.update(Display.java:3429)
	at org.eclipse.swt.widgets.Shell.setVisible(Shell.java:1384)
	at org.eclipse.swt.widgets.Shell.open(Shell.java:1023)
	at org.eclipse.jface.window.Window.open(Window.java:644)
	at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
	at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
	at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
08048000-0804e000 r-xp 00000000 03:02 2492068    /usr/java/j2sdk1.4.2_04/bin/java
0804e000-0804f000 rw-p 00005000 03:02 2492068    /usr/java/j2sdk1.4.2_04/bin/java
40000000-40016000 r-xp 00000000 03:01 2534575    /lib/ld-2.3.3.so
40016000-40017000 rw-p 00015000 03:01 2534575    /lib/ld-2.3.3.so
4002c000-40039000 r-xp 00000000 03:01 2534619    /lib/tls/libpthread-0.10.so
40039000-4003a000 rw-p 0000d000 03:01 2534619    /lib/tls/libpthread-0.10.so
4003c000-4003e000 r-xp 00000000 03:01 2534586    /lib/libdl-2.3.3.so
4003e000-4003f000 rw-p 00001000 03:01 2534586    /lib/libdl-2.3.3.so
4003f000-40181000 r-xp 00000000 03:01 2534615    /lib/tls/libc-2.3.3.so
40181000-40184000 rw-p 00142000 03:01 2534615    /lib/tls/libc-2.3.3.so
40188000-40583000 r-xp 00000000 03:02 2475803   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/client/libjvm.so
40583000-4059e000 rw-p 003fa000 03:02 2475803   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/client/libjvm.so
405b1000-405b9000 r-xp 00000000 03:02 2475797   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/native_threads/libhpi.so
405b9000-405ba000 rw-p 00007000 03:02 2475797   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/native_threads/libhpi.so

405c4000-405d4000 r-xp 00000000 03:01 2534590    /lib/libnsl-2.3.3.so
405d4000-405d5000 rw-p 00010000 03:01 2534590    /lib/libnsl-2.3.3.so
405d7000-405f9000 r-xp 00000000 03:01 2534617    /lib/tls/libm-2.3.3.so
405f9000-405fa000 rw-p 00021000 03:01 2534617    /lib/tls/libm-2.3.3.so
405fa000-405fe000 rw-s 00000000 03:01 2174826    /tmp/hsperfdata_root/2962
4060d000-40617000 r-xp 00000000 03:01 2534596    /lib/libnss_files-2.3.3.so
40617000-40618000 rw-p 00009000 03:01 2534596    /lib/libnss_files-2.3.3.so
40618000-40628000 r-xp 00000000 03:02 2475808   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libverify.so
40628000-4062a000 rw-p 0000f000 03:02 2475808   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libverify.so
4062a000-4064a000 r-xp 00000000 03:02 2475809   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libjava.so
4064a000-4064c000 rw-p 0001f000 03:02 2475809   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libjava.so
4064c000-40660000 r-xp 00000000 03:02 2475811   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libzip.so
40660000-40663000 rw-p 00013000 03:02 2475811   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libzip.so
40663000-42003000 r--s 00000000 03:02 2476420   
/usr/java/j2sdk1.4.2_04/jre/lib/rt.jar
4204d000-42063000 r--s 00000000 03:02 2475838   
/usr/java/j2sdk1.4.2_04/jre/lib/sunrsasign.jar
42063000-4213e000 r--s 00000000 03:02 2476328   
/usr/java/j2sdk1.4.2_04/jre/lib/jsse.jar
4213e000-4214f000 r--s 00000000 03:02 2475839   
/usr/java/j2sdk1.4.2_04/jre/lib/jce.jar
4214f000-426a8000 r--s 00000000 03:02 2476366   
/usr/java/j2sdk1.4.2_04/jre/lib/charsets.jar
4c953000-4c97f000 r--p 00000000 03:02 1938623   
/usr/share/locale/ISO-8859-1/LC_CTYPE
4cb83000-4cb9f000 r--s 00000000 03:02 2475834   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/sunjce_provider.jar

4cb9f000-4cba2000 r--s 00000000 03:02 2475835   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/dnsns.jar
4cba2000-4cbaf000 r--s 00000000 03:02 2475837   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/ldapsec.jar
4cbaf000-4cc6b000 r--s 00000000 03:02 2476367   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/localedata.jar
4cc6b000-4cc70000 r--s 00000000 03:01 34259      /opt/eclipse/startup.jar
4ccf1000-4cd29000 r--s 00000000 03:01 32720     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/core.jar
4cd29000-4cd31000 r--s 00000000 03:01 32721     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/console.jar
4cd31000-4cd3d000 r--s 00000000 03:01 32719     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/osgi.jar
4cd3d000-4cd53000 r--s 00000000 03:01 32723     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/resolver.jar
4cd53000-4cd69000 r--s 00000000 03:01 32724     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/defaultAdaptor.jar
4cd69000-4cd88000 r--s 00000000 03:01 32722     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/eclipseAdaptor.jar
4ce8a000-4ce9a000 r-xp 00000000 03:02 2475814   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnet.so
4ce9a000-4ce9b000 rw-p 0000f000 03:02 2475814   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnet.so
4ce9b000-4ce9c000 r--s 00000000 03:01 65812     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt-gtk.jar
4cf1f000-4cf76000 r--s 00000000 03:01 32882     
/opt/eclipse/plugins/org.eclipse.core.runtime_3.0.0/runtime.jar
4cf76000-4cf7c000 r-xp 00000000 03:02 2475815   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnio.so
4cf7c000-4cf7d000 rw-p 00005000 03:02 2475815   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnio.so
4cf7d000-4cf91000 r--s 00000000 03:01 65838     
/opt/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
4cf91000-4d0df000 r--s 00000000 03:01 33853     
/opt/eclipse/plugins/org.eclipse.ui.ide_3.0.0/ide.jar
4d0df000-4d0f4000 r--s 00000000 03:01 33409     
/opt/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
4d0f4000-4d0f5000 r--s 00000000 03:01 65834     
/opt/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar
4d0f5000-4d328000 r--s 00000000 03:01 33404     
/opt/eclipse/plugins/org.eclipse.ui.workbench_3.0.0/workbench.jar

4d328000-4d3a6000 r--s 00000000 03:01 34239     
/opt/eclipse/plugins/org.eclipse.jface_3.0.0/jface.jar
4d3a6000-4d3b9000 r--s 00000000 03:01 65813     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt-mozilla.jar
4d3b9000-4d4b6000 r--s 00000000 03:01 65814     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt.jar
4d4b6000-4d4b7000 r--s 00000000 03:01 49901     
/opt/eclipse/plugins/org.eclipse.ui_3.0.0/ui.jar
4d4b7000-4d4fd000 r-xp 00000000 03:01 65822     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/os/linux/x86/libswt-motif-3062.so
4d4fd000-4d500000 rw-p 00046000 03:01 65822     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/os/linux/x86/libswt-motif-3062.so
4d500000-4d502000 r-xp 00000000 03:02 1205327   
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
4d502000-4d503000 rw-p 00001000 03:02 1205327   
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
4d503000-4d504000 r--p 00000000 03:02 1938980   
/usr/share/locale/en_US/LC_IDENTIFICATION
4d504000-4d505000 r--p 00000000 03:02 1938979   
/usr/share/locale/en_US/LC_MEASUREMENT
4d505000-4d506000 r--p 00000000 03:02 1938973   
/usr/share/locale/en_US/LC_TELEPHONE
4d506000-4d507000 r--p 00000000 03:02 1938981    /usr/share/locale/en_US/LC_ADDRESS
4d507000-4d508000 r--p 00000000 03:02 1938976    /usr/share/locale/en_US/LC_NAME
4d508000-4d509000 r--p 00000000 03:02 1938974    /usr/share/locale/en_US/LC_PAPER
4d509000-4d50a000 r--p 00000000 03:02 1938978   
/usr/share/locale/en_US/LC_MESSAGES/SYS_LC_MESSAGES
4d50a000-4d50b000 r--p 00000000 03:02 1938977    /usr/share/locale/en_US/LC_MONETARY
4d50b000-4d511000 r--p 00000000 03:02 1938624   
/usr/share/locale/ISO-8859-1/LC_COLLATE
4d511000-4d512000 r--p 00000000 03:02 1938972    /usr/share/locale/en_US/LC_TIME
4d512000-4d513000 r--p 00000000 03:02 1938975    /usr/share/locale/en_US/LC_NUMERIC
4d513000-4d687000 r-xp 00000000 03:02 1208728    /usr/X11R6/lib/libXm.so.2.0.1
4d687000-4d698000 rw-p 00174000 03:02 1208728    /usr/X11R6/lib/libXm.so.2.0.1
4d69b000-4d77a000 r-xp 00000000 03:02 1205343    /usr/X11R6/lib/libX11.so.6.2
4d77a000-4d77d000 rw-p 000de000 03:02 1205343    /usr/X11R6/lib/libX11.so.6.2
4d77d000-4d78a000 r-xp 00000000 03:02 1205353    /usr/X11R6/lib/libXext.so.6.4
4d78a000-4d78b000 rw-p 0000d000 03:02 1205353    /usr/X11R6/lib/libXext.so.6.4
4d78b000-4d7db000 r-xp 00000000 03:02 1205377    /usr/X11R6/lib/libXt.so.6.0
4d7db000-4d7df000 rw-p 0004f000 03:02 1205377    /usr/X11R6/lib/libXt.so.6.0
4d7df000-4d7e6000 r-xp 00000000 03:02 1205369    /usr/X11R6/lib/libXp.so.6.2
4d7e6000-4d7e7000 rw-p 00006000 03:02 1205369    /usr/X11R6/lib/libXp.so.6.2
4d7e7000-4d7ec000 r-xp 00000000 03:02 1205379    /usr/X11R6/lib/libXtst.so.6.1
4d7ec000-4d7ed000 rw-p 00004000 03:02 1205379    /usr/X11R6/lib/libXtst.so.6.1
4d7ed000-4d7f5000 r-xp 00000000 03:02 1205341    /usr/X11R6/lib/libSM.so.6.0
4d7f5000-4d7f6000 rw-p 00007000 03:02 1205341    /usr/X11R6/lib/libSM.so.6.0
4d7f6000-4d80a000 r-xp 00000000 03:02 1205337    /usr/X11R6/lib/libICE.so.6.3
4d80a000-4d80c000 rw-p 00013000 03:02 1205337    /usr/X11R6/lib/libICE.so.6.3
4d80d000-4d865000 r-xp 00000000 03:02 913797     /usr/lib/libfreetype.so.6.3.5
4d865000-4d86c000 rw-p 00057000 03:02 913797     /usr/lib/libfreetype.so.6.3.5
4d86c000-4d87c000 r-xp 00000000 03:01 2534684    /lib/libz.so.1.2.1
4d87c000-4d87d000 rw-p 00010000 03:01 2534684    /lib/libz.so.1.2.1
4d87d000-4d88e000 r-xp 00000000 03:02 1205359    /usr/X11R6/lib/libXft.so.2.1.1
4d88e000-4d88f000 rw-p 00011000 03:02 1205359    /usr/X11R6/lib/libXft.so.2.1.1
4d88f000-4d896000 r-xp 00000000 03:02 1205373    /usr/X11R6/lib/libXrender.so.1.2.2
4d896000-4d897000 rw-p 00007000 03:02 1205373    /usr/X11R6/lib/libXrender.so.1.2.2
4d897000-4d8bb000 r-xp 00000000 03:02 913898     /usr/lib/libfontconfig.so.1.0.4
4d8bb000-4d8be000 rw-p 00024000 03:02 913898     /usr/lib/libfontconfig.so.1.0.4
4d8bf000-4d8de000 r-xp 00000000 03:02 913799     /usr/lib/libexpat.so.0.4.0
4d8de000-4d8e0000 rw-p 0001e000 03:02 913799     /usr/lib/libexpat.so.0.4.0
4d8e0000-4d8e9000 r-xp 00000000 03:02 1205331   
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
4d8e9000-4d8ea000 rw-p 00008000 03:02 1205331   
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
4d8f3000-4d8fb000 r-xp 00000000 03:02 1205351    /usr/X11R6/lib/libXcursor.so.1.0
4d8fb000-4d8fc000 rw-p 00007000 03:02 1205351    /usr/X11R6/lib/libXcursor.so.1.0
4d8fc000-4d919000 r-xp 00000000 03:02 1205326   
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
4d919000-4d91b000 rw-p 0001c000 03:02 1205326   
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
4d91c000-4d91d000 r-xp 00000000 03:02 912268     /usr/lib/gconv/ISO8859-1.so
4d91d000-4d91e000 rw-p 00001000 03:02 912268     /usr/lib/gconv/ISO8859-1.so
Heap at VM Abort:
Heap
 def new generation   total 576K, used 129K [0x44750000, 0x447f0000, 0x44c30000)
  eden space 512K,  24% used [0x44750000, 0x4476faa8, 0x447d0000)
  from space 64K,   5% used [0x447d0000, 0x447d0d38, 0x447e0000)
  to   space 64K,   0% used [0x447e0000, 0x447e0000, 0x447f0000)
 tenured generation   total 3972K, used 3944K [0x44c30000, 0x45011000, 0x48750000)
   the space 3972K,  99% used [0x44c30000, 0x4500a330, 0x4500a400, 0x45011000)
 compacting perm gen  total 4608K, used 4400K [0x48750000, 0x48bd0000, 0x4c750000)
   the space 4608K,  95% used [0x48750000, 0x48b9c000, 0x48b9c000, 0x48bd0000)

Local Time = Mon Jun 28 16:23:42 2004
Elapsed Time = 5
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode)
#


---------------------------End of hs_err_XXX.log --------------
Created attachment 12880
stack trace
Some versions of Linux ship with a LessTif library rather than an open motif 
library.  There are known problems with LessTif.  See:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#usingLesstif

Please follow these instructions and report whether you can launch eclipse.
*** Bug 72763 has been marked as a duplicate of this bug. ***
I've reproduced the problem on Mandrake 10.0, and it is what Veronika suggested,
that lesstif is being picked up.  Eclipse runs fine for me if I cd into its root
directory and run it with ./eclipse.  Closing report.</WithStack>
    <WithOutStack>When starting eclipse 3.0 from a desktop icon, I get a core dump.

Envionment

Eclipse 3.0 
Mandrake 10.0
kernel 2.6.3
NVIDIA 5336 driver
Pentium4 1.8GHZ
NVIDIA GeForceFX 5200 video card
Intel motherboard
1GB ram
JVM 1.4.2_04



---------------------------Start of hs_err_XXX.log --------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x4D88853C
Function=XftCharIndex+0x1C
Library=/usr/X11R6/lib/libXft.so.2

Current Java thread:
	at org.eclipse.swt.internal.motif.OS.XtDispatchEvent(Native Method)
	- locked &lt;0x48b0fa30&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.Display.update(Display.java:3429)
	at org.eclipse.swt.widgets.Shell.setVisible(Shell.java:1384)
	at org.eclipse.swt.widgets.Shell.open(Shell.java:1023)
	at org.eclipse.jface.window.Window.open(Window.java:644)
	at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
	at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
	at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
08048000-0804e000 r-xp 00000000 03:02 2492068    /usr/java/j2sdk1.4.2_04/bin/java
0804e000-0804f000 rw-p 00005000 03:02 2492068    /usr/java/j2sdk1.4.2_04/bin/java
40000000-40016000 r-xp 00000000 03:01 2534575    /lib/ld-2.3.3.so
40016000-40017000 rw-p 00015000 03:01 2534575    /lib/ld-2.3.3.so
4002c000-40039000 r-xp 00000000 03:01 2534619    /lib/tls/libpthread-0.10.so
40039000-4003a000 rw-p 0000d000 03:01 2534619    /lib/tls/libpthread-0.10.so
4003c000-4003e000 r-xp 00000000 03:01 2534586    /lib/libdl-2.3.3.so
4003e000-4003f000 rw-p 00001000 03:01 2534586    /lib/libdl-2.3.3.so
4003f000-40181000 r-xp 00000000 03:01 2534615    /lib/tls/libc-2.3.3.so
40181000-40184000 rw-p 00142000 03:01 2534615    /lib/tls/libc-2.3.3.so
40188000-40583000 r-xp 00000000 03:02 2475803   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/client/libjvm.so
40583000-4059e000 rw-p 003fa000 03:02 2475803   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/client/libjvm.so
405b1000-405b9000 r-xp 00000000 03:02 2475797   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/native_threads/libhpi.so
405b9000-405ba000 rw-p 00007000 03:02 2475797   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/native_threads/libhpi.so

405c4000-405d4000 r-xp 00000000 03:01 2534590    /lib/libnsl-2.3.3.so
405d4000-405d5000 rw-p 00010000 03:01 2534590    /lib/libnsl-2.3.3.so
405d7000-405f9000 r-xp 00000000 03:01 2534617    /lib/tls/libm-2.3.3.so
405f9000-405fa000 rw-p 00021000 03:01 2534617    /lib/tls/libm-2.3.3.so
405fa000-405fe000 rw-s 00000000 03:01 2174826    /tmp/hsperfdata_root/2962
4060d000-40617000 r-xp 00000000 03:01 2534596    /lib/libnss_files-2.3.3.so
40617000-40618000 rw-p 00009000 03:01 2534596    /lib/libnss_files-2.3.3.so
40618000-40628000 r-xp 00000000 03:02 2475808   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libverify.so
40628000-4062a000 rw-p 0000f000 03:02 2475808   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libverify.so
4062a000-4064a000 r-xp 00000000 03:02 2475809   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libjava.so
4064a000-4064c000 rw-p 0001f000 03:02 2475809   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libjava.so
4064c000-40660000 r-xp 00000000 03:02 2475811   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libzip.so
40660000-40663000 rw-p 00013000 03:02 2475811   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libzip.so
40663000-42003000 r--s 00000000 03:02 2476420   
/usr/java/j2sdk1.4.2_04/jre/lib/rt.jar
4204d000-42063000 r--s 00000000 03:02 2475838   
/usr/java/j2sdk1.4.2_04/jre/lib/sunrsasign.jar
42063000-4213e000 r--s 00000000 03:02 2476328   
/usr/java/j2sdk1.4.2_04/jre/lib/jsse.jar
4213e000-4214f000 r--s 00000000 03:02 2475839   
/usr/java/j2sdk1.4.2_04/jre/lib/jce.jar
4214f000-426a8000 r--s 00000000 03:02 2476366   
/usr/java/j2sdk1.4.2_04/jre/lib/charsets.jar
4c953000-4c97f000 r--p 00000000 03:02 1938623   
/usr/share/locale/ISO-8859-1/LC_CTYPE
4cb83000-4cb9f000 r--s 00000000 03:02 2475834   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/sunjce_provider.jar

4cb9f000-4cba2000 r--s 00000000 03:02 2475835   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/dnsns.jar
4cba2000-4cbaf000 r--s 00000000 03:02 2475837   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/ldapsec.jar
4cbaf000-4cc6b000 r--s 00000000 03:02 2476367   
/usr/java/j2sdk1.4.2_04/jre/lib/ext/localedata.jar
4cc6b000-4cc70000 r--s 00000000 03:01 34259      /opt/eclipse/startup.jar
4ccf1000-4cd29000 r--s 00000000 03:01 32720     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/core.jar
4cd29000-4cd31000 r--s 00000000 03:01 32721     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/console.jar
4cd31000-4cd3d000 r--s 00000000 03:01 32719     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/osgi.jar
4cd3d000-4cd53000 r--s 00000000 03:01 32723     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/resolver.jar
4cd53000-4cd69000 r--s 00000000 03:01 32724     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/defaultAdaptor.jar
4cd69000-4cd88000 r--s 00000000 03:01 32722     
/opt/eclipse/plugins/org.eclipse.osgi_3.0.0/eclipseAdaptor.jar
4ce8a000-4ce9a000 r-xp 00000000 03:02 2475814   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnet.so
4ce9a000-4ce9b000 rw-p 0000f000 03:02 2475814   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnet.so
4ce9b000-4ce9c000 r--s 00000000 03:01 65812     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt-gtk.jar
4cf1f000-4cf76000 r--s 00000000 03:01 32882     
/opt/eclipse/plugins/org.eclipse.core.runtime_3.0.0/runtime.jar
4cf76000-4cf7c000 r-xp 00000000 03:02 2475815   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnio.so
4cf7c000-4cf7d000 rw-p 00005000 03:02 2475815   
/usr/java/j2sdk1.4.2_04/jre/lib/i386/libnio.so
4cf7d000-4cf91000 r--s 00000000 03:01 65838     
/opt/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
4cf91000-4d0df000 r--s 00000000 03:01 33853     
/opt/eclipse/plugins/org.eclipse.ui.ide_3.0.0/ide.jar
4d0df000-4d0f4000 r--s 00000000 03:01 33409     
/opt/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
4d0f4000-4d0f5000 r--s 00000000 03:01 65834     
/opt/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar
4d0f5000-4d328000 r--s 00000000 03:01 33404     
/opt/eclipse/plugins/org.eclipse.ui.workbench_3.0.0/workbench.jar

4d328000-4d3a6000 r--s 00000000 03:01 34239     
/opt/eclipse/plugins/org.eclipse.jface_3.0.0/jface.jar
4d3a6000-4d3b9000 r--s 00000000 03:01 65813     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt-mozilla.jar
4d3b9000-4d4b6000 r--s 00000000 03:01 65814     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/ws/motif/swt.jar
4d4b6000-4d4b7000 r--s 00000000 03:01 49901     
/opt/eclipse/plugins/org.eclipse.ui_3.0.0/ui.jar
4d4b7000-4d4fd000 r-xp 00000000 03:01 65822     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/os/linux/x86/libswt-motif-3062.so
4d4fd000-4d500000 rw-p 00046000 03:01 65822     
/opt/eclipse/plugins/org.eclipse.swt.motif_3.0.0/os/linux/x86/libswt-motif-3062.so
4d500000-4d502000 r-xp 00000000 03:02 1205327   
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
4d502000-4d503000 rw-p 00001000 03:02 1205327   
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
4d503000-4d504000 r--p 00000000 03:02 1938980   
/usr/share/locale/en_US/LC_IDENTIFICATION
4d504000-4d505000 r--p 00000000 03:02 1938979   
/usr/share/locale/en_US/LC_MEASUREMENT
4d505000-4d506000 r--p 00000000 03:02 1938973   
/usr/share/locale/en_US/LC_TELEPHONE
4d506000-4d507000 r--p 00000000 03:02 1938981    /usr/share/locale/en_US/LC_ADDRESS
4d507000-4d508000 r--p 00000000 03:02 1938976    /usr/share/locale/en_US/LC_NAME
4d508000-4d509000 r--p 00000000 03:02 1938974    /usr/share/locale/en_US/LC_PAPER
4d509000-4d50a000 r--p 00000000 03:02 1938978   
/usr/share/locale/en_US/LC_MESSAGES/SYS_LC_MESSAGES
4d50a000-4d50b000 r--p 00000000 03:02 1938977    /usr/share/locale/en_US/LC_MONETARY
4d50b000-4d511000 r--p 00000000 03:02 1938624   
/usr/share/locale/ISO-8859-1/LC_COLLATE
4d511000-4d512000 r--p 00000000 03:02 1938972    /usr/share/locale/en_US/LC_TIME
4d512000-4d513000 r--p 00000000 03:02 1938975    /usr/share/locale/en_US/LC_NUMERIC
4d513000-4d687000 r-xp 00000000 03:02 1208728    /usr/X11R6/lib/libXm.so.2.0.1
4d687000-4d698000 rw-p 00174000 03:02 1208728    /usr/X11R6/lib/libXm.so.2.0.1
4d69b000-4d77a000 r-xp 00000000 03:02 1205343    /usr/X11R6/lib/libX11.so.6.2
4d77a000-4d77d000 rw-p 000de000 03:02 1205343    /usr/X11R6/lib/libX11.so.6.2
4d77d000-4d78a000 r-xp 00000000 03:02 1205353    /usr/X11R6/lib/libXext.so.6.4
4d78a000-4d78b000 rw-p 0000d000 03:02 1205353    /usr/X11R6/lib/libXext.so.6.4
4d78b000-4d7db000 r-xp 00000000 03:02 1205377    /usr/X11R6/lib/libXt.so.6.0
4d7db000-4d7df000 rw-p 0004f000 03:02 1205377    /usr/X11R6/lib/libXt.so.6.0
4d7df000-4d7e6000 r-xp 00000000 03:02 1205369    /usr/X11R6/lib/libXp.so.6.2
4d7e6000-4d7e7000 rw-p 00006000 03:02 1205369    /usr/X11R6/lib/libXp.so.6.2
4d7e7000-4d7ec000 r-xp 00000000 03:02 1205379    /usr/X11R6/lib/libXtst.so.6.1
4d7ec000-4d7ed000 rw-p 00004000 03:02 1205379    /usr/X11R6/lib/libXtst.so.6.1
4d7ed000-4d7f5000 r-xp 00000000 03:02 1205341    /usr/X11R6/lib/libSM.so.6.0
4d7f5000-4d7f6000 rw-p 00007000 03:02 1205341    /usr/X11R6/lib/libSM.so.6.0
4d7f6000-4d80a000 r-xp 00000000 03:02 1205337    /usr/X11R6/lib/libICE.so.6.3
4d80a000-4d80c000 rw-p 00013000 03:02 1205337    /usr/X11R6/lib/libICE.so.6.3
4d80d000-4d865000 r-xp 00000000 03:02 913797     /usr/lib/libfreetype.so.6.3.5
4d865000-4d86c000 rw-p 00057000 03:02 913797     /usr/lib/libfreetype.so.6.3.5
4d86c000-4d87c000 r-xp 00000000 03:01 2534684    /lib/libz.so.1.2.1
4d87c000-4d87d000 rw-p 00010000 03:01 2534684    /lib/libz.so.1.2.1
4d87d000-4d88e000 r-xp 00000000 03:02 1205359    /usr/X11R6/lib/libXft.so.2.1.1
4d88e000-4d88f000 rw-p 00011000 03:02 1205359    /usr/X11R6/lib/libXft.so.2.1.1
4d88f000-4d896000 r-xp 00000000 03:02 1205373    /usr/X11R6/lib/libXrender.so.1.2.2
4d896000-4d897000 rw-p 00007000 03:02 1205373    /usr/X11R6/lib/libXrender.so.1.2.2
4d897000-4d8bb000 r-xp 00000000 03:02 913898     /usr/lib/libfontconfig.so.1.0.4
4d8bb000-4d8be000 rw-p 00024000 03:02 913898     /usr/lib/libfontconfig.so.1.0.4
4d8bf000-4d8de000 r-xp 00000000 03:02 913799     /usr/lib/libexpat.so.0.4.0
4d8de000-4d8e0000 rw-p 0001e000 03:02 913799     /usr/lib/libexpat.so.0.4.0
4d8e0000-4d8e9000 r-xp 00000000 03:02 1205331   
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
4d8e9000-4d8ea000 rw-p 00008000 03:02 1205331   
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
4d8f3000-4d8fb000 r-xp 00000000 03:02 1205351    /usr/X11R6/lib/libXcursor.so.1.0
4d8fb000-4d8fc000 rw-p 00007000 03:02 1205351    /usr/X11R6/lib/libXcursor.so.1.0
4d8fc000-4d919000 r-xp 00000000 03:02 1205326   
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
4d919000-4d91b000 rw-p 0001c000 03:02 1205326   
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
4d91c000-4d91d000 r-xp 00000000 03:02 912268     /usr/lib/gconv/ISO8859-1.so
4d91d000-4d91e000 rw-p 00001000 03:02 912268     /usr/lib/gconv/ISO8859-1.so
Heap at VM Abort:
Heap
 def new generation   total 576K, used 129K [0x44750000, 0x447f0000, 0x44c30000)
  eden space 512K,  24% used [0x44750000, 0x4476faa8, 0x447d0000)
  from space 64K,   5% used [0x447d0000, 0x447d0d38, 0x447e0000)
  to   space 64K,   0% used [0x447e0000, 0x447e0000, 0x447f0000)
 tenured generation   total 3972K, used 3944K [0x44c30000, 0x45011000, 0x48750000)
   the space 3972K,  99% used [0x44c30000, 0x4500a330, 0x4500a400, 0x45011000)
 compacting perm gen  total 4608K, used 4400K [0x48750000, 0x48bd0000, 0x4c750000)
   the space 4608K,  95% used [0x48750000, 0x48b9c000, 0x48b9c000, 0x48bd0000)

Local Time = Mon Jun 28 16:23:42 2004
Elapsed Time = 5
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode)
#


---------------------------End of hs_err_XXX.log --------------
Created attachment 12880
stack trace
Some versions of Linux ship with a LessTif library rather than an open motif 
library.  There are known problems with LessTif.  See:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#usingLesstif

Please follow these instructions and report whether you can launch eclipse.
*** Bug 72763 has been marked as a duplicate of this bug. ***
I've reproduced the problem on Mandrake 10.0, and it is what Veronika suggested,
that lesstif is being picked up.  Eclipse runs fine for me if I cd into its root
directory and run it with ./eclipse.  Closing report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68882" />
    <CreationDate amount="2004-06-29 12:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[refactoring] rename method on method use broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="12" end="67" />
        <code>Iterator i = entry.getAllRecurrentEntries().iterator();</code>
      </source_code>
      <source_code type="assignment">
        <location start="379" end="434" />
        <code>Iterator i = entry.getAllRecurrentEntries().iterator();</code>
      </source_code>
      <source_code type="package">
        <location start="518" end="528" />
        <code>package p;</code>
      </source_code>
      <source_code type="import">
        <location start="529" end="552" />
        <code>import java.util.List;</code>
      </source_code>
      <source_code type="class">
        <location start="554" end="634" />
        <code>public class Entry {
	public List getAllRecurrentEntries() {
		return null;
	}
}</code>
      </source_code>
      <source_code type="package">
        <location start="637" end="647" />
        <code>package p;</code>
      </source_code>
      <source_code type="import">
        <location start="648" end="675" />
        <code>import java.util.Iterator;</code>
      </source_code>
      <source_code type="class">
        <location start="677" end="798" />
        <code>public class A {
	public void foo() {
		Entry entry= null;
		Iterator i = entry.getAllRecurrentEntries().iterator();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In my code:
Iterator i = entry.getAllRecurrentEntries().iterator();

I selected 'getAllRecurrentEntries' and chose rename from the context menu.
I entered a new name. The original method was sucessfully renamed but this
ocurrence was missed and I ended up with a compile error.
Move to JDT/UI
Ortwin,

can you provide more steps to reproduce this. Did the class which contained

Iterator i = entry.getAllRecurrentEntries().iterator();

has any compile errors.

I tested the following sceanrio and that worked for me:

package p;

import java.util.List;

public class Entry {
	public List getAllRecurrentEntries() {
		return null;
	}
}


package p;

import java.util.Iterator;

public class A {
	public void foo() {
		Entry entry= null;
		Iterator i = entry.getAllRecurrentEntries().iterator();
	}
}


It's likely that class A had compile errors. I can reproduce the problem only if
class A has compile errors. I am not sure if this bahviour is intended. It could
certainly be improved though. 
The method name in A was selected and the rename was executed through the
context menu. So I expect the method be also renamed in class A even if A does
not compile. The rename did succeed in all other places of the project.</WithStack>
    <WithOutStack>In my code:
Iterator i = entry.getAllRecurrentEntries().iterator();

I selected 'getAllRecurrentEntries' and chose rename from the context menu.
I entered a new name. The original method was sucessfully renamed but this
ocurrence was missed and I ended up with a compile error.
Move to JDT/UI
Ortwin,

can you provide more steps to reproduce this. Did the class which contained

Iterator i = entry.getAllRecurrentEntries().iterator();

has any compile errors.

I tested the following sceanrio and that worked for me:

package p;

import java.util.List;

public class Entry {
	public List getAllRecurrentEntries() {
		return null;
	}
}


package p;

import java.util.Iterator;

public class A {
	public void foo() {
		Entry entry= null;
		Iterator i = entry.getAllRecurrentEntries().iterator();
	}
}


It's likely that class A had compile errors. I can reproduce the problem only if
class A has compile errors. I am not sure if this bahviour is intended. It could
certainly be improved though. 
The method name in A was selected and the rename was executed through the
context menu. So I expect the method be also renamed in class A even if A does
not compile. The rename did succeed in all other places of the project.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68883" />
    <CreationDate amount="2004-06-29 12:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>C/C++ Browsing's Namespace does not find std globals</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="320" end="362" />
        <code>main(int argc, char **argv) {
	return 0;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Create a new Std Make C project</Line>
          <Line>2. Open the Browsing perspective</Line>
          <Line>3. Go back to C/C++, add test.c which contains:</Line>
          <Line>struct S1</Line>
          <Line>{</Line>
          <Line>int x;</Line>
          <Line>};</Line>
          <Line />
          <Line>int</Line>
          <Line />
          <Line />
          <Line>4. Add #include &lt;stdio.h&gt; to the top.</Line>
          <Line>5. From C/C++ Browsing perspective,</Line>
          <Line>select your C Project, then Namespace=(global)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>CDT 2.0.0.200406280300

Windows with Cygwin.
Reproduced on Linux too.

We're seeing odd behaviour with the Browsing perspective.
I think this defect summarizes our problems.

1. Create a new Std Make C project
2. Open the Browsing perspective
3. Go back to C/C++, add test.c which contains:
struct S1
{
	int x;
};

int 
main(int argc, char **argv) {
	return 0;
}

4. Add #include &lt;stdio.h&gt; to the top.
5. From C/C++ Browsing perspective,
select your C Project, then Namespace=(global)

Types view contains S1.

Expected: It should also contain anything you added since step 2, or 3.
This include a bunch of stuff in &lt;stdio.h&gt;

If you close the Namespace view, then reopen it, it behaves correctly.
(Perhaps, this is because the Indexer isn't notifying the Browsing
perspective of changes.)
PR was not targeted to any particular release. Changing target milestone to 2.1
I think this was fix, redirecting for followups.
Should be fixed now.</WithStack>
    <WithOutStack>CDT 2.0.0.200406280300

Windows with Cygwin.
Reproduced on Linux too.

We're seeing odd behaviour with the Browsing perspective.
I think this defect summarizes our problems.

1. Create a new Std Make C project
2. Open the Browsing perspective
3. Go back to C/C++, add test.c which contains:
struct S1
{
	int x;
};

int 
main(int argc, char **argv) {
	return 0;
}

4. Add #include &lt;stdio.h&gt; to the top.
5. From C/C++ Browsing perspective,
select your C Project, then Namespace=(global)

Types view contains S1.

Expected: It should also contain anything you added since step 2, or 3.
This include a bunch of stuff in &lt;stdio.h&gt;

If you close the Namespace view, then reopen it, it behaves correctly.
(Perhaps, this is because the Indexer isn't notifying the Browsing
perspective of changes.)
PR was not targeted to any particular release. Changing target milestone to 2.1
I think this was fix, redirecting for followups.
Should be fixed now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68884" />
    <CreationDate amount="2004-06-29 12:38:00 -0400" />
    <DupId amount="226159" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>File Search dialog contains chopped text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The initial dialog size of the File Search dialog should hold all the strings. 
The string
"(*=any string, ?=any character, \=escape litera..." is chopped until you 
select another tab and go back to the file tab.
I cannot reproduce this.  Does it happen all the time?  Can you show a
screenshot?  How big are your fonts?
Nevermind, I reproduced it !!!
To reproduce, set your dialog font to something large and open the Search dialog
from the resource perspective.


*** This bug has been marked as a duplicate of bug 226159 ***</WithStack>
    <WithOutStack>The initial dialog size of the File Search dialog should hold all the strings. 
The string
"(*=any string, ?=any character, \=escape litera..." is chopped until you 
select another tab and go back to the file tab.
I cannot reproduce this.  Does it happen all the time?  Can you show a
screenshot?  How big are your fonts?
Nevermind, I reproduced it !!!
To reproduce, set your dialog font to something large and open the Search dialog
from the resource perspective.


*** This bug has been marked as a duplicate of bug 226159 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68885" />
    <CreationDate amount="2004-06-29 12:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Execution of implicit target retrieving targets for Ant LCD</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>External jars added to the classpath, either as Ant Home Entries or as Global
Entried, are not recognized by the build tool.  When running the "Ant Build..."
tool, the targets referring to the external jar appear broken.  No targets are
shown to be executed.  The targets do appear and are runnable from the Outline
View.  I have been using Eclipse Version 2.1.3, and the tool works as expected
when running the tool.  This is lloks like something new in Version 3.0.

Are you sure that the launch configuration for the specific Ant build that is 
showing the problem has the JARs on its runtime classpath? 
That is, have you added the external JARs to the global classpath but the 
individual launch configuration has overridden the global classpath and thus 
does not include those JARs? See the Classpath tab in the Ant launch 
configuration dialog (opened from Ant Build...)

If this all looks correct can you please provide an example buildfile that 
exhibits the problem?


Created attachment 12882
Ant Build file
Created attachment 12883
Ant Classpath in Launch Tool
Created attachment 12884
Ant Targets in Launch Tool
Yes, the jar file does appear in the Classpath tab of the Launch Tool.  The 
jar in question is cpptasks.jar, and it is part of the antcontrib project 
located in Sourceforge.
Thank Ben.
The problem is the parsing we are using in the dialog to get the targets...it 
results in executing the implicit target which includes the compiler task 
which I believe is failing because of the special classloader that we are 
using for the parsing.

So the real bug here is the execution of top level implicit target when 
parsing for the targets in the dialog. 
The outline view correctly handles this case and therefore provides a 
workaround as Ben has already found.
Changing the summary to reflect what I believe to be the problem
With the rework of the Ant view and Ant launch configuration dialog the 
implicit target is not longer executed when retrieving the targets. 
As well the classpath is set correctly when retrieving the targets.

The problem that used to exist here (implicit target invocation using 
InternalAntRunner) is covered in bug 73602.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks; build notes updated.</WithStack>
    <WithOutStack>External jars added to the classpath, either as Ant Home Entries or as Global
Entried, are not recognized by the build tool.  When running the "Ant Build..."
tool, the targets referring to the external jar appear broken.  No targets are
shown to be executed.  The targets do appear and are runnable from the Outline
View.  I have been using Eclipse Version 2.1.3, and the tool works as expected
when running the tool.  This is lloks like something new in Version 3.0.

Are you sure that the launch configuration for the specific Ant build that is 
showing the problem has the JARs on its runtime classpath? 
That is, have you added the external JARs to the global classpath but the 
individual launch configuration has overridden the global classpath and thus 
does not include those JARs? See the Classpath tab in the Ant launch 
configuration dialog (opened from Ant Build...)

If this all looks correct can you please provide an example buildfile that 
exhibits the problem?


Created attachment 12882
Ant Build file
Created attachment 12883
Ant Classpath in Launch Tool
Created attachment 12884
Ant Targets in Launch Tool
Yes, the jar file does appear in the Classpath tab of the Launch Tool.  The 
jar in question is cpptasks.jar, and it is part of the antcontrib project 
located in Sourceforge.
Thank Ben.
The problem is the parsing we are using in the dialog to get the targets...it 
results in executing the implicit target which includes the compiler task 
which I believe is failing because of the special classloader that we are 
using for the parsing.

So the real bug here is the execution of top level implicit target when 
parsing for the targets in the dialog. 
The outline view correctly handles this case and therefore provides a 
workaround as Ben has already found.
Changing the summary to reflect what I believe to be the problem
With the rework of the Ant view and Ant launch configuration dialog the 
implicit target is not longer executed when retrieving the targets. 
As well the classpath is set correctly when retrieving the targets.

The problem that used to exist here (implicit target invocation using 
InternalAntRunner) is covered in bug 73602.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks; build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68886" />
    <CreationDate amount="2004-06-29 12:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code completion in Ant editor not work with xmlbuddy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156061">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>com/starbase/starteam/File</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getDeclaredMethods0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.privateGetDeclaredMethods(Class.java:1647)</Frame>
          <Frame depth="2">java.lang.Class.privateGetPublicMethods(Class.java:1770)</Frame>
          <Frame depth="3">java.lang.Class.privateGetPublicMethods(Class.java:1786)</Frame>
          <Frame depth="4">java.lang.Class.getMethods(Class.java:824)</Frame>
          <Frame depth="5">org.apache.tools.ant.IntrospectionHelper.&lt;init&gt;(IntrospectionHelper.java:172)</Frame>
          <Frame depth="6">org.apache.tools.ant.IntrospectionHelper.getHelper(IntrospectionHelper.java:461)</Frame>
          <Frame depth="7">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getIntrospectionHelper(AntEditorCompletionProcessor.java:571)</Frame>
          <Frame depth="8">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.hasNestedElements(AntEditorCompletionProcessor.java:1073)</Frame>
          <Frame depth="9">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.newCompletionProposal(AntEditorCompletionProcessor.java:947)</Frame>
          <Frame depth="10">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.createProposals(AntEditorCompletionProcessor.java:937)</Frame>
          <Frame depth="11">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getTaskProposals(AntEditorCompletionProcessor.java:854)</Frame>
          <Frame depth="12">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getProposalsFromDocument(AntEditorCompletionProcessor.java:337)</Frame>
          <Frame depth="13">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.determineProposals(AntEditorCompletionProcessor.java:311)</Frame>
          <Frame depth="14">org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.computeCompletionProposals(AntEditorCompletionProcessor.java:218)</Frame>
          <Frame depth="15">org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1472)</Frame>
          <Frame depth="16">org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:242)</Frame>
          <Frame depth="17">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:238)</Frame>
          <Frame depth="18">org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:197)</Frame>
          <Frame depth="19">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="20">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:192)</Frame>
          <Frame depth="21">org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1320)</Frame>
          <Frame depth="22">org.eclipse.ant.internal.ui.editor.AntEditor$StatusLineSourceViewer.doOperation(AntEditor.java:254)</Frame>
          <Frame depth="23">org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="25">org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80)</Frame>
          <Frame depth="26">org.eclipse.ui.texteditor.RetargetTextEditorAction.run(RetargetTextEditorAction.java:237)</Frame>
          <Frame depth="27">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="28">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="29">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)</Frame>
          <Frame depth="30">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="38">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="40">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="42">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="43">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="44">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="45">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="46">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Having xmlbuddy installed, the code completion of ant editor does not work.
I have suse linux 9.1, eclipse 3 final and xmlbuddy 2.0.10.
Forgot to put logs:

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=pt_BR

xmlbuddy:

Unable to find Action Set: com.objfac.xmleditor.XMLActionSet
(withou stacktrace)

Other error after removing xmlbuddy is:

"Custom task code completion for
org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin is not available
due to classpath problems"

Stacktrace:

java.lang.NoClassDefFoundError: com/starbase/starteam/File
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:1647)
	at java.lang.Class.privateGetPublicMethods(Class.java:1770)
	at java.lang.Class.privateGetPublicMethods(Class.java:1786)
	at java.lang.Class.getMethods(Class.java:824)
	at org.apache.tools.ant.IntrospectionHelper.&lt;init&gt;(IntrospectionHelper.java:172)
	at org.apache.tools.ant.IntrospectionHelper.getHelper(IntrospectionHelper.java:461)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getIntrospectionHelper(AntEditorCompletionProcessor.java:571)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.hasNestedElements(AntEditorCompletionProcessor.java:1073)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.newCompletionProposal(AntEditorCompletionProcessor.java:947)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.createProposals(AntEditorCompletionProcessor.java:937)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getTaskProposals(AntEditorCompletionProcessor.java:854)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.getProposalsFromDocument(AntEditorCompletionProcessor.java:337)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.determineProposals(AntEditorCompletionProcessor.java:311)
	at
org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor.computeCompletionProposals(AntEditorCompletionProcessor.java:218)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1472)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:242)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:238)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:197)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:192)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1320)
	at
org.eclipse.ant.internal.ui.editor.AntEditor$StatusLineSourceViewer.doOperation(AntEditor.java:254)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80)
	at
org.eclipse.ui.texteditor.RetargetTextEditorAction.run(RetargetTextEditorAction.java:237)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)
	at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)


BTW, I use cvs, not StarTeam, it looks like trying to find the custom task
helper text when showing it on the code completion

Just tested with xmlbuddy 2.0.11 pro and the error continues...
The "other" error (NoClassDefFoundError) after removing XMLBuddy is really for 
information purposes only. The exception is caught, logged and handled by the 
AntEditorCompletionProcessor.

Possibly we should not log the error in this case.
Created attachment 12925
patch for AntEditorSourceViewer to get content assiste to work with XMLBuddy installed
I found what I think to be the cause of the problem. The ContentAssist object in
AntEditorSourceViewerConfiguration still has the document partitioning set to
the default value, which is mapped to XMLBuddy. Setting the document
partitioning to __ant_partitioning fixes the problem.  I attached the patch already.
Rob
Thanks Rob.
I have released Rob's patch (with slight modification to use the constant).
Changes to AntEditorSourceViewerConfiguration
Please verify Jared.
The real problem is that every partitioner now needs to be named or multiple
editors can conflict. I will fix XMLBuddy. (Unlike the IBM guys, tho, I don't
feel I own the domain names beginning with '_', so I will use a name beginning
in 'com.objfac.") ;-}
You are right Bob (as always ?? :-) ).
I have logged bug 69235 to clean this up.
Verified.
*** Bug 70415 has been marked as a duplicate of this bug. ***
Could this patch be included into Eclipse 3.0.1 release ? Otherwise, I'll have
to wait for next year to see this corrected !
Amen to that! This problem is by far our most frequently reported. (The Ant
editor is clearly very popular with XMLBuddy users!)
To be considered for 3.0.1
Reopening.
AntEditorSourceViewerConfiguration change released to 3.0.1 stream.
Please verify in the 3.0.1 build.
Verified.
I agree that in 3.0.1RC2 Ant colors and assists correctly with XMLBuddy 2.0.11
present, and vice versa.

That isn't the full extent of conflict between these two (or any two?) editors.
I have filed bug 73629 to report the next most apparent problem.
Thanks Bob.</WithStack>
    <WithOutStack>Having xmlbuddy installed, the code completion of ant editor does not work.
I have suse linux 9.1, eclipse 3 final and xmlbuddy 2.0.10.
Forgot to put logs:

eclipse.buildId=I200406251208
java.version=1.4.2_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=pt_BR

xmlbuddy:

Unable to find Action Set: com.objfac.xmleditor.XMLActionSet
(withou stacktrace)

Other error after removing xmlbuddy is:

"Custom task code completion for
org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin is not available
due to classpath problems"

Stacktrace:




BTW, I use cvs, not StarTeam, it looks like trying to find the custom task
helper text when showing it on the code completion

Just tested with xmlbuddy 2.0.11 pro and the error continues...
The "other" error (NoClassDefFoundError) after removing XMLBuddy is really for 
information purposes only. The exception is caught, logged and handled by the 
AntEditorCompletionProcessor.

Possibly we should not log the error in this case.
Created attachment 12925
patch for AntEditorSourceViewer to get content assiste to work with XMLBuddy installed
I found what I think to be the cause of the problem. The ContentAssist object in
AntEditorSourceViewerConfiguration still has the document partitioning set to
the default value, which is mapped to XMLBuddy. Setting the document
partitioning to __ant_partitioning fixes the problem.  I attached the patch already.
Rob
Thanks Rob.
I have released Rob's patch (with slight modification to use the constant).
Changes to AntEditorSourceViewerConfiguration
Please verify Jared.
The real problem is that every partitioner now needs to be named or multiple
editors can conflict. I will fix XMLBuddy. (Unlike the IBM guys, tho, I don't
feel I own the domain names beginning with '_', so I will use a name beginning
in 'com.objfac.") ;-}
You are right Bob (as always ?? :-) ).
I have logged bug 69235 to clean this up.
Verified.
*** Bug 70415 has been marked as a duplicate of this bug. ***
Could this patch be included into Eclipse 3.0.1 release ? Otherwise, I'll have
to wait for next year to see this corrected !
Amen to that! This problem is by far our most frequently reported. (The Ant
editor is clearly very popular with XMLBuddy users!)
To be considered for 3.0.1
Reopening.
AntEditorSourceViewerConfiguration change released to 3.0.1 stream.
Please verify in the 3.0.1 build.
Verified.
I agree that in 3.0.1RC2 Ant colors and assists correctly with XMLBuddy 2.0.11
present, and vice versa.

That isn't the full extent of conflict between these two (or any two?) editors.
I have filed bug 73629 to report the next most apparent problem.
Thanks Bob.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68887" />
    <CreationDate amount="2004-06-29 12:47:00 -0400" />
    <DupId amount="71975" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] LINUX: JFace dialogs come up with empty contents unless resized</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="18">
      <source_code type="package">
        <location start="465" end="526" />
        <code>package com.ibm.xtools.ras.type.analyzer.ui.dialogs.internal;</code>
      </source_code>
      <source_code type="import">
        <location start="527" end="577" />
        <code>import org.eclipse.jface.dialogs.TitleAreaDialog;</code>
      </source_code>
      <source_code type="import">
        <location start="578" end="605" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="606" end="644" />
        <code>import org.eclipse.swt.graphics.Point;</code>
      </source_code>
      <source_code type="import">
        <location start="645" end="690" />
        <code>import org.eclipse.swt.layout.FormAttachment;</code>
      </source_code>
      <source_code type="import">
        <location start="691" end="730" />
        <code>import org.eclipse.swt.layout.FormData;</code>
      </source_code>
      <source_code type="import">
        <location start="731" end="772" />
        <code>import org.eclipse.swt.layout.FormLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="773" end="812" />
        <code>import org.eclipse.swt.layout.GridData;</code>
      </source_code>
      <source_code type="import">
        <location start="813" end="854" />
        <code>import org.eclipse.swt.layout.GridLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="855" end="892" />
        <code>import org.eclipse.swt.widgets.Combo;</code>
      </source_code>
      <source_code type="import">
        <location start="893" end="934" />
        <code>import org.eclipse.swt.widgets.Composite;</code>
      </source_code>
      <source_code type="import">
        <location start="935" end="974" />
        <code>import org.eclipse.swt.widgets.Control;</code>
      </source_code>
      <source_code type="import">
        <location start="975" end="1014" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="1015" end="1052" />
        <code>import org.eclipse.swt.widgets.Label;</code>
      </source_code>
      <source_code type="import">
        <location start="1053" end="1090" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="import">
        <location start="1091" end="1127" />
        <code>import org.eclipse.swt.widgets.Text;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1128" end="1136" />
        <code>/**
 */</code>
      </source_code>
      <source_code type="class">
        <location start="1137" end="4910" />
        <code>public class JFaceBug4Linux extends TitleAreaDialog {
	/**
	 */
	private Text _text1;
	
	/**
	 */
	private Text _text2;
	
	/** 
	 */
	private Combo _combo;

	/**
	 * @param parentShell
	 */
	public JFaceBug4Linux(Shell parentShell) {
		super(parentShell);
		
		setShellStyle(SWT.SHELL_TRIM | SWT.BORDER | SWT.PRIMARY_MODAL);
	}

	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#configureShell
(org.eclipse.swt.widgets.Shell)
	 */
	protected void configureShell(Shell newShell) {
		super.configureShell(newShell);
		 
		newShell.setText("Title"); //$NON-NLS-1$
		
		int screenY = Display.getCurrent().getBounds().height;
		int screenX = Display.getCurrent().getBounds().width;
		Point size = new Point(screenX / 3, screenY / 4);
		Point location = new Point(
				screenX / 2 - size.x / 2, 
				screenY / 2 - size.y / 2);
		newShell.setSize(size);
		newShell.setLocation(location);
	}
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.dialogs.Dialog#createDialogArea
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createDialogArea(Composite parent) {
		Composite superPanel = (Composite)super.createDialogArea
(parent);
		Composite panel = new Composite(superPanel, SWT.NONE);
		GridLayout gridLayout = new GridLayout();
		gridLayout.marginHeight = 0;
		gridLayout.marginWidth = 0;
		gridLayout.verticalSpacing = 0;
		gridLayout.horizontalSpacing = 0;
		superPanel.setLayout(gridLayout);
		
		// need to set GridData because the parent is using GridLayout.
		panel.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		Label l1 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l1.setText("Entry field1:"); //$NON-NLS-1$
		_text1 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l2 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l2.setText("Entry field2:"); //$NON-NLS-1$
		_text2 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l3 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l3.setText("Entry field3:"); //$NON-NLS-1$
		_combo = new Combo(panel, SWT.DROP_DOWN | SWT.READ_ONLY);
		_combo.add("Choice1"); //$NON-NLS-1$
		_combo.add("Choice2"); //$NON-NLS-1$
		_combo.add("Choice3"); //$NON-NLS-1$
		
		// Layout widgets
		FormLayout layout = new FormLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		panel.setLayout(layout);

		FormData data = null;
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(0, 0);
		l1.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text1.setLayoutData(data);

		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l3.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_combo.setLayoutData(data);
		
		return panel;
	}
	
	
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#createContents
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createContents(Composite parent) {
		Control result = super.createContents(parent);
		
		// initialize widget values
		setTitle("Title"); //$NON-NLS-1$ 
		_combo.select(0);
		
		// make sure the dialog is displayed properly on Linux 
initially
		// parent.getShell().layout(true);
		
		return result;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Not sure what causes this behavior (using FormLayout, or TitleAreaDialog, or 
other things) but on LINUX when the dialog is opened for the first time its 
contents is empty. However resizing it will fix the problem.

I found the workaround for this problem: include call to Shell.layout(true); 
in the end of dialog's createContents() method. See below.

The dialog works correctly on Windows.

----------------- BEGIN CODE SAMPLE ---------------------------------
package com.ibm.xtools.ras.type.analyzer.ui.dialogs.internal;

import org.eclipse.jface.dialogs.TitleAreaDialog;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

/**
 */
public class JFaceBug4Linux extends TitleAreaDialog {
	/**
	 */
	private Text _text1;
	
	/**
	 */
	private Text _text2;
	
	/** 
	 */
	private Combo _combo;

	/**
	 * @param parentShell
	 */
	public JFaceBug4Linux(Shell parentShell) {
		super(parentShell);
		
		setShellStyle(SWT.SHELL_TRIM | SWT.BORDER | SWT.PRIMARY_MODAL);
	}

	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#configureShell
(org.eclipse.swt.widgets.Shell)
	 */
	protected void configureShell(Shell newShell) {
		super.configureShell(newShell);
		 
		newShell.setText("Title"); //$NON-NLS-1$
		
		int screenY = Display.getCurrent().getBounds().height;
		int screenX = Display.getCurrent().getBounds().width;
		Point size = new Point(screenX / 3, screenY / 4);
		Point location = new Point(
				screenX / 2 - size.x / 2, 
				screenY / 2 - size.y / 2);
		newShell.setSize(size);
		newShell.setLocation(location);
	}
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.dialogs.Dialog#createDialogArea
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createDialogArea(Composite parent) {
		Composite superPanel = (Composite)super.createDialogArea
(parent);
		Composite panel = new Composite(superPanel, SWT.NONE);
		GridLayout gridLayout = new GridLayout();
		gridLayout.marginHeight = 0;
		gridLayout.marginWidth = 0;
		gridLayout.verticalSpacing = 0;
		gridLayout.horizontalSpacing = 0;
		superPanel.setLayout(gridLayout);
		
		// need to set GridData because the parent is using GridLayout.
		panel.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		Label l1 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l1.setText("Entry field1:"); //$NON-NLS-1$
		_text1 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l2 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l2.setText("Entry field2:"); //$NON-NLS-1$
		_text2 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l3 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l3.setText("Entry field3:"); //$NON-NLS-1$
		_combo = new Combo(panel, SWT.DROP_DOWN | SWT.READ_ONLY);
		_combo.add("Choice1"); //$NON-NLS-1$
		_combo.add("Choice2"); //$NON-NLS-1$
		_combo.add("Choice3"); //$NON-NLS-1$
		
		// Layout widgets
		FormLayout layout = new FormLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		panel.setLayout(layout);

		FormData data = null;
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(0, 0);
		l1.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text1.setLayoutData(data);

		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l3.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_combo.setLayoutData(data);
		
		return panel;
	}
	
	
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#createContents
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createContents(Composite parent) {
		Control result = super.createContents(parent);
		
		// initialize widget values
		setTitle("Title"); //$NON-NLS-1$ 
		_combo.select(0);
		
		// make sure the dialog is displayed properly on Linux 
initially
		// parent.getShell().layout(true);
		
		return result;
	}
}
----------------- END CODE SAMPLE ---------------------------------
I also see this bug using GridLayout under the linux_gtk 3.0 release build 
200406251208
I reproduced this problem and can confirm it is an SWT bug introduced in 3.0.  I
added a test case on bug 71975.

*** This bug has been marked as a duplicate of 71975 ***</WithStack>
    <WithOutStack>Not sure what causes this behavior (using FormLayout, or TitleAreaDialog, or 
other things) but on LINUX when the dialog is opened for the first time its 
contents is empty. However resizing it will fix the problem.

I found the workaround for this problem: include call to Shell.layout(true); 
in the end of dialog's createContents() method. See below.

The dialog works correctly on Windows.

----------------- BEGIN CODE SAMPLE ---------------------------------
package com.ibm.xtools.ras.type.analyzer.ui.dialogs.internal;

import org.eclipse.jface.dialogs.TitleAreaDialog;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

/**
 */
public class JFaceBug4Linux extends TitleAreaDialog {
	/**
	 */
	private Text _text1;
	
	/**
	 */
	private Text _text2;
	
	/** 
	 */
	private Combo _combo;

	/**
	 * @param parentShell
	 */
	public JFaceBug4Linux(Shell parentShell) {
		super(parentShell);
		
		setShellStyle(SWT.SHELL_TRIM | SWT.BORDER | SWT.PRIMARY_MODAL);
	}

	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#configureShell
(org.eclipse.swt.widgets.Shell)
	 */
	protected void configureShell(Shell newShell) {
		super.configureShell(newShell);
		 
		newShell.setText("Title"); //$NON-NLS-1$
		
		int screenY = Display.getCurrent().getBounds().height;
		int screenX = Display.getCurrent().getBounds().width;
		Point size = new Point(screenX / 3, screenY / 4);
		Point location = new Point(
				screenX / 2 - size.x / 2, 
				screenY / 2 - size.y / 2);
		newShell.setSize(size);
		newShell.setLocation(location);
	}
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.dialogs.Dialog#createDialogArea
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createDialogArea(Composite parent) {
		Composite superPanel = (Composite)super.createDialogArea
(parent);
		Composite panel = new Composite(superPanel, SWT.NONE);
		GridLayout gridLayout = new GridLayout();
		gridLayout.marginHeight = 0;
		gridLayout.marginWidth = 0;
		gridLayout.verticalSpacing = 0;
		gridLayout.horizontalSpacing = 0;
		superPanel.setLayout(gridLayout);
		
		// need to set GridData because the parent is using GridLayout.
		panel.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		Label l1 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l1.setText("Entry field1:"); //$NON-NLS-1$
		_text1 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l2 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l2.setText("Entry field2:"); //$NON-NLS-1$
		_text2 = new Text(panel, SWT.BORDER | SWT.SINGLE);
		Label l3 = new Label(panel, SWT.LEFT | SWT.WRAP);
		l3.setText("Entry field3:"); //$NON-NLS-1$
		_combo = new Combo(panel, SWT.DROP_DOWN | SWT.READ_ONLY);
		_combo.add("Choice1"); //$NON-NLS-1$
		_combo.add("Choice2"); //$NON-NLS-1$
		_combo.add("Choice3"); //$NON-NLS-1$
		
		// Layout widgets
		FormLayout layout = new FormLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		panel.setLayout(layout);

		FormData data = null;
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(0, 0);
		l1.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(0, 0);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text1.setLayoutData(data);

		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l1, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_text2.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(0, 0);
		l3.setLayoutData(data);
		
		data = new FormData();
		data.top = new FormAttachment(l2, 10, SWT.BOTTOM);
		data.left = new FormAttachment(l3, 5, SWT.RIGHT);
		data.right = new FormAttachment(100, 0);
		_combo.setLayoutData(data);
		
		return panel;
	}
	
	
	
	/* (non-Javadoc)
	 * @see org.eclipse.jface.window.Window#createContents
(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createContents(Composite parent) {
		Control result = super.createContents(parent);
		
		// initialize widget values
		setTitle("Title"); //$NON-NLS-1$ 
		_combo.select(0);
		
		// make sure the dialog is displayed properly on Linux 
initially
		// parent.getShell().layout(true);
		
		return result;
	}
}
----------------- END CODE SAMPLE ---------------------------------
I also see this bug using GridLayout under the linux_gtk 3.0 release build 
200406251208
I reproduced this problem and can confirm it is an SWT bug introduced in 3.0.  I
added a test case on bug 71975.

*** This bug has been marked as a duplicate of 71975 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68888" />
    <CreationDate amount="2004-06-29 12:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot delete-add Build command in Make Targets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. In a StdMake project, select Project &gt; Create Make Target...</Line>
          <Line>2. In the Create a new Make Target dialog,</Line>
          <Line>unselect "Use default" and delete "make"</Line>
          <Line>The error message "Must specify a build command"</Line>
          <Line>and "OK" button is disabled.</Line>
          <Line>3. Add the build command "mingw32-make"</Line>
          <Line>The error message stays, the "OK" button is still disabled.</Line>
          <Line>In fact, there's no way to restore "OK" now.  The user must Cancel.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>CDT 2.0.0.2004062803000
Windows/Linux.

1. In a StdMake project, select Project &gt; Create Make Target...
2. In the Create a new Make Target dialog,
unselect "Use default" and delete "make"
The error message "Must specify a build command"
and "OK" button is disabled.
3. Add the build command "mingw32-make"
The error message stays, the "OK" button is still disabled.
In fact, there's no way to restore "OK" now.  The user must Cancel.

You get the same trouble when editing the Build command.

(The workaround is: don't delete the the build command field
completely; edit by doing append-delete: make-&gt;makefoo-&gt;foo.)
PR was not targeted to any particular release. Changing target milestone to 2.1
fixed</WithStack>
    <WithOutStack>CDT 2.0.0.2004062803000
Windows/Linux.

1. In a StdMake project, select Project &gt; Create Make Target...
2. In the Create a new Make Target dialog,
unselect "Use default" and delete "make"
The error message "Must specify a build command"
and "OK" button is disabled.
3. Add the build command "mingw32-make"
The error message stays, the "OK" button is still disabled.
In fact, there's no way to restore "OK" now.  The user must Cancel.

You get the same trouble when editing the Build command.

(The workaround is: don't delete the the build command field
completely; edit by doing append-delete: make-&gt;makefoo-&gt;foo.)
PR was not targeted to any particular release. Changing target milestone to 2.1
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68889" />
    <CreationDate amount="2004-06-29 12:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[find/replace] RegExp doesn't match the Caret character '^'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Attempting to do a regexp search and replace (Ctrl-F) fails to match the '^' 
character for beginning of a line.

This is 3.0RC3.
I opened a file using R3.0 which has

p

searched for ^p and it found p

Note: regex must be enabled
It fails if I search for the beginning of the line only (i.e. when commenting 
out lines):

  Find:          ^
  Replace with:  //

It works if I add a character to the search like ^p, but shouldn't I be able to 
search for the beginning of a line only?

I should have been more specific in the original bug report, though.

Here's a work around, but it's more complex than searching for ^:

  Find:           ^(.)
  Replace with:  //  $1


The search works if it includes any character, but you have to use a group 
preserve the first character.  It would be much simpler if we could just search 
for ^.
agree
See corresponding bug 215670 against Platform Search.
*** Bug 308340 has been marked as a duplicate of this bug. ***
I am not sure Big 308340 is exactly the same bug. In that one, the search matches some text, but the highlighted text is wrong (it selects one more character) and I suspect it only happens with windows EOLs. Also, the replace feature does not work, whatever the regexp (this might be correct, as it would remove the \n from a \r\n, which must not be allowed).
Bug 308340 is indeed something different.
Probably related to bug 80661.
*** Bug 403063 has been marked as a duplicate of this bug. ***
*** Bug 404900 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Attempting to do a regexp search and replace (Ctrl-F) fails to match the '^' 
character for beginning of a line.

This is 3.0RC3.
I opened a file using R3.0 which has

p

searched for ^p and it found p

Note: regex must be enabled
It fails if I search for the beginning of the line only (i.e. when commenting 
out lines):

  Find:          ^
  Replace with:  //

It works if I add a character to the search like ^p, but shouldn't I be able to 
search for the beginning of a line only?

I should have been more specific in the original bug report, though.

Here's a work around, but it's more complex than searching for ^:

  Find:           ^(.)
  Replace with:  //  $1


The search works if it includes any character, but you have to use a group 
preserve the first character.  It would be much simpler if we could just search 
for ^.
agree
See corresponding bug 215670 against Platform Search.
*** Bug 308340 has been marked as a duplicate of this bug. ***
I am not sure Big 308340 is exactly the same bug. In that one, the search matches some text, but the highlighted text is wrong (it selects one more character) and I suspect it only happens with windows EOLs. Also, the replace feature does not work, whatever the regexp (this might be correct, as it would remove the \n from a \r\n, which must not be allowed).
Bug 308340 is indeed something different.
Probably related to bug 80661.
*** Bug 403063 has been marked as a duplicate of this bug. ***
*** Bug 404900 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68890" />
    <CreationDate amount="2004-06-29 12:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JSR-047/Apache Commons output sources should add a trailing new-line character.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>EventFormatter APIs that serialize to XML should add a trailing new-line 
character.

Otherwise, output sources will contain one single string of XML with no new-
line delimiters.
Trailing new-line characters should be added by indivdual output sources.  For 
example, JSR-047/Apache Commons output sources should add a trailing new-line 
character.

Code checked-in to HEAD on July 22, 2004.
Verified in the Toronto 20040722_1841 build.
Closing.</WithStack>
    <WithOutStack>EventFormatter APIs that serialize to XML should add a trailing new-line 
character.

Otherwise, output sources will contain one single string of XML with no new-
line delimiters.
Trailing new-line characters should be added by indivdual output sources.  For 
example, JSR-047/Apache Commons output sources should add a trailing new-line 
character.

Code checked-in to HEAD on July 22, 2004.
Verified in the Toronto 20040722_1841 build.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68891" />
    <CreationDate amount="2004-06-29 13:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] TypeVariableBinding does not know his declaring type or method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you want to know the declaring type of a TypeVariableBinding, you needs to 
explore parent scopes to find it.
That would be useful if TypeVariableBinding have a direct link to his parent.
Added TypeVariableBinding#declaringElement pointing at generic type or method 
binding declaring it.</WithStack>
    <WithOutStack>If you want to know the declaring type of a TypeVariableBinding, you needs to 
explore parent scopes to find it.
That would be useful if TypeVariableBinding have a direct link to his parent.
Added TypeVariableBinding#declaringElement pointing at generic type or method 
binding declaring it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68892" />
    <CreationDate amount="2004-06-29 13:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Refactoring] Rename will not work for references in other C++ Projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="448" end="495" />
        <code>class B1 : public A1
{
public:
	B1();
	~B1();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>A) closed projects</Line>
          <Line>B) projects where the indexer is disabled</Line>
          <Line>*** Bug 69318 has been marked as a duplicate of this bug. ***</Line>
          <Line>Currently the scope for refactoring is the project in which the element was</Line>
          <Line>declared. To solve this problem, we need a way to determine the set of files</Line>
          <Line>(in the workspace) that contain references to a certain declaration.</Line>
          <Line>This should also include references that are not preceeded by an include</Line>
          <Line>statement, such as forward decarations.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="22">
        <Lines>
          <Line>1. In Project A, add Class A1 using C++ Class wizard (A1.h and A1.cpp will be</Line>
          <Line>generated)</Line>
          <Line />
          <Line>2. In Project B, add Class B1 using C++ Class wizard (B1.h and B1.cpp will be</Line>
          <Line>generated)</Line>
          <Line />
          <Line>3. Add the line #include "../A/A1.h" and make B1 that inherits from A1 class</Line>
          <Line>(in  File B1.h) and save all:</Line>
          <Line>So user will have in B1.h:</Line>
          <Line />
          <Line>#include "../A/A1.h"</Line>
          <Line />
          <Line>;</Line>
          <Line />
          <Line />
          <Line>4. Select B project in C/C++ Project view, r-click on it and choose Properties</Line>
          <Line />
          <Line>5. Select C/C++ Indexer and make sure that the 'Enable C/C++ Indexing' checkbox</Line>
          <Line>is selected, so the indexer is turned ON for this project</Line>
          <Line />
          <Line>6. Go to A project, R-click on A1 class (under A1.h file) and choose Refactor-</Line>
          <Line>&gt;Rename.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Steps
The following C++ Managed Make projects (A and B) are used to create cross 
project references

Steps
1. In Project A, add Class A1 using C++ Class wizard (A1.h and A1.cpp will be 
generated)

2. In Project B, add Class B1 using C++ Class wizard (B1.h and B1.cpp will be 
generated)

3. Add the line #include "../A/A1.h" and make B1 that inherits from A1 class 
(in  File B1.h) and save all:
So user will have in B1.h:

#include "../A/A1.h"

class B1 : public A1
{
public:
	B1();
	~B1();
};


4. Select B project in C/C++ Project view, r-click on it and choose Properties

5. Select C/C++ Indexer and make sure that the 'Enable C/C++ Indexing' checkbox 
is selected, so the indexer is turned ON for this project

6. Go to A project, R-click on A1 class (under A1.h file) and choose Refactor-
&gt;Rename.

5. Rename A1 to A1Renamed and make sure the update References checkbox is 
checked. Press Preview Button 
Actual: Notice that only A1.h and A1.cpp are available in preview list - I was 
expecting to have B1.h file as well from project B. 

If you press OK in Refactor-&gt;Rename dialog only the references from project A 
are updated, project B will have now an unresolved reference to A1 class

I was expecting that all references in same Eclipse workspaces to be updated 
(this should work also when referenced  project - here B - is closed)
Reproduced the problem using the latest off the 2.0 branch.  
Search returns the base specifier reference but for some reason refactoring 
doesn't touch it.  

Do not however that these features are not meant to work on 
  A) closed projects 
  B) projects where the indexer is disabled
*** Bug 69318 has been marked as a duplicate of this bug. ***
Currently the scope for refactoring is the project in which the element was 
declared. To solve this problem, we need a way to determine the set of files 
(in the workspace) that contain references to a certain declaration.
This should also include references that are not preceeded by an include 
statement, such as forward decarations. 

Bogdan, do you need a separate bug for this requirement?

No - I'll take this bug, if that's OK with you...
Is this something we plan to fix for 2.1 Bog?
If so why?
Some new parser infrastructure was put in that will allow the indexer to
determine  what file the element in a referenced element resides in. By adding
this info to the index, it will allow for increased correctness in searches. 

But it's not absolutely necessary for 2.1, so I'll move to future...
That one was fixed with the new rename refactoring in a previous release.</WithStack>
    <WithOutStack>Steps
The following C++ Managed Make projects (A and B) are used to create cross 
project references

Steps
1. In Project A, add Class A1 using C++ Class wizard (A1.h and A1.cpp will be 
generated)

2. In Project B, add Class B1 using C++ Class wizard (B1.h and B1.cpp will be 
generated)

3. Add the line #include "../A/A1.h" and make B1 that inherits from A1 class 
(in  File B1.h) and save all:
So user will have in B1.h:

#include "../A/A1.h"

class B1 : public A1
{
public:
	B1();
	~B1();
};


4. Select B project in C/C++ Project view, r-click on it and choose Properties

5. Select C/C++ Indexer and make sure that the 'Enable C/C++ Indexing' checkbox 
is selected, so the indexer is turned ON for this project

6. Go to A project, R-click on A1 class (under A1.h file) and choose Refactor-
&gt;Rename.

5. Rename A1 to A1Renamed and make sure the update References checkbox is 
checked. Press Preview Button 
Actual: Notice that only A1.h and A1.cpp are available in preview list - I was 
expecting to have B1.h file as well from project B. 

If you press OK in Refactor-&gt;Rename dialog only the references from project A 
are updated, project B will have now an unresolved reference to A1 class

I was expecting that all references in same Eclipse workspaces to be updated 
(this should work also when referenced  project - here B - is closed)
Reproduced the problem using the latest off the 2.0 branch.  
Search returns the base specifier reference but for some reason refactoring 
doesn't touch it.  

Do not however that these features are not meant to work on 
  A) closed projects 
  B) projects where the indexer is disabled
*** Bug 69318 has been marked as a duplicate of this bug. ***
Currently the scope for refactoring is the project in which the element was 
declared. To solve this problem, we need a way to determine the set of files 
(in the workspace) that contain references to a certain declaration.
This should also include references that are not preceeded by an include 
statement, such as forward decarations. 

Bogdan, do you need a separate bug for this requirement?

No - I'll take this bug, if that's OK with you...
Is this something we plan to fix for 2.1 Bog?
If so why?
Some new parser infrastructure was put in that will allow the indexer to
determine  what file the element in a referenced element resides in. By adding
this info to the index, it will allow for increased correctness in searches. 

But it's not absolutely necessary for 2.1, so I'll move to future...
That one was fixed with the new rename refactoring in a previous release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68893" />
    <CreationDate amount="2004-06-29 13:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Seperate java launching capabilities from debug...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1120" end="1255" />
        <code>Runtime.getRuntime().exec(new String[] {
  "c:\\jre\bin\java.exe", "-cp", System.getProperty("java.class.path"),
  "com.xyz.MyJavaApp"}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently in order to use the java launching capabilities it requires a number 
of plugins from jdt and debug. We would like to see this function seperated 
out - or a simpler function added that allows for java applications to be 
launched without requiring all of these plugins.
Maybe there could be just one plugin that takes a LaunchConfiguration and 
launches the program.
We use a platform that is a subset of Eclipse and doesn't have all of these 
plugins available and is trying to keep their base small so isn't willing to 
add this group of plug-ins that are required to run a launch configuration.
We want to be able to use this technology to run standard java applications in 
our framework.

Is there any way that these capabilities could be scaled down or made available 
in a simpler/smaller format to allow us to give users the ability to launch 
java applications in the framework.

Thank you,

Greg
Depending on exactly what you need, you may not need any other plugins at all
for launching Java programs.  Using Runtime.exec, it is very easy to construct a
command line to launch a Java application:

Runtime.getRuntime().exec(new String[] {
  "c:\\jre\bin\java.exe", "-cp", System.getProperty("java.class.path"),
  "com.xyz.MyJavaApp"});

Moving to JDT Debug for further comment.
What JohnA said. The "Java Application" launch config type that we provide requires JDT UI and 
Debug UI to work.

If you want a config type that can launch a Java program without requiring JDT, you'll have to 
create your own.
Clarifiaction - you don't need debug UI or JDT UI to use the Java launch 
configs, but you do need org.eclipse.debug.core, org.eclipse.jdt.launching, 
org.eclispe.jdt.core, and org.eclpise.jdt.debug.</WithStack>
    <WithOutStack>Currently in order to use the java launching capabilities it requires a number 
of plugins from jdt and debug. We would like to see this function seperated 
out - or a simpler function added that allows for java applications to be 
launched without requiring all of these plugins.
Maybe there could be just one plugin that takes a LaunchConfiguration and 
launches the program.
We use a platform that is a subset of Eclipse and doesn't have all of these 
plugins available and is trying to keep their base small so isn't willing to 
add this group of plug-ins that are required to run a launch configuration.
We want to be able to use this technology to run standard java applications in 
our framework.

Is there any way that these capabilities could be scaled down or made available 
in a simpler/smaller format to allow us to give users the ability to launch 
java applications in the framework.

Thank you,

Greg
Depending on exactly what you need, you may not need any other plugins at all
for launching Java programs.  Using Runtime.exec, it is very easy to construct a
command line to launch a Java application:

Runtime.getRuntime().exec(new String[] {
  "c:\\jre\bin\java.exe", "-cp", System.getProperty("java.class.path"),
  "com.xyz.MyJavaApp"});

Moving to JDT Debug for further comment.
What JohnA said. The "Java Application" launch config type that we provide requires JDT UI and 
Debug UI to work.

If you want a config type that can launch a Java program without requiring JDT, you'll have to 
create your own.
Clarifiaction - you don't need debug UI or JDT UI to use the Java launch 
configs, but you do need org.eclipse.debug.core, org.eclipse.jdt.launching, 
org.eclispe.jdt.core, and org.eclpise.jdt.debug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68894" />
    <CreationDate amount="2004-06-29 13:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content type] preferences not being loaded</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- file specs are not being properly serialized</Line>
          <Line>- isAssociatedWith does not take preferences into account</Line>
          <Line>Fixed. Released to HEAD. Test cases added.</Line>
          <Line>May be a good candidate for 3.0.1.</Line>
          <Line>Rafael, please attach a patch based on 3.0 code so we can evaluate the</Line>
          <Line>complexity of the fix for consideration for 3.0.1. Thanks.</Line>
          <Line>Created attachment 13246</Line>
          <Line>patches for core.runtime and core.tests.runtime</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

Preferences for content types are not being properly loaded. The reason is that
a scope is not being properly specified when retrieving the preference node.
This breaks any support for user-settings in the content type mechanism.
Other issues with use of preferences:
- file specs are not being properly serialized
- isAssociatedWith does not take preferences into account
Fixed. Released to HEAD. Test cases added.
May be a good candidate for 3.0.1.
Rafael, please attach a patch based on 3.0 code so we can evaluate the
complexity of the fix for consideration for 3.0.1. Thanks.
Created attachment 13246
patches for core.runtime and core.tests.runtime

Patch for R3_0 containing the proposed fixes.
Released into 3.0 maintenance branch for inclusion in 3.0.1.
Changing milestone to reflect this.</WithStack>
    <WithOutStack>3.0

Preferences for content types are not being properly loaded. The reason is that
a scope is not being properly specified when retrieving the preference node.
This breaks any support for user-settings in the content type mechanism.
Other issues with use of preferences:
- file specs are not being properly serialized
- isAssociatedWith does not take preferences into account
Fixed. Released to HEAD. Test cases added.
May be a good candidate for 3.0.1.
Rafael, please attach a patch based on 3.0 code so we can evaluate the
complexity of the fix for consideration for 3.0.1. Thanks.
Created attachment 13246
patches for core.runtime and core.tests.runtime

Patch for R3_0 containing the proposed fixes.
Released into 3.0 maintenance branch for inclusion in 3.0.1.
Changing milestone to reflect this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68895" />
    <CreationDate amount="2004-06-29 13:34:00 -0400" />
    <DupId amount="81766" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Log errors after starting Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Installed some plugins (myeclipse, EMF, GEF). Then tried restarting eclipse with
no files opened in the workspace. Errors logged in the log file and eclipse runs
extremely slow (takes almost 2 minutes to open a menu after the click)

!SESSION Jun 29, 2004 07:44:11.629 ---------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0-beta2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US

!ENTRY org.eclipse.osgi Jun 29, 2004 07:44:11.630
!MESSAGE While loading class
"org.eclipse.jdt.internal.ui.wizards.NewTypeDropDownAction", thread "main" timed
out waiting (5000ms) for thread "Worker-0" to finish starting bundle
"org.eclipse.jdt.ui". To avoid deadlock, thread "main" is proceeding but
"org.eclipse.jdt.internal.ui.wizards.NewTypeDropDownAction" may not be fully
initialized.
!STACK 0
java.lang.Exception: Generated exception.
	at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:102)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:236)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:307)
	at
org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:336)
	at
org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1313)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:131)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:124)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:113)
	at
org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:189)
	at org.eclipse.ui.internal.PluginAction.createDelegate(PluginAction.java:114)
	at
org.eclipse.ui.internal.WWinPluginAction.refreshActionList(WWinPluginAction.java:147)
	at org.eclipse.ui.plugin.AbstractUIPlugin$3.run(AbstractUIPlugin.java:803)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.osgi Jun 29, 2004 07:44:11.666
!MESSAGE While loading class "org.eclipse.jdt.core.JavaCore$5", thread
"Worker-1" timed out waiting (5000ms) for thread "Worker-0" to finish starting
bundle "org.eclipse.jdt.core". To avoid deadlock, thread "Worker-1" is
proceeding but "org.eclipse.jdt.core.JavaCore$5" may not be fully initialized.
!STACK 0
java.lang.Exception: Generated exception.
	at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:102)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:236)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:303)
	at org.eclipse.jdt.core.JavaCore$4.run(JavaCore.java:3659)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Ram, when this happens can you try to produce a VM dump so that we can see 
what is happening in the other threads (kill -3 'java-process'). Did Eclipse 
work correctly before installing the additional plug-ins ?

Don't know if this makes a difference, but Eclipse is tested against 1.4.* 
VMs. Do you see the same behaviour when using a 1.4.* VM ?
Setting to remind until requested information from reporter is provided.
reopening...


*** This bug has been marked as a duplicate of 81766 ***</WithStack>
    <WithOutStack>Installed some plugins (myeclipse, EMF, GEF). Then tried restarting eclipse with
no files opened in the workspace. Errors logged in the log file and eclipse runs
extremely slow (takes almost 2 minutes to open a menu after the click)

!SESSION Jun 29, 2004 07:44:11.629 ---------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0-beta2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US

!ENTRY org.eclipse.osgi Jun 29, 2004 07:44:11.630
!MESSAGE While loading class
"org.eclipse.jdt.internal.ui.wizards.NewTypeDropDownAction", thread "main" timed
out waiting (5000ms) for thread "Worker-0" to finish starting bundle
"org.eclipse.jdt.ui". To avoid deadlock, thread "main" is proceeding but
"org.eclipse.jdt.internal.ui.wizards.NewTypeDropDownAction" may not be fully
initialized.
!STACK 0
java.lang.Exception: Generated exception.
	at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:102)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:236)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:307)
	at
org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:336)
	at
org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1313)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:131)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:124)
	at
org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:113)
	at
org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:189)
	at org.eclipse.ui.internal.PluginAction.createDelegate(PluginAction.java:114)
	at
org.eclipse.ui.internal.WWinPluginAction.refreshActionList(WWinPluginAction.java:147)
	at org.eclipse.ui.plugin.AbstractUIPlugin$3.run(AbstractUIPlugin.java:803)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.osgi Jun 29, 2004 07:44:11.666
!MESSAGE While loading class "org.eclipse.jdt.core.JavaCore$5", thread
"Worker-1" timed out waiting (5000ms) for thread "Worker-0" to finish starting
bundle "org.eclipse.jdt.core". To avoid deadlock, thread "Worker-1" is
proceeding but "org.eclipse.jdt.core.JavaCore$5" may not be fully initialized.
!STACK 0
java.lang.Exception: Generated exception.
	at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:102)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)
	at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:236)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:303)
	at org.eclipse.jdt.core.JavaCore$4.run(JavaCore.java:3659)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Ram, when this happens can you try to produce a VM dump so that we can see 
what is happening in the other threads (kill -3 'java-process'). Did Eclipse 
work correctly before installing the additional plug-ins ?

Don't know if this makes a difference, but Eclipse is tested against 1.4.* 
VMs. Do you see the same behaviour when using a 1.4.* VM ?
Setting to remind until requested information from reporter is provided.
reopening...


*** This bug has been marked as a duplicate of 81766 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68896" />
    <CreationDate amount="2004-06-29 13:36:00 -0400" />
    <DupId amount="64181" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Navigation: hyperlink on std opens clocale, not iostream</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>#include &lt;iostream&gt;
using namespace std;

Ctl and mouse over std. Then when it turns green and underlined, hit the left 
mouse button. (What is the accessible equivalent of this?)
The clocale file opens which contains std, not the expected iostream.
Also occurs on Windows XP.
There are many definitions of std throughout the system include files that you 
get by virtue of including iostream.  All are equally valid to be opened and 
theres no good way to pick one for the user (currently we open the first one) 
what we really want is a list for the user to choose from.
 

*** This bug has been marked as a duplicate of 64181 ***</WithStack>
    <WithOutStack>#include &lt;iostream&gt;
using namespace std;

Ctl and mouse over std. Then when it turns green and underlined, hit the left 
mouse button. (What is the accessible equivalent of this?)
The clocale file opens which contains std, not the expected iostream.
Also occurs on Windows XP.
There are many definitions of std throughout the system include files that you 
get by virtue of including iostream.  All are equally valid to be opened and 
theres no good way to pick one for the user (currently we open the first one) 
what we really want is a list for the user to choose from.
 

*** This bug has been marked as a duplicate of 64181 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68897" />
    <CreationDate amount="2004-06-29 13:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[prefs] NPE when applying exported preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341156086">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.preferences.EclipsePreferences.removeNode(EclipsePreferences.java:959)</Frame>
          <Frame depth="1">org.eclipse.core.internal.preferences.PreferencesService$1.visit(PreferencesService.java:152)</Frame>
          <Frame depth="2">org.eclipse.core.internal.preferences.EclipsePreferences.accept(EclipsePreferences.java:90)</Frame>
          <Frame depth="3">org.eclipse.core.internal.preferences.PreferencesService.applyPreferences(PreferencesService.java:184)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="19">
      <source_code type="singlecomment">
        <location start="99" end="142" />
        <code>//======================================</code>
      </source_code>
      <source_code type="assignment">
        <location start="144" end="207" />
        <code>IPreferencesService service = Platform.getPreferencesService();</code>
      </source_code>
      <source_code type="assignment">
        <location start="210" end="270" />
        <code>IEclipsePreferences rootPreferences = service.getRootNode();</code>
      </source_code>
      <source_code type="assignment">
        <location start="271" end="324" />
        <code>Preferences pref = rootPreferences.node("/favorite");</code>
      </source_code>
      <source_code type="assignment">
        <location start="327" end="363" />
        <code>Preferences child = pref.node("my");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="364" end="391" />
        <code>child.put("file","my.txt");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="398" end="413" />
        <code>child.flush();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="414" end="428" />
        <code>pref.flush();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="429" end="454" />
        <code>rootPreferences.flush();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="455" end="550" />
        <code>} catch (BackingStoreException e) {
 // TODO Auto-generated catch block
 e.printStackTrace();
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="625" end="653" />
        <code>File("c:\\tmp.dat")), null);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="654" end="751" />
        <code>} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="750" end="839" />
        <code>} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="924" end="947" />
        <code>File("c:\\tmp.dat"))) ;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="948" end="981" />
        <code>service.applyPreferences(epref);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="982" end="1079" />
        <code>} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1078" end="1167" />
        <code>} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1166" end="1213" />
        <code>} catch (Exception e) {
 e.printStackTrace();
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1218" end="1281" />
        <code>//============================================================</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From a user post on the newsgroup:

dear all, i have a code fragment like below,.
 
code fragment:
 
//======================================
 
IPreferencesService service = Platform.getPreferencesService();
 
IEclipsePreferences rootPreferences = service.getRootNode();
Preferences pref = rootPreferences.node("/favorite");
 
Preferences child = pref.node("my");
child.put("file","my.txt");
try {
 child.flush();
 pref.flush();
 rootPreferences.flush();
} catch (BackingStoreException e) {
 // TODO Auto-generated catch block
 e.printStackTrace();
}
try {
 service.exportPreferences(rootPreferences,new FileOutputStream(new
File("c:\\tmp.dat")), null);
} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}
try {
 IExportedPreferences epref = service.readPreferences(new FileInputStream(new
File("c:\\tmp.dat"))) ;
 service.applyPreferences(epref);
} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (Exception e) {
 e.printStackTrace();
}
...
//============================================================
 
message is:
 
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference: /favorite/my/file=my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Legacy plug-in preference file not found:
G:\my\dev\eclipse-SDK-3.0M9\eclipse\runtime-workspace\.metadata\.plugins\org.eclipse.ui.ide\pref_store.ini
Tue Jun 29 22:45:47 CST 2004 - [main] Loading preferences from file:
G:/my/dev/eclipse-SDK-3.0M9/eclipse/runtime-workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference:
/instance/org.eclipse.ui.ide/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference:
/instance/org.eclipse.ui.ide/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Reading preferences from stream...
Tue Jun 29 22:45:47 CST 2004 - [main] Read preferences file.
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference: /favorite/my/file=my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Converted preferences file to
IExportedPreferences tree: * /
/favorite
/favorite/my
/favorite/my/file=my.txt
 
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Applying exported preferences: * /
/favorite
/favorite/my
/favorite/my/file=my.txt
 
Tue Jun 29 22:45:47 CST 2004 - [main] Found export root: /
java.lang.NullPointerException
 at
org.eclipse.core.internal.preferences.EclipsePreferences.removeNode(EclipsePreferences.java:959)
 at
org.eclipse.core.internal.preferences.PreferencesService$1.visit(PreferencesService.java:152)
 at
org.eclipse.core.internal.preferences.EclipsePreferences.accept(EclipsePreferences.java:90)
 at
org.eclipse.core.internal.preferences.PreferencesService.applyPreferences(PreferencesService.java:184)
 
.......
 
what's wrong?
 
regards
..jay
Fixed and released to HEAD.</WithStack>
    <WithOutStack>From a user post on the newsgroup:

dear all, i have a code fragment like below,.
 
code fragment:
 
//======================================
 
IPreferencesService service = Platform.getPreferencesService();
 
IEclipsePreferences rootPreferences = service.getRootNode();
Preferences pref = rootPreferences.node("/favorite");
 
Preferences child = pref.node("my");
child.put("file","my.txt");
try {
 child.flush();
 pref.flush();
 rootPreferences.flush();
} catch (BackingStoreException e) {
 // TODO Auto-generated catch block
 e.printStackTrace();
}
try {
 service.exportPreferences(rootPreferences,new FileOutputStream(new
File("c:\\tmp.dat")), null);
} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
}
try {
 IExportedPreferences epref = service.readPreferences(new FileInputStream(new
File("c:\\tmp.dat"))) ;
 service.applyPreferences(epref);
} catch (FileNotFoundException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (CoreException e1) {
 // TODO Auto-generated catch block
 e1.printStackTrace();
} catch (Exception e) {
 e.printStackTrace();
}
...
//============================================================
 
message is:
 
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference: /favorite/my/file=my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Legacy plug-in preference file not found:
G:\my\dev\eclipse-SDK-3.0M9\eclipse\runtime-workspace\.metadata\.plugins\org.eclipse.ui.ide\pref_store.ini
Tue Jun 29 22:45:47 CST 2004 - [main] Loading preferences from file:
G:/my/dev/eclipse-SDK-3.0M9/eclipse/runtime-workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference:
/instance/org.eclipse.ui.ide/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference:
/instance/org.eclipse.ui.ide/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Reading preferences from stream...
Tue Jun 29 22:45:47 CST 2004 - [main] Read preferences file.
Tue Jun 29 22:45:47 CST 2004 - [main] Setting preference: /favorite/my/file=my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Converted preferences file to
IExportedPreferences tree: * /
/favorite
/favorite/my
/favorite/my/file=my.txt
 
Tue Jun 29 22:45:47 CST 2004 - [main] Getting preference value:
/favorite/my/file-&gt;my.txt
Tue Jun 29 22:45:47 CST 2004 - [main] Applying exported preferences: * /
/favorite
/favorite/my
/favorite/my/file=my.txt
 
Tue Jun 29 22:45:47 CST 2004 - [main] Found export root: /

 
.......
 
what's wrong?
 
regards
..jay
Fixed and released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68898" />
    <CreationDate amount="2004-06-29 13:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[spell checking] More options for (not) spell checking</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>1. I'd like to be able to turn off spell checking in string constants.</Line>
          <Line>2. I'd like to ignore everything inside an HTML tag (currently, it hollers at me</Line>
          <Line>about attribute names and closing tags).</Line>
          <Line>3. It should include symbols in the check if they appear in the dictionary.  For</Line>
          <Line>example, if "inc." is in the dictionary, then checking "inc." in the text</Line>
          <Line>shouldn't cause a problem (currently, it mark "inc" and suggests changing it to</Line>
          <Line>"inc.").</Line>
          <Line>4. I'd like to ignore everything inside &lt;code&gt; or &lt;pre&gt; tags.</Line>
          <Line>*** Bug 85747 has been marked as a duplicate of this bug. ***</Line>
          <Line>Bug 85747 is a problem with the tokenizer.</Line>
          <Line>correct.</Line>
          <Line>It should also ignore type names in JavaDoc comments.</Line>
          <Line>*** Bug 166897 has been marked as a duplicate of this bug. ***</Line>
          <Line>See also bug 167599.</Line>
          <Line>*** Bug 183880 has been marked as a duplicate of this bug. ***</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>After playing with spell checking for a while, here are some recommendations:
1. I'd like to be able to turn off spell checking in string constants.
2. I'd like to ignore everything inside an HTML tag (currently, it hollers at me
about attribute names and closing tags).
3. It should include symbols in the check if they appear in the dictionary.  For
example, if "inc." is in the dictionary, then checking "inc." in the text
shouldn't cause a problem (currently, it mark "inc" and suggests changing it to
"inc.").
4. I'd like to ignore everything inside &lt;code&gt; or &lt;pre&gt; tags.
*** Bug 85747 has been marked as a duplicate of this bug. ***
Bug 85747 is a problem with the tokenizer.
correct.
It should also ignore type names in JavaDoc comments.
*** Bug 166897 has been marked as a duplicate of this bug. ***
See also bug 167599.
*** Bug 183880 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>After playing with spell checking for a while, here are some recommendations:
1. I'd like to be able to turn off spell checking in string constants.
2. I'd like to ignore everything inside an HTML tag (currently, it hollers at me
about attribute names and closing tags).
3. It should include symbols in the check if they appear in the dictionary.  For
example, if "inc." is in the dictionary, then checking "inc." in the text
shouldn't cause a problem (currently, it mark "inc" and suggests changing it to
"inc.").
4. I'd like to ignore everything inside &lt;code&gt; or &lt;pre&gt; tags.
*** Bug 85747 has been marked as a duplicate of this bug. ***
Bug 85747 is a problem with the tokenizer.
correct.
It should also ignore type names in JavaDoc comments.
*** Bug 166897 has been marked as a duplicate of this bug. ***
See also bug 167599.
*** Bug 183880 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68899" />
    <CreationDate amount="2004-06-29 13:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>No Tests (URL, JUnit, or Manual) can be executed on iSeries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="1161" end="1184" />
        <code>String jvmArgs = "";</code>
      </source_code>
      <source_code type="assignment">
        <location start="1231" end="1294" />
        <code>Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8005 ";</code>
      </source_code>
      <source_code type="assignment">
        <location start="1299" end="1356" />
        <code>jvmArgs += "-Dhyades.loadtest.nusers=" + nusers + " ";</code>
      </source_code>
      <source_code type="assignment">
        <location start="1369" end="1443" />
        <code>+= "org.eclipse.hyades.test.java.runner.HyadesJUnitRunner "+testClass+" ";</code>
      </source_code>
      <source_code type="assignment">
        <location start="1444" end="1476" />
        <code>jvmArgs += testID+" "+nusers;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1477" end="1540" />
        <code>// If we're running something other than a test suite,</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1565" end="1598" />
        <code>// test method we should call</code>
      </source_code>
      <source_code type="assignment">
        <location start="1645" end="1693" />
        <code>jvmArgs += " "+theImplementor.getLocation();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- hcjbnd.c</Line>
          <Line>- hclaunch.c</Line>
          <Line>- launcher_md.c</Line>
          <Line>- launcher_os400.c</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>There is a problem in the way that the execution harness invokes the JVM on the 
iSeries platform.  Currently the JVM is started as it would be on a Unix or 
Windows based system. In order for execution to work on iSeries the JVM has to 
be invoked differently.
I have to understand how you use the "-Dhyades.test.JVM" parameter inside the 
config file. Are you spawning a new JVM from the one that's launched by the 
RAC? If that's true, your code has to be able to handle the specific AS/400 way 
of calling java. Please show me how your code is calling java.
Joe can better answer your question.  I am not intimately familiar with how the 
JVM is spawned.  This defect may be better placed in another component.  I just 
needed to track the fact that the tests don't currently work.  
The JVM launching code is in hclaunch.c, in the method 
Java_org_eclipse_hyades_execution_core_impl_ProcessExecutorImpl_startProcess0.

The commandline args passed to the JVM are supplied by a callback into the 
java side.  The args are constructed in 
org.eclipse.hyades.execution.harness.JavaProcessExecutableObjectAdapter.setupEx
ecutableObject.  The relevant code is:

			String jvmArgs = "";
			
			if ( DEBUG )
				jvmArgs += "-Xdebug -
Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8005 ";
			
			jvmArgs += "-Dhyades.loadtest.nusers=" + nusers + " ";
			jvmArgs 
+= "org.eclipse.hyades.test.java.runner.HyadesJUnitRunner "+testClass+" ";
			jvmArgs += testID+" "+nusers;
			
			// If we're running something other than a test suite, 
pass in the name of the 
			// test method we should call
			if ( !(rootResource instanceof ITestSuite))
				jvmArgs += " "+theImplementor.getLocation();

In all cases today, DEBUG is false, and rootResource is an instanceof 
ITestSuite (so only the 3 lines in the middle of that snippet are actually 
used to construct the args today.)  That's not to say that these things won't 
change -- only to make sure you aren't distracted by code that couldn't be the 
cause of this defect.

Thanks,
--Joe
I have done some "printf" investigation into the code and found out that the 
native function:
Java_org_eclipse_hyades_execution_core_impl_ProcessExecutorImpl_startProcess0()
inside "hclaunch.c" is never called.

I did some backtrace in the java code and found out that the "launch()" method 
of the "ProcessExecutorImpl" class was not called either.

On top of this, I have also found out that the JNI calls from hclaunch.c to the 
java layer are not properly #pragma to the 819 (ASCII) code page. That means 
the native code will not be able to call the java getter methods to retrieve 
the parameters for execution. This is not the cause of this problem but will 
surface once the original problem has been identified.
Further investigation shows that the custom command is received by the HDCE and 
forwarded to the test agent. No response is received after the custom command 
is sent.

It turn out that #pragma is missing in both hcjbnd.c and hclaunch.c for all JNI 
functions.
Fix checked into 3.0.1 and head 20040708 3:00pm.
- hcjbnd.c
- hclaunch.c
- launcher_md.c
- launcher_os400.c

Most of the fix are adding #pragma convert(819) to fix the JNI call problems. 
Also fixed the error when enviroment variables are defined but has a null 
value. Almost all changes, except for error handling conditions, are #ifdef 
__OS400__ enclosed.

As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>There is a problem in the way that the execution harness invokes the JVM on the 
iSeries platform.  Currently the JVM is started as it would be on a Unix or 
Windows based system. In order for execution to work on iSeries the JVM has to 
be invoked differently.
I have to understand how you use the "-Dhyades.test.JVM" parameter inside the 
config file. Are you spawning a new JVM from the one that's launched by the 
RAC? If that's true, your code has to be able to handle the specific AS/400 way 
of calling java. Please show me how your code is calling java.
Joe can better answer your question.  I am not intimately familiar with how the 
JVM is spawned.  This defect may be better placed in another component.  I just 
needed to track the fact that the tests don't currently work.  
The JVM launching code is in hclaunch.c, in the method 
Java_org_eclipse_hyades_execution_core_impl_ProcessExecutorImpl_startProcess0.

The commandline args passed to the JVM are supplied by a callback into the 
java side.  The args are constructed in 
org.eclipse.hyades.execution.harness.JavaProcessExecutableObjectAdapter.setupEx
ecutableObject.  The relevant code is:

			String jvmArgs = "";
			
			if ( DEBUG )
				jvmArgs += "-Xdebug -
Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8005 ";
			
			jvmArgs += "-Dhyades.loadtest.nusers=" + nusers + " ";
			jvmArgs 
+= "org.eclipse.hyades.test.java.runner.HyadesJUnitRunner "+testClass+" ";
			jvmArgs += testID+" "+nusers;
			
			// If we're running something other than a test suite, 
pass in the name of the 
			// test method we should call
			if ( !(rootResource instanceof ITestSuite))
				jvmArgs += " "+theImplementor.getLocation();

In all cases today, DEBUG is false, and rootResource is an instanceof 
ITestSuite (so only the 3 lines in the middle of that snippet are actually 
used to construct the args today.)  That's not to say that these things won't 
change -- only to make sure you aren't distracted by code that couldn't be the 
cause of this defect.

Thanks,
--Joe
I have done some "printf" investigation into the code and found out that the 
native function:
Java_org_eclipse_hyades_execution_core_impl_ProcessExecutorImpl_startProcess0()
inside "hclaunch.c" is never called.

I did some backtrace in the java code and found out that the "launch()" method 
of the "ProcessExecutorImpl" class was not called either.

On top of this, I have also found out that the JNI calls from hclaunch.c to the 
java layer are not properly #pragma to the 819 (ASCII) code page. That means 
the native code will not be able to call the java getter methods to retrieve 
the parameters for execution. This is not the cause of this problem but will 
surface once the original problem has been identified.
Further investigation shows that the custom command is received by the HDCE and 
forwarded to the test agent. No response is received after the custom command 
is sent.

It turn out that #pragma is missing in both hcjbnd.c and hclaunch.c for all JNI 
functions.
Fix checked into 3.0.1 and head 20040708 3:00pm.
- hcjbnd.c
- hclaunch.c
- launcher_md.c
- launcher_os400.c

Most of the fix are adding #pragma convert(819) to fix the JNI call problems. 
Also fixed the error when enviroment variables are defined but has a null 
value. Almost all changes, except for error handling conditions, are #ifdef 
__OS400__ enclosed.

As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="68900" />
    <CreationDate amount="2004-06-29 13:49:00 -0400" />
    <DupId amount="41867" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Syntax coloring in hover text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>A new feature in 3.0 is the syntax coloring in code displayed in hover text (as
well as in code assist).  However, this "feature" is now the one thing in the
way of allowing syntax coloring on dark backgrounds (much easier on the eyes). 
Because you can't control what color the background is for hover text, the
syntax colored code isn't readable, since the colors are light-on-light.

Please add an option to turn off syntax coloring in hover text.  In addition,
adding the ability to change the default background color for hover text would
be nice (though I would probably use the first option).
This also applies to showing code in the Declaration view.


*** This bug has been marked as a duplicate of 41867 ***</WithStack>
    <WithOutStack>A new feature in 3.0 is the syntax coloring in code displayed in hover text (as
well as in code assist).  However, this "feature" is now the one thing in the
way of allowing syntax coloring on dark backgrounds (much easier on the eyes). 
Because you can't control what color the background is for hover text, the
syntax colored code isn't readable, since the colors are light-on-light.

Please add an option to turn off syntax coloring in hover text.  In addition,
adding the ability to change the default background color for hover text would
be nice (though I would probably use the first option).
This also applies to showing code in the Declaration view.


*** This bug has been marked as a duplicate of 41867 ***</WithOutStack>
  </Bug>
</infozilla-output>

