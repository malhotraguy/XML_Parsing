<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="71701" />
    <CreationDate amount="2004-08-10 04:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Allow plugins to veto shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="1674" end="1696" />
        <code>void postStartup();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1697" end="1722" />
        <code>boolean preShutdown();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The WorkbenchAdvisor should be accessible from Plugins to catch the workbench's
lifecycle events.

In an RCP application a plugin should be asked if the platform may shutdown on
File-Quit (e.g. a view might have unsaved data (sometimes an editor cannot be
used as long as there is no way from stopping an editor from being closed by the
user)).

Right now in WorkbenchAdvisor.preShutdown() I ask the views to prompt the user
if  the platform may shutdown. 
IPartListener cannot stop the platform from shutting down.

The views I find in my WorkbenchAdvisor via
configurer.getWindow().getActivePage().findView(IDVIEW). This works, but results
in a dependency of RCPWorkbenchAdvisor to the views. So I thought of having the
views register themselves in RCPWorkbenchAdvisor. 

But there is no way to access the WorkbenchAdvisor from a plugin. There should
be a method, e.g. IWorkbench.getAdvisor(). Right now there is
Workbench.getAdvisor() but it is package private.
It is intentional that regular plug-ins cannot access the WorkbenchAdvisor.  The
WorkbenchAdvisor gives special powers to the application that regular plugins
should not have.

It would be better to address the limitation you point out by providing new
workbench lifecycle events to regular plugins, including a pre-shutdown
notification, and giving the ability of any of the interested plugins to veto
the shutdown.

Yes, you are right, providing the workbench lifecycle events to regular plugins
would suffice and would be better.
We could provide API on IWorkbench, e.g.
IWorkbench.add/removeWorkbenchListener(IWorkbenchListener) where
IWorkbenchListener has something like:
interface IWorkbenchListener {
   void postStartup();
   boolean preShutdown();
   ...
}

However, the plugin would have to already be activated in order to hook the
listener.

It may be better to provide this as an extension point, allowing the extension
to specify which events it's interested in, so that we don't have this bootstrap
problem.

Which would be better for your scenario?
Un un-activated plugin would not have dirty data, so the need for a plugin to be
activated to register itself seems not to be a problem to me. Anyway, in an RCP
app the product plugin is activated on startup. 

I'd prefer a IWorkbenchListener, its idea is consistent to IPartListener. Also,
I don't like XML descriptions, it is too easy to make mistakes -&gt; Bug 70198.
(In reply to comment #3)
A listener-method in IWorkbenchListener(2) would be good. Can you implement 
this in 3.2, please.
*** Bug 79986 has been marked as a duplicate of this bug. ***
*** Bug 113955 has been marked as a duplicate of this bug. ***
With the current support in 3.1, views can implement ISaveablePart, and fire the appropriate dirty state change notifications.  The user would be prompted to save any changes on shutdown if the view reported that it was dirty, even if all editors were closed.  
See also bug 112225.

It would still be nice to have this ability from the plug-in. In our case the file (and its structure) is represented in multiple editors and a navigational view at the same time. The ideal UI for our users would be to let them close all of those parts (view and editors) and still be prompted to save the model during the app shutdown. Of course, they would be prompted when closing the last part displaying the model but they can decline to save at that point and chose to do so when closing the app.

It is a matter of perception. Our average user does not consider it mandatory to close his model just because the parts (views/editors) are closed. For example, it could be cross-referenced from another model whose editor is still up.

In my case it's an external tool process.
The user should get a last chance to save the results of the tool. To save the results, the user have to interact with the console. It's not possible to save the results programmatically.
ISaveablePart(2) does not work: the process does not have its own view. A ConsolePage (IPageBookViewPage) does not support ISaveablePart (strictly speaking, there is no guarantee, that a ConsoleView is opened).
Will consider for 3.2.

Stefan, do you think this would help address the issue you mentioned today regarding doing saves in the background, and how such jobs can get interrupted due to the workbench shutting down?

I'm considering a programmatic API to allow adding a vetoing pre-shutdown listener to the workbench.  For example:
  IWorkbench.addWorkbenchListener(IWorkbenchListener)

where IWorkbenchListener has:
  boolean preShutdown()
(for consistency with WorkbenchAdvisor.preShutdown())

For those building RCP apps, do you have any preference for whether clients get notified before or after WorkbenchAdvisor.preShutdown()?
I'm currently planning on notifying clients before the advisor.

(In reply to comment #13)
I would agree to "before".
Added IWorkbenchListener which has preShutdown and postShutdown methods, and corresponding add/removeWorkbenchListener methods in IWorkbench.

In the end, I decided to notify these listeners after the advisor; the rationale being that the advisor has overall control of the app and should have the first chance to veto shutdown.  Stephan, what was your rationale for preferring before?

Also added WorkbenchListenerTest to the RCP test suite.

Teddy, Stephan and others, could you give this a spin?

The workbench listeners are also notified before checking for editors with unsaved changes.

(In reply to comment #15)
It meets my demands; whether before or after is not important for me. 
Thanks.

The workbench listener works as desired.
Thanks.

Verified in I20060213-1200.</WithStack>
    <WithOutStack>The WorkbenchAdvisor should be accessible from Plugins to catch the workbench's
lifecycle events.

In an RCP application a plugin should be asked if the platform may shutdown on
File-Quit (e.g. a view might have unsaved data (sometimes an editor cannot be
used as long as there is no way from stopping an editor from being closed by the
user)).

Right now in WorkbenchAdvisor.preShutdown() I ask the views to prompt the user
if  the platform may shutdown. 
IPartListener cannot stop the platform from shutting down.

The views I find in my WorkbenchAdvisor via
configurer.getWindow().getActivePage().findView(IDVIEW). This works, but results
in a dependency of RCPWorkbenchAdvisor to the views. So I thought of having the
views register themselves in RCPWorkbenchAdvisor. 

But there is no way to access the WorkbenchAdvisor from a plugin. There should
be a method, e.g. IWorkbench.getAdvisor(). Right now there is
Workbench.getAdvisor() but it is package private.
It is intentional that regular plug-ins cannot access the WorkbenchAdvisor.  The
WorkbenchAdvisor gives special powers to the application that regular plugins
should not have.

It would be better to address the limitation you point out by providing new
workbench lifecycle events to regular plugins, including a pre-shutdown
notification, and giving the ability of any of the interested plugins to veto
the shutdown.

Yes, you are right, providing the workbench lifecycle events to regular plugins
would suffice and would be better.
We could provide API on IWorkbench, e.g.
IWorkbench.add/removeWorkbenchListener(IWorkbenchListener) where
IWorkbenchListener has something like:
interface IWorkbenchListener {
   void postStartup();
   boolean preShutdown();
   ...
}

However, the plugin would have to already be activated in order to hook the
listener.

It may be better to provide this as an extension point, allowing the extension
to specify which events it's interested in, so that we don't have this bootstrap
problem.

Which would be better for your scenario?
Un un-activated plugin would not have dirty data, so the need for a plugin to be
activated to register itself seems not to be a problem to me. Anyway, in an RCP
app the product plugin is activated on startup. 

I'd prefer a IWorkbenchListener, its idea is consistent to IPartListener. Also,
I don't like XML descriptions, it is too easy to make mistakes -&gt; Bug 70198.
(In reply to comment #3)
A listener-method in IWorkbenchListener(2) would be good. Can you implement 
this in 3.2, please.
*** Bug 79986 has been marked as a duplicate of this bug. ***
*** Bug 113955 has been marked as a duplicate of this bug. ***
With the current support in 3.1, views can implement ISaveablePart, and fire the appropriate dirty state change notifications.  The user would be prompted to save any changes on shutdown if the view reported that it was dirty, even if all editors were closed.  
See also bug 112225.

It would still be nice to have this ability from the plug-in. In our case the file (and its structure) is represented in multiple editors and a navigational view at the same time. The ideal UI for our users would be to let them close all of those parts (view and editors) and still be prompted to save the model during the app shutdown. Of course, they would be prompted when closing the last part displaying the model but they can decline to save at that point and chose to do so when closing the app.

It is a matter of perception. Our average user does not consider it mandatory to close his model just because the parts (views/editors) are closed. For example, it could be cross-referenced from another model whose editor is still up.

In my case it's an external tool process.
The user should get a last chance to save the results of the tool. To save the results, the user have to interact with the console. It's not possible to save the results programmatically.
ISaveablePart(2) does not work: the process does not have its own view. A ConsolePage (IPageBookViewPage) does not support ISaveablePart (strictly speaking, there is no guarantee, that a ConsoleView is opened).
Will consider for 3.2.

Stefan, do you think this would help address the issue you mentioned today regarding doing saves in the background, and how such jobs can get interrupted due to the workbench shutting down?

I'm considering a programmatic API to allow adding a vetoing pre-shutdown listener to the workbench.  For example:
  IWorkbench.addWorkbenchListener(IWorkbenchListener)

where IWorkbenchListener has:
  boolean preShutdown()
(for consistency with WorkbenchAdvisor.preShutdown())

For those building RCP apps, do you have any preference for whether clients get notified before or after WorkbenchAdvisor.preShutdown()?
I'm currently planning on notifying clients before the advisor.

(In reply to comment #13)
I would agree to "before".
Added IWorkbenchListener which has preShutdown and postShutdown methods, and corresponding add/removeWorkbenchListener methods in IWorkbench.

In the end, I decided to notify these listeners after the advisor; the rationale being that the advisor has overall control of the app and should have the first chance to veto shutdown.  Stephan, what was your rationale for preferring before?

Also added WorkbenchListenerTest to the RCP test suite.

Teddy, Stephan and others, could you give this a spin?

The workbench listeners are also notified before checking for editors with unsaved changes.

(In reply to comment #15)
It meets my demands; whether before or after is not important for me. 
Thanks.

The workbench listener works as desired.
Thanks.

Verified in I20060213-1200.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71702" />
    <CreationDate amount="2004-08-10 06:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>code completion doesn't work anymore after Array cast.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="package">
        <location start="18" end="30" />
        <code>package foo;</code>
      </source_code>
      <source_code type="import">
        <location start="31" end="59" />
        <code>import java.util.ArrayList;</code>
      </source_code>
      <source_code type="class">
        <location start="61" end="254" />
        <code>public class foo 
{
        public foo(int x)
        {
        		String[] tmp = new String[10];
        		ArrayList al = new ArrayList();
        		tmp = (String[])al.toArray(tmp);
        }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>using this code:

package foo;

import java.util.ArrayList;

public class foo 
{
        public foo(int x)
        {
        		String[] tmp = new String[10];
        		ArrayList al = new ArrayList();
        		tmp = (String[])al.toArray(tmp);
        }
}

then after the Array cast (String[])
code completion doesn't work anymore

I am using version:

Version: 3.1.0
Build id: 200408031300

but i also now that this also happens in 3.0 code.
Works in 3.0. Doesn't work in 200408031300.

Moving to core since codeComplete(int offset, ICompletionRequestor requestor)
doesn't report any completions.
Fixed and tests added
  CompletionParserTest2#test0143() -&gt; test0146()
  GenericsCompletionParserTest#test0171() -&gt; test0176</WithStack>
    <WithOutStack>using this code:

package foo;

import java.util.ArrayList;

public class foo 
{
        public foo(int x)
        {
        		String[] tmp = new String[10];
        		ArrayList al = new ArrayList();
        		tmp = (String[])al.toArray(tmp);
        }
}

then after the Array cast (String[])
code completion doesn't work anymore

I am using version:

Version: 3.1.0
Build id: 200408031300

but i also now that this also happens in 3.0 code.
Works in 3.0. Doesn't work in 200408031300.

Moving to core since codeComplete(int offset, ICompletionRequestor requestor)
doesn't report any completions.
Fixed and tests added
  CompletionParserTest2#test0143() -&gt; test0146()
  GenericsCompletionParserTest#test0171() -&gt; test0176</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71703" />
    <CreationDate amount="2004-08-10 06:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>OutOfMemoryError</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I keep getting OutOfMemoryError with Eclipse 3.0. The CPU keeps busy most of 
the time until the OutOfMemoryError occurs.

In .log I found:
!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:51:16.510
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError

!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:52:29.746
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError

!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:57:47.462
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
What are your command line to start Eclipse? Could you please provide your whole
.log file?
Thanks.
Please reopen when you can provide the necessary info.
Closing as never got requested information in a long time
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I keep getting OutOfMemoryError with Eclipse 3.0. The CPU keeps busy most of 
the time until the OutOfMemoryError occurs.

In .log I found:
!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:51:16.510
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError

!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:52:29.746
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError

!ENTRY org.eclipse.jdt.core 4 4 Aug 10, 2005 11:57:47.462
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.OutOfMemoryError
What are your command line to start Eclipse? Could you please provide your whole
.log file?
Thanks.
Please reopen when you can provide the necessary info.
Closing as never got requested information in a long time
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71704" />
    <CreationDate amount="2004-08-10 06:35:00 -0400" />
    <DupId amount="71016" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>java editor: Caret positioning not right anymore (3.1)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="assignment">
        <location start="127" end="174" />
        <code>String[] tmp = (String[])al.toArray(tmp2);</code>
      </source_code>
      <source_code type="assignment">
        <location start="260" end="328" />
        <code>|    String|Buffer[] |tmp |= |(String|Buffer[])|al.|toArray|(tmp2|);</code>
      </source_code>
      <source_code type="assignment">
        <location start="362" end="437" />
        <code>|    |String|Buffer|[] |tmp| |= (|String|Buffer|[])|al|.|to|Array|(|tmp2|);</code>
      </source_code>
      <source_code type="assignment">
        <location start="588" end="654" />
        <code>|StringBuffer|[] tmp |= (|StringBuffer|[])|al.to|Array(|tmp2);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have smart caret positioning enabled in the preferences of the java editor
(without it it is even worse)

i have this line:

     String[] tmp = (String[])al.toArray(tmp2);

if i start completely at front i get these places (|) when i use CTRL-
ARROW_RIGHT

|    String|Buffer[] |tmp |= |(String|Buffer[])|al.|toArray|(tmp2|);

i excpect something like this:

|    |String|Buffer|[] |tmp| |= (|String|Buffer|[])|al|.|to|Array|(|tmp2|);

it seems to me that somehow it always ignores one.
because if the starting position is different for example at front of the 
string buffer itself:

    |StringBuffer|[] tmp |= (|StringBuffer|[])|al.to|Array(|tmp2);


Is this a setting somehow? Or is one events seen as 2 things and it jumps 
directly 2 places?
Java editor is JDT/Text. Moving.

Might be a dup of bug 71016 if build id &lt; 20040804.
Johan, please provide your build id.
yes you are right
It is fixed now, just upgraded to 20040810 and it works as it should now again.

*** This bug has been marked as a duplicate of 71016 ***</WithStack>
    <WithOutStack>I have smart caret positioning enabled in the preferences of the java editor
(without it it is even worse)

i have this line:

     String[] tmp = (String[])al.toArray(tmp2);

if i start completely at front i get these places (|) when i use CTRL-
ARROW_RIGHT

|    String|Buffer[] |tmp |= |(String|Buffer[])|al.|toArray|(tmp2|);

i excpect something like this:

|    |String|Buffer|[] |tmp| |= (|String|Buffer|[])|al|.|to|Array|(|tmp2|);

it seems to me that somehow it always ignores one.
because if the starting position is different for example at front of the 
string buffer itself:

    |StringBuffer|[] tmp |= (|StringBuffer|[])|al.to|Array(|tmp2);


Is this a setting somehow? Or is one events seen as 2 things and it jumps 
directly 2 places?
Java editor is JDT/Text. Moving.

Might be a dup of bug 71016 if build id &lt; 20040804.
Johan, please provide your build id.
yes you are right
It is fixed now, just upgraded to 20040810 and it works as it should now again.

*** This bug has been marked as a duplicate of 71016 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71705" />
    <CreationDate amount="2004-08-10 06:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] CodeAssist failure with simple test case</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="30" end="157" />
        <code>public class X {
  Object#cursor# o;
  void foo(int[] a, int[] b){
    if(a.lenth &lt; b.length)
      System.out.println();
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="219" end="271" />
        <code>class X {
  bar#cursor#

  void foo(){
    A&lt;B
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) create the following class</Line>
          <Line />
          <Line>2) do ctrl + space at cursor location</Line>
          <Line>More simple test case</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) create the following class
public class X {
  Object#cursor# o;
  void foo(int[] a, int[] b){
    if(a.lenth &lt; b.length)
      System.out.println();
  }
}
2) do ctrl + space at cursor location
More simple test case

class X {
  bar#cursor#

  void foo(){
    A&lt;B
  }
}
Fixed and tests added
  GenericsCompletionParserTest#test169()
  GenericsCompletionParserTest#test170()</WithStack>
    <WithOutStack>1) create the following class
public class X {
  Object#cursor# o;
  void foo(int[] a, int[] b){
    if(a.lenth &lt; b.length)
      System.out.println();
  }
}
2) do ctrl + space at cursor location
More simple test case

class X {
  bar#cursor#

  void foo(){
    A&lt;B
  }
}
Fixed and tests added
  GenericsCompletionParserTest#test169()
  GenericsCompletionParserTest#test170()</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71706" />
    <CreationDate amount="2004-08-10 07:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="HP-UX" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Not Able to profile an application. Getting JVM error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Data collection engine - v 3.0, on HP-UX 11i, java 1.4.1_05</Line>
          <Line>2. Hyades Runtime v 3.0 on windows.</Line>
          <Line>3. I m trying to profile an application on WLS 6.1 and the jdk is 1.3.1_06. This</Line>
          <Line>WLS is on HP-UX11i.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I am trying to run Hyades 3.0 data collection engine on WLS deployed on HP-UX. 
I am able to attach to the process, but as soon as I start the profiling, I get 
the following error.

env for WLS : HP-UX 11i, WLS 6.1, java 1.3.1_06.
env for data collection engine : HP-UX 11i, version 3.0, java 1.4.1_05
hyades run time 3.0 for windows

Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_INVOCAT
IONS"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PORT"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_MONITOR"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_AUTO_MONITORING"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_INVOCAT
IONS_NUM"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_FILE"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_SECONDS
"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_AGENTS"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_SECONDS
_NUM"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILE_TO_FILE"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_HOSTNAME"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_PROJECT"
Unknown Profile Option "org.eclipse.debug.core.source_locator_id"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type0"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type1"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type2"

Unexpected Signal : 11 occurred at PC=0xc88babc4
Function name=request_event__5jvmpiSFlPv
Library=/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/hotspot/libjvm.sl

Current Java thread:
"Thread-5" prio=7 tid=0x01f09da0 nid=6 lwp_id=3892649 runnable [0x00000000..0x79
843ec0]

Dynamic libraries:
/web/bea6.1sp5/jdk131/bin/../bin/PA_RISC2.0/native_threads/java
        text:0x00001000-0x00007384 data:0x00008000-0x000086b8
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/hotspot/libjvm.sl
        text:0xc8400000-0xc8bdd000 data:0x79b17000-0x79bce000
/usr/lib/libpthread.1
        text:0xc0030000-0xc0049000 data:0x79ade000-0x79ae1000
/usr/lib/libm.2
        text:0xc0070000-0xc009c000 data:0x79ae1000-0x79ae2000
/usr/lib/librt.2
        text:0xc00fc000-0xc0100000 data:0x79ae2000-0x79ae3000
/usr/lib/libcl.2
        text:0xc03c0000-0xc04ab000 data:0x79ae4000-0x79af0000
/usr/lib/libisamstub.1
        text:0xc00c1000-0xc00c2000 data:0x79ae3000-0x79ae4000
/usr/lib/libCsup.2
        text:0xc0310000-0xc032b000 data:0x79af0000-0x79af3000
/usr/lib/libc.2
        text:0xc0100000-0xc0246000 data:0x79bd3000-0x79be6000
/usr/lib/libdld.2
        text:0xc0004000-0xc0007000 data:0x79bce000-0x79bcf000
/web/bea6.1sp5/jdk131/jre/lib/PA_RISC2.0/native_threads/libhpi.sl
        text:0xc1740000-0xc1752000 data:0x79adc000-0x79ade000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libverify.sl
        text:0xc0770000-0xc0780000 data:0x79aca000-0x79acb000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libjava.sl
        text:0xc17a0000-0xc17cc000 data:0x79ac5000-0x79aca000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libzip.sl
        text:0xc1c10000-0xc1c23000 data:0x79ac1000-0x79ac3000
/appl/gcdbadm/hyades1.2/lib/libpiAgent.sl
        text:0xc2250000-0xc2279000 data:0x3b134000-0x3b19d000
/appl/gcdbadm/hyades1.2/lib/libhcbnd.sl
        text:0xc03bd000-0xc03c0000 data:0x79854000-0x79855000
/appl/gcdbadm/hyades1.2/lib/libhccldt.sl
        text:0xc00f3000-0xc00f4000 data:0x79857000-0x79858000
/appl/gcdbadm/hyades1.2/lib/libhcclsm.sl
        text:0xc12ac000-0xc12b9000 data:0x79855000-0x79856000
/appl/gcdbadm/hyades1.2/lib/libhcclco.sl
        text:0xc03b8000-0xc03bd000 data:0x79856000-0x79857000
/appl/gcdbadm/hyades1.2/lib/libhccls.sl
        text:0xc0276000-0xc0278000 data:0x79858000-0x79859000
/usr/lib/libstream.2
        text:0xc04f0000-0xc0518000 data:0x7985b000-0x7985e000
/usr/lib/libstd.2
        text:0xc04b0000-0xc04e9000 data:0x79860000-0x79863000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libnet.sl
        text:0xc0534000-0xc053d000 data:0x79820000-0x79821000
/usr/lib/libnss_dns.1
        text:0xc009c000-0xc009f000 data:0x7981f000-0x79820000
/usr/lib/libnss_nis.1
        text:0xc0008000-0xc000f000 data:0x7981e000-0x7981f000
/usr/lib/libnsl.1
        text:0xc0280000-0xc030c000 data:0x79811000-0x7981e000
/usr/lib/libxti.2
        text:0xc00a0000-0xc00b8000 data:0x7980a000-0x7980d000
/usr/lib/libnss_files.1
        text:0xc00b8000-0xc00c1000 data:0x79809000-0x7980a000
/web/bea6.1sp5/wlserver6.1/lib/hpux11/libmuxer.sl
        text:0xc030c000-0xc030f000 data:0x79808000-0x79809000

Local Time = Tue Aug 10 19:42:04 2004
Elapsed Time = 433
#
# HotSpot Virtual Machine Error : 11
# Please report this error to HP customer support.
#
# Java VM: Java HotSpot(TM) Server VM (1.3.1 1.3.1.06-JPSE_1.3.1.06_20020625 PA2
.0 mixed mode)
#
# An error report file has been saved as /var/tmp/hs_err_pid17926.log.
# Please refer to the file for further information.
#
startManagedWebLogic.sh[250]: 17250 Abort
Even though you indicated you were using java 1.4.1_05 for the data collection
engine, the dump that you provided indicates java 1.3.1.06 is being used. 

I suggest upgrading to HP java 1.4.2_04 (available from the HP website --
earlier HP jdks suffer from the bug described in bug 56404) and properly
configuring the data collection engine for that jvm and see if you can still
reproduce the problem. 
I have changed the severity and target as we wait for further interaction with 
the originator
As I had mentioned earlier this is my env:
1. Data collection engine - v 3.0, on HP-UX 11i, java 1.4.1_05
2. Hyades Runtime v 3.0 on windows.
3. I m trying to profile an application on WLS 6.1 and the jdk is 1.3.1_06. This 
 WLS is on HP-UX11i.

I would like to know 
1. whether profiling in this setup will work or not ?
2. If I need to get some earlier versions of hyades runtime and dara 
collection engine to use the profiling option of Hyades. I cant change my WLS 
jdk.


I've gone back and looked at the core dump a little more closely. The libpiAgent
(and other hyades libraries) appear to be in the directory:

/appl/gcdbadm/hyades1.2/lib

Yet you claim you are using the 3.0 data collection engine (not 1.2). It's very
likely that you are encountering a bug with the 1.3.x HP JDK that we worked
around in a later version of hyades (3.0). Unless the directory name is a
misnomer, and you've actually installed 3.0 in that directory tree, you need to
properly configure your machine to be using the right files. 
Please reopen if you can provide more information.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>I am trying to run Hyades 3.0 data collection engine on WLS deployed on HP-UX. 
I am able to attach to the process, but as soon as I start the profiling, I get 
the following error.

env for WLS : HP-UX 11i, WLS 6.1, java 1.3.1_06.
env for data collection engine : HP-UX 11i, version 3.0, java 1.4.1_05
hyades run time 3.0 for windows

Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_INVOCAT
IONS"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PORT"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_MONITOR"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_AUTO_MONITORING"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_INVOCAT
IONS_NUM"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_FILE"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_SECONDS
"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_AGENTS"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILING_LIMIT_SECONDS
_NUM"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_PROFILE_TO_FILE"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_HOSTNAME"
Unknown Profile Option "org.eclipse.hyades.trace.ui.ATTR_DESTINATION_PROJECT"
Unknown Profile Option "org.eclipse.debug.core.source_locator_id"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type0"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type1"
Unknown Profile Option "org.eclipse.hyades.trace.ui.type2"

Unexpected Signal : 11 occurred at PC=0xc88babc4
Function name=request_event__5jvmpiSFlPv
Library=/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/hotspot/libjvm.sl

Current Java thread:
"Thread-5" prio=7 tid=0x01f09da0 nid=6 lwp_id=3892649 runnable [0x00000000..0x79
843ec0]

Dynamic libraries:
/web/bea6.1sp5/jdk131/bin/../bin/PA_RISC2.0/native_threads/java
        text:0x00001000-0x00007384 data:0x00008000-0x000086b8
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/hotspot/libjvm.sl
        text:0xc8400000-0xc8bdd000 data:0x79b17000-0x79bce000
/usr/lib/libpthread.1
        text:0xc0030000-0xc0049000 data:0x79ade000-0x79ae1000
/usr/lib/libm.2
        text:0xc0070000-0xc009c000 data:0x79ae1000-0x79ae2000
/usr/lib/librt.2
        text:0xc00fc000-0xc0100000 data:0x79ae2000-0x79ae3000
/usr/lib/libcl.2
        text:0xc03c0000-0xc04ab000 data:0x79ae4000-0x79af0000
/usr/lib/libisamstub.1
        text:0xc00c1000-0xc00c2000 data:0x79ae3000-0x79ae4000
/usr/lib/libCsup.2
        text:0xc0310000-0xc032b000 data:0x79af0000-0x79af3000
/usr/lib/libc.2
        text:0xc0100000-0xc0246000 data:0x79bd3000-0x79be6000
/usr/lib/libdld.2
        text:0xc0004000-0xc0007000 data:0x79bce000-0x79bcf000
/web/bea6.1sp5/jdk131/jre/lib/PA_RISC2.0/native_threads/libhpi.sl
        text:0xc1740000-0xc1752000 data:0x79adc000-0x79ade000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libverify.sl
        text:0xc0770000-0xc0780000 data:0x79aca000-0x79acb000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libjava.sl
        text:0xc17a0000-0xc17cc000 data:0x79ac5000-0x79aca000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libzip.sl
        text:0xc1c10000-0xc1c23000 data:0x79ac1000-0x79ac3000
/appl/gcdbadm/hyades1.2/lib/libpiAgent.sl
        text:0xc2250000-0xc2279000 data:0x3b134000-0x3b19d000
/appl/gcdbadm/hyades1.2/lib/libhcbnd.sl
        text:0xc03bd000-0xc03c0000 data:0x79854000-0x79855000
/appl/gcdbadm/hyades1.2/lib/libhccldt.sl
        text:0xc00f3000-0xc00f4000 data:0x79857000-0x79858000
/appl/gcdbadm/hyades1.2/lib/libhcclsm.sl
        text:0xc12ac000-0xc12b9000 data:0x79855000-0x79856000
/appl/gcdbadm/hyades1.2/lib/libhcclco.sl
        text:0xc03b8000-0xc03bd000 data:0x79856000-0x79857000
/appl/gcdbadm/hyades1.2/lib/libhccls.sl
        text:0xc0276000-0xc0278000 data:0x79858000-0x79859000
/usr/lib/libstream.2
        text:0xc04f0000-0xc0518000 data:0x7985b000-0x7985e000
/usr/lib/libstd.2
        text:0xc04b0000-0xc04e9000 data:0x79860000-0x79863000
/web/bea6.1sp5/jdk131/bin/../jre/lib/PA_RISC2.0/libnet.sl
        text:0xc0534000-0xc053d000 data:0x79820000-0x79821000
/usr/lib/libnss_dns.1
        text:0xc009c000-0xc009f000 data:0x7981f000-0x79820000
/usr/lib/libnss_nis.1
        text:0xc0008000-0xc000f000 data:0x7981e000-0x7981f000
/usr/lib/libnsl.1
        text:0xc0280000-0xc030c000 data:0x79811000-0x7981e000
/usr/lib/libxti.2
        text:0xc00a0000-0xc00b8000 data:0x7980a000-0x7980d000
/usr/lib/libnss_files.1
        text:0xc00b8000-0xc00c1000 data:0x79809000-0x7980a000
/web/bea6.1sp5/wlserver6.1/lib/hpux11/libmuxer.sl
        text:0xc030c000-0xc030f000 data:0x79808000-0x79809000

Local Time = Tue Aug 10 19:42:04 2004
Elapsed Time = 433
#
# HotSpot Virtual Machine Error : 11
# Please report this error to HP customer support.
#
# Java VM: Java HotSpot(TM) Server VM (1.3.1 1.3.1.06-JPSE_1.3.1.06_20020625 PA2
.0 mixed mode)
#
# An error report file has been saved as /var/tmp/hs_err_pid17926.log.
# Please refer to the file for further information.
#
startManagedWebLogic.sh[250]: 17250 Abort
Even though you indicated you were using java 1.4.1_05 for the data collection
engine, the dump that you provided indicates java 1.3.1.06 is being used. 

I suggest upgrading to HP java 1.4.2_04 (available from the HP website --
earlier HP jdks suffer from the bug described in bug 56404) and properly
configuring the data collection engine for that jvm and see if you can still
reproduce the problem. 
I have changed the severity and target as we wait for further interaction with 
the originator
As I had mentioned earlier this is my env:
1. Data collection engine - v 3.0, on HP-UX 11i, java 1.4.1_05
2. Hyades Runtime v 3.0 on windows.
3. I m trying to profile an application on WLS 6.1 and the jdk is 1.3.1_06. This 
 WLS is on HP-UX11i.

I would like to know 
1. whether profiling in this setup will work or not ?
2. If I need to get some earlier versions of hyades runtime and dara 
collection engine to use the profiling option of Hyades. I cant change my WLS 
jdk.


I've gone back and looked at the core dump a little more closely. The libpiAgent
(and other hyades libraries) appear to be in the directory:

/appl/gcdbadm/hyades1.2/lib

Yet you claim you are using the 3.0 data collection engine (not 1.2). It's very
likely that you are encountering a bug with the 1.3.x HP JDK that we worked
around in a later version of hyades (3.0). Unless the directory name is a
misnomer, and you've actually installed 3.0 in that directory tree, you need to
properly configure your machine to be using the right files. 
Please reopen if you can provide more information.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71707" />
    <CreationDate amount="2004-08-10 08:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[move] Move CU does not add explicit import to avoid hiding of on-demand imported type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Build I200408100010:

Moving a class with name A to a package with code that references another 
class with the same unqualified name A yields uncompilable code. This happens 
only if the class A already existing in the target package is imported on 
demand (package.*).

Steps to reproduce:

-Create project JUnit
-Import http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/jdt-ui-home/smoke-
test/junit3.8.1src.zip into project
-Create a package with an arbitrary name somewhere in the project
-Create a class Test inside this package with the new class wizard
-Move class Test to an arbitrary package which references junit.framework.Test
That's the glory of star imports ...

The problem is that the moved type is hiding the on demand imported type.
Created attachment 13867
Test
Created attachment 13868
First implementation

Doesn't work - see bug 71761.
We should look into this during 3.8 (especially at the ImportRewrite). Paste and other actions have the same issue.</WithStack>
    <WithOutStack>Build I200408100010:

Moving a class with name A to a package with code that references another 
class with the same unqualified name A yields uncompilable code. This happens 
only if the class A already existing in the target package is imported on 
demand (package.*).

Steps to reproduce:

-Create project JUnit
-Import http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/jdt-ui-home/smoke-
test/junit3.8.1src.zip into project
-Create a package with an arbitrary name somewhere in the project
-Create a class Test inside this package with the new class wizard
-Move class Test to an arbitrary package which references junit.framework.Test
That's the glory of star imports ...

The problem is that the moved type is hiding the on demand imported type.
Created attachment 13867
Test
Created attachment 13868
First implementation

Doesn't work - see bug 71761.
We should look into this during 3.8 (especially at the ImportRewrite). Paste and other actions have the same issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71708" />
    <CreationDate amount="2004-08-10 09:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Parameter hint dialog is too small</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I found that the Ctrl-Shift-Space combination gives a popup dialogue which shows
me the possible completions of which I can select one, after which the
corresponding information hovers as a tooltip.

The popup dialogue is much too narrow to be useful in the complex cases (which
is where I usually need help), and the content does not resize when the dialogue
is resized.  A black border is drawn instead on the revealed area.
Resizing is bug 54943. The popup being too narrow is a new request.
Moving to text.
Fixed bug 54943. The window is now bigger (our size hint was not respected).
Please reopen if it is still to small when using I20040824 or newer.</WithStack>
    <WithOutStack>I found that the Ctrl-Shift-Space combination gives a popup dialogue which shows
me the possible completions of which I can select one, after which the
corresponding information hovers as a tooltip.

The popup dialogue is much too narrow to be useful in the complex cases (which
is where I usually need help), and the content does not resize when the dialogue
is resized.  A black border is drawn instead on the revealed area.
Resizing is bug 54943. The popup being too narrow is a new request.
Moving to text.
Fixed bug 54943. The window is now bigger (our size hint was not respected).
Please reopen if it is still to small when using I20040824 or newer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71709" />
    <CreationDate amount="2004-08-10 10:30:00 -0400" />
    <DupId amount="72295" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.3" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Failed to Start GUI on Sun Solaris 8.3, Eclipse 2.1.3, motiff</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341170947">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="2">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="3">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341170947">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)</Frame>
          <Frame depth="1">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
        </Frames>
      </Cause>
      <Cause timestamp="1437341170947">
        <Exception>java.lang.Exception</Exception>
        <Reason>InInitializerError</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.WorkbenchPlugin.initializeDefaultPreferences(WorkbenchPlugin.java:441)</Frame>
          <Frame depth="1">org.eclipse.ui.plugin.AbstractUIPlugin.initializeDefaultPluginPreferences(AbstractUIPlugin.java:631)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.Plugin.getPluginPreferences(Plugin.java:347)</Frame>
          <Frame depth="3">org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.initialize(AbstractUIPlugin.java:176)</Frame>
          <Frame depth="4">org.eclipse.ui.plugin.AbstractUIPlugin.getPreferenceStore(AbstractUIPlugin.java:568)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.getPreferenceStore(Workbench.java:701)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.init(Workbench.java:844)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)</Frame>
          <Frame depth="8">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
        </Frames>
      </Cause>
      <Cause timestamp="1437341170947">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.preference.PreferenceConverter.&lt;clinit&gt;(PreferenceConverter.java:75)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'm trying to start the Eclipse GUI using a windows X-Server/Client program by 
NetManage from Windows XP connecting to a Sun Solaris 8.3 box in Motiff.  Here 
are some debugging logs.  Perhaps I don't have some environment variable set?  
I default system font path or something?  Any idea?  I can start an XTerm and 
various other XWindows type programs but not Eclipse.

Following are the eclipse -debug startup logs and the xdpyinfo parameters.

Thanks,

-- Adam
-----------------
eclipse -debug
Start VM: /local_apps/apache/j2sdk1.4.1_05/bin/java
-cp /export/home/ahiatt/eclipse2/startup.jar org.eclipse.core.launcher.Main
-os solaris
-ws motif
-arch sparc
-showsplash /export/home/ahiatt/eclipse2/eclipse -showsplash 600
-debug
Startup: using configuration 
file:/export/home/ahiatt/eclipse2/workspace/.metadata/.config/platform.cfg
Boot URL: 
file:/export/home/ahiatt/eclipse2/plugins/org.eclipse.core.boot_2.1.3/boot.jar
Startup: splash path 
= /export/home/ahiatt/eclipse2/plugins/org.eclipse.platform_2.1.3/splash.bmp
Workspace location:
  /export/home/ahiatt/eclipse2/workspace
Debug-Options:
   file:/export/home/ahiatt/eclipse2/.options
Install URL:
   file:/export/home/ahiatt/eclipse2/
!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Aug 10, 2004 08:06:59.615
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.reflect.InvocationTargetException
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:861)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	... 7 more
Caused by: java.lang.ExceptionInInitializerError
	at org.eclipse.ui.internal.WorkbenchPlugin.initializeDefaultPreferences
(WorkbenchPlugin.java:441)
	at 
org.eclipse.ui.plugin.AbstractUIPlugin.initializeDefaultPluginPreferences
(AbstractUIPlugin.java:631)
	at org.eclipse.core.runtime.Plugin.getPluginPreferences(Plugin.java:347)
	at 
org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.initialize
(AbstractUIPlugin.java:176)
	at org.eclipse.ui.plugin.AbstractUIPlugin.getPreferenceStore
(AbstractUIPlugin.java:568)
	at org.eclipse.ui.internal.Workbench.getPreferenceStore
(Workbench.java:701)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:844)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	... 8 more
Caused by: java.lang.NullPointerException
	at org.eclipse.jface.preference.PreferenceConverter.&lt;clinit&gt;
(PreferenceConverter.java:75)
	... 17 more

------------
xdpyinfo: 

name of display:    &lt;ip_address_hidden_taken_out&gt;:0.0
version number:    11.0
vendor string:    NetManage X
vendor release number:    6
maximum request size:  4194300 bytes
motion buffer size:  0
bitmap unit, bit order, padding:    32, MSBFirst, 32
image byte order:    MSBFirst
number of supported pixmap formats:    3
supported pixmap formats:
    depth 1, bits_per_pixel 1, scanline_pad 32
    depth 8, bits_per_pixel 8, scanline_pad 32
    depth 24, bits_per_pixel 32, scanline_pad 32
keycode range:    minimum 8, maximum 255
focus:  PointerRoot
number of extensions:    14
    BIG-REQUESTS
    DOUBLE-BUFFER
    GLX
    LBX
    MIT-SUNDRY-NONSTANDARD
    RECORD
    SGI-GLX
    SHAPE
    SYNC
    XC-APPGROUP
    XC-MISC
    XIE
    XTEST
    XTestExtension1
default screen number:    0
number of screens:    1

screen #0:
  dimensions:    1152x817 pixels (800x567 millimeters)
  resolution:    37x37 dots per inch
  depths (3):    1, 8, 24
  root window id:    0x2f
  depth of root window:    24 planes
  number of colormaps:    minimum 1, maximum 1
  default colormap:    0x2c
  default number of colormap cells:    256
  preallocated pixels:    black 0, white 16777215
  options:    backing-store NO, save-unders NO
  largest cursor:    unlimited
  current input event mask:    0x0
  number of visuals:    22
  default visual id:  0x24
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    1 plane
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    1 plane
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    8 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x21
    class:    GrayScale
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x22
    class:    StaticColor
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x23
    class:    PseudoColor
    depth:    8 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    8 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x27
    class:    GrayScale
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x28
    class:    StaticColor
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x29
    class:    PseudoColor
    depth:    8 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x24
    class:    TrueColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x21
    class:    GrayScale
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x22
    class:    StaticColor
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x23
    class:    PseudoColor
    depth:    24 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    24 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x25
    class:    DirectColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    24 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x27
    class:    GrayScale
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x28
    class:    StaticColor
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x29
    class:    PseudoColor
    depth:    24 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2a
    class:    TrueColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2b
    class:    DirectColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
p.s. I can see the Eclipse Splash screen in my XWindows (so I think the 
graphics part is working), just something else perhaps to do with font or 
something else?
You are reporting this bug against Eclipse 2.1.3 which is quite old and no 
longer being updated.  Please retry with Eclipse 3.0 or Eclipse 3.0.1.
Bug # 72295 -- for Eclipse 3.0 SDK seems to have a similar problem?  Any idea?
--------------------------------------------------
https://bugs.eclipse.org/bugs/show_bug.cgi?id=72295

thanks,

Adam


*** This bug has been marked as a duplicate of 72295 ***
I FINALLY GOT IT TO WORK USING:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=19209#c9

Eclipse 2.1.3 and Eclipse 3.0 BOTH WORKED FOR ME!!
THANKS A LOT for your help.  I couldn't have done it without you!
-- Adam

This comment helped me:
------- Additional Comment #9 From Troy Miller 2002-06-07 17:18 ------- 
You can close this bug.  I have it working.  I pulled the source and started
looking around and found that it was font related.

I changed the ReflectionX font search path to;

   100dpi 75dpi misc hp sun ibm dec

and I have the GUI up.  Thanks for your help.

-------------------
I changed my NETMANAGE XServer font paths order to:

c:\program Files\NetManage\APPS\X\Fonts\100dpi
c:\program Files\NetManage\APPS\X\Fonts\75dpi
c:\program Files\NetManage\APPS\X\Fonts\misc
c:\program Files\NetManage\APPS\X\Fonts\cde
c:\program Files\NetManage\APPS\X\Fonts\dec100
c:\program Files\NetManage\APPS\X\Fonts\dec75
c:\program Files\NetManage\APPS\X\Fonts\hpiso100
c:\program Files\NetManage\APPS\X\Fonts\hpiso75
c:\program Files\NetManage\APPS\X\Fonts\hpmisc
c:\program Files\NetManage\APPS\X\Fonts\hpr875
c:\program Files\NetManage\APPS\X\Fonts\kanji

Alternate font path:
c:\program Files\NetManage\APPS\X\Fonts\misc</WithStack>
    <WithOutStack>I'm trying to start the Eclipse GUI using a windows X-Server/Client program by 
NetManage from Windows XP connecting to a Sun Solaris 8.3 box in Motiff.  Here 
are some debugging logs.  Perhaps I don't have some environment variable set?  
I default system font path or something?  Any idea?  I can start an XTerm and 
various other XWindows type programs but not Eclipse.

Following are the eclipse -debug startup logs and the xdpyinfo parameters.

Thanks,

-- Adam
-----------------
eclipse -debug
Start VM: /local_apps/apache/j2sdk1.4.1_05/bin/java
-cp /export/home/ahiatt/eclipse2/startup.jar org.eclipse.core.launcher.Main
-os solaris
-ws motif
-arch sparc
-showsplash /export/home/ahiatt/eclipse2/eclipse -showsplash 600
-debug
Startup: using configuration 
file:/export/home/ahiatt/eclipse2/workspace/.metadata/.config/platform.cfg
Boot URL: 
file:/export/home/ahiatt/eclipse2/plugins/org.eclipse.core.boot_2.1.3/boot.jar
Startup: splash path 
= /export/home/ahiatt/eclipse2/plugins/org.eclipse.platform_2.1.3/splash.bmp
Workspace location:
  /export/home/ahiatt/eclipse2/workspace
Debug-Options:
   file:/export/home/ahiatt/eclipse2/.options
Install URL:
   file:/export/home/ahiatt/eclipse2/
!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Aug 10, 2004 08:06:59.615
!MESSAGE Exception launching the Eclipse Platform:
!STACK


	... 7 more

	... 8 more

	... 17 more

------------
xdpyinfo: 

name of display:    &lt;ip_address_hidden_taken_out&gt;:0.0
version number:    11.0
vendor string:    NetManage X
vendor release number:    6
maximum request size:  4194300 bytes
motion buffer size:  0
bitmap unit, bit order, padding:    32, MSBFirst, 32
image byte order:    MSBFirst
number of supported pixmap formats:    3
supported pixmap formats:
    depth 1, bits_per_pixel 1, scanline_pad 32
    depth 8, bits_per_pixel 8, scanline_pad 32
    depth 24, bits_per_pixel 32, scanline_pad 32
keycode range:    minimum 8, maximum 255
focus:  PointerRoot
number of extensions:    14
    BIG-REQUESTS
    DOUBLE-BUFFER
    GLX
    LBX
    MIT-SUNDRY-NONSTANDARD
    RECORD
    SGI-GLX
    SHAPE
    SYNC
    XC-APPGROUP
    XC-MISC
    XIE
    XTEST
    XTestExtension1
default screen number:    0
number of screens:    1

screen #0:
  dimensions:    1152x817 pixels (800x567 millimeters)
  resolution:    37x37 dots per inch
  depths (3):    1, 8, 24
  root window id:    0x2f
  depth of root window:    24 planes
  number of colormaps:    minimum 1, maximum 1
  default colormap:    0x2c
  default number of colormap cells:    256
  preallocated pixels:    black 0, white 16777215
  options:    backing-store NO, save-unders NO
  largest cursor:    unlimited
  current input event mask:    0x0
  number of visuals:    22
  default visual id:  0x24
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    1 plane
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    1 plane
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    8 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x21
    class:    GrayScale
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x22
    class:    StaticColor
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x23
    class:    PseudoColor
    depth:    8 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    8 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x27
    class:    GrayScale
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x28
    class:    StaticColor
    depth:    8 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x29
    class:    PseudoColor
    depth:    8 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x24
    class:    TrueColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x21
    class:    GrayScale
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x22
    class:    StaticColor
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x23
    class:    PseudoColor
    depth:    24 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x20
    class:    StaticGray
    depth:    24 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x25
    class:    DirectColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x26
    class:    StaticGray
    depth:    24 planes
    available colormap entries:    2
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    1 bits
  visual:
    visual id:    0x27
    class:    GrayScale
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x28
    class:    StaticColor
    depth:    24 planes
    available colormap entries:    16
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x29
    class:    PseudoColor
    depth:    24 planes
    available colormap entries:    256
    red, green, blue masks:    0x0, 0x0, 0x0
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2a
    class:    TrueColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2b
    class:    DirectColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff, 0xff00, 0xff0000
    significant bits in color specification:    8 bits
p.s. I can see the Eclipse Splash screen in my XWindows (so I think the 
graphics part is working), just something else perhaps to do with font or 
something else?
You are reporting this bug against Eclipse 2.1.3 which is quite old and no 
longer being updated.  Please retry with Eclipse 3.0 or Eclipse 3.0.1.
Bug # 72295 -- for Eclipse 3.0 SDK seems to have a similar problem?  Any idea?
--------------------------------------------------
https://bugs.eclipse.org/bugs/show_bug.cgi?id=72295

thanks,

Adam


*** This bug has been marked as a duplicate of 72295 ***
I FINALLY GOT IT TO WORK USING:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=19209#c9

Eclipse 2.1.3 and Eclipse 3.0 BOTH WORKED FOR ME!!
THANKS A LOT for your help.  I couldn't have done it without you!
-- Adam

This comment helped me:
------- Additional Comment #9 From Troy Miller 2002-06-07 17:18 ------- 
You can close this bug.  I have it working.  I pulled the source and started
looking around and found that it was font related.

I changed the ReflectionX font search path to;

   100dpi 75dpi misc hp sun ibm dec

and I have the GUI up.  Thanks for your help.

-------------------
I changed my NETMANAGE XServer font paths order to:

c:\program Files\NetManage\APPS\X\Fonts\100dpi
c:\program Files\NetManage\APPS\X\Fonts\75dpi
c:\program Files\NetManage\APPS\X\Fonts\misc
c:\program Files\NetManage\APPS\X\Fonts\cde
c:\program Files\NetManage\APPS\X\Fonts\dec100
c:\program Files\NetManage\APPS\X\Fonts\dec75
c:\program Files\NetManage\APPS\X\Fonts\hpiso100
c:\program Files\NetManage\APPS\X\Fonts\hpiso75
c:\program Files\NetManage\APPS\X\Fonts\hpmisc
c:\program Files\NetManage\APPS\X\Fonts\hpr875
c:\program Files\NetManage\APPS\X\Fonts\kanji

Alternate font path:
c:\program Files\NetManage\APPS\X\Fonts\misc</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71710" />
    <CreationDate amount="2004-08-10 11:05:00 -0400" />
    <DupId amount="72873" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] ALT+S does not open Source menu, no mnemonic for Search menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="39">
        <Lines>
          <Line>1) Create a brand new workspace</Line>
          <Line>2) Open the Java Perspective</Line>
          <Line>3) Right-click to close the Resource Perspective</Line>
          <Line>4) Close the Hierarchy View</Line>
          <Line>5) Open the Navigator View</Line>
          <Line>6) Customize Perspective-&gt;Commands-&gt;add the "Team" commands to the toolbar.</Line>
          <Line>7) Save Pespective As Java, overwriting the default.</Line>
          <Line>8) Window-&gt;New Window</Line>
          <Line />
          <Line>Note that "Search" appears without the 'a' underlined.  In the previous window</Line>
          <Line>it is underlined.  I'm going to guess that this is why "&amp;Source" is not</Line>
          <Line>working, but even if it isn't it's a bug.</Line>
          <Line>Exactly the same problem here. It's a big problem for me, as I only use the</Line>
          <Line>keyboard.</Line>
          <Line>This is probably due to bug 15670.</Line>
          <Line />
          <Line>Missing mnemonic for search menu is due to invalid menu (re-)definition in</Line>
          <Line>org.eclipse.jdt.junit: label is "Search" (non-NLSed), but should be "Se&amp;arch" (I</Line>
          <Line>just filed bug 72873 for this).</Line>
          <Line>Thank you very much, Markus!</Line>
          <Line />
          <Line>For the impatient user: This concrete fix can be made directly in the Eclipse</Line>
          <Line>installation directory to solve the problem immediately, until there is a new</Line>
          <Line>version of Eclipse/junit with this corrected:</Line>
          <Line />
          <Line>Correct line 230 in plugins\org.eclipse.jdt.junit_3.0.0\plugin.xml from</Line>
          <Line />
          <Line>label="Search"</Line>
          <Line>to</Line>
          <Line>label="Se&amp;arch"</Line>
          <Line />
          <Line>and restart Eclipse. This makes both the Se&amp;arch menu and &amp;Source menu work again.</Line>
          <Line>I'm confused about the non-NLSed statement.  If "Search" is not externalized in</Line>
          <Line>Junit, does that mean that this is a translation problem in other locales?</Line>
          <Line />
          <Line>Is there fix potential 3.0.1 or 3.0.2?</Line>
          <Line>I'm marking this as a duplicate of Bug 72873, as I've not been able to</Line>
          <Line>reproduce this bug and Markus seems to feel that this can be fixed by Bug</Line>
          <Line>72873.  Bug 15670 will remain open.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Open a Java editor and press ALT+S.  The source menu should open.
Not that Search appears in the menubar without a mnemonic.  Maybe this causes a 
comflict.
Which build? 
3.0.0
I do not see this behaviour.  Do you have any key bindings defined that start 
with "Alt+S"?  Which plug-ins do you have installed?  etc., etc. 
I noticed that in my Debug perspective, Search has the A underlined.  But not 
in the java perspective.  Before opening this bug, I walked across the hall and 
reproduced it on my teammates workbench, which also happened to be in the Java 
perspective.  But for him Debug perspective is working OK also.

He only has GEF, Sleak, and the RelEng plug-ins installed. I have EMF and UML2 
installed as well, and some more stuff.  It seems like it may be related to 
something persisted in the workspace settings.  If I bring up a different 
workspace, the problem is not present.
So I'm at a loss as to how to describe steps to reproduce.  All I know is that 
I've reproduced this on the next clostest workspace to me.  In both mine and 
Pratik's Java perspective, Search is missing the mnemonic, and ALT+S is broken.
OK, got the steps for 3.0.0:

1) Create a brand new workspace
2) Open the Java Perspective
3) Right-click to close the Resource Perspective
4) Close the Hierarchy View
5) Open the Navigator View
6) Customize Perspective-&gt;Commands-&gt;add the "Team" commands to the toolbar.
7) Save Pespective As Java, overwriting the default.
8) Window-&gt;New Window

Note that "Search" appears without the 'a' underlined.  In the previous window 
it is underlined.  I'm going to guess that this is why "&amp;Source" is not 
working, but even if it isn't it's a bug.
Exactly the same problem here. It's a big problem for me, as I only use the
keyboard.
This is probably due to bug 15670.

Missing mnemonic for search menu is due to invalid menu (re-)definition in
org.eclipse.jdt.junit: label is "Search" (non-NLSed), but should be "Se&amp;arch" (I
just filed bug 72873 for this).
Thank you very much, Markus!

For the impatient user: This concrete fix can be made directly in the Eclipse
installation directory to solve the problem immediately, until there is a new
version of Eclipse/junit with this corrected:

Correct line 230 in plugins\org.eclipse.jdt.junit_3.0.0\plugin.xml from

               label="Search"
to
               label="Se&amp;arch"

and restart Eclipse. This makes both the Se&amp;arch menu and &amp;Source menu work again.
I'm confused about the non-NLSed statement.  If "Search" is not externalized in 
Junit, does that mean that this is a translation problem in other locales?

Is there fix potential 3.0.1 or 3.0.2?
I'm marking this as a duplicate of Bug 72873, as I've not been able to 
reproduce this bug and Markus seems to feel that this can be fixed by Bug 
72873.  Bug 15670 will remain open. 

*** This bug has been marked as a duplicate of 72873 ***
Moving on to the M2 milestone, just to make it easier to track when these bugs 
were dealt with.</WithStack>
    <WithOutStack>Open a Java editor and press ALT+S.  The source menu should open.
Not that Search appears in the menubar without a mnemonic.  Maybe this causes a 
comflict.
Which build? 
3.0.0
I do not see this behaviour.  Do you have any key bindings defined that start 
with "Alt+S"?  Which plug-ins do you have installed?  etc., etc. 
I noticed that in my Debug perspective, Search has the A underlined.  But not 
in the java perspective.  Before opening this bug, I walked across the hall and 
reproduced it on my teammates workbench, which also happened to be in the Java 
perspective.  But for him Debug perspective is working OK also.

He only has GEF, Sleak, and the RelEng plug-ins installed. I have EMF and UML2 
installed as well, and some more stuff.  It seems like it may be related to 
something persisted in the workspace settings.  If I bring up a different 
workspace, the problem is not present.
So I'm at a loss as to how to describe steps to reproduce.  All I know is that 
I've reproduced this on the next clostest workspace to me.  In both mine and 
Pratik's Java perspective, Search is missing the mnemonic, and ALT+S is broken.
OK, got the steps for 3.0.0:

1) Create a brand new workspace
2) Open the Java Perspective
3) Right-click to close the Resource Perspective
4) Close the Hierarchy View
5) Open the Navigator View
6) Customize Perspective-&gt;Commands-&gt;add the "Team" commands to the toolbar.
7) Save Pespective As Java, overwriting the default.
8) Window-&gt;New Window

Note that "Search" appears without the 'a' underlined.  In the previous window 
it is underlined.  I'm going to guess that this is why "&amp;Source" is not 
working, but even if it isn't it's a bug.
Exactly the same problem here. It's a big problem for me, as I only use the
keyboard.
This is probably due to bug 15670.

Missing mnemonic for search menu is due to invalid menu (re-)definition in
org.eclipse.jdt.junit: label is "Search" (non-NLSed), but should be "Se&amp;arch" (I
just filed bug 72873 for this).
Thank you very much, Markus!

For the impatient user: This concrete fix can be made directly in the Eclipse
installation directory to solve the problem immediately, until there is a new
version of Eclipse/junit with this corrected:

Correct line 230 in plugins\org.eclipse.jdt.junit_3.0.0\plugin.xml from

               label="Search"
to
               label="Se&amp;arch"

and restart Eclipse. This makes both the Se&amp;arch menu and &amp;Source menu work again.
I'm confused about the non-NLSed statement.  If "Search" is not externalized in 
Junit, does that mean that this is a translation problem in other locales?

Is there fix potential 3.0.1 or 3.0.2?
I'm marking this as a duplicate of Bug 72873, as I've not been able to 
reproduce this bug and Markus seems to feel that this can be fixed by Bug 
72873.  Bug 15670 will remain open. 

*** This bug has been marked as a duplicate of 72873 ***
Moving on to the M2 milestone, just to make it easier to track when these bugs 
were dealt with.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71711" />
    <CreationDate amount="2004-08-10 11:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Gtk - Checkbox/Radiobox setLocation Bug</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="148" end="204" />
        <code>Button check = new Button( this, SWT.NONE | SWT.CHECK );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="205" end="234" />
        <code>check.setLocation( 10, 200 );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="235" end="261" />
        <code>check.setSize( 200, 300 );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="262" end="286" />
        <code>check.setText( "TEST" );</code>
      </source_code>
      <source_code type="assignment">
        <location start="417" end="473" />
        <code>Button check = new Button( this, SWT.NONE | SWT.CHECK );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="474" end="500" />
        <code>check.setSize( 200, 300 );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="501" end="530" />
        <code>check.setLocation( 10, 200 );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="531" end="555" />
        <code>check.setText( "TEST" );</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When calling setSize in front of setLocation the text in the
checkbox is not displayed.

This works:
----------------------8&lt;----------------------
Button check = new Button( this, SWT.NONE | SWT.CHECK );
check.setLocation( 10, 200 );
check.setSize( 200, 300 );
check.setText( "TEST" );
----------------------8&lt;----------------------

This don't (text is not diplayed):
----------------------8&lt;----------------------
Button check = new Button( this, SWT.NONE | SWT.CHECK );
check.setSize( 200, 300 );
check.setLocation( 10, 200 );
check.setText( "TEST" );
----------------------8&lt;----------------------

On win32 both versions are working.

Versions used: libswt-gtk-3062

GTK, I don't know what's apropiate:

[tom@vinea tom]$ pkg-config --modversion gtk+-2.0
2.4.4
[tom@vinea tom]$
This bug was caused by the patch for Bug#41200.

Fixed in HEAD &gt; 20040817
*** Bug 64644 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>When calling setSize in front of setLocation the text in the
checkbox is not displayed.

This works:
----------------------8&lt;----------------------
Button check = new Button( this, SWT.NONE | SWT.CHECK );
check.setLocation( 10, 200 );
check.setSize( 200, 300 );
check.setText( "TEST" );
----------------------8&lt;----------------------

This don't (text is not diplayed):
----------------------8&lt;----------------------
Button check = new Button( this, SWT.NONE | SWT.CHECK );
check.setSize( 200, 300 );
check.setLocation( 10, 200 );
check.setText( "TEST" );
----------------------8&lt;----------------------

On win32 both versions are working.

Versions used: libswt-gtk-3062

GTK, I don't know what's apropiate:

[tom@vinea tom]$ pkg-config --modversion gtk+-2.0
2.4.4
[tom@vinea tom]$
This bug was caused by the patch for Bug#41200.

Fixed in HEAD &gt; 20040817
*** Bug 64644 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71712" />
    <CreationDate amount="2004-08-10 11:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Log Analyzer" />
    <component amount="Platform.UI.LogView" />
    <Version amount="future" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>(Plat)Cannot determine log parser version on log files in the Log View.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Cannot determine log parser version on log files in the Log View.

For instance, the log parser version (e.g. product number and static vs. rules) 
is not displayed on log files in the Log View.  Users may wish to differentiate 
log files based on product version or parser type (e.g. static vs. rules).
I agree for the version of the log we're parsing (i.e. Apache 2.0), but showing 
static/rules to the user will simply confuse them, as they have no idea what 
static and rules means. It also shouldn't matter which one you use; they should 
behave the same way.

we should try to capture and show it at least in properties of logging agent.
retarget milestone based on Harm's approval on defect re-categorize.
Moving to 4.1 since it has been reviewed under the 4.1 requirements
Deferring from 4.1 as per the official 4.1 enhancement plan.
http://eclipse.org/tptp/home/project_info/featureplans/features.php?source=All&amp;project=All&amp;release=4.1&amp;file=TPTPFeatures_4.1.xml
Not in plan for 4.4; Moving target to future
Resolving this as WONTFIX because it is a very old requirement and does not
seem to be a high priority because it has never been implemented.  It can be
reopened if it is felt to be a high priorty enhancement.  Otherwise please close it.

Closing.</WithStack>
    <WithOutStack>Cannot determine log parser version on log files in the Log View.

For instance, the log parser version (e.g. product number and static vs. rules) 
is not displayed on log files in the Log View.  Users may wish to differentiate 
log files based on product version or parser type (e.g. static vs. rules).
I agree for the version of the log we're parsing (i.e. Apache 2.0), but showing 
static/rules to the user will simply confuse them, as they have no idea what 
static and rules means. It also shouldn't matter which one you use; they should 
behave the same way.

we should try to capture and show it at least in properties of logging agent.
retarget milestone based on Harm's approval on defect re-categorize.
Moving to 4.1 since it has been reviewed under the 4.1 requirements
Deferring from 4.1 as per the official 4.1 enhancement plan.
http://eclipse.org/tptp/home/project_info/featureplans/features.php?source=All&amp;project=All&amp;release=4.1&amp;file=TPTPFeatures_4.1.xml
Not in plan for 4.4; Moving target to future
Resolving this as WONTFIX because it is a very old requirement and does not
seem to be a high priority because it has never been implemented.  It can be
reopened if it is felt to be a high priorty enhancement.  Otherwise please close it.

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71713" />
    <CreationDate amount="2004-08-10 11:46:00 -0400" />
    <DupId amount="23520" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[IDE] Put workspace path in title bar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I often have multiple instances of eclipse open simultaneously, with difference
version of the same software.  I would be useful to be able to distinguish them
by placing the workspace path in the titlebar.
Same situation here... I frequently have 3-4 Eclipse instances open, and would love this feature.  Could we at least make it an option, if not the default behavior?


*** This bug has been marked as a duplicate of 23520 ***</WithStack>
    <WithOutStack>I often have multiple instances of eclipse open simultaneously, with difference
version of the same software.  I would be useful to be able to distinguish them
by placing the workspace path in the titlebar.
Same situation here... I frequently have 3-4 Eclipse instances open, and would love this feature.  Could we at least make it an option, if not the default behavior?


*** This bug has been marked as a duplicate of 23520 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71714" />
    <CreationDate amount="2004-08-10 11:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Algorithms] Performance problem comparing large property files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Eclipse 3.0, J2SDK 1.4.2_03, Windows XP SP1

When comparing large property files (&gt; 1MB), the structural compare editor for
property files will take more than 3 minutes to open the progress dialog (the
machine is completely blocked !).

Afterwards, it will abort with a message "too much changes. Set ignore white
space..."

I would like to use the compare editor, to compare resource property files from
different languages, to determine missing entries. The resource files are bigger
than 1 MB, and Eclipse hangs more or less completely when opening a compare
editor for these files.

I will attach artificial property files, where the same effect will occur.
Created attachment 13848
zip file containing 2 large property files</WithStack>
    <WithOutStack>Eclipse 3.0, J2SDK 1.4.2_03, Windows XP SP1

When comparing large property files (&gt; 1MB), the structural compare editor for
property files will take more than 3 minutes to open the progress dialog (the
machine is completely blocked !).

Afterwards, it will abort with a message "too much changes. Set ignore white
space..."

I would like to use the compare editor, to compare resource property files from
different languages, to determine missing entries. The resource files are bigger
than 1 MB, and Eclipse hangs more or less completely when opening a compare
editor for these files.

I will attach artificial property files, where the same effect will occur.
Created attachment 13848
zip file containing 2 large property files</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71715" />
    <CreationDate amount="2004-08-10 12:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Apply Patch under Team context menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Apply Patch doesn't seem to have anything to do with team, so why is it under 
the Team context menu?
Because "Create Patch" is provided by Team (as it runs on the server) and we wanted to keep both 
together.

In an earlier release we had "Apply Patch" separate from "Create Patch" and closer to Compare &amp; Co., but 
users complained about the asymmetry.
closing.</WithStack>
    <WithOutStack>Apply Patch doesn't seem to have anything to do with team, so why is it under 
the Team context menu?
Because "Create Patch" is provided by Team (as it runs on the server) and we wanted to keep both 
together.

In an earlier release we had "Apply Patch" separate from "Create Patch" and closer to Compare &amp; Co., but 
users complained about the asymmetry.
closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71716" />
    <CreationDate amount="2004-08-10 12:17:00 -0400" />
    <DupId amount="71823" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>plug-in that has plugin manifest and incomplete bundle manifest is ignored</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0

When running a runtime workbench using the option "Launch will workspace and
enabled external plug-ins", a plug-in containing a valid plug-in manifest but
incomplete bundle manifest is ignored. When running Eclipse, such a plug-in is
recognized.

See the test case provided for bug 71003 (attachment 13652).
I suspect this is the same as bug 71823.
PDE might be too strict in rejecting in plugins  Please annotate said defect 
on how the runtime deals with such scenarios, so that we could do the same.

*** This bug has been marked as a duplicate of 71823 ***</WithStack>
    <WithOutStack>3.0

When running a runtime workbench using the option "Launch will workspace and
enabled external plug-ins", a plug-in containing a valid plug-in manifest but
incomplete bundle manifest is ignored. When running Eclipse, such a plug-in is
recognized.

See the test case provided for bug 71003 (attachment 13652).
I suspect this is the same as bug 71823.
PDE might be too strict in rejecting in plugins  Please annotate said defect 
on how the runtime deals with such scenarios, so that we could do the same.

*** This bug has been marked as a duplicate of 71823 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71717" />
    <CreationDate amount="2004-08-10 12:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Renaming from .java to .aj does not work.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. convert aspects to .aj, and classes and interfaces to .java</Line>
          <Line>2. convert all to .aj</Line>
          <Line>3. convert all to .java</Line>
          <Line>This functionality will be released in AJDT 1.2.0M1.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It is possible to rename a .aj resource to .java in the package explorer. 
However one cannot rename it back to .aj since in that case the ending is not 
taken into account. (awkward to explain but try it yourself, you'll see what I 
mean)
Could be a JDT bug, though...
I know exactly what you mean.... switching to the navigator, although awkward, 
does at least allow you to do it.
*** Bug 71841 has been marked as a duplicate of this bug. ***
Options include replacing JDT's refactor&gt;rename operation with one which
provides an additional option to change the extension. Or it would probably be
simpler to add a "convert to .aj" entry to the context menu for .java files
(limited to ones in AJ projects)
We now have conversion actions to rename .aj files to .java, and .java to .aj.
We have also added a project level conversion wizard to perform one of the
following on all the source files in a project:
 1. convert aspects to .aj, and classes and interfaces to .java
 2. convert all to .aj
 3. convert all to .java
This functionality will be released in AJDT 1.2.0M1.</WithStack>
    <WithOutStack>It is possible to rename a .aj resource to .java in the package explorer. 
However one cannot rename it back to .aj since in that case the ending is not 
taken into account. (awkward to explain but try it yourself, you'll see what I 
mean)
Could be a JDT bug, though...
I know exactly what you mean.... switching to the navigator, although awkward, 
does at least allow you to do it.
*** Bug 71841 has been marked as a duplicate of this bug. ***
Options include replacing JDT's refactor&gt;rename operation with one which
provides an additional option to change the extension. Or it would probably be
simpler to add a "convert to .aj" entry to the context menu for .java files
(limited to ones in AJ projects)
We now have conversion actions to rename .aj files to .java, and .java to .aj.
We have also added a project level conversion wizard to perform one of the
following on all the source files in a project:
 1. convert aspects to .aj, and classes and interfaces to .java
 2. convert all to .aj
 3. convert all to .java
This functionality will be released in AJDT 1.2.0M1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71718" />
    <CreationDate amount="2004-08-10 12:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Setting breakpoints does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I cannot set any breakpoints into pieces of advice (using 1.1.11).
Incoming
hm.. I am not sure what could have gone wrong here. Would be great to have some 
more information about the circumstances.

Does it only affect advices or all methods in aspects?

Does the outline view show the structure of the aspect? (If no, breakpoints 
cannot be set, but this will change in the next release of AJDT.)

Have you tried to set them by double-clicking on the vertical ruler or by 
chosing "toggle breakpoint" in the context menu?
Point 1: It affects all methods in aspects. 

Point 2: Positive, structure is shown.

Point 3 I have tried both.
Created attachment 13861
Zip file with sample project

The zip file contains my test project. In the (only) advice, I cannot set
brakepoints.
Thanks for finding this bug. It affected source files located in the default 
package. Fix will be included in next version of AJDT.
Hi Not a big problem but...
I've just started using AJDT (on a large project), I have Toggle Line Beakpoint 
bound to F9 (a hangover from my VC++ days) and it won't set using the keypress.
Double clicking or right clicking works, so it's just the key which doesn't 
work.

It works for a standard Java Project, it just seems to break in AJDT.


Comment #6 Additional info:
Using version 1.1.12

Project Structure:
Two "sourceroots" with parallel package hierarchies.  One for Core Sys, one for 
aspects.
The aspect is declared to be in the same package as the class it's advising. 
(com.company.producttype.productfamily.product.ui.architecture) - renamed so I 
don't get into any trouble at work ;-(

Also fails with default key assignment restored!
The problem here is that the keybindings are directly associated with jdts 
commands to set breakpoints. Maybe there is a possibility to override these 
key bindings?
As a workaraound, we could also intruduce a new key binding for our set 
breakpoint command so it would be possible to set breakpoints in AspectJ code 
using key shortcuts, but the user would have to manually calibrate them if he 
wants to use shortcuts that are already taken like CTRL + SHIFT + B.
Fixed the problem described in comment 6 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=71718#c6 by adding a toggle 
breakpoint adapter via the org.eclipse.core.runtime.adapters extension point 
so that our adapter also gets called when CTRL + SHIFT + B is pressed in the 
AspectJ Editor.  

This fix is included in the latest development build and will be released in 
the 1.2.0 M1 release.</WithStack>
    <WithOutStack>I cannot set any breakpoints into pieces of advice (using 1.1.11).
Incoming
hm.. I am not sure what could have gone wrong here. Would be great to have some 
more information about the circumstances.

Does it only affect advices or all methods in aspects?

Does the outline view show the structure of the aspect? (If no, breakpoints 
cannot be set, but this will change in the next release of AJDT.)

Have you tried to set them by double-clicking on the vertical ruler or by 
chosing "toggle breakpoint" in the context menu?
Point 1: It affects all methods in aspects. 

Point 2: Positive, structure is shown.

Point 3 I have tried both.
Created attachment 13861
Zip file with sample project

The zip file contains my test project. In the (only) advice, I cannot set
brakepoints.
Thanks for finding this bug. It affected source files located in the default 
package. Fix will be included in next version of AJDT.
Hi Not a big problem but...
I've just started using AJDT (on a large project), I have Toggle Line Beakpoint 
bound to F9 (a hangover from my VC++ days) and it won't set using the keypress.
Double clicking or right clicking works, so it's just the key which doesn't 
work.

It works for a standard Java Project, it just seems to break in AJDT.


Comment #6 Additional info:
Using version 1.1.12

Project Structure:
Two "sourceroots" with parallel package hierarchies.  One for Core Sys, one for 
aspects.
The aspect is declared to be in the same package as the class it's advising. 
(com.company.producttype.productfamily.product.ui.architecture) - renamed so I 
don't get into any trouble at work ;-(

Also fails with default key assignment restored!
The problem here is that the keybindings are directly associated with jdts 
commands to set breakpoints. Maybe there is a possibility to override these 
key bindings?
As a workaraound, we could also intruduce a new key binding for our set 
breakpoint command so it would be possible to set breakpoints in AspectJ code 
using key shortcuts, but the user would have to manually calibrate them if he 
wants to use shortcuts that are already taken like CTRL + SHIFT + B.
Fixed the problem described in comment 6 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=71718#c6 by adding a toggle 
breakpoint adapter via the org.eclipse.core.runtime.adapters extension point 
so that our adapter also gets called when CTRL + SHIFT + B is pressed in the 
AspectJ Editor.  

This fix is included in the latest development build and will be released in 
the 1.2.0 M1 release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71719" />
    <CreationDate amount="2004-08-10 12:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>open external file does not work with VE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Selecting the File -&gt; Open External File... option with VE as the default .java 
editor results in nothing happening after a valid .java file is selected from 
the file open dialog.
This is something entirely new. We can't look at this until the next release, so
I'm changing this to be an enhancement.</WithStack>
    <WithOutStack>Selecting the File -&gt; Open External File... option with VE as the default .java 
editor results in nothing happening after a valid .java file is selected from 
the file open dialog.
This is something entirely new. We can't look at this until the next release, so
I'm changing this to be an enhancement.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71720" />
    <CreationDate amount="2004-08-10 12:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Common Base Event implemenation is not thread safe.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341170959">
        <Exception>java.lang.UnsupportedOperationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.emf.common.util.BasicEList$UnmodifiableEList.addAll(BasicEList.java:1577)</Frame>
          <Frame depth="1">org.eclipse.emf.ecore.impl.EClassImpl.getEAllStructuralFeatures(EClassImpl.java:280)</Frame>
          <Frame depth="2">org.eclipse.emf.ecore.impl.EObjectImpl.eDerivedStructuralFeatureID(EObjectImpl.java:615)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.eGet(CommonBaseEventImpl.java:1636)</Frame>
          <Frame depth="4">org.eclipse.emf.ecore.impl.EObjectImpl.eGet(EObjectImpl.java:404)</Frame>
          <Frame depth="5">org.eclipse.hyades.logging.events.cbe.util.EventValidation.validateRequiredProperties(EventValidation.java:81)</Frame>
          <Frame depth="6">org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.validate(CommonBaseEventImpl.java:2071)</Frame>
          <Frame depth="7">Worker.run(Worker.java:33)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341170959">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>The feature 'creationTime' is not a valid 
feature</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.impl.EObjectImpl.eDynamicGet(EObjectImpl.java:417)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.eGet(CommonBaseEventImpl.java:1676)</Frame>
          <Frame depth="2">org.eclipse.emf.ecore.impl.EObjectImpl.eGet(EObjectImpl.java:404)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.events.cbe.util.EventValidation.validateRequiredProperties(EventValidation.java:81)</Frame>
          <Frame depth="4">org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.validate(CommonBaseEventImpl.java:2071)</Frame>
          <Frame depth="5">Worker.run(Worker.java:33)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="2648" end="2695" />
        <code>EPackage ePck = EventPackage.eINSTANCE;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2696" end="2746" />
        <code>EFactory eFx = ePck.getEFactoryInstance();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2748" end="2782" />
        <code>List l = ePck.eContents();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2783" end="2817" />
        <code>Iterator i = l.iterator();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2818" end="3117" />
        <code>while (i.hasNext()) {
            EClass c = (EClass)i.next();
            c.getEAllAttributes();
            c.getEAllContainments();
            c.getEAllOperations();
            c.getEAllReferences();
            c.getEAllStructuralFeatures();
            c.getAllSuperTypes();
        }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Call the validate() API on a Common Base Event during application</Line>
          <Line>initialization to populate the EMF model metadata.</Line>
          <Line />
          <Line>-OR-</Line>
          <Line />
          <Line>2) Execute the following source code:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Common Base Event implemenation is not thread safe.

Include nultithreaded JUnit test cases for Common Base Event implemenation and 
JSR-047 and Apache Commons.
Multi-threading issues arise on multi-processor machines. We narrowed down to a 
problem with either: a) CBE, b) EMF or c) the JVM itself, by using a program 
that creates a very simple CBE and calls validate() on it.

The machine used was a Sun Fire 880 with 4x900 MHz UltraSparc III+ CPUs. 

The problem could not be reproduced on a single-processor machine regardless of 
the number of events and threads. On the SMP machine, the problem occured every 
time, even with just two threads that each validate one event. 

The attached file contains the code needed to reproduce the error:

Instructions: modify the setup.sh file to fit your setup, source it in the 
current shell, switch to the bin directory and run:  

&gt; java Client -c 1 -t 2

Output:

Number of processors: 4
JVM MAX Memory:       66912256
JVM Total Memory:     3604480
JVM Free Memory:      2311872

Run settings:
  iteration count = 1
  thread count    = 2

java.lang.UnsupportedOperationException
        at org.eclipse.emf.common.util.BasicEList$UnmodifiableEList.addAll
(BasicEList.java:1577)
        at org.eclipse.emf.ecore.impl.EClassImpl.getEAllStructuralFeatures
(EClassImpl.java:280)
        at org.eclipse.emf.ecore.impl.EObjectImpl.eDerivedStructuralFeatureID
(EObjectImpl.java:615)
        at org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.eGet
(CommonBaseEventImpl.java:1636)
        at org.eclipse.emf.ecore.impl.EObjectImpl.eGet(EObjectImpl.java:404)
        at 
org.eclipse.hyades.logging.events.cbe.util.EventValidation.validateRequiredPrope
rties(EventValidation.java:81)
        at 
org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.validate
(CommonBaseEventImpl.java:2071)
        at Worker.run(Worker.java:33)
java.lang.IllegalArgumentException: The feature 'creationTime' is not a valid 
feature
        at org.eclipse.emf.ecore.impl.EObjectImpl.eDynamicGet
(EObjectImpl.java:417)
        at org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.eGet
(CommonBaseEventImpl.java:1676)
        at org.eclipse.emf.ecore.impl.EObjectImpl.eGet(EObjectImpl.java:404)
        at 
org.eclipse.hyades.logging.events.cbe.util.EventValidation.validateRequiredPrope
rties(EventValidation.java:81)
        at 
org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl.validate
(CommonBaseEventImpl.java:2071)
        at Worker.run(Worker.java:33)
Thread name: [Thread-0]
  start millis       = 1092356447906
  end millis         = 0
  duration in millis = -1092356447906
  work completed     = 0
** Exception : java.lang.UnsupportedOperationException **

Thread name: [Thread-1]
  start millis       = 1092356447906
  end millis         = 0
  duration in millis = -1092356447906
  work completed     = 0
** Exception : java.lang.IllegalArgumentException: The feature 'creationTime' 
is not a valid feature **


Overall statistics:
  work rate = 0.0 / second

The exact exceptions change on every run, particularly with a larger number of 
threads. 

A similar bug was found on single-threaded machines. At that time it was traced 
the problem down to EMF and opened a bug on Bugzilla 
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=49868). 

Workaround: Add synchronization blocks around the calls to "getE***" methods on 
all classes, which are reportedly not thread safe. 
Based on the discussions on the committer call.  We need to understand what the 
issue is here and cannot close out 3.0.1 until this is understood.
As discussed with Paul.  This isn't really a thread safety issue. This is being 
pushed out.
Concurrency problems may exist on multi-processor machines since the EMF model 
metadata was being built on demand during execution.  The solution is for 
applications in this intensive multi-threaded environment to:

1) Call the validate() API on a Common Base Event during application 
initialization to populate the EMF model metadata.

-OR-

2) Execute the following source code:

        EPackage ePck = EventPackage.eINSTANCE;
        EFactory eFx = ePck.getEFactoryInstance();

        List l = ePck.eContents();
        Iterator i = l.iterator();
        while (i.hasNext()) {
            EClass c = (EClass)i.next();
            c.getEAllAttributes();
            c.getEAllContainments();
            c.getEAllOperations();
            c.getEAllReferences();
            c.getEAllStructuralFeatures();
            c.getAllSuperTypes();
        }


After discussions with Richard, we are have decided not to include this fix in 
the CBE implementation.  Based on the existing synchronization on the 
validation, de/serialization and equality APIs, the CBE implementation is 
sufficiently thread safe.  The fact that the EMF model metadata is being built 
on demand during execution improves to the size and performance of the CBE 
implementation, as designed by the EMF Team.  As such, we are recommending 
users pre-populate the EMF meta model using one of provided workarounds.
Although synchronization exists on the validation, de/serialization and 
equality APIs, the event completion code is not synchronized.  Adding 
synchronized blocks around the CommonBaseEventImpl.complete() API.
For performance reasons, all other synchronization is left to the user's 
specific run-time environment.
Code checked-in to HEAD on August 18, 2004.
Verified in Toronto's 20040820_1751 HEAD build.
Closing.
correcting bugzilla target milestone -- setting back to 3.1 i2
*** Bug 155100 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Common Base Event implemenation is not thread safe.

Include nultithreaded JUnit test cases for Common Base Event implemenation and 
JSR-047 and Apache Commons.
Multi-threading issues arise on multi-processor machines. We narrowed down to a 
problem with either: a) CBE, b) EMF or c) the JVM itself, by using a program 
that creates a very simple CBE and calls validate() on it.

The machine used was a Sun Fire 880 with 4x900 MHz UltraSparc III+ CPUs. 

The problem could not be reproduced on a single-processor machine regardless of 
the number of events and threads. On the SMP machine, the problem occured every 
time, even with just two threads that each validate one event. 

The attached file contains the code needed to reproduce the error:

Instructions: modify the setup.sh file to fit your setup, source it in the 
current shell, switch to the bin directory and run:  

&gt; java Client -c 1 -t 2

Output:

Number of processors: 4
JVM MAX Memory:       66912256
JVM Total Memory:     3604480
JVM Free Memory:      2311872

Run settings:
  iteration count = 1
  thread count    = 2



Thread name: [Thread-0]
  start millis       = 1092356447906
  end millis         = 0
  duration in millis = -1092356447906
  work completed     = 0
** Exception : java.lang.UnsupportedOperationException **

Thread name: [Thread-1]
  start millis       = 1092356447906
  end millis         = 0
  duration in millis = -1092356447906
  work completed     = 0
** Exception : java.lang.IllegalArgumentException: The feature 'creationTime' 
is not a valid feature **


Overall statistics:
  work rate = 0.0 / second

The exact exceptions change on every run, particularly with a larger number of 
threads. 

A similar bug was found on single-threaded machines. At that time it was traced 
the problem down to EMF and opened a bug on Bugzilla 
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=49868). 

Workaround: Add synchronization blocks around the calls to "getE***" methods on 
all classes, which are reportedly not thread safe. 
Based on the discussions on the committer call.  We need to understand what the 
issue is here and cannot close out 3.0.1 until this is understood.
As discussed with Paul.  This isn't really a thread safety issue. This is being 
pushed out.
Concurrency problems may exist on multi-processor machines since the EMF model 
metadata was being built on demand during execution.  The solution is for 
applications in this intensive multi-threaded environment to:

1) Call the validate() API on a Common Base Event during application 
initialization to populate the EMF model metadata.

-OR-

2) Execute the following source code:

        EPackage ePck = EventPackage.eINSTANCE;
        EFactory eFx = ePck.getEFactoryInstance();

        List l = ePck.eContents();
        Iterator i = l.iterator();
        while (i.hasNext()) {
            EClass c = (EClass)i.next();
            c.getEAllAttributes();
            c.getEAllContainments();
            c.getEAllOperations();
            c.getEAllReferences();
            c.getEAllStructuralFeatures();
            c.getAllSuperTypes();
        }


After discussions with Richard, we are have decided not to include this fix in 
the CBE implementation.  Based on the existing synchronization on the 
validation, de/serialization and equality APIs, the CBE implementation is 
sufficiently thread safe.  The fact that the EMF model metadata is being built 
on demand during execution improves to the size and performance of the CBE 
implementation, as designed by the EMF Team.  As such, we are recommending 
users pre-populate the EMF meta model using one of provided workarounds.
Although synchronization exists on the validation, de/serialization and 
equality APIs, the event completion code is not synchronized.  Adding 
synchronized blocks around the CommonBaseEventImpl.complete() API.
For performance reasons, all other synchronization is left to the user's 
specific run-time environment.
Code checked-in to HEAD on August 18, 2004.
Verified in Toronto's 20040820_1751 HEAD build.
Closing.
correcting bugzilla target milestone -- setting back to 3.1 i2
*** Bug 155100 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71721" />
    <CreationDate amount="2004-08-10 12:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Composite JUnit tests are not valid for Combo</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Refer to org.eclipse.swt.tests v3101

I'm working on Embedded SWT (eSWT), so I didn't find this problem while running
any existing SWT implementations.

The javadoc for Combo plainly states the following:

  Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;,
  it does not make sense to add children to it, or set a layout on it.

However, the Combo JUnit test class (Test_org_eclipse_swt_widgets_Combo)
includes all of the Composite test names when methodNames is called.  This is
bothersome because a couple of the Composite tests (test_getChildren and
test_setTabList$Lorg_eclipse_swt_widgets_Control) actually add children to the
Combo widget.  This is not a valid way to test the Combo class.  I suggest that
methodNames not return any of the Composite test names.
This is not harmful.
Can I at least have an explanation?  It is obvious that the tests are in
violation of the intended behavior of Combo.  
While the tests regarding layout and creating children do not address the 
intended use of Combo, they do not fail and are not harmful.  Therefore, to 
avoid complication of the test suite and to ensure all inherited methods are 
tested, we will just leave it in.
The "glue" for the JUnit tests is auto-generated. The methodNames method is 
part of the glue.

There are 9 subclasses of Composite that it does not make sense to add control 
children to:
ToolBar
CoolBar
Table
Tree
Combo
CCombo
TableTree
OleClientSite
OleControlSite

And there are 14 subclasses of Composite that it does not make sense to add a 
layout to:
ToolBar
CoolBar
Table
Tree
Combo
TabFolder
Browser
CBanner
CTabFolder
ViewForm
CCombo
TableTree
OleClientSite
OleControlSite

If we ever do change the JUnit tests to be more correct (and you are right - 
technically, Combo and the others shouldn't have some of the Composite test 
methods run) then we need to do it for all of the above classes. Probably the 
correct place to put the fix code is in the auto-generation tool for the glue 
code. I'll reopen this and leave it in my list of owned bugs, but note that I 
will probably not get to it for a very long time. The auto-gen code is in 
class junitGen in org.eclipse.swt.tests.junit. Is this a real problem for eSWT 
Combo? If so, then please feel free to submit a patch to the junitGen class, 
probably somewhere in the writeMethodNames method.
It's not a huge problem for me.  I just wanted to make sure that there was a
reason for doing things this way.  I don't know where the gen tool is.  If you
can point me to it, I'll be glad to have a look.  
It's in the org.eclipse.swt.tests project, folder JUnit Tests, package 
org.eclipse.swt.tests.junit. Same place as all the SWT JUnit tests.
Thanks!
I think we probably want to run all tests on Combo and the other classes that
have an unfortunate superclass. After all they do inherit API. At the very least
the test should make sure the API does not crash on the subclass (Combo).
We can get rid of the tests if the spec says that certain inherited API should
not be called. Currently it says "It does not make sense" to call it. So you can
call it but the behavior is undefined (or is it?). I opened bug 71966 to get
this clarified.
Good point, Knut - if the API is there, people who can't read can call it.
Yes, the behavior is undefined. But it probably shouldn't crash. I'll let SN 
actually answer bug 71966. But you are right - this bug should be closed. If 
there are any specific problems, please open a new bug report.</WithStack>
    <WithOutStack>Refer to org.eclipse.swt.tests v3101

I'm working on Embedded SWT (eSWT), so I didn't find this problem while running
any existing SWT implementations.

The javadoc for Combo plainly states the following:

  Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;,
  it does not make sense to add children to it, or set a layout on it.

However, the Combo JUnit test class (Test_org_eclipse_swt_widgets_Combo)
includes all of the Composite test names when methodNames is called.  This is
bothersome because a couple of the Composite tests (test_getChildren and
test_setTabList$Lorg_eclipse_swt_widgets_Control) actually add children to the
Combo widget.  This is not a valid way to test the Combo class.  I suggest that
methodNames not return any of the Composite test names.
This is not harmful.
Can I at least have an explanation?  It is obvious that the tests are in
violation of the intended behavior of Combo.  
While the tests regarding layout and creating children do not address the 
intended use of Combo, they do not fail and are not harmful.  Therefore, to 
avoid complication of the test suite and to ensure all inherited methods are 
tested, we will just leave it in.
The "glue" for the JUnit tests is auto-generated. The methodNames method is 
part of the glue.

There are 9 subclasses of Composite that it does not make sense to add control 
children to:
ToolBar
CoolBar
Table
Tree
Combo
CCombo
TableTree
OleClientSite
OleControlSite

And there are 14 subclasses of Composite that it does not make sense to add a 
layout to:
ToolBar
CoolBar
Table
Tree
Combo
TabFolder
Browser
CBanner
CTabFolder
ViewForm
CCombo
TableTree
OleClientSite
OleControlSite

If we ever do change the JUnit tests to be more correct (and you are right - 
technically, Combo and the others shouldn't have some of the Composite test 
methods run) then we need to do it for all of the above classes. Probably the 
correct place to put the fix code is in the auto-generation tool for the glue 
code. I'll reopen this and leave it in my list of owned bugs, but note that I 
will probably not get to it for a very long time. The auto-gen code is in 
class junitGen in org.eclipse.swt.tests.junit. Is this a real problem for eSWT 
Combo? If so, then please feel free to submit a patch to the junitGen class, 
probably somewhere in the writeMethodNames method.
It's not a huge problem for me.  I just wanted to make sure that there was a
reason for doing things this way.  I don't know where the gen tool is.  If you
can point me to it, I'll be glad to have a look.  
It's in the org.eclipse.swt.tests project, folder JUnit Tests, package 
org.eclipse.swt.tests.junit. Same place as all the SWT JUnit tests.
Thanks!
I think we probably want to run all tests on Combo and the other classes that
have an unfortunate superclass. After all they do inherit API. At the very least
the test should make sure the API does not crash on the subclass (Combo).
We can get rid of the tests if the spec says that certain inherited API should
not be called. Currently it says "It does not make sense" to call it. So you can
call it but the behavior is undefined (or is it?). I opened bug 71966 to get
this clarified.
Good point, Knut - if the API is there, people who can't read can call it.
Yes, the behavior is undefined. But it probably shouldn't crash. I'll let SN 
actually answer bug 71966. But you are right - this bug should be closed. If 
there are any specific problems, please open a new bug report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71722" />
    <CreationDate amount="2004-08-10 13:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Please fix warnings in latest build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="import">
        <location start="226" end="249" />
        <code>import java.io.Reader;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From build 200408101200, this warning is reported:

----------
1. WARNING in
/builds/I200408101200/src/plugins/org.eclipse.jdt.text.tests/src/org/eclipse/jdt/text/tests/performance/data/PerformanceFileParser.java
(at line 20)
	import java.io.Reader;
	       ^^^^^^^^^^^^^^
The import java.io.Reader is never used
----------
1 problem (1 warning)

Simplt remove this line.
has been fixed</WithStack>
    <WithOutStack>From build 200408101200, this warning is reported:

----------
1. WARNING in
/builds/I200408101200/src/plugins/org.eclipse.jdt.text.tests/src/org/eclipse/jdt/text/tests/performance/data/PerformanceFileParser.java
(at line 20)
	import java.io.Reader;
	       ^^^^^^^^^^^^^^
The import java.io.Reader is never used
----------
1 problem (1 warning)

Simplt remove this line.
has been fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71723" />
    <CreationDate amount="2004-08-10 13:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inconsistency in scoping of protected members in ITDs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="package">
        <location start="630" end="642" />
        <code>package foo;</code>
      </source_code>
      <source_code type="class">
        <location start="644" end="867" />
        <code>public class Foo extends AncientFoo {
    protected int i() { return 42; }
    public static void main(String[] args) {
	new Foo().doStuff();
    }
    public void doStuff() { }
    protected int ancientI() { return 42; }
}</code>
      </source_code>
      <source_code type="class">
        <location start="869" end="977" />
        <code>class AncientFoo {
    protected int ancientI() { return -42; }
    protected int ancientJ() { return 0; }
}</code>
      </source_code>
      <source_code type="package">
        <location start="990" end="1002" />
        <code>package bar;</code>
      </source_code>
      <source_code type="import">
        <location start="1003" end="1018" />
        <code>import foo.Foo;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1033" end="1296" />
        <code>public void Foo.doing() {
	try {
	    System.out.println(i()); // fails in ajc
	    System.out.println(ancientI()); // fails in ajc
	    System.out.println(ancientJ()); // succeeds
	    System.out.println(clone()); // succeeds
	}
	catch(Throwable t) { }
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1297" end="1369" />
        <code>before(Foo f) : call(* doStuff(..)) &amp;&amp; target(f) {
	f.doing();
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When introducing new member functions to existing classes via inter-type
declarations, the scoping rules that apply to the ITD bodies are the same as for
the aspect - for example, private members of the target class cannot be accessed
unless the aspect is privileged.

Similarly, protected members of classes in different packages should not be
visible in ITDs unless the aspect is privileged.

This rule is only enforced for protected members declared in the target class -
protected members that are inherited are visible from ITDs in aspects in
different packages.

The following is an example of this:

----------------------
package foo;

public class Foo extends AncientFoo {
    protected int i() { return 42; }
    public static void main(String[] args) {
	new Foo().doStuff();
    }
    public void doStuff() { }
    protected int ancientI() { return 42; }
}

class AncientFoo {
    protected int ancientI() { return -42; }
    protected int ancientJ() { return 0; }
}
----------

package bar;
import foo.Foo;

aspect Bar {
    public void Foo.doing() {
	try {
	    System.out.println(i()); // fails in ajc
	    System.out.println(ancientI()); // fails in ajc
	    System.out.println(ancientJ()); // succeeds
	    System.out.println(clone()); // succeeds
	}
	catch(Throwable t) { }
    }
    before(Foo f) : call(* doStuff(..)) &amp;&amp; target(f) {
	f.doing();
    }
}
-------------------

All four calls in Foo.doing() should fail, as they refer to protected members of
foo.Foo from package bar. However, only the first 2 - the ones directly
declared/overridden in foo.Foo - are detected as errors, and removing them makes
the rest compile and execute.

Best wishes,
Pavel
adding to my list of fun raised-by-oxford-inter-type-declaration-scoping-bugs to 
be looked at for 1.2.1 :)
Fix committed in tree. Will close bug once this is available in a published 
build.
Fix now available for download.
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>When introducing new member functions to existing classes via inter-type
declarations, the scoping rules that apply to the ITD bodies are the same as for
the aspect - for example, private members of the target class cannot be accessed
unless the aspect is privileged.

Similarly, protected members of classes in different packages should not be
visible in ITDs unless the aspect is privileged.

This rule is only enforced for protected members declared in the target class -
protected members that are inherited are visible from ITDs in aspects in
different packages.

The following is an example of this:

----------------------
package foo;

public class Foo extends AncientFoo {
    protected int i() { return 42; }
    public static void main(String[] args) {
	new Foo().doStuff();
    }
    public void doStuff() { }
    protected int ancientI() { return 42; }
}

class AncientFoo {
    protected int ancientI() { return -42; }
    protected int ancientJ() { return 0; }
}
----------

package bar;
import foo.Foo;

aspect Bar {
    public void Foo.doing() {
	try {
	    System.out.println(i()); // fails in ajc
	    System.out.println(ancientI()); // fails in ajc
	    System.out.println(ancientJ()); // succeeds
	    System.out.println(clone()); // succeeds
	}
	catch(Throwable t) { }
    }
    before(Foo f) : call(* doStuff(..)) &amp;&amp; target(f) {
	f.doing();
    }
}
-------------------

All four calls in Foo.doing() should fail, as they refer to protected members of
foo.Foo from package bar. However, only the first 2 - the ones directly
declared/overridden in foo.Foo - are detected as errors, and removing them makes
the rest compile and execute.

Best wishes,
Pavel
adding to my list of fun raised-by-oxford-inter-type-declaration-scoping-bugs to 
be looked at for 1.2.1 :)
Fix committed in tree. Will close bug once this is available in a published 
build.
Fix now available for download.
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71724" />
    <CreationDate amount="2004-08-10 13:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Auto-build and cancelling builds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 3.0

My interpretation of the auto-build preference is to "always have my workspace
in a built state".

If you have auto-build turned on and a build is running and a user operation
wants to be run, then the build is cancelled, the user operation is run, and
then the auto-build is started again.

If auto-build is on and you cancel a build manually via the Progress View, the
auto-build job does not automatically start. 

Is this the behaviour that we want? Is my definition incorrect?
My two cents is that I like the current behaviour. If the user explicitly
cancels something, it would be highly irritating for it to restart immediately.
Note that it has always been like this - if you cancelled autobuild from a
progress dialog in Eclipse 2.1, you ended up with an out of date workspace until
the next workspace change kicked off another build.
I agree with your understanding and with John's comments. The way I look at 
it, when the user explicitly cancels an auto-build, they knowingly place 
themselves in the unusual state of having an out-of-date workspace (unusual 
for someone with auto-build on). As one would also expect, things catch up the 
next time a command is issued, so there is no long-term impact on the 
workspace. So I think the current behavior is pretty slick.
Ok. Closing.</WithStack>
    <WithOutStack>build 3.0

My interpretation of the auto-build preference is to "always have my workspace
in a built state".

If you have auto-build turned on and a build is running and a user operation
wants to be run, then the build is cancelled, the user operation is run, and
then the auto-build is started again.

If auto-build is on and you cancel a build manually via the Progress View, the
auto-build job does not automatically start. 

Is this the behaviour that we want? Is my definition incorrect?
My two cents is that I like the current behaviour. If the user explicitly
cancels something, it would be highly irritating for it to restart immediately.
Note that it has always been like this - if you cancelled autobuild from a
progress dialog in Eclipse 2.1, you ended up with an out of date workspace until
the next workspace change kicked off another build.
I agree with your understanding and with John's comments. The way I look at 
it, when the user explicitly cancels an auto-build, they knowingly place 
themselves in the unusual state of having an out-of-date workspace (unusual 
for someone with auto-build on). As one would also expect, things catch up the 
next time a command is issued, so there is no long-term impact on the 
workspace. So I think the current behavior is pretty slick.
Ok. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71725" />
    <CreationDate amount="2004-08-10 13:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[J2SE 5] Support for read-only VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The 1.5 JDI client should support the "read-only" feature, and throw 
exceptions where possible, as described here:

http://java.sun.com/j2se/1.5.0/docs/guide/jpda/enhancements.html#Read-only

The methods "update" methods should consult the VM before performing the 
update. However, it's unclear how a VM knows if it is read-only.
Marking as 3.1 until we find out how to generically determine a VM/Connector 
is read-only.
It appears that all VirtualMachine implementations that are based 
on "Connections" are modifiable. Connectors that establish communication with 
a core file will return a different JDI implementation (VirtualMachine).

So this one is fixed.
Verified.</WithStack>
    <WithOutStack>The 1.5 JDI client should support the "read-only" feature, and throw 
exceptions where possible, as described here:

http://java.sun.com/j2se/1.5.0/docs/guide/jpda/enhancements.html#Read-only

The methods "update" methods should consult the VM before performing the 
update. However, it's unclear how a VM knows if it is read-only.
Marking as 3.1 until we find out how to generically determine a VM/Connector 
is read-only.
It appears that all VirtualMachine implementations that are based 
on "Connections" are modifiable. Connectors that establish communication with 
a core file will return a different JDI implementation (VirtualMachine).

So this one is fixed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71726" />
    <CreationDate amount="2004-08-10 13:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>C/C++ Projects view doesn't display changes in .* files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Create new C project, Standard Make Project and switch to C/C++</Line>
          <Line>perspective as prompted and "C/C++ Projects" view</Line>
          <Line>2. Create new File, ".foo" in project</Line>
          <Line>3. Turn off filter for .* and look in project.</Line>
          <Line />
          <Line>Actual results:</Line>
          <Line>.foo is not listed, other .* files are (.cdtproject, .project)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Description of problem: 
In the C/C++ Projects view try adding/deleting/renaming a .* file in a
C/C++ project, the view will not record any change, ie if you add .foo
it won't show up, if you delete .foo it will still show up, if you
move .foo to .bar .foo will still be the displayed name for the file.
 The changes are made correctly in the file system.  I've encountered
similar behavior with files without .* names but with less certainty,
it seems to happen only once you've tried moving around .* files. 
However if you attempt the same actions on a Java Project in the C/C++
Projects view they will works as intended.


Version-Release number of selected component (if applicable): 
2.0

How reproducible:
Always


Steps to Reproduce:
1. Create new C project, Standard Make Project and switch to C/C++
perspective as prompted and "C/C++ Projects" view
2. Create new File, ".foo" in project
3. Turn off filter for .* and look in project.
  
Actual results:
.foo is not listed, other .* files are (.cdtproject, .project)

Expected results:
.foo should be listed with other .* files

Additional info:
To get the changes to show up you can close and reopen the project.  Adding
other .* files and renaming an existing .* file will be similarly not updated.
Yes I believe it was fix in the head and the branch

Please try a newer build and let me knwo if the problem is fix.
making this 2.0.1 target
Just checked against CVS head and the bug was fixed. 
thanks</WithStack>
    <WithOutStack>Description of problem: 
In the C/C++ Projects view try adding/deleting/renaming a .* file in a
C/C++ project, the view will not record any change, ie if you add .foo
it won't show up, if you delete .foo it will still show up, if you
move .foo to .bar .foo will still be the displayed name for the file.
 The changes are made correctly in the file system.  I've encountered
similar behavior with files without .* names but with less certainty,
it seems to happen only once you've tried moving around .* files. 
However if you attempt the same actions on a Java Project in the C/C++
Projects view they will works as intended.


Version-Release number of selected component (if applicable): 
2.0

How reproducible:
Always


Steps to Reproduce:
1. Create new C project, Standard Make Project and switch to C/C++
perspective as prompted and "C/C++ Projects" view
2. Create new File, ".foo" in project
3. Turn off filter for .* and look in project.
  
Actual results:
.foo is not listed, other .* files are (.cdtproject, .project)

Expected results:
.foo should be listed with other .* files

Additional info:
To get the changes to show up you can close and reopen the project.  Adding
other .* files and renaming an existing .* file will be similarly not updated.
Yes I believe it was fix in the head and the branch

Please try a newer build and let me knwo if the problem is fix.
making this 2.0.1 target
Just checked against CVS head and the bug was fixed. 
thanks</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71727" />
    <CreationDate amount="2004-08-10 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>F1 Help links open Help in system browser rather than Help window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>For F1 infopops opened from wizards or other dialogs, links to Help topics 
open in the default system browser, rather than the Eclipse Help window. For 
F1 infopops opened from editors, or other IDE UI it seems, the help links open 
correctly in the Eclipse Help window.
Unfortunately, it is working as designed.  This behavior to open external 
browser was especially developed to workaround problem described in bug 
67543.  When modal window is up, it is known that embedded help would not work 
(allow for user interaction), so help launches external browser then.

Marking as wontfix.  We'll keep this behavior until 67543 is there.  You can 
CC yourself to that bug.</WithStack>
    <WithOutStack>For F1 infopops opened from wizards or other dialogs, links to Help topics 
open in the default system browser, rather than the Eclipse Help window. For 
F1 infopops opened from editors, or other IDE UI it seems, the help links open 
correctly in the Eclipse Help window.
Unfortunately, it is working as designed.  This behavior to open external 
browser was especially developed to workaround problem described in bug 
67543.  When modal window is up, it is known that embedded help would not work 
(allow for user interaction), so help launches external browser then.

Marking as wontfix.  We'll keep this behavior until 67543 is there.  You can 
CC yourself to that bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71728" />
    <CreationDate amount="2004-08-10 14:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Agent Controller" />
    <component amount="Platform.Communication" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Plat) AS400 RAC config file is fragile</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. In qsh, run SetConfig.sh to create the initial configuration.</Line>
          <Line>2. Start the RAC the usual way: SBMJOB CMD(CALL RASERVER) JOBD(RASTART)</Line>
          <Line>3. Kill the RAC.</Line>
          <Line>4. In qsh, change the serviceconfig.xml file by running these commands:</Line>
          <Line>$ sed s/INFORMATION/DEBUG/ serviceconfig.xml &gt; tempfile</Line>
          <Line>$ mv tempfile serviceconfig.xml</Line>
          <Line>$ chmod 0777 serviceconfig.xml</Line>
          <Line>5. Re-start the RAC the same old way (see step 2)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1. Attempt to parse the XML file directly with Xerces-C.</Line>
          <Line>2. If that fails, discover the encoding of the file from the file system (not</Line>
          <Line>based on the XML header), and use a conversion from that encoding to ASCII.</Line>
          <Line>3. Attempt to parse the converted result with Xerces-C.</Line>
          <Line>4. If that fails, give up and report an error.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>On AS400, I found that after changing the the RAC configuration file using Unix 
commands like "sed," I couldn't start the RAC any more. I think there's an 
ASCII/EBCDIC problem on this platform.

Here's what I did:

1. In qsh, run SetConfig.sh to create the initial configuration.
2. Start the RAC the usual way: SBMJOB CMD(CALL RASERVER) JOBD(RASTART)
3. Kill the RAC.
4. In qsh, change the serviceconfig.xml file by running these commands:
      $ sed s/INFORMATION/DEBUG/ serviceconfig.xml &gt; tempfile
      $ mv tempfile serviceconfig.xml
      $ chmod 0777 serviceconfig.xml
5. Re-start the RAC the same old way (see step 2)

The RAC process starts but immediately shuts down. Nothing appears in 
servicelog.log. You can see the error message by going outside the qsh 
environment and running WRKSPLF to view spooled files; the RAC writes an error 
message to a spooled file called QPRINT. The error message in this case is:

Couldn't start Hyades Data Server
Reason:  Configuration file parsing failed
Resolution:  1. Examine the messages in servicelog.log to determine
             where parsing failed.
             2. Make sure you have created a valid configuration file
             RASERVER_HOME/config/serviceconfig.xml
             by running the SetConfig script.

I believe the problem is that the config file is actually ASCII when it's 
written by SetConfig. The shell redirect created an EBCDIC file, so the RAC's 
parser (which expects ASCII) couldn't handle it. But how is a user supposed to 
see this, or know how to fix it?

The fix is for the RAC code to attempt to parse the file as ASCII, and if that 
fails, try again as EBCDIC before giving up entirely. Something like that.
I want to make a note that the iSeries Xerces-C parser is only capable of 
parsing ASCII/UTF8 encoded XML files.
Allan, since the Apache Xerces-C parser cannot take anything other than ASCII 
encoded file, do you think it worth running an EBCDIC-to-ASCII conversion 
ourselves or leave this as a requirement and let the user fix it up? The same 
situation might as well happen on the z/OS.
What a lame XML parser. This is the worldwide open-source standard, the state 
of the art? Bah.

Yes, I think it would be good to do an EBCDIC-to-ASCII conversion on the file 
contents and re-run the parser if the first attempt at parsing didn't work. 
This should happen on all xml files the RAC reads, including the 
pluginconfig.xml files.
Hmm... can we safely assume that the file is always EBCDIC whenever we can't 
parse it? It can be of any kind of encoding (like Hebrew char set on the 1FB 
machine we have). Maybe we can exit if parsing still fails after the E2A 
conversion.
Based on discussions with Samson, we decided the best approach is like this:

1. Attempt to parse the XML file directly with Xerces-C.
2. If that fails, discover the encoding of the file from the file system (not 
based on the XML header), and use a conversion from that encoding to ASCII.
3. Attempt to parse the converted result with Xerces-C.
4. If that fails, give up and report an error.

This kind of thing is likely to be necessary both on OS/400 and z/OS.
transfer to tptp
undo move to tptp...
Now that we have a "3.3" Version in bugzilla, updating bugzillas targeted to 3.3
or a 3.3 iteration so that their Version matches their Target. "future",
"unspecified", "4.0", and "4.1" Versions will not be updated.
Transfer to TPTP per project call
Transferring all normal-P3 bugs to 4.2
Marking this as a limitation.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>On AS400, I found that after changing the the RAC configuration file using Unix 
commands like "sed," I couldn't start the RAC any more. I think there's an 
ASCII/EBCDIC problem on this platform.

Here's what I did:

1. In qsh, run SetConfig.sh to create the initial configuration.
2. Start the RAC the usual way: SBMJOB CMD(CALL RASERVER) JOBD(RASTART)
3. Kill the RAC.
4. In qsh, change the serviceconfig.xml file by running these commands:
      $ sed s/INFORMATION/DEBUG/ serviceconfig.xml &gt; tempfile
      $ mv tempfile serviceconfig.xml
      $ chmod 0777 serviceconfig.xml
5. Re-start the RAC the same old way (see step 2)

The RAC process starts but immediately shuts down. Nothing appears in 
servicelog.log. You can see the error message by going outside the qsh 
environment and running WRKSPLF to view spooled files; the RAC writes an error 
message to a spooled file called QPRINT. The error message in this case is:

Couldn't start Hyades Data Server
Reason:  Configuration file parsing failed
Resolution:  1. Examine the messages in servicelog.log to determine
             where parsing failed.
             2. Make sure you have created a valid configuration file
             RASERVER_HOME/config/serviceconfig.xml
             by running the SetConfig script.

I believe the problem is that the config file is actually ASCII when it's 
written by SetConfig. The shell redirect created an EBCDIC file, so the RAC's 
parser (which expects ASCII) couldn't handle it. But how is a user supposed to 
see this, or know how to fix it?

The fix is for the RAC code to attempt to parse the file as ASCII, and if that 
fails, try again as EBCDIC before giving up entirely. Something like that.
I want to make a note that the iSeries Xerces-C parser is only capable of 
parsing ASCII/UTF8 encoded XML files.
Allan, since the Apache Xerces-C parser cannot take anything other than ASCII 
encoded file, do you think it worth running an EBCDIC-to-ASCII conversion 
ourselves or leave this as a requirement and let the user fix it up? The same 
situation might as well happen on the z/OS.
What a lame XML parser. This is the worldwide open-source standard, the state 
of the art? Bah.

Yes, I think it would be good to do an EBCDIC-to-ASCII conversion on the file 
contents and re-run the parser if the first attempt at parsing didn't work. 
This should happen on all xml files the RAC reads, including the 
pluginconfig.xml files.
Hmm... can we safely assume that the file is always EBCDIC whenever we can't 
parse it? It can be of any kind of encoding (like Hebrew char set on the 1FB 
machine we have). Maybe we can exit if parsing still fails after the E2A 
conversion.
Based on discussions with Samson, we decided the best approach is like this:

1. Attempt to parse the XML file directly with Xerces-C.
2. If that fails, discover the encoding of the file from the file system (not 
based on the XML header), and use a conversion from that encoding to ASCII.
3. Attempt to parse the converted result with Xerces-C.
4. If that fails, give up and report an error.

This kind of thing is likely to be necessary both on OS/400 and z/OS.
transfer to tptp
undo move to tptp...
Now that we have a "3.3" Version in bugzilla, updating bugzillas targeted to 3.3
or a 3.3 iteration so that their Version matches their Target. "future",
"unspecified", "4.0", and "4.1" Versions will not be updated.
Transfer to TPTP per project call
Transferring all normal-P3 bugs to 4.2
Marking this as a limitation.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71729" />
    <CreationDate amount="2004-08-10 14:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Syntax error on token "super", delete this token</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="functiondef">
        <location start="0" end="123" />
        <code>public void initControls() throws Exception
{
  JDialogUtils.disable( super); &lt;- error, but ok with JBuilder 6
  ........
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="243" end="274" />
        <code>JDialogUtils.disable( super);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="339" end="370" />
        <code>JDialogUtils.disable( super);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="507" end="546" />
        <code>11.   JDialogUtils.disable( super);</code>
      </source_code>
      <source_code type="class">
        <location start="688" end="705" />
        <code>5. class A {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="1">
        <Lines>
          <Line>B.java:11: '.' expected</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>public void initControls() throws Exception
{
  JDialogUtils.disable( super); &lt;- error, but ok with JBuilder 6
  ........
}
super is not a primary, so this is a syntax error.
javac 1.4.2_05 also reports a syntax error:
B.java:11: '.' expected
  JDialogUtils.disable( super);
                             ^
B.java:11: &lt;identifier&gt; expected
  JDialogUtils.disable( super);
                              ^
2 errors

Jikes 1.18 also reports a syntax error:


Found 1 syntax error in "C:/tests_sources/B.java":

    11.   JDialogUtils.disable( super);
                                ^---^
*** Syntax: Unexpected symbol ignored

Issued 1 semantic warning compiling "C:/tests_sources/B.java":

     5. class A {
              ^
*** Semantic Warning: The file "B.java" contains type "A" which conflicts with
file "A.java".

See
http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#23302

Closing as INVALID.</WithStack>
    <WithOutStack>public void initControls() throws Exception
{
  JDialogUtils.disable( super); &lt;- error, but ok with JBuilder 6
  ........
}
super is not a primary, so this is a syntax error.
javac 1.4.2_05 also reports a syntax error:
B.java:11: '.' expected
  JDialogUtils.disable( super);
                             ^
B.java:11: &lt;identifier&gt; expected
  JDialogUtils.disable( super);
                              ^
2 errors

Jikes 1.18 also reports a syntax error:


Found 1 syntax error in "C:/tests_sources/B.java":

    11.   JDialogUtils.disable( super);
                                ^---^
*** Syntax: Unexpected symbol ignored

Issued 1 semantic warning compiling "C:/tests_sources/B.java":

     5. class A {
              ^
*** Semantic Warning: The file "B.java" contains type "A" which conflicts with
file "A.java".

See
http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#23302

Closing as INVALID.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71730" />
    <CreationDate amount="2004-08-10 14:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SWT Widgets missing from the Palette</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341170976">
        <Exception>java.lang.InstantiationException</Exception>
        <Reason>IWAV0125E "gridLayout2" is too complicated to
be evaluated</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)</Frame>
          <Frame depth="1">org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)</Frame>
          <Frame depth="4">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)</Frame>
          <Frame depth="5">org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)</Frame>
          <Frame depth="6">org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)</Frame>
          <Frame depth="7">org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)</Frame>
          <Frame depth="8">org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)</Frame>
          <Frame depth="9">org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)</Frame>
          <Frame depth="10">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)</Frame>
          <Frame depth="11">org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)</Frame>
          <Frame depth="12">org.eclipse.ui.views.properties.PropertySheetViewer.createItem(PropertySheetViewer.java:346)</Frame>
          <Frame depth="13">org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1078)</Frame>
          <Frame depth="14">org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:999)</Frame>
          <Frame depth="15">org.eclipse.ui.views.properties.PropertySheetViewer$2.childEntriesChanged(PropertySheetViewer.java:298)</Frame>
          <Frame depth="16">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.fireChildEntriesChanged(AbstractPropertySheetEntry.java:373)</Frame>
          <Frame depth="17">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.refreshChildEntries(AbstractPropertySheetEntry.java:831)</Frame>
          <Frame depth="18">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.setValues(AbstractPropertySheetEntry.java:1013)</Frame>
          <Frame depth="19">org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:805)</Frame>
          <Frame depth="20">org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)</Frame>
          <Frame depth="21">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)</Frame>
          <Frame depth="22">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)</Frame>
          <Frame depth="23">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="31">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="33">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="38">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341170976">
        <Exception>java.lang.InstantiationException</Exception>
        <Reason>IWAV0125E "gridLayout2" is too complicated to
be evaluated</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)</Frame>
          <Frame depth="1">org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)</Frame>
          <Frame depth="4">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)</Frame>
          <Frame depth="5">org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)</Frame>
          <Frame depth="6">org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)</Frame>
          <Frame depth="7">org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)</Frame>
          <Frame depth="8">org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)</Frame>
          <Frame depth="9">org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)</Frame>
          <Frame depth="10">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)</Frame>
          <Frame depth="11">org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)</Frame>
          <Frame depth="12">org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1099)</Frame>
          <Frame depth="13">org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:999)</Frame>
          <Frame depth="14">org.eclipse.ui.views.properties.PropertySheetViewer$2.childEntriesChanged(PropertySheetViewer.java:298)</Frame>
          <Frame depth="15">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.fireChildEntriesChanged(AbstractPropertySheetEntry.java:373)</Frame>
          <Frame depth="16">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.refreshChildEntries(AbstractPropertySheetEntry.java:831)</Frame>
          <Frame depth="17">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.setValues(AbstractPropertySheetEntry.java:1013)</Frame>
          <Frame depth="18">org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:805)</Frame>
          <Frame depth="19">org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)</Frame>
          <Frame depth="20">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)</Frame>
          <Frame depth="21">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)</Frame>
          <Frame depth="22">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="30">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="32">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="37">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="38">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341170976">
        <Exception>java.lang.InstantiationException</Exception>
        <Reason>IWAV0125E "gridLayout2" is too complicated to
be evaluated</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)</Frame>
          <Frame depth="1">org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)</Frame>
          <Frame depth="4">org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)</Frame>
          <Frame depth="5">org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)</Frame>
          <Frame depth="6">org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)</Frame>
          <Frame depth="7">org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)</Frame>
          <Frame depth="8">org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)</Frame>
          <Frame depth="9">org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)</Frame>
          <Frame depth="10">org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)</Frame>
          <Frame depth="11">org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)</Frame>
          <Frame depth="12">org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1099)</Frame>
          <Frame depth="13">org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:807)</Frame>
          <Frame depth="14">org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)</Frame>
          <Frame depth="15">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)</Frame>
          <Frame depth="16">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)</Frame>
          <Frame depth="17">org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When creating a visual class the SWT widgets are not available from the Palette
selection.

If using the example visual class &lt;SimpleSWTTextEditor.java&gt;  the bean icon is
shown for the Shell widget instead of the actual icon under the
&lt;eclipse\plugins\org.eclipse.ve.swt_1.0.0\icons\full\clcl16\shell_obj.gif&gt;

If the shell icon is selected the following error messages are generated.


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.449
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.459
!MESSAGE Exception thrown.
!STACK 0
java.lang.InstantiationException: IWAV0125E "gridLayout2" is too complicated to
be evaluated
	at
org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)
	at
org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)
	at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)
	at
org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.createItem(PropertySheetViewer.java:346)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1078)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:999)
	at
org.eclipse.ui.views.properties.PropertySheetViewer$2.childEntriesChanged(PropertySheetViewer.java:298)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.fireChildEntriesChanged(AbstractPropertySheetEntry.java:373)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.refreshChildEntries(AbstractPropertySheetEntry.java:831)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.setValues(AbstractPropertySheetEntry.java:1013)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:805)
	at
org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 10, 2004 14:03:35.479
!MESSAGE java.lang.RuntimeException
	at org.eclipse.jem.internal.proxy.initParser.Static.evaluate(Static.java:123)
	at
org.eclipse.jem.internal.proxy.initParser.InitializationStringParser.evaluate(InitializationStringParser.java:157)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:240)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.489
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.499
!MESSAGE Exception thrown.
!STACK 0
java.lang.InstantiationException: IWAV0125E "gridLayout2" is too complicated to
be evaluated
	at
org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)
	at
org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)
	at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)
	at
org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1099)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:999)
	at
org.eclipse.ui.views.properties.PropertySheetViewer$2.childEntriesChanged(PropertySheetViewer.java:298)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.fireChildEntriesChanged(AbstractPropertySheetEntry.java:373)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.refreshChildEntries(AbstractPropertySheetEntry.java:831)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.setValues(AbstractPropertySheetEntry.java:1013)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:805)
	at
org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 10, 2004 14:03:35.509
!MESSAGE java.lang.RuntimeException
	at org.eclipse.jem.internal.proxy.initParser.Static.evaluate(Static.java:123)
	at
org.eclipse.jem.internal.proxy.initParser.InitializationStringParser.evaluate(InitializationStringParser.java:157)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:240)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.519
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.519
!MESSAGE Exception thrown.
!STACK 0
java.lang.InstantiationException: IWAV0125E "gridLayout2" is too complicated to
be evaluated
	at
org.eclipse.jem.internal.proxy.remote.REMStandardBeanProxyFactory.createBeanProxy(REMStandardBeanProxyFactory.java:262)
	at
org.eclipse.jem.internal.proxy.remote.REMAbstractBeanTypeProxy.newInstance(REMAbstractBeanTypeProxy.java:239)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)
	at
org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)
	at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)
	at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.getBeanProxy(BeanProxyUtilities.java:322)
	at
org.eclipse.ve.internal.java.core.BeanCellRenderer.getText(BeanCellRenderer.java:64)
	at
org.eclipse.ve.internal.propertysheet.AbstractPropertySheetEntry.getValueAsString(AbstractPropertySheetEntry.java:722)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateEntry(PropertySheetViewer.java:1123)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1099)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.setInput(PropertySheetViewer.java:807)
	at
org.eclipse.ui.views.properties.PropertySheetPage.selectionChanged(PropertySheetPage.java:370)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.superSelectionChanged(EToolsPropertySheetPage.java:254)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage.access$2(EToolsPropertySheetPage.java:247)
	at
org.eclipse.ve.internal.propertysheet.EToolsPropertySheetPage$1.run(EToolsPropertySheetPage.java:240)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
There's most likely a blue i icon on the top-left of your shell, that means
there's an information message on the widget.  In this case the information
message is about a line in your source that is too complicated for the VE to
parse - something along the lines of Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2 -
"gridLayout2" is too complicated to be evaluated.

If you select the shell, the message should show up in the Eclipse status line
in the bottom of the window.
There is a blue i icon on the top-left of Shell object.  The original icon is
never displayed.  If creating a new Visual Class from scratch the SWT icons are
not present in the Palette View.

Note:  I am using Eclipse build M20040805.
Have you added the SWT Library container to your project, as described here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/newAndNoteworthy/1.0.0-M2/previewingSWT.html
Thanks,

The SWT icons are viewable from the Palette view.

Placing any SWT widget on the visual page will display the generic bean image
(without the blue i icon).  The widget is selectable, but it is not resizable
nor am I able to drag and drop any additional widgets.

The link above for configuring SWT resolves viewing SWT icons in the palette.
I believe the palette issue is resolved.  
Should I open a new bug for selecting and modify the SWT widgets in the GUI builder?

Sure, you can close this bug as WORKSFORME and open another bug report if you
like.  However it sounds like you're trying to drop any SWT component onto the
free form (white design are).  In SWT we only allow you to drop a Shell onto the
free form, and only when your class extends Object.  For a good start to working
with SWT, use the SWT Application option from the New Visual Class Wizard.
Thank you
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithStack>
    <WithOutStack>When creating a visual class the SWT widgets are not available from the Palette
selection.

If using the example visual class &lt;SimpleSWTTextEditor.java&gt;  the bean icon is
shown for the Shell widget instead of the actual icon under the
&lt;eclipse\plugins\org.eclipse.ve.swt_1.0.0\icons\full\clcl16\shell_obj.gif&gt;

If the shell icon is selected the following error messages are generated.


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.449
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.459
!MESSAGE Exception thrown.
!STACK 0

!ENTRY org.eclipse.jem.proxy 2 0 Aug 10, 2004 14:03:35.479
!MESSAGE java.lang.RuntimeException
	at org.eclipse.jem.internal.proxy.initParser.Static.evaluate(Static.java:123)
	at
org.eclipse.jem.internal.proxy.initParser.InitializationStringParser.evaluate(InitializationStringParser.java:157)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:240)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.489
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.499
!MESSAGE Exception thrown.
!STACK 0

!ENTRY org.eclipse.jem.proxy 2 0 Aug 10, 2004 14:03:35.509
!MESSAGE java.lang.RuntimeException
	at org.eclipse.jem.internal.proxy.initParser.Static.evaluate(Static.java:123)
	at
org.eclipse.jem.internal.proxy.initParser.InitializationStringParser.evaluate(InitializationStringParser.java:157)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:240)
	at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)


!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.519
!MESSAGE 
+++ Warning +++: Tue Aug 10 14:03:35 EDT 2004    Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2

!ENTRY org.eclipse.ve.java.core 2 0 Aug 10, 2004 14:03:35.519
!MESSAGE Exception thrown.
!STACK 0

There's most likely a blue i icon on the top-left of your shell, that means
there's an information message on the widget.  In this case the information
message is about a line in your source that is too complicated for the VE to
parse - something along the lines of Could not instantiate
org.eclipse.swt.widgets.Layout with initialization string=gridLayout2 -
"gridLayout2" is too complicated to be evaluated.

If you select the shell, the message should show up in the Eclipse status line
in the bottom of the window.
There is a blue i icon on the top-left of Shell object.  The original icon is
never displayed.  If creating a new Visual Class from scratch the SWT icons are
not present in the Palette View.

Note:  I am using Eclipse build M20040805.
Have you added the SWT Library container to your project, as described here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/newAndNoteworthy/1.0.0-M2/previewingSWT.html
Thanks,

The SWT icons are viewable from the Palette view.

Placing any SWT widget on the visual page will display the generic bean image
(without the blue i icon).  The widget is selectable, but it is not resizable
nor am I able to drag and drop any additional widgets.

The link above for configuring SWT resolves viewing SWT icons in the palette.
I believe the palette issue is resolved.  
Should I open a new bug for selecting and modify the SWT widgets in the GUI builder?

Sure, you can close this bug as WORKSFORME and open another bug report if you
like.  However it sounds like you're trying to drop any SWT component onto the
free form (white design are).  In SWT we only allow you to drop a Shell onto the
free form, and only when your class extends Object.  For a good start to working
with SWT, use the SWT Application option from the New Visual Class Wizard.
Thank you
Since this bug was not reOpened for more than a month, this bug is verified.
now closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71731" />
    <CreationDate amount="2004-08-10 14:10:00 -0400" />
    <DupId amount="72506" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Scanner] Scanner2 does not completely expand macros</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Macros inside #include statements are only expanded 1 level, so something like
#define INCFILE(x) vers ## x
#define str(x) #x
#define xstr(x) str(x)
#include xstr(INCFILE(2).h)   // #include "vers2.h"
does not work.

Also, macros used as parameters to function like macros are not expanded 
completely.


*** This bug has been marked as a duplicate of 72506 ***</WithStack>
    <WithOutStack>Macros inside #include statements are only expanded 1 level, so something like
#define INCFILE(x) vers ## x
#define str(x) #x
#define xstr(x) str(x)
#include xstr(INCFILE(2).h)   // #include "vers2.h"
does not work.

Also, macros used as parameters to function like macros are not expanded 
completely.


*** This bug has been marked as a duplicate of 72506 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71732" />
    <CreationDate amount="2004-08-10 14:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Outline view flashes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I change a C++ source file the outline view flashes periodically for a few
seconds (when it updates?).
&gt; When I change a C++ source file the outline view flashes periodically for a few
&gt; seconds (when it updates?).

Is this with the head branch ?
if not is it possible for you to try this with the head branch.
The code been changed so I no longer see this, can you confirm
I'll take this. Please let me know if still happens in the head.
I think Hoda fixed this in both HEAD &amp; 2_0. 
I haven't seen it since a week after 2.0 GA. 
&gt; I think Hoda fixed this in both HEAD &amp; 2_0. 
&gt; I haven't seen it since a week after 2.0 GA. 

Cool with me.

I have also did some work on this but only the head.
The outliner will wait for delta from the CModelbuilder
before doing a refresh.  Somethimes there is no need to do
a refresh if you add for example spaces ..  The parse would
then show no differences then no refresh.

Flipping to fix.  Reopen if you have problem


This is in the release 2.0 download. Is there a later version that has the fix
or is it safe to run from HEAD?
&gt; This is in the release 2.0 download. Is there a later version that has the 
fix
&gt; or is it safe to run from HEAD?

You can get new downloads from the coming 2.0.1 or the head 2.1:

http://download.eclipse.org/tools/cdt/builds/

I downloaded the 0820 build of the 2.1 stream and this is indeed fixed. Thanks!</WithStack>
    <WithOutStack>When I change a C++ source file the outline view flashes periodically for a few
seconds (when it updates?).
&gt; When I change a C++ source file the outline view flashes periodically for a few
&gt; seconds (when it updates?).

Is this with the head branch ?
if not is it possible for you to try this with the head branch.
The code been changed so I no longer see this, can you confirm
I'll take this. Please let me know if still happens in the head.
I think Hoda fixed this in both HEAD &amp; 2_0. 
I haven't seen it since a week after 2.0 GA. 
&gt; I think Hoda fixed this in both HEAD &amp; 2_0. 
&gt; I haven't seen it since a week after 2.0 GA. 

Cool with me.

I have also did some work on this but only the head.
The outliner will wait for delta from the CModelbuilder
before doing a refresh.  Somethimes there is no need to do
a refresh if you add for example spaces ..  The parse would
then show no differences then no refresh.

Flipping to fix.  Reopen if you have problem


This is in the release 2.0 download. Is there a later version that has the fix
or is it safe to run from HEAD?
&gt; This is in the release 2.0 download. Is there a later version that has the 
fix
&gt; or is it safe to run from HEAD?

You can get new downloads from the coming 2.0.1 or the head 2.1:

http://download.eclipse.org/tools/cdt/builds/

I downloaded the 0820 build of the 2.1 stream and this is indeed fixed. Thanks!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71733" />
    <CreationDate amount="2004-08-10 14:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Scanner] Comment within multi-line macro definition not scanned properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A multiline macro definition with a /*...*/ comment will not be scanned 
correctly if the comment has an isolated "/" character.

Example:

#define foo() \
    a(1) /* slash / is misinterpreted as end of comment */ \
    a(2)


The bug apparently is in source file "Scanner2.java" in 
org.eclipse.cdt.internal.core.parser.scanner2. Look at 
method "removeMultilineCommentFromBuffer()".

The line 1561:
while( i &lt; text.length &amp;&amp; text[i] != '*' &amp;&amp; i+1 &lt; text.length &amp;&amp; text[i+1] !
= '/')


Should be:

while( i &lt; text.length &amp;&amp; !(text[i] == '*' &amp;&amp; i+1 &lt; text.length &amp;&amp; text[i+1] 
== '/'))
Fixed in HEAD &amp; AST2.  
Credit in the commit log to David Pickens. 
Thanks!
These bugs all were fixed in the HEAD, so they're effectively fixed in 2.1.</WithStack>
    <WithOutStack>A multiline macro definition with a /*...*/ comment will not be scanned 
correctly if the comment has an isolated "/" character.

Example:

#define foo() \
    a(1) /* slash / is misinterpreted as end of comment */ \
    a(2)


The bug apparently is in source file "Scanner2.java" in 
org.eclipse.cdt.internal.core.parser.scanner2. Look at 
method "removeMultilineCommentFromBuffer()".

The line 1561:
while( i &lt; text.length &amp;&amp; text[i] != '*' &amp;&amp; i+1 &lt; text.length &amp;&amp; text[i+1] !
= '/')


Should be:

while( i &lt; text.length &amp;&amp; !(text[i] == '*' &amp;&amp; i+1 &lt; text.length &amp;&amp; text[i+1] 
== '/'))
Fixed in HEAD &amp; AST2.  
Credit in the commit log to David Pickens. 
Thanks!
These bugs all were fixed in the HEAD, so they're effectively fixed in 2.1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71734" />
    <CreationDate amount="2004-08-10 14:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[J2SE 5] Support for timeout on connectors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>These connectors now support a timeout connection argument that must be 
supported in our implementation:

com.sun.jdi.SocketAttach (SocketAttachingConnectorImpl)
com.sun.jdi.SocketListen (SocketListeningConnectorImpl)

the new TransportTimeoutException should be thrown when a timeout occurrs.
will defer to M3 with support for generic connectors/connections.
fixed in SocketTransportService
please verify
Verified.</WithStack>
    <WithOutStack>These connectors now support a timeout connection argument that must be 
supported in our implementation:

com.sun.jdi.SocketAttach (SocketAttachingConnectorImpl)
com.sun.jdi.SocketListen (SocketListeningConnectorImpl)

the new TransportTimeoutException should be thrown when a timeout occurrs.
will defer to M3 with support for generic connectors/connections.
fixed in SocketTransportService
please verify
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71735" />
    <CreationDate amount="2004-08-10 14:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="CVS" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse source repository should convert to subversion.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="3">
        <Lines>
          <Line>1. it's not part of our core OS yet.  Given the complexity of the eclipse.org infra, we can't (and don't) just hack and compile software that isn't bundled with the OS.</Line>
          <Line />
          <Line>2. the decision to switch from cvs to subversion, or to use both in parallel, is not ours [the foundation] to make. PMC's tell us what tools they want to use and we try to accomodate as best we can. If projects are okay with CVS, that's fine by me. If they want to switch, that's also fine by me.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) SVN offers an improved feature set over CVS.</Line>
          <Line>2) SVN is actively developed and well supported and provides a rich API.  An Eclipse plugin can focus on providing a great user experience and let Subversion provide the API to make it all work.</Line>
          <Line>3) 1 and 2 would likely lead to Eclipse providing more and better Team API, including refactoring CVS code to be reusable by SVN.  This means providing a better eco-system for tool providers which is part of the point of Eclipse.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1. The Foundation should offer projects a SVN repository (bug 131096)</Line>
          <Line>2. Migrate existing projects from CVS to SVN</Line>
          <Line>3. Include SVN tooling in Eclipse out-of-the box.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Greetings. I didnt know where to file this one so I put it here. Anyone who 
knows a better place for it and moves it thanks in advance. 

I think eclipse should move to a Subversion. It has all of the features of CVS 
and corrects every single flaw in CVS. You can rename files, move directories, 
and much more. Subversion is far far superior to CVS and since it was 
developed by the CVS maintainers, it is quite similar. 

Subversion home: subversion.tigris.org.

In my opinion only the HEAD of the repository should be moved into subversion 
and the CVS system frozen for historical purposes. The reason is that CVS 
repositories build a lot of lint over a project from extra directories and so 
on that hang around. Checking out the head, removing the lint and importing it 
into subversion would clean up the repository.
I'm not sure where this should be either. I can say that I doubt that Eclipse 
will not be switching from CVS any time soon. Currently, CVS meets our needs 
and the we do not seem to be experiencing any major difficulties due to 
repository untidyness. I know there are some new features in subversion that 
are handy but conversion processes always come with snags and at the moment, 
there is no desire to switch. Perhaps, in the future, if or when CVS stops 
meeting our needs, we will consider switching. Marking as LATER.
I switched all my professional products, my company switched, many open source 
projects have switched. I dont know anyone that has ever regretted it. 

If you have never tasted chocolate, can you know what you are missing?
It will happen, but isn't high on our list yet. By the way, how solid is the
subversion Eclipse plug-in? When we do switch, we will have to ensure that the
subversion plug-in is up to par with the CVS one: performance, features, usability.
Its pretty good. It needs some work in the label decorations but the principle 
features are quite stable. Most of the issues I have with it are minor 
annoyances. 
Moving to the Community product as this decision would need to come from Eclipse.org
This is the appropriate location for this bug.  Two things are stopping us from using Subversion:

1. it's not part of our core OS yet.  Given the complexity of the eclipse.org infra, we can't (and don't) just hack and compile software that isn't bundled with the OS.

2. the decision to switch from cvs to subversion, or to use both in parallel, is not ours [the foundation] to make. PMC's tell us what tools they want to use and we try to accomodate as best we can. If projects are okay with CVS, that's fine by me. If they want to switch, that's also fine by me.

I'll update this bug when Subversion is available in our base OS.  It could take a while, though, as entreprise OSes don't gather new features very often.

D.
I dont' think that this bug blocks bug 37154. If ever then vice versa. 

I talked with a Subclipse developer at Javapolis and honestly, the Subclipse plug-in is far away from the CVS plug-in. A switch won't bring any benifits for the Eclipse committers because of the lack of tooling support. There is much effort necessary to bring all the great features from the CVS plug-in into the Subclipse plug-in. Not to mention that the guy who wrote the pure Java interface to Subversion wants money from the Foundation for re-licensing it under the EPL (bug 37154 comment 38).

I think a better strategy is to offer new projects a Subversion repository and let the tooling evolve. In my opinion it will take at least two years from the point of the decision till the switch is acutally finished (1.5 years to bring the Subclipse plug-in onto the level of the CVS plug-in and 0.5 years for role-out and repository migration).


What you say is not unreasonable. My motivation for marking bug 37154 as dependant on this bug is really to identify that the decision must come from the PMC. If and when the decision is made, the process for how it happens can then be determined.
(In reply to comment #6)

&gt; 1. it's not part of our core OS yet.  Given the complexity of the eclipse.org
&gt; infra, we can't (and don't) just hack and compile software that isn't bundled
&gt; with the OS.

What OS are you running?  On most *nix OS' Subversion is built from source (but fairly easily).  There are packages available for most OS though.  The biggest hurdle is typically that it requires Apache 2.0 if you are going to make the repositories available via http(s)://.  Of course that also bring a lot of benefits.

The cvs2svn migration scripts are also very good.

If you were going to host Subversion repositories wouldn't you likely do so on its own server?  Is it really that difficult to setup a server for this?  Granted it doesn't make sense to do so unless projects want a Subversion repository, but what if you polled the projects to find out who would be interested in this?
(In reply to comment #7)
&gt; I talked with a Subclipse developer at Javapolis and honestly, the Subclipse
&gt; plug-in is far away from the CVS plug-in. A switch won't bring any benifits for
&gt; the Eclipse committers because of the lack of tooling support. 

Have you looked at a recent version of Subclipse?  The developer you spoke with has not been involved in the project for well over a year.  We will be releasing our 1.0 release in the next few weeks.  I think it will stack up very well against the CVS plugin.  

Let's face it, the CVS plugin is outstanding.  No one is denying that.  But the SVN plugin is a lot closer to it than a lot of people think and even offers a lot of features that the CVS plugin does not, or is just adding now.  Most of the complaints I see about Subclipse are really complaints about differences between Subversion and CVS.

I think there are several reasons to support Subversion and bring an SVN plugin into Eclipse:

1) SVN offers an improved feature set over CVS.
2) SVN is actively developed and well supported and provides a rich API.  An Eclipse plugin can focus on providing a great user experience and let Subversion provide the API to make it all work.
3) 1 and 2 would likely lead to Eclipse providing more and better Team API, including refactoring CVS code to be reusable by SVN.  This means providing a better eco-system for tool providers which is part of the point of Eclipse.

Finally, I did not read the comment by the JavaSVN developer as wanting money.  I read it as he wanted assistance in developing and maintaining JavaSVN.  If he is going to license it as EPL and let commercial products have it for free, he wants help from the Eclipse communuity in developing it.  For Subclipse, he has stated that commercial IDE's can include Subclipse and not require a special license for JavaSVN.  It is only if they customize Subclipse or otherwise use the JavaSVN library in other code that they would require a license.  That seems reasonable to me.





There is much
&gt; effort necessary to bring all the great features from the CVS plug-in into the
&gt; Subclipse plug-in. Not to mention that the guy who wrote the pure Java
&gt; interface to Subversion wants money from the Foundation for re-licensing it
&gt; under the EPL (bug 37154 comment 38).
&gt; 
&gt; I think a better strategy is to offer new projects a Subversion repository and
&gt; let the tooling evolve. In my opinion it will take at least two years from the
&gt; point of the decision till the switch is acutally finished (1.5 years to bring
&gt; the Subclipse plug-in onto the level of the CVS plug-in and 0.5 years for
&gt; role-out and repository migration).
&gt; 


According to Netcraft you are already running Apache 2.0, so that is good.  It also appears that you are running RHEL.  You can get RPM's for RHEL here:

http://the.earth.li/pub/subversion/summersoft.fay.ar.us/pub/subversion/latest/

The only issue with Subversion on RHEL is that it is built without BDB support.  For someone just starting out, that should be a non-issue as you are better off without it anyway.  You would use the "fsfs" format for repositories.

(In reply to comment #9)
&gt; What OS are you running?

SLES 9

&gt; On most *nix OS' Subversion is built from source (but
&gt; fairly easily).  There are packages available for most OS though.

I'll have to re-check for SLES 9. But setting it up is not what concerns me - that's easy. It's maintaining it 24/7/365/patches/upgrades/security_fixes that I consider. I have no time to be recompiling software for updates and upgrades, especially when said software runs on a cluster of servers.


&gt; If you were going to host Subversion repositories wouldn't you likely do so on
&gt; its own server?  

Hell no. One server does not scale and is not fault-tolerant. We run everything in a clustered environment (four front-ends that connect to two backends) which gives us many advantages: we reboot when we want, take servers down for days without anyone noticing, adding servers when things get slow). The downside is that we can't just "add a SVN server" - we have to add four and make sure it behaves in a load-balanced environment. When we provide new tools like SVN, we have to assume that all projects will be using it from day 1.


&gt; Is it really that difficult to setup a server for this? 

As above.  It has to run on the cluster. Committers [and the large companies they work for] get too angry when things are slow and/or unreliable  :)  


D.
(In reply to comment #12)
&gt; (In reply to comment #9)
&gt; &gt; What OS are you running?
&gt; 
&gt; SLES 9

SLES might actually be the easiest distribution to obtain Subversion.  So that is good.  Get RPM's here:

http://ftp.suse.com/pub/projects/apache/subversion/

&gt; I'll have to re-check for SLES 9. But setting it up is not what concerns me -
&gt; that's easy. It's maintaining it 24/7/365/patches/upgrades/security_fixes that
&gt; I consider. I have no time to be recompiling software for updates and upgrades,
&gt; especially when said software runs on a cluster of servers.

How do you do clustering with CVS?  Is it all done at the filesystem level?  I am trying to think how you could do this with Subversion.  The people at CollabNet and/or ASF might have some experience with this.  I suspect clustering at the filesystem with an fsfs repository format would work.  You could then have multiple Apache servers load-balanced in front.

Patches for Subversion have been pretty reasonable.  Generally a new release every 6-8 months.  Usually about 3-4 bug fix releases in between.  Typically these have been fairly non-urgent.  Also, Subversion guarantees compatability between versions, so you could install say 1.2.3 on your server and leave it at that version for a long, long time if you wanted.  The clients could be using older or newer versions without problem.  You would only have to update the server where there was some need that the projects were asking for.

Thanks

I use Subclipse professionally and have not had a single problem with it as of yet. Subversion itself is the best thing that ever happened to my source base. I am reminded of this every time I open the eclipse repository on the web and have to search through 5 million (not far off accurate number) of empty, dead directories. 

CVS is old, not being actively developed and has serious problems. Even Apache Software Foundation is converting to Subversion. 
Complementing comment#14:

- Subversion is now the official source code repository for Apache Software Foundation (http://www.apache.org/dev/version-control.html). The CVS support has been deprecated, and there are plans to gradually migrate current projects using CVS to SVN until next year (I have read this some time ago, but I don't remember where, sorry...)

- Also KDE have switched to subversion last year: http://developers.slashdot.org/article.pl?sid=05/05/04/136257&amp;from=rss

- Last week, sourceforge started to offer subversion repositories to projects hosted there.

Now, my opinion about this bug: I think it should not block bug#37154. I think the opposite: this bug should *** depend *** on bug#37154.

"Official" tooling support for subversion from the platform should exist to enable Eclipse Foundation subprojects gradually migrate to SVN, as they want.
(In reply to comment #15)
&gt; "Official" tooling support for subversion from the platform should exist to
&gt; enable Eclipse Foundation subprojects gradually migrate to SVN, as they want.

No. There is good tooling support available. Actually, there are three different topics.

1. The Foundation should offer projects a SVN repository (bug 131096)
2. Migrate existing projects from CVS to SVN
3. Include SVN tooling in Eclipse out-of-the box.

The first topic is in the hands of the Eclipse Foundation. 

For the second topic, the Eclipse Foundation can only provide migration assistance but the projects needs to make the decision together with their PMC. 

The third topic can only be decided by the Eclipse Platform PMC. Therefore, the dependency is correct. It just says that they will look at it if they actually have the possibility to use it.

Why not simply strike up a cooperation with Subclipse for that tooling support? Subclipse is open source and there is hardly any reason to re-invent the wheel.
*** Bug 131096 has been marked as a duplicate of this bug. ***
Am I correct in understanding that this bug is to request the Eclipse project switches its source repository from CVS to subversion (which is currently not possible, because the Eclipse Foundation does not yet have Subversion)?

If so, I believe this bug should be moved to the Eclipse Project (somewhere) and it should be made to depend on bug 131096, which is a formal request for the Foundation to provide its projects with Subversion support.

D.
As per my previous comment, this bug depends on bug 131096, which is that the Foundation provide a subversion server.

This is not to imply that the Eclipse project will actually migrate its code from CVS to SVN, but at least the underlying server and repository will be there should they decide to do so.

Because this bug is not a Webmaster/EMO bug, I'll assign it to the Eclipse PMC, who will ultimately make the decision.
After re-reading comment 1, which was written almost 4 years ago, and realizing it likely still applies today, I'm closing this as WONTFIX.

The Eclipse PMC is free to choose which tools it wants to work with. They have chosen CVS, and from what I can tell, it currently meets their needs. CVS is in no way deprecated on our servers.

Down the road, should they choose to switch to SVN, arch, git, or heck NOTEPAD.EXE, they will place a request for it and it will be done.</WithStack>
    <WithOutStack>Greetings. I didnt know where to file this one so I put it here. Anyone who 
knows a better place for it and moves it thanks in advance. 

I think eclipse should move to a Subversion. It has all of the features of CVS 
and corrects every single flaw in CVS. You can rename files, move directories, 
and much more. Subversion is far far superior to CVS and since it was 
developed by the CVS maintainers, it is quite similar. 

Subversion home: subversion.tigris.org.

In my opinion only the HEAD of the repository should be moved into subversion 
and the CVS system frozen for historical purposes. The reason is that CVS 
repositories build a lot of lint over a project from extra directories and so 
on that hang around. Checking out the head, removing the lint and importing it 
into subversion would clean up the repository.
I'm not sure where this should be either. I can say that I doubt that Eclipse 
will not be switching from CVS any time soon. Currently, CVS meets our needs 
and the we do not seem to be experiencing any major difficulties due to 
repository untidyness. I know there are some new features in subversion that 
are handy but conversion processes always come with snags and at the moment, 
there is no desire to switch. Perhaps, in the future, if or when CVS stops 
meeting our needs, we will consider switching. Marking as LATER.
I switched all my professional products, my company switched, many open source 
projects have switched. I dont know anyone that has ever regretted it. 

If you have never tasted chocolate, can you know what you are missing?
It will happen, but isn't high on our list yet. By the way, how solid is the
subversion Eclipse plug-in? When we do switch, we will have to ensure that the
subversion plug-in is up to par with the CVS one: performance, features, usability.
Its pretty good. It needs some work in the label decorations but the principle 
features are quite stable. Most of the issues I have with it are minor 
annoyances. 
Moving to the Community product as this decision would need to come from Eclipse.org
This is the appropriate location for this bug.  Two things are stopping us from using Subversion:

1. it's not part of our core OS yet.  Given the complexity of the eclipse.org infra, we can't (and don't) just hack and compile software that isn't bundled with the OS.

2. the decision to switch from cvs to subversion, or to use both in parallel, is not ours [the foundation] to make. PMC's tell us what tools they want to use and we try to accomodate as best we can. If projects are okay with CVS, that's fine by me. If they want to switch, that's also fine by me.

I'll update this bug when Subversion is available in our base OS.  It could take a while, though, as entreprise OSes don't gather new features very often.

D.
I dont' think that this bug blocks bug 37154. If ever then vice versa. 

I talked with a Subclipse developer at Javapolis and honestly, the Subclipse plug-in is far away from the CVS plug-in. A switch won't bring any benifits for the Eclipse committers because of the lack of tooling support. There is much effort necessary to bring all the great features from the CVS plug-in into the Subclipse plug-in. Not to mention that the guy who wrote the pure Java interface to Subversion wants money from the Foundation for re-licensing it under the EPL (bug 37154 comment 38).

I think a better strategy is to offer new projects a Subversion repository and let the tooling evolve. In my opinion it will take at least two years from the point of the decision till the switch is acutally finished (1.5 years to bring the Subclipse plug-in onto the level of the CVS plug-in and 0.5 years for role-out and repository migration).


What you say is not unreasonable. My motivation for marking bug 37154 as dependant on this bug is really to identify that the decision must come from the PMC. If and when the decision is made, the process for how it happens can then be determined.
(In reply to comment #6)

&gt; 1. it's not part of our core OS yet.  Given the complexity of the eclipse.org
&gt; infra, we can't (and don't) just hack and compile software that isn't bundled
&gt; with the OS.

What OS are you running?  On most *nix OS' Subversion is built from source (but fairly easily).  There are packages available for most OS though.  The biggest hurdle is typically that it requires Apache 2.0 if you are going to make the repositories available via http(s)://.  Of course that also bring a lot of benefits.

The cvs2svn migration scripts are also very good.

If you were going to host Subversion repositories wouldn't you likely do so on its own server?  Is it really that difficult to setup a server for this?  Granted it doesn't make sense to do so unless projects want a Subversion repository, but what if you polled the projects to find out who would be interested in this?
(In reply to comment #7)
&gt; I talked with a Subclipse developer at Javapolis and honestly, the Subclipse
&gt; plug-in is far away from the CVS plug-in. A switch won't bring any benifits for
&gt; the Eclipse committers because of the lack of tooling support. 

Have you looked at a recent version of Subclipse?  The developer you spoke with has not been involved in the project for well over a year.  We will be releasing our 1.0 release in the next few weeks.  I think it will stack up very well against the CVS plugin.  

Let's face it, the CVS plugin is outstanding.  No one is denying that.  But the SVN plugin is a lot closer to it than a lot of people think and even offers a lot of features that the CVS plugin does not, or is just adding now.  Most of the complaints I see about Subclipse are really complaints about differences between Subversion and CVS.

I think there are several reasons to support Subversion and bring an SVN plugin into Eclipse:

1) SVN offers an improved feature set over CVS.
2) SVN is actively developed and well supported and provides a rich API.  An Eclipse plugin can focus on providing a great user experience and let Subversion provide the API to make it all work.
3) 1 and 2 would likely lead to Eclipse providing more and better Team API, including refactoring CVS code to be reusable by SVN.  This means providing a better eco-system for tool providers which is part of the point of Eclipse.

Finally, I did not read the comment by the JavaSVN developer as wanting money.  I read it as he wanted assistance in developing and maintaining JavaSVN.  If he is going to license it as EPL and let commercial products have it for free, he wants help from the Eclipse communuity in developing it.  For Subclipse, he has stated that commercial IDE's can include Subclipse and not require a special license for JavaSVN.  It is only if they customize Subclipse or otherwise use the JavaSVN library in other code that they would require a license.  That seems reasonable to me.





There is much
&gt; effort necessary to bring all the great features from the CVS plug-in into the
&gt; Subclipse plug-in. Not to mention that the guy who wrote the pure Java
&gt; interface to Subversion wants money from the Foundation for re-licensing it
&gt; under the EPL (bug 37154 comment 38).
&gt; 
&gt; I think a better strategy is to offer new projects a Subversion repository and
&gt; let the tooling evolve. In my opinion it will take at least two years from the
&gt; point of the decision till the switch is acutally finished (1.5 years to bring
&gt; the Subclipse plug-in onto the level of the CVS plug-in and 0.5 years for
&gt; role-out and repository migration).
&gt; 


According to Netcraft you are already running Apache 2.0, so that is good.  It also appears that you are running RHEL.  You can get RPM's for RHEL here:

http://the.earth.li/pub/subversion/summersoft.fay.ar.us/pub/subversion/latest/

The only issue with Subversion on RHEL is that it is built without BDB support.  For someone just starting out, that should be a non-issue as you are better off without it anyway.  You would use the "fsfs" format for repositories.

(In reply to comment #9)
&gt; What OS are you running?

SLES 9

&gt; On most *nix OS' Subversion is built from source (but
&gt; fairly easily).  There are packages available for most OS though.

I'll have to re-check for SLES 9. But setting it up is not what concerns me - that's easy. It's maintaining it 24/7/365/patches/upgrades/security_fixes that I consider. I have no time to be recompiling software for updates and upgrades, especially when said software runs on a cluster of servers.


&gt; If you were going to host Subversion repositories wouldn't you likely do so on
&gt; its own server?  

Hell no. One server does not scale and is not fault-tolerant. We run everything in a clustered environment (four front-ends that connect to two backends) which gives us many advantages: we reboot when we want, take servers down for days without anyone noticing, adding servers when things get slow). The downside is that we can't just "add a SVN server" - we have to add four and make sure it behaves in a load-balanced environment. When we provide new tools like SVN, we have to assume that all projects will be using it from day 1.


&gt; Is it really that difficult to setup a server for this? 

As above.  It has to run on the cluster. Committers [and the large companies they work for] get too angry when things are slow and/or unreliable  :)  


D.
(In reply to comment #12)
&gt; (In reply to comment #9)
&gt; &gt; What OS are you running?
&gt; 
&gt; SLES 9

SLES might actually be the easiest distribution to obtain Subversion.  So that is good.  Get RPM's here:

http://ftp.suse.com/pub/projects/apache/subversion/

&gt; I'll have to re-check for SLES 9. But setting it up is not what concerns me -
&gt; that's easy. It's maintaining it 24/7/365/patches/upgrades/security_fixes that
&gt; I consider. I have no time to be recompiling software for updates and upgrades,
&gt; especially when said software runs on a cluster of servers.

How do you do clustering with CVS?  Is it all done at the filesystem level?  I am trying to think how you could do this with Subversion.  The people at CollabNet and/or ASF might have some experience with this.  I suspect clustering at the filesystem with an fsfs repository format would work.  You could then have multiple Apache servers load-balanced in front.

Patches for Subversion have been pretty reasonable.  Generally a new release every 6-8 months.  Usually about 3-4 bug fix releases in between.  Typically these have been fairly non-urgent.  Also, Subversion guarantees compatability between versions, so you could install say 1.2.3 on your server and leave it at that version for a long, long time if you wanted.  The clients could be using older or newer versions without problem.  You would only have to update the server where there was some need that the projects were asking for.

Thanks

I use Subclipse professionally and have not had a single problem with it as of yet. Subversion itself is the best thing that ever happened to my source base. I am reminded of this every time I open the eclipse repository on the web and have to search through 5 million (not far off accurate number) of empty, dead directories. 

CVS is old, not being actively developed and has serious problems. Even Apache Software Foundation is converting to Subversion. 
Complementing comment#14:

- Subversion is now the official source code repository for Apache Software Foundation (http://www.apache.org/dev/version-control.html). The CVS support has been deprecated, and there are plans to gradually migrate current projects using CVS to SVN until next year (I have read this some time ago, but I don't remember where, sorry...)

- Also KDE have switched to subversion last year: http://developers.slashdot.org/article.pl?sid=05/05/04/136257&amp;from=rss

- Last week, sourceforge started to offer subversion repositories to projects hosted there.

Now, my opinion about this bug: I think it should not block bug#37154. I think the opposite: this bug should *** depend *** on bug#37154.

"Official" tooling support for subversion from the platform should exist to enable Eclipse Foundation subprojects gradually migrate to SVN, as they want.
(In reply to comment #15)
&gt; "Official" tooling support for subversion from the platform should exist to
&gt; enable Eclipse Foundation subprojects gradually migrate to SVN, as they want.

No. There is good tooling support available. Actually, there are three different topics.

1. The Foundation should offer projects a SVN repository (bug 131096)
2. Migrate existing projects from CVS to SVN
3. Include SVN tooling in Eclipse out-of-the box.

The first topic is in the hands of the Eclipse Foundation. 

For the second topic, the Eclipse Foundation can only provide migration assistance but the projects needs to make the decision together with their PMC. 

The third topic can only be decided by the Eclipse Platform PMC. Therefore, the dependency is correct. It just says that they will look at it if they actually have the possibility to use it.

Why not simply strike up a cooperation with Subclipse for that tooling support? Subclipse is open source and there is hardly any reason to re-invent the wheel.
*** Bug 131096 has been marked as a duplicate of this bug. ***
Am I correct in understanding that this bug is to request the Eclipse project switches its source repository from CVS to subversion (which is currently not possible, because the Eclipse Foundation does not yet have Subversion)?

If so, I believe this bug should be moved to the Eclipse Project (somewhere) and it should be made to depend on bug 131096, which is a formal request for the Foundation to provide its projects with Subversion support.

D.
As per my previous comment, this bug depends on bug 131096, which is that the Foundation provide a subversion server.

This is not to imply that the Eclipse project will actually migrate its code from CVS to SVN, but at least the underlying server and repository will be there should they decide to do so.

Because this bug is not a Webmaster/EMO bug, I'll assign it to the Eclipse PMC, who will ultimately make the decision.
After re-reading comment 1, which was written almost 4 years ago, and realizing it likely still applies today, I'm closing this as WONTFIX.

The Eclipse PMC is free to choose which tools it wants to work with. They have chosen CVS, and from what I can tell, it currently meets their needs. CVS is in no way deprecated on our servers.

Down the road, should they choose to switch to SVN, arch, git, or heck NOTEPAD.EXE, they will place a request for it and it will be done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71736" />
    <CreationDate amount="2004-08-10 14:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>need finer control over core model parsing (ie not tied to outline view)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1.  Outline View (particularly on reconcile).</Line>
          <Line>2.  Users that wish to browse code without having full toolchain installed.</Line>
          <Line>3.  Users that wish to browse code without having a scanner discovery</Line>
          <Line>implementation provided for it.</Line>
          <Line>4.  Anything that is listening for CModel Element Deltas. (We have products</Line>
          <Line>like that do this).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Right now, the "follow #includes" preferences option affects the parsing mode
(quick or structural) of the entire core model.  I believe the original purpose
of this option was for performance reasons in the outline view (e.g. reconciling
large files with lots of includes) but as a consequence it affects all users of
the core model.  This causes problems in cases where the structural parse is
always needed, like in the class browser and type hierarchy view (see bug# 66108).

We need a way to have finer-grained control over the core model parsing /
reconciling strategy.  Ideally the outline view would be able to do a quick
parse while the class browser could still do structural parsing as needed.
The original purpose of that option was for prototype work.  
Unfortunately it lives on.  
I have tried to have it ripped out but now certain products depend upon its 
availability. 

There is a lesson here ... never put something in the UI if you don't want to 
own it for life.  

As for the issue in the defect, I am unsure as to why you want to force the 
CModel to work a certain way. 
I'm actually opposed to forcing the CModel to work a certain way (namely the
outline view's way) - that's what this bug is all about... :)

Can you tell me what/who depends on the current behaviour?  I think it's a bad
thing that users of the CModel can have the "rug pulled out from under them" so
to speak, because a simple preference change for the outline view can suddenly
modify the behaviour they were expecting from the CModel (ie quick vs.
structural parse).

Funny how prototypes can sometimes have a half-life longer than plutonium...

CC-ing Dave.

Things that depend upon a speedy CModel: 
1.  Outline View (particularly on reconcile). 
2.  Users that wish to browse code without having full toolchain installed. 
3.  Users that wish to browse code without having a scanner discovery 
implementation provided for it.  
4.  Anything that is listening for CModel Element Deltas. (We have products 
like that do this). 

What is really needed is a hybrid system that would figure out the best mode 
to use given the circumstances/environment.  
All good points.  I had forgotten about the element deltas.  Ideally a
"scalable" solution would be best but I'm beginning to think that's a much wider
scope than it sounds... ;)

I was pushing for this mostly because there have been several bugs where people
had macros in their C++ classes (not an uncommon situation) and they were
confused why the definition wasn't showing up the way they expected in the
various views.

In the meantime I suggest we make it more obvious that the follow #includes
preference affects much more than the outline view.  Alain has changed the
wording to "Follow #includes when parsing source files" which is slightly better
although I think maybe this still doesn't quite convey the overall ramifications
(like when does a preference change actually take effect).

It's funny how the more you get things to work, the more requirements people 
keep adding to it. The CModel has never been the right code model to provide 
accurate representation of the code. It is meant as the fast/incomplete model. 
We are currently working on our AST proposal for 2.1++ that should be the 
slow/complete model. We have some ideas to make it incremental so it could 
meet the varying needs of clients but this will be difficult.

As John mentioned, we need to consider *all* of the requirements we have on 
the code models/parser and make sure we build the right thing instead of a 
house of cards that'll likely fall down on us (sorry I had to use that one :-)
&gt; It's funny how the more you get things to work, the more requirements people 
&gt; keep adding to it.

this goes for every thing, it is call doing thing by iteration.
And you build on what you have.

&gt; The CModel has never been the right code model to provide 
&gt; accurate representation of the code.

I strongly disagree on this.  The Core Model was created to mimic
the Java model and it was intended to be proxy or the middle man
between the parsing (AST, or the old javacc parser)

&gt; It is meant as the fast/incomplete model. 

It is meant as a representation or the bridge that many modules can
use, it is less complex then using the AST and you can get events
and other informations.

&gt; We are currently working on our AST proposal for 2.1++ that should be the 
&gt; slow/complete model. We have some ideas to make it incremental so it could 
&gt; meet the varying needs of clients but this will be difficult.

Sure, but I think chris point was that the Core Model was not build for
the outliner.  And it is an excellent bridge that we can use and continue
to implement/advance
I agree w/Alain ... the CModel is the bridge.
Unfortunately, I am at a loss as to how to go about solving this one quickly. 

PS: Note that I set the Milestone to Future.  To commit to this for 2.1 would 
be to absolve ourselves of all other bugs or features, QNX &amp; IBM combined. 
&gt; I agree w/Alain ... the CModel is the bridge.

Doug's comments are not loss on me.  He's right, the CModel can be
an incomplete view of the world.  The CModel gather the informations
from all sort of sources: binary parsers, AST parsers, Resolver Model(what
extension is a C file) etc ...

Clients  of the model must realize that the information is not complete,
for example the debugger is using the Binary Parser via the CModel
to set breakpoints, but if the IBinary file does not have any debug info ...
well tough 8-(

We are working to improve this, but it is a very slow process and
done via iterations.

&gt; Unfortunately, I am at a loss as to how to go about solving this one
&gt; quickly. 

It may not be possible i.e. short term solutions.
The QUICK parse only for the reconciler maybe a strategey that we may explore
for the head .. later
Returning to the pool.
The core model is now built using the DOM parser and the index.  It's presumed that analysis views will now build up their content from the AST or the index, and use ICElements more or less only for presentation, or to use as a handle to later query the AST or index again.  This is what the call hierarchy and type hierarchy views do, for instance.

I actively disagree that we should build different models for different clients, as otherwise you get inconsistencies in the UI.  Users will find it annoying for example if the elements in the outline view and in the Project Explorer are not the same.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithStack>
    <WithOutStack>Right now, the "follow #includes" preferences option affects the parsing mode
(quick or structural) of the entire core model.  I believe the original purpose
of this option was for performance reasons in the outline view (e.g. reconciling
large files with lots of includes) but as a consequence it affects all users of
the core model.  This causes problems in cases where the structural parse is
always needed, like in the class browser and type hierarchy view (see bug# 66108).

We need a way to have finer-grained control over the core model parsing /
reconciling strategy.  Ideally the outline view would be able to do a quick
parse while the class browser could still do structural parsing as needed.
The original purpose of that option was for prototype work.  
Unfortunately it lives on.  
I have tried to have it ripped out but now certain products depend upon its 
availability. 

There is a lesson here ... never put something in the UI if you don't want to 
own it for life.  

As for the issue in the defect, I am unsure as to why you want to force the 
CModel to work a certain way. 
I'm actually opposed to forcing the CModel to work a certain way (namely the
outline view's way) - that's what this bug is all about... :)

Can you tell me what/who depends on the current behaviour?  I think it's a bad
thing that users of the CModel can have the "rug pulled out from under them" so
to speak, because a simple preference change for the outline view can suddenly
modify the behaviour they were expecting from the CModel (ie quick vs.
structural parse).

Funny how prototypes can sometimes have a half-life longer than plutonium...

CC-ing Dave.

Things that depend upon a speedy CModel: 
1.  Outline View (particularly on reconcile). 
2.  Users that wish to browse code without having full toolchain installed. 
3.  Users that wish to browse code without having a scanner discovery 
implementation provided for it.  
4.  Anything that is listening for CModel Element Deltas. (We have products 
like that do this). 

What is really needed is a hybrid system that would figure out the best mode 
to use given the circumstances/environment.  
All good points.  I had forgotten about the element deltas.  Ideally a
"scalable" solution would be best but I'm beginning to think that's a much wider
scope than it sounds... ;)

I was pushing for this mostly because there have been several bugs where people
had macros in their C++ classes (not an uncommon situation) and they were
confused why the definition wasn't showing up the way they expected in the
various views.

In the meantime I suggest we make it more obvious that the follow #includes
preference affects much more than the outline view.  Alain has changed the
wording to "Follow #includes when parsing source files" which is slightly better
although I think maybe this still doesn't quite convey the overall ramifications
(like when does a preference change actually take effect).

It's funny how the more you get things to work, the more requirements people 
keep adding to it. The CModel has never been the right code model to provide 
accurate representation of the code. It is meant as the fast/incomplete model. 
We are currently working on our AST proposal for 2.1++ that should be the 
slow/complete model. We have some ideas to make it incremental so it could 
meet the varying needs of clients but this will be difficult.

As John mentioned, we need to consider *all* of the requirements we have on 
the code models/parser and make sure we build the right thing instead of a 
house of cards that'll likely fall down on us (sorry I had to use that one :-)
&gt; It's funny how the more you get things to work, the more requirements people 
&gt; keep adding to it.

this goes for every thing, it is call doing thing by iteration.
And you build on what you have.

&gt; The CModel has never been the right code model to provide 
&gt; accurate representation of the code.

I strongly disagree on this.  The Core Model was created to mimic
the Java model and it was intended to be proxy or the middle man
between the parsing (AST, or the old javacc parser)

&gt; It is meant as the fast/incomplete model. 

It is meant as a representation or the bridge that many modules can
use, it is less complex then using the AST and you can get events
and other informations.

&gt; We are currently working on our AST proposal for 2.1++ that should be the 
&gt; slow/complete model. We have some ideas to make it incremental so it could 
&gt; meet the varying needs of clients but this will be difficult.

Sure, but I think chris point was that the Core Model was not build for
the outliner.  And it is an excellent bridge that we can use and continue
to implement/advance
I agree w/Alain ... the CModel is the bridge.
Unfortunately, I am at a loss as to how to go about solving this one quickly. 

PS: Note that I set the Milestone to Future.  To commit to this for 2.1 would 
be to absolve ourselves of all other bugs or features, QNX &amp; IBM combined. 
&gt; I agree w/Alain ... the CModel is the bridge.

Doug's comments are not loss on me.  He's right, the CModel can be
an incomplete view of the world.  The CModel gather the informations
from all sort of sources: binary parsers, AST parsers, Resolver Model(what
extension is a C file) etc ...

Clients  of the model must realize that the information is not complete,
for example the debugger is using the Binary Parser via the CModel
to set breakpoints, but if the IBinary file does not have any debug info ...
well tough 8-(

We are working to improve this, but it is a very slow process and
done via iterations.

&gt; Unfortunately, I am at a loss as to how to go about solving this one
&gt; quickly. 

It may not be possible i.e. short term solutions.
The QUICK parse only for the reconciler maybe a strategey that we may explore
for the head .. later
Returning to the pool.
The core model is now built using the DOM parser and the index.  It's presumed that analysis views will now build up their content from the AST or the index, and use ICElements more or less only for presentation, or to use as a handle to later query the AST or index again.  This is what the call hierarchy and type hierarchy views do, for instance.

I actively disagree that we should build different models for different clients, as otherwise you get inconsistencies in the UI.  Users will find it annoying for example if the elements in the outline view and in the Project Explorer are not the same.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71737" />
    <CreationDate amount="2004-08-10 15:02:00 -0400" />
    <DupId amount="37439" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>[KeyBindings] Eclipse needs a view to look up all assigned accelerator keys.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>There should be a view that allows the user to inspect all accelerator keys 
that have been assigned in the platform. Ideally it would contain the 
following columns: 
 
Key combination
Resulting action
Plugin that installed the accelerator key
I'm already working on something similar.  The four columns that I'm displaying 
are: category, command, key sequence, and context (when).  Is knowing the 
plug-in really necessary? 
 

*** This bug has been marked as a duplicate of 37439 ***</WithStack>
    <WithOutStack>There should be a view that allows the user to inspect all accelerator keys 
that have been assigned in the platform. Ideally it would contain the 
following columns: 
 
Key combination
Resulting action
Plugin that installed the accelerator key
I'm already working on something similar.  The four columns that I'm displaying 
are: category, command, key sequence, and context (when).  Is knowing the 
plug-in really necessary? 
 

*** This bug has been marked as a duplicate of 37439 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71738" />
    <CreationDate amount="2004-08-10 15:07:00 -0400" />
    <DupId amount="67061" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Flash plugin for Browser SWT component does not work on Linux</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When using the Browser widget, I can't display the following html. There is no 
error thrown, the widget just doesn't show up. This works great on Windows XP.

&lt;object width="550" height="400"&gt;
&lt;param name="movie" value="somefilename.swf"&gt;
&lt;embed src="somefilename.swf" width="550" height="400"&gt;
&lt;/embed&gt;
&lt;/object&gt;
I think this is a duplicate of bug 67061.

*** This bug has been marked as a duplicate of 67061 ***</WithStack>
    <WithOutStack>When using the Browser widget, I can't display the following html. There is no 
error thrown, the widget just doesn't show up. This works great on Windows XP.

&lt;object width="550" height="400"&gt;
&lt;param name="movie" value="somefilename.swf"&gt;
&lt;embed src="somefilename.swf" width="550" height="400"&gt;
&lt;/embed&gt;
&lt;/object&gt;
I think this is a duplicate of bug 67061.

*** This bug has been marked as a duplicate of 67061 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71739" />
    <CreationDate amount="2004-08-10 15:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[JUnit] JUnit menu item "Copy Failure List" is confusing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>The target of "Copy Failure List" isn't obvious, as it isn't a traditional
selection copy. 

Suggest changing this to "Copy Failure List to Clipboard" or similar.
I don't see any other obvious target than the clipboard.
Edit &gt; Copy also uses the clipboard as target without mentioning it explicitly.
Edit &gt; Copy is universally understood to behave that way.

This does not read "Copy", nor does it respond to Ctrl-C, so I can't see it 
being the exact same action. 

Until you try it, it's not obvious that it will copy the stack traces like it 
does, so people can't know what to expect with that. To be honest I was 
expecting it to drop it in a text file somewhere. Though I see that behaviour 
is reserved for "Save". 

Changing it to "Copy" makes the target obvious, but not the selection. "Copy 
Failure List to Clipboard" is entirely unambiguous. 
Moving back to the JDT/UI inbox</WithStack>
    <WithOutStack>The target of "Copy Failure List" isn't obvious, as it isn't a traditional
selection copy. 

Suggest changing this to "Copy Failure List to Clipboard" or similar.
I don't see any other obvious target than the clipboard.
Edit &gt; Copy also uses the clipboard as target without mentioning it explicitly.
Edit &gt; Copy is universally understood to behave that way.

This does not read "Copy", nor does it respond to Ctrl-C, so I can't see it 
being the exact same action. 

Until you try it, it's not obvious that it will copy the stack traces like it 
does, so people can't know what to expect with that. To be honest I was 
expecting it to drop it in a text file somewhere. Though I see that behaviour 
is reserved for "Save". 

Changing it to "Copy" makes the target obvious, but not the selection. "Copy 
Failure List to Clipboard" is entirely unambiguous. 
Moving back to the JDT/UI inbox</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71740" />
    <CreationDate amount="2004-08-10 15:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse crashes when SWT browser loads applet</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Using WSAD v5.1.2 (based on Eclipse 2.1.3), when loading an applet using the 
&lt;object&gt; tag, Eclipse hangs for about 10 seconds and then crashes with this 
error message. 

JVM terminated.Exit code=255
C:\Program Files...\eclipse\jre\bin\javaw.exe
-Xj9
-cp C:\Program Files...\eclipse\startup.jar.org.eclipse.core.launcher.Main
-os win32
-ws win32
-arch x86
-showsplash C:\Program Files...
-data C:\IBM\workspace

I am aware that this bug exists and the workaround is to use the &lt;applet&gt; tag, 
however the &lt;applet&gt; tag does not support certain features. Using the &lt;object&gt; 
tag it is possible to detect whether or not the client's machine can run the 
applet and prompt the user to download and install a JRE. I will attach a test 
case as well.
The intended test case is too big to attach, I will attempt to make a smaller 
one and attach that when it is ready.
Created attachment 13876
This Zip contains files necessary to reproduce the problem
Additional information: As a result of WSAD crashing, the server (WTE) is left 
running in the background and must be killed manually (not cleanly) in order to 
load the workspace.
The swt Browser widget was only introduced in the eclipse 3.0 stream, so wsad 
5.1.2 must be using something else.  Additionally, the 2.1 stream is wrapped up 
(ie.- no more fix releases), so we can only address bugs that are known to 
exist in the 3.0 stream.

I've verified that opening the contained Clock applet via the &lt;object&gt; tag does 
work with the 3.0 Browser as contained in  
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclips
e/swt/snippets/Snippet128.java?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup .

If you see this problem in a 3.0-based product that is using the new Browser 
widget then please reopen the report, thanks.</WithStack>
    <WithOutStack>Using WSAD v5.1.2 (based on Eclipse 2.1.3), when loading an applet using the 
&lt;object&gt; tag, Eclipse hangs for about 10 seconds and then crashes with this 
error message. 

JVM terminated.Exit code=255
C:\Program Files...\eclipse\jre\bin\javaw.exe
-Xj9
-cp C:\Program Files...\eclipse\startup.jar.org.eclipse.core.launcher.Main
-os win32
-ws win32
-arch x86
-showsplash C:\Program Files...
-data C:\IBM\workspace

I am aware that this bug exists and the workaround is to use the &lt;applet&gt; tag, 
however the &lt;applet&gt; tag does not support certain features. Using the &lt;object&gt; 
tag it is possible to detect whether or not the client's machine can run the 
applet and prompt the user to download and install a JRE. I will attach a test 
case as well.
The intended test case is too big to attach, I will attempt to make a smaller 
one and attach that when it is ready.
Created attachment 13876
This Zip contains files necessary to reproduce the problem
Additional information: As a result of WSAD crashing, the server (WTE) is left 
running in the background and must be killed manually (not cleanly) in order to 
load the workspace.
The swt Browser widget was only introduced in the eclipse 3.0 stream, so wsad 
5.1.2 must be using something else.  Additionally, the 2.1 stream is wrapped up 
(ie.- no more fix releases), so we can only address bugs that are known to 
exist in the 3.0 stream.

I've verified that opening the contained Clock applet via the &lt;object&gt; tag does 
work with the 3.0 Browser as contained in  
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclips
e/swt/snippets/Snippet128.java?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup .

If you see this problem in a 3.0-based product that is using the new Browser 
widget then please reopen the report, thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71741" />
    <CreationDate amount="2004-08-10 16:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ant build - complier not found</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- are you running the scripts using eclipse ant runner</Line>
          <Line>- do you always generate the scripts or do you maintain them manually</Line>
          <Line>Created attachment 14091</Line>
          <Line>ant build file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When trying to run the ant build the following error occurs

Compiler Adapter 'org.eclipse.jdt.core.jdtCompilerAdapter' can't be found.

I have worked through the recommended fixes on google and in the help but the 
problem still exist.
Ant files generated by pde build are expected to run within eclipse using the
antRunner. 
Please reopen and provide detailed steps if the problem still occurs.

Ant scripts that work with version 2.1 do not work with 3.0. Jar files cannot 
be found, particularly j2ee.jar and the jdtCompilerAdapter.jar.

Additionaly it does not run the same way every time. If I run it 3 times it run 
diffrently.

If you would like to see the file please let me know.
Ant scripts generated with 2.1 and now used to target a 3.0 build must be 
updated (this is indicated in the porting guide).
I find strange that you do not find the jdtCompilerAdapter (are you sure that 
you are running your scripts using eclipse antRunner) but I can't do much about 
j2ee.jar since we do not compile against it.

I'm interested in seing the build script.

Two questions:
- are you running the scripts using eclipse ant runner
- do you always generate the scripts or do you maintain them manually
Created attachment 14091
ant build file


The process I use to run the scripts is to right click on the build.xml file,
choose the run ant option and choose run. Teh error returned is  "BUILD FAILED:
C:\eclipse\workspace\SSO\build.xml:48: Compiler Adapter
'org.eclipse.jdt.core.JDTCompilerAdapter' can't be found."

I have attached the script I am using, and will go throught the porting guide
to see what needs to bo updated.

Thanks,

Peter
This is normal because in 3.0 all build scripts are executed in a separate VM,
which means that you do not have access to the JDT compiler.

In order to run this script and makes use of the jdt compiler, choose "run
ant...", go to the "JRE" tab, and here select "run in the same JRE as the
workspace".</WithStack>
    <WithOutStack>When trying to run the ant build the following error occurs

Compiler Adapter 'org.eclipse.jdt.core.jdtCompilerAdapter' can't be found.

I have worked through the recommended fixes on google and in the help but the 
problem still exist.
Ant files generated by pde build are expected to run within eclipse using the
antRunner. 
Please reopen and provide detailed steps if the problem still occurs.

Ant scripts that work with version 2.1 do not work with 3.0. Jar files cannot 
be found, particularly j2ee.jar and the jdtCompilerAdapter.jar.

Additionaly it does not run the same way every time. If I run it 3 times it run 
diffrently.

If you would like to see the file please let me know.
Ant scripts generated with 2.1 and now used to target a 3.0 build must be 
updated (this is indicated in the porting guide).
I find strange that you do not find the jdtCompilerAdapter (are you sure that 
you are running your scripts using eclipse antRunner) but I can't do much about 
j2ee.jar since we do not compile against it.

I'm interested in seing the build script.

Two questions:
- are you running the scripts using eclipse ant runner
- do you always generate the scripts or do you maintain them manually
Created attachment 14091
ant build file


The process I use to run the scripts is to right click on the build.xml file,
choose the run ant option and choose run. Teh error returned is  "BUILD FAILED:
C:\eclipse\workspace\SSO\build.xml:48: Compiler Adapter
'org.eclipse.jdt.core.JDTCompilerAdapter' can't be found."

I have attached the script I am using, and will go throught the porting guide
to see what needs to bo updated.

Thanks,

Peter
This is normal because in 3.0 all build scripts are executed in a separate VM,
which means that you do not have access to the JDT compiler.

In order to run this script and makes use of the jdt compiler, choose "run
ant...", go to the "JRE" tab, and here select "run in the same JRE as the
workspace".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71742" />
    <CreationDate amount="2004-08-10 16:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>[IDE] use long-running operations to set encoding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

We added new API (right before 3.0 was released) for setting file/container
encoding that takes progress monitors and allows resource change events to be
genrated. The fix to Core's bug 59899 (targetting 3.0.1 and 3.1) provides an
implementation for that API. 

However, UI code has to be changed to make use of the new (3.0) API so the
long-running version of those API are used and events are actually broadcast. I
will attach a patch (against org.eclipse.ui.ide R3_0) that shows how the
resource properties dialog and the editors preference page could be adapted to
use the new API.

We need this fix for 3.0.1 otherwise our fix will have no value. Since the
preferred API is in place since 3.0, it should be ok to apply the fix on both
maintenance and HEAD streams. Thanks.
Created attachment 13854
patch for org.eclipse.ui.ide (needs NLSing)
Raising severity to reflect importance of having this fixed for 3.0.1. Please
let us (Platform/Core) know if you have any concerns w.r.t. the requested changes.
Patch released and nl'ed. We should consider adding support to the preference 
dialog to show progress as well as this patch uses no progress monitor.
Verified in 3.0.1 build 20040901
Also verified in 200409081421/GTK</WithStack>
    <WithOutStack>3.0

We added new API (right before 3.0 was released) for setting file/container
encoding that takes progress monitors and allows resource change events to be
genrated. The fix to Core's bug 59899 (targetting 3.0.1 and 3.1) provides an
implementation for that API. 

However, UI code has to be changed to make use of the new (3.0) API so the
long-running version of those API are used and events are actually broadcast. I
will attach a patch (against org.eclipse.ui.ide R3_0) that shows how the
resource properties dialog and the editors preference page could be adapted to
use the new API.

We need this fix for 3.0.1 otherwise our fix will have no value. Since the
preferred API is in place since 3.0, it should be ok to apply the fix on both
maintenance and HEAD streams. Thanks.
Created attachment 13854
patch for org.eclipse.ui.ide (needs NLSing)
Raising severity to reflect importance of having this fixed for 3.0.1. Please
let us (Platform/Core) know if you have any concerns w.r.t. the requested changes.
Patch released and nl'ed. We should consider adding support to the preference 
dialog to show progress as well as this patch uses no progress monitor.
Verified in 3.0.1 build 20040901
Also verified in 200409081421/GTK</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71743" />
    <CreationDate amount="2004-08-10 17:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN message key in org.eclipse.hyades.logging.adapter has incorrect message ID.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN message key in 
org.eclipse.hyades.logging.adapter has incorrect message ID.

HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN_=IWATE0378E Common Base 
Event logging agent outputter {0} has invalid buffer specification.  Using 
default size of {1} 

  |
  |
  V

HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN_=IWAT0378W Common Base 
Event logging agent outputter {0} has invalid buffer specification.  Using 
default size of {1}
plugin.properties checked-in on August 10, 2004.
Verified in Toronto's 20040813_1815 build on August 16, 2004.
Closing.
correcting bugzilla target milestone -- setting back to 3.1 i2</WithStack>
    <WithOutStack>HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN message key in 
org.eclipse.hyades.logging.adapter has incorrect message ID.

HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN_=IWATE0378E Common Base 
Event logging agent outputter {0} has invalid buffer specification.  Using 
default size of {1} 

  |
  |
  V

HyadesGA_CBE_Logging_Agent_Buffer_Specification_WARN_=IWAT0378W Common Base 
Event logging agent outputter {0} has invalid buffer specification.  Using 
default size of {1}
plugin.properties checked-in on August 10, 2004.
Verified in Toronto's 20040813_1815 build on August 16, 2004.
Closing.
correcting bugzilla target milestone -- setting back to 3.1 i2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71744" />
    <CreationDate amount="2004-08-10 17:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No code completions with import and macrodef</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Attempting to code complete after the "&lt;e" produces no task completions.
buildfile:
&lt;project name="project"
         default="hey2"&gt;
	&lt;import file="macrodef.macrodef" /&gt;

	&lt;target name="hey2"&gt;
&lt;e
	&lt;/target&gt;
&lt;/project&gt;
====macrodef.macrodef=====
&lt;project default="hey"&gt;

	&lt;macrodef name="eclipseMacro"&gt;

		&lt;attribute name="v"
		           default="NOT SET" /&gt;
		&lt;attribute name="eclipse"
		           default="yes"
		           description="Testing 
Eclipse" /&gt;
		&lt;element name="some-tasks"
		         optional="yes" /&gt;
		&lt;element name="some-tasks2"
		         optional="no" /&gt;
		&lt;sequential&gt;
			&lt;echo&gt;Eclipse!: @{v}&lt;/echo&gt;
		&lt;/sequential&gt;
	&lt;/macrodef&gt;

	&lt;target name="hey"&gt;
		&lt;echo&gt;Hey from macrodef&lt;/echo&gt;
	&lt;/target&gt;

&lt;/project&gt;
I cannot reproduce this problem</WithStack>
    <WithOutStack>Attempting to code complete after the "&lt;e" produces no task completions.
buildfile:
&lt;project name="project"
         default="hey2"&gt;
	&lt;import file="macrodef.macrodef" /&gt;

	&lt;target name="hey2"&gt;
&lt;e
	&lt;/target&gt;
&lt;/project&gt;
====macrodef.macrodef=====
&lt;project default="hey"&gt;

	&lt;macrodef name="eclipseMacro"&gt;

		&lt;attribute name="v"
		           default="NOT SET" /&gt;
		&lt;attribute name="eclipse"
		           default="yes"
		           description="Testing 
Eclipse" /&gt;
		&lt;element name="some-tasks"
		         optional="yes" /&gt;
		&lt;element name="some-tasks2"
		         optional="no" /&gt;
		&lt;sequential&gt;
			&lt;echo&gt;Eclipse!: @{v}&lt;/echo&gt;
		&lt;/sequential&gt;
	&lt;/macrodef&gt;

	&lt;target name="hey"&gt;
		&lt;echo&gt;Hey from macrodef&lt;/echo&gt;
	&lt;/target&gt;

&lt;/project&gt;
I cannot reproduce this problem</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71745" />
    <CreationDate amount="2004-08-10 17:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Resource names shown in Test Navigator is not consistant</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- artifacts</Line>
          <Line>- deployments</Line>
          <Line>- locations</Line>
          <Line>- datapool</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In Test Navigator, names shown for some resources like test suite uses display 
names, while other resources like location, datapool uses file names. This 
should be consistant. 

Since this is a test artifacts navigator, it makes since to show to show file 
names unless there are particular reasons to use resource display names.
New getText methods have been written for following elements:
 - artifacts
 - deployments
 - locations
 - datapool

Now those elements are displayed using their internal names instead of the name
of the container file.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>In Test Navigator, names shown for some resources like test suite uses display 
names, while other resources like location, datapool uses file names. This 
should be consistant. 

Since this is a test artifacts navigator, it makes since to show to show file 
names unless there are particular reasons to use resource display names.
New getText methods have been written for following elements:
 - artifacts
 - deployments
 - locations
 - datapool

Now those elements are displayed using their internal names instead of the name
of the container file.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71746" />
    <CreationDate amount="2004-08-10 17:55:00 -0400" />
    <DupId amount="68568" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Buttons in all dialogs are empty or broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="15">
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0598&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0788&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)</Line>
          <Line>- locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0598&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0788&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)</Line>
          <Line>- locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)</Line>
          <Line>at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)</Line>
          <Line>- locked &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)</Line>
          <Line>at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)</Line>
          <Line>at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- waiting on &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- waiting on &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0598&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;0x44cd0788&gt; (a</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at</Line>
          <Line>org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)</Line>
          <Line>- locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)</Line>
          <Line>at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)</Line>
          <Line>- locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)</Line>
          <Line>at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)</Line>
          <Line>at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
          <Line>at java.lang.Object.wait(Object.java:429)</Line>
          <Line>at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)</Line>
          <Line>- locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I would really like to use Eclipse for developing C++ Code, but it is not
possible because in every Dialog i have to guess what the function of the Button
is. I will attach a picture so you can see exactly what the problem is.
I compiled so many files, because i hoped it would solve the problem, but
nothing helped.Now i have some Information for you.I hope this can help you to
find the error. If you need more Information, just ask.

Here is some Information about my System:
I'm using Suse Linux 9.1 Professional ( with installed nearly every package )
kernel version 2.6.7
1 GHz Athlon with 1 GB RAM

For my Eclipse Installation, i compiled and installed the following files:
atk-1.6.1
expat-1.95.8
fontconfig-2.2.96
freetype-2.1.9
glib-1.2.9
glib-2.4.5
gtk+-1.2.9
gtk+-2.4.4
gtk-qt-engine-0.5
jpeg-6b
libpng-1.2.5
pango-1.4.1
pkgconfig-0.15.0
render-0.8
tiff-v3.6.1
wxGTK-2.4.2
wxGTK-2.4.2unicode
also the following files of xlibs 1.0:
compositeext-2.0
damageext-1.0
fixesext-2.0.1
libICE-6.3.2
libSM-6.0.2
libX11-6.2.1
libXau-0.1.1
libXaw-7.0.0
libXcomposite-1.0.1
libXcursor-1.1.2
libXdamage-1.0.1
libXdmcp-0.1.1
libXext-6.4.2
libXfixes-2.0.1
libXfont-1.4.1
libXft-2.1.3
libXi-6.0.1
libXmu-6.2.1
libXpm-3.5.0
libXrandr-1.0.2
libXrender-0.8.4
libXres-1.0.1
libXt-0.1.4
libXtrans-0.1
libXv-2.2.1
randrext-1.0
resourceext-1.0
todo.txt
xextensions-1.0.1
xproto-6.6.1

On my System i installed many different versions of Eclipse. The last thing I
did was to download only the eclipse Platform with no Plugins installed to see
if even there the error occurs. Because this is the case the following outputs
belong to the 
Eclipse Platform
Version: 3.0.1
Build id: 200408051455.

&lt;Thread Dump on select Workspace Launcher Dialog&gt;
./eclipse -vm /usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242268 nid=0x72d1 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc08 nid=0x72d1 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee30 nid=0x72d1 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x72d1 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x72d1 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ed8 nid=0x72d1 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
        at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
        at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x72d1 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1630 nid=0x72d1 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4c0 nid=0x72d1 runnable
&lt;/Thread Dump on select Workspace Launcher Dialog&gt;

&lt;Thread Dump on "About Eclipse Platform" Dialog&gt;
eclipse -vm /usr/local/lib/java/bin/java
Unhandled Exception
Reason:
Unable to execute early startup code for an extension
Unhandled Exception
Reason:
Unable to execute early startup code for an extension
KCrash: Application 'gtk-qt-application' crashing...
compiler@robotec:~/dl/eclipse/nightly/eclipse&gt; ./eclipse -vm
/usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242268 nid=0x72d1 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc08 nid=0x72d1 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee30 nid=0x72d1 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x72d1 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x72d1 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ed8 nid=0x72d1 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
        at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
        at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x72d1 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1630 nid=0x72d1 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4c0 nid=0x72d1 runnable
Verlassen
compiler@robotec:~/dl/eclipse/nightly/eclipse&gt; ./eclipse -vm
/usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Worker-0" prio=1 tid=0x08530690 nid=0x1321 in Object.wait() [4e81a000..4e81a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)
        - locked &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)

"Reference Cleaner - 2" prio=1 tid=0x084b5da0 nid=0x1321 in Object.wait()
[4e799000..4e79987c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Reference Cleaner - 1" prio=1 tid=0x084b5ab0 nid=0x1321 in Object.wait()
[4e718000..4e71887c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242260 nid=0x1321 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc00 nid=0x1321 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee28 nid=0x1321 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x1321 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x1321 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ca0 nid=0x1321 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at org.eclipse.ui.internal.about.AboutAction.run(AboutAction.java:66)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)
        at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)
        at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x1321 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1628 nid=0x1321 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4b8 nid=0x1321 runnable
Verlassen
&lt;Thread Dump on "About Eclipse Platform" Dialog&gt;

Here you can see that eclipse uses my own compiled files from the usr/local/lib
Path:
&lt; console &gt;
ldd ./eclipse
        linux-gate.so.1 =&gt;  (0xffffe000)
        libgtk-x11-2.0.so.0 =&gt; /usr/local/lib/libgtk-x11-2.0.so.0 (0x4004a000)
        libgdk_pixbuf-2.0.so.0 =&gt; /usr/local/lib/libgdk_pixbuf-2.0.so.0 (0x402c8000)
        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x402db000)
        libgdk-x11-2.0.so.0 =&gt; /usr/local/lib/libgdk-x11-2.0.so.0 (0x403f1000)
        libgobject-2.0.so.0 =&gt; /usr/local/lib/libgobject-2.0.so.0 (0x40457000)
        libX11.so.6 =&gt; /usr/local/lib/libX11.so.6 (0x4048c000)
        libpangoxft-1.0.so.0 =&gt; /usr/local/lib/libpangoxft-1.0.so.0 (0x40574000)
        libpangox-1.0.so.0 =&gt; /usr/local/lib/libpangox-1.0.so.0 (0x40579000)
        libpango-1.0.so.0 =&gt; /usr/local/lib/libpango-1.0.so.0 (0x40584000)
        libatk-1.0.so.0 =&gt; /usr/local/lib/libatk-1.0.so.0 (0x405b7000)
        libgmodule-2.0.so.0 =&gt; /usr/local/lib/libgmodule-2.0.so.0 (0x405cf000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x405d3000)
        libglib-2.0.so.0 =&gt; /usr/local/lib/libglib-2.0.so.0 (0x405d6000)
        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x4064f000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x40000000)
        libXrandr.so.2 =&gt; /usr/local/lib/libXrandr.so.2 (0x40672000)
        libXext.so.6 =&gt; /usr/local/lib/libXext.so.6 (0x40676000)
        libXft.so.2 =&gt; /usr/local/lib/libXft.so.2 (0x40684000)
        libfreetype.so.6 =&gt; /usr/local/lib/libfreetype.so.6 (0x40696000)
        libfontconfig.so.1 =&gt; /usr/local/lib/libfontconfig.so.1 (0x406ff000)
        libXcursor.so.1 =&gt; /usr/local/lib/libXcursor.so.1 (0x40728000)
        libXrender.so.1 =&gt; /usr/local/lib/libXrender.so.1 (0x40731000)
        libXau.so.0 =&gt; /usr/local/lib/libXau.so.0 (0x4073a000)
        libpangoft2-1.0.so.0 =&gt; /usr/local/lib/libpangoft2-1.0.so.0 (0x4073d000)
        libz.so.1 =&gt; /lib/libz.so.1 (0x40762000)
        libexpat.so.0 =&gt; /usr/local/lib/libexpat.so.0 (0x40773000)
        libXfixes.so.0 =&gt; /usr/local/lib/libXfixes.so.0 (0x40793000)
&lt;/ console &gt;

I found no .log File in the .metadata directory in the workspace.

Ok, that's it.
Created attachment 13860
Screenshot of Workspace Launcher Dialog

Look at the Buttons
The dialog button sizing code is breaking because it did not consider themes that add a lot of padding 
to buttons.  Switching to a different GTK+ theme will work around the problem.

*** This bug has been marked as a duplicate of 68568 ***
Before i wrote this bug report i searched for bug reports with similar problems
then mine. Unfortunately i didn't found one. When i recognized that you marked
this bug as duplicated and that there is such an easy work around, i was glad
because I thought: Yes now i can work again with Eclipse. But the problem is
your workaround dosn't work. I changed the Themes for GTK Styles and fonts as
well as the KDE theme. But nothing helped.
Meanwhile i compiled and installed the newest stable X-Server from X.org (
X11R6.7.0 ) and because this doesn't help too, i installled the komplete KDE in
the Version of the RPM-Package kdebase3-3.2.3-5.i586.rpm.
And i created a new User so the KDE profile was new generated. To exclude that
the eclipse Platform was broken i unziped it again in the directory of the new
User. I started the eclipse platform under kde as the new clean user, but the
error occurs again. Also changing themes in this case dosn't help.
I used as GTK Theme "High Contrast", as GTK Font "Sans Serif" in Size "11" and
as KDE theme "Plastik".
Do you have any more idea what i can try?
Themes are difficult because distributions often try to unify them between GNOME
and KDE.  It may be that changing your KDE theme can modify Eclipse.  Also,
remember that you will have to restart Eclipse after each theme change in order
to test this problem.  This problem does not occur here with the "High Contrast"
theme on RH9/GTK+-2.2.

Can you try under GNOME instead of KDE?  Can you maybe also try going into the
KDE Control Centre and under the setting for colours and fonts, make sure the
box "Apply KDE colours to non-KDE applications" is not checked.
Sorry I forgot to tell you. I tried also other desktops. The strange thing with
windowmaker, gnome and enlightment it works although it seems that eclipse is
using an KDE Sytle under these desktops. I tried working with gnome and
windowmaker, but I experienced that I would like to use KDE. 
I also forgot to tell you that I disabled the setting "Apply KDE colours to
non-KDE applications" so the box is not checked.
Yes i restarted eclipse every time after changing the themes.
Another strange thing I found out a very short while ago is, that on the Laptop
of a Friend, which installed the same SUSE version than I have, eclipse works.
He uses KDE with standard settings. I downloaded for the test the version 3.0 of
eclipse platform. 
So I think that there must be a bad configuration file in my system or a bad
library of my self compiled files which corrupt my KDE system. Only the KDE
system, because on other Desktop eclipse don't have this problem.
I have a new idea.
I will now try to close KDE, rename the /etc/opt/kde3 folder and hope that KDE
creates new and proper standard settings when starting again.
If you have some other ideas, feel free to tell me :-)
Unfortunately my test failed. Another thing i tried was to copy the
/etc/opt/kde3 and the .kde directory in the home directory from the Laptop of my
friend into my system to the aquivalent place. But this test failed too.
Could it be that it is not only a problem with the themes but also with the
fonts. One possible difference could be that I installed via YOU (Yast Online
Update) the MS fonts. But if the fonts are the problem why does ist work with
another desktop like windowmaker?
What i tested was to deactivate Anti-Aliasing, but that didn't help anything.
One strange effect which could be a part of the problem is the following. If i
choose the selection "Use another Font" in "KDE Control Centre -&gt; GTK styles and
fonts" i can see that after restarting the "KDE Control Centre" the other
selection "Use my KDE fonts in GTK applications" is marked again. This is the
same effect as appeared with  changing the Style Setting while the "Apply KDE
colours to non-KDE applications" was checked in the color settings. But i found
no point in the general font settings which means something similar then "Use my
KDE fonts in GTK applications". I could imagine that this behavior is the reason
for the problem. The possibility that KDE forces the KDE fonts to gtk
application could be the difference between KDE and the other Desktops like
windowmaker, gnome and enlightment where the Buttons are pictured correct.
Ok, that's it.</WithStack>
    <WithOutStack>I would really like to use Eclipse for developing C++ Code, but it is not
possible because in every Dialog i have to guess what the function of the Button
is. I will attach a picture so you can see exactly what the problem is.
I compiled so many files, because i hoped it would solve the problem, but
nothing helped.Now i have some Information for you.I hope this can help you to
find the error. If you need more Information, just ask.

Here is some Information about my System:
I'm using Suse Linux 9.1 Professional ( with installed nearly every package )
kernel version 2.6.7
1 GHz Athlon with 1 GB RAM

For my Eclipse Installation, i compiled and installed the following files:
atk-1.6.1
expat-1.95.8
fontconfig-2.2.96
freetype-2.1.9
glib-1.2.9
glib-2.4.5
gtk+-1.2.9
gtk+-2.4.4
gtk-qt-engine-0.5
jpeg-6b
libpng-1.2.5
pango-1.4.1
pkgconfig-0.15.0
render-0.8
tiff-v3.6.1
wxGTK-2.4.2
wxGTK-2.4.2unicode
also the following files of xlibs 1.0:
compositeext-2.0
damageext-1.0
fixesext-2.0.1
libICE-6.3.2
libSM-6.0.2
libX11-6.2.1
libXau-0.1.1
libXaw-7.0.0
libXcomposite-1.0.1
libXcursor-1.1.2
libXdamage-1.0.1
libXdmcp-0.1.1
libXext-6.4.2
libXfixes-2.0.1
libXfont-1.4.1
libXft-2.1.3
libXi-6.0.1
libXmu-6.2.1
libXpm-3.5.0
libXrandr-1.0.2
libXrender-0.8.4
libXres-1.0.1
libXt-0.1.4
libXtrans-0.1
libXv-2.2.1
randrext-1.0
resourceext-1.0
todo.txt
xextensions-1.0.1
xproto-6.6.1

On my System i installed many different versions of Eclipse. The last thing I
did was to download only the eclipse Platform with no Plugins installed to see
if even there the error occurs. Because this is the case the following outputs
belong to the 
Eclipse Platform
Version: 3.0.1
Build id: 200408051455.

&lt;Thread Dump on select Workspace Launcher Dialog&gt;
./eclipse -vm /usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242268 nid=0x72d1 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc08 nid=0x72d1 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee30 nid=0x72d1 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x72d1 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x72d1 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ed8 nid=0x72d1 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
        at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
        at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x72d1 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1630 nid=0x72d1 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4c0 nid=0x72d1 runnable
&lt;/Thread Dump on select Workspace Launcher Dialog&gt;

&lt;Thread Dump on "About Eclipse Platform" Dialog&gt;
eclipse -vm /usr/local/lib/java/bin/java
Unhandled Exception
Reason:
Unable to execute early startup code for an extension
Unhandled Exception
Reason:
Unable to execute early startup code for an extension
KCrash: Application 'gtk-qt-application' crashing...
compiler@robotec:~/dl/eclipse/nightly/eclipse&gt; ./eclipse -vm
/usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242268 nid=0x72d1 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc08 nid=0x72d1 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee30 nid=0x72d1 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x72d1 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x72d1 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ed8 nid=0x72d1 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at
org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.prompt(ChooseWorkspaceDialog.java:65)
        at
org.eclipse.ui.internal.ide.IDEApplication.promptForWorkspace(IDEApplication.java:314)
        at
org.eclipse.ui.internal.ide.IDEApplication.checkInstanceLocation(IDEApplication.java:219)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:83)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x72d1 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1630 nid=0x72d1 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4c0 nid=0x72d1 runnable
Verlassen
compiler@robotec:~/dl/eclipse/nightly/eclipse&gt; ./eclipse -vm
/usr/local/lib/java/bin/java
Full thread dump Java HotSpot(TM) Client VM (1.4.2_04-b05 mixed mode):

"Worker-0" prio=1 tid=0x08530690 nid=0x1321 in Object.wait() [4e81a000..4e81a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)
        - locked &lt;0x44df2a08&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)

"Reference Cleaner - 2" prio=1 tid=0x084b5da0 nid=0x1321 in Object.wait()
[4e799000..4e79987c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44e62620&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Reference Cleaner - 1" prio=1 tid=0x084b5ab0 nid=0x1321 in Object.wait()
[4e718000..4e71887c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44e62690&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at
org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:207)

"Start Level Event Dispatcher" daemon prio=1 tid=0x08242260 nid=0x1321 in
Object.wait() [4cecb000..4cecb87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0598&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0598&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Framework Event Dispatcher" daemon prio=1 tid=0x0825dc00 nid=0x1321 in
Object.wait() [4ce4a000..4ce4a87c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44cd0788&gt; (a
org.eclipse.osgi.framework.eventmgr.EventThread)
        at java.lang.Object.wait(Object.java:429)
        at
org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)
        - locked &lt;0x44cd0788&gt; (a org.eclipse.osgi.framework.eventmgr.EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)

"Signal Dispatcher" daemon prio=1 tid=0x0809ee28 nid=0x1321 runnable [0..0]

"Finalizer" daemon prio=1 tid=0x080898b0 nid=0x1321 in Object.wait()
[4c982000..4c98287c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
        - locked &lt;0x44c69b58&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

"Reference Handler" daemon prio=1 tid=0x08088cc0 nid=0x1321 in Object.wait()
[4c901000..4c90187c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:429)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
        - locked &lt;0x44c69bc0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=1 tid=0x08052ca0 nid=0x1321 in Object.wait() [bfffc000..bfffcba8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:2867)
        - locked &lt;0x48b16998&gt; (a java.lang.Class)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:669)
        at org.eclipse.jface.window.Window.open(Window.java:648)
        at org.eclipse.ui.internal.about.AboutAction.run(AboutAction.java:66)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
        at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)
        at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)
        at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
        at org.eclipse.core.launcher.Main.run(Main.java:644)
        at org.eclipse.core.launcher.Main.main(Main.java:628)

"VM Thread" prio=1 tid=0x080879a0 nid=0x1321 runnable

"VM Periodic Task Thread" prio=1 tid=0x080a1628 nid=0x1321 waiting on condition
"Suspend Checker Thread" prio=1 tid=0x0809e4b8 nid=0x1321 runnable
Verlassen
&lt;Thread Dump on "About Eclipse Platform" Dialog&gt;

Here you can see that eclipse uses my own compiled files from the usr/local/lib
Path:
&lt; console &gt;
ldd ./eclipse
        linux-gate.so.1 =&gt;  (0xffffe000)
        libgtk-x11-2.0.so.0 =&gt; /usr/local/lib/libgtk-x11-2.0.so.0 (0x4004a000)
        libgdk_pixbuf-2.0.so.0 =&gt; /usr/local/lib/libgdk_pixbuf-2.0.so.0 (0x402c8000)
        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x402db000)
        libgdk-x11-2.0.so.0 =&gt; /usr/local/lib/libgdk-x11-2.0.so.0 (0x403f1000)
        libgobject-2.0.so.0 =&gt; /usr/local/lib/libgobject-2.0.so.0 (0x40457000)
        libX11.so.6 =&gt; /usr/local/lib/libX11.so.6 (0x4048c000)
        libpangoxft-1.0.so.0 =&gt; /usr/local/lib/libpangoxft-1.0.so.0 (0x40574000)
        libpangox-1.0.so.0 =&gt; /usr/local/lib/libpangox-1.0.so.0 (0x40579000)
        libpango-1.0.so.0 =&gt; /usr/local/lib/libpango-1.0.so.0 (0x40584000)
        libatk-1.0.so.0 =&gt; /usr/local/lib/libatk-1.0.so.0 (0x405b7000)
        libgmodule-2.0.so.0 =&gt; /usr/local/lib/libgmodule-2.0.so.0 (0x405cf000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x405d3000)
        libglib-2.0.so.0 =&gt; /usr/local/lib/libglib-2.0.so.0 (0x405d6000)
        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x4064f000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x40000000)
        libXrandr.so.2 =&gt; /usr/local/lib/libXrandr.so.2 (0x40672000)
        libXext.so.6 =&gt; /usr/local/lib/libXext.so.6 (0x40676000)
        libXft.so.2 =&gt; /usr/local/lib/libXft.so.2 (0x40684000)
        libfreetype.so.6 =&gt; /usr/local/lib/libfreetype.so.6 (0x40696000)
        libfontconfig.so.1 =&gt; /usr/local/lib/libfontconfig.so.1 (0x406ff000)
        libXcursor.so.1 =&gt; /usr/local/lib/libXcursor.so.1 (0x40728000)
        libXrender.so.1 =&gt; /usr/local/lib/libXrender.so.1 (0x40731000)
        libXau.so.0 =&gt; /usr/local/lib/libXau.so.0 (0x4073a000)
        libpangoft2-1.0.so.0 =&gt; /usr/local/lib/libpangoft2-1.0.so.0 (0x4073d000)
        libz.so.1 =&gt; /lib/libz.so.1 (0x40762000)
        libexpat.so.0 =&gt; /usr/local/lib/libexpat.so.0 (0x40773000)
        libXfixes.so.0 =&gt; /usr/local/lib/libXfixes.so.0 (0x40793000)
&lt;/ console &gt;

I found no .log File in the .metadata directory in the workspace.

Ok, that's it.
Created attachment 13860
Screenshot of Workspace Launcher Dialog

Look at the Buttons
The dialog button sizing code is breaking because it did not consider themes that add a lot of padding 
to buttons.  Switching to a different GTK+ theme will work around the problem.

*** This bug has been marked as a duplicate of 68568 ***
Before i wrote this bug report i searched for bug reports with similar problems
then mine. Unfortunately i didn't found one. When i recognized that you marked
this bug as duplicated and that there is such an easy work around, i was glad
because I thought: Yes now i can work again with Eclipse. But the problem is
your workaround dosn't work. I changed the Themes for GTK Styles and fonts as
well as the KDE theme. But nothing helped.
Meanwhile i compiled and installed the newest stable X-Server from X.org (
X11R6.7.0 ) and because this doesn't help too, i installled the komplete KDE in
the Version of the RPM-Package kdebase3-3.2.3-5.i586.rpm.
And i created a new User so the KDE profile was new generated. To exclude that
the eclipse Platform was broken i unziped it again in the directory of the new
User. I started the eclipse platform under kde as the new clean user, but the
error occurs again. Also changing themes in this case dosn't help.
I used as GTK Theme "High Contrast", as GTK Font "Sans Serif" in Size "11" and
as KDE theme "Plastik".
Do you have any more idea what i can try?
Themes are difficult because distributions often try to unify them between GNOME
and KDE.  It may be that changing your KDE theme can modify Eclipse.  Also,
remember that you will have to restart Eclipse after each theme change in order
to test this problem.  This problem does not occur here with the "High Contrast"
theme on RH9/GTK+-2.2.

Can you try under GNOME instead of KDE?  Can you maybe also try going into the
KDE Control Centre and under the setting for colours and fonts, make sure the
box "Apply KDE colours to non-KDE applications" is not checked.
Sorry I forgot to tell you. I tried also other desktops. The strange thing with
windowmaker, gnome and enlightment it works although it seems that eclipse is
using an KDE Sytle under these desktops. I tried working with gnome and
windowmaker, but I experienced that I would like to use KDE. 
I also forgot to tell you that I disabled the setting "Apply KDE colours to
non-KDE applications" so the box is not checked.
Yes i restarted eclipse every time after changing the themes.
Another strange thing I found out a very short while ago is, that on the Laptop
of a Friend, which installed the same SUSE version than I have, eclipse works.
He uses KDE with standard settings. I downloaded for the test the version 3.0 of
eclipse platform. 
So I think that there must be a bad configuration file in my system or a bad
library of my self compiled files which corrupt my KDE system. Only the KDE
system, because on other Desktop eclipse don't have this problem.
I have a new idea.
I will now try to close KDE, rename the /etc/opt/kde3 folder and hope that KDE
creates new and proper standard settings when starting again.
If you have some other ideas, feel free to tell me :-)
Unfortunately my test failed. Another thing i tried was to copy the
/etc/opt/kde3 and the .kde directory in the home directory from the Laptop of my
friend into my system to the aquivalent place. But this test failed too.
Could it be that it is not only a problem with the themes but also with the
fonts. One possible difference could be that I installed via YOU (Yast Online
Update) the MS fonts. But if the fonts are the problem why does ist work with
another desktop like windowmaker?
What i tested was to deactivate Anti-Aliasing, but that didn't help anything.
One strange effect which could be a part of the problem is the following. If i
choose the selection "Use another Font" in "KDE Control Centre -&gt; GTK styles and
fonts" i can see that after restarting the "KDE Control Centre" the other
selection "Use my KDE fonts in GTK applications" is marked again. This is the
same effect as appeared with  changing the Style Setting while the "Apply KDE
colours to non-KDE applications" was checked in the color settings. But i found
no point in the general font settings which means something similar then "Use my
KDE fonts in GTK applications". I could imagine that this behavior is the reason
for the problem. The possibility that KDE forces the KDE fonts to gtk
application could be the difference between KDE and the other Desktops like
windowmaker, gnome and enlightment where the Buttons are pictured correct.
Ok, that's it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71747" />
    <CreationDate amount="2004-08-10 18:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[RCP] Move progress view into ui.workbench plugin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The bulk of the concurrency UI is available directly in 
org.eclipse.ui.workbench except for the progress view.  It appears to be 
defined in org.eclipse.ui.ide and therefore if you wish to include the progress 
view in your RCP app, you must include the ide plugin (and more plugins that 
ide requires).  

Can the progress view please be moved into a non-IDE plugin.  

Currently, if you don't include these plugins, when you run a Job the progress 
view button appears in the status line, but the progress view is not able to 
open.
Digging a little deeper, it appears the view is declared in the plugin.xml for 
the ide plugin, but the actual code is in the workbench plugin.  If you 
redeclare the view in your own plugin, you're ok.  I'm not sure if this was 
intended.  The only benefit I can see is that you may change the view's title, 
icon and category.  


Yes, this was done in 3.0, and was intentional.  You'll need to provide your own
extension XML for the progress view by cloning/modifying the one from
org.eclipse.ui.ide.

The idea was that we didn't want to pollute the app's list of views, e.g. if
they were reusing the show view menu (ActionFactory.SHOW_VIEW_MENU), but not
using the progress view.  In addition, the app could rename it as you suggest.

We want to come up with a better way of doing this in 3.1, to allow views,
actions, and other extensions to be able to be declared independently of their
placement in the UI.  This will allow the app or downstream plug-ins to place
them in the UI as appropriate for their own menu structure or categorization
scheme, in addition to allowing implementation details like the class name to be
hidden.

If you have similar issues in your RCP app, please file a separate bug report
and cc me.</WithStack>
    <WithOutStack>The bulk of the concurrency UI is available directly in 
org.eclipse.ui.workbench except for the progress view.  It appears to be 
defined in org.eclipse.ui.ide and therefore if you wish to include the progress 
view in your RCP app, you must include the ide plugin (and more plugins that 
ide requires).  

Can the progress view please be moved into a non-IDE plugin.  

Currently, if you don't include these plugins, when you run a Job the progress 
view button appears in the status line, but the progress view is not able to 
open.
Digging a little deeper, it appears the view is declared in the plugin.xml for 
the ide plugin, but the actual code is in the workbench plugin.  If you 
redeclare the view in your own plugin, you're ok.  I'm not sure if this was 
intended.  The only benefit I can see is that you may change the view's title, 
icon and category.  


Yes, this was done in 3.0, and was intentional.  You'll need to provide your own
extension XML for the progress view by cloning/modifying the one from
org.eclipse.ui.ide.

The idea was that we didn't want to pollute the app's list of views, e.g. if
they were reusing the show view menu (ActionFactory.SHOW_VIEW_MENU), but not
using the progress view.  In addition, the app could rename it as you suggest.

We want to come up with a better way of doing this in 3.1, to allow views,
actions, and other extensions to be able to be declared independently of their
placement in the UI.  This will allow the app or downstream plug-ins to place
them in the UI as appropriate for their own menu structure or categorization
scheme, in addition to allowing implementation details like the class name to be
hidden.

If you have similar issues in your RCP app, please file a separate bug report
and cc me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71748" />
    <CreationDate amount="2004-08-10 20:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Overide/Implement Methods should carry the final attribute from the base class. [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If you override a method using the menu item in the source menu, it should 
declare the parameters as final if the parameters in the interface or abstract 
class are final. In fact I would personally say that all parameters should be 
final when using this tool. Final parameters are a good thing. =)
Agree that the final information of the parameters should be preserved.
The final modifier isn't passed thru to instances of IMethod.
The other piece of info is that it won't be sufficient to just fix 
StubUtility.genMethodDeclaration but also NewMethodCompletionProposal.
Tobias, now that we use AST is this information around ?
This discussion is not new. But I think the approach is wrong and would be
misleading: Having final parameters is unrelated to overriding methods. You can
override a method with a final parameter with a normal (non-final) one and vice
versa. 'final' in Java is not like 'const' in C++.

Some people prefer final parameters. What we should do is to introduce a setting
in 'code style' where you could specify that all parameters introduced by code
generation tools should be final. 
The information is available from the bindings. I also agree to introduce 
a "final parameter" code style preference. Preserving the final status of a 
parameter when overriding a method makes no sense: It is a local property and 
should be configurable via the code style preference page.
Only doing this for override/implements doesn't seem appropriate. If we want 
to tackle this then final paramters should be a coding preferences which for 
example extract method should honor as well.
Martin, we now have a cleanup to introduce the final keyword where possible. Should we do anything for code generation in 3.2?
See bug 108558 for a new code style setting for final.
Time permitting for 3.2
We wont automatically inherit the final property of parameters in overridden methods. However, a code style preference is being discussed in bug 108558</WithStack>
    <WithOutStack>If you override a method using the menu item in the source menu, it should 
declare the parameters as final if the parameters in the interface or abstract 
class are final. In fact I would personally say that all parameters should be 
final when using this tool. Final parameters are a good thing. =)
Agree that the final information of the parameters should be preserved.
The final modifier isn't passed thru to instances of IMethod.
The other piece of info is that it won't be sufficient to just fix 
StubUtility.genMethodDeclaration but also NewMethodCompletionProposal.
Tobias, now that we use AST is this information around ?
This discussion is not new. But I think the approach is wrong and would be
misleading: Having final parameters is unrelated to overriding methods. You can
override a method with a final parameter with a normal (non-final) one and vice
versa. 'final' in Java is not like 'const' in C++.

Some people prefer final parameters. What we should do is to introduce a setting
in 'code style' where you could specify that all parameters introduced by code
generation tools should be final. 
The information is available from the bindings. I also agree to introduce 
a "final parameter" code style preference. Preserving the final status of a 
parameter when overriding a method makes no sense: It is a local property and 
should be configurable via the code style preference page.
Only doing this for override/implements doesn't seem appropriate. If we want 
to tackle this then final paramters should be a coding preferences which for 
example extract method should honor as well.
Martin, we now have a cleanup to introduce the final keyword where possible. Should we do anything for code generation in 3.2?
See bug 108558 for a new code style setting for final.
Time permitting for 3.2
We wont automatically inherit the final property of parameters in overridden methods. However, a code style preference is being discussed in bug 108558</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71749" />
    <CreationDate amount="2004-08-10 20:50:00 -0400" />
    <DupId amount="39661" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>junit plugin test counters using the wrong widgets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>the widgets for the test count indicators on the junit plugin appear to be uneditable textfields instead 
of labels. this happened on linux, and apparently wasn't fixed for osx (though it was fixed on linux).  

the side effect of this misapplication of widgets is an incorrect/opaque background color.  

all target platforms should have this fixed if it isn't fixed already.
Bug 39661 comment 5 tells why they have to be text fields.


*** This bug has been marked as a duplicate of 39661 ***</WithStack>
    <WithOutStack>the widgets for the test count indicators on the junit plugin appear to be uneditable textfields instead 
of labels. this happened on linux, and apparently wasn't fixed for osx (though it was fixed on linux).  

the side effect of this misapplication of widgets is an incorrect/opaque background color.  

all target platforms should have this fixed if it isn't fixed already.
Bug 39661 comment 5 tells why they have to be text fields.


*** This bug has been marked as a duplicate of 39661 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71750" />
    <CreationDate amount="2004-08-10 23:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[options] Add a compiler warning when synchronized code calls an alien method.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Add a compiler warning when syncronized code calls an alien method.

Inspired by "Item 49: Avoid excessive synchronization" in "Effective Java" by
Joshua Block.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Add a compiler warning when syncronized code calls an alien method.

Inspired by "Item 49: Avoid excessive synchronization" in "Effective Java" by
Joshua Block.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71751" />
    <CreationDate amount="2004-08-11 03:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Unix All" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>JVM terminated. Exit code=13</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341171039">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>The activator org.eclipse.ui.internal.WorkbenchPlugin for bundle org.eclipse.ui.workbench is invalid</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:141)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:970)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)</Frame>
          <Frame depth="6">org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)</Frame>
          <Frame depth="7">org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)</Frame>
          <Frame depth="13">org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)</Frame>
          <Frame depth="14">java.lang.ClassLoader.loadClass(ClassLoader.java:251)</Frame>
          <Frame depth="15">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)</Frame>
          <Frame depth="16">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="17">java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)</Frame>
          <Frame depth="18">java.lang.Class.getConstructor0(Class.java:2671)</Frame>
          <Frame depth="19">java.lang.Class.newInstance0(Class.java:321)</Frame>
          <Frame depth="20">java.lang.Class.newInstance(Class.java:303)</Frame>
          <Frame depth="21">org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)</Frame>
          <Frame depth="22">org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)</Frame>
          <Frame depth="23">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)</Frame>
          <Frame depth="24">org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)</Frame>
          <Frame depth="25">org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="34">org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)</Frame>
          <Frame depth="35">org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)</Frame>
          <Frame depth="36">org.eclipse.equinox.launcher.Main.run(Main.java:1173)</Frame>
          <Frame depth="37">org.eclipse.equinox.launcher.Main.main(Main.java:1148)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341171039">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/swt/SWTError</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)</Frame>
          <Frame depth="2">java.lang.Class.getConstructor0(Class.java:2671)</Frame>
          <Frame depth="3">java.lang.Class.newInstance0(Class.java:321)</Frame>
          <Frame depth="4">java.lang.Class.newInstance(Class.java:303)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:136)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341171039">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/swt/SWTError</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)</Frame>
          <Frame depth="2">java.lang.Class.getConstructor0(Class.java:2671)</Frame>
          <Frame depth="3">java.lang.Class.newInstance0(Class.java:321)</Frame>
          <Frame depth="4">java.lang.Class.newInstance(Class.java:303)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:136)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:970)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)</Frame>
          <Frame depth="11">org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)</Frame>
          <Frame depth="12">org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)</Frame>
          <Frame depth="18">org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)</Frame>
          <Frame depth="19">java.lang.ClassLoader.loadClass(ClassLoader.java:251)</Frame>
          <Frame depth="20">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)</Frame>
          <Frame depth="21">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="22">java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)</Frame>
          <Frame depth="23">java.lang.Class.getConstructor0(Class.java:2671)</Frame>
          <Frame depth="24">java.lang.Class.newInstance0(Class.java:321)</Frame>
          <Frame depth="25">java.lang.Class.newInstance(Class.java:303)</Frame>
          <Frame depth="26">org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)</Frame>
          <Frame depth="27">org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)</Frame>
          <Frame depth="28">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)</Frame>
          <Frame depth="29">org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)</Frame>
          <Frame depth="30">org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)</Frame>
          <Frame depth="32">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="37">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="38">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="39">org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)</Frame>
          <Frame depth="40">org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)</Frame>
          <Frame depth="41">org.eclipse.equinox.launcher.Main.run(Main.java:1173)</Frame>
          <Frame depth="42">org.eclipse.equinox.launcher.Main.main(Main.java:1148)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341171039">
        <Exception>org.eclipse.core.runtime.CoreException</Exception>
        <Reason>Plug-in "org.eclipse.ui.ide.application" was unable to instantiate class "org.eclipse.ui.internal.ide.application.IDEApplication".</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)</Frame>
          <Frame depth="1">org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)</Frame>
          <Frame depth="2">org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)</Frame>
          <Frame depth="3">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)</Frame>
          <Frame depth="4">org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)</Frame>
          <Frame depth="5">org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="12">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="13">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="14">org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)</Frame>
          <Frame depth="15">org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)</Frame>
          <Frame depth="16">org.eclipse.equinox.launcher.Main.run(Main.java:1173)</Frame>
          <Frame depth="17">org.eclipse.equinox.launcher.Main.main(Main.java:1148)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- you're still seeing this problem</Line>
          <Line>- running "./eclipse -os linux" doesn't help</Line>
          <Line>- there's an error .log file created either in</Line>
          <Line>&lt;eclipseInstall&gt;/workspace/.metadata/ or &lt;eclipseInstall&gt;/configuration</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When I start eclipse in FreeBSD 5.2.1, it open dialog with this text

*****************************************************************
JVM terminated. Exit code=13
/usr/local/sunwappserver/jdk/bin/java
-cp /usr/local/eclipse/startup.jar org.eclipse.core.launcher.Main
-os freebsd
-ws gtk
-arch x86
-showsplash /usr/local/eclipse/eclipse -showsplash 600
-exitdata /usr/local/eclipse/eclipse -exitdata 200018
-vm /usr/local/sunwappserver/jdk/bin/java
-vmargs
-cp /usr/local/eclipse/startup.jar org.eclipse.core.launcher.Main 
*****************************************************************
Does the eclipse 2.1.3 download from 
http://www.freebsd.org/ports/java.html#eclipse-2.1 work for you?

Do you have a log file written to &lt;eclipseInstall&gt;/workspace/.metadata/.log ?

I recently have experienced the same problem.  Been running Eclipse 3.0/3.1
since it's release, and currently I'm running the M4 milestone.  Everything
worked fine when I left work last week, but now after I come back from the
holidays, I try to start Eclipse and I get:

JVM terminated. Exit code=13
/usr/java/installed/bin/java
-cp /home/hindog/downloads/eclipse/startup.jar org.eclipse.core.launcher.Main
-os linux
-ws gtk
-arch x86
-showsplash /home/hindog/downloads/eclipse/eclipse -showsplash 600
-exitdata /home/hindog/downloads/eclipse/eclipse -exitdata 1b800d
-vm /usr/java/installed/bin/java
-vmargs
-cp /home/hindog/downloads/eclipse/startup.jar org.eclipse.core.launcher.Main

To my knowledge, nothing has changed with my install.

My JVM is:

[hindog@hindog hindog]$ /usr/java/installed/bin/java -version
java version "1.5.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0-b64)
Java HotSpot(TM) Client VM (build 1.5.0-b64, mixed mode, sharing)

I have tried to move my .eclipse folder from my home dir out of the way, but
problem still persists.

Follow up to previous comment:

I forgot to mention that I *did* check my workspace/.metadata/.log -- but
nothing has been written to the log since my last usage of Eclipse (before the
holidays).

!ENTRY org.eclipse.ui 4 0 2004-12-30 16:16:44.523
&lt;exception here&gt;

Eclipse was working fine for me when that exception was generated.
I ran into the same problem today (3.1M4 on WinXP). Out of the blue Eclipse
crashes with the same message as shown in earlier comments. I have no idea what
caused this problem (at least I didn't install any new software or changed
configuration parameters in between twpo start-ups of Eclipse). There are
logfiles, however: in eclipse\configuration I found files named &lt;number&gt;.log
(one is attached as an example). It seems Eclipse tries to read some
configuration file and gets into an endless loop that causes an
outOfMemoryException in the end. 
I reinstalled Eclipse using the same workspace directory and it started up fine.
Then I added my extension-location (using help-&gt;software updates-&gt;manage
configuration) and still everyting works. This seems to be some glitch, maybe
while shutting down Eclipse? I remember closing Exclipse the regular way (using
the windows exit function i.e., not by killing the process...). 
Created attachment 16903
this is a logfile written whenever Eclipse crashes during startup
Created attachment 16909
this is the contents of my configuration directory

After reinstalling eclipse yesterday, it worked fine. then I reinstalled some
updates and the crash is back. I've attached the contents of my configuration
directory. it contains among others, install.log showing the plug-ins or
features I installed. Hope someone knows what to do with this.
Hi!  
  
I have exactly the same problem as Jan, using Eclipse 3.1M4, Java 1.4.2_06 on  
Windows XP Professional. No clues, sorry... :-/  
 
If this is the same problem as the bug reported, however, the OS and 
COmponents flags of this bug should be changed. Else it should be splitted... 
  
Greetings,  
  
  Gunter  
Hi !

I'm using Eclipse 3.1M4, JRE1.5.0.1 on Windows 2000.
I got the same problem.
I did not reinstalled Eclipse for resolving it, I just
deleted all files and Dirs in /configuration except config.ini
and it started up fine. :)
I'm experiencing the same with 3.1M4 on Windows 2000, JDK 1.4.2.
Created attachment 17388
startup logfile

The startup logfile indicating the OutOfMemoryError.
As Gunter said, there are various problems here that are unrelated to the 
original report.  My delayed follow-ups:

Petr: Try invoking eclipse with the line "./eclipse -os linux" and follow up 
here whether this helps or not.

Aaron: It's difficult to know what your problem is if there isn't anything 
written to your .log.  However, since this used to work for you, it's probably 
a case of the workbench being left in a bad state, which would not be an swt 
issue.  You should try running with a new workspace (run "./eclipse -data 
&lt;someNonExistentDirectory&gt;"), and import any resources that you want to 
preserve from your old workspace into your new workspace.

Jan: Your trace indicates a problem in Core, and your final comment gives the 
impression that adding an update makes the problem happen for you.  If so, then 
please try to determine which of the plugins added through update is causing 
your problem (ie.- start with a new eclipse, download an update, does eclipse 
still run?  If so then download another update, now does eclipse still run?  
etc...), and log a bug report with Eclipse - Runtime if you find a reproducable 
case.

Everyone else: It's difficult to know what your problems are without .log 
files, but since you're all on windows, it would not be the same as this 
report.  If you can find a reproducable case that produces a .metadata/.log 
file then please log a new report accordingly.  If you cannot get eclipse to 
ever run for you and there's no .log file either then my only suggestion is to 
ask the question on the eclipse.platform newsgroup, and someone there may have 
a suggestion.

i removed the \bin in the &lt;java_home&gt;\bin of the PATH(windows)  args it worked.
Created attachment 19900
JVM terminated Exit code=13 .log file

Same error on Windows XP after running update from within Eclipse (update
manager).  .log file attached.
The problem in comment 13 is different, please log a new report with Platform - 
Runtime.

Closing report since the details in comment 0 are too vague, and there has been 
no follow-up that's relevant to the original problem ("JVM terminated. Exit 
code=13" is a generic error that could have a wide range of causes).  Petr, if:

- you're still seeing this problem
- running "./eclipse -os linux" doesn't help
- there's an error .log file created either in 
&lt;eclipseInstall&gt;/workspace/.metadata/ or &lt;eclipseInstall&gt;/configuration

then please reopen this report with your .log info, thanks.

Hi, I'm getting into a trouble because I wanted Eclipse to work with Android, and in my OpenSuSE 10.3 release 2.6.22.5-31-default, machine x86_64, the execution fails, with an error code=13, its a bug ???
Which is the current workaround to solve this ASAP, I needed!!!

!SESSION 2008-02-16 18:32:25.506 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_12
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch 64 -clean -data /home/andrs/workspace/

!ENTRY org.eclipse.osgi 4 0 2008-02-16 18:32:33.663
!MESSAGE An error occurred while automatically activating bundle org.eclipse.ui.workbench (155).
!STACK 0
org.osgi.framework.BundleException: The activator org.eclipse.ui.internal.WorkbenchPlugin for bundle org.eclipse.ui.workbench is invalid
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:141)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:970)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
Caused by: java.lang.NoClassDefFoundError: org/eclipse/swt/SWTError
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:136)
	... 37 more
Root exception:
java.lang.NoClassDefFoundError: org/eclipse/swt/SWTError
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:136)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:970)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)

!ENTRY org.eclipse.osgi 4 0 2008-02-16 18:32:33.667
!MESSAGE Application error
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.ui.ide.application" was unable to instantiate class "org.eclipse.ui.internal.ide.application.IDEApplication".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
org.eclipse.core.runtime.CoreException[1]: java.lang.NoClassDefFoundError: org/eclipse/ui/application/WorkbenchAdvisor
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)

!ENTRY org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE The following is a complete list of bundles which are not resolved, see the prior log entry for the root cause if it exists:
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.equinox.launcher.gtk.linux.x86_1.0.2.R331_v20071019/ [21] was not resolved.
!SUBENTRY 2 org.eclipse.equinox.launcher.gtk.linux.x86 2 0 2008-02-16 18:32:33.979
!MESSAGE Platform filter did not match: (&amp; (osgi.ws=gtk) (osgi.os=linux) (osgi.arch=x86))
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.core.filesystem.linux.x86_1.1.0.v20070416.jar [46] was not resolved.
!SUBENTRY 2 org.eclipse.core.filesystem.linux.x86 2 0 2008-02-16 18:32:33.979
!MESSAGE Platform filter did not match: (&amp; (osgi.os=linux) (osgi.arch=x86))
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.jdt.apt.pluggable.core_1.0.1.R33x_v20070831-0435.jar [83] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.979
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.tool_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.dispatch_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.model_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.util_0.0.0.
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.jdt.compiler.apt_1.0.1.R33x_v20070831-0435.jar [103] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.compiler.apt 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.tool_0.0.0.
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.jdt.compiler.tool_1.0.1.v_780_R33x.jar [104] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.compiler.tool 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing Constraint: Bundle-RequiredExecutionEnvironment: JavaSE-1.6
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.swt.gtk.linux.x86_3.3.2.v3347.jar [107] was not resolved.
!SUBENTRY 2 org.eclipse.swt.gtk.linux.x86 2 0 2008-02-16 18:32:33.980
!MESSAGE Platform filter did not match: (&amp; (osgi.ws=gtk) (osgi.os=linux) (osgi.arch=x86))

re: comment 16

My first suggestion is to try eclipse 3.4M5 ( http://download.eclipse.org/eclipse/downloads/drops/S-3.4M5-200802071530/index.php ), because prior to this release the swt Browser, which is used by eclipse's Welcome page, failed on OpenSuSE 10.3 because it did not implement the XULRunner 1.9 interfaces.  This cause does not really match with the error log you've attached, but it will eliminate a known case.  I've never seen or heard of the error that you're seeing before.  Please follow up here whether doing this helps or not.

Hi Grant Gayed, I installed for my computer the eclipse-SDK-3.4M5-linux-gtk-x86_64.tar.gz also I should to resolved to install some others features like the WST plugging s to make android sdk works, and right now is working properly. Thank you,</WithStack>
    <WithOutStack>When I start eclipse in FreeBSD 5.2.1, it open dialog with this text

*****************************************************************
JVM terminated. Exit code=13
/usr/local/sunwappserver/jdk/bin/java
-cp /usr/local/eclipse/startup.jar org.eclipse.core.launcher.Main
-os freebsd
-ws gtk
-arch x86
-showsplash /usr/local/eclipse/eclipse -showsplash 600
-exitdata /usr/local/eclipse/eclipse -exitdata 200018
-vm /usr/local/sunwappserver/jdk/bin/java
-vmargs
-cp /usr/local/eclipse/startup.jar org.eclipse.core.launcher.Main 
*****************************************************************
Does the eclipse 2.1.3 download from 
http://www.freebsd.org/ports/java.html#eclipse-2.1 work for you?

Do you have a log file written to &lt;eclipseInstall&gt;/workspace/.metadata/.log ?

I recently have experienced the same problem.  Been running Eclipse 3.0/3.1
since it's release, and currently I'm running the M4 milestone.  Everything
worked fine when I left work last week, but now after I come back from the
holidays, I try to start Eclipse and I get:

JVM terminated. Exit code=13
/usr/java/installed/bin/java
-cp /home/hindog/downloads/eclipse/startup.jar org.eclipse.core.launcher.Main
-os linux
-ws gtk
-arch x86
-showsplash /home/hindog/downloads/eclipse/eclipse -showsplash 600
-exitdata /home/hindog/downloads/eclipse/eclipse -exitdata 1b800d
-vm /usr/java/installed/bin/java
-vmargs
-cp /home/hindog/downloads/eclipse/startup.jar org.eclipse.core.launcher.Main

To my knowledge, nothing has changed with my install.

My JVM is:

[hindog@hindog hindog]$ /usr/java/installed/bin/java -version
java version "1.5.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0-b64)
Java HotSpot(TM) Client VM (build 1.5.0-b64, mixed mode, sharing)

I have tried to move my .eclipse folder from my home dir out of the way, but
problem still persists.

Follow up to previous comment:

I forgot to mention that I *did* check my workspace/.metadata/.log -- but
nothing has been written to the log since my last usage of Eclipse (before the
holidays).

!ENTRY org.eclipse.ui 4 0 2004-12-30 16:16:44.523
&lt;exception here&gt;

Eclipse was working fine for me when that exception was generated.
I ran into the same problem today (3.1M4 on WinXP). Out of the blue Eclipse
crashes with the same message as shown in earlier comments. I have no idea what
caused this problem (at least I didn't install any new software or changed
configuration parameters in between twpo start-ups of Eclipse). There are
logfiles, however: in eclipse\configuration I found files named &lt;number&gt;.log
(one is attached as an example). It seems Eclipse tries to read some
configuration file and gets into an endless loop that causes an
outOfMemoryException in the end. 
I reinstalled Eclipse using the same workspace directory and it started up fine.
Then I added my extension-location (using help-&gt;software updates-&gt;manage
configuration) and still everyting works. This seems to be some glitch, maybe
while shutting down Eclipse? I remember closing Exclipse the regular way (using
the windows exit function i.e., not by killing the process...). 
Created attachment 16903
this is a logfile written whenever Eclipse crashes during startup
Created attachment 16909
this is the contents of my configuration directory

After reinstalling eclipse yesterday, it worked fine. then I reinstalled some
updates and the crash is back. I've attached the contents of my configuration
directory. it contains among others, install.log showing the plug-ins or
features I installed. Hope someone knows what to do with this.
Hi!  
  
I have exactly the same problem as Jan, using Eclipse 3.1M4, Java 1.4.2_06 on  
Windows XP Professional. No clues, sorry... :-/  
 
If this is the same problem as the bug reported, however, the OS and 
COmponents flags of this bug should be changed. Else it should be splitted... 
  
Greetings,  
  
  Gunter  
Hi !

I'm using Eclipse 3.1M4, JRE1.5.0.1 on Windows 2000.
I got the same problem.
I did not reinstalled Eclipse for resolving it, I just
deleted all files and Dirs in /configuration except config.ini
and it started up fine. :)
I'm experiencing the same with 3.1M4 on Windows 2000, JDK 1.4.2.
Created attachment 17388
startup logfile

The startup logfile indicating the OutOfMemoryError.
As Gunter said, there are various problems here that are unrelated to the 
original report.  My delayed follow-ups:

Petr: Try invoking eclipse with the line "./eclipse -os linux" and follow up 
here whether this helps or not.

Aaron: It's difficult to know what your problem is if there isn't anything 
written to your .log.  However, since this used to work for you, it's probably 
a case of the workbench being left in a bad state, which would not be an swt 
issue.  You should try running with a new workspace (run "./eclipse -data 
&lt;someNonExistentDirectory&gt;"), and import any resources that you want to 
preserve from your old workspace into your new workspace.

Jan: Your trace indicates a problem in Core, and your final comment gives the 
impression that adding an update makes the problem happen for you.  If so, then 
please try to determine which of the plugins added through update is causing 
your problem (ie.- start with a new eclipse, download an update, does eclipse 
still run?  If so then download another update, now does eclipse still run?  
etc...), and log a bug report with Eclipse - Runtime if you find a reproducable 
case.

Everyone else: It's difficult to know what your problems are without .log 
files, but since you're all on windows, it would not be the same as this 
report.  If you can find a reproducable case that produces a .metadata/.log 
file then please log a new report accordingly.  If you cannot get eclipse to 
ever run for you and there's no .log file either then my only suggestion is to 
ask the question on the eclipse.platform newsgroup, and someone there may have 
a suggestion.

i removed the \bin in the &lt;java_home&gt;\bin of the PATH(windows)  args it worked.
Created attachment 19900
JVM terminated Exit code=13 .log file

Same error on Windows XP after running update from within Eclipse (update
manager).  .log file attached.
The problem in comment 13 is different, please log a new report with Platform - 
Runtime.

Closing report since the details in comment 0 are too vague, and there has been 
no follow-up that's relevant to the original problem ("JVM terminated. Exit 
code=13" is a generic error that could have a wide range of causes).  Petr, if:

- you're still seeing this problem
- running "./eclipse -os linux" doesn't help
- there's an error .log file created either in 
&lt;eclipseInstall&gt;/workspace/.metadata/ or &lt;eclipseInstall&gt;/configuration

then please reopen this report with your .log info, thanks.

Hi, I'm getting into a trouble because I wanted Eclipse to work with Android, and in my OpenSuSE 10.3 release 2.6.22.5-31-default, machine x86_64, the execution fails, with an error code=13, its a bug ???
Which is the current workaround to solve this ASAP, I needed!!!

!SESSION 2008-02-16 18:32:25.506 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_12
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch 64 -clean -data /home/andrs/workspace/

!ENTRY org.eclipse.osgi 4 0 2008-02-16 18:32:33.663
!MESSAGE An error occurred while automatically activating bundle org.eclipse.ui.workbench (155).
!STACK 0
	... 37 more
Root exception:

!ENTRY org.eclipse.osgi 4 0 2008-02-16 18:32:33.667
!MESSAGE Application error
!STACK 1

org.eclipse.core.runtime.CoreException[1]: java.lang.NoClassDefFoundError: org/eclipse/ui/application/WorkbenchAdvisor
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.newInstance0(Class.java:321)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:165)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)

!ENTRY org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE The following is a complete list of bundles which are not resolved, see the prior log entry for the root cause if it exists:
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.equinox.launcher.gtk.linux.x86_1.0.2.R331_v20071019/ [21] was not resolved.
!SUBENTRY 2 org.eclipse.equinox.launcher.gtk.linux.x86 2 0 2008-02-16 18:32:33.979
!MESSAGE Platform filter did not match: (&amp; (osgi.ws=gtk) (osgi.os=linux) (osgi.arch=x86))
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.core.filesystem.linux.x86_1.1.0.v20070416.jar [46] was not resolved.
!SUBENTRY 2 org.eclipse.core.filesystem.linux.x86 2 0 2008-02-16 18:32:33.979
!MESSAGE Platform filter did not match: (&amp; (osgi.os=linux) (osgi.arch=x86))
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.979
!MESSAGE Bundle update@plugins/org.eclipse.jdt.apt.pluggable.core_1.0.1.R33x_v20070831-0435.jar [83] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.979
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.tool_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.dispatch_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.model_0.0.0.
!SUBENTRY 2 org.eclipse.jdt.apt.pluggable.core 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.apt.util_0.0.0.
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.jdt.compiler.apt_1.0.1.R33x_v20070831-0435.jar [103] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.compiler.apt 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing imported package org.eclipse.jdt.internal.compiler.tool_0.0.0.
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.jdt.compiler.tool_1.0.1.v_780_R33x.jar [104] was not resolved.
!SUBENTRY 2 org.eclipse.jdt.compiler.tool 2 0 2008-02-16 18:32:33.980
!MESSAGE Missing Constraint: Bundle-RequiredExecutionEnvironment: JavaSE-1.6
!SUBENTRY 1 org.eclipse.osgi 2 0 2008-02-16 18:32:33.980
!MESSAGE Bundle update@plugins/org.eclipse.swt.gtk.linux.x86_3.3.2.v3347.jar [107] was not resolved.
!SUBENTRY 2 org.eclipse.swt.gtk.linux.x86 2 0 2008-02-16 18:32:33.980
!MESSAGE Platform filter did not match: (&amp; (osgi.ws=gtk) (osgi.os=linux) (osgi.arch=x86))

re: comment 16

My first suggestion is to try eclipse 3.4M5 ( http://download.eclipse.org/eclipse/downloads/drops/S-3.4M5-200802071530/index.php ), because prior to this release the swt Browser, which is used by eclipse's Welcome page, failed on OpenSuSE 10.3 because it did not implement the XULRunner 1.9 interfaces.  This cause does not really match with the error log you've attached, but it will eliminate a known case.  I've never seen or heard of the error that you're seeing before.  Please follow up here whether doing this helps or not.

Hi Grant Gayed, I installed for my computer the eclipse-SDK-3.4M5-linux-gtk-x86_64.tar.gz also I should to resolved to install some others features like the WST plugging s to make android sdk works, and right now is working properly. Thank you,</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71752" />
    <CreationDate amount="2004-08-11 03:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inspect window  outside screen</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Sometimes when debugging and hitting Ctrl+Shift+I for insepecting a variable
value, the popup yellow window has the top outside the screen, and don't know
move it down in order to see its contents.

The only thing I can do is hitting Ctrl+Shift+I for viewing the variable value
in the expressions view.
Created attachment 13909
Screenshot

Screenshot showing this bug
Kevin, do we specify the size and location of the pop-up window or should we 
move this bug to UI/SWT?
We persist the sizing. TEXT does the positioning (I think). Needs further investigation
We persist the size, but call shell.size(...) and shell.setLocation(...) to do the real work.
Moving to SWT for comment
If you position a shell off the screen, it will go off the screen.
I guess we shouldn't position the shell off the screen then :-)

Fixed in PopupInformationControl.setLocation(). Ensures that the shell is placed and sized such that the 
whole thing is visible.
Jared, please verify.
Verified code.</WithStack>
    <WithOutStack>Sometimes when debugging and hitting Ctrl+Shift+I for insepecting a variable
value, the popup yellow window has the top outside the screen, and don't know
move it down in order to see its contents.

The only thing I can do is hitting Ctrl+Shift+I for viewing the variable value
in the expressions view.
Created attachment 13909
Screenshot

Screenshot showing this bug
Kevin, do we specify the size and location of the pop-up window or should we 
move this bug to UI/SWT?
We persist the sizing. TEXT does the positioning (I think). Needs further investigation
We persist the size, but call shell.size(...) and shell.setLocation(...) to do the real work.
Moving to SWT for comment
If you position a shell off the screen, it will go off the screen.
I guess we shouldn't position the shell off the screen then :-)

Fixed in PopupInformationControl.setLocation(). Ensures that the shell is placed and sized such that the 
whole thing is visible.
Jared, please verify.
Verified code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71753" />
    <CreationDate amount="2004-08-11 03:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>File extension .tcc used in C++ standard headers missing from file types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>(1) issue #71753 is low priority</Line>
          <Line>(2) the MinGW folks used an unusual extension, which</Line>
          <Line>they should not have, and it has no ill effects since</Line>
          <Line>it turns out the extension is unique (unscientific result)</Line>
          <Line>(3) fixing the default distribution will simply make</Line>
          <Line>it easier to get syntax highlighting, and a workable</Line>
          <Line>workaround exists.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The following files are delivered with MinGW:
C:\MinGW\include\c++\3.2.3\bits&gt;dir *.tcc

 Volume in drive C has no label
 Volume Serial Number is 07D1-0B1B
 Directory of C:\MinGW\include\c++\3.2.3\bits

BASIC_~1 TCC         6,584  05-04-03 11:39p basic_ios.tcc
BASIC_~2 TCC        33,855  05-04-03 11:39p basic_string.tcc
CMATH    TCC         1,840  05-04-03 11:42p cmath.tcc
FSTREAM  TCC        14,844  05-04-03 11:39p fstream.tcc
ISTREAM  TCC        34,452  05-04-03 11:39p istream.tcc
LOCALE~1 TCC        78,363  05-04-03 11:39p locale_facets.tcc
OSTREAM  TCC        20,810  05-04-03 11:39p ostream.tcc
SSTREAM  TCC         7,532  05-04-03 11:39p sstream.tcc
STREAM~1 TCC         7,912  05-04-03 11:40p streambuf.tcc
VALARR~1 TCC         4,576  05-04-03 11:40p valarray_array.tcc

Related Bugzilla Bug: 68210, some C++ standard headers missing from file types.
In the head, there is now a Preference:
Window -&gt; Preference -&gt; c/c++ -&gt; File Types

Add a new association for "C++ source file" for extension "*.tcc"

Am not sure we should consider adding in the default distribution
"*.tcc" has valid C++ extension. 

What do you think ?

Alain,

the workaround (adding an association) works fine.
It's about getting the right syntax highlighting anyway.

Chris,

an unscientific query (find all files with .tcc extension)
on my PC only turned up the MinGW template fragments.
So, the way I see it:
(1) issue #71753 is low priority
(2) the MinGW folks used an unusual extension, which
they should not have, and it has no ill effects since
it turns out the extension is unique (unscientific result)
(3) fixing the default distribution will simply make
it easier to get syntax highlighting, and a workable
workaround exists.

Thanks,

- Nick -
Alain, is there a mechanism/extension point for the file type associations per
tool chain?  If need be, could someone configure their own MinGW tool chain to
include the .tcc extension?  Similarly, will we ever need to care about .pch
files etc?

At any rate, the .tcc is non-standard so I think we can close this particular
bug.    
Something we might want to consider for the future - support toolchain-defined
file type associations.

*** Bug 73705 has been marked as a duplicate of this bug. ***
(In reply to comment #3)

&gt; At any rate, the .tcc is non-standard so I think we can close this particular
&gt; bug.    

I'm using gcc v4.0.2 on a linux debian and I have .tcc files
in /usr/include/c++

This extension allows to separate declaration from
implementation for template I think.

Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithStack>
    <WithOutStack>The following files are delivered with MinGW:
C:\MinGW\include\c++\3.2.3\bits&gt;dir *.tcc

 Volume in drive C has no label
 Volume Serial Number is 07D1-0B1B
 Directory of C:\MinGW\include\c++\3.2.3\bits

BASIC_~1 TCC         6,584  05-04-03 11:39p basic_ios.tcc
BASIC_~2 TCC        33,855  05-04-03 11:39p basic_string.tcc
CMATH    TCC         1,840  05-04-03 11:42p cmath.tcc
FSTREAM  TCC        14,844  05-04-03 11:39p fstream.tcc
ISTREAM  TCC        34,452  05-04-03 11:39p istream.tcc
LOCALE~1 TCC        78,363  05-04-03 11:39p locale_facets.tcc
OSTREAM  TCC        20,810  05-04-03 11:39p ostream.tcc
SSTREAM  TCC         7,532  05-04-03 11:39p sstream.tcc
STREAM~1 TCC         7,912  05-04-03 11:40p streambuf.tcc
VALARR~1 TCC         4,576  05-04-03 11:40p valarray_array.tcc

Related Bugzilla Bug: 68210, some C++ standard headers missing from file types.
In the head, there is now a Preference:
Window -&gt; Preference -&gt; c/c++ -&gt; File Types

Add a new association for "C++ source file" for extension "*.tcc"

Am not sure we should consider adding in the default distribution
"*.tcc" has valid C++ extension. 

What do you think ?

Alain,

the workaround (adding an association) works fine.
It's about getting the right syntax highlighting anyway.

Chris,

an unscientific query (find all files with .tcc extension)
on my PC only turned up the MinGW template fragments.
So, the way I see it:
(1) issue #71753 is low priority
(2) the MinGW folks used an unusual extension, which
they should not have, and it has no ill effects since
it turns out the extension is unique (unscientific result)
(3) fixing the default distribution will simply make
it easier to get syntax highlighting, and a workable
workaround exists.

Thanks,

- Nick -
Alain, is there a mechanism/extension point for the file type associations per
tool chain?  If need be, could someone configure their own MinGW tool chain to
include the .tcc extension?  Similarly, will we ever need to care about .pch
files etc?

At any rate, the .tcc is non-standard so I think we can close this particular
bug.    
Something we might want to consider for the future - support toolchain-defined
file type associations.

*** Bug 73705 has been marked as a duplicate of this bug. ***
(In reply to comment #3)

&gt; At any rate, the .tcc is non-standard so I think we can close this particular
&gt; bug.    

I'm using gcc v4.0.2 on a linux debian and I have .tcc files
in /usr/include/c++

This extension allows to separate declaration from
implementation for template I think.

Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71754" />
    <CreationDate amount="2004-08-11 04:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl-1 on "extends SomeInterface" does not suggest changing to "implements SomeInterface" [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I created a local class, where I used "extends PropertyChangeListener" which is
an interface, so the proper syntax is "implements PropertyChangeListener".

The compiler catches that PropertyChangeListener is not a class, but Ctrl-1 only
suggsts "Rename in file".
Fair request.
added &gt; 20040903</WithStack>
    <WithOutStack>I created a local class, where I used "extends PropertyChangeListener" which is
an interface, so the proper syntax is "implements PropertyChangeListener".

The compiler catches that PropertyChangeListener is not a class, but Ctrl-1 only
suggsts "Rename in file".
Fair request.
added &gt; 20040903</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71755" />
    <CreationDate amount="2004-08-11 04:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in QuickFix for missing serialVersionUID</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341171049">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.misc.URLClassPath$3.run(URLClassPath.java:312)</Frame>
          <Frame depth="1">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="2">sun.misc.URLClassPath.getLoader(URLClassPath.java:309)</Frame>
          <Frame depth="3">sun.misc.URLClassPath.getLoader(URLClassPath.java:286)</Frame>
          <Frame depth="4">sun.misc.URLClassPath.getResource(URLClassPath.java:156)</Frame>
          <Frame depth="5">java.net.URLClassLoader$1.run(URLClassLoader.java:191)</Frame>
          <Frame depth="6">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="7">java.net.URLClassLoader.findClass(URLClassLoader.java:187)</Frame>
          <Frame depth="8">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="9">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="10">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="11">java.lang.ClassLoader.defineClass0(Native Method)</Frame>
          <Frame depth="12">java.lang.ClassLoader.defineClass(ClassLoader.java:537)</Frame>
          <Frame depth="13">java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)</Frame>
          <Frame depth="14">java.net.URLClassLoader.defineClass(URLClassLoader.java:251)</Frame>
          <Frame depth="15">java.net.URLClassLoader.access$100(URLClassLoader.java:55)</Frame>
          <Frame depth="16">java.net.URLClassLoader$1.run(URLClassLoader.java:194)</Frame>
          <Frame depth="17">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="18">java.net.URLClassLoader.findClass(URLClassLoader.java:187)</Frame>
          <Frame depth="19">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="20">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="21">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="22">java.lang.ClassLoader.defineClass0(Native Method)</Frame>
          <Frame depth="23">java.lang.ClassLoader.defineClass(ClassLoader.java:537)</Frame>
          <Frame depth="24">java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)</Frame>
          <Frame depth="25">java.net.URLClassLoader.defineClass(URLClassLoader.java:251)</Frame>
          <Frame depth="26">java.net.URLClassLoader.access$100(URLClassLoader.java:55)</Frame>
          <Frame depth="27">java.net.URLClassLoader$1.run(URLClassLoader.java:194)</Frame>
          <Frame depth="28">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="29">java.net.URLClassLoader.findClass(URLClassLoader.java:187)</Frame>
          <Frame depth="30">java.lang.ClassLoader.loadClass(ClassLoader.java:289)</Frame>
          <Frame depth="31">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="32">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="33">java.lang.Class.forName0(Native Method)</Frame>
          <Frame depth="34">java.lang.Class.forName(Class.java:219)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal$1.run(SerialVersionHashProposal.java:119)</Frame>
          <Frame depth="36">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="37">org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal.&lt;init&gt;(SerialVersionHashProposal.java:76)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.text.correction.SerialVersionSubProcessor.getSerialVersionProposals(SerialVersionSubProcessor.java:69)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:413)</Frame>
          <Frame depth="40">org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:184)</Frame>
          <Frame depth="41">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:240)</Frame>
          <Frame depth="42">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.processAnnotations(JavaCorrectionProcessor.java:208)</Frame>
          <Frame depth="43">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompletionProposals(JavaCorrectionProcessor.java:177)</Frame>
          <Frame depth="44">org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1472)</Frame>
          <Frame depth="45">org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:242)</Frame>
          <Frame depth="46">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:238)</Frame>
          <Frame depth="47">org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:197)</Frame>
          <Frame depth="48">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="49">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:192)</Frame>
          <Frame depth="50">org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1320)</Frame>
          <Frame depth="51">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleCompletions(JavaCorrectionAssistant.java:159)</Frame>
          <Frame depth="52">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)</Frame>
          <Frame depth="53">org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)</Frame>
          <Frame depth="54">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="55">org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)</Frame>
          <Frame depth="56">org.eclipse.jface.action.Action.runWithEvent(Action.java:979)</Frame>
          <Frame depth="57">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.commands.Command.execute(Command.java:135)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:476)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:899)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:940)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:554)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:501)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:267)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3517)</Frame>
          <Frame depth="73">org.eclipse.swt.widgets.Control.windowProc(Control.java:2997)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="75">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="76">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="77">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1435)</Frame>
          <Frame depth="79">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)</Frame>
          <Frame depth="81">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="82">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="83">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="84">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="85">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="86">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="87">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="88">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="89">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="90">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="91">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="92">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200408101200

Added "implements Serializable" to UnresolvedVariablesQuickFixTest and then
tried to use QuickFix to generate serialVersionUID.

After 30 seconds (UI blocked):
Error in the log, quick fix proposals show up very quickly and then disappear.

Error Aug 11, 2004 10:27:46.891 Internal Error
java.lang.NullPointerException
	at sun.misc.URLClassPath$3.run(URLClassPath.java:312)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.misc.URLClassPath.getLoader(URLClassPath.java:309)
	at sun.misc.URLClassPath.getLoader(URLClassPath.java:286)
	at sun.misc.URLClassPath.getResource(URLClassPath.java:156)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:191)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:187)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:537)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:251)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:55)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:194)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:187)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:537)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:251)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:55)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:194)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:187)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:219)
	at
org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal$1.run(SerialVersionHashProposal.java:119)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal.&lt;init&gt;(SerialVersionHashProposal.java:76)
	at
org.eclipse.jdt.internal.ui.text.correction.SerialVersionSubProcessor.getSerialVersionProposals(SerialVersionSubProcessor.java:69)
	at
org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:413)
	at
org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:184)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:240)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.processAnnotations(JavaCorrectionProcessor.java:208)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompletionProposals(JavaCorrectionProcessor.java:177)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1472)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:242)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:238)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:197)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:192)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1320)
	at
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleCompletions(JavaCorrectionAssistant.java:159)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at
org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:979)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:135)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:476)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:899)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:940)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:554)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:501)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:267)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3517)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2997)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1435)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
Calculation of the classpath has been fixed &gt; I20040812</WithStack>
    <WithOutStack>I200408101200

Added "implements Serializable" to UnresolvedVariablesQuickFixTest and then
tried to use QuickFix to generate serialVersionUID.

After 30 seconds (UI blocked):
Error in the log, quick fix proposals show up very quickly and then disappear.

Error Aug 11, 2004 10:27:46.891 Internal Error

Calculation of the classpath has been fixed &gt; I20040812</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71756" />
    <CreationDate amount="2004-08-11 05:17:00 -0400" />
    <DupId amount="52338" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Regular expression replace doesn't support \n</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I try to replace something using regular expressions, in the "Replace with" I
specify \n, \t and other special characters, but they a replaced by n, t instead
of a newline or a tab.


*** This bug has been marked as a duplicate of 52338 ***</WithStack>
    <WithOutStack>I try to replace something using regular expressions, in the "Replace with" I
specify \n, \t and other special characters, but they a replaced by n, t instead
of a newline or a tab.


*** This bug has been marked as a duplicate of 52338 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71757" />
    <CreationDate amount="2004-08-11 05:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cursor X/Y hotspots don't work with all constructors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When using org.eclipse.swt.graphics.Cursor(Device device, ImageData source, int
hotspotX, int hotspotY) [win32 version] to create a custom cursor, the
hotspotX/hotspotY parameters are ignored. They're checked for validity at the
top of the function, but then they're never referenced again.
Fixed &gt; 20040813.
*** Bug 83505 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>When using org.eclipse.swt.graphics.Cursor(Device device, ImageData source, int
hotspotX, int hotspotY) [win32 version] to create a custom cursor, the
hotspotX/hotspotY parameters are ignored. They're checked for validity at the
top of the function, but then they're never referenced again.
Fixed &gt; 20040813.
*** Bug 83505 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71758" />
    <CreationDate amount="2004-08-11 05:32:00 -0400" />
    <DupId amount="63692" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Folding hides occurence marks (but not compiler marks)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Compiler errors are displayed as little red marks on the right editor column. 
They are displayed no matter if code fragments are folded or not - and that's 
good!

But the marks that appear when i click a field or method (that show the other 
places where this field/method occur) are only displayed for those places that 
are not folded. This should be the same as with the compiler error: the marks 
should appear no matter if code fragments are folded or not.
Dup of bug 63692?
so it is.

*** This bug has been marked as a duplicate of 63692 ***</WithStack>
    <WithOutStack>Compiler errors are displayed as little red marks on the right editor column. 
They are displayed no matter if code fragments are folded or not - and that's 
good!

But the marks that appear when i click a field or method (that show the other 
places where this field/method occur) are only displayed for those places that 
are not folded. This should be the same as with the compiler error: the marks 
should appear no matter if code fragments are folded or not.
Dup of bug 63692?
so it is.

*** This bug has been marked as a duplicate of 63692 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71759" />
    <CreationDate amount="2004-08-11 05:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EXCEPTION_ACCESS_VIOLATION on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="5">
      <Enumeration lines="125">
        <Lines>
          <Line>- locked &lt;0x100b0010&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at java.lang.Class.getDeclaredConstructors0(Native Method)</Line>
          <Line>at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)</Line>
          <Line>at java.lang.Class.getConstructor0(Class.java:1930)</Line>
          <Line>at java.lang.Class.getConstructor(Class.java:1027)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>internalDoPluginActivation(PluginDescriptor.java:403)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>doPluginActivation(PluginDescriptor.java:359)</Line>
          <Line>- locked &lt;0x100b0348&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>getPlugin(PluginDescriptor.java:328)</Line>
          <Line>at org.eclipse.core.internal.compatibility.PluginActivator.</Line>
          <Line>start(PluginActivator.java:47)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.</Line>
          <Line>run(BundleContextImpl.java:958)</Line>
          <Line>at java.security.AccessController.doPrivileged(Native Method)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>startActivator(BundleContextImpl.java:954)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>start(BundleContextImpl.java:937)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.</Line>
          <Line>java:421)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>start(AbstractBundle.java:293)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:110)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:402)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>loadClass(BundleLoader.java:307)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.</Line>
          <Line>java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>loadClass(AbstractBundle.java:1313)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:131)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:124)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:113)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.</Line>
          <Line>java:193)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:</Line>
          <Line>775)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:</Line>
          <Line>925)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:</Line>
          <Line>1364)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:</Line>
          <Line>1356)</Line>
          <Line>at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)</Line>
          <Line>at org.eclipse.ui.internal.presentations.PresentablePart.</Line>
          <Line>setVisible(PresentablePart.java:122)</Line>
          <Line>at org.eclipse.ui.internal.presentations.DefaultPartPresentation.</Line>
          <Line>selectPart(DefaultPartPresentation.java:1111)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.</Line>
          <Line>java:946)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)</Line>
          <Line>at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)</Line>
          <Line>at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.</Line>
          <Line>java:59)</Line>
          <Line>at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:</Line>
          <Line>266)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:</Line>
          <Line>686)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:</Line>
          <Line>1591)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:</Line>
          <Line>1372)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Line>
          <Line>at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchConfigurer.</Line>
          <Line>restoreState(WorkbenchConfigurer.java:167)</Line>
          <Line>at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.</Line>
          <Line>java:652)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.</Line>
          <Line>java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:</Line>
          <Line>39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.</Line>
          <Line>invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="194">
        <Lines>
          <Line>- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>findLocalClass(AbstractClassLoader.java:220)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>basicFindLocalClass(EclipseClassLoader.java:135)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:73)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:402)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Line>
          <Line>- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at org.eclipse.jdt.core.JavaCore.initializeDefaultPluginPreferences(JavaCore.</Line>
          <Line>java:2345)</Line>
          <Line>at org.eclipse.core.runtime.Plugin.</Line>
          <Line>internalInitializeDefaultPluginPreferences(Plugin.java:411)</Line>
          <Line>at org.eclipse.core.internal.preferences.DefaultPreferences.</Line>
          <Line>applyRuntimeDefaults(DefaultPreferences.java:206)</Line>
          <Line>at org.eclipse.core.internal.preferences.DefaultPreferences.</Line>
          <Line>loadDefaults(DefaultPreferences.java:321)</Line>
          <Line>at org.eclipse.core.internal.preferences.DefaultPreferences.</Line>
          <Line>load(DefaultPreferences.java:317)</Line>
          <Line>at org.eclipse.core.internal.preferences.EclipsePreferences.</Line>
          <Line>create(EclipsePreferences.java:292)</Line>
          <Line>at org.eclipse.core.internal.preferences.EclipsePreferences.</Line>
          <Line>getChild(EclipsePreferences.java:381)</Line>
          <Line>- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.</Line>
          <Line>DefaultPreferences)</Line>
          <Line>at org.eclipse.core.internal.preferences.EclipsePreferences.</Line>
          <Line>internalNode(EclipsePreferences.java:518)</Line>
          <Line>- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.</Line>
          <Line>DefaultPreferences)</Line>
          <Line>at org.eclipse.core.internal.preferences.DefaultPreferences.</Line>
          <Line>node(DefaultPreferences.java:162)</Line>
          <Line>at org.eclipse.core.internal.preferences.PreferenceForwarder.</Line>
          <Line>getDefaultPreferences(PreferenceForwarder.java:127)</Line>
          <Line>at org.eclipse.core.internal.preferences.PreferenceForwarder.</Line>
          <Line>&lt;init&gt;(PreferenceForwarder.java:66)</Line>
          <Line>at org.eclipse.core.runtime.Plugin.getPluginPreferences(Plugin.java:330)</Line>
          <Line>at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:3637)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.</Line>
          <Line>run(BundleContextImpl.java:958)</Line>
          <Line>at java.security.AccessController.doPrivileged(Native Method)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>startActivator(BundleContextImpl.java:954)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>start(BundleContextImpl.java:937)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.</Line>
          <Line>java:421)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>start(AbstractBundle.java:293)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:110)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>requireClass(BundleLoader.java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findRequiredClass(BundleLoader.java:914)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:399)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Line>
          <Line>- locked &lt;0x10acbf98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at java.lang.Class.getDeclaredConstructors0(Native Method)</Line>
          <Line>at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)</Line>
          <Line>at java.lang.Class.getConstructor0(Class.java:1930)</Line>
          <Line>at java.lang.Class.getConstructor(Class.java:1027)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>internalDoPluginActivation(PluginDescriptor.java:403)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>doPluginActivation(PluginDescriptor.java:359)</Line>
          <Line>- locked &lt;0x10acc090&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>getPlugin(PluginDescriptor.java:328)</Line>
          <Line>at org.eclipse.core.internal.compatibility.PluginActivator.</Line>
          <Line>start(PluginActivator.java:47)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.</Line>
          <Line>run(BundleContextImpl.java:958)</Line>
          <Line>at java.security.AccessController.doPrivileged(Native Method)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>startActivator(BundleContextImpl.java:954)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>start(BundleContextImpl.java:937)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.</Line>
          <Line>java:421)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>start(AbstractBundle.java:293)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:110)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:402)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>loadClass(BundleLoader.java:307)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.</Line>
          <Line>java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>loadClass(AbstractBundle.java:1313)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:131)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:124)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:113)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.</Line>
          <Line>java:193)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:</Line>
          <Line>775)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:</Line>
          <Line>925)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:</Line>
          <Line>1364)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:</Line>
          <Line>1356)</Line>
          <Line>at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)</Line>
          <Line>at org.eclipse.ui.internal.presentations.PresentablePart.</Line>
          <Line>setVisible(PresentablePart.java:122)</Line>
          <Line>at org.eclipse.ui.internal.presentations.DefaultPartPresentation.</Line>
          <Line>selectPart(DefaultPartPresentation.java:1111)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.</Line>
          <Line>java:946)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)</Line>
          <Line>at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)</Line>
          <Line>at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.</Line>
          <Line>java:59)</Line>
          <Line>at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:</Line>
          <Line>266)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:</Line>
          <Line>686)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:</Line>
          <Line>1591)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:</Line>
          <Line>1372)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Line>
          <Line>at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchConfigurer.</Line>
          <Line>restoreState(WorkbenchConfigurer.java:167)</Line>
          <Line>at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.</Line>
          <Line>java:652)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.</Line>
          <Line>java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:</Line>
          <Line>39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.</Line>
          <Line>invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="125">
        <Lines>
          <Line>- locked &lt;0x10acbe90&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at java.lang.Class.getDeclaredConstructors0(Native Method)</Line>
          <Line>at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)</Line>
          <Line>at java.lang.Class.getConstructor0(Class.java:1930)</Line>
          <Line>at java.lang.Class.getConstructor(Class.java:1027)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>internalDoPluginActivation(PluginDescriptor.java:403)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>doPluginActivation(PluginDescriptor.java:359)</Line>
          <Line>- locked &lt;0x10acbf88&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>getPlugin(PluginDescriptor.java:328)</Line>
          <Line>at org.eclipse.core.internal.compatibility.PluginActivator.</Line>
          <Line>start(PluginActivator.java:47)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.</Line>
          <Line>run(BundleContextImpl.java:958)</Line>
          <Line>at java.security.AccessController.doPrivileged(Native Method)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>startActivator(BundleContextImpl.java:954)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>start(BundleContextImpl.java:937)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.</Line>
          <Line>java:421)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>start(AbstractBundle.java:293)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:110)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:402)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>loadClass(BundleLoader.java:307)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.</Line>
          <Line>java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>loadClass(AbstractBundle.java:1313)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:131)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:124)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:113)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.</Line>
          <Line>java:193)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:</Line>
          <Line>775)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:</Line>
          <Line>925)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:</Line>
          <Line>1364)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:</Line>
          <Line>1356)</Line>
          <Line>at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)</Line>
          <Line>at org.eclipse.ui.internal.presentations.PresentablePart.</Line>
          <Line>setVisible(PresentablePart.java:122)</Line>
          <Line>at org.eclipse.ui.internal.presentations.DefaultPartPresentation.</Line>
          <Line>selectPart(DefaultPartPresentation.java:1111)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.</Line>
          <Line>java:946)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)</Line>
          <Line>at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)</Line>
          <Line>at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.</Line>
          <Line>java:59)</Line>
          <Line>at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:</Line>
          <Line>266)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:</Line>
          <Line>686)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:</Line>
          <Line>1591)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:</Line>
          <Line>1372)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Line>
          <Line>at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchConfigurer.</Line>
          <Line>restoreState(WorkbenchConfigurer.java:167)</Line>
          <Line>at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.</Line>
          <Line>java:652)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.</Line>
          <Line>java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:</Line>
          <Line>39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.</Line>
          <Line>invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="138">
        <Lines>
          <Line>- locked &lt;0x100417e8&gt; (a org.eclipse.osgi.framework.internal.core.BundleLoader)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>requireClass(BundleLoader.java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findRequiredClass(BundleLoader.java:914)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:399)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Line>
          <Line>- locked &lt;0x1003bd68&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at java.lang.Class.getDeclaredConstructors0(Native Method)</Line>
          <Line>at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)</Line>
          <Line>at java.lang.Class.getConstructor0(Class.java:1930)</Line>
          <Line>at java.lang.Class.getConstructor(Class.java:1027)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>internalDoPluginActivation(PluginDescriptor.java:403)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>doPluginActivation(PluginDescriptor.java:359)</Line>
          <Line>- locked &lt;0x100458a0&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)</Line>
          <Line>at org.eclipse.core.internal.plugins.PluginDescriptor.</Line>
          <Line>getPlugin(PluginDescriptor.java:328)</Line>
          <Line>at org.eclipse.core.internal.compatibility.PluginActivator.</Line>
          <Line>start(PluginActivator.java:47)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.</Line>
          <Line>run(BundleContextImpl.java:958)</Line>
          <Line>at java.security.AccessController.doPrivileged(Native Method)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>startActivator(BundleContextImpl.java:954)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleContextImpl.</Line>
          <Line>start(BundleContextImpl.java:937)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.</Line>
          <Line>java:421)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>start(AbstractBundle.java:293)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:110)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:402)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>loadClass(BundleLoader.java:307)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.</Line>
          <Line>java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.AbstractBundle.</Line>
          <Line>loadClass(AbstractBundle.java:1313)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:131)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:124)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:113)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.</Line>
          <Line>java:193)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:</Line>
          <Line>775)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:</Line>
          <Line>925)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:</Line>
          <Line>1364)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:</Line>
          <Line>1356)</Line>
          <Line>at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)</Line>
          <Line>at org.eclipse.ui.internal.presentations.PresentablePart.</Line>
          <Line>setVisible(PresentablePart.java:122)</Line>
          <Line>at org.eclipse.ui.internal.presentations.DefaultPartPresentation.</Line>
          <Line>selectPart(DefaultPartPresentation.java:1111)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.</Line>
          <Line>java:946)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)</Line>
          <Line>at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)</Line>
          <Line>at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.</Line>
          <Line>java:59)</Line>
          <Line>at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:</Line>
          <Line>266)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:</Line>
          <Line>686)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:</Line>
          <Line>1591)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:</Line>
          <Line>1372)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Line>
          <Line>at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchConfigurer.</Line>
          <Line>restoreState(WorkbenchConfigurer.java:167)</Line>
          <Line>at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.</Line>
          <Line>java:652)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.</Line>
          <Line>java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:</Line>
          <Line>39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.</Line>
          <Line>invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="121">
        <Lines>
          <Line>- locked &lt;0x10d413c0&gt; (a java.util.zip.Inflater)</Line>
          <Line>at java.util.zip.ZipFile.getInflater(ZipFile.java:260)</Line>
          <Line>- locked &lt;0x10d3bee0&gt; (a java.util.Vector)</Line>
          <Line>at java.util.zip.ZipFile.getInputStream(ZipFile.java:210)</Line>
          <Line>at java.util.zip.ZipFile.getInputStream(ZipFile.java:184)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.BundleEntry$ZipBundleEntry.</Line>
          <Line>getInputStream(BundleEntry.java:118)</Line>
          <Line>at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.</Line>
          <Line>findClassImpl(DefaultClassLoader.java:216)</Line>
          <Line>at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.</Line>
          <Line>findClass(DefaultClassLoader.java:172)</Line>
          <Line>- locked &lt;0x10d43a20&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>findLocalClass(AbstractClassLoader.java:220)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>basicFindLocalClass(EclipseClassLoader.java:135)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseClassLoader.</Line>
          <Line>findLocalClass(EclipseClassLoader.java:59)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findLocalClass(BundleLoader.java:371)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>requireClass(BundleLoader.java:336)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findRequiredClass(BundleLoader.java:909)</Line>
          <Line>at org.eclipse.osgi.framework.internal.core.BundleLoader.</Line>
          <Line>findClass(BundleLoader.java:399)</Line>
          <Line>at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.</Line>
          <Line>loadClass(AbstractClassLoader.java:93)</Line>
          <Line>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Line>
          <Line>at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Line>
          <Line>- locked &lt;0x10d43a98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)</Line>
          <Line>at java.lang.Class.getDeclaredConstructors0(Native Method)</Line>
          <Line>at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)</Line>
          <Line>at java.lang.Class.getConstructor0(Class.java:1930)</Line>
          <Line>at java.lang.Class.newInstance0(Class.java:278)</Line>
          <Line>at java.lang.Class.newInstance(Class.java:261)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:141)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:124)</Line>
          <Line>at org.eclipse.core.internal.registry.ConfigurationElement.</Line>
          <Line>createExecutableExtension(ConfigurationElement.java:113)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.</Line>
          <Line>java:193)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:</Line>
          <Line>775)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:</Line>
          <Line>925)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:</Line>
          <Line>1364)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:</Line>
          <Line>1356)</Line>
          <Line>at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)</Line>
          <Line>at org.eclipse.ui.internal.presentations.PresentablePart.</Line>
          <Line>setVisible(PresentablePart.java:122)</Line>
          <Line>at org.eclipse.ui.internal.presentations.DefaultPartPresentation.</Line>
          <Line>selectPart(DefaultPartPresentation.java:1111)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.</Line>
          <Line>java:946)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)</Line>
          <Line>at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)</Line>
          <Line>at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.</Line>
          <Line>java:59)</Line>
          <Line>at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:</Line>
          <Line>266)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:</Line>
          <Line>686)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:</Line>
          <Line>1591)</Line>
          <Line>at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:</Line>
          <Line>1372)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Line>
          <Line>at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Line>
          <Line>at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.</Line>
          <Line>java:615)</Line>
          <Line>at org.eclipse.core.runtime.Platform.run(Platform.java:747)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchConfigurer.</Line>
          <Line>restoreState(WorkbenchConfigurer.java:167)</Line>
          <Line>at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.</Line>
          <Line>java:652)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.</Line>
          <Line>java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:</Line>
          <Line>39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.</Line>
          <Line>invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Starting eclipse.exe, splashscreen appear, after a few seconds a box with an 
error message will be shown. After pressing OK the dialog box with the error 
message will be closed, but the splashscreen is still active. It has to be 
killed with the taskmanager.

I could repeat this many times, after different number of tries Eclipse starts.

OS : WinXP SP1 Prof
JDK : Sun 1.4.2_05-b04
Eclipse : 3.0.0 Build id: 200406251208

Logfiles :

An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x77F73905
Function=RtlSizeHeap+0x5EF
Library=C:\WINDOWS\System32\ntdll.dll

Current Java thread:
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadBundleActivator(AbstractBundle.java:153)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:933)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x100b0010&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x100b0348&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD5000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77B9C000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x78090000 - 0x78174000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.10.0_x-ww_f7fb5805\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x034F0000 - 0x034F7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03530000 - 0x03538000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03650000 - 0x03657000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 349K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  44% used [0x10010000, 0x10057618, 0x100b0000)
  from space 64K, 100% used [0x100b0000, 0x100c0000, 0x100c0000)
  to   space 64K,   0% used [0x100c0000, 0x100c0000, 0x100d0000)
 tenured generation   total 8912K, used 5989K [0x104f0000, 0x10da4000, 
0x14010000)
   the space 8912K,  67% used [0x104f0000, 0x10ac9788, 0x10ac9800, 0x10da4000)
 compacting perm gen  total 9728K, used 9648K [0x14010000, 0x14990000, 
0x18010000)
   the space 9728K,  99% used [0x14010000, 0x1497c0c0, 0x1497c200, 0x14990000)

Local Time = Tue Aug 10 08:06:01 2004
Elapsed Time = 13
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#



Another logfile : 

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x80C34A5
Function=JVM_RegisterPerfMethods+0x146F4
Library=C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll

Current Java thread:
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:539)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
defineClass(DefaultClassLoader.java:298)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
defineClass(EclipseClassLoader.java:223)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassImpl(DefaultClassLoader.java:281)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClass(DefaultClassLoader.java:172)
	- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
findLocalClass(AbstractClassLoader.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
basicFindLocalClass(EclipseClassLoader.java:135)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:73)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.jdt.core.JavaCore.initializeDefaultPluginPreferences(JavaCore.
java:2345)
	at org.eclipse.core.runtime.Plugin.
internalInitializeDefaultPluginPreferences(Plugin.java:411)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
applyRuntimeDefaults(DefaultPreferences.java:206)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
loadDefaults(DefaultPreferences.java:321)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
load(DefaultPreferences.java:317)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
create(EclipsePreferences.java:292)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
getChild(EclipsePreferences.java:381)
	- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.
DefaultPreferences)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
internalNode(EclipsePreferences.java:518)
	- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.
DefaultPreferences)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
node(DefaultPreferences.java:162)
	at org.eclipse.core.internal.preferences.PreferenceForwarder.
getDefaultPreferences(PreferenceForwarder.java:127)
	at org.eclipse.core.internal.preferences.PreferenceForwarder.
&lt;init&gt;(PreferenceForwarder.java:66)
	at org.eclipse.core.runtime.Plugin.getPluginPreferences(Plugin.java:330)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:3637)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10acbf98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x10acc090&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03360000 - 0x03444000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035E0000 - 0x035E7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 607K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  91% used [0x10010000, 0x100a3300, 0x100b0000)
  from space 64K,  29% used [0x100c0000, 0x100c4ae8, 0x100d0000)
  to   space 64K,   0% used [0x100b0000, 0x100b0000, 0x100c0000)
 tenured generation   total 8932K, used 6063K [0x104f0000, 0x10da9000, 
0x14010000)
   the space 8932K,  67% used [0x104f0000, 0x10adbd70, 0x10adbe00, 0x10da9000)
 compacting perm gen  total 9984K, used 9978K [0x14010000, 0x149d0000, 
0x18010000)
   the space 9984K,  99% used [0x14010000, 0x149ce860, 0x149cea00, 0x149d0000)

Local Time = Wed Aug 11 08:02:11 2004
Elapsed Time = 5
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#


Still another logfile :

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x80C34A5
Function=JVM_RegisterPerfMethods+0x146F4
Library=C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll

Current Java thread:
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.
&lt;clinit&gt;(IndexManager.java:43)
	at org.eclipse.jdt.internal.core.JavaModelManager.&lt;init&gt;(JavaModelManager.java:
511)
	at org.eclipse.jdt.internal.core.JavaModelManager.&lt;clinit&gt;(JavaModelManager.
java:489)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:3629)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10acbe90&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x10acbf88&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03360000 - 0x03444000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035E0000 - 0x035E7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 482K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  72% used [0x10010000, 0x10084068, 0x100b0000)
  from space 64K,  29% used [0x100c0000, 0x100c4a90, 0x100d0000)
  to   space 64K,   0% used [0x100b0000, 0x100b0000, 0x100c0000)
 tenured generation   total 8932K, used 6063K [0x104f0000, 0x10da9000, 
0x14010000)
   the space 8932K,  67% used [0x104f0000, 0x10adbd18, 0x10adbe00, 0x10da9000)
 compacting perm gen  total 9984K, used 9957K [0x14010000, 0x149d0000, 
0x18010000)
   the space 9984K,  99% used [0x14010000, 0x149c95f0, 0x149c9600, 0x149d0000)

Local Time = Wed Aug 11 07:57:15 2004
Elapsed Time = 5
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#
The second and third traces indicate errors in the VM, not the application.

The first trace looks strange, as the error seems to occur in java lib code.  
Moving report to osgi in case they've seen a dump like this before.

In the meantime, I would suggest trying a different VM since the one you're 
using is obviously having problems, as indicated by your second and third 
traces.  If doing this makes the first dump stop occurring also then please 
follow up here, thanks.

I run regularly on the same setup and never saw this. This is a VM bug.
Theoretically, no Java program should be able to crash the VM. You should report
this to Sun instead.

The only unusual thing I noticed in your setup is that Eclipse is not installed
in a directory called "eclipse". Instead it is installed in a directory called
"eclipse3". This is not supported and may cause you problems (I am not saying
this is the cause for this problem, just thought I would mention). If you need
to maintain multiple Eclipse installs at the same time, use
c:\programme\eclipse3\eclipse and c:\programme\eclipse21\eclipse (for instance)
instead. 

Some other things I would try:

- make sure you run Eclipse passing -vm c:\programme\j2sdk1.4.2_05\jre\bin\javaw.exe

- run Eclipse *once* passing -clean

Please add any further information you get on this problem to this PR. Closing
as works for me.
What do you mean "trying a different VM"? From an other vendor? Or an other 
release? Like J2SE 5.0 Beta?

I've moved Eclipse to C:\Programme\eclipse3\eclipse, as you suggested. Eclipse 
crushed again two times, know with some other errors.

First log:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x77F7381B
Function=RtlSizeHeap+0x505
Library=C:\WINDOWS\System32\ntdll.dll

Current Java thread:
	at java.util.zip.ZipFile.open(Native Method)
	at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:112)
	at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:128)
	at org.eclipse.osgi.framework.adaptor.core.BundleFile$ZipBundleFile.
open(BundleFile.java:311)
	at org.eclipse.osgi.framework.adaptor.core.BundleFile$ZipBundleFile.
&lt;init&gt;(BundleFile.java:133)
	at org.eclipse.osgi.framework.adaptor.core.AbstractFrameworkAdaptor.
createBundleFile(AbstractFrameworkAdaptor.java:399)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
getClasspath(DefaultClassLoader.java:139)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
addClassPathEntry(DefaultClassLoader.java:478)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassPathEntry(DefaultClassLoader.java:465)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findClassPathEntry(EclipseClassLoader.java:243)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
buildClasspath(DefaultClassLoader.java:436)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
initialize(DefaultClassLoader.java:70)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createBCL(BundleLoader.java:677)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createBCLPrevileged(BundleLoader.java:652)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createClassLoader(BundleLoader.java:350)
	- locked &lt;0x100417e8&gt; (a org.eclipse.osgi.framework.internal.core.BundleLoader)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x1003bd68&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x100458a0&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x02F20000 - 0x02F6E000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.swt.
win32_3.0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x02F70000 - 0x03054000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x031F0000 - 0x031F7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 1152K, used 330K [0x10010000, 0x10140000, 
0x104f0000)
  eden space 1088K,  24% used [0x10010000, 0x10052820, 0x10120000)
  from space 64K,  99% used [0x10130000, 0x1013fff8, 0x10140000)
  to   space 64K,   0% used [0x10120000, 0x10120000, 0x10130000)
 tenured generation   total 13976K, used 8660K [0x104f0000, 0x11296000, 
0x14010000)
   the space 13976K,  61% used [0x104f0000, 0x10d653b0, 0x10d65400, 0x11296000)
 compacting perm gen  total 9728K, used 9584K [0x14010000, 0x14990000, 
0x18010000)
   the space 9728K,  98% used [0x14010000, 0x1496c1c0, 0x1496c200, 0x14990000)

Local Time = Tue Aug 24 07:58:58 2004
Elapsed Time = 18
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#

Second log :


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x10000102
Function=[Unknown.]
Library=c:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
	at java.util.zip.Inflater.reset(Native Method)
	at java.util.zip.Inflater.reset(Inflater.java:279)
	- locked &lt;0x10d413c0&gt; (a java.util.zip.Inflater)
	at java.util.zip.ZipFile.getInflater(ZipFile.java:260)
	- locked &lt;0x10d3bee0&gt; (a java.util.Vector)
	at java.util.zip.ZipFile.getInputStream(ZipFile.java:210)
	at java.util.zip.ZipFile.getInputStream(ZipFile.java:184)
	at org.eclipse.osgi.framework.adaptor.core.BundleEntry$ZipBundleEntry.
getInputStream(BundleEntry.java:118)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassImpl(DefaultClassLoader.java:216)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClass(DefaultClassLoader.java:172)
	- locked &lt;0x10d43a20&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
findLocalClass(AbstractClassLoader.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
basicFindLocalClass(EclipseClassLoader.java:135)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:59)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:909)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10d43a98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:141)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	c:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	c:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	c:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	c:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	c:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	c:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EE0000 - 0x02EEF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02EF0000 - 0x02EF8000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03300000 - 0x0334E000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.swt.
win32_3.0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03350000 - 0x03434000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035D0000 - 0x035D7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x035F0000 - 0x035FB000 	C:\Programme\Gemeinsame 
Dateien\Logitech\Scrolling\LgMsgHk.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x03600000 - 0x03607000 	C:\Programme\Yahoo!\Messenger\idle.dll
0x03650000 - 0x03658000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03770000 - 0x03777000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 1088K, used 395K [0x10010000, 0x10130000, 
0x104f0000)
  eden space 1024K,  32% used [0x10010000, 0x10062c88, 0x10110000)
  from space 64K, 100% used [0x10120000, 0x10130000, 0x10130000)
  to   space 64K,   0% used [0x10110000, 0x10110000, 0x10120000)
 tenured generation   total 13540K, used 9211K [0x104f0000, 0x11229000, 
0x14010000)
   the space 13540K,  68% used [0x104f0000, 0x10deef58, 0x10def000, 0x11229000)
 compacting perm gen  total 11520K, used 11428K [0x14010000, 0x14b50000, 
0x18010000)
   the space 11520K,  99% used [0x14010000, 0x14b39368, 0x14b39400, 0x14b50000)

Local Time = Tue Aug 24 08:00:55 2004
Elapsed Time = 10
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#

Sorry, I mean "crashed again two times" :-)
You see, you are getting all sorts of random errors from the VM. Are you running
with -vm, as suggested (see comment 2)? That is really important.

I guess Grant was suggesting either other releases from the same vendor (1.4.1
or greater) or VMs from other vendors, if you have one available. If using -vm
does not work, I think even uninstalling and reinstalling the same Java VM could
be worth trying. I have seen users reporting problems of VM crashes when they
have for some reason a busted Java install, and less often, incompatible hardware.

I've checked my JDK installations and found two other version installed, removed 
it, reinstall the latest version (1.4.2_05-b04) and eclipse crashed again and 
again.

I will remove this JDK and try and older version (1.4.1).

I've used -vm, but eclipse crashed again and again....:-(</WithStack>
    <WithOutStack>Starting eclipse.exe, splashscreen appear, after a few seconds a box with an 
error message will be shown. After pressing OK the dialog box with the error 
message will be closed, but the splashscreen is still active. It has to be 
killed with the taskmanager.

I could repeat this many times, after different number of tries Eclipse starts.

OS : WinXP SP1 Prof
JDK : Sun 1.4.2_05-b04
Eclipse : 3.0.0 Build id: 200406251208

Logfiles :

An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x77F73905
Function=RtlSizeHeap+0x5EF
Library=C:\WINDOWS\System32\ntdll.dll

Current Java thread:
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadBundleActivator(AbstractBundle.java:153)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:933)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x100b0010&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x100b0348&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD5000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77B9C000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x78090000 - 0x78174000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.10.0_x-ww_f7fb5805\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x034F0000 - 0x034F7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03530000 - 0x03538000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03650000 - 0x03657000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 349K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  44% used [0x10010000, 0x10057618, 0x100b0000)
  from space 64K, 100% used [0x100b0000, 0x100c0000, 0x100c0000)
  to   space 64K,   0% used [0x100c0000, 0x100c0000, 0x100d0000)
 tenured generation   total 8912K, used 5989K [0x104f0000, 0x10da4000, 
0x14010000)
   the space 8912K,  67% used [0x104f0000, 0x10ac9788, 0x10ac9800, 0x10da4000)
 compacting perm gen  total 9728K, used 9648K [0x14010000, 0x14990000, 
0x18010000)
   the space 9728K,  99% used [0x14010000, 0x1497c0c0, 0x1497c200, 0x14990000)

Local Time = Tue Aug 10 08:06:01 2004
Elapsed Time = 13
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#



Another logfile : 

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x80C34A5
Function=JVM_RegisterPerfMethods+0x146F4
Library=C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll

Current Java thread:
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:539)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
defineClass(DefaultClassLoader.java:298)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
defineClass(EclipseClassLoader.java:223)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassImpl(DefaultClassLoader.java:281)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClass(DefaultClassLoader.java:172)
	- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
findLocalClass(AbstractClassLoader.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
basicFindLocalClass(EclipseClassLoader.java:135)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:73)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x100c0000&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.jdt.core.JavaCore.initializeDefaultPluginPreferences(JavaCore.
java:2345)
	at org.eclipse.core.runtime.Plugin.
internalInitializeDefaultPluginPreferences(Plugin.java:411)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
applyRuntimeDefaults(DefaultPreferences.java:206)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
loadDefaults(DefaultPreferences.java:321)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
load(DefaultPreferences.java:317)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
create(EclipsePreferences.java:292)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
getChild(EclipsePreferences.java:381)
	- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.
DefaultPreferences)
	at org.eclipse.core.internal.preferences.EclipsePreferences.
internalNode(EclipsePreferences.java:518)
	- locked &lt;0x105c5b30&gt; (a org.eclipse.core.internal.preferences.
DefaultPreferences)
	at org.eclipse.core.internal.preferences.DefaultPreferences.
node(DefaultPreferences.java:162)
	at org.eclipse.core.internal.preferences.PreferenceForwarder.
getDefaultPreferences(PreferenceForwarder.java:127)
	at org.eclipse.core.internal.preferences.PreferenceForwarder.
&lt;init&gt;(PreferenceForwarder.java:66)
	at org.eclipse.core.runtime.Plugin.getPluginPreferences(Plugin.java:330)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:3637)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10acbf98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x10acc090&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03360000 - 0x03444000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035E0000 - 0x035E7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 607K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  91% used [0x10010000, 0x100a3300, 0x100b0000)
  from space 64K,  29% used [0x100c0000, 0x100c4ae8, 0x100d0000)
  to   space 64K,   0% used [0x100b0000, 0x100b0000, 0x100c0000)
 tenured generation   total 8932K, used 6063K [0x104f0000, 0x10da9000, 
0x14010000)
   the space 8932K,  67% used [0x104f0000, 0x10adbd70, 0x10adbe00, 0x10da9000)
 compacting perm gen  total 9984K, used 9978K [0x14010000, 0x149d0000, 
0x18010000)
   the space 9984K,  99% used [0x14010000, 0x149ce860, 0x149cea00, 0x149d0000)

Local Time = Wed Aug 11 08:02:11 2004
Elapsed Time = 5
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#


Still another logfile :

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x80C34A5
Function=JVM_RegisterPerfMethods+0x146F4
Library=C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll

Current Java thread:
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.
&lt;clinit&gt;(IndexManager.java:43)
	at org.eclipse.jdt.internal.core.JavaModelManager.&lt;init&gt;(JavaModelManager.java:
511)
	at org.eclipse.jdt.internal.core.JavaModelManager.&lt;clinit&gt;(JavaModelManager.
java:489)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:3629)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10acbe90&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x10acbf88&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03310000 - 0x0335E000 	C:\Programme\Eclipse3\plugins\org.eclipse.swt.win32_3.
0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03360000 - 0x03444000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035E0000 - 0x035E7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 704K, used 482K [0x10010000, 0x100d0000, 0x104f0000)
  eden space 640K,  72% used [0x10010000, 0x10084068, 0x100b0000)
  from space 64K,  29% used [0x100c0000, 0x100c4a90, 0x100d0000)
  to   space 64K,   0% used [0x100b0000, 0x100b0000, 0x100c0000)
 tenured generation   total 8932K, used 6063K [0x104f0000, 0x10da9000, 
0x14010000)
   the space 8932K,  67% used [0x104f0000, 0x10adbd18, 0x10adbe00, 0x10da9000)
 compacting perm gen  total 9984K, used 9957K [0x14010000, 0x149d0000, 
0x18010000)
   the space 9984K,  99% used [0x14010000, 0x149c95f0, 0x149c9600, 0x149d0000)

Local Time = Wed Aug 11 07:57:15 2004
Elapsed Time = 5
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#
The second and third traces indicate errors in the VM, not the application.

The first trace looks strange, as the error seems to occur in java lib code.  
Moving report to osgi in case they've seen a dump like this before.

In the meantime, I would suggest trying a different VM since the one you're 
using is obviously having problems, as indicated by your second and third 
traces.  If doing this makes the first dump stop occurring also then please 
follow up here, thanks.

I run regularly on the same setup and never saw this. This is a VM bug.
Theoretically, no Java program should be able to crash the VM. You should report
this to Sun instead.

The only unusual thing I noticed in your setup is that Eclipse is not installed
in a directory called "eclipse". Instead it is installed in a directory called
"eclipse3". This is not supported and may cause you problems (I am not saying
this is the cause for this problem, just thought I would mention). If you need
to maintain multiple Eclipse installs at the same time, use
c:\programme\eclipse3\eclipse and c:\programme\eclipse21\eclipse (for instance)
instead. 

Some other things I would try:

- make sure you run Eclipse passing -vm c:\programme\j2sdk1.4.2_05\jre\bin\javaw.exe

- run Eclipse *once* passing -clean

Please add any further information you get on this problem to this PR. Closing
as works for me.
What do you mean "trying a different VM"? From an other vendor? Or an other 
release? Like J2SE 5.0 Beta?

I've moved Eclipse to C:\Programme\eclipse3\eclipse, as you suggested. Eclipse 
crushed again two times, know with some other errors.

First log:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x77F7381B
Function=RtlSizeHeap+0x505
Library=C:\WINDOWS\System32\ntdll.dll

Current Java thread:
	at java.util.zip.ZipFile.open(Native Method)
	at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:112)
	at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:128)
	at org.eclipse.osgi.framework.adaptor.core.BundleFile$ZipBundleFile.
open(BundleFile.java:311)
	at org.eclipse.osgi.framework.adaptor.core.BundleFile$ZipBundleFile.
&lt;init&gt;(BundleFile.java:133)
	at org.eclipse.osgi.framework.adaptor.core.AbstractFrameworkAdaptor.
createBundleFile(AbstractFrameworkAdaptor.java:399)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
getClasspath(DefaultClassLoader.java:139)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
addClassPathEntry(DefaultClassLoader.java:478)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassPathEntry(DefaultClassLoader.java:465)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findClassPathEntry(EclipseClassLoader.java:243)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
buildClasspath(DefaultClassLoader.java:436)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
initialize(DefaultClassLoader.java:70)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createBCL(BundleLoader.java:677)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createBCLPrevileged(BundleLoader.java:652)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
createClassLoader(BundleLoader.java:350)
	- locked &lt;0x100417e8&gt; (a org.eclipse.osgi.framework.internal.core.BundleLoader)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x1003bd68&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.getConstructor(Class.java:1027)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
internalDoPluginActivation(PluginDescriptor.java:403)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
doPluginActivation(PluginDescriptor.java:359)
	- locked &lt;0x100458a0&gt; (a org.eclipse.core.internal.plugins.PluginDescriptor)
	at org.eclipse.core.internal.plugins.PluginDescriptor.
getPlugin(PluginDescriptor.java:328)
	at org.eclipse.core.internal.compatibility.PluginActivator.
start(PluginActivator.java:47)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.
run(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
startActivator(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.
start(BundleContextImpl.java:937)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.
java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
start(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:402)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
loadClass(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.
java:336)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.
loadClass(AbstractBundle.java:1313)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:131)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	C:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	C:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	C:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	C:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	C:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02EFF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02F00000 - 0x02F08000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x02F20000 - 0x02F6E000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.swt.
win32_3.0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x02F70000 - 0x03054000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x031F0000 - 0x031F7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x03620000 - 0x03628000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03740000 - 0x03747000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 1152K, used 330K [0x10010000, 0x10140000, 
0x104f0000)
  eden space 1088K,  24% used [0x10010000, 0x10052820, 0x10120000)
  from space 64K,  99% used [0x10130000, 0x1013fff8, 0x10140000)
  to   space 64K,   0% used [0x10120000, 0x10120000, 0x10130000)
 tenured generation   total 13976K, used 8660K [0x104f0000, 0x11296000, 
0x14010000)
   the space 13976K,  61% used [0x104f0000, 0x10d653b0, 0x10d65400, 0x11296000)
 compacting perm gen  total 9728K, used 9584K [0x14010000, 0x14990000, 
0x18010000)
   the space 9728K,  98% used [0x14010000, 0x1496c1c0, 0x1496c200, 0x14990000)

Local Time = Tue Aug 24 07:58:58 2004
Elapsed Time = 18
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#

Second log :


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at 
PC=0x10000102
Function=[Unknown.]
Library=c:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
	at java.util.zip.Inflater.reset(Native Method)
	at java.util.zip.Inflater.reset(Inflater.java:279)
	- locked &lt;0x10d413c0&gt; (a java.util.zip.Inflater)
	at java.util.zip.ZipFile.getInflater(ZipFile.java:260)
	- locked &lt;0x10d3bee0&gt; (a java.util.Vector)
	at java.util.zip.ZipFile.getInputStream(ZipFile.java:210)
	at java.util.zip.ZipFile.getInputStream(ZipFile.java:184)
	at org.eclipse.osgi.framework.adaptor.core.BundleEntry$ZipBundleEntry.
getInputStream(BundleEntry.java:118)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClassImpl(DefaultClassLoader.java:216)
	at org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.
findClass(DefaultClassLoader.java:172)
	- locked &lt;0x10d43a20&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
findLocalClass(AbstractClassLoader.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
basicFindLocalClass(EclipseClassLoader.java:135)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.
findLocalClass(EclipseClassLoader.java:59)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findLocalClass(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
requireClass(BundleLoader.java:336)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findRequiredClass(BundleLoader.java:909)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.
findClass(BundleLoader.java:399)
	at org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.
loadClass(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	- locked &lt;0x10d43a98&gt; (a org.eclipse.core.runtime.adaptor.EclipseClassLoader)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:141)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:124)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:113)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:196)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:193)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:790)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:788)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
775)
	at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:766)
	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:951)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:
925)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:914)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:
1364)
	at org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:
1356)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:319)
	at org.eclipse.ui.internal.presentations.PresentablePart.
setVisible(PresentablePart.java:122)
	at org.eclipse.ui.internal.presentations.DefaultPartPresentation.
selectPart(DefaultPartPresentation.java:1111)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.
java:946)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:921)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1020)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:290)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:110)
	at org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
java:59)
	at org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:
266)
	at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:697)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:
686)
	at org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:
1591)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:877)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2427)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:
1372)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
	at org.eclipse.ui.internal.WorkbenchConfigurer.
restoreState(WorkbenchConfigurer.java:167)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.
java:652)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
0x00400000 - 0x0040B000 	c:\Programme\j2sdk1.4.2_05\bin\javaw.exe
0x77F40000 - 0x77FEE000 	C:\WINDOWS\System32\ntdll.dll
0x77E40000 - 0x77F38000 	C:\WINDOWS\system32\kernel32.dll
0x77DA0000 - 0x77E3C000 	C:\WINDOWS\system32\ADVAPI32.dll
0x78000000 - 0x78087000 	C:\WINDOWS\system32\RPCRT4.dll
0x77D10000 - 0x77D9C000 	C:\WINDOWS\system32\USER32.dll
0x7E180000 - 0x7E1C1000 	C:\WINDOWS\system32\GDI32.dll
0x77BE0000 - 0x77C33000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x08139000 	c:\Programme\j2sdk1.4.2_05\jre\bin\client\jvm.dll
0x76AF0000 - 0x76B1D000 	C:\WINDOWS\System32\WINMM.dll
0x10000000 - 0x10007000 	c:\Programme\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00820000 - 0x0082E000 	c:\Programme\j2sdk1.4.2_05\jre\bin\verify.dll
0x00830000 - 0x00849000 	c:\Programme\j2sdk1.4.2_05\jre\bin\java.dll
0x00850000 - 0x0085D000 	c:\Programme\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EE0000 - 0x02EEF000 	C:\Programme\j2sdk1.4.2_05\jre\bin\net.dll
0x71A10000 - 0x71A25000 	C:\WINDOWS\System32\WS2_32.dll
0x71A00000 - 0x71A08000 	C:\WINDOWS\System32\WS2HELP.dll
0x02EF0000 - 0x02EF8000 	C:\Programme\j2sdk1.4.2_05\jre\bin\nio.dll
0x03300000 - 0x0334E000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.swt.
win32_3.0.0\os\win32\x86\swt-win32-3062.dll
0x7CCC0000 - 0x7CDE4000 	C:\WINDOWS\system32\ole32.dll
0x77310000 - 0x7739B000 	C:\WINDOWS\system32\COMCTL32.dll
0x76350000 - 0x76396000 	C:\WINDOWS\system32\comdlg32.dll
0x70A70000 - 0x70AD4000 	C:\WINDOWS\system32\SHLWAPI.dll
0x773A0000 - 0x77BA4000 	C:\WINDOWS\system32\SHELL32.dll
0x770F0000 - 0x7717B000 	C:\WINDOWS\system32\OLEAUT32.dll
0x76330000 - 0x7634C000 	C:\WINDOWS\System32\IMM32.dll
0x72F10000 - 0x72F6A000 	C:\WINDOWS\System32\USP10.dll
0x03350000 - 0x03434000 	C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-
Controls_6595b64144ccf1df_6.0.2600.1515_x-ww_7bb98b8a\comctl32.dll
0x5B0F0000 - 0x5B124000 	C:\WINDOWS\System32\uxtheme.dll
0x035D0000 - 0x035D7000 	C:\Programme\Logitech\MouseWare\System\LgWndHk.dll
0x035F0000 - 0x035FB000 	C:\Programme\Gemeinsame 
Dateien\Logitech\Scrolling\LgMsgHk.dll
0x76020000 - 0x76081000 	C:\WINDOWS\System32\MSVCP60.dll
0x03600000 - 0x03607000 	C:\Programme\Yahoo!\Messenger\idle.dll
0x03650000 - 0x03658000 	C:\Programme\Eclipse3\eclipse\plugins\org.eclipse.core.
resources.win32_3.0.0\os\win32\x86\core_2_1_0b.dll
0x03770000 - 0x03777000 	C:\Programme\Logitech\iTouch\iTchHk.dll
0x74C00000 - 0x74C2C000 	C:\WINDOWS\System32\oleacc.dll
0x76C50000 - 0x76C72000 	C:\WINDOWS\system32\imagehlp.dll
0x6DA00000 - 0x6DA7D000 	C:\WINDOWS\system32\DBGHELP.dll
0x77BD0000 - 0x77BD7000 	C:\WINDOWS\system32\VERSION.dll
0x76BB0000 - 0x76BBB000 	C:\WINDOWS\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 1088K, used 395K [0x10010000, 0x10130000, 
0x104f0000)
  eden space 1024K,  32% used [0x10010000, 0x10062c88, 0x10110000)
  from space 64K, 100% used [0x10120000, 0x10130000, 0x10130000)
  to   space 64K,   0% used [0x10110000, 0x10110000, 0x10120000)
 tenured generation   total 13540K, used 9211K [0x104f0000, 0x11229000, 
0x14010000)
   the space 13540K,  68% used [0x104f0000, 0x10deef58, 0x10def000, 0x11229000)
 compacting perm gen  total 11520K, used 11428K [0x14010000, 0x14b50000, 
0x18010000)
   the space 11520K,  99% used [0x14010000, 0x14b39368, 0x14b39400, 0x14b50000)

Local Time = Tue Aug 24 08:00:55 2004
Elapsed Time = 10
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#

Sorry, I mean "crashed again two times" :-)
You see, you are getting all sorts of random errors from the VM. Are you running
with -vm, as suggested (see comment 2)? That is really important.

I guess Grant was suggesting either other releases from the same vendor (1.4.1
or greater) or VMs from other vendors, if you have one available. If using -vm
does not work, I think even uninstalling and reinstalling the same Java VM could
be worth trying. I have seen users reporting problems of VM crashes when they
have for some reason a busted Java install, and less often, incompatible hardware.

I've checked my JDK installations and found two other version installed, removed 
it, reinstall the latest version (1.4.2_05-b04) and eclipse crashed again and 
again.

I will remove this JDK and try and older version (1.4.1).

I've used -vm, but eclipse crashed again and again....:-(</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71760" />
    <CreationDate amount="2004-08-11 05:37:00 -0400" />
    <DupId amount="71570" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Button tooltips don't show up in maximized, undecorated shells</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="import">
        <location start="197" end="223" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="224" end="256" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="257" end="290" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="292" end="923" />
        <code>public class SWTTooltipBugTestCase {
	private static Shell shell;

	public static void main(String args[]) {
		Display display = new Display();
		shell = new Shell(display, SWT.NONE);

		shell.setLayout(new GridLayout());
		Button button = new Button(shell, SWT.PUSH);
		button.setText("Maximize");
		button.setToolTipText("Push to maximize");
		button.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event event) {
				shell.setMaximized(!shell.getMaximized());
			}
		});

		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you have an undecorated shell (i.e. without a frame, defined with the
SWT_NONE style) and the shell is maximized, its controls' tooltips are no longer
shown. Consider the following test case:

import org.eclipse.swt.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;

public class SWTTooltipBugTestCase {
	private static Shell shell;

	public static void main(String args[]) {
		Display display = new Display();
		shell = new Shell(display, SWT.NONE);

		shell.setLayout(new GridLayout());
		Button button = new Button(shell, SWT.PUSH);
		button.setText("Maximize");
		button.setToolTipText("Push to maximize");
		button.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event event) {
				shell.setMaximized(!shell.getMaximized());
			}
		});

		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}

At start, the button's tooltip is shown correctly; if you miximize the shell by
clicking the button, the tooltip is no longer shown; if you restore the shell's
size by clicking the button again, the tooltip is shown again


*** This bug has been marked as a duplicate of 71570 ***</WithStack>
    <WithOutStack>When you have an undecorated shell (i.e. without a frame, defined with the
SWT_NONE style) and the shell is maximized, its controls' tooltips are no longer
shown. Consider the following test case:

import org.eclipse.swt.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;

public class SWTTooltipBugTestCase {
	private static Shell shell;

	public static void main(String args[]) {
		Display display = new Display();
		shell = new Shell(display, SWT.NONE);

		shell.setLayout(new GridLayout());
		Button button = new Button(shell, SWT.PUSH);
		button.setText("Maximize");
		button.setToolTipText("Push to maximize");
		button.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event event) {
				shell.setMaximized(!shell.getMaximized());
			}
		});

		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
	}
}

At start, the button's tooltip is shown correctly; if you miximize the shell by
clicking the button, the tooltip is no longer shown; if you restore the shell's
size by clicking the button again, the tooltip is shown again


*** This bug has been marked as a duplicate of 71570 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71761" />
    <CreationDate amount="2004-08-11 05:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[import rewrite] ImportRewrite should let me add explicit import to existing on demand import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>ImportRewrite is too smart for me. In order to fix 71707, I need to add an
explicit import p.A to a CU with an existing import p.* (to avoid hiding of
references to "A" in an existing CU "pack.User" when a new type "A" is added to
package "pack").

setFindAmbiguosImports() and setFilterImplicitImports() don't allow me to
configure this behavior - the added import p.A is always swallowed when p.*
already exists. setFindAmbiguosImports(true) doesn't work in my use case, since
the ambiguity is only to be introduced by the refactoring.
We should look at this during 3.8. Paste is also not working as expected and therefore the additional search to do the conflict resolution - which costs time (see e.g. bug 343837) - is useless.
setFindAmbiguosImports(boolean) also needs to get better Javadoc.
If you plan to include a fix for this in 3.8 M7, please adjust the
target suitably, so it becomes easier to track.
Actually this seems to work fine in JDT/Core.
ImportRewrite doesn't expose the API setFindAmbiguosImports(), but always does 'find ambiguous imports'. It does seem to work fine now.
Created attachment 213326
Test case patch

Test patch to confirm that problem mentioned in comment 0 works fine now.
The problem is that pack1.A doesn't exist in our use cases. At the time we call 'imports.addImport("pack2.A");', the conflict with pack1.A is not yet there. But after the refactoring is executed, there will be a pack1.A, so the explicit 'import pack2.A;' will be necessary.

To reproduce in your test case, comment out the line 'pack1.createCompilationUnit("A.java", ...'.

To solve the problem, we somehow need to inject knowledge about the soon-to-exist "pack1.A" into ImportRewriteAnalyzer#evaluateStarImportConflicts(..). At the end of this method, we have to iterate over the foundTypes to check whether one of the simpleNames is going to be available in any of the other packages.

I first thought we could use an ImportRewriteContext to let the client decide this, but then I realized that the context is used to configure behavior on addImport(..), but it's not used when evaluating star imports.

I think we need new API in ImportRewrite to solve this, e.g. a callback parameter for rewriteImports(..) that tells whether a type is found or not.
&gt; I think we need new API in ImportRewrite to solve this, e.g. a callback
&gt; parameter for rewriteImports(..) that tells whether a type is found or not.

Or we could store this information when adding imports, e.g. by having the ImportRewriteContext return a new RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT which prevents the given type from being star-imported.
(In reply to comment #7)
&gt; &gt; I think we need new API in ImportRewrite to solve this, e.g. a callback
&gt; &gt; parameter for rewriteImports(..) that tells whether a type is found or not.
&gt; 
&gt; Or we could store this information when adding imports, e.g. by having the
&gt; ImportRewriteContext return a new RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT which
&gt; prevents the given type from being star-imported.
Yes, this should be good approach. Considering that we are past the API freeze, do you want this in 3.8?
Let's defer this. Stability of import rewrite is paramount, and the blocking bugs didn't get much attention and were both filed by (former) JDT committers.
Markus, I am thinking of moving this out of 4.3. Do you have any objections?
Not a top priority, moving out of 4.3.
I'm adding this functionality to ImportRewriteAnalyzer as part of my work on it, and adding the new constant ImportRewriteContext.RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT that Markus suggested.
(In reply to John Glassmyer from comment #12)
&gt; I'm adding this functionality to ImportRewriteAnalyzer as part of my work on
&gt; it, and adding the new constant
&gt; ImportRewriteContext.RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT that Markus
&gt; suggested.

So, can we assign this bug to you John?
(In reply to Dani Megert from comment #13)
&gt; So, can we assign this bug to you John?

Yes.</WithStack>
    <WithOutStack>ImportRewrite is too smart for me. In order to fix 71707, I need to add an
explicit import p.A to a CU with an existing import p.* (to avoid hiding of
references to "A" in an existing CU "pack.User" when a new type "A" is added to
package "pack").

setFindAmbiguosImports() and setFilterImplicitImports() don't allow me to
configure this behavior - the added import p.A is always swallowed when p.*
already exists. setFindAmbiguosImports(true) doesn't work in my use case, since
the ambiguity is only to be introduced by the refactoring.
We should look at this during 3.8. Paste is also not working as expected and therefore the additional search to do the conflict resolution - which costs time (see e.g. bug 343837) - is useless.
setFindAmbiguosImports(boolean) also needs to get better Javadoc.
If you plan to include a fix for this in 3.8 M7, please adjust the
target suitably, so it becomes easier to track.
Actually this seems to work fine in JDT/Core.
ImportRewrite doesn't expose the API setFindAmbiguosImports(), but always does 'find ambiguous imports'. It does seem to work fine now.
Created attachment 213326
Test case patch

Test patch to confirm that problem mentioned in comment 0 works fine now.
The problem is that pack1.A doesn't exist in our use cases. At the time we call 'imports.addImport("pack2.A");', the conflict with pack1.A is not yet there. But after the refactoring is executed, there will be a pack1.A, so the explicit 'import pack2.A;' will be necessary.

To reproduce in your test case, comment out the line 'pack1.createCompilationUnit("A.java", ...'.

To solve the problem, we somehow need to inject knowledge about the soon-to-exist "pack1.A" into ImportRewriteAnalyzer#evaluateStarImportConflicts(..). At the end of this method, we have to iterate over the foundTypes to check whether one of the simpleNames is going to be available in any of the other packages.

I first thought we could use an ImportRewriteContext to let the client decide this, but then I realized that the context is used to configure behavior on addImport(..), but it's not used when evaluating star imports.

I think we need new API in ImportRewrite to solve this, e.g. a callback parameter for rewriteImports(..) that tells whether a type is found or not.
&gt; I think we need new API in ImportRewrite to solve this, e.g. a callback
&gt; parameter for rewriteImports(..) that tells whether a type is found or not.

Or we could store this information when adding imports, e.g. by having the ImportRewriteContext return a new RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT which prevents the given type from being star-imported.
(In reply to comment #7)
&gt; &gt; I think we need new API in ImportRewrite to solve this, e.g. a callback
&gt; &gt; parameter for rewriteImports(..) that tells whether a type is found or not.
&gt; 
&gt; Or we could store this information when adding imports, e.g. by having the
&gt; ImportRewriteContext return a new RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT which
&gt; prevents the given type from being star-imported.
Yes, this should be good approach. Considering that we are past the API freeze, do you want this in 3.8?
Let's defer this. Stability of import rewrite is paramount, and the blocking bugs didn't get much attention and were both filed by (former) JDT committers.
Markus, I am thinking of moving this out of 4.3. Do you have any objections?
Not a top priority, moving out of 4.3.
I'm adding this functionality to ImportRewriteAnalyzer as part of my work on it, and adding the new constant ImportRewriteContext.RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT that Markus suggested.
(In reply to John Glassmyer from comment #12)
&gt; I'm adding this functionality to ImportRewriteAnalyzer as part of my work on
&gt; it, and adding the new constant
&gt; ImportRewriteContext.RES_NAME_UNKNOWN_NEEDS_EXPLICIT_IMPORT that Markus
&gt; suggested.

So, can we assign this bug to you John?
(In reply to Dani Megert from comment #13)
&gt; So, can we assign this bug to you John?

Yes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71762" />
    <CreationDate amount="2004-08-11 05:46:00 -0400" />
    <DupId amount="48231" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>"Extract Local Variable" refactoring fails inside loop without braces.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="186" end="280" />
        <code>private void method() {
    for (int i = 0; i &lt; 5; i++)
      System.out.println(i * i);
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="365" end="488" />
        <code>private void method() {
    int isquared = i * i;
    for (int i = 0; i &lt; 5; i++)
      System.out.println(isquared);
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If the "Extract Local Variable" refactoring is used inside a loop with a single
statement and omitted braces, the recatoring fails or results in incorrect code
when forced to.

Before:

  private void method() {
    for (int i = 0; i &lt; 5; i++)
      System.out.println(i * i);
  }

After: 
(the "i * i" expression was extracted into the local variable "isquared")

  private void method() {
    int isquared = i * i;
    for (int i = 0; i &lt; 5; i++)
      System.out.println(isquared);
  }
Move to JDT/UI


*** This bug has been marked as a duplicate of 48231 ***</WithStack>
    <WithOutStack>If the "Extract Local Variable" refactoring is used inside a loop with a single
statement and omitted braces, the recatoring fails or results in incorrect code
when forced to.

Before:

  private void method() {
    for (int i = 0; i &lt; 5; i++)
      System.out.println(i * i);
  }

After: 
(the "i * i" expression was extracted into the local variable "isquared")

  private void method() {
    int isquared = i * i;
    for (int i = 0; i &lt; 5; i++)
      System.out.println(isquared);
  }
Move to JDT/UI


*** This bug has been marked as a duplicate of 48231 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71763" />
    <CreationDate amount="2004-08-11 06:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[imports on paste] should check for copied inner types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="class">
        <location start="74" end="102" />
        <code>private class InnerClass {}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="103" end="144" />
        <code>private void foo() { new InnerClass(); }</code>
      </source_code>
      <source_code type="import">
        <location start="289" end="320" />
        <code>import OuterClass1.InnerClass;</code>
      </source_code>
      <source_code type="class">
        <location start="350" end="378" />
        <code>private class InnerClass {}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="379" end="420" />
        <code>private void foo() { new InnerClass(); }</code>
      </source_code>
      <source_code type="class">
        <location start="523" end="551" />
        <code>private class InnerClass {}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="552" end="593" />
        <code>private void foo() { new InnerClass(); }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Consider these two files:

OuterClass1.java:

public class OuterClass1
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

OuterClass2.java:

public class OuterClass2
	{
	}


After pasting two lines from OuterClass1 into OuterClass2 the resulting
OuterClass2 is:

import OuterClass1.InnerClass;

public class OuterClass2
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

while the expected result (we're pasting InnerClass too!) should be:

public class OuterClass2
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

I understand that Eclipse tries to make sure the code refrences the same class
but it should detect that code for InnerClass is pasted as well and thus the
author most probably wants it to use local OuterClass2.InnerClass class instead
of OuterClass1.InnerClass
*** Bug 83828 has been marked as a duplicate of this bug. ***
In addition, the import statement is bogus code in the first place. You can't
import a member type (at least, eclipse gives me an error if I try).
You can import a member type, as long as it not inside a private outer type.

e.g. import java.util.Map.Entry;</WithStack>
    <WithOutStack>Consider these two files:

OuterClass1.java:

public class OuterClass1
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

OuterClass2.java:

public class OuterClass2
	{
	}


After pasting two lines from OuterClass1 into OuterClass2 the resulting
OuterClass2 is:

import OuterClass1.InnerClass;

public class OuterClass2
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

while the expected result (we're pasting InnerClass too!) should be:

public class OuterClass2
	{
	private class InnerClass {}
	private void foo() { new InnerClass(); }
	}

I understand that Eclipse tries to make sure the code refrences the same class
but it should detect that code for InnerClass is pasted as well and thus the
author most probably wants it to use local OuterClass2.InnerClass class instead
of OuterClass1.InnerClass
*** Bug 83828 has been marked as a duplicate of this bug. ***
In addition, the import statement is bogus code in the first place. You can't
import a member type (at least, eclipse gives me an error if I try).
You can import a member type, as long as it not inside a private outer type.

e.g. import java.util.Map.Entry;</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71764" />
    <CreationDate amount="2004-08-11 06:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[5.0] Mark Occurrences support  for generic parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>It currently marks all generic type references.
Created attachment 13870
Screenshot of current occurrences marking
Created attachment 13875
Type bound and all references are highlighted

Maybe the same or another problem.
works fine in I20050119</WithStack>
    <WithOutStack>It currently marks all generic type references.
Created attachment 13870
Screenshot of current occurrences marking
Created attachment 13875
Type bound and all references are highlighted

Maybe the same or another problem.
works fine in I20050119</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71765" />
    <CreationDate amount="2004-08-11 06:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Look &amp; Feel of readonly text fields is problematic on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="3739" end="3818" />
        <code>text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4130" end="4209" />
        <code>&gt; text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>3.0

Eclipse uses readonly text fields as an emulation for "accessible labels", that is labels
into which you can navigate by tabbing and where you select and copy the text to the clipboard.

This approach reveals the follwoing problems on Mac OS X:

- a readonly text field does not have the same background as a Label.
  It still looks like a field where you can enter text (bugs #39661, #68713, #34547)
  This invalidates Eclipse's use of readonly fields as "accessible labels".
  See first attached screenshot for how Apple implements accessible labels in the XCode IDE.
  
- tabbing into readonly fields is questionable:
  example: you can tab into a wizard's header description field (see bug #65322).
  Apple does not support tabbing into text labels even if the text can be selected
  with the mouse or keyboard. See property dialog in XCode IDE.
  (Even turning on the "Full Keyboard Access" option in the Keyboard &amp; Mouse
  preference pane doesn't enable tabbing into text labels).
  
- showing a focus ring for readonly text fields is misleading (bugs #33241)
  See any Mac application that supports selectable/copyable text labels
  (Apple XCode, MS Entourage): they never show a focus ring.
  

In addition readonly text fields have another problem on their own:

- a readonly field has no cue that it is readonly (bugs #32471, #32944)
Created attachment 13871
readonly text fields in XCode IDE
*** Bug 39661 has been marked as a duplicate of this bug. ***
*** Bug 68713 has been marked as a duplicate of this bug. ***
*** Bug 34547 has been marked as a duplicate of this bug. ***
*** Bug 33241 has been marked as a duplicate of this bug. ***
The accessible labels cause similar problems on Linux/GTK+ as they look out of
place on themes with pixmap backgrounds (I thought there was already a bug about
this but I cannot find it).  GTK+ 2.4 added support for keynav into labels using
Ctrl-Tab for a11y.  If the Mac has no way to tab into a label, how do screen
readers work?
Billy, may be bug #39661 is the one you are looking for. It started as a linux bug and was closed and 
later reopened for Mac OS X.
Need to determine how native Windows applications do this.
*** Bug 74716 has been marked as a duplicate of this bug. ***
SSQ, could we use the fact that the text fields of this type are SWT.READ_ONLY 
and created without a border to indicate that they are really "accessible 
labels".  At least on the Mac, we could draw them the same way that XCode does.
I think we should make our TNXObject based Text control behave the same way as 
the single line read only text control that we are proposing to use in the 
Spinner control.  SSQ?
*** Bug 66994 has been marked as a duplicate of this bug. ***
*** Bug 75566 has been marked as a duplicate of this bug. ***
What Carbon APIs are being leveraged to create the readonly text fields in Eclipse?

Apple's Human Interface Guildelines provide guidance on how to display static text (active/dimmed/
selectable) as well as text fields in Mac OS X.  For reference see:  http://developer.apple.com/
documentation/UserExperience/Conceptual/OSXHIGuidelines/index.html
&gt;&gt;I think we should make our TNXObject based Text control behave
&gt;&gt;the same way as the single line read only text control that we
&gt;&gt;are proposing to use in the Spinner control.  SSQ?
Under HIView, we are using the HITextView control rather than the TXNObject.  We are no longer drawing the focus ring.  However, you can still tab to the field but you get no indication that focus is in the control (bad).

I'm not sure we should change this for accessibility reasons.  Your thoughts?
Readonly text fields are still a sore point in the SWT API.

The commonly used solution is a Text widget with SWT.READ_ONLY and
  text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));

Since on Windows, a READ_ONLY text gets a gray background for free, most users forget to hack the bg color. On GTK and Cocoa, the bg stays white.
(In reply to comment #17)
&gt; Readonly text fields are still a sore point in the SWT API.
&gt; 
&gt; The commonly used solution is a Text widget with SWT.READ_ONLY and
&gt;  
&gt; text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
&gt; 
&gt; Since on Windows, a READ_ONLY text gets a gray background for free, most
&gt; users forget to hack the bg color. On GTK and Cocoa, the bg stays white.

Just happened to me  (see bug 222090 comment 10). It would be good to address this.
Current state:

On Cocoa, a Text with READ_ONLY but without BORDER has a white background (not widget background color).

On GTK, it depends on the specifics of how the Text is created: In the ControlExample, it initially looks OK (gray bg with READ_ONLY), but when you set a custom bg color and then click Colors and Fonts &gt; Default, the bg becomes white. OTOH, in an Eclipse properties page, it was always white (bug 222090 comment 10).
Regex to find readonly text fields that need a workaround:
new Text\([^,]+,[^\)]+SWT\.READ_ONLY

Internal workaround for JDT UI code:
org.eclipse.jdt.internal.ui.util.SWTUtil#fixReadonlyTextBackground(Text)</WithStack>
    <WithOutStack>3.0

Eclipse uses readonly text fields as an emulation for "accessible labels", that is labels
into which you can navigate by tabbing and where you select and copy the text to the clipboard.

This approach reveals the follwoing problems on Mac OS X:

- a readonly text field does not have the same background as a Label.
  It still looks like a field where you can enter text (bugs #39661, #68713, #34547)
  This invalidates Eclipse's use of readonly fields as "accessible labels".
  See first attached screenshot for how Apple implements accessible labels in the XCode IDE.
  
- tabbing into readonly fields is questionable:
  example: you can tab into a wizard's header description field (see bug #65322).
  Apple does not support tabbing into text labels even if the text can be selected
  with the mouse or keyboard. See property dialog in XCode IDE.
  (Even turning on the "Full Keyboard Access" option in the Keyboard &amp; Mouse
  preference pane doesn't enable tabbing into text labels).
  
- showing a focus ring for readonly text fields is misleading (bugs #33241)
  See any Mac application that supports selectable/copyable text labels
  (Apple XCode, MS Entourage): they never show a focus ring.
  

In addition readonly text fields have another problem on their own:

- a readonly field has no cue that it is readonly (bugs #32471, #32944)
Created attachment 13871
readonly text fields in XCode IDE
*** Bug 39661 has been marked as a duplicate of this bug. ***
*** Bug 68713 has been marked as a duplicate of this bug. ***
*** Bug 34547 has been marked as a duplicate of this bug. ***
*** Bug 33241 has been marked as a duplicate of this bug. ***
The accessible labels cause similar problems on Linux/GTK+ as they look out of
place on themes with pixmap backgrounds (I thought there was already a bug about
this but I cannot find it).  GTK+ 2.4 added support for keynav into labels using
Ctrl-Tab for a11y.  If the Mac has no way to tab into a label, how do screen
readers work?
Billy, may be bug #39661 is the one you are looking for. It started as a linux bug and was closed and 
later reopened for Mac OS X.
Need to determine how native Windows applications do this.
*** Bug 74716 has been marked as a duplicate of this bug. ***
SSQ, could we use the fact that the text fields of this type are SWT.READ_ONLY 
and created without a border to indicate that they are really "accessible 
labels".  At least on the Mac, we could draw them the same way that XCode does.
I think we should make our TNXObject based Text control behave the same way as 
the single line read only text control that we are proposing to use in the 
Spinner control.  SSQ?
*** Bug 66994 has been marked as a duplicate of this bug. ***
*** Bug 75566 has been marked as a duplicate of this bug. ***
What Carbon APIs are being leveraged to create the readonly text fields in Eclipse?

Apple's Human Interface Guildelines provide guidance on how to display static text (active/dimmed/
selectable) as well as text fields in Mac OS X.  For reference see:  http://developer.apple.com/
documentation/UserExperience/Conceptual/OSXHIGuidelines/index.html
&gt;&gt;I think we should make our TNXObject based Text control behave
&gt;&gt;the same way as the single line read only text control that we
&gt;&gt;are proposing to use in the Spinner control.  SSQ?
Under HIView, we are using the HITextView control rather than the TXNObject.  We are no longer drawing the focus ring.  However, you can still tab to the field but you get no indication that focus is in the control (bad).

I'm not sure we should change this for accessibility reasons.  Your thoughts?
Readonly text fields are still a sore point in the SWT API.

The commonly used solution is a Text widget with SWT.READ_ONLY and
  text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));

Since on Windows, a READ_ONLY text gets a gray background for free, most users forget to hack the bg color. On GTK and Cocoa, the bg stays white.
(In reply to comment #17)
&gt; Readonly text fields are still a sore point in the SWT API.
&gt; 
&gt; The commonly used solution is a Text widget with SWT.READ_ONLY and
&gt;  
&gt; text.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
&gt; 
&gt; Since on Windows, a READ_ONLY text gets a gray background for free, most
&gt; users forget to hack the bg color. On GTK and Cocoa, the bg stays white.

Just happened to me  (see bug 222090 comment 10). It would be good to address this.
Current state:

On Cocoa, a Text with READ_ONLY but without BORDER has a white background (not widget background color).

On GTK, it depends on the specifics of how the Text is created: In the ControlExample, it initially looks OK (gray bg with READ_ONLY), but when you set a custom bg color and then click Colors and Fonts &gt; Default, the bg becomes white. OTOH, in an Eclipse properties page, it was always white (bug 222090 comment 10).
Regex to find readonly text fields that need a workaround:
new Text\([^,]+,[^\)]+SWT\.READ_ONLY

Internal workaround for JDT UI code:
org.eclipse.jdt.internal.ui.util.SWTUtil#fixReadonlyTextBackground(Text)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71766" />
    <CreationDate amount="2004-08-11 07:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[format] Formatter fails to wrap lines for assignment statements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="198" end="245" />
        <code>AliasLabelType("ALLOWANCE_TAB_COMMAND_DELETE");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Select 'Java Conventions(built-in)' in code formatter.
Here the max line width is 80.

Try to format the following statement.

public static final AliasLabelType ALLOWANCE_TAB_COMMAND_DELETE = new 
AliasLabelType("ALLOWANCE_TAB_COMMAND_DELETE");

The formatter fails to fit the code in 80 columns. 
This works properly in 2.1.2
This is a known problem that will be investigated post 3.1.
Created attachment 26654
Proposed fix

This patch seems to fix this issue. I will do some further testing before
releasing it.
Should we use the same option for all assignments (initialization of local
variables and field declarations, assignment, compound assignment)?
I don't think this should apply to assignment inside annotations, because we
might end up with bad line wrapping.
*** Bug 87189 has been marked as a duplicate of this bug. ***
Right now I share the same option. I called it:
FORMATTER_ALIGNMENT_FOR_ASSIGNMENT

This will be available only at the code level for now.
It needs to be added in the code formatter preference page.
See bug 108478.

Fixed and released in HEAD.
Regression tests in
org.eclipse.jdt.core.tests.formatter.FormatterRegressionTests.test593/596.
*** Bug 93433 has been marked as a duplicate of this bug. ***
Verified in I20050920-0010 for 3.2M2
*** Bug 63631 has been marked as a duplicate of this bug. ***
*** Bug 124792 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Select 'Java Conventions(built-in)' in code formatter.
Here the max line width is 80.

Try to format the following statement.

public static final AliasLabelType ALLOWANCE_TAB_COMMAND_DELETE = new 
AliasLabelType("ALLOWANCE_TAB_COMMAND_DELETE");

The formatter fails to fit the code in 80 columns. 
This works properly in 2.1.2
This is a known problem that will be investigated post 3.1.
Created attachment 26654
Proposed fix

This patch seems to fix this issue. I will do some further testing before
releasing it.
Should we use the same option for all assignments (initialization of local
variables and field declarations, assignment, compound assignment)?
I don't think this should apply to assignment inside annotations, because we
might end up with bad line wrapping.
*** Bug 87189 has been marked as a duplicate of this bug. ***
Right now I share the same option. I called it:
FORMATTER_ALIGNMENT_FOR_ASSIGNMENT

This will be available only at the code level for now.
It needs to be added in the code formatter preference page.
See bug 108478.

Fixed and released in HEAD.
Regression tests in
org.eclipse.jdt.core.tests.formatter.FormatterRegressionTests.test593/596.
*** Bug 93433 has been marked as a duplicate of this bug. ***
Verified in I20050920-0010 for 3.2M2
*** Bug 63631 has been marked as a duplicate of this bug. ***
*** Bug 124792 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71767" />
    <CreationDate amount="2004-08-11 07:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Semantic highlighting does not update scanners on property changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="96" end="178" />
        <code>public class A {
	public static int fValue;
	public void foo() {
		fValue= 0;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- enable semantic highlighting (with field/static field highlighting enabled)</Line>
          <Line>- create CU:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- keep CU open</Line>
          <Line>- change color of keywords on the Java editor preference page</Line>
          <Line>- remove 'static' from the CU</Line>
          <Line>-&gt; 'public void' gets colored in the old color because the background</Line>
          <Line>PresentationReconciler's scanners are not notified about the property change</Line>
          <Line>Fixed in builds &gt;N20040812 and &gt;=I20040817.</Line>
          <Line>Created attachment 13910</Line>
          <Line>Patch against 3.0 maintenance branch</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

- enable semantic highlighting (with field/static field highlighting enabled)
- create CU:
public class A {
	public static int fValue;
	public void foo() {
		fValue= 0;
	}
}
- keep CU open
- change color of keywords on the Java editor preference page
- remove 'static' from the CU
-&gt; 'public void' gets colored in the old color because the background
PresentationReconciler's scanners are not notified about the property change
Fixed in builds &gt;N20040812 and &gt;=I20040817.
Created attachment 13910
Patch against 3.0 maintenance branch

Patch to consider for inclusion for 3.0.1.

I consider the risk to be medium because of the additional call to
JavaSourceViewerConfiguration.handlePropertyChangeEvent(event). This call has
not been made in that setup of the JSVC/PresentationReconciler/Scanners before.


I also consider the value to be medium because the colors for syntax
highlighting are getting mixed from the previous and the current preferences,
which can become quite confusing. (Unlike with bug 65178, where enabling
semantic highlighting does not work for already open editors.) Reopening the
editor fixes this too.
Considering fix for inclusion in 3.0.1.
Created attachment 13970
Updated patch

Additionally synchronizes the change of task tags in the JavaCommentScanner.
Other property changes are done by a single assignment, which is save.
Created attachment 14041
Updated patch
Created attachment 14042
Updated patch

Revision 3:
- additional synchronized methods in TaskTagMatcher

Revision 4:
- keep old SemanticHighlightingManager#install(..) as @deprecated
Committed patch to 3.1 maintenance branch.
Released into M200408180800.

*** Bug 72002 has been marked as a duplicate of this bug. ***
*** Bug 71856 has been marked as a duplicate of this bug. ***
Verified in M200409010800.
Just a question:

Why create a new JavaSourceViewerConfiguration in SemanticHighlightingManager.install() instead of using the JavaEditor's one (see AbstractTextEditor.getSourceViewerConfiguration() and JavaEditor.initializeEditor())?
Could anyone please have a look at my question in comment #11? This seems like a waste of resources to me and also causes some headaches to us (because our own SourceViewerConfiguration is not used).

Thanks.
The source viewer configuration's presentation reconciler is used from a background thread and all presentation reconcilers from the same configuration share the same scanners, which would result in threading issues if the source viewer configuration was shared among multiple threads.</WithStack>
    <WithOutStack>3.0

- enable semantic highlighting (with field/static field highlighting enabled)
- create CU:
public class A {
	public static int fValue;
	public void foo() {
		fValue= 0;
	}
}
- keep CU open
- change color of keywords on the Java editor preference page
- remove 'static' from the CU
-&gt; 'public void' gets colored in the old color because the background
PresentationReconciler's scanners are not notified about the property change
Fixed in builds &gt;N20040812 and &gt;=I20040817.
Created attachment 13910
Patch against 3.0 maintenance branch

Patch to consider for inclusion for 3.0.1.

I consider the risk to be medium because of the additional call to
JavaSourceViewerConfiguration.handlePropertyChangeEvent(event). This call has
not been made in that setup of the JSVC/PresentationReconciler/Scanners before.


I also consider the value to be medium because the colors for syntax
highlighting are getting mixed from the previous and the current preferences,
which can become quite confusing. (Unlike with bug 65178, where enabling
semantic highlighting does not work for already open editors.) Reopening the
editor fixes this too.
Considering fix for inclusion in 3.0.1.
Created attachment 13970
Updated patch

Additionally synchronizes the change of task tags in the JavaCommentScanner.
Other property changes are done by a single assignment, which is save.
Created attachment 14041
Updated patch
Created attachment 14042
Updated patch

Revision 3:
- additional synchronized methods in TaskTagMatcher

Revision 4:
- keep old SemanticHighlightingManager#install(..) as @deprecated
Committed patch to 3.1 maintenance branch.
Released into M200408180800.

*** Bug 72002 has been marked as a duplicate of this bug. ***
*** Bug 71856 has been marked as a duplicate of this bug. ***
Verified in M200409010800.
Just a question:

Why create a new JavaSourceViewerConfiguration in SemanticHighlightingManager.install() instead of using the JavaEditor's one (see AbstractTextEditor.getSourceViewerConfiguration() and JavaEditor.initializeEditor())?
Could anyone please have a look at my question in comment #11? This seems like a waste of resources to me and also causes some headaches to us (because our own SourceViewerConfiguration is not used).

Thanks.
The source viewer configuration's presentation reconciler is used from a background thread and all presentation reconcilers from the same configuration share the same scanners, which would result in threading issues if the source viewer configuration was shared among multiple threads.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71768" />
    <CreationDate amount="2004-08-11 07:20:00 -0400" />
    <DupId amount="37590" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Console View: toggle "Show when program writes ..." from view menu/toolbar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'd like to toggle the state of the Console View's preferences "Show when
program writes to standard out" and "Show when program writes to standard error"
from within the Console View.

Opening the preferences dialog and hunting for the checkboxes needs too many
steps to change a setting which is IMO not a general preference, but dependent
on what I'm doing at the moment.

Controlling this from the view would also be consistent with the PDE Error Log's
view menu "Activate on new Events".


*** This bug has been marked as a duplicate of 37590 ***</WithStack>
    <WithOutStack>I'd like to toggle the state of the Console View's preferences "Show when
program writes to standard out" and "Show when program writes to standard error"
from within the Console View.

Opening the preferences dialog and hunting for the checkboxes needs too many
steps to change a setting which is IMO not a general preference, but dependent
on what I'm doing at the moment.

Controlling this from the view would also be consistent with the PDE Error Log's
view menu "Activate on new Events".


*** This bug has been marked as a duplicate of 37590 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71769" />
    <CreationDate amount="2004-08-11 07:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Open class and resource: use current selection [misc]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- Cocoon,</Line>
          <Line>- AspectWerkz and many more aspect related tools,</Line>
          <Line>- Avalon and many other microkernels and containers,</Line>
          <Line>- Castor,</Line>
          <Line>- Ant</Line>
          <Line>- ...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When hitting Ctrl+Shift+T for opening a type, or Ctrl+Shift+R for opening a
resource, it would be great if the current selection could be used for the
initial value shown in the popup dialog.
I think this is an easy task to do.  
The find dialog already works in this way.
These actions are currently not selection sensitive. Can you provide a use 
case where this is helpful ?

Time permitted. 
I have configuration files with Java class names, if I want to see the Java
class I just select the class name and hit Ctrl+Shift+T.

Examples of open source tools that have config files with embedded class names: 
- Cocoon, 
- AspectWerkz and many more aspect related tools, 
- Avalon and many other microkernels and containers, 
- Castor, 
- Ant
- ...

Other use case: If I see some Java class name in a JavaDoc I can do the same
procedure.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When hitting Ctrl+Shift+T for opening a type, or Ctrl+Shift+R for opening a
resource, it would be great if the current selection could be used for the
initial value shown in the popup dialog.
I think this is an easy task to do.  
The find dialog already works in this way.
These actions are currently not selection sensitive. Can you provide a use 
case where this is helpful ?

Time permitted. 
I have configuration files with Java class names, if I want to see the Java
class I just select the class name and hit Ctrl+Shift+T.

Examples of open source tools that have config files with embedded class names: 
- Cocoon, 
- AspectWerkz and many more aspect related tools, 
- Avalon and many other microkernels and containers, 
- Castor, 
- Ant
- ...

Other use case: If I see some Java class name in a JavaDoc I can do the same
procedure.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71770" />
    <CreationDate amount="2004-08-11 07:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[quick fix] Template mode for "add unimplemented methods"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>It would be nice if the "add unimplemented methods" quick fix would enter 
template mode, so that hitting the tab key would cycle through the bodies of 
the added methods.
It would be especially nice if, after adding the new methods, hitting the tab
key would cycle through the parameters of the added methods to select custom
names, especially since the default names are so generic (arg0, arg1, arg2...)</WithStack>
    <WithOutStack>It would be nice if the "add unimplemented methods" quick fix would enter 
template mode, so that hitting the tab key would cycle through the bodies of 
the added methods.
It would be especially nice if, after adding the new methods, hitting the tab
key would cycle through the parameters of the added methods to select custom
names, especially since the default names are so generic (arg0, arg1, arg2...)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71771" />
    <CreationDate amount="2004-08-11 07:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[navigation] "mark occurrences" for extends/implements clauses</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be nice if the "mark occurrences" feature, when used on a 
class/interface name in an extends/implements clause, would mark the methods 
that override/implement methods of that class/interface.
Dani, we should discuss you will own this. 
Available in builds &gt; 20041007</WithStack>
    <WithOutStack>It would be nice if the "mark occurrences" feature, when used on a 
class/interface name in an extends/implements clause, would mark the methods 
that override/implement methods of that class/interface.
Dani, we should discuss you will own this. 
Available in builds &gt; 20041007</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71772" />
    <CreationDate amount="2004-08-11 07:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add "Introduce return value" refactoring [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="6" end="12" />
        <code>foo();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="14" end="36" />
        <code>void foo()
{
   x=5;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="63" end="71" />
        <code>x=foo();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="73" end="99" />
        <code>int foo()
{
   return 5;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="1">
        <Lines>
          <Line>I.e.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I.e.

foo();

void foo()
{
   x=5;
}

"x" -&gt; return value

=&gt;

x=foo();

int foo()
{
   return 5;
}
Move to JDT/UI
Do you have an example where this would really be useful and worth to be
implemented? 

Looks more like a quick fix than a refactoring.
&gt;Do you have an example where this would really be useful and worth to be
&gt;implemented? 

Refactoring is not only about changing existing code. I use it all the time 
when I write new code.

E.g. I don't write methods anymore. I write the code I need inline, then I 
extract a method.

The idea is to write code for a specific case, and then use refactoring to 
generalize. It lets me focus on one thing at the time.

In the particular case I was working on, I wrote an inline piece of code, but 
when it came time to extract a method, I "discovered" that I had modified 
fields in the object and that there was no way to change the modification of a 
field to a return code.

&gt;Looks more like a quick fix than a refactoring.

"x" in the example is a field in the class, and hence there is no error. I 
thought "quick fixes" only exists for errors?

In practical terms there is little difference between "quick fix" and "small 
refactoring" for me. Both rewrite the program in the fashion I'd like to have 
it rewritten.

Øyvind

Given the current planning this will not happen for 3.1 without external help.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I.e.

foo();

void foo()
{
   x=5;
}

"x" -&gt; return value

=&gt;

x=foo();

int foo()
{
   return 5;
}
Move to JDT/UI
Do you have an example where this would really be useful and worth to be
implemented? 

Looks more like a quick fix than a refactoring.
&gt;Do you have an example where this would really be useful and worth to be
&gt;implemented? 

Refactoring is not only about changing existing code. I use it all the time 
when I write new code.

E.g. I don't write methods anymore. I write the code I need inline, then I 
extract a method.

The idea is to write code for a specific case, and then use refactoring to 
generalize. It lets me focus on one thing at the time.

In the particular case I was working on, I wrote an inline piece of code, but 
when it came time to extract a method, I "discovered" that I had modified 
fields in the object and that there was no way to change the modification of a 
field to a return code.

&gt;Looks more like a quick fix than a refactoring.

"x" in the example is a field in the class, and hence there is no error. I 
thought "quick fixes" only exists for errors?

In practical terms there is little difference between "quick fix" and "small 
refactoring" for me. Both rewrite the program in the fashion I'd like to have 
it rewritten.

Øyvind

Given the current planning this will not happen for 3.1 without external help.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71773" />
    <CreationDate amount="2004-08-11 07:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Visualiser is broken in 1.1.12</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341171412">
        <Exception>java.lang.ExceptionInInitializerError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.ExceptionInInitializerError.&lt;init&gt;(ExceptionInInitializerError.java:74)</Frame>
          <Frame depth="2">java.lang.Class.initialize(Class.java)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using AJDT 1.1.12 from CVS HEAD inside Rational Software Architect 6.0 beta
(based on Eclipse 3.0 shell). 

Window -&gt; Show View -&gt; Visualiser Menu, results in an error pop-up saying
"Unable to create part: Visualiser Menu".

Likewise, Window -&gt; Show View -&gt; Visualiser results in an error pop-up saying
"Unable to create part: Visualiser".

Examination of the platform error log reveals the following ...

&lt;snip&gt;
java.lang.ExceptionInInitializerError
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.ExceptionInInitializerError.&lt;init&gt;(ExceptionInInitializerError.
java:74)
	at java.lang.Class.initialize(Class.java)
	at org.eclipse.contribution.visualiser.views.Menu.makePullDownActions(Unknown 
Source)
	at org.eclipse.contribution.visualiser.views.Menu.createPartControl(Unknown 
Source)
...
Caused by: java.util.MissingResourceException: Can't find bundle for base name 
org.eclipse.contribution.visualiser.views.visualiser, locale en_GB
...
&lt;/snip&gt;

Sure enough, inspection of the contents of Visualiser.jar reveals that the
file visualiser.properties is not present. Adding the properties file into the
jar by hand and restarting the workbench seems to fix things. Build script
needs a tweak ?
And to me...
Good catch George. The eclipse-built version we were previously using was okay,
but the external build does indeed require the extra copy step.
Now fixed</WithStack>
    <WithOutStack>Using AJDT 1.1.12 from CVS HEAD inside Rational Software Architect 6.0 beta
(based on Eclipse 3.0 shell). 

Window -&gt; Show View -&gt; Visualiser Menu, results in an error pop-up saying
"Unable to create part: Visualiser Menu".

Likewise, Window -&gt; Show View -&gt; Visualiser results in an error pop-up saying
"Unable to create part: Visualiser".

Examination of the platform error log reveals the following ...

&lt;snip&gt;

	at org.eclipse.contribution.visualiser.views.Menu.makePullDownActions(Unknown 
Source)
	at org.eclipse.contribution.visualiser.views.Menu.createPartControl(Unknown 
Source)
...
Caused by: java.util.MissingResourceException: Can't find bundle for base name 
org.eclipse.contribution.visualiser.views.visualiser, locale en_GB
...
&lt;/snip&gt;

Sure enough, inspection of the contents of Visualiser.jar reveals that the
file visualiser.properties is not present. Adding the properties file into the
jar by hand and restarting the workbench seems to fix things. Build script
needs a tweak ?
And to me...
Good catch George. The eclipse-built version we were previously using was okay,
but the external build does indeed require the extra copy step.
Now fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71774" />
    <CreationDate amount="2004-08-11 08:19:00 -0400" />
    <DupId amount="59171" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Adding new Item to Classpath [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When adding on TabPage "Classpath" at Run or Project-Properties a new enty, this
should not appended at the end, if there is an entry selected within the list.
It should then be inserted after the selected one. It is very anoying to move a
new jar from bottom 10 times after it is at the needed position.
Fair request.
note that the library list where you have the 'add' buttons is alphabetically
ordered. The 'order' page is the only page showing to order. 
The change is not trivial and I prefer to leave it as the new behaviour wouldn't
be obvious.

Moving to debug for considering doing the fix in the launch confog class path
But on Run-Options it is differnt. There you order the jars not in seperate Tab.
Already fixed in 3.1

*** This bug has been marked as a duplicate of 59171 ***</WithStack>
    <WithOutStack>When adding on TabPage "Classpath" at Run or Project-Properties a new enty, this
should not appended at the end, if there is an entry selected within the list.
It should then be inserted after the selected one. It is very anoying to move a
new jar from bottom 10 times after it is at the needed position.
Fair request.
note that the library list where you have the 'add' buttons is alphabetically
ordered. The 'order' page is the only page showing to order. 
The change is not trivial and I prefer to leave it as the new behaviour wouldn't
be obvious.

Moving to debug for considering doing the fix in the launch confog class path
But on Run-Options it is differnt. There you order the jars not in seperate Tab.
Already fixed in 3.1

*** This bug has been marked as a duplicate of 59171 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71775" />
    <CreationDate amount="2004-08-11 08:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] Local rename of generic parameters renames references _or_ declaration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="113" end="154" />
        <code>public class B&lt;T&gt; {
	B&lt;T&gt; b1;
	B&lt;T&gt; b2;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200408101200

Local Rename on a reference to (the declaration of) T only renames the
references (declaration):

public class B&lt;T&gt; {
	B&lt;T&gt; b1;
	B&lt;T&gt; b2;
}
that seems to be fixed with the latest jdt.core (20040901)</WithStack>
    <WithOutStack>I200408101200

Local Rename on a reference to (the declaration of) T only renames the
references (declaration):

public class B&lt;T&gt; {
	B&lt;T&gt; b1;
	B&lt;T&gt; b2;
}
that seems to be fixed with the latest jdt.core (20040901)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71776" />
    <CreationDate amount="2004-08-11 08:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Quickfix] SerialVersionID inconsistency when applied for an unsaved CU</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="269" end="322" />
        <code>private static final long serialVersionUID = 1L;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1) create a new CU with a class  MyException that extends Exception</Line>
          <Line>-&gt; don't save the file and don't build</Line>
          <Line>2) select the warning that not serialVersionUID is defined</Line>
          <Line>3) invoke quick fix</Line>
          <Line>4) select "generated serial version UID"</Line>
          <Line>-&gt;the default version UID is inserted:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Preview assumes that the file can be built</Line>
          <Line>- If not, an appropriate message shows up when the user selects the quick fix</Line>
          <Line>Fixed &gt; I20040824</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) create a new CU with a class  MyException that extends Exception
   -&gt; don't save the file and don't build
2) select the warning that not serialVersionUID is defined
3) invoke quick fix
4) select "generated serial version UID"
-&gt;the default version UID is inserted:
     private static final long serialVersionUID = 1L;

Since the generated serialversionUID cannot be computed in this situation we 
should inform the user about this rather than falling back on the default 
version UID.

Suggest to provide this information in the preview and when the user still 
selects the quick fix to show a message dialog.
Tobias, we discussed this already. The idea was to get help from JDT/Core to 
compile the file in memory and then use the byte array to compute the SVID. 
Have you heard anything from Core ?
Created attachment 13962
Patches the proposed changes

Decided to run a project build before generating the id:
- Preview assumes that the file can be built
- If not, an appropriate message shows up when the user selects the quick fix
Fixed &gt; I20040824</WithStack>
    <WithOutStack>1) create a new CU with a class  MyException that extends Exception
   -&gt; don't save the file and don't build
2) select the warning that not serialVersionUID is defined
3) invoke quick fix
4) select "generated serial version UID"
-&gt;the default version UID is inserted:
     private static final long serialVersionUID = 1L;

Since the generated serialversionUID cannot be computed in this situation we 
should inform the user about this rather than falling back on the default 
version UID.

Suggest to provide this information in the preview and when the user still 
selects the quick fix to show a message dialog.
Tobias, we discussed this already. The idea was to get help from JDT/Core to 
compile the file in memory and then use the byte array to compute the SVID. 
Have you heard anything from Core ?
Created attachment 13962
Patches the proposed changes

Decided to run a project build before generating the id:
- Preview assumes that the file can be built
- If not, an appropriate message shows up when the user selects the quick fix
Fixed &gt; I20040824</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71777" />
    <CreationDate amount="2004-08-11 08:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inpath option does not work if project contains no files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If an AspectJ project contains no files the builder aborts, and therefore if 
the user has set an inpath it is ignored.  See line 201 in 
org.eclipse.ajdt.internal.builder.Builder.  

To test create an empty project and set the inpath to the bin directory of 
another project.  Rebuild the project and the bin directory is empty.  Add a 
class to the project, which doesn't have to do anything, then rebuild again 
and the bin directory will contain the correct files.
Oops, sorry for missing the re-assignment.  Here you are Sian.
Fix in - the offending lines were removed from Builder with no ill effect.  To 
be included in 1.1.12.</WithStack>
    <WithOutStack>If an AspectJ project contains no files the builder aborts, and therefore if 
the user has set an inpath it is ignored.  See line 201 in 
org.eclipse.ajdt.internal.builder.Builder.  

To test create an empty project and set the inpath to the bin directory of 
another project.  Rebuild the project and the bin directory is empty.  Add a 
class to the project, which doesn't have to do anything, then rebuild again 
and the bin directory will contain the correct files.
Oops, sorry for missing the re-assignment.  Here you are Sian.
Fix in - the offending lines were removed from Builder with no ill effect.  To 
be included in 1.1.12.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71778" />
    <CreationDate amount="2004-08-11 08:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Quickfix] SerialVersionID proposal should be computed more lazily</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="615" end="685" />
        <code>private static final long serialVersionUID= &lt;compiler-generated SUID&gt;;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The SerialVersionID quickfix significantly delays the appearance of the 
quickfix proposals (on the order of 3s in my set-up). The computation of the 
serialversion ID should be done in a more lazy fashion so that the delay only 
happens when the user actually applies this quickfix.
The quick fix is already computed lazily. If we postpone it until the user 
applies it we have to have a story for the preview. 

We should discuss this with Martin because this will change the way how the 
quick fix works.
I don't think the preview of the exact value is really important. The preview
could be something like 
...
private static final long serialVersionUID= &lt;compiler-generated SUID&gt;;
...

The calculation of the value can then be shown in a (cancellable) progress dialog.
Changed preview to a generic message

Fixed &gt; I20040812</WithStack>
    <WithOutStack>The SerialVersionID quickfix significantly delays the appearance of the 
quickfix proposals (on the order of 3s in my set-up). The computation of the 
serialversion ID should be done in a more lazy fashion so that the delay only 
happens when the user actually applies this quickfix.
The quick fix is already computed lazily. If we postpone it until the user 
applies it we have to have a story for the preview. 

We should discuss this with Martin because this will change the way how the 
quick fix works.
I don't think the preview of the exact value is really important. The preview
could be something like 
...
private static final long serialVersionUID= &lt;compiler-generated SUID&gt;;
...

The calculation of the value can then be shown in a (cancellable) progress dialog.
Changed preview to a generic message

Fixed &gt; I20040812</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71779" />
    <CreationDate amount="2004-08-11 09:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[ViewMgmt] View maximize/restore hint lags</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Using I200408101200, I notice that there is a hint (shrinking or expanding 
box) that appears whenever a window is maximized or restored to its regular 
size after being minimize. What I am seeing is that the view is maximized or 
restored and then the box appears and expands or shrinks. I think It should 
appear before the view is drawn in it's new state. Having it appear after the 
fact does not server a purpose (IMHO).
Reassigning bugs in component areas that are changing ownership.

Closing stale bugs.</WithStack>
    <WithOutStack>Using I200408101200, I notice that there is a hint (shrinking or expanding 
box) that appears whenever a window is maximized or restored to its regular 
size after being minimize. What I am seeing is that the view is maximized or 
restored and then the box appears and expands or shrinks. I think It should 
appear before the view is drawn in it's new state. Having it appear after the 
fact does not server a purpose (IMHO).
Reassigning bugs in component areas that are changing ownership.

Closing stale bugs.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71780" />
    <CreationDate amount="2004-08-11 09:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>no gutter marks for advice from injars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This bug was first mentioned on the user list by robert_kuzelj@yahoo.com 
in "[aspectj-users] ajdt feedback part II":

"- no gutter markers nowhere."
Fixed</WithStack>
    <WithOutStack>This bug was first mentioned on the user list by robert_kuzelj@yahoo.com 
in "[aspectj-users] ajdt feedback part II":

"- no gutter markers nowhere."
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71781" />
    <CreationDate amount="2004-08-11 09:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Managed Build] Project should be rebuilt if build configuration is changed and incremental compile is on</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>(1) Have a project, with auto-build turned off, with build configurations c1,c2</Line>
          <Line>(2) Build for c1, build for c2. (The default configuration is now C2)</Line>
          <Line>(3) Change a file</Line>
          <Line>(4) Change to C1</Line>
          <Line>(5) Build - a build occurs</Line>
          <Line>(6) Change to C2</Line>
          <Line>(7) Build - a build does not occur</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The project should be rebuilt automatically, when someone changes the build 
configuration in the project properties dialog and incremental compilation is 
on.
I figure this is a six-of one, half-dozen of the other type of request. If I 
change this, people will howl about having to endure a build every time they 
change the configuration just to edit a setting. We are looking at a range of 
issues concerning display and selection of configurations. I won't dismiss 
this, but I am making it an enhancement request and I'll give it more thought 
before deciding what to do.
Changing to future release. 


*** Bug 125821 has been marked as a duplicate of this bug. ***
Created attachment 35144
make routine for triggering build visible, and invoke it upon default
with regard to comment #1, my opinion is that this is the most natural behaviour and in keeping with rebuilding when other changes of this sort are made.

I do agree that this should only happen when the user has chosen to "Build Automatically". This is the behaviour in the contribution.

its also worth noting that Sean's comment is mistaken in the fact that if the user really does change a compilation setting on an alternate build configuration, and this is persisted to the .cdtbuild file, then a project resource change delta will be generated and a new build triggered. 
(In reply to comment #4)
&gt; A symptom I'm seeing is that if you change the default config from the toolbar,
&gt; nothing gets dirtied, and thus the next time you ask for a build, nothing
&gt; happens.
There are two different states maintained by the configuration: rebuild state and dirty state.
The decision on how we should build is made upon the rebuild state rather than on the dirty state.

&gt; In this situation I'd still like us to call make to make sure the new
&gt; config is up-to-date.
I agree, though it won’t work in 100% of cases, e.g. when some source files are removed from the project, make may decide that the project is up to date.
 
&gt; 
&gt;..Is there another bug on this issue? 
Yes, see the bug# 71781


Ideally, I don't want a rebuild when I change configs, just a build. If the list of sources changes, this should only impact the tools that care about this list, e.g., the linker. Although a rebuild in this case could be acceptable.
hi Doug,

 just to be clear - by rebuild, do you mean in this circumstance it should not trigger a FULL_BUILD (and instead trigger an INCREMENTAL_BUILD)? if so, I agree (this was an oversight). I'll tweak the patch if so.

thanks,
Andrew

I guess I should stop using the term rebuild since there isn't such thing as rebuild in Eclipse anymore. What I really mean is that I don't want a clean when I switch configs, where possible.
(In reply to comment #9)
&gt; I guess I should stop using the term rebuild since there isn't such thing as
&gt; rebuild in Eclipse anymore. What I really mean is that I don't want a clean
&gt; when I switch configs, where possible.
&gt; 

I'm going to make a check-in tomorrow with the initial build description model implementation and the functionality that makes MBS build only those parts of the project that need to be rebuilt. So, MBS will not perform an unnecessary clean when the full build is requested.
..so triggering a full build when switching configurations should be OK 
Now that it doesn't do a clean, sure.

In fact you probably need to do it that way since you don't have the state when the last build was done on that config so the delta on an incremental build would be misleading.
&gt; so the delta on an incremental build would be misleading

can confirm this happens in practice from experiments this afternoon :)
FYI: I've made a check-in with initial build description model functionality.
The functionality also contains the fixes for “build only what is needed”
issues.
Currently when the default build configuration is chenged, the rebuild is not initiated automatically, but the next time the project will build, the full rebuild will occur.

Let me know if you have any comments.

Thanks,
Mikhail


I’m going to make the build configuration switching a bit more flexible:

Instead of marking the configuration as “needs rebuild” each time it is set as a default configuration, the following logic will be added: 
When the build is requested, the check will be performed to determine whether the future build of other configurations (non-default configurations) will be correct without performing a clean or not. And if we detect that the future builds for other configurations will not be correct without performing clean, those configurations will be marked as “need rebuild”. 

As for the future (when the build configuration becomes a part of the CDT core), one of the possible solutions I think of is to make a per-configuration resource delta storing/calculation. I believe it should be possible, but I should make some investigation about performance and memory consumption this solution would require and the amount of time needed to implement it.

Any comments are welcome.

Mikhail

I have implemented the first proposal described in the comment#15
Also the rebuild is triggered now when the active build configuration is changed.
Rebuild is initiated by performing a touch to the .cdtbuild file in the ManagedBuildInfo.setDefaultConfiguration()

Closing the bug.. Please reopen if needed.


hi Mikhail,

 I'm wondering about whether this behaviour should apply when autobuild is not switched on. I previously thought that it should not, but when considering the behaviour below, I think that it probably should?

(1) Have a project, with auto-build turned off, with build configurations c1,c2
(2) Build for c1, build for c2. (The default configuration is now C2)
(3) Change a file
(4) Change to C1
(5) Build - a build occurs
(6) Change to C2
(7) Build - a build does not occur

at points (5) and (7), eclipse is generating a resource delta that includes the touched .cdtbuild file, but this is being discounted by some logic in the GeneratedMakefileBuilder?

&gt;  one of the possible solutions I think of is to make a per-configuration
resource delta storing/calculation

this sounds like a good solution, it would also need to take into account excluded resources (or would this be subprojects in cdt 4.0?)

thanks,
Andrew

(In reply to comment #17)
Hi Andrew,

&gt; (6) Change to C2
&gt; (7) Build - a build does not occur
It seems strange that you are seeing such behavior.
The project build should occur in step#7 since currently each time the active configuration is changed, a touch on the .cdtbuild file is performed in order to make eclipse think that the project is modified.
I’ve just ran through setps 1-7 and everything works fine for me, i.e. build occurs on step#7.
Are you using the CDT sources from HEAD?

Mikhail
hi Mikhail,

 sorry, I had added the new setDefaultConfiguration to a cdt 3.0.2 code base, but not also updated the GeneratedMakefileBuilder logic. 

The old logic (commented out in and replaced in HEAD) was not compatible.

sorry about that, I should have realised this before posting,
thanks,
Andrew

(In reply to comment #19)
No problem ;). My fault is that I did not set the correct Target Milestone for this bug..
Target Milestone is updated to 3.1 now

Thanks,
Mikhail</WithStack>
    <WithOutStack>The project should be rebuilt automatically, when someone changes the build 
configuration in the project properties dialog and incremental compilation is 
on.
I figure this is a six-of one, half-dozen of the other type of request. If I 
change this, people will howl about having to endure a build every time they 
change the configuration just to edit a setting. We are looking at a range of 
issues concerning display and selection of configurations. I won't dismiss 
this, but I am making it an enhancement request and I'll give it more thought 
before deciding what to do.
Changing to future release. 


*** Bug 125821 has been marked as a duplicate of this bug. ***
Created attachment 35144
make routine for triggering build visible, and invoke it upon default
with regard to comment #1, my opinion is that this is the most natural behaviour and in keeping with rebuilding when other changes of this sort are made.

I do agree that this should only happen when the user has chosen to "Build Automatically". This is the behaviour in the contribution.

its also worth noting that Sean's comment is mistaken in the fact that if the user really does change a compilation setting on an alternate build configuration, and this is persisted to the .cdtbuild file, then a project resource change delta will be generated and a new build triggered. 
(In reply to comment #4)
&gt; A symptom I'm seeing is that if you change the default config from the toolbar,
&gt; nothing gets dirtied, and thus the next time you ask for a build, nothing
&gt; happens.
There are two different states maintained by the configuration: rebuild state and dirty state.
The decision on how we should build is made upon the rebuild state rather than on the dirty state.

&gt; In this situation I'd still like us to call make to make sure the new
&gt; config is up-to-date.
I agree, though it won’t work in 100% of cases, e.g. when some source files are removed from the project, make may decide that the project is up to date.
 
&gt; 
&gt;..Is there another bug on this issue? 
Yes, see the bug# 71781


Ideally, I don't want a rebuild when I change configs, just a build. If the list of sources changes, this should only impact the tools that care about this list, e.g., the linker. Although a rebuild in this case could be acceptable.
hi Doug,

 just to be clear - by rebuild, do you mean in this circumstance it should not trigger a FULL_BUILD (and instead trigger an INCREMENTAL_BUILD)? if so, I agree (this was an oversight). I'll tweak the patch if so.

thanks,
Andrew

I guess I should stop using the term rebuild since there isn't such thing as rebuild in Eclipse anymore. What I really mean is that I don't want a clean when I switch configs, where possible.
(In reply to comment #9)
&gt; I guess I should stop using the term rebuild since there isn't such thing as
&gt; rebuild in Eclipse anymore. What I really mean is that I don't want a clean
&gt; when I switch configs, where possible.
&gt; 

I'm going to make a check-in tomorrow with the initial build description model implementation and the functionality that makes MBS build only those parts of the project that need to be rebuilt. So, MBS will not perform an unnecessary clean when the full build is requested.
..so triggering a full build when switching configurations should be OK 
Now that it doesn't do a clean, sure.

In fact you probably need to do it that way since you don't have the state when the last build was done on that config so the delta on an incremental build would be misleading.
&gt; so the delta on an incremental build would be misleading

can confirm this happens in practice from experiments this afternoon :)
FYI: I've made a check-in with initial build description model functionality.
The functionality also contains the fixes for “build only what is needed”
issues.
Currently when the default build configuration is chenged, the rebuild is not initiated automatically, but the next time the project will build, the full rebuild will occur.

Let me know if you have any comments.

Thanks,
Mikhail


I’m going to make the build configuration switching a bit more flexible:

Instead of marking the configuration as “needs rebuild” each time it is set as a default configuration, the following logic will be added: 
When the build is requested, the check will be performed to determine whether the future build of other configurations (non-default configurations) will be correct without performing a clean or not. And if we detect that the future builds for other configurations will not be correct without performing clean, those configurations will be marked as “need rebuild”. 

As for the future (when the build configuration becomes a part of the CDT core), one of the possible solutions I think of is to make a per-configuration resource delta storing/calculation. I believe it should be possible, but I should make some investigation about performance and memory consumption this solution would require and the amount of time needed to implement it.

Any comments are welcome.

Mikhail

I have implemented the first proposal described in the comment#15
Also the rebuild is triggered now when the active build configuration is changed.
Rebuild is initiated by performing a touch to the .cdtbuild file in the ManagedBuildInfo.setDefaultConfiguration()

Closing the bug.. Please reopen if needed.


hi Mikhail,

 I'm wondering about whether this behaviour should apply when autobuild is not switched on. I previously thought that it should not, but when considering the behaviour below, I think that it probably should?

(1) Have a project, with auto-build turned off, with build configurations c1,c2
(2) Build for c1, build for c2. (The default configuration is now C2)
(3) Change a file
(4) Change to C1
(5) Build - a build occurs
(6) Change to C2
(7) Build - a build does not occur

at points (5) and (7), eclipse is generating a resource delta that includes the touched .cdtbuild file, but this is being discounted by some logic in the GeneratedMakefileBuilder?

&gt;  one of the possible solutions I think of is to make a per-configuration
resource delta storing/calculation

this sounds like a good solution, it would also need to take into account excluded resources (or would this be subprojects in cdt 4.0?)

thanks,
Andrew

(In reply to comment #17)
Hi Andrew,

&gt; (6) Change to C2
&gt; (7) Build - a build does not occur
It seems strange that you are seeing such behavior.
The project build should occur in step#7 since currently each time the active configuration is changed, a touch on the .cdtbuild file is performed in order to make eclipse think that the project is modified.
I’ve just ran through setps 1-7 and everything works fine for me, i.e. build occurs on step#7.
Are you using the CDT sources from HEAD?

Mikhail
hi Mikhail,

 sorry, I had added the new setDefaultConfiguration to a cdt 3.0.2 code base, but not also updated the GeneratedMakefileBuilder logic. 

The old logic (commented out in and replaced in HEAD) was not compatible.

sorry about that, I should have realised this before posting,
thanks,
Andrew

(In reply to comment #19)
No problem ;). My fault is that I did not set the correct Target Milestone for this bug..
Target Milestone is updated to 3.1 now

Thanks,
Mikhail</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71782" />
    <CreationDate amount="2004-08-11 09:22:00 -0400" />
    <DupId amount="68232" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Build configurations do not show up in project menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Why do build configurations as "debug" and "release" not show up under "Project 
-&gt; Active Build Configuration" ?
We have a requirement on this for the new MBS. I refer the bug reporter to bug 
68232 and the discussions surrounding the display of active configuation, 
building inactive configurations, and multi-selecting confgurations for build.

*** This bug has been marked as a duplicate of 68232 ***</WithStack>
    <WithOutStack>Why do build configurations as "debug" and "release" not show up under "Project 
-&gt; Active Build Configuration" ?
We have a requirement on this for the new MBS. I refer the bug reporter to bug 
68232 and the discussions surrounding the display of active configuation, 
building inactive configurations, and multi-selecting confgurations for build.

*** This bug has been marked as a duplicate of 68232 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71783" />
    <CreationDate amount="2004-08-11 09:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JUnit] New JUnit Test Case Wizard does not use code templates for method comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Methods generated by the New JUnit Test Case Wizard either have no comments, or
the comments from overridden methods - like equals(Object) - are plain Java
comments and not JavaDoc. The file and class templates appear to be used, so the
behavior of the wizard is inconsistent.

This behavior appears no matter what class is extended for the test case - we
have a couple specializations of TestCase we normally use, but this bug appears
even if we use the standard JUnit TestCase.

FWIW, I would prefer the wizard uses the method comment template rather than
disabling the use of templates to be consistent ;-)

Along those lines, if it is seen as undesirable to use the code template in this
manner all the time maybe there should be an option that indicates if (or which)
templates should be used?
After adding a question in the forum, I am updating this bug, so that maybe it
will be reloved.
http://www.eclipse.org/newsportal/article.php?id=3794&amp;group=eclipse.newcomer#3794

Thank you !

Elad
I also am adding myself as a "me too" for this bug, after finding out form the
forum that junit test methods are not generated from a template. 

I found the bug when I tried to change the template to include fail("Test not
implemented.") in the body of all autogenerated unit tests. 

This would be a big help in test-oriented development, especially compared to
tests that automatically pass because they do not assert anything. 


Moving back to the JDT/UI inbox
For 3.2 we fixed that for the type, constructor, setup/tearDown method. For the test method you get now a comment with a link to the tested method. I think this is better than the original comment.</WithStack>
    <WithOutStack>Methods generated by the New JUnit Test Case Wizard either have no comments, or
the comments from overridden methods - like equals(Object) - are plain Java
comments and not JavaDoc. The file and class templates appear to be used, so the
behavior of the wizard is inconsistent.

This behavior appears no matter what class is extended for the test case - we
have a couple specializations of TestCase we normally use, but this bug appears
even if we use the standard JUnit TestCase.

FWIW, I would prefer the wizard uses the method comment template rather than
disabling the use of templates to be consistent ;-)

Along those lines, if it is seen as undesirable to use the code template in this
manner all the time maybe there should be an option that indicates if (or which)
templates should be used?
After adding a question in the forum, I am updating this bug, so that maybe it
will be reloved.
http://www.eclipse.org/newsportal/article.php?id=3794&amp;group=eclipse.newcomer#3794

Thank you !

Elad
I also am adding myself as a "me too" for this bug, after finding out form the
forum that junit test methods are not generated from a template. 

I found the bug when I tried to change the template to include fail("Test not
implemented.") in the body of all autogenerated unit tests. 

This would be a big help in test-oriented development, especially compared to
tests that automatically pass because they do not assert anything. 


Moving back to the JDT/UI inbox
For 3.2 we fixed that for the type, constructor, setup/tearDown method. For the test method you get now a comment with a link to the tested method. I think this is better than the original comment.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71784" />
    <CreationDate amount="2004-08-11 09:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[syntax highlighting] deprecated needs a default color</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) enable semantic highlighting</Line>
          <Line>2) enable deprecated highlighting</Line>
          <Line>-&gt; the default color is black and no default style</Line>
          <Line>There should be a reasonable default style.</Line>
          <Line>My first choice would be strikethrough which we currently cannot do.</Line>
          <Line>Some dark yellow for "warning" would be my second choice</Line>
          <Line>To me this is a case where I would like to change only the color and keep the</Line>
          <Line>same style otherwise (bold or italic). This is currently not supported. I</Line>
          <Line>suggest to use bold for now.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) enable semantic highlighting
2) enable deprecated highlighting
  -&gt; the default color is black and no default style
There should be a reasonable default style.
My first choice would be strikethrough which we currently cannot do.
Some dark yellow for "warning" would be my second choice
To me this is a case where I would like to change only the color and keep the
same style otherwise (bold or italic). This is currently not supported. I
suggest to use bold for now.

Fixed in builds &gt;20040820</WithStack>
    <WithOutStack>1) enable semantic highlighting
2) enable deprecated highlighting
  -&gt; the default color is black and no default style
There should be a reasonable default style.
My first choice would be strikethrough which we currently cannot do.
Some dark yellow for "warning" would be my second choice
To me this is a case where I would like to change only the color and keep the
same style otherwise (bold or italic). This is currently not supported. I
suggest to use bold for now.

Fixed in builds &gt;20040820</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71785" />
    <CreationDate amount="2004-08-11 09:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>when using the Find in the symptom database editor it finds the appropriate node, and description, but doesn't highlight the particular text in the description</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341171424">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.hyades.sdb.internal.editors.SymptomDetails.setFocusToTextBox(SymptomDetails.java:130)</Frame>
          <Frame depth="1">org.eclipse.hyades.sdb.internal.editors.SymptomDetails.setFocusToTextBox(SymptomDetails.java:126)</Frame>
          <Frame depth="2">org.eclipse.hyades.sdb.internal.editors.DetailsContent.setFocusFor(DetailsContent.java:84)</Frame>
          <Frame depth="3">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage.add(SymptomDBEditorDetailsPage.java:461)</Frame>
          <Frame depth="4">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage.access$0(SymptomDBEditorDetailsPage.java:398)</Frame>
          <Frame depth="5">org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage$AddAction.run(SymptomDBEditorDetailsPage.java:759)</Frame>
          <Frame depth="6">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:166)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="17">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="25">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="26">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Use the Find in the symptom database editor for some portion of text within 
some description, of a directive or solution.  The find works and highlights 
the appropriate node, and displays the appropriate description on the right 
pane.  However, the actual text within the description is not highlighted.  
This would be nice to have!
Note, we generally use enhancement only for line items (major features).
Fix submitted. Terry, please test thoroughly on linux next test pass.
Eugene found this exception in .log file while using find in symptom db editor:

java.lang.NullPointerException
   at org.eclipse.hyades.sdb.internal.editors.SymptomDetails.setFocusToTextBox
(SymptomDetails.java:130)
   at org.eclipse.hyades.sdb.internal.editors.SymptomDetails.setFocusToTextBox
(SymptomDetails.java:126)
   at org.eclipse.hyades.sdb.internal.editors.DetailsContent.setFocusFor
(DetailsContent.java:84)
   at org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage.add
(SymptomDBEditorDetailsPage.java:461)
   at 
org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage.access$0
(SymptomDBEditorDetailsPage.java:398)
   at 
org.eclipse.hyades.sdb.internal.editors.SymptomDBEditorDetailsPage$AddAction.run
(SymptomDBEditorDetailsPage.java:759)
   at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent
(BaseSelectionListenerAction.java:166)
   at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:915)
   at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:866)
   at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(ActionContributionItem.java:785)
   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled 
Code))
   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined Compiled 
Code))
   at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled 
Code))
   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled 
Code))
   at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled 
Code))
   at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
   at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
   at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:335)
   at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
   at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
   at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
   at java.lang.reflect.Method.invoke(Method.java:391)
   at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
   at org.eclipse.core.launcher.Main.run(Main.java:704)
   at org.eclipse.core.launcher.Main.main(Main.java:688)
New fix submitted. No longer seeing the exception.
Linux, returns alternate values for the cursor position from a text box.
Linux problem fix submitted.
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Use the Find in the symptom database editor for some portion of text within 
some description, of a directive or solution.  The find works and highlights 
the appropriate node, and displays the appropriate description on the right 
pane.  However, the actual text within the description is not highlighted.  
This would be nice to have!
Note, we generally use enhancement only for line items (major features).
Fix submitted. Terry, please test thoroughly on linux next test pass.
Eugene found this exception in .log file while using find in symptom db editor:


New fix submitted. No longer seeing the exception.
Linux, returns alternate values for the cursor position from a text box.
Linux problem fix submitted.
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71786" />
    <CreationDate amount="2004-08-11 10:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Combobox on the toolbar isn't displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="14">
      <source_code type="functiondef">
        <location start="1711" end="1852" />
        <code>ComboAction#createControl(Composite parent) {
...
   Composite c = new Composite(parent, ... );
   CCombo ccombo = new CCombo(c, ....);
...
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1899" end="1997" />
        <code>ComboAction#createControl(Composite parent) {
...
   Combo ccombo = new Combo(parent, ....);
...
}</code>
      </source_code>
      <source_code type="import">
        <location start="2342" end="2370" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="2371" end="2408" />
        <code>import org.eclipse.swt.custom.CCombo;</code>
      </source_code>
      <source_code type="import">
        <location start="2409" end="2441" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2442" end="2475" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="2476" end="3158" />
        <code>public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	ToolBar bar = new ToolBar (shell, SWT.FLAT);
	ToolItem item1 = new ToolItem(bar, SWT.SEPARATOR);
	
	Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item1.setControl(composite);
	item1.setWidth(100);
	CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");
		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}</code>
      </source_code>
      <source_code type="import">
        <location start="3544" end="3571" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="3572" end="3609" />
        <code>import org.eclipse.swt.custom.CCombo;</code>
      </source_code>
      <source_code type="import">
        <location start="3610" end="3642" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="3643" end="3676" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="3677" end="4874" />
        <code>public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	final ToolBar bar = new ToolBar (shell, SWT.FLAT);
	final ToolItem item = new ToolItem(bar, SWT.SEPARATOR);	
	final Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item.setControl(composite);
	item.setWidth(100);
	final CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));	
	bar.setBackground(display.getSystemColor(SWT.COLOR_GREEN));
	composite.setBackground(display.getSystemColor(SWT.COLOR_RED));
	combo.setBackground(display.getSystemColor(SWT.COLOR_BLUE));
	shell.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			System.out.println("ToolBar: " + bar.getBounds() + " Item: " +
item.getBounds());			
			System.out.println("Composite: " + composite.getBounds());
			System.out.println("Combo: " + combo.getBounds());			
		}
	});	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6800" end="6910" />
        <code>Listener resizeListener = new Listener () {
	public void handleEvent(Event event) {
		composite.layout();
	}
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6912" end="6961" />
        <code>toolBar.addListener (SWT.Resize, resizeListener);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Install attached plugin</Line>
          <Line>2) Run workbench</Line>
          <Line>3) Create a simple web project</Line>
          <Line>4) Create a filename called "a.w"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Combobox on the toolbar isn't displayed. Here is how to.

1) Install attached plugin
2) Run workbench
3) Create a simple web project
4) Create a filename called "a.w"

You will see a.w is opened and one toolbar is created. However this toolbar must
have two items, button and a combo. But combo is missing.
Created attachment 13873
test plugin
oops, not a "web project" but "project".

Isn't a duplicate of Bug12379.

Hirotaka, instead of attaching a plugin for testing you could attach a 
standalone example using only SWT (no eclipse.ui or JFace). It makes our lifes 
a way easier.
Works on my machine.
The Combo is there. Small, but there. You can try to set a text or set a width
hint to its GridData object to increate the combo width.

Which GTK and SWT version are you running ?

Created attachment 14051
Screenshot
Created attachment 14069
screen shot
It is still recretable. I'm using 200408051455 build so that you know SWT
version. Also I'm using SUSE Linux Server 9 so that you know GTK version
( I guess it's 2.0, probably )
.
Question: The way to pluging works if you click on eclipse button in the 
toolbar the combo flips visibility. Doesn't the combo show and hide when you 
click on the button ?
Would you be able to write a SWT application (very simple) with only a toolbar 
and combo that has the bug ?
Matsumoto-san, have you tried the suggestion in comment #4?

.

The answer to #8
  Whenever I click the Eclipse icon, nothing is changed.
The answer to #9
  I must apologize that I don't create a simple SWT application.
The answer to #10
  Yes, but nothing is changed.

What I could see a possible workaround code is in 
ComboAction#createControl(), what it does now is something like :

ComboAction#createControl(Composite parent) {
...
   Composite c = new Composite(parent, ... );
   CCombo ccombo = new CCombo(c, ....);
...
}

if this will be changed to something like :

ComboAction#createControl(Composite parent) {
...
   Combo ccombo = new Combo(parent, ....);
...
}

The difference of the code is :
  no additional parent composite is used.
  not CCombo but Combo is used.

I'm trying this workaround now. Looks like this seems to work, but
the problem is this is not a flat look because Combo doesn't suppor
a flat look.

.


Here is a snippet, works fine on my machine, please modify it so it shows the bug:

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CCombo;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;
public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	ToolBar bar = new ToolBar (shell, SWT.FLAT);
	ToolItem item1 = new ToolItem(bar, SWT.SEPARATOR);
	
	Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item1.setControl(composite);
	item1.setWidth(100);
	CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");
		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}

It shows a window which has nothing. Please let me know what you would need more.

PR71786.java works just fine on my machine, I tested several version of GTK.
Could you test using SWT from CVS HEAD, or a more recent build (this week
integration).

Please, run this snippet, click on shell on its up, paste here the output, also
let me know which color(s) you could see in the shell:
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CCombo;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;
public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	final ToolBar bar = new ToolBar (shell, SWT.FLAT);
	final ToolItem item = new ToolItem(bar, SWT.SEPARATOR);	
	final Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item.setControl(composite);
	item.setWidth(100);
	final CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));	
	bar.setBackground(display.getSystemColor(SWT.COLOR_GREEN));
	composite.setBackground(display.getSystemColor(SWT.COLOR_RED));
	combo.setBackground(display.getSystemColor(SWT.COLOR_BLUE));
	shell.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			System.out.println("ToolBar: " + bar.getBounds() + " Item: " +
item.getBounds());			
			System.out.println("Composite: " + composite.getBounds());
			System.out.println("Combo: " + combo.getBounds());			
		}
	});	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}
Output is :

 ToolBar: Rectangle {5, 5, 100, 30} Item: Rectangle {0, 14, 100, 1}
 Composite: Rectangle {0, 14, 100, 1}
 Combo: Rectangle {0, 0, 1, 1}

THe color is both green and red. See attached png file.

.

Created attachment 14112
screen capture
I tested 0817 3.1 build and your code works ok. 
Does your pluging also work with 0817 3.1 ? If so, can I close this bug ?

Created attachment 14143
Using Combo
Created attachment 14144
Using CCombo
Well, still sometihng is strange. Please see *Using Combo" and "Using CCombo"
screnn captures. I guess the size of Combo seems to be correct. 
And what I would need is the fix for not only 3.1 but 3.0.1. So I don't think we
can close it.


"And what I would need is the fix for not only 3.1 but 3.0.1. "
You mean: This bug is already fixed in HEAD and now you need the fix to be 
backported to the 3.0.1 maintenance stream ?
The screenshos are from 3.1 or 3.0.1 Eclipse ?
Yes, this is broken in 3.0.1
I'm 99% sure was the fix for Bug51078 that got this problem fixed in HEAD.
Basically we replace reparenting by our own item/children layout code
(windows-like).


I think (and SSQ agress) it is much code to be backported to 3.0.1.
The fix (in HEAD) is fairly recent, therefore wasn't very tested.
Your plugin worked fine for me using build:
http://download.eclipse.org/downloads/drops/M-M20040825-200408250800/index.php

The thing fails a little bit different on my machine and your machine. So it is
hard to suggested a workaround.

- the problem is caused because a gtk container is not propagating the resize
thru its children.
In my machine the composite does not progate the change to the ccombo.
In your machine (my guess) the toolbar does not progate the change to the
toolItem (consequently the composite also doesn't get resized).

On my machine, the workaround is to add a resize listener to the toolbar and
make it call layout() on the composite. Something like:
Listener resizeListener = new Listener () {
	public void handleEvent(Event event) {
		composite.layout();
	}
};
toolBar.addListener (SWT.Resize, resizeListener);


Okay, our result are different because you're running gtk 2.2.1 and I'm running
gtk 2.4.7. It is actually very hard to get this to work on gtk 2.2.1.

The workaroung in Comment #11 works fine. Is that important for you guys the
flat look ?
Personally I think Combo is better, it doesn't cause the workbench to lose focus
everytime the dropdown list opens.



Flat look seems to be important because other toolbar item is a flat look. But
non-flat look is better than showing nothing.

.

This is already fixed in HEAD and too dangerous to be backported to the
maintenance stream. Closing.</WithStack>
    <WithOutStack>Combobox on the toolbar isn't displayed. Here is how to.

1) Install attached plugin
2) Run workbench
3) Create a simple web project
4) Create a filename called "a.w"

You will see a.w is opened and one toolbar is created. However this toolbar must
have two items, button and a combo. But combo is missing.
Created attachment 13873
test plugin
oops, not a "web project" but "project".

Isn't a duplicate of Bug12379.

Hirotaka, instead of attaching a plugin for testing you could attach a 
standalone example using only SWT (no eclipse.ui or JFace). It makes our lifes 
a way easier.
Works on my machine.
The Combo is there. Small, but there. You can try to set a text or set a width
hint to its GridData object to increate the combo width.

Which GTK and SWT version are you running ?

Created attachment 14051
Screenshot
Created attachment 14069
screen shot
It is still recretable. I'm using 200408051455 build so that you know SWT
version. Also I'm using SUSE Linux Server 9 so that you know GTK version
( I guess it's 2.0, probably )
.
Question: The way to pluging works if you click on eclipse button in the 
toolbar the combo flips visibility. Doesn't the combo show and hide when you 
click on the button ?
Would you be able to write a SWT application (very simple) with only a toolbar 
and combo that has the bug ?
Matsumoto-san, have you tried the suggestion in comment #4?

.

The answer to #8
  Whenever I click the Eclipse icon, nothing is changed.
The answer to #9
  I must apologize that I don't create a simple SWT application.
The answer to #10
  Yes, but nothing is changed.

What I could see a possible workaround code is in 
ComboAction#createControl(), what it does now is something like :

ComboAction#createControl(Composite parent) {
...
   Composite c = new Composite(parent, ... );
   CCombo ccombo = new CCombo(c, ....);
...
}

if this will be changed to something like :

ComboAction#createControl(Composite parent) {
...
   Combo ccombo = new Combo(parent, ....);
...
}

The difference of the code is :
  no additional parent composite is used.
  not CCombo but Combo is used.

I'm trying this workaround now. Looks like this seems to work, but
the problem is this is not a flat look because Combo doesn't suppor
a flat look.

.


Here is a snippet, works fine on my machine, please modify it so it shows the bug:

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CCombo;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;
public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	ToolBar bar = new ToolBar (shell, SWT.FLAT);
	ToolItem item1 = new ToolItem(bar, SWT.SEPARATOR);
	
	Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item1.setControl(composite);
	item1.setWidth(100);
	CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");
		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}

It shows a window which has nothing. Please let me know what you would need more.

PR71786.java works just fine on my machine, I tested several version of GTK.
Could you test using SWT from CVS HEAD, or a more recent build (this week
integration).

Please, run this snippet, click on shell on its up, paste here the output, also
let me know which color(s) you could see in the shell:
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CCombo;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;
public class PR71786 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	final ToolBar bar = new ToolBar (shell, SWT.FLAT);
	final ToolItem item = new ToolItem(bar, SWT.SEPARATOR);	
	final Composite composite = new Composite(bar, SWT.NONE);
	composite.setLayout(new FillLayout());
	item.setControl(composite);
	item.setWidth(100);
	final CCombo combo = new CCombo(composite, SWT.DROP_DOWN);
	combo.setText("combo");		
	shell.setLayout(new GridLayout(1, true));
	bar.setLayoutData(new GridData(SWT.DEFAULT, 30));	
	bar.setBackground(display.getSystemColor(SWT.COLOR_GREEN));
	composite.setBackground(display.getSystemColor(SWT.COLOR_RED));
	combo.setBackground(display.getSystemColor(SWT.COLOR_BLUE));
	shell.addListener(SWT.MouseDown, new Listener() {
		public void handleEvent(Event event) {
			System.out.println("ToolBar: " + bar.getBounds() + " Item: " +
item.getBounds());			
			System.out.println("Composite: " + composite.getBounds());
			System.out.println("Combo: " + combo.getBounds());			
		}
	});	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}
Output is :

 ToolBar: Rectangle {5, 5, 100, 30} Item: Rectangle {0, 14, 100, 1}
 Composite: Rectangle {0, 14, 100, 1}
 Combo: Rectangle {0, 0, 1, 1}

THe color is both green and red. See attached png file.

.

Created attachment 14112
screen capture
I tested 0817 3.1 build and your code works ok. 
Does your pluging also work with 0817 3.1 ? If so, can I close this bug ?

Created attachment 14143
Using Combo
Created attachment 14144
Using CCombo
Well, still sometihng is strange. Please see *Using Combo" and "Using CCombo"
screnn captures. I guess the size of Combo seems to be correct. 
And what I would need is the fix for not only 3.1 but 3.0.1. So I don't think we
can close it.


"And what I would need is the fix for not only 3.1 but 3.0.1. "
You mean: This bug is already fixed in HEAD and now you need the fix to be 
backported to the 3.0.1 maintenance stream ?
The screenshos are from 3.1 or 3.0.1 Eclipse ?
Yes, this is broken in 3.0.1
I'm 99% sure was the fix for Bug51078 that got this problem fixed in HEAD.
Basically we replace reparenting by our own item/children layout code
(windows-like).


I think (and SSQ agress) it is much code to be backported to 3.0.1.
The fix (in HEAD) is fairly recent, therefore wasn't very tested.
Your plugin worked fine for me using build:
http://download.eclipse.org/downloads/drops/M-M20040825-200408250800/index.php

The thing fails a little bit different on my machine and your machine. So it is
hard to suggested a workaround.

- the problem is caused because a gtk container is not propagating the resize
thru its children.
In my machine the composite does not progate the change to the ccombo.
In your machine (my guess) the toolbar does not progate the change to the
toolItem (consequently the composite also doesn't get resized).

On my machine, the workaround is to add a resize listener to the toolbar and
make it call layout() on the composite. Something like:
Listener resizeListener = new Listener () {
	public void handleEvent(Event event) {
		composite.layout();
	}
};
toolBar.addListener (SWT.Resize, resizeListener);


Okay, our result are different because you're running gtk 2.2.1 and I'm running
gtk 2.4.7. It is actually very hard to get this to work on gtk 2.2.1.

The workaroung in Comment #11 works fine. Is that important for you guys the
flat look ?
Personally I think Combo is better, it doesn't cause the workbench to lose focus
everytime the dropdown list opens.



Flat look seems to be important because other toolbar item is a flat look. But
non-flat look is better than showing nothing.

.

This is already fixed in HEAD and too dangerous to be backported to the
maintenance stream. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71787" />
    <CreationDate amount="2004-08-11 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-releng" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CDT 2.0.1 Features contain version 2.0.0 in description</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 200408110400: Select Help-&gt;About; Click Features, select the 3 CDT features:
CDT, Source, SDK. They all show version 2.0.1 in the table, but 2.0.0 in the
bottom half where the descriptions are.
Lets flip this to our CDT release engineer 8-)
Fixed for 2.0.2.</WithStack>
    <WithOutStack>Build 200408110400: Select Help-&gt;About; Click Features, select the 3 CDT features:
CDT, Source, SDK. They all show version 2.0.1 in the table, but 2.0.0 in the
bottom half where the descriptions are.
Lets flip this to our CDT release engineer 8-)
Fixed for 2.0.2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71788" />
    <CreationDate amount="2004-08-11 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New/Edit Variable dialog, Name Text has incorrect accessible name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>From any wizard extending from HyadesNewWizard, in Advanced properties, Link 
to File in File system.  Select Variables.  Path Variable dialog opens, select 
New.  

In resulting dialog, Name Text field has accessible name of "Location:"  
Suggest name of "Name:"

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Java, please have a look at this one. I'm not sure if this dialog is owned by 
us or by the platform. If it's ours then it should be a quick fix; otherwise we 
can forward the bug to the rightful owner.
The newest "New Variable" dialog in Hyades new wizard 
has both Name and Location text-field. 
The dialog here works well.
Works with new UI design.
verified &amp; closed.</WithStack>
    <WithOutStack>From any wizard extending from HyadesNewWizard, in Advanced properties, Link 
to File in File system.  Select Variables.  Path Variable dialog opens, select 
New.  

In resulting dialog, Name Text field has accessible name of "Location:"  
Suggest name of "Name:"

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Java, please have a look at this one. I'm not sure if this dialog is owned by 
us or by the platform. If it's ours then it should be a quick fix; otherwise we 
can forward the bug to the rightful owner.
The newest "New Variable" dialog in Hyades new wizard 
has both Name and Location text-field. 
The dialog here works well.
Works with new UI design.
verified &amp; closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71789" />
    <CreationDate amount="2004-08-11 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refactoring "Move..." does not update package declaration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When moving an aspect (e.g. from the default package to some other package), the 
package declaration is not updated. This may lead to breaking pointcuts, if in 
those pointcuts package references are missing.
The behaviour in AJDT 1.2.0M1 is different than that described here. Right 
clicking on .aj files and navigating to Refactor does not provide the "move" 
option.


Closing this bug because Refactor &gt; Move no longer works at all as described in bug 121533.</WithStack>
    <WithOutStack>When moving an aspect (e.g. from the default package to some other package), the 
package declaration is not updated. This may lead to breaking pointcuts, if in 
those pointcuts package references are missing.
The behaviour in AJDT 1.2.0M1 is different than that described here. Right 
clicking on .aj files and navigating to Refactor does not provide the "move" 
option.


Closing this bug because Refactor &gt; Move no longer works at all as described in bug 121533.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71790" />
    <CreationDate amount="2004-08-11 11:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Deployment wizard / editor missing accessible names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In New Deployment Wizard:

artifact and location trees in art-loc mapping page have no accessible name.  
These trees would have no context if user was using a screen reader.  Suggest 
names of "Artifacts" and "Locations"

In Deployment Editor Overview:

Name, Description text fields have no accessible name.  Suggest names 
of "Name" and "Description."

In Deployment Editor Pairs:

Artifact and Location trees have no accessible name.  See comments for the new 
wizard.

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>In New Deployment Wizard:

artifact and location trees in art-loc mapping page have no accessible name.  
These trees would have no context if user was using a screen reader.  Suggest 
names of "Artifacts" and "Locations"

In Deployment Editor Overview:

Name, Description text fields have no accessible name.  Suggest names 
of "Name" and "Description."

In Deployment Editor Pairs:

Artifact and Location trees have no accessible name.  See comments for the new 
wizard.

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71791" />
    <CreationDate amount="2004-08-11 11:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Location Editor: text fields have no accessible name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Location Editor Overview:

Name, Description, and Host name text fields have no accessible name.  This 
prevents screen readers from identifying a context.  Suggest names 
of "Name," "Description," and "Hostname."

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Created attachment 13935
adding accessible names in location editor
Created attachment 13936
2 patch files with accessible names in location editor

2 patch files with the fix...
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Location Editor Overview:

Name, Description, and Host name text fields have no accessible name.  This 
prevents screen readers from identifying a context.  Suggest names 
of "Name," "Description," and "Hostname."

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Created attachment 13935
adding accessible names in location editor
Created attachment 13936
2 patch files with accessible names in location editor

2 patch files with the fix...
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71792" />
    <CreationDate amount="2004-08-11 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Datapool editor: missing accessible names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Datapool Editor overview:

Text fields for Name and Description have no accessible name.  Recommend names 
of "Name" and "Description."

Datapool Editor Data Table:

Accessible names are missing for Data table and for each individual cell of 
the data table.  The widget's accessible name should change, depending on 
which cell/row has focus.  At the bare minimum, accessible name should 
be "Data Table."

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Accessible names in overview page is added by fixing Bug#: 71792.
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Datapool Editor overview:

Text fields for Name and Description have no accessible name.  Recommend names 
of "Name" and "Description."

Datapool Editor Data Table:

Accessible names are missing for Data table and for each individual cell of 
the data table.  The widget's accessible name should change, depending on 
which cell/row has focus.  At the bare minimum, accessible name should 
be "Data Table."

Resolution: Override the default AccessibilityListener for these fields.  See 
http://www.eclipse.org/articles/Article-Accessibility/accessibility.html for 
more information.
Accessible names in overview page is added by fixing Bug#: 71792.
fixed in 20040818_1145 or later.
verified in 20040818_1145
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71793" />
    <CreationDate amount="2004-08-11 11:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>NoAspectBoundException when initializing fields in aspect constructor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341171433">
        <Exception>org.aspectj.lang.NoAspectBoundException</Exception>
        <Reason>Exception while initializing aha_Test: 
org.aspectj.lang.NoAspectBoundException: aha_Test</Reason>
        <Frames>
          <Frame depth="0">aha.Test.aspectOf(Test.aj)</Frame>
          <Frame depth="1">aha.Aha.main(Aha.java)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341171433">
        <Exception />
        <Reason />
        <Frames />
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="51" end="83" />
        <code>public Test() {
		field = 0;
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>This code...

public aspect Test {
	
	int field;
	
	public Test() {
		field = 0;
	}

..some pieces of advice...

}

...leads to this exception:

org.aspectj.lang.NoAspectBoundException: Exception while initializing aha_Test: 
org.aspectj.lang.NoAspectBoundException: aha_Test
	at aha.Test.aspectOf(Test.aj)
	at aha.Aha.main(Aha.java)
Caused by: org.aspectj.lang.NoAspectBoundException: aha_Test
	at aha.Test.aspectOf(Test.aj)
	at aha.Test.&lt;init&gt;(Test.aj:21)
	at aha.Test.ajc$postClinit(Test.aj)
	at aha.Test.&lt;clinit&gt;(Test.aj:16)
	... 1 more
Exception in thread "main" 


I assume that something weird happens when I set field in initialization phase!?
whether or not this is a bug depends on exactly what the "some pieces of advice" 
are. If you are trying to advise a join point that happens before the aspect is 
constructed (like any field set in the aspect perhaps?) then the behaviour you 
are seeing is correct. Please confirm or supply a complete test case that 
reproduces the bug...

Thanks, A.
Yes, I am having a set-advice on that field. That makes sense, cheers.
However, I would wish to have a better error message in that case if possible. 
(e.g. output, what advice causes this error)
I'm moving this to an enhancement request. The exception you see occurs at 
runtime (obviously) and gives pretty good information already: whilst 
initializing the "aha_Test" aspect ("aha.Test" would have been better there), an 
attempt was made to obtain the aha.Test aspect instance, and a 
NoAspectBoundException was thrown".

The enhancement to be considered is that is some cases we know statically that 
this problem is going to occur - i.e. when weaving advice into an aspect 
initializer, and that advice has no runtime test associated with it. In such 
circumstances we could put out a compilation error. Your program would be one 
such situation I suspect.
We're not going to get to this in AJ 1.5.0. Marking as "LATER" for consideration
in 1.5.1 and future release planning.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithStack>
    <WithOutStack>This code...

public aspect Test {
	
	int field;
	
	public Test() {
		field = 0;
	}

..some pieces of advice...

}

...leads to this exception:



	... 1 more
Exception in thread "main" 


I assume that something weird happens when I set field in initialization phase!?
whether or not this is a bug depends on exactly what the "some pieces of advice" 
are. If you are trying to advise a join point that happens before the aspect is 
constructed (like any field set in the aspect perhaps?) then the behaviour you 
are seeing is correct. Please confirm or supply a complete test case that 
reproduces the bug...

Thanks, A.
Yes, I am having a set-advice on that field. That makes sense, cheers.
However, I would wish to have a better error message in that case if possible. 
(e.g. output, what advice causes this error)
I'm moving this to an enhancement request. The exception you see occurs at 
runtime (obviously) and gives pretty good information already: whilst 
initializing the "aha_Test" aspect ("aha.Test" would have been better there), an 
attempt was made to obtain the aha.Test aspect instance, and a 
NoAspectBoundException was thrown".

The enhancement to be considered is that is some cases we know statically that 
this problem is going to occur - i.e. when weaving advice into an aspect 
initializer, and that advice has no runtime test associated with it. In such 
circumstances we could put out a compilation error. Your program would be one 
such situation I suspect.
We're not going to get to this in AJ 1.5.0. Marking as "LATER" for consideration
in 1.5.1 and future release planning.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71794" />
    <CreationDate amount="2004-08-11 11:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Mnemonic in error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>While debugging, hit a breakpoint and got a timeout exception at the same time. Attempted to resume 
the thread and got an error dialog that had a mnemonic in the message. See attached screen shot.
Created attachment 13877
screen shot
*** Bug 73392 has been marked as a duplicate of this bug. ***
*** Bug 76982 has been marked as a duplicate of this bug. ***
We need to fix all the "step" error messages - they all have the same problem.
*** Bug 84482 has been marked as a duplicate of this bug. ***
Deferred
Re-opening.
Fixed in AbstractDebugActionDelegate. Changes to:

ActionMessage.java/.properties
DisconnectActionDelegate
RelaunchActionDelegate
ResumeActionDelegate
StepIntoActionDelegate
StepOverActionDelegate
StepReturnActionDelegate
SuspendActionDelegate
TerminateActionDelegate
TermainteAndRemoveActionDelegate
Please verify, Kevin.
verified</WithStack>
    <WithOutStack>While debugging, hit a breakpoint and got a timeout exception at the same time. Attempted to resume 
the thread and got an error dialog that had a mnemonic in the message. See attached screen shot.
Created attachment 13877
screen shot
*** Bug 73392 has been marked as a duplicate of this bug. ***
*** Bug 76982 has been marked as a duplicate of this bug. ***
We need to fix all the "step" error messages - they all have the same problem.
*** Bug 84482 has been marked as a duplicate of this bug. ***
Deferred
Re-opening.
Fixed in AbstractDebugActionDelegate. Changes to:

ActionMessage.java/.properties
DisconnectActionDelegate
RelaunchActionDelegate
ResumeActionDelegate
StepIntoActionDelegate
StepOverActionDelegate
StepReturnActionDelegate
SuspendActionDelegate
TerminateActionDelegate
TermainteAndRemoveActionDelegate
Please verify, Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71795" />
    <CreationDate amount="2004-08-11 11:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.11" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code templates interfere with aspect keyword</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have an aspect and in there type pu+&lt;Enter&gt;, which expands to a public method 
definition. When I instantly hit &lt;Ctrl&gt;+Z to undo this step, the keyword 
"aspect" is strangely replaced by "class".
Yes, strange isn't it :)
This is already fixed in CVS. Will be released in 1.1.12</WithStack>
    <WithOutStack>I have an aspect and in there type pu+&lt;Enter&gt;, which expands to a public method 
definition. When I instantly hit &lt;Ctrl&gt;+Z to undo this step, the keyword 
"aspect" is strangely replaced by "class".
Yes, strange isn't it :)
This is already fixed in CVS. Will be released in 1.1.12</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71796" />
    <CreationDate amount="2004-08-11 11:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Fields in pointcuts are not checked for existance</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I am able to declare set/get pointcuts over non-existing fields without getting 
any error message.
This is the expected behaviour. What about...

declare warning : get(String sausages)
  : "Please don't declare any fields called sausage";

?
Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>I am able to declare set/get pointcuts over non-existing fields without getting 
any error message.
This is the expected behaviour. What about...

declare warning : get(String sausages)
  : "Please don't declare any fields called sausage";

?
Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71797" />
    <CreationDate amount="2004-08-11 11:46:00 -0400" />
    <DupId amount="75701" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JavaDoc references to deprecated methods should not be warnings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If a JavaDoc link points to a deprecated method, this should not generate a 
compiler warning.  It seems normal to want to document or refer to methods 
which are deprecated, especially from a new method which is the preferred 
replacement of the deprecated.


*** This bug has been marked as a duplicate of 75701 ***</WithStack>
    <WithOutStack>If a JavaDoc link points to a deprecated method, this should not generate a 
compiler warning.  It seems normal to want to document or refer to methods 
which are deprecated, especially from a new method which is the preferred 
replacement of the deprecated.


*** This bug has been marked as a duplicate of 75701 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71798" />
    <CreationDate amount="2004-08-11 12:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Webapp] No stdout from Infocenter or stand-alone help.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Errors and messages outputed by infocenter or stand-alone help are not 
reported in command window by default.  Only errors from the launcher, like 
wrong command are printed out.  To see output from the second process (the 
Infocenter Eclipse) it is necessary to pass options like -vm c:\jdk1.4.2
\bin\java.exe -noexec (to make sure that eclipse.exe or javaw.exe are not 
consuming the output).  This behavior should be easier to achieve.  In the 
infocenter it makes sense to be the default.
Doesn't it also make sense to be the default for standalone help mode as well 
as infocenter?

--Lee Anne
If makes sense for both scenarios.
I was confused by the fact that if stand-alone help is launched by another 
program, there should not be any console window opened, but in this case the 
output should still be produced because the program might want to collect it.</WithStack>
    <WithOutStack>Errors and messages outputed by infocenter or stand-alone help are not 
reported in command window by default.  Only errors from the launcher, like 
wrong command are printed out.  To see output from the second process (the 
Infocenter Eclipse) it is necessary to pass options like -vm c:\jdk1.4.2
\bin\java.exe -noexec (to make sure that eclipse.exe or javaw.exe are not 
consuming the output).  This behavior should be easier to achieve.  In the 
infocenter it makes sense to be the default.
Doesn't it also make sense to be the default for standalone help mode as well 
as infocenter?

--Lee Anne
If makes sense for both scenarios.
I was confused by the fact that if stand-alone help is launched by another 
program, there should not be any console window opened, but in this case the 
output should still be produced because the program might want to collect it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71799" />
    <CreationDate amount="2004-08-11 12:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Readonly text fields aren't always readonly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- open any wizard and click in the descriptive text in the header.</Line>
          <Line>- start typing.</Line>
          <Line>Observe: the text is editable</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- open properties dialog on workspace resource</Line>
          <Line>- go to Info page</Line>
          <Line>- click in Path field</Line>
          <Line>- start typing</Line>
          <Line>Observe: the text is editable</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20040810 (3.1 M1 candidate)

- open any wizard and click in the descriptive text in the header.
- start typing.
Observe: the text is editable

- open properties dialog on workspace resource
- go to Info page
- click in Path field
- start typing
Observe: the text is editable

Note: the Last Modified and Type fields are not editable.
This has been fixed in latest (bug in Text.checkStyle()).</WithStack>
    <WithOutStack>I20040810 (3.1 M1 candidate)

- open any wizard and click in the descriptive text in the header.
- start typing.
Observe: the text is editable

- open properties dialog on workspace resource
- go to Info page
- click in Path field
- start typing
Observe: the text is editable

Note: the Last Modified and Type fields are not editable.
This has been fixed in latest (bug in Text.checkStyle()).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="71800" />
    <CreationDate amount="2004-08-11 12:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[IDE] Clean action should be background operation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build R3.0

When the user selects "Clean..." from the Project menu, it pops up a modal
dialog which shows progress. After the "clean" part is done, then the build is
done in the background.

The "clean" action should also be done in the background.

The inconvenience of having it in the foreground is magnified when you have many
projects with lots of source files (so it does real work and takes many
seconds...up to a minute)
I'll take this since I'm working in the area at the moment.
Fix released.
Verified in I20050216-2300</WithStack>
    <WithOutStack>build R3.0

When the user selects "Clean..." from the Project menu, it pops up a modal
dialog which shows progress. After the "clean" part is done, then the build is
done in the background.

The "clean" action should also be done in the background.

The inconvenience of having it in the foreground is magnified when you have many
projects with lots of source files (so it does real work and takes many
seconds...up to a minute)
I'll take this since I'm working in the area at the moment.
Fix released.
Verified in I20050216-2300</WithOutStack>
  </Bug>
</infozilla-output>

