<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="73001" />
    <CreationDate amount="2004-08-31 15:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide a standard web browser read-only editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There are many browser views and editors floating around. WTP has one, the 
Google RCP example has one, the Browser RCP example has one, RSSOwl 
implemented one, and more are on the way. Since this seems a pretty basic 
thing to want to do I propose that the Platform provide a standard read-only 
embedded web browser editor just like it provdes a standard text editor. 
Furthermore I propose a simple API be created to invoke it. Contructing editor 
inputs and whatnot is not simple; I just want a function that you pass a URL 
or a filename, and *poof* it opens an editor tab for it if there's not one 
open already.

This is not a duplicate of bug 69647 but is related to it.
Suggest augmenting the request in bug 69647 to allow the caller to specify
whether the browser be opened externally or internally.  Could possibly give the
user the choice as well, similarly to how this is currently handled in the Help
preferences.  

Keeping this PR open for that aspect of the problem.

a browser was provided in 3.1</WithStack>
    <WithOutStack>There are many browser views and editors floating around. WTP has one, the 
Google RCP example has one, the Browser RCP example has one, RSSOwl 
implemented one, and more are on the way. Since this seems a pretty basic 
thing to want to do I propose that the Platform provide a standard read-only 
embedded web browser editor just like it provdes a standard text editor. 
Furthermore I propose a simple API be created to invoke it. Contructing editor 
inputs and whatnot is not simple; I just want a function that you pass a URL 
or a filename, and *poof* it opens an editor tab for it if there's not one 
open already.

This is not a duplicate of bug 69647 but is related to it.
Suggest augmenting the request in bug 69647 to allow the caller to specify
whether the browser be opened externally or internally.  Could possibly give the
user the choice as well, similarly to how this is currently handled in the Help
preferences.  

Keeping this PR open for that aspect of the problem.

a browser was provided in 3.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73002" />
    <CreationDate amount="2004-08-31 15:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[Progress] Strikeout text in progress view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I200408241200

Text in the progress view that I think should be underlined instead looks
striked out.  Screenshot attached.
Created attachment 14307
Underlined?
There are currently no plans to work on this feature
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I200408241200

Text in the progress view that I think should be underlined instead looks
striked out.  Screenshot attached.
Created attachment 14307
Underlined?
There are currently no plans to work on this feature
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73003" />
    <CreationDate amount="2004-08-31 15:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SocketException and NPE when moving class to different project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Was doing the Inter dependency testcase here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
and was moving MyJPanel from project Test11 to Test3 when the following
exceptions were thrown in the logs. A NPE dialog also popped up on the IDE. But
following that everything was working fine again - both the MyJFrame and
MyJPanel both had their VMs working fine. Just wanted to log the NPE dialog
which popped up.




ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.759
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project
(Test2)-Beaninfo:err&gt;java.net.SocketException: Socket closed

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.772
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.774
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:120)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.775
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.776
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.net.SocketOutputStream.write(SocketOutputStream.java:157)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.777
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.778
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:86)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.779
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.780
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:144)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.781
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.783
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.DataOutputStream.flush(DataOutputStream.java:126)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.784
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.785
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.common.remote.Commands.writeValue(Commands.java:917)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.797
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.799
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.sendObject(ConnectionHandler.j
ava:725)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.800
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.801
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:328
)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.802
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.803
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.804
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.ve.java.core 4 0 Aug 31, 2004 15:10:45.973
!MESSAGE Exception thrown.
!STACK 0
java.lang.NullPointerException
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.setupBeanProxy(Unknown Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.setBeanProxy(Unknown Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.wrapperBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.wrapperBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.jfc.core.ComponentProxyAdapter.applyAllSettings(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initSetting(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run(Unknown
Source)
        at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)
Was not able to consistently recreate the problem. Could have been a timing
thing where the socket got closed earlier, and the later exception followed.

This works in VE 1.1
closing</WithStack>
    <WithOutStack>Was doing the Inter dependency testcase here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
and was moving MyJPanel from project Test11 to Test3 when the following
exceptions were thrown in the logs. A NPE dialog also popped up on the IDE. But
following that everything was working fine again - both the MyJFrame and
MyJPanel both had their VMs working fine. Just wanted to log the NPE dialog
which popped up.




ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.759
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project
(Test2)-Beaninfo:err&gt;java.net.SocketException: Socket closed

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.772
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.774
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:120)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.775
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.776
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.net.SocketOutputStream.write(SocketOutputStream.java:157)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.777
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.778
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:86)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.779
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.780
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:144)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.781
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.783
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at java.io.DataOutputStream.flush(DataOutputStream.java:126)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.784
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.785
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.common.remote.Commands.writeValue(Commands.java:917)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.797
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.799
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.sendObject(ConnectionHandler.j
ava:725)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.800
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.801
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:328
)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.802
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.803
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt; 
at
org.eclipse.jem.internal.proxy.vm.remote.ConnectionThread.run(ConnectionThread.java:47)

!ENTRY org.eclipse.jem.proxy 2 0 Aug 31, 2004 15:10:38.804
!MESSAGE
+++ Warning +++: Tue Aug 31 15:10:38 EDT 2004    Project (Test2)-Beaninfo:err&gt;

!ENTRY org.eclipse.ve.java.core 4 0 Aug 31, 2004 15:10:45.973
!MESSAGE Exception thrown.
!STACK 0
java.lang.NullPointerException
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.setupBeanProxy(Unknown Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.setBeanProxy(Unknown Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.wrapperBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyUtilities.wrapperBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.jfc.core.ComponentProxyAdapter.applyAllSettings(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initSetting(Unknown
Source)
        at
org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initBeanProxy(Unknown
Source)
        at
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run(Unknown
Source)
        at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)
Was not able to consistently recreate the problem. Could have been a timing
thing where the socket got closed earlier, and the later exception followed.

This works in VE 1.1
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73004" />
    <CreationDate amount="2004-08-31 15:39:00 -0400" />
    <DupId amount="37701" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support for backup/secondary/multiple Update URL(s)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Since the main Eclipse Update Manager site
(http://download.eclipse.org/updates/3.0/site.xml) only contains Release builds,
and the Eclipse Test Update Manager site
(http://download.eclipse.org/testUpdates/site.xml) has I and M builds, would it
be possible to provide more than one Update URL within a plugin, so that more
than one Update URL location can be specified? 

This would also allow that EMF R 2.0.1 could be on the main Updates site (along
with Eclipse, GEF and JDT Previews), but its I and M builds could be on its
Secondary Update Manager Site
(http://download.eclipse.org/updates/3.0/site.xml). Thus, users who want to
update to an I or M release to do so by enabling that checkbox when searching
for updates, or to ignore them if they only want R builds. As long as the the
URLs have logical names associated with them, it should be fairly intuitive for
 users which sites to use/search for what types of updates. 

Note that this functionality is already attainable by misusing the Discovery
URL, pointing it at this secondary Update Manager Site - however, I feel that
for the sake of preserving the intent of Discovery URLs, this misuse should be
removed (this misuse was a temporary "hack" put in place by me pending release
of Eclipse 3.0 to its UM site, in order to provide a way for EMF users to use UM
to update EMF). 

However, by removing this hack, we remove access to existing functionality in
EMF (UM access to Integration and Maintenance builds). If this feature request
can be implemented, then we achieve the best of both worlds. ;-)

Thanks,

Nick Boldt
codeslave@ca.ibm.com
Oops. URL for current EMF Updates is actually
http://download.eclipse.org/tools/emf/updates/site.xml, not the one listed above.
Further update. Eclipse ignores Discovery URLs when searching for updates. Thus
I was mistaken - you can't "hijack" the Discovery URL to get this functionality;
instead, you must manually enter additional URL(s) if you want to get updates
from more than one Update location.
The test site is just a test site, and not meant for any development. It is 
purely used for testing.
There have been discussions and we will seriously looking at being able to use 
the update manager to update from build to build (either M builds or I 
builds), which will address your second concern.

As far as having more than one update site, I doubt that this will get 
implemented. These decisions have been made before I worked on this component, 
but there were good reasons to keep it that way. 
Another way to redirect the updates from a different update site is to set up 
a site policy (check the online help for instructions).



*** This bug has been marked as a duplicate of 37701 ***</WithStack>
    <WithOutStack>Since the main Eclipse Update Manager site
(http://download.eclipse.org/updates/3.0/site.xml) only contains Release builds,
and the Eclipse Test Update Manager site
(http://download.eclipse.org/testUpdates/site.xml) has I and M builds, would it
be possible to provide more than one Update URL within a plugin, so that more
than one Update URL location can be specified? 

This would also allow that EMF R 2.0.1 could be on the main Updates site (along
with Eclipse, GEF and JDT Previews), but its I and M builds could be on its
Secondary Update Manager Site
(http://download.eclipse.org/updates/3.0/site.xml). Thus, users who want to
update to an I or M release to do so by enabling that checkbox when searching
for updates, or to ignore them if they only want R builds. As long as the the
URLs have logical names associated with them, it should be fairly intuitive for
 users which sites to use/search for what types of updates. 

Note that this functionality is already attainable by misusing the Discovery
URL, pointing it at this secondary Update Manager Site - however, I feel that
for the sake of preserving the intent of Discovery URLs, this misuse should be
removed (this misuse was a temporary "hack" put in place by me pending release
of Eclipse 3.0 to its UM site, in order to provide a way for EMF users to use UM
to update EMF). 

However, by removing this hack, we remove access to existing functionality in
EMF (UM access to Integration and Maintenance builds). If this feature request
can be implemented, then we achieve the best of both worlds. ;-)

Thanks,

Nick Boldt
codeslave@ca.ibm.com
Oops. URL for current EMF Updates is actually
http://download.eclipse.org/tools/emf/updates/site.xml, not the one listed above.
Further update. Eclipse ignores Discovery URLs when searching for updates. Thus
I was mistaken - you can't "hijack" the Discovery URL to get this functionality;
instead, you must manually enter additional URL(s) if you want to get updates
from more than one Update location.
The test site is just a test site, and not meant for any development. It is 
purely used for testing.
There have been discussions and we will seriously looking at being able to use 
the update manager to update from build to build (either M builds or I 
builds), which will address your second concern.

As far as having more than one update site, I doubt that this will get 
implemented. These decisions have been made before I worked on this component, 
but there were good reasons to keep it that way. 
Another way to redirect the updates from a different update site is to set up 
a site policy (check the online help for instructions).



*** This bug has been marked as a duplicate of 37701 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73005" />
    <CreationDate amount="2004-08-31 16:19:00 -0400" />
    <DupId amount="66974" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DnD] Pane layout messed up after closing maximized tab</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) open at least 4 files for editing</Line>
          <Line>2) drag two of the editor tabs to a side edge so that there are now two editors</Line>
          <Line>open side-by-side, with an additional editor tab on each side.</Line>
          <Line>3) double-click one of the tabs to maximize its editor</Line>
          <Line>4) close the maximized editor</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>To reproduce:

1) open at least 4 files for editing
2) drag two of the editor tabs to a side edge so that there are now two editors
open side-by-side, with an additional editor tab on each side.
3) double-click one of the tabs to maximize its editor
4) close the maximized editor

Problem:

Only the editors on the maximized side are visible.
The other editors are still around, but hidden. Double clicking them in the
package explorer has no effect.

To fix the view:

maximize and then minimize one of the open editors.


*** This bug has been marked as a duplicate of 66974 ***</WithStack>
    <WithOutStack>To reproduce:

1) open at least 4 files for editing
2) drag two of the editor tabs to a side edge so that there are now two editors
open side-by-side, with an additional editor tab on each side.
3) double-click one of the tabs to maximize its editor
4) close the maximized editor

Problem:

Only the editors on the maximized side are visible.
The other editors are still around, but hidden. Double clicking them in the
package explorer has no effect.

To fix the view:

maximize and then minimize one of the open editors.


*** This bug has been marked as a duplicate of 66974 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73006" />
    <CreationDate amount="2004-08-31 16:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compile problems bean not showing up in beans view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Was performing the 'Interdependency Tests' testcase found here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
Basically Project1 had JFrame, Project 2 had JPanel. The JFrame has contentpane
set to the JPanel in Project2. A compiler problem was induced into the JPanel
class (added import foo.bar;) and the class saved. 
The JPanel class shows up fine in its editor, but there is no trace of the
JPanel in the JFrame class. The testcase says (last page) 'VERIFY that JFrame
displays a red X on the Beans View for JPanel, but displays otherwise'.
Either the behaviour of VE is wrong, or the testcase needs to be updated.
The problem is that it now throws a generic java.lang.Error with msg "Unresolved
compilation error". We normally don't want to catch and squelch Errors. We may
need to and let most errors through but only ones that are exactly an Error, and
not a subclass, be caught and reported.
The fix has been released to HEAD.
Warning message shows the compile problem on JFrame. VErified in M20050824.
*** Bug 98425 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Was performing the 'Interdependency Tests' testcase found here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
Basically Project1 had JFrame, Project 2 had JPanel. The JFrame has contentpane
set to the JPanel in Project2. A compiler problem was induced into the JPanel
class (added import foo.bar;) and the class saved. 
The JPanel class shows up fine in its editor, but there is no trace of the
JPanel in the JFrame class. The testcase says (last page) 'VERIFY that JFrame
displays a red X on the Beans View for JPanel, but displays otherwise'.
Either the behaviour of VE is wrong, or the testcase needs to be updated.
The problem is that it now throws a generic java.lang.Error with msg "Unresolved
compilation error". We normally don't want to catch and squelch Errors. We may
need to and let most errors through but only ones that are exactly an Error, and
not a subclass, be caught and reported.
The fix has been released to HEAD.
Warning message shows the compile problem on JFrame. VErified in M20050824.
*** Bug 98425 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73007" />
    <CreationDate amount="2004-08-31 16:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PDE doesn't detect exported system packages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Modify config.ini of Eclipse to include the following additional property:</Line>
          <Line>osgi.framework.systempackages=java.sql,javax.sql</Line>
          <Line>2. Start the workbench and create a new plugin project named "test" -- be sure</Line>
          <Line>to select to create OSGi bundle manifest.</Line>
          <Line>3. Open META-INF/MANIFEST.MF and add the following line:</Line>
          <Line>Import-Package: java.sql</Line>
          <Line>4. Save manifest and then right click on manifest and select "PDE Tools &gt;</Line>
          <Line>Create Ant Build File"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I have a target platform that has specific packages exported via the system 
bundle (osgi.framework.systempackages), PDE doesn't seem to be able to detect 
this, and will not allow me to generate a build.xml file if I am importing one 
of these exported system packages.

To reproduce:

1. Modify config.ini of Eclipse to include the following additional property:
        osgi.framework.systempackages=java.sql,javax.sql
2. Start the workbench and create a new plugin project named "test" -- be sure 
to select to create OSGi bundle manifest.
3. Open META-INF/MANIFEST.MF and add the following line:
        Import-Package: java.sql
4. Save manifest and then right click on manifest and select "PDE Tools &gt; 
Create Ant Build File"

Errors will show in the error log:

!ENTRY org.eclipse.pde.build 2 1 Aug 31, 2004 15:32:58.422
!MESSAGE Some inter-plug-in dependencies have not been satisfied.
!SUBENTRY 1 test 2 2 Aug 31, 2004 15:32:58.432
!MESSAGE Unsatisfied import package java.sql_0.0.0.

!ENTRY org.eclipse.pde.build 4 8 Aug 31, 2004 15:32:58.432
!MESSAGE Unable to find element: test.


This should be detecting that the target platform is exporting java.sql as a 
system package, and should be available for import into the plugin.
In 3.1, the usage of profiles is taken into account, which I believe fixes this
problem.</WithStack>
    <WithOutStack>If I have a target platform that has specific packages exported via the system 
bundle (osgi.framework.systempackages), PDE doesn't seem to be able to detect 
this, and will not allow me to generate a build.xml file if I am importing one 
of these exported system packages.

To reproduce:

1. Modify config.ini of Eclipse to include the following additional property:
        osgi.framework.systempackages=java.sql,javax.sql
2. Start the workbench and create a new plugin project named "test" -- be sure 
to select to create OSGi bundle manifest.
3. Open META-INF/MANIFEST.MF and add the following line:
        Import-Package: java.sql
4. Save manifest and then right click on manifest and select "PDE Tools &gt; 
Create Ant Build File"

Errors will show in the error log:

!ENTRY org.eclipse.pde.build 2 1 Aug 31, 2004 15:32:58.422
!MESSAGE Some inter-plug-in dependencies have not been satisfied.
!SUBENTRY 1 test 2 2 Aug 31, 2004 15:32:58.432
!MESSAGE Unsatisfied import package java.sql_0.0.0.

!ENTRY org.eclipse.pde.build 4 8 Aug 31, 2004 15:32:58.432
!MESSAGE Unable to find element: test.


This should be detecting that the target platform is exporting java.sql as a 
system package, and should be available for import into the plugin.
In 3.1, the usage of profiles is taken into account, which I believe fixes this
problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73008" />
    <CreationDate amount="2004-08-31 16:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Correcting compile problems doesnt reflect in dependent classes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Was performing the 'Interdependency Tests' testcase found here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
Basically Project1 had JFrame, Project 2 had JPanel. The JFrame has contentpane
set to the JPanel in Project2. A compiler problem was induced into the JPanel
class (added import foo.bar;) and the class saved. Going to the JFrame shows the
error in the contentpane. Now go back to Panel and remove the erroneous import
and save the file. Going back to the JFrame doesnt fix the problem.
Removing target. This can't be contained for 1.0.2 because it is too big. The
problem is that for us to know that we need to recycle the VM, we need to know
that we are referencing that class. The way we do it now is that we see if the
vm proxy registry has referenced that class. The problem here is that once it
goes bad, though it looks good in the code (i.e. there are no compile errors in
the JFrame), it never succesfully instantiates so we can't get a reference to it
in the proxy registry. Since it is now not in the registry we don't know that it
is now good and of interest.
*** Bug 78940 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Was performing the 'Interdependency Tests' testcase found here:
http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-home/WebContent/docs/testcases/interdependency/interdependency.htm
Basically Project1 had JFrame, Project 2 had JPanel. The JFrame has contentpane
set to the JPanel in Project2. A compiler problem was induced into the JPanel
class (added import foo.bar;) and the class saved. Going to the JFrame shows the
error in the contentpane. Now go back to Panel and remove the erroneous import
and save the file. Going back to the JFrame doesnt fix the problem.
Removing target. This can't be contained for 1.0.2 because it is too big. The
problem is that for us to know that we need to recycle the VM, we need to know
that we are referencing that class. The way we do it now is that we see if the
vm proxy registry has referenced that class. The problem here is that once it
goes bad, though it looks good in the code (i.e. there are no compile errors in
the JFrame), it never succesfully instantiates so we can't get a reference to it
in the proxy registry. Since it is now not in the registry we don't know that it
is now good and of interest.
*** Bug 78940 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73009" />
    <CreationDate amount="2004-08-31 17:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[osgi] redundant Import-Packages in org.eclipse.osgi</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

org.eclipse.osgi declares all packages it exports as imported packages. This
happens for free (export implies import). Is there any good reason for that? If
not, we should remove the Import-Package header, since it is redundant (opens
opportunity for inconsistencies in the future) and confusing.
This has been fixed in HEAD.</WithStack>
    <WithOutStack>3.0

org.eclipse.osgi declares all packages it exports as imported packages. This
happens for free (export implies import). Is there any good reason for that? If
not, we should remove the Import-Package header, since it is redundant (opens
opportunity for inconsistencies in the future) and confusing.
This has been fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73010" />
    <CreationDate amount="2004-08-31 17:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Synchronize wizard: Should have default selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200408311100

The 'Available selection types' viewer should have a default selection, which 
should be remembered the next time the wizard is called.
If you have time you can fix this one :)
*** Bug 73567 has been marked as a duplicate of this bug. ***
Created attachment 14738
Select the first element by default
Michael, could you release?
I will release it after M2
Now one is always selected but the previous selectin is not remembered.
Created attachment 14931
Extended fix

Now the last selected element is remembered, if it is not available (anymore),
the first one is selected.
Patch released with slight modification to how page settings are saved.</WithStack>
    <WithOutStack>Build id: 200408311100

The 'Available selection types' viewer should have a default selection, which 
should be remembered the next time the wizard is called.
If you have time you can fix this one :)
*** Bug 73567 has been marked as a duplicate of this bug. ***
Created attachment 14738
Select the first element by default
Michael, could you release?
I will release it after M2
Now one is always selected but the previous selectin is not remembered.
Created attachment 14931
Extended fix

Now the last selected element is remembered, if it is not available (anymore),
the first one is selected.
Patch released with slight modification to how page settings are saved.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73011" />
    <CreationDate amount="2004-08-31 17:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[wizards] The Code Template inserted into the wrong place [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="multicomment">
        <location start="107" end="135" />
        <code>/*
 * Created on ${date}
 */</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="441" end="509" />
        <code>//****************************************************************</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="509" end="520" />
        <code>//   xxxxx</code>
      </source_code>
      <source_code type="import">
        <location start="520" end="558" />
        <code>import org.eclipse.debug.core.ILaunch;</code>
      </source_code>
      <source_code type="import">
        <location start="559" end="609" />
        <code>import org.eclipse.debug.core.model.IDebugElement;</code>
      </source_code>
      <source_code type="import">
        <location start="610" end="659" />
        <code>import org.eclipse.debug.core.model.IDebugTarget;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="660" end="675" />
        <code>//   xxxxxxxxx</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="675" end="689" />
        <code>//   ssssssss</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="689" end="756" />
        <code>//****************************************************************</code>
      </source_code>
      <source_code type="multicomment">
        <location start="756" end="783" />
        <code>/**
 * @author jcyfung
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="784" end="818" />
        <code>/*
 * Created on Aug 31, 2004
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In my preference, I have change my Code Template - Code - New Java File to be 
as follows:

${typecomment}
/*
 * Created on ${date}
 */
${package_declaration}

${type_declaration}

-----------------
However, when I create a new java class that extends or implement something, 
the result java file inserted the package declaration in the middle of my type 
comment.  This result in a class that has compilation error.

Something Like this :

//****************************************************************
//   xxxxx
import org.eclipse.debug.core.ILaunch;
import org.eclipse.debug.core.model.IDebugElement;
import org.eclipse.debug.core.model.IDebugTarget;
//   xxxxxxxxx
//   ssssssss
//****************************************************************

/**
 * @author jcyfung
 */

/*
 * Created on Aug 31, 2004
 */
fixed &gt; 20050522
Verifying...
Martin,

I tried to verify in I20050527-0010, but it appears that the typecomment is not
being inserted at all.  Could you take a look?
you have to check 'create comment' check boc on the type wizard.
verified in RC1</WithStack>
    <WithOutStack>In my preference, I have change my Code Template - Code - New Java File to be 
as follows:

${typecomment}
/*
 * Created on ${date}
 */
${package_declaration}

${type_declaration}

-----------------
However, when I create a new java class that extends or implement something, 
the result java file inserted the package declaration in the middle of my type 
comment.  This result in a class that has compilation error.

Something Like this :

//****************************************************************
//   xxxxx
import org.eclipse.debug.core.ILaunch;
import org.eclipse.debug.core.model.IDebugElement;
import org.eclipse.debug.core.model.IDebugTarget;
//   xxxxxxxxx
//   ssssssss
//****************************************************************

/**
 * @author jcyfung
 */

/*
 * Created on Aug 31, 2004
 */
fixed &gt; 20050522
Verifying...
Martin,

I tried to verify in I20050527-0010, but it appears that the typecomment is not
being inserted at all.  Could you take a look?
you have to check 'create comment' check boc on the type wizard.
verified in RC1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73012" />
    <CreationDate amount="2004-08-31 17:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[CTabFolder] setEnabled for CTabItems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="1490" end="1607" />
        <code>Not very important, but the indentation is a bit funny in some of the chagnes in CTabFolder (for example, onFocus());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3413" end="3599" />
        <code>The patch looks good (there are still some formatting issues - are you using spaces instead of tabs?). Also, I would just return enabled; from getEnabled()instead of return this.enabled;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4282" end="4327" />
        <code>&gt; getEnabled()instead of return this.enabled;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) User can't select the tabItem through UI and setSelection API.</Line>
          <Line>2) When the selected tabItem is disabled, the control is also disabled, else control is not disabled. Then, the control's state will be restored if required, when selection is changed or when the control is enabled.</Line>
          <Line>3) traversing through the tabItems will skip the disabled tabItems.</Line>
          <Line>4) if the 0th tabItem is disabled, the next enabled tabItem is selected for the initial selection.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>It would be nice to have a setEnabled()-function for CTabItems.
*** Bug 79042 has been marked as a duplicate of this bug. ***
Yes, please!
Is there any development planned??
LS, do you have time to fix this bug ? It shouldn't be too hard I expect. It has quite a few votes.
Created attachment 146811
patch-v1

Created initial version of the patch. It provides setEnabled and getEnabled APIs.

This is the behavior of a disabled CTabItem using the patch:
1) User can't select the tabItem through UI and setSelection API.
2) When the selected tabItem is disabled, the control is also disabled, else control is not disabled. Then, the control's state will be restored if required, when selection is changed or when the control is enabled.
3) traversing through the tabItems will skip the disabled tabItems.
4) if the 0th tabItem is disabled, the next enabled tabItem is selected for the initial selection.

Carolyn, please review the patch and comment if this is the right way to go.
Created attachment 146812
test case
I don't think that the behavior describe in number 2) is necessary. If the tabitem cannot be selected, its control is never visible, so it does not matter if it is enabled or not.

It believe it is also wrong to try to keep the enable state of the control (CTabItem.controlEnabled). The app code can change this state anytime and the var would get out of date.

What happens if there is only item it is disable? I just want to make sure it works and it does not look bad.

Not very important, but the indentation is a bit funny in some of the chagnes in CTabFolder (for example, onFocus());
&gt; I don't think that the behavior describe in number 2) is necessary. If the
&gt; tabitem cannot be selected, its control is never visible, so it does not matter
&gt; if it is enabled or not.
I added this to handle the case where the tabItem is selected first and then it is disabled. 
Should the control of disabled tabItem never be visible? If so, then in this case I can hide the control for the disabled tab.
The CTabItem.enabled was added to handle this case and when there are shared controls. But, there was a problem when state of control changes anytime. If the control should not be visible then this will not be required.
 
&gt; What happens if there is only item it is disable? 
With the patch, when there is only 1 disabled tabItem, the tabItem is visible but it'll not be selected, hence the control is not visible.
But, if the tabItem is disabled after selection, then control is visible and disabled.

I think the indentation looks odd only in diff view but it is inline with the code. :)
I beleive the control enable/disable state should not be played with. 

If the selected tab item becomes disabled, the selection should go back to -1 (no selection) and the control should not be visible. I believe the selection already goes back to -1 when the selection tab item is disposed, for example.

The tab item should draw disable as well, but I do not think there is API for this (see bug#22782).
Created attachment 147320
patch-v2

Thanks Silenio!

I have modified the patch based on your comments: 
If the selected tab item becomes disabled, the selection should go back to -1. 
I removed the forceFocus() because the disabled tabItem can't be selected, so it is not required.
I also checked to see what happens when a selected tabItem is destroyed, the selection changes to the previous tabItem.
The patch looks good (there are still some formatting issues - are you using spaces instead of tabs?). Also, I would just return enabled; from getEnabled()instead of return this.enabled;

However, I don't think we should release this patch until bug#22782 has been fixed, because it would be really misleading to have a disabled tab that does not have any "disabled" appearance in the UI. Users would wonder why they can't select the tab.

For the final testing (after bug#22782 is fixed), you will want to have images in your test case to make sure they look good with the "disabled" look also. And you'll have to be sure to test on multiple platforms.

So this bug is now waiting on bug#22782.
(In reply to comment #11)
&gt; The patch looks good (there are still some formatting issues - are you using
&gt; spaces instead of tabs?). Also, I would just return enabled; from
&gt; getEnabled()instead of return this.enabled;
&gt; 
&gt; However, I don't think we should release this patch until bug#22782 has been
&gt; fixed, because it would be really misleading to have a disabled tab that does
&gt; not have any "disabled" appearance in the UI. Users would wonder why they can't
&gt; select the tab.
&gt; 
&gt; For the final testing (after bug#22782 is fixed), you will want to have images
&gt; in your test case to make sure they look good with the "disabled" look also.
&gt; And you'll have to be sure to test on multiple platforms.
&gt; 
&gt; So this bug is now waiting on bug#22782.

Hello Commiters

When this bug would be fixed(and alse 22782)..I have a urgent requirement..</WithStack>
    <WithOutStack>It would be nice to have a setEnabled()-function for CTabItems.
*** Bug 79042 has been marked as a duplicate of this bug. ***
Yes, please!
Is there any development planned??
LS, do you have time to fix this bug ? It shouldn't be too hard I expect. It has quite a few votes.
Created attachment 146811
patch-v1

Created initial version of the patch. It provides setEnabled and getEnabled APIs.

This is the behavior of a disabled CTabItem using the patch:
1) User can't select the tabItem through UI and setSelection API.
2) When the selected tabItem is disabled, the control is also disabled, else control is not disabled. Then, the control's state will be restored if required, when selection is changed or when the control is enabled.
3) traversing through the tabItems will skip the disabled tabItems.
4) if the 0th tabItem is disabled, the next enabled tabItem is selected for the initial selection.

Carolyn, please review the patch and comment if this is the right way to go.
Created attachment 146812
test case
I don't think that the behavior describe in number 2) is necessary. If the tabitem cannot be selected, its control is never visible, so it does not matter if it is enabled or not.

It believe it is also wrong to try to keep the enable state of the control (CTabItem.controlEnabled). The app code can change this state anytime and the var would get out of date.

What happens if there is only item it is disable? I just want to make sure it works and it does not look bad.

Not very important, but the indentation is a bit funny in some of the chagnes in CTabFolder (for example, onFocus());
&gt; I don't think that the behavior describe in number 2) is necessary. If the
&gt; tabitem cannot be selected, its control is never visible, so it does not matter
&gt; if it is enabled or not.
I added this to handle the case where the tabItem is selected first and then it is disabled. 
Should the control of disabled tabItem never be visible? If so, then in this case I can hide the control for the disabled tab.
The CTabItem.enabled was added to handle this case and when there are shared controls. But, there was a problem when state of control changes anytime. If the control should not be visible then this will not be required.
 
&gt; What happens if there is only item it is disable? 
With the patch, when there is only 1 disabled tabItem, the tabItem is visible but it'll not be selected, hence the control is not visible.
But, if the tabItem is disabled after selection, then control is visible and disabled.

I think the indentation looks odd only in diff view but it is inline with the code. :)
I beleive the control enable/disable state should not be played with. 

If the selected tab item becomes disabled, the selection should go back to -1 (no selection) and the control should not be visible. I believe the selection already goes back to -1 when the selection tab item is disposed, for example.

The tab item should draw disable as well, but I do not think there is API for this (see bug#22782).
Created attachment 147320
patch-v2

Thanks Silenio!

I have modified the patch based on your comments: 
If the selected tab item becomes disabled, the selection should go back to -1. 
I removed the forceFocus() because the disabled tabItem can't be selected, so it is not required.
I also checked to see what happens when a selected tabItem is destroyed, the selection changes to the previous tabItem.
The patch looks good (there are still some formatting issues - are you using spaces instead of tabs?). Also, I would just return enabled; from getEnabled()instead of return this.enabled;

However, I don't think we should release this patch until bug#22782 has been fixed, because it would be really misleading to have a disabled tab that does not have any "disabled" appearance in the UI. Users would wonder why they can't select the tab.

For the final testing (after bug#22782 is fixed), you will want to have images in your test case to make sure they look good with the "disabled" look also. And you'll have to be sure to test on multiple platforms.

So this bug is now waiting on bug#22782.
(In reply to comment #11)
&gt; The patch looks good (there are still some formatting issues - are you using
&gt; spaces instead of tabs?). Also, I would just return enabled; from
&gt; getEnabled()instead of return this.enabled;
&gt; 
&gt; However, I don't think we should release this patch until bug#22782 has been
&gt; fixed, because it would be really misleading to have a disabled tab that does
&gt; not have any "disabled" appearance in the UI. Users would wonder why they can't
&gt; select the tab.
&gt; 
&gt; For the final testing (after bug#22782 is fixed), you will want to have images
&gt; in your test case to make sure they look good with the "disabled" look also.
&gt; And you'll have to be sure to test on multiple platforms.
&gt; 
&gt; So this bug is now waiting on bug#22782.

Hello Commiters

When this bug would be fixed(and alse 22782)..I have a urgent requirement..</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73013" />
    <CreationDate amount="2004-08-31 17:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Update loses OSGi bundle data store</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When updating an plugin that is making use of the OSGi data directory, the data 
information is lost.  This is due to the fact that install/update does not 
update bundles in the same fashion as is described by OSGi specification.  
Instead of keeping the same bundle ID and location (as OSGi does), 
install/update deletes the old plugin directory and installs the updated plugin 
into a separate directory, giving it a new bundle ID and location field.

If a plugin is being used that uses OSGi persistent bundle storage methods, 
then when getDataFile("xyz") is called, a directory, corresponding to the 
bundle ID, is used to find the file 
(&lt;path_to_eclipse&gt;/eclipse/plugins/org.eclipse.osgi/bundles/&lt;bundle_id&gt;/xyz).

If an "update" command is issued on the console, then the plugin is updated 
from the existing location and the bundle ID of the updated plugin does not 
change, and the persistent storage location remains available to the updated 
plugin.

However, if the plugin is updated via install/update, then the original plugin 
is removed and the updated bundle is installed, providing it with a new bundle 
ID.  When this updated plugin tries to read data in the persistent storage 
area, it will be looking in a new location, and will not find the previously 
written data.
The location of each installed bundle reflects the actual physical location 
value, and the eclipse way of installing plugins was to always use a different 
directory for each plugin.

As you noticed, the update manager does not "update" a bundle, it first 
uninstalls it, and then it installs the newer version. We need to investigate 
what's the best way to proceed on this.
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithStack>
    <WithOutStack>When updating an plugin that is making use of the OSGi data directory, the data 
information is lost.  This is due to the fact that install/update does not 
update bundles in the same fashion as is described by OSGi specification.  
Instead of keeping the same bundle ID and location (as OSGi does), 
install/update deletes the old plugin directory and installs the updated plugin 
into a separate directory, giving it a new bundle ID and location field.

If a plugin is being used that uses OSGi persistent bundle storage methods, 
then when getDataFile("xyz") is called, a directory, corresponding to the 
bundle ID, is used to find the file 
(&lt;path_to_eclipse&gt;/eclipse/plugins/org.eclipse.osgi/bundles/&lt;bundle_id&gt;/xyz).

If an "update" command is issued on the console, then the plugin is updated 
from the existing location and the bundle ID of the updated plugin does not 
change, and the persistent storage location remains available to the updated 
plugin.

However, if the plugin is updated via install/update, then the original plugin 
is removed and the updated bundle is installed, providing it with a new bundle 
ID.  When this updated plugin tries to read data in the persistent storage 
area, it will be looking in a new location, and will not find the previously 
written data.
The location of each installed bundle reflects the actual physical location 
value, and the eclipse way of installing plugins was to always use a different 
directory for each plugin.

As you noticed, the update manager does not "update" a bundle, it first 
uninstalls it, and then it installs the newer version. We need to investigate 
what's the best way to proceed on this.
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73014" />
    <CreationDate amount="2004-08-31 17:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[quick fix] fix type missmatch with toString() or valueOf()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="class">
        <location start="32" end="45" />
        <code>class Bar {
}</code>
      </source_code>
      <source_code type="class">
        <location start="46" end="71" />
        <code>class Foo extends Bar {
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="72" end="86" />
        <code>Foo foo = ...;</code>
      </source_code>
      <source_code type="assignment">
        <location start="87" end="101" />
        <code>Bar bar = ...;</code>
      </source_code>
      <source_code type="assignment">
        <location start="103" end="113" />
        <code>foo = bar;</code>
      </source_code>
      <source_code type="assignment">
        <location start="355" end="378" />
        <code>String barString = bar;</code>
      </source_code>
      <source_code type="assignment">
        <location start="510" end="544" />
        <code>String barString = bar.toString();</code>
      </source_code>
      <source_code type="assignment">
        <location start="675" end="714" />
        <code>String barString = String.valueOf(bar);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>For the following declarations:
class Bar {
}
class Foo extends Bar {
}
Foo foo = ...;
Bar bar = ...;

foo = bar;

will trigger a quick fix with possibilities of

Add cast to Integer
Change type of foo to ...
Change type of bar to ...

This is all fine. I think a special case of String type variables should also 
be handled e.g. in the following case:

String barString = bar;

an additional possibility of:

Get the string value of 'bar' using bar.toString()

If the user selects this the code changes to:

String barString = bar.toString();

Another possibility is:

Get the string value of 'bar' using String.valueOf(bar)

If the user selects this the code changes to:

String barString = String.valueOf(bar);

This will work even when bar is not a Class or Interface.

These f course could be lower priority quick fixes.
Additional coersive Quick Fixes could be supported between Striung type, basic 
types and their Object counterparts using the valueOf(), parse&lt;blah&gt;() methods.

Moving to JDT UI for comments</WithStack>
    <WithOutStack>For the following declarations:
class Bar {
}
class Foo extends Bar {
}
Foo foo = ...;
Bar bar = ...;

foo = bar;

will trigger a quick fix with possibilities of

Add cast to Integer
Change type of foo to ...
Change type of bar to ...

This is all fine. I think a special case of String type variables should also 
be handled e.g. in the following case:

String barString = bar;

an additional possibility of:

Get the string value of 'bar' using bar.toString()

If the user selects this the code changes to:

String barString = bar.toString();

Another possibility is:

Get the string value of 'bar' using String.valueOf(bar)

If the user selects this the code changes to:

String barString = String.valueOf(bar);

This will work even when bar is not a Class or Interface.

These f course could be lower priority quick fixes.
Additional coersive Quick Fixes could be supported between Striung type, basic 
types and their Object counterparts using the valueOf(), parse&lt;blah&gt;() methods.

Moving to JDT UI for comments</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73015" />
    <CreationDate amount="2004-08-31 17:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Using :extssh: breaks command line CVS integration (should be :ext:)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182492">
        <Exception>1org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>Unknown response received from cvs server:</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:234)        at org.eclipse.team.internal.ccvs.core.client.ValidRequests.execute(ValidRequests.java:26)        at org.eclipse.team.internal.ccvs.core.client.Session.open(Session.java:157)        at org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performUpdate(RemoteFolderMemberFetcher.java:115)        at org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetcher.performUpdate(FetchMembersOperation.java:67)        at org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:82)        at org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:73)        at org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute(FetchMembersOperation.java:105)        at org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:84)        at org.eclipse.team.internal.ccvs.ui.model.RemoteFolderElement.fetchDeferredChildren(RemoteFolderElement.java:71)        at org.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:152)        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>CVS (http://www.cvshome.org) uses the connection parameter :ext: to specify an SSH based 
connection. Eclipse inexplicably changed this to :extssh: which means any attempt to use a command 
line CVS tool (or any other standards-compliant tool) with an Eclipse project will not work:

ra:~/Workspace/Harmony zbeckman$ cvs status build.xml
cvs status: unknown method in CVSroot: :extssh:zbeckman@led.godzilla.org:/home/cvsroot
cvs [status aborted]: Bad CVSROOT.
[does not seem to be Mac specific, changing platform/OS]
The extssh connection method is a custom connection method in Eclipse that 
provides SSH2 support without the use of an external client. If you want to 
use extssh from within Eclipse but have your sandbix remain command line 
compatible, you can configure the ext connection method in Eclipse to use 
extssh inside Eclipse. This can be done on the Team&gt;CVS&gt;Ext Connection Method 
preference page. Once complete, you should use ext as the connection method of 
your repository locaion inside Eclipse (and not extssh).
Attempting to use the :ext: protocol has never worked for me. Eclipse generates an error message, but 
does not provide much detail. If I fill in exactly the same information as used with :extssh: I get the 
following in the Eclipse log:

!ENTRY org.eclipse.team.cvs.ui 4 0 Sep 01, 2004 08:58:02.699!MESSAGE Internal error!STACK 
1org.eclipse.team.internal.ccvs.core.CVSException: Unknown response received from cvs server:        at 
org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:234)        at 
org.eclipse.team.internal.ccvs.core.client.ValidRequests.execute(ValidRequests.java:26)        at 
org.eclipse.team.internal.ccvs.core.client.Session.open(Session.java:157)        at 
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performUpdate(RemoteFold
erMemberFetcher.java:115)        at 
org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetc
her.performUpdate(FetchMembersOperation.java:67)        at 
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolder
MemberFetcher.java:82)        at 
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolder
MemberFetcher.java:73)        at 
org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute(FetchMembersOperation.j
ava:105)        at org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:84)        
at 
org.eclipse.team.internal.ccvs.ui.model.RemoteFolderElement.fetchDeferredChildren(RemoteFolderElem
ent.java:71)        at 
org.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:152)        
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)!SUBENTRY 1 org.eclipse.team.cvs.core 4 -4 
Sep 01, 2004 08:58:02.701!MESSAGE Unknown response received from cvs server:

That's the entirity of it. Of course, I have triple-checked parameters, and command-line ssh and CVS 
integration works just great. 

What I don't understand is why the internal Eclipse CVS would use :extssh: when it is in all other 
regards 100% compatible with the command line. I've actually written a short perl script that scans my 
CVS/Root files and toggles between :ext: and :extssh: for just the purpose. I can "workaround" the 
problem by using the internal Eclipse CVS/SSH integration, and use my script to "toggle" the :extssh: to 
a simple :ext: and use my command line tools. But it's a pain, going back and forth.

So, bottom line: I still believe that :extssh: should be changed to simply :ext: because it is compatible 
with the command line. Eclipse _is_ using the :ext: protocol. It doesn't matter that it's an internal or 
external SSH program.
The ext connetion method must remain an external connection since it can be 
used with connection clients other than SSH (e.g. RSH). Did you do what I 
suggested and configure the ext connection method to use extssh on the 
Team&gt;CVS&gt;Ext Connection method preference page? Doing this will give you the 
exact same behavior you are requesting (i.e. you will use ext as your 
connection method and connections in Eclipse will use the Eclipse SSH2 client).

Ok. I get it now. :-) I had misunderstood your instructions the first time around. I have now changed 
the External Connection method to use :extssh: as it's protocol, and we're good -- it works great. 
Thanks again -- as usual, you show me that it's human error and Eclipse can, in fact, do exactly what I 
want. :-)</WithStack>
    <WithOutStack>CVS (http://www.cvshome.org) uses the connection parameter :ext: to specify an SSH based 
connection. Eclipse inexplicably changed this to :extssh: which means any attempt to use a command 
line CVS tool (or any other standards-compliant tool) with an Eclipse project will not work:

ra:~/Workspace/Harmony zbeckman$ cvs status build.xml
cvs status: unknown method in CVSroot: :extssh:zbeckman@led.godzilla.org:/home/cvsroot
cvs [status aborted]: Bad CVSROOT.
[does not seem to be Mac specific, changing platform/OS]
The extssh connection method is a custom connection method in Eclipse that 
provides SSH2 support without the use of an external client. If you want to 
use extssh from within Eclipse but have your sandbix remain command line 
compatible, you can configure the ext connection method in Eclipse to use 
extssh inside Eclipse. This can be done on the Team&gt;CVS&gt;Ext Connection Method 
preference page. Once complete, you should use ext as the connection method of 
your repository locaion inside Eclipse (and not extssh).
Attempting to use the :ext: protocol has never worked for me. Eclipse generates an error message, but 
does not provide much detail. If I fill in exactly the same information as used with :extssh: I get the 
following in the Eclipse log:

!ENTRY org.eclipse.team.cvs.ui 4 0 Sep 01, 2004 08:58:02.699!MESSAGE Internal error!STACK 
!SUBENTRY 1 org.eclipse.team.cvs.core 4 -4 
Sep 01, 2004 08:58:02.701!MESSAGE Unknown response received from cvs server:

That's the entirity of it. Of course, I have triple-checked parameters, and command-line ssh and CVS 
integration works just great. 

What I don't understand is why the internal Eclipse CVS would use :extssh: when it is in all other 
regards 100% compatible with the command line. I've actually written a short perl script that scans my 
CVS/Root files and toggles between :ext: and :extssh: for just the purpose. I can "workaround" the 
problem by using the internal Eclipse CVS/SSH integration, and use my script to "toggle" the :extssh: to 
a simple :ext: and use my command line tools. But it's a pain, going back and forth.

So, bottom line: I still believe that :extssh: should be changed to simply :ext: because it is compatible 
with the command line. Eclipse _is_ using the :ext: protocol. It doesn't matter that it's an internal or 
external SSH program.
The ext connetion method must remain an external connection since it can be 
used with connection clients other than SSH (e.g. RSH). Did you do what I 
suggested and configure the ext connection method to use extssh on the 
Team&gt;CVS&gt;Ext Connection method preference page? Doing this will give you the 
exact same behavior you are requesting (i.e. you will use ext as your 
connection method and connections in Eclipse will use the Eclipse SSH2 client).

Ok. I get it now. :-) I had misunderstood your instructions the first time around. I have now changed 
the External Connection method to use :extssh: as it's protocol, and we're good -- it works great. 
Thanks again -- as usual, you show me that it's human error and Eclipse can, in fact, do exactly what I 
want. :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73016" />
    <CreationDate amount="2004-08-31 18:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NPE on BeanPart dispose</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Drop a label on a SWT Shell.
Undo (to remove the label).

The snippet merger dispose the label twice.  The 2nd time a NPE is caused....
NPE on a snippet will induce a reload from scratch.
Released to CVS
Setting to 1.0M3 for ship.
Now that 1.0 is released, marking as verified.
Now that 1.0 is released, marking as closed.</WithStack>
    <WithOutStack>Drop a label on a SWT Shell.
Undo (to remove the label).

The snippet merger dispose the label twice.  The 2nd time a NPE is caused....
NPE on a snippet will induce a reload from scratch.
Released to CVS
Setting to 1.0M3 for ship.
Now that 1.0 is released, marking as verified.
Now that 1.0 is released, marking as closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73017" />
    <CreationDate amount="2004-08-31 18:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[key binding] can't get to Ctrl+/, Ctrl+Shift+/ and Ctrl+Shift+\ on a French keyboard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>JDT Editor uses "Ctrl+/" for "Toggle comment", "Ctrl+Alt+/" for "Add block 
comment" and "Ctrl+Alt+\" for "Remove block comment". On the french keyboard, 
to get a backslash, the user has to hit AltGr and to get a forward slash, Alt. 
Therefore, the combination of keys seems impossible on a French keyboard.
Just a typo. I meant:
&gt;JDT Editor uses "Ctrl+/" for "Toggle comment", "Ctrl+Shift+/" for "Add block 
comment" and "Ctrl+Shift+\" for "Remove block comment". 
In order to properly fix this we need to change the exisint key sequence for
Add/Remove Block Comment. Platform UI (Doug) told us not to provide additional
key sequences to suppport different keyboards/locales as we did for for Ctrl+/
(we added Ctrl+7).
Note Ctrl+/ (press Ctrl+Shift+7) and Ctrl+7 should work in R3.0.
See also bug 46588.
Does it mean that "Ctrl+/" will work on a French keyboard in R3.0, 
but "Ctrl+Shift+/" and "Ctrl+Shift+\" will not work?
Correct.
*** Bug 98590 has been marked as a duplicate of this bug. ***
Is this fixed in 3.1? Any update?
Still open -&gt; not fixed in 3.1 ;-)

There are plans currently to change the key bindings that many people are used
to; also, the keybindings on plain alphabetic keys are all taken, so unless
there is platform-wide keybinding reassignment / management in place, there is
not much chance we will do anything here.
see comment 8
*** Bug 142951 has been marked as a duplicate of this bug. ***
*** Bug 96076 has been marked as a duplicate of this bug. ***
Any chance to fix this for 3.2? Not working on German keyboard either :(
My suggestion would be to either fix or remove the wrong keyboard shortcut declarations from the menues...
&gt;Any chance to fix this for 3.2?
No. 3.2 is already in the end game phase. This bug "only" affects some keyboard layouts and can be easily worked around by assigning a different key binding.

&gt;Not working on German keyboard either :(
What keyboard then?


Daniel, not sure what you mean- normal 102keys German keyboard layout everybody in Germany uses?
I misinterpreted your comment "Not working on German keyboard either" - I meant you want to express that you don't work on a German keyboard. This bug covers that as well (see bug 96076 which is marked as duplicate of this one).
WTP's source editors use the same keybindings to be consistent, so I added a dependency from our bug to this one to make sure we all stay consistent once this bug has been fixed.

And according to our bug, the ctrl+shift+/ keybinding does not work on norwegian keyboards either.
Let's try again- can we address this issue for 3.3?

I'd really love to Ctrl-/ (Ctrl-Shift-7 on German keyboard) in the java editor...

Thanks,
Andi
&gt;I'd really love to Ctrl-/ (Ctrl-Shift-7 on German keyboard) in the java
&gt;editor...
Ctrl+/ should work - at least it works for me having a Swiss German keyboard which - AFAIK - is the same regarding '/' i.e. it is Shift key + '7' key. Of course the other one to invoke "Add Block Comment" doesn't work.

To be honest there's not much we (Platform Text) can do except using a different key binding sequence. However, all  [F*] and also all [whatever modifier] + [a..z] are already taken which means we would have to assign a more complicated one like e.g. Esc,T and Esc,B. Which I think is not worth the effort. Reassign a command that you don't use often and learn it.
closing old resolved bug
Get rid of deprecated state.</WithStack>
    <WithOutStack>JDT Editor uses "Ctrl+/" for "Toggle comment", "Ctrl+Alt+/" for "Add block 
comment" and "Ctrl+Alt+\" for "Remove block comment". On the french keyboard, 
to get a backslash, the user has to hit AltGr and to get a forward slash, Alt. 
Therefore, the combination of keys seems impossible on a French keyboard.
Just a typo. I meant:
&gt;JDT Editor uses "Ctrl+/" for "Toggle comment", "Ctrl+Shift+/" for "Add block 
comment" and "Ctrl+Shift+\" for "Remove block comment". 
In order to properly fix this we need to change the exisint key sequence for
Add/Remove Block Comment. Platform UI (Doug) told us not to provide additional
key sequences to suppport different keyboards/locales as we did for for Ctrl+/
(we added Ctrl+7).
Note Ctrl+/ (press Ctrl+Shift+7) and Ctrl+7 should work in R3.0.
See also bug 46588.
Does it mean that "Ctrl+/" will work on a French keyboard in R3.0, 
but "Ctrl+Shift+/" and "Ctrl+Shift+\" will not work?
Correct.
*** Bug 98590 has been marked as a duplicate of this bug. ***
Is this fixed in 3.1? Any update?
Still open -&gt; not fixed in 3.1 ;-)

There are plans currently to change the key bindings that many people are used
to; also, the keybindings on plain alphabetic keys are all taken, so unless
there is platform-wide keybinding reassignment / management in place, there is
not much chance we will do anything here.
see comment 8
*** Bug 142951 has been marked as a duplicate of this bug. ***
*** Bug 96076 has been marked as a duplicate of this bug. ***
Any chance to fix this for 3.2? Not working on German keyboard either :(
My suggestion would be to either fix or remove the wrong keyboard shortcut declarations from the menues...
&gt;Any chance to fix this for 3.2?
No. 3.2 is already in the end game phase. This bug "only" affects some keyboard layouts and can be easily worked around by assigning a different key binding.

&gt;Not working on German keyboard either :(
What keyboard then?


Daniel, not sure what you mean- normal 102keys German keyboard layout everybody in Germany uses?
I misinterpreted your comment "Not working on German keyboard either" - I meant you want to express that you don't work on a German keyboard. This bug covers that as well (see bug 96076 which is marked as duplicate of this one).
WTP's source editors use the same keybindings to be consistent, so I added a dependency from our bug to this one to make sure we all stay consistent once this bug has been fixed.

And according to our bug, the ctrl+shift+/ keybinding does not work on norwegian keyboards either.
Let's try again- can we address this issue for 3.3?

I'd really love to Ctrl-/ (Ctrl-Shift-7 on German keyboard) in the java editor...

Thanks,
Andi
&gt;I'd really love to Ctrl-/ (Ctrl-Shift-7 on German keyboard) in the java
&gt;editor...
Ctrl+/ should work - at least it works for me having a Swiss German keyboard which - AFAIK - is the same regarding '/' i.e. it is Shift key + '7' key. Of course the other one to invoke "Add Block Comment" doesn't work.

To be honest there's not much we (Platform Text) can do except using a different key binding sequence. However, all  [F*] and also all [whatever modifier] + [a..z] are already taken which means we would have to assign a more complicated one like e.g. Esc,T and Esc,B. Which I think is not worth the effort. Reassign a command that you don't use often and learn it.
closing old resolved bug
Get rid of deprecated state.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73018" />
    <CreationDate amount="2004-08-31 18:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE in ValidBreakpointLocationLocator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182497">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isReplacedByConstantValue(ValidBreakpointLocationLocator.java:288)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isReplacedByConstantValue(ValidBreakpointLocationLocator.java:246)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isReplacedByConstantValue(ValidBreakpointLocationLocator.java:280)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit(ValidBreakpointLocationLocator.java:811)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.PrefixExpression.accept0(PrefixExpression.java:258)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:188)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit(ValidBreakpointLocationLocator.java:723)</Frame>
          <Frame depth="13">org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:489)</Frame>
          <Frame depth="14">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit(ValidBreakpointLocationLocator.java:972)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:469)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="19">org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:292)</Frame>
          <Frame depth="20">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.debug.ui.actions.BreakpointLocationVerifierJob.run(BreakpointLocationVerifierJob.java:128)</Frame>
          <Frame depth="22">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20040831

Attempted to add a breakpoint on line 1864 of Workspace.
Breakpoint is added but you get the NPE.
Happens every time.

java.lang.NullPointerException
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isRepl
acedByConstantValue(ValidBreakpointLocationLocator.java:288)
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isRepl
acedByConstantValue(ValidBreakpointLocationLocator.java:246)
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.isRepl
acedByConstantValue(ValidBreakpointLocationLocator.java:280)
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit
(ValidBreakpointLocationLocator.java:811)
at org.eclipse.jdt.core.dom.PrefixExpression.accept0(PrefixExpression.java:258)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:188)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit
(ValidBreakpointLocationLocator.java:723)
at org.eclipse.jdt.core.dom.MethodDeclaration.accept0
(MethodDeclaration.java:489)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at 
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator.visit
(ValidBreakpointLocationLocator.java:972)
at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:469)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:292)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.internal.debug.ui.actions.BreakpointLocationVerifierJob.run
(BreakpointLocationVerifierJob.java:128)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Fixed.

There was a problem when trying to add a breakpoint in a file from a jar.
When parsing the source code to check the location of the breakpoint, we need to
specify a name for the compilation unit. We were using the name of the resource
where the breakpoint was to be set. This works fine for files the file system,
but not for files in jars, because in this case, the jar is used as the resource.

BreakpointLocationVerifierJob: create the unit name from the name of the
original compilation unit, or from the name of the class file, instead of using
the name of the resource.
Please verify, Darin S.
Verified.</WithStack>
    <WithOutStack>I20040831

Attempted to add a breakpoint on line 1864 of Workspace.
Breakpoint is added but you get the NPE.
Happens every time.


Fixed.

There was a problem when trying to add a breakpoint in a file from a jar.
When parsing the source code to check the location of the breakpoint, we need to
specify a name for the compilation unit. We were using the name of the resource
where the breakpoint was to be set. This works fine for files the file system,
but not for files in jars, because in this case, the jar is used as the resource.

BreakpointLocationVerifierJob: create the unit name from the name of the
original compilation unit, or from the name of the class file, instead of using
the name of the resource.
Please verify, Darin S.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73019" />
    <CreationDate amount="2004-08-31 18:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ImageLoader NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182498">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.swt.internal.image.FileFormat.save(FileFormat.java:84)</Frame>
          <Frame depth="1">org.eclipse.swt.graphics.ImageLoader.save(ImageLoader.java:196)</Frame>
          <Frame depth="2">win32.Main.main(Main.java:10)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="44" end="258" />
        <code>public class Main {
	public static void main(String[] args) {
		ImageLoader loader = new ImageLoader();
		ByteArrayOutputStream outStream = new ByteArrayOutputStream();
		loader.save(outStream, SWT.IMAGE_BMP);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following snippet gives the NPE below:

public class Main {
	public static void main(String[] args) {
		ImageLoader loader = new ImageLoader();
		ByteArrayOutputStream outStream = new ByteArrayOutputStream();
		loader.save(outStream, SWT.IMAGE_BMP);
	}
}

java.lang.NullPointerException
	at org.eclipse.swt.internal.image.FileFormat.save(FileFormat.java:84)
	at org.eclipse.swt.graphics.ImageLoader.save(ImageLoader.java:196)
	at win32.Main.main(Main.java:10)

Here's what I get when I run this snippet with the latest SWT from CVS HEAD:

Exception in thread "main" java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:3700)
	at org.eclipse.swt.SWT.error(SWT.java:3634)
	at org.eclipse.swt.SWT.error(SWT.java:3605)
	at org.eclipse.swt.internal.image.FileFormat.save(FileFormat.java:94)
	at org.eclipse.swt.graphics.ImageLoader.save(ImageLoader.java:199)
	at Bugs.main(Bugs.java:11)

Since this exception is probably expected behavior, should this bug be closed?
Yes, thank-you, Mark - I'll close this.
The behavior was changed when bug 46387 was fixed.</WithStack>
    <WithOutStack>The following snippet gives the NPE below:

public class Main {
	public static void main(String[] args) {
		ImageLoader loader = new ImageLoader();
		ByteArrayOutputStream outStream = new ByteArrayOutputStream();
		loader.save(outStream, SWT.IMAGE_BMP);
	}
}



Here's what I get when I run this snippet with the latest SWT from CVS HEAD:

Exception in thread "main" java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:3700)
	at org.eclipse.swt.SWT.error(SWT.java:3634)
	at org.eclipse.swt.SWT.error(SWT.java:3605)
	at org.eclipse.swt.internal.image.FileFormat.save(FileFormat.java:94)
	at org.eclipse.swt.graphics.ImageLoader.save(ImageLoader.java:199)
	at Bugs.main(Bugs.java:11)

Since this exception is probably expected behavior, should this bug be closed?
Yes, thank-you, Mark - I'll close this.
The behavior was changed when bug 46387 was fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73020" />
    <CreationDate amount="2004-08-31 19:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Edit of source sites doesn't refresh table</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Open Install, Help-&gt;Software Updates-&gt;Find and Install</Line>
          <Line>2. Select "Search for new features to install"</Line>
          <Line>3. next</Line>
          <Line>4. Create a new site with one of the 3 new buttons.</Line>
          <Line>5. Edit the site name using the edit button.</Line>
          <Line>6. The name in the table does not get refreshed.</Line>
          <Line>7. By restarting the install at step 1 you will see the edited name.</Line>
          <Line>fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Open Install, Help-&gt;Software Updates-&gt;Find and Install
2. Select "Search for new features to install"
3. next
4. Create a new site with one of the 3 new buttons.
5. Edit the site name using the edit button.
6. The name in the table does not get refreshed.
7. By restarting the install at step 1 you will see the edited name.
fixed.</WithStack>
    <WithOutStack>1. Open Install, Help-&gt;Software Updates-&gt;Find and Install
2. Select "Search for new features to install"
3. next
4. Create a new site with one of the 3 new buttons.
5. Edit the site name using the edit button.
6. The name in the table does not get refreshed.
7. By restarting the install at step 1 you will see the edited name.
fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73021" />
    <CreationDate amount="2004-08-31 20:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>[1.5] Inconsistent classfile when using TimeUnit</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="import">
        <location start="135" end="174" />
        <code>import java.util.concurrent.TimeUnit;</code>
      </source_code>
      <source_code type="class">
        <location start="175" end="357" />
        <code>public class Test {

	public static void main(String[] args) {
		
		System.out.println("0s = " 
                + TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS) + "ms");
	}
	

}</code>
      </source_code>
      <source_code type="import">
        <location start="632" end="671" />
        <code>import java.util.concurrent.TimeUnit;</code>
      </source_code>
      <source_code type="class">
        <location start="672" end="821" />
        <code>public class Test {

	public static void main(String[] args) {
		
		
                 TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS);
	}
	
	
	
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Inconsistent classfile encountered: The undefined type parameter E is referenced
from within Enum ( the error is at line 1 ) 

code : 


import java.util.concurrent.TimeUnit;
public class Test {

	public static void main(String[] args) {
		
		System.out.println("0s = " 
                + TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS) + "ms");
	}
	

}


I use jdk 1.5 beta 2 , i have setup the compliance level of the compiler to 1.5
( if i don't i connot use Vector&lt;???&gt; , but i don t get the bug ...) default
compliance setting ( 1.5 / 1.5 / error) 


is there a problem in my code or its with cheeta ?? 


simplier code : 


import java.util.concurrent.TimeUnit;
public class Test {

	public static void main(String[] args) {
		
		
                 TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS);
	}
	
	
	
}

same error
Cannot reproduce any longer in latest. These inconsistencies were resolved a 
while ago (you have to use a recent 3.1 integration build).</WithStack>
    <WithOutStack>Inconsistent classfile encountered: The undefined type parameter E is referenced
from within Enum ( the error is at line 1 ) 

code : 


import java.util.concurrent.TimeUnit;
public class Test {

	public static void main(String[] args) {
		
		System.out.println("0s = " 
                + TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS) + "ms");
	}
	

}


I use jdk 1.5 beta 2 , i have setup the compliance level of the compiler to 1.5
( if i don't i connot use Vector&lt;???&gt; , but i don t get the bug ...) default
compliance setting ( 1.5 / 1.5 / error) 


is there a problem in my code or its with cheeta ?? 


simplier code : 


import java.util.concurrent.TimeUnit;
public class Test {

	public static void main(String[] args) {
		
		
                 TimeUnit.MILLISECONDS.convert(0L, TimeUnit.SECONDS);
	}
	
	
	
}

same error
Cannot reproduce any longer in latest. These inconsistencies were resolved a 
while ago (you have to use a recent 3.1 integration build).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73022" />
    <CreationDate amount="2004-08-31 20:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Delay, exception while moving multiple controls</Summery>
    <Patches amount="0" />
    <Stacktraces amount="6">
      <Stacktrace timestamp="1437341182507">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182507">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)</Frame>
          <Frame depth="1">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="11">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182507">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182507">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)</Frame>
          <Frame depth="1">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="11">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182507">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182507">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)</Frame>
          <Frame depth="1">org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)</Frame>
          <Frame depth="2">org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)</Frame>
          <Frame depth="3">org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="11">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:184)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:680)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:664)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>From JVELAYT11:
"Select a number of widgets and verify that these can be moved to another
location on the Shell."

Moving multiple components around on the Shell with RowLayout causes very slow
performance and the exception below to occur.  Doing this multiple times can
cause the remote vm to crash with an out of memory exception.


!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:35.811
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:35.812
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:35.822
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:35.822
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)
	at
org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)
	at org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:37.300
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:37.303
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:37.305
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:37.305
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)
	at
org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)
	at org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:41.483
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:41.484
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:41.500
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:41.501
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)
	at
org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)
	at org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)
This is easily reproducable on WinXP as well.
This also affects moving multiple components in SWT's FillLayout.
Rich, can you look to see if this is containable for  1.0.2
I'm not able to reproduce this. We've put a lot of fixes in since this was first
found. If it can be reproduced, please reopen and help me to find how to cause
the problem. I tried it on both Linux and WinXP.
R1.0.2 has been released. Moving to closed state.</WithStack>
    <WithOutStack>From JVELAYT11:
"Select a number of widgets and verify that these can be moved to another
location on the Shell."

Moving multiple components around on the Shell with RowLayout causes very slow
performance and the exception below to occur.  Doing this multiple times can
cause the remote vm to crash with an out of memory exception.


!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:35.811
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:35.812
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:35.822
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:35.822
!MESSAGE java.lang.NullPointerException
!STACK 0

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:37.300
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:37.303
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:37.305
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:37.305
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.signalRefresh(VisualComponentsLayoutPolicy.java:141)
	at
org.eclipse.ve.internal.cde.core.VisualComponentsLayoutPolicy$ConstraintRefreshPolicy.componentRefreshed(VisualComponentsLayoutPolicy.java:194)
	at
org.eclipse.ve.internal.cde.core.VisualComponentSupport.fireComponentRefreshed(VisualComponentSupport.java:86)
	at org.eclipse.ve.internal.swt.ControlManager$1.run(ControlManager.java:247)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:41.483
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:41.484
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:184)
	at org.eclipse.core.launcher.Main.run(Main.java:680)
	at org.eclipse.core.launcher.Main.main(Main.java:664)

!ENTRY org.eclipse.ui 4 4 Aug 31, 2004 20:12:41.500
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 Aug 31, 2004 20:12:41.501
!MESSAGE java.lang.NullPointerException
!STACK 0

This is easily reproducable on WinXP as well.
This also affects moving multiple components in SWT's FillLayout.
Rich, can you look to see if this is containable for  1.0.2
I'm not able to reproduce this. We've put a lot of fixes in since this was first
found. If it can be reproduced, please reopen and help me to find how to cause
the problem. I tried it on both Linux and WinXP.
R1.0.2 has been released. Moving to closed state.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73023" />
    <CreationDate amount="2004-08-31 21:28:00 -0400" />
    <DupId amount="35314" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>ExtConnection never starts DiscardInputThread</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="250" end="307" />
        <code>new DiscardInputThread(process.getErrorStream()).start();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In the current HEAD (1.11) of
org.eclipse.team.internal.ccvs.core.connection.ExtConnection is IMHO a bug.

In line 107, the DiscardInputThread which should swallow all the error-out stuff
gets never started.

I think, this should be something like 

new DiscardInputThread(process.getErrorStream()).start();

Regards,
  Tammo
Is actually a dupe of this bug.

*** This bug has been marked as a duplicate of 35314 ***</WithStack>
    <WithOutStack>In the current HEAD (1.11) of
org.eclipse.team.internal.ccvs.core.connection.ExtConnection is IMHO a bug.

In line 107, the DiscardInputThread which should swallow all the error-out stuff
gets never started.

I think, this should be something like 

new DiscardInputThread(process.getErrorStream()).start();

Regards,
  Tammo
Is actually a dupe of this bug.

*** This bug has been marked as a duplicate of 35314 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73024" />
    <CreationDate amount="2004-08-31 23:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.XSD" />
    <component amount="Core" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>XSDSchema.validate() block</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>XSDSchema.validate() block with schema:

&lt;?xml version="1.0"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://phuchai.com"
           targetNamespace="http://phuchai.com"
           elementFormDefault="qualified"
           attributeFormDefault="qualified"&gt;
   &lt;xs:element name = "anyTypeTest"&gt;
      &lt;xs:complexType&gt;
         &lt;xs:sequence&gt;
            &lt;xs:element name = "xyz" type = "xs:anyType"/&gt;
         &lt;/xs:sequence&gt;
         &lt;xs:attribute name = "abc" type = "xs:anyType"/&gt;
      &lt;/xs:complexType&gt;
   &lt;/xs:element&gt;   
&lt;/xs:schema&gt;
Method "XSDConstants.isOrIsDerivedFromID()" makes infinite-loop with anyType.
The fix is committed to CVS.
The fix for this defect is available in today's build, M200409011021.
Tested and verify the fix in build M200409011021.</WithStack>
    <WithOutStack>XSDSchema.validate() block with schema:

&lt;?xml version="1.0"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://phuchai.com"
           targetNamespace="http://phuchai.com"
           elementFormDefault="qualified"
           attributeFormDefault="qualified"&gt;
   &lt;xs:element name = "anyTypeTest"&gt;
      &lt;xs:complexType&gt;
         &lt;xs:sequence&gt;
            &lt;xs:element name = "xyz" type = "xs:anyType"/&gt;
         &lt;/xs:sequence&gt;
         &lt;xs:attribute name = "abc" type = "xs:anyType"/&gt;
      &lt;/xs:complexType&gt;
   &lt;/xs:element&gt;   
&lt;/xs:schema&gt;
Method "XSDConstants.isOrIsDerivedFromID()" makes infinite-loop with anyType.
The fix is committed to CVS.
The fix for this defect is available in today's build, M200409011021.
Tested and verify the fix in build M200409011021.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73025" />
    <CreationDate amount="2004-09-01 01:48:00 -0400" />
    <DupId amount="68721" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Stack overflow - CachedResourceVariant$ResourceVariantStorage#getFullPath</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182509">
        <Exception>java.lang.StackOverflowError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)</Frame>
          <Frame depth="1">org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)</Frame>
          <Frame depth="2">org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)</Frame>
          <Frame depth="3">org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="98" end="155" />
        <code>class ResourceVariantStorage implements IEncodedStorage {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="156" end="285" />
        <code>public InputStream getContents() throws CoreException {
 . . .
 public IPath getFullPath() {
  return getFullPath();
 }
 . . .
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse R3.0.0 - getFullPath() calls itself, hangs Eclipse (logs stack overflow
under Debugger):

class ResourceVariantStorage implements IEncodedStorage {
 public InputStream getContents() throws CoreException {
 . . .
 public IPath getFullPath() {
  return getFullPath();
 }
 . . .
}

The .log:

!ENTRY org.eclipse.ui 4 0 Sep 01, 2004 01:28:40.375
!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
	at
org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)
	at
org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)
	at
org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)
	at
org.eclipse.team.core.variants.CachedResourceVariant$ResourceVariantStorage.getFullPath(CachedResourceVariant.java:78)
 . . .
Has been fixed in 3.0.1

*** This bug has been marked as a duplicate of 68721 ***</WithStack>
    <WithOutStack>Eclipse R3.0.0 - getFullPath() calls itself, hangs Eclipse (logs stack overflow
under Debugger):

class ResourceVariantStorage implements IEncodedStorage {
 public InputStream getContents() throws CoreException {
 . . .
 public IPath getFullPath() {
  return getFullPath();
 }
 . . .
}

The .log:

!ENTRY org.eclipse.ui 4 0 Sep 01, 2004 01:28:40.375
!MESSAGE java.lang.StackOverflowError
!STACK 0

 . . .
Has been fixed in 3.0.1

*** This bug has been marked as a duplicate of 68721 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73026" />
    <CreationDate amount="2004-09-01 02:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>TLD autodetect does not work for JSP</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>This opening line one a jsp page:

&lt;%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;

generates a compilation error:

JSP Parsing Error:The absolute uri: http://java.sun.com/jsp/jstl/core cannot be
resolved in either web.xml or the jar files deployed with this application

The error message is incorrect, because 'standard.jar' is properly deployed
under /WEB-INF/lib and is being specified under 'Libraries' for the project's
Java Build Path. (As far as web.xml is concerned, however, the message is
correct because there is no reference there for tag libraries.)

In spite of the compilation error, the project builds and runs correctly, thanks
to the tld autodetect mechanism as implemented in both Tomcat 4 and 5.
The Eclipse SDK doesn't include a jsp compiler. You must have a third party 
plugin that includes a jsp compiler. Please report this problem to the author 
of this plugin.</WithStack>
    <WithOutStack>This opening line one a jsp page:

&lt;%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;

generates a compilation error:

JSP Parsing Error:The absolute uri: http://java.sun.com/jsp/jstl/core cannot be
resolved in either web.xml or the jar files deployed with this application

The error message is incorrect, because 'standard.jar' is properly deployed
under /WEB-INF/lib and is being specified under 'Libraries' for the project's
Java Build Path. (As far as web.xml is concerned, however, the message is
correct because there is no reference there for tag libraries.)

In spite of the compilation error, the project builds and runs correctly, thanks
to the tld autodetect mechanism as implemented in both Tomcat 4 and 5.
The Eclipse SDK doesn't include a jsp compiler. You must have a third party 
plugin that includes a jsp compiler. Please report this problem to the author 
of this plugin.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73027" />
    <CreationDate amount="2004-09-01 04:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] Buttons are too high</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20040831

Buttons are no longer oval but have a rounded rectangle shape (see first screenshot).
The second screenshot shows how buttons using the small system font should look like.
Created attachment 14312
Buttons with wrong shape
Created attachment 14313
correct shape
Is this something new? Or it has been a problem since we started using small 
fonts? Where can I see the problem? I can seem to find any case in Eclipse 
where buttons are not oval.
I meant "I cannot seem to find any..." above.
Yes, it is new.
I think it started probably a week ago..

I see the problem with the build you mentioned. SWT has not changed anything 
here. Has something changed in UI?
This is my fault and caused by patches for bug 68568.  Part of the problem is
that Button.computeSize behaves differently on the Mac than on other platforms
(bug 73730).  While it could be fixed in SWT, it seems there are more
fundamental problems with the JFace method of trying to use a standardized
button height.
Fixed in HEAD.
Verified with Build id: 200409212000.</WithStack>
    <WithOutStack>I20040831

Buttons are no longer oval but have a rounded rectangle shape (see first screenshot).
The second screenshot shows how buttons using the small system font should look like.
Created attachment 14312
Buttons with wrong shape
Created attachment 14313
correct shape
Is this something new? Or it has been a problem since we started using small 
fonts? Where can I see the problem? I can seem to find any case in Eclipse 
where buttons are not oval.
I meant "I cannot seem to find any..." above.
Yes, it is new.
I think it started probably a week ago..

I see the problem with the build you mentioned. SWT has not changed anything 
here. Has something changed in UI?
This is my fault and caused by patches for bug 68568.  Part of the problem is
that Button.computeSize behaves differently on the Mac than on other platforms
(bug 73730).  While it could be fixed in SWT, it seems there are more
fundamental problems with the JFace method of trying to use a standardized
button height.
Fixed in HEAD.
Verified with Build id: 200409212000.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73028" />
    <CreationDate amount="2004-09-01 04:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[format] Intelligent wraping with hierarchical dependencies</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi.

It would be great if the code formatter is able to intelligent format boolean 
expressions like the following :

if((b1 == null) &amp;&amp; ((b2 == null) || (b2 == b3))) ...

I would like to see someting like this :

if (
     (b1 == null)
     &amp;&amp;
     (
       (b2 == null)
       ||
       (b2 == b3)
     )
   ) ....

A next good thing could be if the formatter is able to automatically insert 
brackets to "clarify" operator dependecnies like 

(b1 == null &amp;&amp; (b2 == null || b2 == b3)) 

I would like to see someting like this :

((b1 == null) &amp;&amp; ((b2 == null) || (b2 == b3)))

Are u planing to add some of the features here ?

Thanks in advance 

Marcel Petavy
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Hi.

It would be great if the code formatter is able to intelligent format boolean 
expressions like the following :

if((b1 == null) &amp;&amp; ((b2 == null) || (b2 == b3))) ...

I would like to see someting like this :

if (
     (b1 == null)
     &amp;&amp;
     (
       (b2 == null)
       ||
       (b2 == b3)
     )
   ) ....

A next good thing could be if the formatter is able to automatically insert 
brackets to "clarify" operator dependecnies like 

(b1 == null &amp;&amp; (b2 == null || b2 == b3)) 

I would like to see someting like this :

((b1 == null) &amp;&amp; ((b2 == null) || (b2 == b3)))

Are u planing to add some of the features here ?

Thanks in advance 

Marcel Petavy
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73029" />
    <CreationDate amount="2004-09-01 04:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[stepping] automatically show current expression value</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When stepping over an expression in the debugger, (optionally) automatically 
show its value in a popup. See the bottom of 
http://www.omnicore.com/debugger.htm for an example.
This is problematic - our debugger would need to perform an expression 
evaluation to get the result. Performing arbitray evaluations based on hover 
could have dangerous side effects on a program (thus, we ask the user to 
explictily invoke evaluations). It could be that this debugger uses the "back-
in-time" feature to show the value (i.e. does it compute hover for things that 
have not yet been executed?).

*** This bug has been marked as a duplicate of 69990 ***
This request is different from Bug 69990 - the value should be shown when 
*stepping over* (in contrast to hovering over), and therefore *executing the 
expression anyway*. As far as I can tell, this shouldn't have any side effect 
at all.
OK, this is a request of a back in time debugger. Marking as a dup.

*** This bug has been marked as a duplicate of 54885 ***
No, it's not, sorry.

From the Code Guide page mentioned above:

"Of course it is still possible to use conventional stepping with the new 
debugger. It offers two step over buttons. Step over statement steps whole 
statements, while step over expression offers fine grained stepping and steps 
individual expressions. Once the program evaluates an expression CodeGuide 
highlights the expression and shows the value of this expression in a popup."

ok, marking as later
Requires JDI feature that is not yet implemented:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6405895
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When stepping over an expression in the debugger, (optionally) automatically 
show its value in a popup. See the bottom of 
http://www.omnicore.com/debugger.htm for an example.
This is problematic - our debugger would need to perform an expression 
evaluation to get the result. Performing arbitray evaluations based on hover 
could have dangerous side effects on a program (thus, we ask the user to 
explictily invoke evaluations). It could be that this debugger uses the "back-
in-time" feature to show the value (i.e. does it compute hover for things that 
have not yet been executed?).

*** This bug has been marked as a duplicate of 69990 ***
This request is different from Bug 69990 - the value should be shown when 
*stepping over* (in contrast to hovering over), and therefore *executing the 
expression anyway*. As far as I can tell, this shouldn't have any side effect 
at all.
OK, this is a request of a back in time debugger. Marking as a dup.

*** This bug has been marked as a duplicate of 54885 ***
No, it's not, sorry.

From the Code Guide page mentioned above:

"Of course it is still possible to use conventional stepping with the new 
debugger. It offers two step over buttons. Step over statement steps whole 
statements, while step over expression offers fine grained stepping and steps 
individual expressions. Once the program evaluates an expression CodeGuide 
highlights the expression and shows the value of this expression in a popup."

ok, marking as later
Requires JDI feature that is not yet implemented:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6405895
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73030" />
    <CreationDate amount="2004-09-01 04:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StringIndexOutOfBoundsException encountered while editing name of test in testsuite editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182514">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.String.charAt(String.java:385)</Frame>
          <Frame depth="1">org.eclipse.hyades.ui.internal.util.JavaUtil.getValidIdentifierName(JavaUtil.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.test.common.internal.codegen.Helper.retrieveIdentifierName(Helper.java:169)</Frame>
          <Frame depth="3">org.eclipse.hyades.test.common.internal.util.TestCaseUniqueNameAdapter.notifyChanged(TestCaseUniqueNameAdapter.java:75)</Frame>
          <Frame depth="4">org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:225)</Frame>
          <Frame depth="5">org.eclipse.hyades.models.common.common.impl.CMNNamedElementImpl.setName(CMNNamedElementImpl.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.test.ui.editor.form.util.NamedElementSection.modifyText(NamedElementSection.java)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:963)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:833)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.StyledText.sendModifyEvent(StyledText.java:6455)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5609)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6441)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2468)</Frame>
          <Frame depth="17">org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4983)</Frame>
          <Frame depth="19">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5002)</Frame>
          <Frame depth="20">org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4747)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:963)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2347)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1826)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:440)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1207)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.windowProc(Display.java:3098)</Frame>
          <Frame depth="30">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.eventProc(Display.java:879)</Frame>
          <Frame depth="32">org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2297)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="37">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="39">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="40">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="43">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="44">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="45">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="46">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>RHEL 3.0 WS

When editing the name for a Test Case in the editor for a test suite, I've 
encountered a StringIndexOutOfBoundsException.  What I've done is select the 
name in the Name field and delete the text. This does NOT keep me from being 
able to correctly set the name, it just shows up in the log when it shouldn't.

When I do this, I get the following stack trace in the consolelog...
java.lang.StringIndexOutOfBoundsException
	at java.lang.String.charAt(String.java:385)
	at org.eclipse.hyades.ui.internal.util.JavaUtil.getValidIdentifierName
(JavaUtil.java)
	at 
org.eclipse.hyades.test.common.internal.codegen.Helper.retrieveIdentifierName
(Helper.java:169)
	at 
org.eclipse.hyades.test.common.internal.util.TestCaseUniqueNameAdapter.notifyCh
anged(TestCaseUniqueNameAdapter.java:75)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify
(BasicNotifierImpl.java:225)
	at 
org.eclipse.hyades.models.common.common.impl.CMNNamedElementImpl.setName
(CMNNamedElementImpl.java)
	at 
org.eclipse.hyades.test.ui.editor.form.util.NamedElementSection.modifyText
(NamedElementSection.java)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:963)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:833)
	at org.eclipse.swt.custom.StyledText.sendModifyEvent
(StyledText.java:6455)
	at org.eclipse.swt.custom.StyledText.modifyContent
(StyledText.java:5609)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6441)
	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2468)
	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4983)
	at org.eclipse.swt.custom.StyledText.handleKeyDown
(StyledText.java:5002)
	at org.eclipse.swt.custom.StyledText$7.handleEvent
(StyledText.java:4747)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:963)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2347)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event
(Control.java:1826)
	at org.eclipse.swt.widgets.Composite.gtk_key_press_event
(Composite.java:440)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1207)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3098)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:879)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2297)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
Little fix in org.eclipse.hyades.ui.internal.util.JavaUtil.getValidIdentifierName 
the case in which the name of the test case is "" was omitted.
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>RHEL 3.0 WS

When editing the name for a Test Case in the editor for a test suite, I've 
encountered a StringIndexOutOfBoundsException.  What I've done is select the 
name in the Name field and delete the text. This does NOT keep me from being 
able to correctly set the name, it just shows up in the log when it shouldn't.

When I do this, I get the following stack trace in the consolelog...

Little fix in org.eclipse.hyades.ui.internal.util.JavaUtil.getValidIdentifierName 
the case in which the name of the test case is "" was omitted.
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73031" />
    <CreationDate amount="2004-09-01 04:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(test) Adding an invocation to a loop in the behavior section is awkward</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Define a consistent approach for flat-look editors that have a tree where you</Line>
          <Line>can add siblings and children. Different editors in TPTP (Hyades) are doing this</Line>
          <Line>differently, so we need to find the right way to do this and use it across the</Line>
          <Line>board.</Line>
          <Line />
          <Line>2. Discuss paging in views. Some of our views, like the log view, have the idea</Line>
          <Line>of paging. This is used to limit the amount of data being shown in the view at</Line>
          <Line>any time. Because this is something we'd probably want to do in most (if not</Line>
          <Line>every) view, we should come up with a standard way to present it.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>1. The following buttons should appear in all flat-look tree editors (in this</Line>
          <Line>order and with these specific names): Add, Insert, Remove, Up, Down.</Line>
          <Line>2. The add button adds an appropriate item (editor-specific) one level down from</Line>
          <Line>the selected item (a child), at the end of the list of children.</Line>
          <Line>3. The insert button inserts an item immediately after the selected item (a</Line>
          <Line>sibling).</Line>
          <Line>4. Tooltips should be present on the buttons, and are editor-specific.</Line>
          <Line>5. The items in the context menus should perform exactly the same operations as</Line>
          <Line>the corresponding button in the editor.</Line>
          <Line>6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="20">
        <Lines>
          <Line>1. The following buttons should appear in all flat-look tree editors (in this</Line>
          <Line>order and with these specific names): Add, Insert, Remove, Up, Down.</Line>
          <Line>2. The add button adds an appropriate item (editor-specific) one level down from</Line>
          <Line>the selected item (a child), at the end of the list of children.</Line>
          <Line>3. The insert button inserts an item immediately after the selected item (a</Line>
          <Line>sibling).</Line>
          <Line>4. Tooltips should be present on the buttons, and are editor-specific.</Line>
          <Line>5. The items in the context menus should perform exactly the same operations as</Line>
          <Line>the corresponding button in the editor.</Line>
          <Line>6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?)"</Line>
          <Line />
          <Line>Other parts of the minutes are somewhat out-of-date or misleading now.</Line>
          <Line>The text in the minutes about "Eclipse now has guidelines for flat-look</Line>
          <Line>editors..." and EMF-based editors is somewhat incorrect/out-of-date.  It isn't</Line>
          <Line>so much that there are guidelines, but Eclipse now supports the flat look editor</Line>
          <Line>officially (FormWidget).  There is actually a TPTP feature to have all editors</Line>
          <Line>using the Flat Look update to the new officially supported Flat Look (see Bug</Line>
          <Line>74949) https://bugs.eclipse.org/bugs/show_bug.cgi?id=74949</Line>
          <Line>*** Bug 83089 has been marked as a duplicate of this bug. ***</Line>
          <Line>Fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Platform: RHEL 3.0 WS

When adding a behavior to a test suite, I have run into a usability issue.  
Specifically, when I have a loop and want to add an invocation to it, Ithere 
are two ways which to me should be the same but aren't.

One: I can select the loop and right click, then add an invocation. 
Two: I can use the Add... button.  Unfortunately, this doesn't add the 
invocation to the loop that I have selected in the editor.  

This seems odd to me.  Furthermore, there is no F1 help on the Add button, 
which would possibly explain to me that this only adds items to the toplevel, 
not nested within a selected item. In my opinion, this is a bad usability 
issue and deserves a high BP.  

One way to fix this would be to simply add F1 help to the Add button or change 
the text to something that leaves no doubt what function it serves.
Reassigning as requested.
I also ran into this issue with jUnit test suites on windows xp.
I agree that this severely impacts the usability of the junit test suite 
definition. I would suggest working with usability to improve this section. 
One possibility is add/insert/remove but that can have issues of its own.
I would recommend against having the "add" action change based upon how you 
access it. 
I do not think that F1 help would fix this problem since some users do not know 
F1 help exists.

I agree that a F1 help or a tootip is not user friendly to explain the 
behavior of a button. This behavior should be described by the label of the 
button itself to be comprehensible upon first display.

To solve this issue, two additional buttons will replace the 'Add...' button.  
The 'Add Sibling' and 'Add Child' buttons (in addition to the 
existing 'Remove', 'Up' and 'Down' buttons) will clarify the use of the tree 
section in the editor.

The associated add child action will add the element after the last child of 
the selected item.
The associated add sibling action will add a new element below the selected 
tree item.
You can see an example of that behavior in the eclipse schema editor with 
its 'New Element' and 'New Attribute' buttons.

Dominique, we had a TPTP UI Meeitng November 17th to discuss this issue and
Patrick was involved in this discussion.  I am copying the meeting notes that
were distributed to the TPTP mailing list.  Please note there was agreement on a
design to resolve this issue.  We wish to have all tree-based editors within
TPTP (and that build on top of TPTP) follow a same User Experience.

Meeting notes from this week's TPTP UI meeting: (Nov 17, 2004)

Agenda: 

1. Define a consistent approach for flat-look editors that have a tree where you
can add siblings and children. Different editors in TPTP (Hyades) are doing this
differently, so we need to find the right way to do this and use it across the
board. 

2. Discuss paging in views. Some of our views, like the log view, have the idea
of paging. This is used to limit the amount of data being shown in the view at
any time. Because this is something we'd probably want to do in most (if not
every) view, we should come up with a standard way to present it. 

Attendees: 

Alex Nan 
Curtis d'Entremont 
David Hodges 
Eugene Chan 
Marius Slavescu 
Martin Boag 
Patrick Nedelec 
Terry Fountoulakis 
Wayne Ho 

(incomplete list - I apologize for not catching all your names) 

Time: 

Wednesday, Nov. 17, 12:00pm (noon) EST. 

Notes: 

Here are the conclusions reached from the discussion on flat-look editors with
trees: 

1. The following buttons should appear in all flat-look tree editors (in this
order and with these specific names): Add, Insert, Remove, Up, Down. 
2. The add button adds an appropriate item (editor-specific) one level down from
the selected item (a child), at the end of the list of children. 
3. The insert button inserts an item immediately after the selected item (a
sibling). 
4. Tooltips should be present on the buttons, and are editor-specific. 
5. The items in the context menus should perform exactly the same operations as
the corresponding button in the editor. 
6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?) 

On a related note, it was noted that not all editors follow the same flat-editor
look. Eclipse now has guidelines for flat-look editors, which should be
followed. It is suggested to use EMF-based editors, as they provide much of the
implementation for free, and already adhere to the guidelines (mostly, if not
completely). Alex Nan to open a feature request for this. 

On the topic of paging, the rationale and approaches to paging were discussed,
but there were no major conclusions due to lack of time. The discussion will
continue in a later meeting. 

Since we're closing down i2, there won't be a meeting next week unless there are
urgent topics to discuss. 
I need to clarify my above comment (#4).

In my comment in bugzilla #73031, I probably should have only highlighted the
relevant portions of the TPTP UI Meeting minutes from November 17th (see below)
that discuss the design discussion on buttons in the tree-based editors:

"Here are the conclusions reached from the discussion on flat-look editors with
trees: 

1. The following buttons should appear in all flat-look tree editors (in this
order and with these specific names): Add, Insert, Remove, Up, Down. 
2. The add button adds an appropriate item (editor-specific) one level down from
the selected item (a child), at the end of the list of children. 
3. The insert button inserts an item immediately after the selected item (a
sibling). 
4. Tooltips should be present on the buttons, and are editor-specific. 
5. The items in the context menus should perform exactly the same operations as
the corresponding button in the editor. 
6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?)"

Other parts of the minutes are somewhat out-of-date or misleading now.
The text in the minutes about "Eclipse now has guidelines for flat-look
editors..." and EMF-based editors is somewhat incorrect/out-of-date.  It isn't
so much that there are guidelines, but Eclipse now supports the flat look editor
officially (FormWidget).  There is actually a TPTP feature to have all editors
using the Flat Look update to the new officially supported Flat Look (see Bug
74949) https://bugs.eclipse.org/bugs/show_bug.cgi?id=74949
*** Bug 83089 has been marked as a duplicate of this bug. ***
Fixed.

For the cut-copy-paste actions and D&amp;D, an enhancement has been submitted (see 
bugzilla #88061).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Platform: RHEL 3.0 WS

When adding a behavior to a test suite, I have run into a usability issue.  
Specifically, when I have a loop and want to add an invocation to it, Ithere 
are two ways which to me should be the same but aren't.

One: I can select the loop and right click, then add an invocation. 
Two: I can use the Add... button.  Unfortunately, this doesn't add the 
invocation to the loop that I have selected in the editor.  

This seems odd to me.  Furthermore, there is no F1 help on the Add button, 
which would possibly explain to me that this only adds items to the toplevel, 
not nested within a selected item. In my opinion, this is a bad usability 
issue and deserves a high BP.  

One way to fix this would be to simply add F1 help to the Add button or change 
the text to something that leaves no doubt what function it serves.
Reassigning as requested.
I also ran into this issue with jUnit test suites on windows xp.
I agree that this severely impacts the usability of the junit test suite 
definition. I would suggest working with usability to improve this section. 
One possibility is add/insert/remove but that can have issues of its own.
I would recommend against having the "add" action change based upon how you 
access it. 
I do not think that F1 help would fix this problem since some users do not know 
F1 help exists.

I agree that a F1 help or a tootip is not user friendly to explain the 
behavior of a button. This behavior should be described by the label of the 
button itself to be comprehensible upon first display.

To solve this issue, two additional buttons will replace the 'Add...' button.  
The 'Add Sibling' and 'Add Child' buttons (in addition to the 
existing 'Remove', 'Up' and 'Down' buttons) will clarify the use of the tree 
section in the editor.

The associated add child action will add the element after the last child of 
the selected item.
The associated add sibling action will add a new element below the selected 
tree item.
You can see an example of that behavior in the eclipse schema editor with 
its 'New Element' and 'New Attribute' buttons.

Dominique, we had a TPTP UI Meeitng November 17th to discuss this issue and
Patrick was involved in this discussion.  I am copying the meeting notes that
were distributed to the TPTP mailing list.  Please note there was agreement on a
design to resolve this issue.  We wish to have all tree-based editors within
TPTP (and that build on top of TPTP) follow a same User Experience.

Meeting notes from this week's TPTP UI meeting: (Nov 17, 2004)

Agenda: 

1. Define a consistent approach for flat-look editors that have a tree where you
can add siblings and children. Different editors in TPTP (Hyades) are doing this
differently, so we need to find the right way to do this and use it across the
board. 

2. Discuss paging in views. Some of our views, like the log view, have the idea
of paging. This is used to limit the amount of data being shown in the view at
any time. Because this is something we'd probably want to do in most (if not
every) view, we should come up with a standard way to present it. 

Attendees: 

Alex Nan 
Curtis d'Entremont 
David Hodges 
Eugene Chan 
Marius Slavescu 
Martin Boag 
Patrick Nedelec 
Terry Fountoulakis 
Wayne Ho 

(incomplete list - I apologize for not catching all your names) 

Time: 

Wednesday, Nov. 17, 12:00pm (noon) EST. 

Notes: 

Here are the conclusions reached from the discussion on flat-look editors with
trees: 

1. The following buttons should appear in all flat-look tree editors (in this
order and with these specific names): Add, Insert, Remove, Up, Down. 
2. The add button adds an appropriate item (editor-specific) one level down from
the selected item (a child), at the end of the list of children. 
3. The insert button inserts an item immediately after the selected item (a
sibling). 
4. Tooltips should be present on the buttons, and are editor-specific. 
5. The items in the context menus should perform exactly the same operations as
the corresponding button in the editor. 
6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?) 

On a related note, it was noted that not all editors follow the same flat-editor
look. Eclipse now has guidelines for flat-look editors, which should be
followed. It is suggested to use EMF-based editors, as they provide much of the
implementation for free, and already adhere to the guidelines (mostly, if not
completely). Alex Nan to open a feature request for this. 

On the topic of paging, the rationale and approaches to paging were discussed,
but there were no major conclusions due to lack of time. The discussion will
continue in a later meeting. 

Since we're closing down i2, there won't be a meeting next week unless there are
urgent topics to discuss. 
I need to clarify my above comment (#4).

In my comment in bugzilla #73031, I probably should have only highlighted the
relevant portions of the TPTP UI Meeting minutes from November 17th (see below)
that discuss the design discussion on buttons in the tree-based editors:

"Here are the conclusions reached from the discussion on flat-look editors with
trees: 

1. The following buttons should appear in all flat-look tree editors (in this
order and with these specific names): Add, Insert, Remove, Up, Down. 
2. The add button adds an appropriate item (editor-specific) one level down from
the selected item (a child), at the end of the list of children. 
3. The insert button inserts an item immediately after the selected item (a
sibling). 
4. Tooltips should be present on the buttons, and are editor-specific. 
5. The items in the context menus should perform exactly the same operations as
the corresponding button in the editor. 
6. Cut/Copy/Paste actions should be enabled (drag-and-drop too?)"

Other parts of the minutes are somewhat out-of-date or misleading now.
The text in the minutes about "Eclipse now has guidelines for flat-look
editors..." and EMF-based editors is somewhat incorrect/out-of-date.  It isn't
so much that there are guidelines, but Eclipse now supports the flat look editor
officially (FormWidget).  There is actually a TPTP feature to have all editors
using the Flat Look update to the new officially supported Flat Look (see Bug
74949) https://bugs.eclipse.org/bugs/show_bug.cgi?id=74949
*** Bug 83089 has been marked as a duplicate of this bug. ***
Fixed.

For the cut-copy-paste actions and D&amp;D, an enhancement has been submitted (see 
bugzilla #88061).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73032" />
    <CreationDate amount="2004-09-01 04:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Repo View] CVS Tag deletion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Goto the CVS perspective</Line>
          <Line>2) Select a file, set of files, directory, set of directories</Line>
          <Line>3) Right click - Tag removal</Line>
          <Line>4) Enter the tag name and press OK</Line>
          <Line>5) Display something about the tag removal status</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I would like to be able to delete a CVS Tag.
Currently tags can be set and can be moved but not removed.
You can run from the cvs command line:
cvs tag -d &lt;tag name&gt;

We didn't want to expose this as it is dangerous, I would prefer making our
dialogs more scalable with relation to large sets of tags.
Yes, deleting tags is dangerous but there are more actions with CVS that should
be executed with caution. ;-)

The tag deletion is (for me) the only reason to have a command line CVS.
I would like to second the request for the delete tag feature.  For me it's not
a question of too many tags and/or a scalable dialog.  And as far as I can tell,
eclipse doesn't come with a command-line "cvs" program, so when running on a
windoze box, there's no fallback.

Here's the use case: I need to delete a Java file that has a critical tag, the
one used to say "build this version."  I must delete the tag before deleting the
file, otherwise that file will reappear when my build coordinator exports the
repository using the version tag.  But there's no way to do it in eclipse. 
 
Perhaps this feature could be hidden on an "Advanced" tab, or the preferences
could be extended so the delete-tag item is not offered unless a "Show all"
preference is chosen. 

To get me through today's problem, I resorted to win cvs: checked out the whole
beast of a project into a separate work area, used the WinCVS "delete tag"
feature, then refreshed the Eclipse work area.  What a pain.
*** Bug 41965 has been marked as a duplicate of this bug. ***
We also wish to have this feature:

1) Goto the CVS perspective
2) Select a file, set of files, directory, set of directories
3) Right click - Tag removal
4) Enter the tag name and press OK
5) Display something about the tag removal status

I failed to mention our real problem.
Our build process uses command line CVS and is based on tags.
When we have files that are in the CVS attic that have tags we want to be able to remove the tags.
I also need this feature, so I browser around in Team -&gt; Tag as Version... and by clicking on Details and Configure Tags... I got into a dialog where I could select a remembered tag and supposedly remove it (Button 'Remove').
However, this doesn't work (Eclipse 3.2)

Either I'm wrong with my assumption or the UI is confusing me...
The Remove you found is really just a Forget (i.e. it tells Eclipse to remove the tag from it's local cache). We'll look into addressing this for 3.4.
*** Bug 192624 has been marked as a duplicate of this bug. ***
Please count my vote too. It is a bit annoying to switch from Eclipse to an external CVS client just to remove a tag.

I think that "Tag resources" dialog can gain yet another option like "Remove" next to "Move tag if it already exists". Obviously the checkboxes would not make sense anymore here, so a radial button may be a better choice instead.

If a user does not select clearly a tag to remove then the existing one (on the files to removal) could be taken.
This one has been waiting for a volunteer. Lowering the priority to the value appropriate for 'helpwanted' issues.
Created attachment 115656
The patch to fix this bug(Based on the code 20081020)

I just attached the patch to fix this bug.
I hope you'll accept it.
Created attachment 115657
RemoveTagPlugin(For Eclipse 3.4.0)

Before eclipse platform team accepts the patch, you can try this plugin instead. For more details, you can refer to http://blog.zijinshi.cn/frank/archives/8.
It would also be interesting to have the context menu on the revision in the History view (cvs page).
In attached patch and plugin, the context menu for repository view is not added yet, I'll add the feature later.
Created attachment 115776
Patch to fix this bug(20081022)

After applying the patch, user can find "Remove Tag..." action via the 2 menus:
1.Context menu  Team-&gt;Remove Tag...
2.Repository view.

Of course, the code includes the feature(excluding the menu in comment #14), but needs to be tidied and optimized.
For the benefit of those who are waiting for this to end up in the official release, you can write an Ant task that does:

&lt;cvs cvsRsh="${ssh_exe}" cvsRoot=":ext:${user}@${cvs.server}:${cvs.repo}" command="rtag -d tag-to-delete module-to-delete-tag"/&gt;

That at least will eliminate the need for the command line tool.
*** Bug 276614 has been marked as a duplicate of this bug. ***
Gosia, could you please have a look at the proposed patch (comment 16) and see if it can be applied.</WithStack>
    <WithOutStack>I would like to be able to delete a CVS Tag.
Currently tags can be set and can be moved but not removed.
You can run from the cvs command line:
cvs tag -d &lt;tag name&gt;

We didn't want to expose this as it is dangerous, I would prefer making our
dialogs more scalable with relation to large sets of tags.
Yes, deleting tags is dangerous but there are more actions with CVS that should
be executed with caution. ;-)

The tag deletion is (for me) the only reason to have a command line CVS.
I would like to second the request for the delete tag feature.  For me it's not
a question of too many tags and/or a scalable dialog.  And as far as I can tell,
eclipse doesn't come with a command-line "cvs" program, so when running on a
windoze box, there's no fallback.

Here's the use case: I need to delete a Java file that has a critical tag, the
one used to say "build this version."  I must delete the tag before deleting the
file, otherwise that file will reappear when my build coordinator exports the
repository using the version tag.  But there's no way to do it in eclipse. 
 
Perhaps this feature could be hidden on an "Advanced" tab, or the preferences
could be extended so the delete-tag item is not offered unless a "Show all"
preference is chosen. 

To get me through today's problem, I resorted to win cvs: checked out the whole
beast of a project into a separate work area, used the WinCVS "delete tag"
feature, then refreshed the Eclipse work area.  What a pain.
*** Bug 41965 has been marked as a duplicate of this bug. ***
We also wish to have this feature:

1) Goto the CVS perspective
2) Select a file, set of files, directory, set of directories
3) Right click - Tag removal
4) Enter the tag name and press OK
5) Display something about the tag removal status

I failed to mention our real problem.
Our build process uses command line CVS and is based on tags.
When we have files that are in the CVS attic that have tags we want to be able to remove the tags.
I also need this feature, so I browser around in Team -&gt; Tag as Version... and by clicking on Details and Configure Tags... I got into a dialog where I could select a remembered tag and supposedly remove it (Button 'Remove').
However, this doesn't work (Eclipse 3.2)

Either I'm wrong with my assumption or the UI is confusing me...
The Remove you found is really just a Forget (i.e. it tells Eclipse to remove the tag from it's local cache). We'll look into addressing this for 3.4.
*** Bug 192624 has been marked as a duplicate of this bug. ***
Please count my vote too. It is a bit annoying to switch from Eclipse to an external CVS client just to remove a tag.

I think that "Tag resources" dialog can gain yet another option like "Remove" next to "Move tag if it already exists". Obviously the checkboxes would not make sense anymore here, so a radial button may be a better choice instead.

If a user does not select clearly a tag to remove then the existing one (on the files to removal) could be taken.
This one has been waiting for a volunteer. Lowering the priority to the value appropriate for 'helpwanted' issues.
Created attachment 115656
The patch to fix this bug(Based on the code 20081020)

I just attached the patch to fix this bug.
I hope you'll accept it.
Created attachment 115657
RemoveTagPlugin(For Eclipse 3.4.0)

Before eclipse platform team accepts the patch, you can try this plugin instead. For more details, you can refer to http://blog.zijinshi.cn/frank/archives/8.
It would also be interesting to have the context menu on the revision in the History view (cvs page).
In attached patch and plugin, the context menu for repository view is not added yet, I'll add the feature later.
Created attachment 115776
Patch to fix this bug(20081022)

After applying the patch, user can find "Remove Tag..." action via the 2 menus:
1.Context menu  Team-&gt;Remove Tag...
2.Repository view.

Of course, the code includes the feature(excluding the menu in comment #14), but needs to be tidied and optimized.
For the benefit of those who are waiting for this to end up in the official release, you can write an Ant task that does:

&lt;cvs cvsRsh="${ssh_exe}" cvsRoot=":ext:${user}@${cvs.server}:${cvs.repo}" command="rtag -d tag-to-delete module-to-delete-tag"/&gt;

That at least will eliminate the need for the command line tool.
*** Bug 276614 has been marked as a duplicate of this bug. ***
Gosia, could you please have a look at the proposed patch (comment 16) and see if it can be applied.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73033" />
    <CreationDate amount="2004-09-01 05:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[options] Unneccessary else statement compiler warning</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="ifstatement">
        <location start="78" end="135" />
        <code>if (args != null) {
			return parseArguments(args);
		}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="132" end="168" />
        <code>} else {
			return EMPTY_ARGS;
		}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="413" end="461" />
        <code>if (args == null) {
    return EMPTY_ARGS;
  }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="462" end="492" />
        <code>return parseArguments(args);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When switching this warning the compiler complains about the following code:

		if (args != null) {
			return parseArguments(args);
		} else {
			return EMPTY_ARGS;
		}

I know that I can remove the else statement but it is code pratice to write 
code like this. Shouldn't this case be treated special ?
Other code practice is to check for rare case/exceptional case first, and then 
normal case fall through...

  if (args == null) {
    return EMPTY_ARGS;
  }
  return parseArguments(args);

We could add more options to tolerate more styles...
I would prefer the error location to be the 'else' keyword instead of the entire
else block - with the option turned on, I get huge yellow squiggly areas for
large else blocks.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When switching this warning the compiler complains about the following code:

		if (args != null) {
			return parseArguments(args);
		} else {
			return EMPTY_ARGS;
		}

I know that I can remove the else statement but it is code pratice to write 
code like this. Shouldn't this case be treated special ?
Other code practice is to check for rare case/exceptional case first, and then 
normal case fall through...

  if (args == null) {
    return EMPTY_ARGS;
  }
  return parseArguments(args);

We could add more options to tolerate more styles...
I would prefer the error location to be the 'else' keyword instead of the entire
else block - with the option turned on, I get huge yellow squiggly areas for
large else blocks.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73034" />
    <CreationDate amount="2004-09-01 05:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StatCon could do with a play sound alert action</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>StatCon could do with a play sound alert action
fixed and changes added to CVS HEAD (3.1i2)
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>StatCon could do with a play sound alert action
fixed and changes added to CVS HEAD (3.1i2)
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73035" />
    <CreationDate amount="2004-09-01 05:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.12" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Classpath ordering problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Related to bug 72671, but not involving the bootclasspath, there is a
problematic difference between the order of the classpath used by Java projects
and that used by AspectJ projects. This can result in the case where a valid
Java project is converted to an AspectJ project, and then no longer compiles.

This can be easily demonstrated by having two implementations of the same class
(with the same package name). Order the Java classpath such as one is in front
of the other, with code that requires that order. Conversion to an AspectJ
project can then result in compilation errors.

I'm adding a test project to the org.eclipse.ajdt.test project for this.
Fixed this by using a new build classpath resolver, which is basically a copy of
the JDT one.</WithStack>
    <WithOutStack>Related to bug 72671, but not involving the bootclasspath, there is a
problematic difference between the order of the classpath used by Java projects
and that used by AspectJ projects. This can result in the case where a valid
Java project is converted to an AspectJ project, and then no longer compiles.

This can be easily demonstrated by having two implementations of the same class
(with the same package name). Order the Java classpath such as one is in front
of the other, with code that requires that order. Conversion to an AspectJ
project can then result in compilation errors.

I'm adding a test project to the org.eclipse.ajdt.test project for this.
Fixed this by using a new build classpath resolver, which is basically a copy of
the JDT one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73036" />
    <CreationDate amount="2004-09-01 05:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Strange compiler warning</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>i.e. you recommend to ignore this test and use the defaults, right?</Line>
          <Line>If you really mean to use dnsns.jar, I recommend to pump up the target level</Line>
          <Line>to 1.4, if not, I suggest you remove it from your JDK since it is polluting</Line>
          <Line>your 1.2 compatibility. Personally, I am disabling this warning alltogether.</Line>
          <Line>OK. I guess we can close this one then.</Line>
          <Line>Closing</Line>
          <Line>Jus for the record. You get this error also on rt.jar. I only copied the first</Line>
          <Line>out of six. So this isn't only an issue with dnsns.jar.</Line>
          <Line>Fair enough, this indicates that if you compile against this rt.jar, you'd</Line>
          <Line>better ensure you tag your classfiles as 1.4 based then.</Line>
          <Line>The only argument for keeping it 1.2 by default, is to match other compiler</Line>
          <Line>vendors.</Line>
          <Line>i.e. you advise us to set the generated class file compatibility to 1.4 for</Line>
          <Line>Eclipse 3.1 development?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>My org.eclipse.core.expressions.tests project issues strange compiler warnings.

Incompatible .class files version in required binaries. 
Project 'org.eclipse.core.expressions.tests' is targeting a 1.2 runtime, but 
is compiled against 'C:apps/java/jdk1.4.2/jre/lib/ext/dnsns.jar' which 
requires a 1.4 runtime	org.eclipse.core.expressions.tests

My compiler settings are:

Compiler compliance level: 1.4 which default compliance settings
Using JDK 1.4.2 as JRE.

I was only able to get rid of the error by changing the default compliance 
settings to 1.4 for the generated class files.
We have set Compiler-&gt;Build Path-&gt;Incompatible required libraries set to 
warnings.
By default, 1.4 is generating for 1.2 runtimes (-target 1.2), for backward 
compatibility purpose. This warning however tells you that you are compiling 
code against binaries which are stamped as 1.4 specific, and not 1.2 as you 
may think you are. By saying you mean to target a 1.4 runtime, then everything 
is fine again. 

Ok to close?
Can this cause troubles? If so, why is this default for developing Eclipse?
I agree with Dani.
We follow the standards of JDKs, defining our own defaults could surprise 
other users. 
i.e. you recommend to ignore this test and use the defaults, right?
If you really mean to use dnsns.jar, I recommend to pump up the target level 
to 1.4, if not, I suggest you remove it from your JDK since it is polluting 
your 1.2 compatibility. Personally, I am disabling this warning alltogether.
OK. I guess we can close this one then.
Closing
Jus for the record. You get this error also on rt.jar. I only copied the first 
out of six. So this isn't only an issue with dnsns.jar.
Fair enough, this indicates that if you compile against this rt.jar, you'd 
better ensure you tag your classfiles as 1.4 based then. 
The only argument for keeping it 1.2 by default, is to match other compiler 
vendors.
i.e. you advise us to set the generated class file compatibility to 1.4 for
Eclipse 3.1 development?</WithStack>
    <WithOutStack>My org.eclipse.core.expressions.tests project issues strange compiler warnings.

Incompatible .class files version in required binaries. 
Project 'org.eclipse.core.expressions.tests' is targeting a 1.2 runtime, but 
is compiled against 'C:apps/java/jdk1.4.2/jre/lib/ext/dnsns.jar' which 
requires a 1.4 runtime	org.eclipse.core.expressions.tests

My compiler settings are:

Compiler compliance level: 1.4 which default compliance settings
Using JDK 1.4.2 as JRE.

I was only able to get rid of the error by changing the default compliance 
settings to 1.4 for the generated class files.
We have set Compiler-&gt;Build Path-&gt;Incompatible required libraries set to 
warnings.
By default, 1.4 is generating for 1.2 runtimes (-target 1.2), for backward 
compatibility purpose. This warning however tells you that you are compiling 
code against binaries which are stamped as 1.4 specific, and not 1.2 as you 
may think you are. By saying you mean to target a 1.4 runtime, then everything 
is fine again. 

Ok to close?
Can this cause troubles? If so, why is this default for developing Eclipse?
I agree with Dani.
We follow the standards of JDKs, defining our own defaults could surprise 
other users. 
i.e. you recommend to ignore this test and use the defaults, right?
If you really mean to use dnsns.jar, I recommend to pump up the target level 
to 1.4, if not, I suggest you remove it from your JDK since it is polluting 
your 1.2 compatibility. Personally, I am disabling this warning alltogether.
OK. I guess we can close this one then.
Closing
Jus for the record. You get this error also on rt.jar. I only copied the first 
out of six. So this isn't only an issue with dnsns.jar.
Fair enough, this indicates that if you compile against this rt.jar, you'd 
better ensure you tag your classfiles as 1.4 based then. 
The only argument for keeping it 1.2 by default, is to match other compiler 
vendors.
i.e. you advise us to set the generated class file compatibility to 1.4 for
Eclipse 3.1 development?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73037" />
    <CreationDate amount="2004-09-01 05:45:00 -0400" />
    <DupId amount="84196" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[osgi] UnsupportedClassVersionError not reported when running JUnit Plugin test</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182529">
        <Exception>java.lang.UnsupportedClassVersionError</Exception>
        <Reason>org/eclipse/jdt/core/JavaCore 
(Unsupported major.minor version 49.0)</Reason>
        <Frames>
          <Frame depth="0">java.lang.ClassLoader.defineClass0(Native Method)</Frame>
          <Frame depth="1">java.lang.ClassLoader.defineClass(ClassLoader.java:537)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.defineClass(DefaultClassLoader.java:298)</Frame>
          <Frame depth="3">org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass(EclipseClassLoader.java:223)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.findClassImpl(DefaultClassLoader.java:281)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.findClass(DefaultClassLoader.java:172)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass(AbstractClassLoader.java:220)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass(EclipseClassLoader.java:135)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:73)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)</Frame>
          <Frame depth="12">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:307)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:336)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:151)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:933)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:421)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:293)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:110)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass(BundleLoader.java:336)</Frame>
          <Frame depth="22">org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass(BundleLoader.java:914)</Frame>
          <Frame depth="23">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:399)</Frame>
          <Frame depth="24">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)</Frame>
          <Frame depth="25">java.lang.ClassLoader.loadClass(ClassLoader.java:235)</Frame>
          <Frame depth="26">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</Frame>
          <Frame depth="27">java.lang.Class.getDeclaredMethods0(Native Method)</Frame>
          <Frame depth="28">java.lang.Class.privateGetDeclaredMethods(Class.java:1647)</Frame>
          <Frame depth="29">java.lang.Class.getMethod0(Class.java:1893)</Frame>
          <Frame depth="30">java.lang.Class.getMethod(Class.java:976)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest(RemoteTestRunner.java:357)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:398)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:305)</Frame>
          <Frame depth="34">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:26)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:684)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:668)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Check out the HEAD version of the following projects from dev.eclipse.org:</Line>
          <Line>- org.eclipse.jdt.core</Line>
          <Line>- org.eclipse.jdt.core.tests.compiler</Line>
          <Line>- org.eclipse.jdt.core.tests.model</Line>
          <Line>2. Set the Java compiler compliance level to 1.5 for org.eclipse.jdt.core</Line>
          <Line>3. Set the Java compiler compilance level to 1.4 for the other 2 tests projects</Line>
          <Line>4. Select org.eclipse.jdt.core.tests.model.AllPerformanceTests</Line>
          <Line>5. Run As... &gt; JUnit Plugin Test</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- org.eclipse.jdt.core</Line>
          <Line>- org.eclipse.jdt.core.tests.compiler</Line>
          <Line>- org.eclipse.jdt.core.tests.model</Line>
          <Line>2. Set the Java compiler compliance level to 1.5 for org.eclipse.jdt.core</Line>
          <Line>3. Set the Java compiler compilance level to 1.4 for the other 2 tests projects</Line>
          <Line>4. Select org.eclipse.jdt.core.tests.model.AllPerformanceTests</Line>
          <Line>5. Run As... &gt; JUnit Plugin Test</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20040831

1. Check out the HEAD version of the following projects from dev.eclipse.org:
- org.eclipse.jdt.core
- org.eclipse.jdt.core.tests.compiler
- org.eclipse.jdt.core.tests.model
2. Set the Java compiler compliance level to 1.5 for org.eclipse.jdt.core
3. Set the Java compiler compilance level to 1.4 for the other 2 tests projects
4. Select org.eclipse.jdt.core.tests.model.AllPerformanceTests
5. Run As... &gt; JUnit Plugin Test

Observe: You get the following message in the console:
Failed to invoke suite(): java.lang.NoClassDefFoundError: 
org/eclipse/jdt/core/search/ITypeNameRequestor

It should really show:
java.lang.UnsupportedClassVersionError: org/eclipse/jdt/core/JavaCore 
(Unsupported major.minor version 49.0)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:537)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.defineCla
ss(DefaultClassLoader.java:298)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass
(EclipseClassLoader.java:223)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.findClass
Impl(DefaultClassLoader.java:281)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultClassLoader.findClass
(DefaultClassLoader.java:172)
	at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass
(AbstractClassLoader.java:220)
	at 
org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass
(EclipseClassLoader.java:135)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:73)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:402)
	at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass
(BundleLoader.java:307)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass
(BundleHost.java:336)
	at 
org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator
(AbstractBundle.java:151)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:933)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker
(BundleHost.java:421)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start
(AbstractBundle.java:293)
	at org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass
(EclipseClassLoader.java:110)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass
(BundleLoader.java:371)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.requireClass
(BundleLoader.java:336)
	at 
org.eclipse.osgi.framework.internal.core.BundleLoader.findRequiredClass
(BundleLoader.java:914)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass
(BundleLoader.java:399)
	at 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass
(AbstractClassLoader.java:93)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:1647)
	at java.lang.Class.getMethod0(Class.java:1893)
	at java.lang.Class.getMethod(Class.java:976)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest
(RemoteTestRunner.java:357)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests
(RemoteTestRunner.java:398)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run
(RemoteTestRunner.java:305)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main
(RemotePluginTestRunner.java:30)
	at org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run
(CoreTestApplication.java:26)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:684)
	at org.eclipse.core.launcher.Main.main(Main.java:668)
Not a PDE issue.  Moving to Platform/Runtime.
Jerome, is the error contained in the log?

Anyway we need to come up with a better handling of the errors occuring at load
time (logging the root exception might be enough). For example I came accross a
ClassNotFoundException because a constructor was missing.
If I recall correctly (it was back in september), the error was not in the log.
I had to run in the debugger and add an exception breakpoint for
UnsupportedClassVersionError to see the whole stack.
See also bug #84196.
Covered by referenced bug.

*** This bug has been marked as a duplicate of 84196 ***</WithStack>
    <WithOutStack>I20040831

1. Check out the HEAD version of the following projects from dev.eclipse.org:
- org.eclipse.jdt.core
- org.eclipse.jdt.core.tests.compiler
- org.eclipse.jdt.core.tests.model
2. Set the Java compiler compliance level to 1.5 for org.eclipse.jdt.core
3. Set the Java compiler compilance level to 1.4 for the other 2 tests projects
4. Select org.eclipse.jdt.core.tests.model.AllPerformanceTests
5. Run As... &gt; JUnit Plugin Test

Observe: You get the following message in the console:
Failed to invoke suite(): java.lang.NoClassDefFoundError: 
org/eclipse/jdt/core/search/ITypeNameRequestor

It should really show:

Not a PDE issue.  Moving to Platform/Runtime.
Jerome, is the error contained in the log?

Anyway we need to come up with a better handling of the errors occuring at load
time (logging the root exception might be enough). For example I came accross a
ClassNotFoundException because a constructor was missing.
If I recall correctly (it was back in september), the error was not in the log.
I had to run in the debugger and add an exception breakpoint for
UnsupportedClassVersionError to see the whole stack.
See also bug #84196.
Covered by referenced bug.

*** This bug has been marked as a duplicate of 84196 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73038" />
    <CreationDate amount="2004-09-01 05:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.1.12" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add a 'New build configuration' wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Creating new build configuration files is currently not very intuitive.  I 
would like to suggest a simple 'New Build Configuration' wizard, which allows 
the user to choose a name for the file and a parent project and then opens the 
newly created file in the editor.
Added in latest build</WithStack>
    <WithOutStack>Creating new build configuration files is currently not very intuitive.  I 
would like to suggest a simple 'New Build Configuration' wizard, which allows 
the user to choose a name for the file and a parent project and then opens the 
newly created file in the editor.
Added in latest build</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73039" />
    <CreationDate amount="2004-09-01 05:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PluginDescriptor.find returns unnecessary /</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="637" end="703" />
        <code>String s = new java.io.File("c:/temp/foo.txt").toURL().toString();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="704" end="726" />
        <code>System.out.println(s);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>When PluginDescriptor.find(IPath path, Map override) is called with :
  path = $nl$/gallery/image/bullet
  override = {$nl$=ja_JP}
it returns 
  URL = file:/f:/[a_folder_name]/gallery/image/bullet/
The "file:/f:.."'s '/' is unnecessary.

2.1.3's  PluginDescriptor.find() returns the value of :
  URL = file:f:/[a_folder_name]/gallery/image/bullet/
I think this is a duplicate but I can't find the bug report. I seem to remember
a discussion about this and equality and people (PDE?) comparing the #toString()
representation via #equals().

Jeff, does this ring a bell?
The extra / is inserted by URL.toString().  Here is a simple test:

String s = new java.io.File("c:/temp/foo.txt").toURL().toString();
System.out.println(s);

This prints (using Sun 1.4.1 VM):

file:/c:/temp/foo.txt

The slash before the device has been inserted by URL.


the / does actually mean something.  If I recall, it has something to do with 
the following part being hierarchical rather than an opaque sequence of chars.  
URIs are quite heavy into this.  The URI spec likely has some information.
.</WithStack>
    <WithOutStack>When PluginDescriptor.find(IPath path, Map override) is called with :
  path = $nl$/gallery/image/bullet
  override = {$nl$=ja_JP}
it returns 
  URL = file:/f:/[a_folder_name]/gallery/image/bullet/
The "file:/f:.."'s '/' is unnecessary.

2.1.3's  PluginDescriptor.find() returns the value of :
  URL = file:f:/[a_folder_name]/gallery/image/bullet/
I think this is a duplicate but I can't find the bug report. I seem to remember
a discussion about this and equality and people (PDE?) comparing the #toString()
representation via #equals().

Jeff, does this ring a bell?
The extra / is inserted by URL.toString().  Here is a simple test:

String s = new java.io.File("c:/temp/foo.txt").toURL().toString();
System.out.println(s);

This prints (using Sun 1.4.1 VM):

file:/c:/temp/foo.txt

The slash before the device has been inserted by URL.


the / does actually mean something.  If I recall, it has something to do with 
the following part being hierarchical rather than an opaque sequence of chars.  
URIs are quite heavy into this.  The URI spec likely has some information.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73040" />
    <CreationDate amount="2004-09-01 06:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>StatCon could do with ability to restart alerts from beginning of data</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>StatCon could do with ability to restart alerts from beginning of data
fixed and changes added to cvs head (3.1I2)
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>StatCon could do with ability to restart alerts from beginning of data
fixed and changes added to cvs head (3.1I2)
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73041" />
    <CreationDate amount="2004-09-01 06:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Java Bean launcher creating 2 instances</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Get smoke_test_source.zip from http://dev.eclipse.org/viewcvs/indextools.cgi/
~checkout~/vep-home/WebContent/docs/testcases/smoketest1/smoketest1.htm
Import + open class NestedPanels
Run as Java Bean

The Java Bean launcher is creating + displaying an instance, then running main 
resulting in two instances of the bean.
This was an issue due to a rare situation where both the null constructor and
the main method create and show the Frame.  Moved code around a bit to make the
instantiating of the bean not necessary before choosing to run the main method.
Setting to 1.0M3 for ship.
Now that 1.0 is released, marking as verified.
Now that 1.0 is released, marking as closed.</WithStack>
    <WithOutStack>Get smoke_test_source.zip from http://dev.eclipse.org/viewcvs/indextools.cgi/
~checkout~/vep-home/WebContent/docs/testcases/smoketest1/smoketest1.htm
Import + open class NestedPanels
Run as Java Bean

The Java Bean launcher is creating + displaying an instance, then running main 
resulting in two instances of the bean.
This was an issue due to a rare situation where both the null constructor and
the main method create and show the Frame.  Moved code around a bit to make the
instantiating of the bean not necessary before choosing to run the main method.
Setting to 1.0M3 for ship.
Now that 1.0 is released, marking as verified.
Now that 1.0 is released, marking as closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73042" />
    <CreationDate amount="2004-09-01 06:46:00 -0400" />
    <DupId amount="72122" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Exception thrown on  parsing and modeling of Style 2 and Style 3 events</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>From http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-
home/WebContent/docs/testcases/events2/events2.htm

Import the jar file called events-examples.zip into an Eclipse project. 
Open CustomerInfoS2.java in package com.ibm.ivj.examples.vc.customerinfo 

This throws an exception...
Error Sep 01, 2004 11:34:24.533 Exception thrown.
java.lang.NullPointerException
	at org.eclipse.ve.internal.java.codegen.util.TypeResolver.resolveType
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.java.EventDecoderHelper.getInnerListener
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.java.InnerClassStyleHelper.processEvent
(Unknown Source)
	at org.eclipse.ve.internal.java.codegen.java.EventDecoderHelper.decode
(Unknown Source)
	at org.eclipse.ve.internal.java.codegen.java.AbstractEventDecoder.decode
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.model.CodeEventRef.decodeExpression
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeExpression
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.buildCompositionM
odel(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeDocument
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.loadModel
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run
(Unknown Source)
	at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)


*** This bug has been marked as a duplicate of 72122 ***
Fixed</WithStack>
    <WithOutStack>From http://dev.eclipse.org/viewcvs/indextools.cgi/%7Echeckout%7E/vep-
home/WebContent/docs/testcases/events2/events2.htm

Import the jar file called events-examples.zip into an Eclipse project. 
Open CustomerInfoS2.java in package com.ibm.ivj.examples.vc.customerinfo 

This throws an exception...
Error Sep 01, 2004 11:34:24.533 Exception thrown.
java.lang.NullPointerException
	at org.eclipse.ve.internal.java.codegen.util.TypeResolver.resolveType
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.java.EventDecoderHelper.getInnerListener
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.java.InnerClassStyleHelper.processEvent
(Unknown Source)
	at org.eclipse.ve.internal.java.codegen.java.EventDecoderHelper.decode
(Unknown Source)
	at org.eclipse.ve.internal.java.codegen.java.AbstractEventDecoder.decode
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.model.CodeEventRef.decodeExpression
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeExpression
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.buildCompositionM
odel(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeDocument
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.loadModel
(Unknown Source)
	at 
org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run
(Unknown Source)
	at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)


*** This bug has been marked as a duplicate of 72122 ***
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73043" />
    <CreationDate amount="2004-09-01 06:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Statcon needs ability for modules to register double click listeners</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Statcon needs ability for modules to register listeners for double click events 
on tree nodes - much like Dynamic Actions
fixed and changes added to CVS HEAD (3.1i2)
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Statcon needs ability for modules to register listeners for double click events 
on tree nodes - much like Dynamic Actions
fixed and changes added to CVS HEAD (3.1i2)
correcting bugzilla target milestone -- setting back to 3.1 i2
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73044" />
    <CreationDate amount="2004-09-01 06:52:00 -0400" />
    <DupId amount="69462" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Linked mode does not take javadoc tags into account [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build I20040824: When invoking the create method quick fix on a unresolved 
method name, the linked mode does not link with any created javadoc @param 
tags.
Additionally, methods having a return type genererate only @return, which is 
flagged if the preference report errors in tags is enabled. We could insert a 
linked reference to the type name as default, or just an insertion point to 
complete the tag.


*** This bug has been marked as a duplicate of 69462 ***</WithStack>
    <WithOutStack>Build I20040824: When invoking the create method quick fix on a unresolved 
method name, the linked mode does not link with any created javadoc @param 
tags.
Additionally, methods having a return type genererate only @return, which is 
flagged if the preference report errors in tags is enabled. We could insert a 
linked reference to the type name as default, or just an insertion point to 
complete the tag.


*** This bug has been marked as a duplicate of 69462 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73045" />
    <CreationDate amount="2004-09-01 07:31:00 -0400" />
    <DupId amount="48640" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Usability of startup.jar file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="13">
        <Lines>
          <Line>1. Could you please add the following string into MANIFEST.MF of startup.jar?</Line>
          <Line />
          <Line>Main-Class: org.eclipse.core.launcher.Main</Line>
          <Line />
          <Line>This will allow to launch eclipse using "java -jar startup.jar" command.</Line>
          <Line />
          <Line>2. Could you please make guesses about os, ws and arch if nothing is specified</Line>
          <Line>in command line.</Line>
          <Line>- arch may be determined using os.arch Java system property</Line>
          <Line>- os may be determined using os.name Java system property</Line>
          <Line>- ws may be win32 on windows and motif on all other systems</Line>
          <Line />
          <Line>3. Could you please rename startup.jar to eclipse.jar to give it more sense?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>1. sure</Line>
          <Line />
          <Line>2. It already works that way.  What are you trying that does not work?  The</Line>
          <Line>only thing we cannot figure out in general is the window system on Linux (could</Line>
          <Line>be GTK, could be Motif)</Line>
          <Line />
          <Line>3. Unfortunately no.  It has been startup.jar for years.  We cannot change the</Line>
          <Line>name now.</Line>
          <Line>This has already been reported before: bug 48640. As a side note, please do not</Line>
          <Line>report multiple issues in the same bug report.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- arch may be determined using os.arch Java system property</Line>
          <Line>- os may be determined using os.name Java system property</Line>
          <Line>- ws may be win32 on windows and motif on all other systems</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1. Could you please add the following string into MANIFEST.MF of startup.jar?

   Main-Class: org.eclipse.core.launcher.Main

   This will allow to launch eclipse using "java -jar startup.jar" command.

2. Could you please make guesses about os, ws and arch if nothing is specified 
in command line.
   - arch may be determined using os.arch Java system property
   - os may be determined using os.name Java system property
   - ws may be win32 on windows and motif on all other systems

3. Could you please rename startup.jar to eclipse.jar to give it more sense?

Thanks.
1. sure

2. It already works that way.  What are you trying that does not work?  The 
only thing we cannot figure out in general is the window system on Linux (could 
be GTK, could be Motif)

3. Unfortunately no.  It has been startup.jar for years.  We cannot change the 
name now.
This has already been reported before: bug 48640. As a side note, please do not
report multiple issues in the same bug report.

*** This bug has been marked as a duplicate of 48640 ***</WithStack>
    <WithOutStack>1. Could you please add the following string into MANIFEST.MF of startup.jar?

   Main-Class: org.eclipse.core.launcher.Main

   This will allow to launch eclipse using "java -jar startup.jar" command.

2. Could you please make guesses about os, ws and arch if nothing is specified 
in command line.
   - arch may be determined using os.arch Java system property
   - os may be determined using os.name Java system property
   - ws may be win32 on windows and motif on all other systems

3. Could you please rename startup.jar to eclipse.jar to give it more sense?

Thanks.
1. sure

2. It already works that way.  What are you trying that does not work?  The 
only thing we cannot figure out in general is the window system on Linux (could 
be GTK, could be Motif)

3. Unfortunately no.  It has been startup.jar for years.  We cannot change the 
name now.
This has already been reported before: bug 48640. As a side note, please do not
report multiple issues in the same bug report.

*** This bug has been marked as a duplicate of 48640 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73046" />
    <CreationDate amount="2004-09-01 08:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>UnsatisfiedLinkError jawt.dll already loaded in another classloader</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341182538">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>Not implemented (java.lang.UnsatisfiedLinkError: 
Native Library D:\Apps\IDEs\Idea4.0\jre\bin\jawt.dll already loaded in another 
classloader)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:265)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182538">
        <Exception>java.lang.UnsatisfiedLinkError</Exception>
        <Reason>Native Library D:\Apps\IDEs\Idea4.0\jre\bin\jawt
.dll already loaded in another classloader</Reason>
        <Frames>
          <Frame depth="0">java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1525)</Frame>
          <Frame depth="1">java.lang.ClassLoader.loadLibrary(ClassLoader.java:1477)</Frame>
          <Frame depth="2">java.lang.Runtime.loadLibrary0(Runtime.java:788)</Frame>
          <Frame depth="3">java.lang.System.loadLibrary(System.java:834)</Frame>
          <Frame depth="4">org.eclipse.swt.awt.SWT_AWT.loadLibrary(SWT_AWT.java:67)</Frame>
          <Frame depth="5">org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:262)</Frame>
          <Frame depth="6">com.appperfect.plugins.common.SWTContainer$1.run(SWTContainer.java:49)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="11">com.appperfect.plugins.common.DisplayThread.swtEventLoop(DisplayThread.java:72)</Frame>
          <Frame depth="12">com.appperfect.plugins.common.DisplayThread.run(DisplayThread.java:65)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182538">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2587)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:381)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Control.createHandle(Control.java:462)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Composite.createHandle(Composite.java:173)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Decorations.createHandle(Decorations.java:320)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Shell.createHandle(Shell.java:436)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Control.createWidget(Control.java:477)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Scrollable.createWidget(Scrollable.java:129)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Decorations.createWidget(Decorations.java:327)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:251)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Shell.win32_new(Shell.java:341)</Frame>
          <Frame depth="13">org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:269)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am developing plugins for various IDEs. Till now all our products were Swing 
based and all the plugins were working fine. 
We recently switched from Swing to SWT. Now I am trying to embedd our products 
(SWT components) in various IDEs( Swing components).

I am using jars and dlls of Eclipse 3.
Embedding of SWT in Swing is working fine in stand alone application. But when 
I deploy my plugin in IDE eg IntelliJ IDEA, following error is thrown

org.eclipse.swt.SWTError: Not implemented (java.lang.UnsatisfiedLinkError: 
Native Library D:\Apps\IDEs\Idea4.0\jre\bin\jawt.dll already loaded in another 
classloader)
        at org.eclipse.swt.SWT.error(SWT.java:2717)
        at org.eclipse.swt.SWT.error(SWT.java:2616)
        at org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:265)

*** Stack trace of contained error ***
java.lang.UnsatisfiedLinkError: Native Library D:\Apps\IDEs\Idea4.0\jre\bin\jawt
.dll already loaded in another classloader
        at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1525)
        at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1477)
        at java.lang.Runtime.loadLibrary0(Runtime.java:788)
        at java.lang.System.loadLibrary(System.java:834)
        at org.eclipse.swt.awt.SWT_AWT.loadLibrary(SWT_AWT.java:67)
        at org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:262)
        at com.appperfect.plugins.common.SWTContainer$1.run(SWTContainer.java:49
)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja
va:106)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
        at com.appperfect.plugins.common.DisplayThread.swtEventLoop(DisplayThrea
d.java:72)
        at com.appperfect.plugins.common.DisplayThread.run
(DisplayThread.java:65)

We are not able to proceed because of this problem. If problem is not resolved 
then we may have to switched back to Swing. :(

Problem is because SWT_AWT explicitly loads jawt.dll, this may be because 
SWT_AWT or some other class in swt.jar directly calls a native method in 
jawt.dll. If this is not so and just swt dlls have internal dependeny on 
jawt.dll then I think explicit loading of jawt is not required.

Is there any work around?
Am I missing something?

-Sudhan.
Problem is because IDEA loads jawt.dll in main class loader and my plugin gets 
loaded in a plugin class loader. So when SWT_AWT tries to load jawt.dll it 
gives error.
So I moved the swt.jar from my plugins lib folder to the IDEA's lib folder. 
This solved the UnsatisfiedLinkError problem.

Is this the correct way?

Also after this dll gets loaded but I am getting following exception 

org.eclipse.swt.SWTError: No more handles
        at org.eclipse.swt.SWT.error(SWT.java:2717)
        at org.eclipse.swt.SWT.error(SWT.java:2616)
        at org.eclipse.swt.SWT.error(SWT.java:2587)
        at org.eclipse.swt.widgets.Widget.error(Widget.java:381)
        at org.eclipse.swt.widgets.Control.createHandle(Control.java:462)
        at org.eclipse.swt.widgets.Composite.createHandle(Composite.java:173)
        at org.eclipse.swt.widgets.Decorations.createHandle(Decorations.java:320
)
        at org.eclipse.swt.widgets.Shell.createHandle(Shell.java:436)
        at org.eclipse.swt.widgets.Control.createWidget(Control.java:477)
        at org.eclipse.swt.widgets.Scrollable.createWidget(Scrollable.java:129)
        at org.eclipse.swt.widgets.Decorations.createWidget(Decorations.java:327
)
        at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:251)
        at org.eclipse.swt.widgets.Shell.win32_new(Shell.java:341)
        at org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:269)

I am getting the same exception in JBuilder and NetBeans also. I watched the 
processes in TaskManager, Handle count keeps changing for this processes even 
after I get this error. That means Windows or process has not reached limit (if 
there is any).

Thanks,
-Sudhan.
SWT should not have to load the "jawt.dll" explicitly because its lib "swt-awt-
win32-XXXX.dll" already depends on the "jawt.dll". The problem is that the 
JAWT library is (or may) not in the DLL loader path. So the loader cannot 
resolve the dependences when loading "swt-awt-win32-XXXX.dll". To solve this 
problem SWT explicitily loaded "jawt" using System.loadLibrary() (which 
somehow can find it always).

I am going to catch exceptions when loading the jawt library. This should 
workaround the problem when SWT_AWT is loaded after the other plugin and it 
should not cause any side effects. But the problem may still happen, if the 
other the plugin is loaded after SWT_AWT and it does not take care of this 
case.

Fixed to HEAD (3.1) &gt; 20040901.</WithStack>
    <WithOutStack>I am developing plugins for various IDEs. Till now all our products were Swing 
based and all the plugins were working fine. 
We recently switched from Swing to SWT. Now I am trying to embedd our products 
(SWT components) in various IDEs( Swing components).

I am using jars and dlls of Eclipse 3.
Embedding of SWT in Swing is working fine in stand alone application. But when 
I deploy my plugin in IDE eg IntelliJ IDEA, following error is thrown


*** Stack trace of contained error ***

We are not able to proceed because of this problem. If problem is not resolved 
then we may have to switched back to Swing. :(

Problem is because SWT_AWT explicitly loads jawt.dll, this may be because 
SWT_AWT or some other class in swt.jar directly calls a native method in 
jawt.dll. If this is not so and just swt dlls have internal dependeny on 
jawt.dll then I think explicit loading of jawt is not required.

Is there any work around?
Am I missing something?

-Sudhan.
Problem is because IDEA loads jawt.dll in main class loader and my plugin gets 
loaded in a plugin class loader. So when SWT_AWT tries to load jawt.dll it 
gives error.
So I moved the swt.jar from my plugins lib folder to the IDEA's lib folder. 
This solved the UnsatisfiedLinkError problem.

Is this the correct way?

Also after this dll gets loaded but I am getting following exception 



I am getting the same exception in JBuilder and NetBeans also. I watched the 
processes in TaskManager, Handle count keeps changing for this processes even 
after I get this error. That means Windows or process has not reached limit (if 
there is any).

Thanks,
-Sudhan.
SWT should not have to load the "jawt.dll" explicitly because its lib "swt-awt-
win32-XXXX.dll" already depends on the "jawt.dll". The problem is that the 
JAWT library is (or may) not in the DLL loader path. So the loader cannot 
resolve the dependences when loading "swt-awt-win32-XXXX.dll". To solve this 
problem SWT explicitily loaded "jawt" using System.loadLibrary() (which 
somehow can find it always).

I am going to catch exceptions when loading the jawt library. This should 
workaround the problem when SWT_AWT is loaded after the other plugin and it 
should not cause any side effects. But the problem may still happen, if the 
other the plugin is loaded after SWT_AWT and it does not take care of this 
case.

Fixed to HEAD (3.1) &gt; 20040901.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73047" />
    <CreationDate amount="2004-09-01 08:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DnD] click-drag on view menu starts dragging view instead of opening menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20040831-1100

Click on a view menu (the black triangle in the view toolbar) and don't release
the mouse. Dragging the mouse starts dragging the view instead of opening the
view menu and highlighting the menu entry under the cursor.

This is maybe connected to bug 47065 and bug 61307, but it's not a dup.

It's strange that dragging the view menu "button" initiates a view drag
operation, but dragging any other view toolbar button behaves as it should.
Fixed in head
Verified in I20050527-1300</WithStack>
    <WithOutStack>I20040831-1100

Click on a view menu (the black triangle in the view toolbar) and don't release
the mouse. Dragging the mouse starts dragging the view instead of opening the
view menu and highlighting the menu entry under the cursor.

This is maybe connected to bug 47065 and bug 61307, but it's not a dup.

It's strange that dragging the view menu "button" initiates a view drag
operation, but dragging any other view toolbar button behaves as it should.
Fixed in head
Verified in I20050527-1300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73048" />
    <CreationDate amount="2004-09-01 08:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Stackoverflow on AST creation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182542">
        <Exception>java.lang.StackOverflowError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">java.lang.StackOverflowError.&lt;init&gt;(StackOverflowError.java:48)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20040831 jdt.core HEAD

From a 1.5 JRE, open 'AbstractCollection', enable 'highlight occerrences' and
select the type name

An internal error occurred during: "Java AST creation".
java.lang.StackOverflowError
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.StackOverflowError.&lt;init&gt;(StackOverflowError.java:48)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)

.....
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.VariableBinding.getKey(VariableBinding.java:148)
	at
org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(DefaultBindingResolver.java:569)
	at
org.eclipse.jdt.core.dom.VariableDeclaration.resolveBinding(VariableDeclaration.java:134)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:827)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:565)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:682)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
	at
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:441)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:393)
	at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java)
	at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:141)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
*** Bug 73349 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression test added.
*** Bug 73578 has been marked as a duplicate of this bug. ***
Verified in I200409230100.</WithStack>
    <WithOutStack>20040831 jdt.core HEAD

From a 1.5 JRE, open 'AbstractCollection', enable 'highlight occerrences' and
select the type name

An internal error occurred during: "Java AST creation".


.....
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.TypeBinding.getKey(TypeBinding.java)
	at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java)
	at org.eclipse.jdt.core.dom.VariableBinding.getKey(VariableBinding.java:148)
	at
org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveVariable(DefaultBindingResolver.java:569)
	at
org.eclipse.jdt.core.dom.VariableDeclaration.resolveBinding(VariableDeclaration.java:134)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:827)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:565)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:682)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
	at
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:441)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:393)
	at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java)
	at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:141)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
*** Bug 73349 has been marked as a duplicate of this bug. ***
Fixed and released in HEAD.
Regression test added.
*** Bug 73578 has been marked as a duplicate of this bug. ***
Verified in I200409230100.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73049" />
    <CreationDate amount="2004-09-01 08:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TabForm.setBackground(...) not working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1013" end="1582" />
        <code>public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	shell.setLayout(new FillLayout());
	final CTabFolder folder = new CTabFolder(shell, SWT.BORDER);
	for (int i = 0; i &lt; 10; i++) {
		CTabItem item = new CTabItem(folder, SWT.CLOSE);
		item.setText("Item "+i);
		Text t = new Text(folder, SWT.MULTI);
		item.setControl(t);
	}
	folder.setBackground(display.getSystemColor(SWT.COLOR_RED));
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>While attempting to use the swt package, I noticed that the 
TabForm.setBackground() does not work.  I then tried to use the 
CTabForm.setBackground(...) which does work, however when I added a CTabItem, I 
could not set the background.

Can the TabForm.setBackground(...) be fixed?
Move to Platform/SWT
Do you mean TabFolder and CTabFolder?
TabFolder.setBackground(...) does not work.
This is a Windows platform limitation.  You cannot change the background color 
of a TabFolder.  VI to check that setting the background color of a CTabFolder 
works.
As Steve said above, TabFolder on some platforms does not support setting the 
background colour.  This is an OS limitation.

Setting the background on CTabFolder works with and without a CTabItem.  Note 
that the control that is placed inside the CTabFolder (Text in the example 
below) has its own background colour and therefore the background colour will 
only appear on the unselected tabs and in the area without tabs.

The following code works for me:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	shell.setLayout(new FillLayout());
	final CTabFolder folder = new CTabFolder(shell, SWT.BORDER);
	for (int i = 0; i &lt; 10; i++) {
		CTabItem item = new CTabItem(folder, SWT.CLOSE);
		item.setText("Item "+i);
		Text t = new Text(folder, SWT.MULTI);
		item.setControl(t);
	}
	folder.setBackground(display.getSystemColor(SWT.COLOR_RED));
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}</WithStack>
    <WithOutStack>While attempting to use the swt package, I noticed that the 
TabForm.setBackground() does not work.  I then tried to use the 
CTabForm.setBackground(...) which does work, however when I added a CTabItem, I 
could not set the background.

Can the TabForm.setBackground(...) be fixed?
Move to Platform/SWT
Do you mean TabFolder and CTabFolder?
TabFolder.setBackground(...) does not work.
This is a Windows platform limitation.  You cannot change the background color 
of a TabFolder.  VI to check that setting the background color of a CTabFolder 
works.
As Steve said above, TabFolder on some platforms does not support setting the 
background colour.  This is an OS limitation.

Setting the background on CTabFolder works with and without a CTabItem.  Note 
that the control that is placed inside the CTabFolder (Text in the example 
below) has its own background colour and therefore the background colour will 
only appear on the unselected tabs and in the area without tabs.

The following code works for me:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	shell.setLayout(new FillLayout());
	final CTabFolder folder = new CTabFolder(shell, SWT.BORDER);
	for (int i = 0; i &lt; 10; i++) {
		CTabItem item = new CTabItem(folder, SWT.CLOSE);
		item.setText("Item "+i);
		Text t = new Text(folder, SWT.MULTI);
		item.setControl(t);
	}
	folder.setBackground(display.getSystemColor(SWT.COLOR_RED));
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73050" />
    <CreationDate amount="2004-09-01 08:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="DEVELOPMENT" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Type patterns with numbers incorrectly match anonymous and local classes.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="class">
        <location start="531" end="969" />
        <code>public class MatchingAnonymous {
    static class Foo {
	void foo() {
	    System.out.println("Foo.foo:");
	}
    }

    static Foo x = new Foo()
	{
	    void foo() {
		System.out.println("Anonymous.foo:");
	    }
	};
    
    static void m() {
	class Local {
	    void foo() {
		System.out.println("Local.foo:");
	    }
	}

	new Local().foo();
    }

    public static void main(String[] args) {
	new Foo().foo();
	x.foo();
	m();
    }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1022" end="1111" />
        <code>after(): execution(void MatchingAnonymous.*.foo()) {
	System.out.println(".*");
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1112" end="1203" />
        <code>after(): execution(void MatchingAnonymous..*.foo()) {
	System.out.println("..*");
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1204" end="1295" />
        <code>after(): execution(void MatchingAnonymous.*1.foo()) {
	System.out.println(".*1");
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1296" end="1389" />
        <code>after(): execution(void MatchingAnonymous.*1*.foo()) {
	System.out.println(".*1*");
    }</code>
      </source_code>
      <source_code type="assignment">
        <location start="1614" end="1641" />
        <code>Object o = new Object() {};</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Similarly to javac, ajc compiles anonymous and local classes into classes with 
scrambled names. Type patterns in pointcuts will treat these classes as member 
classes with a name identical to their scrambled name. Thus, such a class will 
be matched by a pattern if it happens to have a scrambled name that textually 
matches the pattern. Since scrambled names are made up by the compiler and may 
change if more anonymous or local classes are added, this leads to nonintuitive 
and inconsistent behaviour.

Consider this class:

public class MatchingAnonymous {
    static class Foo {
	void foo() {
	    System.out.println("Foo.foo:");
	}
    }

    static Foo x = new Foo()
	{
	    void foo() {
		System.out.println("Anonymous.foo:");
	    }
	};
    
    static void m() {
	class Local {
	    void foo() {
		System.out.println("Local.foo:");
	    }
	}

	new Local().foo();
    }

    public static void main(String[] args) {
	new Foo().foo();
	x.foo();
	m();
    }
}

woven with this aspect:

public aspect MA_Aspect {
    after(): execution(void MatchingAnonymous.*.foo()) {
	System.out.println(".*");
    }
    after(): execution(void MatchingAnonymous..*.foo()) {
	System.out.println("..*");
    }
    after(): execution(void MatchingAnonymous.*1.foo()) {
	System.out.println(".*1");
    }
    after(): execution(void MatchingAnonymous.*1*.foo()) {
	System.out.println(".*1*");
    }
}

Running the program will produce this output:

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
.*1
.*1*
Local.foo:
..*

from which it is evident that ajc considers the anonymous class to be a member 
class named "1".

If the line

Object o = new Object() {};

is added at the beginning of the class body of MatchingAnonymous, the output 
changes to

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
Local.foo:
..*

The pattern no longer matches, since the class now happens to be named "2", 
rather than "1".

Furthermore, different naming schemes from different compilers show themselves 
in the matching. If the above class is compiled using javac, and then woven 
with the aspect, the output becomes:

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
.*1
.*1*
Local.foo:
.*
..*
.*1*

The local class is now called MatchingAnonymous$1Local (javac naming 
convention) rather than MatchingAnonymous$1$Local (ajc naming convention). 
Thus, ajc now considers it to be a direct member class of MatchingAnonymous, 
called "1Local", where it was otherwise considered a member class of a member 
class called "1", called "Local".

To sum up, there should be a consistent way of matching anonymous and local 
classes that does not depend on the naming conventions of the compiler.
The ideal scenario would be that anonymous classes are never matched by type 
patterns in pointcuts, other than the pattern "*". (They're anonymous, you are 
not supposed to be able to refer to them by name - which is what any pattern 
other than "*" attempts to do). Unfortunately, since the naming choice for 
anonymous classes was left open to implementors (as you point out) there is no 
way to tell the difference between an anonymous class called "1" and a named 
class called "1" (bear in mind that AspectJ gives consistent semantics for both 
source and binary weaving, and binary input could come from any Java compiler).

In addition to not being able to distinguish by name, there is also no 
indication in the class file (for example, a constant pool attribute) that I can 
see to indicate that a class is anonymous. Therefore it is not possible to 
implement the ideal scenario at present. So, that leaves us with the not 
unreasonable statement that you should not rely on type pattern matching against 
anonymous classes (and probably don't want to write patterns such as Outer.*1 
unless you really mean it - ie. you have named classes you need to match). I 
suspect this restriction is perfectly acceptable for many, many programs. Did 
you arrive at this bug as a result of a real program behaving strangely, or as a 
result of reasoning about the behaviour of type patterns with anonymous classes.

Java 5 introduces a new class attribute in the class file, "EnclosingMethod", 
which is present if and only if the class is a local or anonymous class. So in 
Java 5 compatible mode, we may be able to implement the "ideal case" I 
described.

I am changing this to an enhancement request to consider this as part of our 
Java 5 support work in AspectJ.
We _should_ have enough information about an anonymous class 
from the enclosing class's InnerClasses attribute (JVM 4.7.5)

 http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#79996

in particular:

  inner_name_index
    If C is anonymous, the value of the inner_name_index item must be zero.  

I know I've previously used this fact, so I'm pretty sure it's generally
properly implemented in popular compilers.

Also (and I'd have to verify that this is correctly generated by the popular
compilers), local classes should be findable by this:

  outer_class_info_index
    If C is not a member, the value of the outer_class_info_index item must be
zero. 

I'm pretty sure I used these two bits of information (mainly the second) in ajc
1.0 to build a containment tree, and only allowed by-name matching of nested
types where every enclosing type was either package level or had a non-zero
outer_class_info_index (you can get into trouble because anononymous/local
classes can have member types.  Weird.).

Anyway, I believe this is implementable for anybody that generates correct
InnerClassAttribute information, which should be something like language level 1.3. 
there was a lot of interest in inner and anonymous class matching at AOSD 2005.
We should look at this in the M3 timeframe.
pushing to M4 ... gotta get M3 with generics out.
I've moved to P2 temporarily just to make sure I take a look at this again before RC1
I've just commited the fix for this and it will be available in the next published build. Anonymous types are 
now only matched by the name pattern "*" - any other pattern fails to match since anonymous types are 
treated as having no name.</WithStack>
    <WithOutStack>Similarly to javac, ajc compiles anonymous and local classes into classes with 
scrambled names. Type patterns in pointcuts will treat these classes as member 
classes with a name identical to their scrambled name. Thus, such a class will 
be matched by a pattern if it happens to have a scrambled name that textually 
matches the pattern. Since scrambled names are made up by the compiler and may 
change if more anonymous or local classes are added, this leads to nonintuitive 
and inconsistent behaviour.

Consider this class:

public class MatchingAnonymous {
    static class Foo {
	void foo() {
	    System.out.println("Foo.foo:");
	}
    }

    static Foo x = new Foo()
	{
	    void foo() {
		System.out.println("Anonymous.foo:");
	    }
	};
    
    static void m() {
	class Local {
	    void foo() {
		System.out.println("Local.foo:");
	    }
	}

	new Local().foo();
    }

    public static void main(String[] args) {
	new Foo().foo();
	x.foo();
	m();
    }
}

woven with this aspect:

public aspect MA_Aspect {
    after(): execution(void MatchingAnonymous.*.foo()) {
	System.out.println(".*");
    }
    after(): execution(void MatchingAnonymous..*.foo()) {
	System.out.println("..*");
    }
    after(): execution(void MatchingAnonymous.*1.foo()) {
	System.out.println(".*1");
    }
    after(): execution(void MatchingAnonymous.*1*.foo()) {
	System.out.println(".*1*");
    }
}

Running the program will produce this output:

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
.*1
.*1*
Local.foo:
..*

from which it is evident that ajc considers the anonymous class to be a member 
class named "1".

If the line

Object o = new Object() {};

is added at the beginning of the class body of MatchingAnonymous, the output 
changes to

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
Local.foo:
..*

The pattern no longer matches, since the class now happens to be named "2", 
rather than "1".

Furthermore, different naming schemes from different compilers show themselves 
in the matching. If the above class is compiled using javac, and then woven 
with the aspect, the output becomes:

Foo.foo:
.*
..*
Anonymous.foo:
.*
..*
.*1
.*1*
Local.foo:
.*
..*
.*1*

The local class is now called MatchingAnonymous$1Local (javac naming 
convention) rather than MatchingAnonymous$1$Local (ajc naming convention). 
Thus, ajc now considers it to be a direct member class of MatchingAnonymous, 
called "1Local", where it was otherwise considered a member class of a member 
class called "1", called "Local".

To sum up, there should be a consistent way of matching anonymous and local 
classes that does not depend on the naming conventions of the compiler.
The ideal scenario would be that anonymous classes are never matched by type 
patterns in pointcuts, other than the pattern "*". (They're anonymous, you are 
not supposed to be able to refer to them by name - which is what any pattern 
other than "*" attempts to do). Unfortunately, since the naming choice for 
anonymous classes was left open to implementors (as you point out) there is no 
way to tell the difference between an anonymous class called "1" and a named 
class called "1" (bear in mind that AspectJ gives consistent semantics for both 
source and binary weaving, and binary input could come from any Java compiler).

In addition to not being able to distinguish by name, there is also no 
indication in the class file (for example, a constant pool attribute) that I can 
see to indicate that a class is anonymous. Therefore it is not possible to 
implement the ideal scenario at present. So, that leaves us with the not 
unreasonable statement that you should not rely on type pattern matching against 
anonymous classes (and probably don't want to write patterns such as Outer.*1 
unless you really mean it - ie. you have named classes you need to match). I 
suspect this restriction is perfectly acceptable for many, many programs. Did 
you arrive at this bug as a result of a real program behaving strangely, or as a 
result of reasoning about the behaviour of type patterns with anonymous classes.

Java 5 introduces a new class attribute in the class file, "EnclosingMethod", 
which is present if and only if the class is a local or anonymous class. So in 
Java 5 compatible mode, we may be able to implement the "ideal case" I 
described.

I am changing this to an enhancement request to consider this as part of our 
Java 5 support work in AspectJ.
We _should_ have enough information about an anonymous class 
from the enclosing class's InnerClasses attribute (JVM 4.7.5)

 http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#79996

in particular:

  inner_name_index
    If C is anonymous, the value of the inner_name_index item must be zero.  

I know I've previously used this fact, so I'm pretty sure it's generally
properly implemented in popular compilers.

Also (and I'd have to verify that this is correctly generated by the popular
compilers), local classes should be findable by this:

  outer_class_info_index
    If C is not a member, the value of the outer_class_info_index item must be
zero. 

I'm pretty sure I used these two bits of information (mainly the second) in ajc
1.0 to build a containment tree, and only allowed by-name matching of nested
types where every enclosing type was either package level or had a non-zero
outer_class_info_index (you can get into trouble because anononymous/local
classes can have member types.  Weird.).

Anyway, I believe this is implementable for anybody that generates correct
InnerClassAttribute information, which should be something like language level 1.3. 
there was a lot of interest in inner and anonymous class matching at AOSD 2005.
We should look at this in the M3 timeframe.
pushing to M4 ... gotta get M3 with generics out.
I've moved to P2 temporarily just to make sure I take a look at this again before RC1
I've just commited the fix for this and it will be available in the next published build. Anonymous types are 
now only matched by the name pattern "*" - any other pattern fails to match since anonymous types are 
treated as having no name.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73051" />
    <CreationDate amount="2004-09-01 09:45:00 -0400" />
    <DupId amount="72813" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Accessibility in CCombo</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>CCombo widget is comprised of two parts - Text and List widgets. It is 
impossible to add an accessibility listener to the text part of CCombo. The 
CCombo.getAccessible().addAccessibleListsner() method seems to operate on the 
List portion of the CCombo. This results in sporadic behavior when it comes to 
reading the screen controls accessible names (by screen reader). The 
availablity of accessible name for ccombo seems to be function of *where* the 
mouse is located when hovering over CCOmbo.
One additional note:
It would be much better if the Text portion was made StyledText instead, and be 
*available* to programmer directly via CCombo's API.
The List portion should be able to work with ContentProviders and 
LabelProviders, and be able to display icons, as well as text.


*** This bug has been marked as a duplicate of 72813 ***</WithStack>
    <WithOutStack>CCombo widget is comprised of two parts - Text and List widgets. It is 
impossible to add an accessibility listener to the text part of CCombo. The 
CCombo.getAccessible().addAccessibleListsner() method seems to operate on the 
List portion of the CCombo. This results in sporadic behavior when it comes to 
reading the screen controls accessible names (by screen reader). The 
availablity of accessible name for ccombo seems to be function of *where* the 
mouse is located when hovering over CCOmbo.
One additional note:
It would be much better if the Text portion was made StyledText instead, and be 
*available* to programmer directly via CCombo's API.
The List portion should be able to work with ContentProviders and 
LabelProviders, and be able to display icons, as well as text.


*** This bug has been marked as a duplicate of 72813 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73052" />
    <CreationDate amount="2004-09-01 09:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception while calling Clipboard object</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341182548">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>Cannot set data in clipboard</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.dnd.DND.error(DND.java:225)</Frame>
          <Frame depth="1">org.eclipse.swt.dnd.DND.error(DND.java:181)</Frame>
          <Frame depth="2">org.eclipse.swt.dnd.Clipboard.setContents(Clipboard.java:290)</Frame>
          <Frame depth="3">de.powerisdnmonitor.ui.swt.controls.CallerEditorControl$6.run(CallerEditorControl.java:200)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="8">de.powerisdnmonitor.ui.swt.AbstractBaseComponent.show(AbstractBaseComponent.java:118)</Frame>
          <Frame depth="9">de.powerisdnmonitor.ui.swt.AbstractCommandApplicationComponent.execute(AbstractCommandApplicationComponent.java:17)</Frame>
          <Frame depth="10">de.powerisdnmonitor.service.trayicon.TrayIcon$ActionHandler$HandlerThread.run(TrayIcon.java:104)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="4">
      <source_code type="assignment">
        <location start="168" end="219" />
        <code>Clipboard cb = new Clipboard(Display.getCurrent());</code>
      </source_code>
      <source_code type="assignment">
        <location start="220" end="254" />
        <code>String textData = "Hello World !";</code>
      </source_code>
      <source_code type="assignment">
        <location start="255" end="310" />
        <code>TextTransfer textTransfer = TextTransfer.getInstance();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="382" end="395" />
        <code>cb.dispose();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If the Clipboard object is called in several thread, not in parallel, for more 
than one time, the follwing exception will rise:

org.eclipse.swt.SWTError: Cannot set data in clipboard
                 at org.eclipse.swt.dnd.DND.error(DND.java:225)
                 at org.eclipse.swt.dnd.DND.error(DND.java:181)
                 at 
org.eclipse.swt.dnd.Clipboard.setContents(Clipboard.java:290)
                 at
de.powerisdnmonitor.ui.swt.controls.CallerEditorControl$6.run(CallerEditorCo
ntrol.java:200)
                 at 
org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
                 at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
                 at 
org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
                 at 
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
                 at
de.powerisdnmonitor.ui.swt.AbstractBaseComponent.show(AbstractBaseComponent.
java:118)
                 at
de.powerisdnmonitor.ui.swt.AbstractCommandApplicationComponent.execute(Abstr
actCommandApplicationComponent.java:17)
                 at
de.powerisdnmonitor.service.trayicon.TrayIcon$ActionHandler$HandlerThread.ru
n(TrayIcon.java:104)

The code which caused the problem:

Clipboard cb = new Clipboard(Display.getCurrent());
String textData = "Hello World !";
TextTransfer textTransfer = TextTransfer.getInstance();
cb.setContents(new Object[]{textData}, new 
Transfer[]{textTransfer});
cb.dispose();

The exception will occur if the code is run multiple times.
Fixed for 3.1 in HEAD &gt; Oct 6, 2004</WithStack>
    <WithOutStack>If the Clipboard object is called in several thread, not in parallel, for more 
than one time, the follwing exception will rise:



The code which caused the problem:

Clipboard cb = new Clipboard(Display.getCurrent());
String textData = "Hello World !";
TextTransfer textTransfer = TextTransfer.getInstance();
cb.setContents(new Object[]{textData}, new 
Transfer[]{textTransfer});
cb.dispose();

The exception will occur if the code is run multiple times.
Fixed for 3.1 in HEAD &gt; Oct 6, 2004</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73053" />
    <CreationDate amount="2004-09-01 09:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[misc] Status editor always empty</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Open a text file</Line>
          <Line>2. Edit &gt; Encoding &gt; Others...</Line>
          <Line>3. Enter "bogus"</Line>
          <Line>4. Press Enter</Line>
          <Line>==&gt; editor switches to empty status editor</Line>
          <Line>Tracked the bug down: the status is correctly set. The problem is not restricted</Line>
          <Line>to encoding but to all cases where status needs to be shown in the status editor</Line>
          <Line>i.e. in 3.0 we will always see the white empty status editor (see attached</Line>
          <Line>picture). Adapted summary.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>R3.0 and I200408241200

This is a regression from 2.1.x.

Test Case:
1. Open a text file
2. Edit &gt; Encoding &gt; Others...
3. Enter "bogus"
4. Press Enter
==&gt; editor switches to empty status editor
Tracked the bug down: the status is correctly set. The problem is not restricted
to encoding but to all cases where status needs to be shown in the status editor
i.e. in 3.0 we will always see the white empty status editor (see attached
picture). Adapted summary.

A bug in our InfoForm was tolerated by 2.1.x SWT code and layout was done as
expected. This is no longer the case in 3.0.
Created attachment 14389
Empty status editor
Created attachment 14390
Patch for InfoForm

The attached patch sets the layout data when creating labels.
I suggest to apply it to 3.0.1: the fix is low risk but has a high value.

Fixed in HEAD.
this one is also critical for 3.0.1 - please go ahead and release it into 3.0.1
Fixed in R3_0_maintenance branch.
Released into I200409080800.

We forgot to release the change into the map file. Will be in next M-build.
M-M20040908-200409081421
*** Bug 83895 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>R3.0 and I200408241200

This is a regression from 2.1.x.

Test Case:
1. Open a text file
2. Edit &gt; Encoding &gt; Others...
3. Enter "bogus"
4. Press Enter
==&gt; editor switches to empty status editor
Tracked the bug down: the status is correctly set. The problem is not restricted
to encoding but to all cases where status needs to be shown in the status editor
i.e. in 3.0 we will always see the white empty status editor (see attached
picture). Adapted summary.

A bug in our InfoForm was tolerated by 2.1.x SWT code and layout was done as
expected. This is no longer the case in 3.0.
Created attachment 14389
Empty status editor
Created attachment 14390
Patch for InfoForm

The attached patch sets the layout data when creating labels.
I suggest to apply it to 3.0.1: the fix is low risk but has a high value.

Fixed in HEAD.
this one is also critical for 3.0.1 - please go ahead and release it into 3.0.1
Fixed in R3_0_maintenance branch.
Released into I200409080800.

We forgot to release the change into the map file. Will be in next M-build.
M-M20040908-200409081421
*** Bug 83895 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73054" />
    <CreationDate amount="2004-09-01 10:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[import rewrite] Make Import Rewriter API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With OrganizeImportsAction, it is easy to complete the not-so-easy task of 
organizing compilation unit imports. However this demands that an 
IWorkbenchSite be known to the action. When performing refactoring (e.g. an 
inner class removal) by own means, it is strongly desirable to be able to 
employ the native Eclipse capabilities of the imports section organization but 
in this case any UI response of the imports organization action is imperatively 
prohibited. 
    It would be great if one could employ the OrganizeImportsAction 
capabilities without supplying it with an IWorkbenchSite instance. Instead, it 
could respond with some status value signifying the action result, or even just 
bail out on the first error encountered. Thanks.
There are plans for 3.1 to make the infrastructure to do proper import 
rewriting API. Up to then you can use the internal class ImportRewriter.
Unfortunatly no new API for 3.1.
on the plan for 3.2
Created attachment 30617
proposed submission into jdt.core

New API class org.eclipse.jdt.core.dom.rewrite.ImportRewrite.
Created attachment 30717
updated patch
Created attachment 32511
patch to release
released &gt; 20060105

-&gt; New API org.eclipse.jdt.core.dom.ImportRewrite</WithStack>
    <WithOutStack>With OrganizeImportsAction, it is easy to complete the not-so-easy task of 
organizing compilation unit imports. However this demands that an 
IWorkbenchSite be known to the action. When performing refactoring (e.g. an 
inner class removal) by own means, it is strongly desirable to be able to 
employ the native Eclipse capabilities of the imports section organization but 
in this case any UI response of the imports organization action is imperatively 
prohibited. 
    It would be great if one could employ the OrganizeImportsAction 
capabilities without supplying it with an IWorkbenchSite instance. Instead, it 
could respond with some status value signifying the action result, or even just 
bail out on the first error encountered. Thanks.
There are plans for 3.1 to make the infrastructure to do proper import 
rewriting API. Up to then you can use the internal class ImportRewriter.
Unfortunatly no new API for 3.1.
on the plan for 3.2
Created attachment 30617
proposed submission into jdt.core

New API class org.eclipse.jdt.core.dom.rewrite.ImportRewrite.
Created attachment 30717
updated patch
Created attachment 32511
patch to release
released &gt; 20060105

-&gt; New API org.eclipse.jdt.core.dom.ImportRewrite</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73055" />
    <CreationDate amount="2004-09-01 10:14:00 -0400" />
    <DupId amount="68712" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Errors when exporting feature or building site with binary plugin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Create a java project with a single package and class.  Export this project</Line>
          <Line>as a jar file.</Line>
          <Line />
          <Line>2. Create new plugin project with OSGi manifest and with src/bin folders.</Line>
          <Line>Don't create any default classes.  This will be Plugin #1.</Line>
          <Line />
          <Line>3. Create another plugin project with OSGi manifest and with src/bin folders.</Line>
          <Line>Allow for creation of life-cycle classes (but don't need UI classes).  This</Line>
          <Line>will be Plugin #2.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>3. Import the Java project jar file into the Plugin #1 project.  Open manifest</Line>
          <Line>editor and in Runtime tab, add the jar file.  Right-click on Dependencies tab</Line>
          <Line>and select Compute Build Path to add the jar to the plugin classpath.  Click on</Line>
          <Line>MANIFEST.MF tab and add the following line to the manifest:</Line>
          <Line>Provide-Package: &lt;Java project package&gt;</Line>
          <Line>Save the manifest.</Line>
          <Line />
          <Line>4. In Plugin #2 project, open the manifest and in the Dependencies tab, add the</Line>
          <Line>Plugin #1.  Right-click and click Compute Build Path to update the classpath.</Line>
          <Line>Edit the generated source to make use of the package/class from the Java</Line>
          <Line>project.  Save the manifest.</Line>
          <Line />
          <Line>5. Create a feature project that includes both Plugin #1 and Plugin #2.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>During an export of my feature or building my site (including a single 
feature), errors are being logged to logs.zip (compilation errors) when one of 
my included plugins includes a prebuilt jar file.

Steps to reproduce:

1. Create a java project with a single package and class.  Export this project 
as a jar file.

2. Create new plugin project with OSGi manifest and with src/bin folders.  
Don't create any default classes.  This will be Plugin #1.

3. Create another plugin project with OSGi manifest and with src/bin folders.  
Allow for creation of life-cycle classes (but don't need UI classes).  This 
will be Plugin #2.

3. Import the Java project jar file into the Plugin #1 project.  Open manifest 
editor and in Runtime tab, add the jar file.  Right-click on Dependencies tab 
and select Compute Build Path to add the jar to the plugin classpath.  Click on 
MANIFEST.MF tab and add the following line to the manifest:
     Provide-Package: &lt;Java project package&gt;
Save the manifest.

4. In Plugin #2 project, open the manifest and in the Dependencies tab, add the 
Plugin #1.  Right-click and click Compute Build Path to update the classpath.  
Edit the generated source to make use of the package/class from the Java 
project.  Save the manifest.

5. Create a feature project that includes both Plugin #1 and Plugin #2.  

ERROR: Try to export the Feature project.  Export will fail and errors will be 
logged.  Error will be that the package/class from the jar file in Plugin #1 
could not be resolved.


Interestingly, you can right click on the feature.xml and select Generate Ant 
Build File, creating a build.xml in the feature and plugin projects.  Then you 
can run Ant Build on the feature build.xml file and it works fine.  

The same error occurs if you try to create a site project and include the 
single feature.  The feature build fails and the same error is logged.

See the attached zip containing the my test case projects:
   library = Java project
   libraryplugin = Plugin #1 project
   testplugin = Plugin #2 project
   testfeature = feature project
   testsite = site project
Created attachment 14323
Example test case projects
Could you please try with today's 3.0.1 build and let me know if it still fails.
I believe this is a duplicate of bug #68712.


This seems to work with the latest Eclipse 3.0.1 build.  I think this is just a 
dup of the bug you mentioned.

Going ahead and duping this against bug #68712.

Thanks.

*** This bug has been marked as a duplicate of 68712 ***
Verified this works in 3.0.1 RC1 build.</WithStack>
    <WithOutStack>During an export of my feature or building my site (including a single 
feature), errors are being logged to logs.zip (compilation errors) when one of 
my included plugins includes a prebuilt jar file.

Steps to reproduce:

1. Create a java project with a single package and class.  Export this project 
as a jar file.

2. Create new plugin project with OSGi manifest and with src/bin folders.  
Don't create any default classes.  This will be Plugin #1.

3. Create another plugin project with OSGi manifest and with src/bin folders.  
Allow for creation of life-cycle classes (but don't need UI classes).  This 
will be Plugin #2.

3. Import the Java project jar file into the Plugin #1 project.  Open manifest 
editor and in Runtime tab, add the jar file.  Right-click on Dependencies tab 
and select Compute Build Path to add the jar to the plugin classpath.  Click on 
MANIFEST.MF tab and add the following line to the manifest:
     Provide-Package: &lt;Java project package&gt;
Save the manifest.

4. In Plugin #2 project, open the manifest and in the Dependencies tab, add the 
Plugin #1.  Right-click and click Compute Build Path to update the classpath.  
Edit the generated source to make use of the package/class from the Java 
project.  Save the manifest.

5. Create a feature project that includes both Plugin #1 and Plugin #2.  

ERROR: Try to export the Feature project.  Export will fail and errors will be 
logged.  Error will be that the package/class from the jar file in Plugin #1 
could not be resolved.


Interestingly, you can right click on the feature.xml and select Generate Ant 
Build File, creating a build.xml in the feature and plugin projects.  Then you 
can run Ant Build on the feature build.xml file and it works fine.  

The same error occurs if you try to create a site project and include the 
single feature.  The feature build fails and the same error is logged.

See the attached zip containing the my test case projects:
   library = Java project
   libraryplugin = Plugin #1 project
   testplugin = Plugin #2 project
   testfeature = feature project
   testsite = site project
Created attachment 14323
Example test case projects
Could you please try with today's 3.0.1 build and let me know if it still fails.
I believe this is a duplicate of bug #68712.


This seems to work with the latest Eclipse 3.0.1 build.  I think this is just a 
dup of the bug you mentioned.

Going ahead and duping this against bug #68712.

Thanks.

*** This bug has been marked as a duplicate of 68712 ***
Verified this works in 3.0.1 RC1 build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73056" />
    <CreationDate amount="2004-09-01 10:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse does not determine os property if it is not specified</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="singlecomment">
        <location start="517" end="583" />
        <code>// if the user didn't set the operating system with a command</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="589" end="625" />
        <code>// argument then use the default.</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="677" end="1145" />
        <code>if (os == null) {
			String name = System.getProperty("os.name");//$NON-NLS-1
$
			// check to see if the VM returned "Windows 98" or some 
other
			// flavour which should be converted to win32.
			if (name.regionMatches(true, 0, Constants.OS_WIN32, 0, 
3))
				os = Constants.OS_WIN32;
			// EXCEPTION: All mappings of SunOS convert to Solaris
			if (os == null)
				os = name.equalsIgnoreCase(INTERNAL_OS_SUNOS) ? 
Constants.OS_SOLARIS : Constants.OS_UNKNOWN;
		}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1330" end="1397" />
        <code>// if the user didn't set the window system with a command line</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1397" end="1433" />
        <code>// argument then use the default.</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1485" end="2043" />
        <code>if (ws == null) {
			// setup default values for known OSes if nothing was 
specified
			if (os.equals(Constants.OS_WIN32))
				ws = Constants.WS_WIN32;
			else if (os.equals(Constants.OS_LINUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_MACOSX))
				ws = Constants.WS_CARBON;
			else if (os.equals(Constants.OS_HPUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_AIX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_SOLARIS))
				ws = Constants.WS_MOTIF;
			else
				ws = Constants.WS_UNKNOWN;
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="4">
      <Enumeration lines="6">
        <Lines>
          <Line>P.S. Do you know why org.eclipse.core.runtime.Platfrom defines its own constants</Line>
          <Line>instead of usage of org.eclipse.osgi.service.environment.Constants? I dont think</Line>
          <Line>it is good idea to duplicate the code. I also think that constants of</Line>
          <Line>InternalPlatfrom such as ARCH_LIST, OS_LIST and WS_LIST should go into org.</Line>
          <Line>eclipse.osgi.service.environment.Constants. This will allow to introduce new</Line>
          <Line>platfrom modifing only one plug-in.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1.	Compare with all known platforms ignoring case</Line>
          <Line>2.	If nothing is found do the mapping for win32 and Sun OS.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>1. Set of constants  for osgi.arch, osgi.os and osgi.ws properties so the</Line>
          <Line>Platfrom methods do not rely on their own constants</Line>
          <Line />
          <Line>2. Mapping from os.arch -&gt; osgi.arch (i386, i486 i586 -&gt; x86; amd64, em64t -&gt;</Line>
          <Line>x86_64 etc.)</Line>
          <Line />
          <Line>3. Mapping from os.name -&gt; osgi.os (Like it is done in the patch)</Line>
          <Line />
          <Line>4. Default values for osgi.ws based on osgi.os (Like it is done in the patch)</Line>
          <Line>This is not critical. Will be released after M2 is out.</Line>
          <Line>Patch released.</Line>
          <Line>*** Bug 59951 has been marked as a duplicate of this bug. ***</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- tries to guess the OS correctly on other platforms as well</Line>
          <Line>- suggests PHOTON as the windowing system for QNX (we didn't do any guessing before)</Line>
          <Line>- refactors OS/WS guessing code so we can write tests</Line>
          <Line>- provides an automated test for EnvironmentInfo</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I try to run Eclipse 3.0 on Linux using java. I can only skip "arch" argument. 
If I do not specify "os" or "ws" eclipse exits silently.

It is possible to determine "os" using os.name java system property. Probably it 
is also worth assuming motif on linux as value of "ws".
Are you seeing this with Linux-GTK or Linux-Motif? We know we don't guess it
right for Linux-GTK (we always try Motif). See bug 70312. We rely on the native
launcher to determine which OS/WS to use.
We use the following to determine the OS.

		// if the user didn't set the operating system with a command 
line 
		// argument then use the default.
		os = System.getProperty("osgi.os"); //$NON-NLS-1$
		if (os == null) {
			String name = System.getProperty("os.name");//$NON-NLS-1
$
			// check to see if the VM returned "Windows 98" or some 
other
			// flavour which should be converted to win32.
			if (name.regionMatches(true, 0, Constants.OS_WIN32, 0, 
3))
				os = Constants.OS_WIN32;
			// EXCEPTION: All mappings of SunOS convert to Solaris
			if (os == null)
				os = name.equalsIgnoreCase(INTERNAL_OS_SUNOS) ? 
Constants.OS_SOLARIS : Constants.OS_UNKNOWN;
		}
		System.getProperties().put("osgi.os", os); //$NON-NLS-1$

Perhaps your VM is not setting os.name or is setting it to something strange?

as for window systems, we use the following:
		// if the user didn't set the window system with a command line 
		// argument then use the default.
		ws = System.getProperty("osgi.ws"); //$NON-NLS-1$
		if (ws == null) {
			// setup default values for known OSes if nothing was 
specified
			if (os.equals(Constants.OS_WIN32))
				ws = Constants.WS_WIN32;
			else if (os.equals(Constants.OS_LINUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_MACOSX))
				ws = Constants.WS_CARBON;
			else if (os.equals(Constants.OS_HPUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_AIX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_SOLARIS))
				ws = Constants.WS_MOTIF;
			else
				ws = Constants.WS_UNKNOWN;
		}
		System.getProperties().put("osgi.ws", ws); //$NON-NLS-1$

All of this code is in org.eclipse.core.runtime.adaptor.EnvironmentInfo

Given this behaviour, please provide more detail as to what exactly is going 
wrong for you and what behaviour you are expecting.  Feel free to submit 
patches which implement the behaviour you want.


Command like 

java -cp ./startup.jar org.eclipse.core.launcher.Main -ws gtk

does not start eclipse on linux. The value of os.name is "Linux" so the check 
with case ignorance should solve the problem. 

To improve the behavior in general I suggest doing the following

1.	Compare with all known platforms ignoring case
2.	If nothing is found do the mapping for win32 and Sun OS.

Agreed.  Case insensitivity is our friend here.  On deck for M2
There is actually another problem in this method. If the user does not specify
the OS, we query the os.name property. But will only set the osgi.os property
with win32 (if os.name starts with "win"), solaris (if os.name is "SunOS"), or
unknown.  By any chance, was there a time when Eclipse would run only on Windows
or Solaris?
Will attach patch that:
- tries to guess the OS correctly on other platforms as well
- suggests PHOTON as the windowing system for QNX (we didn't do any guessing before)
- refactors OS/WS guessing code so we can write tests
- provides an automated test for EnvironmentInfo

Jeff, could you review the patches?
Created attachment 14656
patches for org.eclipse.osgi and org.eclipse.osgi.tests
Patch is good. I think there is no need in INTERNAL_OS_LINUX, INTERNAL_OS_AIX 
and INTERNAL_OS_QNX constants since comparison is done ignoring the case.

P.S. Do you know why org.eclipse.core.runtime.Platfrom defines its own constants 
instead of usage of org.eclipse.osgi.service.environment.Constants? I dont think 
it is good idea to duplicate the code. I also think that constants of 
InternalPlatfrom such as ARCH_LIST, OS_LIST and WS_LIST should go into org.
eclipse.osgi.service.environment.Constants. This will allow to introduce new 
platfrom modifing only one plug-in.

P.P.S. Why we even need to define OS, WS and ARCH constants in JAVA code? Why no 
to move them into plug-in configuration file or plug-in property file or even 
into eclipse config.ini file? So users of eclipse will be able to add new 
architecture with no Java source code modifications?

The INTERNAL_XXX constants represent values expected to be found for the os.name
property. As you noticed, some of them match the EnvironmentInfo service
constants, but that is just a coincidence. Instead of relying on that, I
preferred to make explicit that they are not thesame thing.

Jeff, I guess you are more aware of what made we replicate the old BootLoader
constants into both Platform class and o.e.osgi.environment.Constants interface.
Patch looks fine.  The INTERNAL fields are ok.  I guess my only concern here is 
that we really want the osgi.os prop to the same as the JVM prop.  It is only 
in cases where there is some deviation potential that we need to have a string 
to map from.  Either way.

The constants could be moved around.  I suspect that there are some backwards 
compatibility issues with removing them from Platform.  Even if we did not want 
to, the EnvironmentInfo stuff is not yet API so in all likelihood, the 
constants were moved from Bootloader to Platform where they are the API.  
EnvironmentInfo related constants are an OSGi implementation thing. Unfortunate 
but we still need the room to move at the OSGi level.

Moving constants out of Java.  Sure this is possible.  You can do this now.  
All the internal computations are done only in the case that hte props are not 
set.  you can put these settings in your config.ini files today and they should 
work.  I don't see the inhibitors to adding new platforms especially if you use 
this approach.  For example, I run Eclipse on an ARM processor with no 
changes.  Just pass in -arch arm.  "arm" does not appear anywhere in the Java 
code.

We don;t want to move this all out into config files as currently you do not 
actually need ANY config files to run Eclipse.  The one we ship is mostly doc 
and contains incidentals liek build number, splash path, ...  
Thanks for the info. What I was thinking about is that there are API methods 
like Platfrom.knownWSValues(), Platfrom.knownOSValues() and 
Platfrom.knownOSArchValues() that are used in PDE for plug-in/feature export to 
specify target environment.

If we moved the following info in org.eclipse.osgi property file (for example 
eclipse.properties) we could add new system easly with no source code 
modifications and that system will be available via API.

1. Set of constants  for osgi.arch, osgi.os and osgi.ws properties so the 
Platfrom methods do not rely on their own constants

2. Mapping from os.arch -&gt; osgi.arch (i386, i486 i586 -&gt; x86; amd64, em64t -&gt; 
x86_64 etc.)

3. Mapping from os.name -&gt; osgi.os (Like it is done in the patch)

4. Default values for osgi.ws based on osgi.os (Like it is done in the patch)
This is not critical. Will be released after M2 is out.
Patch released.
*** Bug 59951 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I try to run Eclipse 3.0 on Linux using java. I can only skip "arch" argument. 
If I do not specify "os" or "ws" eclipse exits silently.

It is possible to determine "os" using os.name java system property. Probably it 
is also worth assuming motif on linux as value of "ws".
Are you seeing this with Linux-GTK or Linux-Motif? We know we don't guess it
right for Linux-GTK (we always try Motif). See bug 70312. We rely on the native
launcher to determine which OS/WS to use.
We use the following to determine the OS.

		// if the user didn't set the operating system with a command 
line 
		// argument then use the default.
		os = System.getProperty("osgi.os"); //$NON-NLS-1$
		if (os == null) {
			String name = System.getProperty("os.name");//$NON-NLS-1
$
			// check to see if the VM returned "Windows 98" or some 
other
			// flavour which should be converted to win32.
			if (name.regionMatches(true, 0, Constants.OS_WIN32, 0, 
3))
				os = Constants.OS_WIN32;
			// EXCEPTION: All mappings of SunOS convert to Solaris
			if (os == null)
				os = name.equalsIgnoreCase(INTERNAL_OS_SUNOS) ? 
Constants.OS_SOLARIS : Constants.OS_UNKNOWN;
		}
		System.getProperties().put("osgi.os", os); //$NON-NLS-1$

Perhaps your VM is not setting os.name or is setting it to something strange?

as for window systems, we use the following:
		// if the user didn't set the window system with a command line 
		// argument then use the default.
		ws = System.getProperty("osgi.ws"); //$NON-NLS-1$
		if (ws == null) {
			// setup default values for known OSes if nothing was 
specified
			if (os.equals(Constants.OS_WIN32))
				ws = Constants.WS_WIN32;
			else if (os.equals(Constants.OS_LINUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_MACOSX))
				ws = Constants.WS_CARBON;
			else if (os.equals(Constants.OS_HPUX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_AIX))
				ws = Constants.WS_MOTIF;
			else if (os.equals(Constants.OS_SOLARIS))
				ws = Constants.WS_MOTIF;
			else
				ws = Constants.WS_UNKNOWN;
		}
		System.getProperties().put("osgi.ws", ws); //$NON-NLS-1$

All of this code is in org.eclipse.core.runtime.adaptor.EnvironmentInfo

Given this behaviour, please provide more detail as to what exactly is going 
wrong for you and what behaviour you are expecting.  Feel free to submit 
patches which implement the behaviour you want.


Command like 

java -cp ./startup.jar org.eclipse.core.launcher.Main -ws gtk

does not start eclipse on linux. The value of os.name is "Linux" so the check 
with case ignorance should solve the problem. 

To improve the behavior in general I suggest doing the following

1.	Compare with all known platforms ignoring case
2.	If nothing is found do the mapping for win32 and Sun OS.

Agreed.  Case insensitivity is our friend here.  On deck for M2
There is actually another problem in this method. If the user does not specify
the OS, we query the os.name property. But will only set the osgi.os property
with win32 (if os.name starts with "win"), solaris (if os.name is "SunOS"), or
unknown.  By any chance, was there a time when Eclipse would run only on Windows
or Solaris?
Will attach patch that:
- tries to guess the OS correctly on other platforms as well
- suggests PHOTON as the windowing system for QNX (we didn't do any guessing before)
- refactors OS/WS guessing code so we can write tests
- provides an automated test for EnvironmentInfo

Jeff, could you review the patches?
Created attachment 14656
patches for org.eclipse.osgi and org.eclipse.osgi.tests
Patch is good. I think there is no need in INTERNAL_OS_LINUX, INTERNAL_OS_AIX 
and INTERNAL_OS_QNX constants since comparison is done ignoring the case.

P.S. Do you know why org.eclipse.core.runtime.Platfrom defines its own constants 
instead of usage of org.eclipse.osgi.service.environment.Constants? I dont think 
it is good idea to duplicate the code. I also think that constants of 
InternalPlatfrom such as ARCH_LIST, OS_LIST and WS_LIST should go into org.
eclipse.osgi.service.environment.Constants. This will allow to introduce new 
platfrom modifing only one plug-in.

P.P.S. Why we even need to define OS, WS and ARCH constants in JAVA code? Why no 
to move them into plug-in configuration file or plug-in property file or even 
into eclipse config.ini file? So users of eclipse will be able to add new 
architecture with no Java source code modifications?

The INTERNAL_XXX constants represent values expected to be found for the os.name
property. As you noticed, some of them match the EnvironmentInfo service
constants, but that is just a coincidence. Instead of relying on that, I
preferred to make explicit that they are not thesame thing.

Jeff, I guess you are more aware of what made we replicate the old BootLoader
constants into both Platform class and o.e.osgi.environment.Constants interface.
Patch looks fine.  The INTERNAL fields are ok.  I guess my only concern here is 
that we really want the osgi.os prop to the same as the JVM prop.  It is only 
in cases where there is some deviation potential that we need to have a string 
to map from.  Either way.

The constants could be moved around.  I suspect that there are some backwards 
compatibility issues with removing them from Platform.  Even if we did not want 
to, the EnvironmentInfo stuff is not yet API so in all likelihood, the 
constants were moved from Bootloader to Platform where they are the API.  
EnvironmentInfo related constants are an OSGi implementation thing. Unfortunate 
but we still need the room to move at the OSGi level.

Moving constants out of Java.  Sure this is possible.  You can do this now.  
All the internal computations are done only in the case that hte props are not 
set.  you can put these settings in your config.ini files today and they should 
work.  I don't see the inhibitors to adding new platforms especially if you use 
this approach.  For example, I run Eclipse on an ARM processor with no 
changes.  Just pass in -arch arm.  "arm" does not appear anywhere in the Java 
code.

We don;t want to move this all out into config files as currently you do not 
actually need ANY config files to run Eclipse.  The one we ship is mostly doc 
and contains incidentals liek build number, splash path, ...  
Thanks for the info. What I was thinking about is that there are API methods 
like Platfrom.knownWSValues(), Platfrom.knownOSValues() and 
Platfrom.knownOSArchValues() that are used in PDE for plug-in/feature export to 
specify target environment.

If we moved the following info in org.eclipse.osgi property file (for example 
eclipse.properties) we could add new system easly with no source code 
modifications and that system will be available via API.

1. Set of constants  for osgi.arch, osgi.os and osgi.ws properties so the 
Platfrom methods do not rely on their own constants

2. Mapping from os.arch -&gt; osgi.arch (i386, i486 i586 -&gt; x86; amd64, em64t -&gt; 
x86_64 etc.)

3. Mapping from os.name -&gt; osgi.os (Like it is done in the patch)

4. Default values for osgi.ws based on osgi.os (Like it is done in the patch)
This is not critical. Will be released after M2 is out.
Patch released.
*** Bug 59951 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73057" />
    <CreationDate amount="2004-09-01 10:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.UML2" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Subset/Superset resolving ELists don't resolve</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>A change in the new EMF driver (M200408261626; see Bugzilla 72538) has broken 
the subset/superset resolving list implementations. Changes to the way resolve
(int, Object) is implemented now require that resolving list implementations 
override resolve(int, Object) to delegate to the new resolve(int, EObject) 
method in order to enable proxy resolution.
This is fixed in build M200409011504.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>A change in the new EMF driver (M200408261626; see Bugzilla 72538) has broken 
the subset/superset resolving list implementations. Changes to the way resolve
(int, Object) is implemented now require that resolving list implementations 
override resolve(int, Object) to delegate to the new resolve(int, EObject) 
method in order to enable proxy resolution.
This is fixed in build M200409011504.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73058" />
    <CreationDate amount="2004-09-01 10:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Images] ImageDescriptor.createImage() javadoc needs dispose() reference</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.jface.resource.ImageDescriptor.createImage() javadoc needs dispose
reference.

When creating images using the above call, the Javadoc just says that a new
image is created. Reciently I had troubles with a "No more handles" bug, which
turned out to be that I was never disposing of the images I had created.

It would be very useful to have the Javadoc for the createImage() calls mention
that all images must be explictly disposed of. Mentioning this might help other
people avoid this problem in the future.

Something along the lines of:

Note: All Images created using this call must be explictly disposed of using the
dispose() call. They will not be automatically garbage collected.
Fix submitted to HEAD. I added the dispose comment to the "createImage" methods
in ImageDescriptor.
Verified with Build id: 200409210800.</WithStack>
    <WithOutStack>org.eclipse.jface.resource.ImageDescriptor.createImage() javadoc needs dispose
reference.

When creating images using the above call, the Javadoc just says that a new
image is created. Reciently I had troubles with a "No more handles" bug, which
turned out to be that I was never disposing of the images I had created.

It would be very useful to have the Javadoc for the createImage() calls mention
that all images must be explictly disposed of. Mentioning this might help other
people avoid this problem in the future.

Something along the lines of:

Note: All Images created using this call must be explictly disposed of using the
dispose() call. They will not be automatically garbage collected.
Fix submitted to HEAD. I added the dispose comment to the "createImage" methods
in ImageDescriptor.
Verified with Build id: 200409210800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73059" />
    <CreationDate amount="2004-09-01 10:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Shutdown hook throws NoClassDefFoundError</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I have a class that registers a shutdown hook (Runtime.getRuntime
().addShutdownHook()) that references a class that is never loaded until the 
shutdown hook is executed.  Eclipse throws a NoClassDefFoundError from 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass() (from 
org.eclipse.core.runtime.adaptor.EclipseClassLoader).

As long as I don't screw up horribly, an attachment that highlights the problem 
should be available.

I should note that I am attempting to use a third party library that contains 
the shutdown hook.  The source attached only highlights the problem to that it 
can be tested.  I mention this since a solution of "just move the code to a 
dispose() method" is not acceptible.
Created attachment 14325
Three source files (in a zip) that exhibit the shutdown bug

The zip contains three source files:

  TestShutdownHookView -- the ViewPart
  ClassWithShutdownHook -- the class that creates the shutdown hook
  NotLoadedUntilShutdown -- the class that's not loaded until the shutdown hook
is called

Unfortunately you will need to create your own plugin to use / test these
classes.
I should mention that a workaround does exist.  As long as the class (in this 
case NotLoadedUntilShutdown) is loaded before the shutdown hook is called then 
the defect does not occur.  The class can be artifically loaded through the 
ClassLoader directly or indirectly by calling a method on the class.
After your plug-in has been stopped during shutdown, class loading will be
disabled. So when the shutdown hook gets executed, and needs to load more
classes, it will fail. This is to protect your code from being run when your
plug-in is not longer active.

One way to avoid this problem is to disable auto-activation. See: 

http://help.eclipse.org/help30/topic/org.eclipse.pde.doc.user/guide/pde_manifest_runtime.htm

Do the classes being loaded during shutdown come from the 3rd party library or
they are yours?
The shutdown hook and related classes are all in the 3rd party library 
unfortunately.

Thank you for the link.  I suppose that this can be marked "invalid" 
or "wontfix" given the two different workarounds with disabling auto-activation 
being the perferred route.

Is there a reference for implications for disabling auto-activation?  Thank you.
Eclipse ensures Plugin.startup is called before any code and your plug-in runs.
Most plug-ins rely on that fact. 

Since you are deplying a third-party library which does not even know what
Eclipse is, this is not an issue.

BTW: in your case, I would rather leave the 3rd-party library as a separate
plug-in, instead for selectively disabling auto-activation in the plug-in that
contains your own code.</WithStack>
    <WithOutStack>I have a class that registers a shutdown hook (Runtime.getRuntime
().addShutdownHook()) that references a class that is never loaded until the 
shutdown hook is executed.  Eclipse throws a NoClassDefFoundError from 
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass() (from 
org.eclipse.core.runtime.adaptor.EclipseClassLoader).

As long as I don't screw up horribly, an attachment that highlights the problem 
should be available.

I should note that I am attempting to use a third party library that contains 
the shutdown hook.  The source attached only highlights the problem to that it 
can be tested.  I mention this since a solution of "just move the code to a 
dispose() method" is not acceptible.
Created attachment 14325
Three source files (in a zip) that exhibit the shutdown bug

The zip contains three source files:

  TestShutdownHookView -- the ViewPart
  ClassWithShutdownHook -- the class that creates the shutdown hook
  NotLoadedUntilShutdown -- the class that's not loaded until the shutdown hook
is called

Unfortunately you will need to create your own plugin to use / test these
classes.
I should mention that a workaround does exist.  As long as the class (in this 
case NotLoadedUntilShutdown) is loaded before the shutdown hook is called then 
the defect does not occur.  The class can be artifically loaded through the 
ClassLoader directly or indirectly by calling a method on the class.
After your plug-in has been stopped during shutdown, class loading will be
disabled. So when the shutdown hook gets executed, and needs to load more
classes, it will fail. This is to protect your code from being run when your
plug-in is not longer active.

One way to avoid this problem is to disable auto-activation. See: 

http://help.eclipse.org/help30/topic/org.eclipse.pde.doc.user/guide/pde_manifest_runtime.htm

Do the classes being loaded during shutdown come from the 3rd party library or
they are yours?
The shutdown hook and related classes are all in the 3rd party library 
unfortunately.

Thank you for the link.  I suppose that this can be marked "invalid" 
or "wontfix" given the two different workarounds with disabling auto-activation 
being the perferred route.

Is there a reference for implications for disabling auto-activation?  Thank you.
Eclipse ensures Plugin.startup is called before any code and your plug-in runs.
Most plug-ins rely on that fact. 

Since you are deplying a third-party library which does not even know what
Eclipse is, this is not an issue.

BTW: in your case, I would rather leave the 3rd-party library as a separate
plug-in, instead for selectively disabling auto-activation in the plug-in that
contains your own code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73060" />
    <CreationDate amount="2004-09-01 11:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[syntax highlighting] Apply alternating table row pattern to Java source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>There is a well known visual design pattern often used in rendering widgets that
contain rows (tables, lists, etc) to enhance the readibility of the widgets
contents. The most recognizable example being a table with each row alternating
its background color between two colors (light yellow and white for example).
This creates a clean and easily recognizable delineation between which data
belongs with which row. The same strategy can be applied to the methods of a
Java class. If methods had alternating background colors, it would be
easier/quicker to recognize method start/end points versus visually having to
parse indentation, comments, declaration, terminating brace, etc to achieve the
same thing. Especially while browsing code (versus authoring) this can really
increase the readability and easily allow a person to "drop" all the other code
that is visible as clutter. This is really an extension of the syntax hilighting
scheme, only it applies to the background color or a given target versus the
font attributes and foreground color.</WithStack>
    <WithOutStack>There is a well known visual design pattern often used in rendering widgets that
contain rows (tables, lists, etc) to enhance the readibility of the widgets
contents. The most recognizable example being a table with each row alternating
its background color between two colors (light yellow and white for example).
This creates a clean and easily recognizable delineation between which data
belongs with which row. The same strategy can be applied to the methods of a
Java class. If methods had alternating background colors, it would be
easier/quicker to recognize method start/end points versus visually having to
parse indentation, comments, declaration, terminating brace, etc to achieve the
same thing. Especially while browsing code (versus authoring) this can really
increase the readability and easily allow a person to "drop" all the other code
that is visible as clutter. This is really an extension of the syntax hilighting
scheme, only it applies to the background color or a given target versus the
font attributes and foreground color.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73061" />
    <CreationDate amount="2004-09-01 11:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[api][implementation] setFormattingStrategy in ContentFormatter wrong javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="344" end="374" />
        <code>Assert.isNotNull(contentType);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The method setFormattingStrategy in the class ContentFormatter has a wrong
javadoc. It says :

...
If the given content type is null the given strategy is registered for all
content types as is called only once per formatting session.
...

But if you look in the code then there is first an assertion which checks if the
content type is null:

Assert.isNotNull(contentType);

So, if you use null as value then you'll get an NullPointerException!
We need to check whether to change API or Javadoc. This is in (including R3.0)
like this since pre 2.1. Inside Eclipse SDK this method is no longer called
since we use MultiPassContentFormatter.
Fixed in HEAD (adapted Javadoc).
*** Bug 117023 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The method setFormattingStrategy in the class ContentFormatter has a wrong
javadoc. It says :

...
If the given content type is null the given strategy is registered for all
content types as is called only once per formatting session.
...

But if you look in the code then there is first an assertion which checks if the
content type is null:

Assert.isNotNull(contentType);

So, if you use null as value then you'll get an NullPointerException!
We need to check whether to change API or Javadoc. This is in (including R3.0)
like this since pre 2.1. Inside Eclipse SDK this method is no longer called
since we use MultiPassContentFormatter.
Fixed in HEAD (adapted Javadoc).
*** Bug 117023 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73062" />
    <CreationDate amount="2004-09-01 11:09:00 -0400" />
    <DupId amount="72205" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IWAT4001E error when saving a http test suite</Summery>
    <Patches amount="0" />
    <Stacktraces amount="5">
      <Stacktrace timestamp="1437341182572">
        <Exception>org.eclipse.emf.ecore.xmi.DanglingHREFException</Exception>
        <Reason>The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineImpl@5ff3aa (id:
D15EDF2F43C02F4C6E3B81A1FC2611D8, description: null, name: _selfLifeline)' is
not contained in a resource.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(XMLHelperImpl.java:448)</Frame>
          <Frame depth="1">org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(XMLHelperImpl.java:471)</Frame>
          <Frame depth="2">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveHref(XMLSaveImpl.java:1355)</Frame>
          <Frame depth="3">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveHRefSingle(XMLSaveImpl.java:1377)</Frame>
          <Frame depth="4">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveFeatures(XMLSaveImpl.java:934)</Frame>
          <Frame depth="5">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementID(XMLSaveImpl.java:1655)</Frame>
          <Frame depth="6">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElement(XMLSaveImpl.java:637)</Frame>
          <Frame depth="7">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveContainedMany(XMLSaveImpl.java:1409)</Frame>
          <Frame depth="8">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveFeatures(XMLSaveImpl.java:920)</Frame>
          <Frame depth="9">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementID(XMLSaveImpl.java:1655)</Frame>
          <Frame depth="10">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.writeTopObject(XMLSaveImpl.java:345)</Frame>
          <Frame depth="11">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.traverse(XMLSaveImpl.java:324)</Frame>
          <Frame depth="12">org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.save(XMLSaveImpl.java:138)</Frame>
          <Frame depth="13">org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doSave(XMLResourceImpl.java:167)</Frame>
          <Frame depth="14">org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doSave(FacadeResourceImpl.java)</Frame>
          <Frame depth="15">org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:785)</Frame>
          <Frame depth="16">org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:722)</Frame>
          <Frame depth="17">org.eclipse.hyades.test.ui.internal.model.EMFUtil.save(EMFUtil.java)</Frame>
          <Frame depth="18">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.save(BaseEditorExtension.java)</Frame>
          <Frame depth="19">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)</Frame>
          <Frame depth="20">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="21">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="22">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="23">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="24">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="25">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)</Frame>
          <Frame depth="26">org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)</Frame>
          <Frame depth="29">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="30">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="31">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)</Frame>
          <Frame depth="32">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="33">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)</Frame>
          <Frame depth="40">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="41">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="59">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="60">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="69">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="71">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="72">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="73">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="76">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182572">
        <Exception>java.io.EOFException</Exception>
        <Reason>Unexpected end of ZLIB input stream</Reason>
        <Frames>
          <Frame depth="0">java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:215)</Frame>
          <Frame depth="1">java.util.zip.InflaterInputStream.read(InflaterInputStream.java:134)</Frame>
          <Frame depth="2">java.util.zip.ZipInputStream.read(ZipInputStream.java:139)</Frame>
          <Frame depth="3">org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doLoad(FacadeResourceImpl.java)</Frame>
          <Frame depth="4">org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:867)</Frame>
          <Frame depth="5">org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:741)</Frame>
          <Frame depth="6">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:215)</Frame>
          <Frame depth="7">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:250)</Frame>
          <Frame depth="8">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="9">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="10">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="11">org.eclipse.hyades.test.ui.internal.navigator.TestSuiteHTNConverter.getObjectFromResource(TestSuiteHTNConverter.java)</Frame>
          <Frame depth="12">org.eclipse.hyades.test.ui.internal.navigator.TestNavigator.getConvertedObjectFromFile(TestNavigator.java)</Frame>
          <Frame depth="13">org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.updateContent(TestResourceChangeUpdater.java)</Frame>
          <Frame depth="14">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="15">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="16">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="17">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="25">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="26">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)</Frame>
          <Frame depth="27">org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)</Frame>
          <Frame depth="28">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)</Frame>
          <Frame depth="29">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)</Frame>
          <Frame depth="30">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="31">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="32">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="33">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="34">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="35">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)</Frame>
          <Frame depth="36">org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)</Frame>
          <Frame depth="39">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="40">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="41">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)</Frame>
          <Frame depth="42">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="43">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)</Frame>
          <Frame depth="50">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="51">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="69">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="70">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="75">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="77">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="78">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="79">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="81">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="82">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="83">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="86">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182572">
        <Exception>org.eclipse.emf.common.util.WrappedException</Exception>
        <Reason>Unexpected end of ZLIB input stream</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:258)</Frame>
          <Frame depth="1">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.test.ui.internal.navigator.TestSuiteHTNConverter.getObjectFromResource(TestSuiteHTNConverter.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.test.ui.internal.navigator.TestNavigator.getConvertedObjectFromFile(TestNavigator.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.updateContent(TestResourceChangeUpdater.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="9">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="10">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="17">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="18">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="19">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)</Frame>
          <Frame depth="20">org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)</Frame>
          <Frame depth="21">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)</Frame>
          <Frame depth="22">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)</Frame>
          <Frame depth="23">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="25">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="26">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="28">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)</Frame>
          <Frame depth="29">org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)</Frame>
          <Frame depth="32">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="33">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="34">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)</Frame>
          <Frame depth="35">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="36">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)</Frame>
          <Frame depth="43">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="44">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="62">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="63">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="68">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="70">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="71">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="72">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="73">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="74">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="75">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="76">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="77">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="78">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="79">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182572">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2691)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)</Frame>
          <Frame depth="8">org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)</Frame>
          <Frame depth="9">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)</Frame>
          <Frame depth="10">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)</Frame>
          <Frame depth="11">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="13">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="14">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="15">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="16">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)</Frame>
          <Frame depth="17">org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)</Frame>
          <Frame depth="20">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="21">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="22">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)</Frame>
          <Frame depth="23">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="24">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)</Frame>
          <Frame depth="31">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="32">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="51">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="56">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="58">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="59">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="60">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="61">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="62">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="63">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="64">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="66">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="67">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341182572">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.hyades.test.ui.internal.model.ui.TestNavigatorProvider.getParent(TestNavigatorProvider.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.ui.internal.navigator.FilteredContentProvider.getParent(FilteredContentProvider.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.ended(TestResourceChangeUpdater.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="13">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)</Frame>
          <Frame depth="14">org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)</Frame>
          <Frame depth="15">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)</Frame>
          <Frame depth="16">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)</Frame>
          <Frame depth="17">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)</Frame>
          <Frame depth="18">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="19">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)</Frame>
          <Frame depth="20">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="21">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="22">org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)</Frame>
          <Frame depth="23">org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)</Frame>
          <Frame depth="26">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)</Frame>
          <Frame depth="28">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)</Frame>
          <Frame depth="29">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="30">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)</Frame>
          <Frame depth="37">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="38">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.commands.Command.execute(Command.java:132)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="56">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="57">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="62">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="64">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="65">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="66">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="67">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="68">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="69">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="70">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="71">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When i try to save a HTTP test suite,  an error window appears with this message :
IWAT4001E  An error has happened during the saving attempt
File: Demo/demo.testsuite
Reason: The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineimpl@5ff3aa
(description:bull,name:_selfLine) is not contained in a ressource

In the log file I have :
!ENTRY org.eclipse.hyades.test.ui 1 0 sept. 01, 2004 16:52:12.453
!MESSAGE org.eclipse.emf.ecore.resource.Resource$IOWrappedException: The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineImpl@5ff3aa (id:
D15EDF2F43C02F4C6E3B81A1FC2611D8, description: null, name: _selfLifeline)' is
not contained in a resource.
!STACK 0
org.eclipse.emf.ecore.xmi.DanglingHREFException: The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineImpl@5ff3aa (id:
D15EDF2F43C02F4C6E3B81A1FC2611D8, description: null, name: _selfLifeline)' is
not contained in a resource.
	at
org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(XMLHelperImpl.java:448)
	at org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(XMLHelperImpl.java:471)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveHref(XMLSaveImpl.java:1355)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveHRefSingle(XMLSaveImpl.java:1377)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveFeatures(XMLSaveImpl.java:934)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementID(XMLSaveImpl.java:1655)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElement(XMLSaveImpl.java:637)
	at
org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveContainedMany(XMLSaveImpl.java:1409)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveFeatures(XMLSaveImpl.java:920)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementID(XMLSaveImpl.java:1655)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.writeTopObject(XMLSaveImpl.java:345)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.traverse(XMLSaveImpl.java:324)
	at org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.save(XMLSaveImpl.java:138)
	at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doSave(XMLResourceImpl.java:167)
	at
org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doSave(FacadeResourceImpl.java)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:785)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:722)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.save(EMFUtil.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.save(BaseEditorExtension.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)
	at
org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)
	at org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)
	at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)
	at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.hyades.test.ui 1 0 sept. 01, 2004 16:52:14.31
!MESSAGE org.eclipse.emf.common.util.WrappedException: Unexpected end of ZLIB
input stream
!STACK 0
Wrapped exception
java.io.EOFException: Unexpected end of ZLIB input stream
	at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:215)
	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:134)
	at java.util.zip.ZipInputStream.read(ZipInputStream.java:139)
	at
org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doLoad(FacadeResourceImpl.java)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:867)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:741)
	at
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:215)
	at
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:250)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestSuiteHTNConverter.getObjectFromResource(TestSuiteHTNConverter.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestNavigator.getConvertedObjectFromFile(TestNavigator.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.updateContent(TestResourceChangeUpdater.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)
	at org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)
	at
org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)
	at org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)
	at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)
	at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
Wrapped by
org.eclipse.emf.common.util.WrappedException: Unexpected end of ZLIB input stream
	at
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:258)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at org.eclipse.hyades.test.ui.internal.model.EMFUtil.load(EMFUtil.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestSuiteHTNConverter.getObjectFromResource(TestSuiteHTNConverter.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestNavigator.getConvertedObjectFromFile(TestNavigator.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.updateContent(TestResourceChangeUpdater.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.processDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)
	at org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)
	at
org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)
	at org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)
	at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)
	at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.ui 4 4 sept. 01, 2004 16:52:14.62
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 sept. 01, 2004 16:52:14.78
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2691)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:109)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)
	at org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)
	at
org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)
	at org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)
	at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)
	at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.ui 4 4 sept. 01, 2004 16:52:14.78
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 sept. 01, 2004 16:52:14.78
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.hyades.test.ui.internal.model.ui.TestNavigatorProvider.getParent(TestNavigatorProvider.java)
	at
org.eclipse.hyades.ui.internal.navigator.FilteredContentProvider.getParent(FilteredContentProvider.java)
	at
org.eclipse.hyades.test.ui.internal.navigator.TestResourceChangeUpdater.ended(TestResourceChangeUpdater.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider.doProcessDelta(ResourceChangeUpdaterProvider.java)
	at
org.eclipse.hyades.ui.internal.provider.ResourceChangeUpdaterProvider$UIUpdaterProvider.run(ResourceChangeUpdaterProvider.java)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:108)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:295)
	at org.eclipse.hyades.ui.internal.util.UIUtil.openSaveFileErrorDialog(UIUtil.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.handleException(BaseEditorExtension.java)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension$1.execute(BaseEditorExtension.java)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:91)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:105)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at
org.eclipse.hyades.test.ui.editor.extension.BaseEditorExtension.doSave(BaseEditorExtension.java)
	at
org.eclipse.hyades.ui.internal.editor.HyadesEditorPart.doSave(HyadesEditorPart.java)
	at org.eclipse.ui.internal.EditorManager$12.run(EditorManager.java:1160)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1015)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:588)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:585)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1653)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1021)
	at org.eclipse.ui.internal.EditorManager.savePart(EditorManager.java:1165)
	at org.eclipse.ui.internal.WorkbenchPage.savePart(WorkbenchPage.java:2539)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2551)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:141)
	at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:471)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:889)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:930)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:548)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:496)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:261)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:740)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
Can you provide the steps that you performed to end up with the error that was 
visible in the log file?

Also, for future reference the preferred method of communicating log file 
information is to attach the log file to the bug.  It makes the description 
easier to read through.  
This defect is a duplicate of another more general problem.  To workaround the
problem, be sure to delete the invocation of the test method in the behavior of
the test before deleting the test method definition.  

*** This bug has been marked as a duplicate of 72205 ***
closing</WithStack>
    <WithOutStack>When i try to save a HTTP test suite,  an error window appears with this message :
IWAT4001E  An error has happened during the saving attempt
File: Demo/demo.testsuite
Reason: The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineimpl@5ff3aa
(description:bull,name:_selfLine) is not contained in a ressource

In the log file I have :
!ENTRY org.eclipse.hyades.test.ui 1 0 sept. 01, 2004 16:52:12.453
!MESSAGE org.eclipse.emf.ecore.resource.Resource$IOWrappedException: The object
'org.eclipse.hyades.models.common.interactions.impl.BVRLifelineImpl@5ff3aa (id:
D15EDF2F43C02F4C6E3B81A1FC2611D8, description: null, name: _selfLifeline)' is
not contained in a resource.
!STACK 0

!ENTRY org.eclipse.hyades.test.ui 1 0 sept. 01, 2004 16:52:14.31
!MESSAGE org.eclipse.emf.common.util.WrappedException: Unexpected end of ZLIB
input stream
!STACK 0
Wrapped exception
Wrapped by

!ENTRY org.eclipse.ui 4 4 sept. 01, 2004 16:52:14.62
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 sept. 01, 2004 16:52:14.78
!MESSAGE Failed to execute runnable (java.lang.NullPointerException)
!STACK 0

!ENTRY org.eclipse.ui 4 4 sept. 01, 2004 16:52:14.78
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 sept. 01, 2004 16:52:14.78
!MESSAGE java.lang.NullPointerException
!STACK 0

Can you provide the steps that you performed to end up with the error that was 
visible in the log file?

Also, for future reference the preferred method of communicating log file 
information is to attach the log file to the bug.  It makes the description 
easier to read through.  
This defect is a duplicate of another more general problem.  To workaround the
problem, be sure to delete the invocation of the test method in the behavior of
the test before deleting the test method definition.  

*** This bug has been marked as a duplicate of 72205 ***
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73063" />
    <CreationDate amount="2004-09-01 11:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Copy/cut of text results in 'Error Executing Command' in files with assert</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="588" end="620" />
        <code>/**
 * Main line for tests.
 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="704" end="738" />
        <code>assert (false):("foobar");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1.  Create a new dummy project for testing.  Make sure that the assert keyword is allowed.</Line>
          <Line>2.  Create a new class, "Main".</Line>
          <Line>3.  Make Main.java read as follows:</Line>
          <Line />
          <Line>public final class Main</Line>
          <Line>{</Line>
          <Line>public void main (final String[] argv)</Line>
          <Line>{</Line>
          <Line />
          <Line>}</Line>
          <Line>}</Line>
          <Line />
          <Line>4.  Save Main.java.</Line>
          <Line>5.  Open another file in another editor.  Switch to that tab, and switch back to Main.java.</Line>
          <Line>6.  Select some text and use Apple-C to try to copy it.</Line>
          <Line>7.  See the error message I mentioned above.</Line>
          <Line>http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm</Line>
          <Line>Get rid of deprecated state.</Line>
          <Line>.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When I attempt to copy or cut a section of text from a file using Apple-C/Apple-V, a dialog 
appears saying:

Error Executing Command
The command for the key you pressed failed
Reason:
 The command for the key you pressed failed

If I choose Edit-&gt;Copy or Edit-&gt;Cut, it just fails silently.

This only happens with Java source files that make use of the assert keyword.  This can easily by 
reproduced with the following steps:

1.  Create a new dummy project for testing.  Make sure that the assert keyword is allowed.
2.  Create a new class, "Main".
3.  Make Main.java read as follows:

/**
 * Main line for tests.
 */
public final class Main
    {
    public void main (final String[] argv)
        {
        assert (false):("foobar");
        }
    }

4.  Save Main.java.
5.  Open another file in another editor.  Switch to that tab, and switch back to Main.java.
6.  Select some text and use Apple-C to try to copy it.
7.  See the error message I mentioned above.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm
Get rid of deprecated state.
.</WithStack>
    <WithOutStack>When I attempt to copy or cut a section of text from a file using Apple-C/Apple-V, a dialog 
appears saying:

Error Executing Command
The command for the key you pressed failed
Reason:
 The command for the key you pressed failed

If I choose Edit-&gt;Copy or Edit-&gt;Cut, it just fails silently.

This only happens with Java source files that make use of the assert keyword.  This can easily by 
reproduced with the following steps:

1.  Create a new dummy project for testing.  Make sure that the assert keyword is allowed.
2.  Create a new class, "Main".
3.  Make Main.java read as follows:

/**
 * Main line for tests.
 */
public final class Main
    {
    public void main (final String[] argv)
        {
        assert (false):("foobar");
        }
    }

4.  Save Main.java.
5.  Open another file in another editor.  Switch to that tab, and switch back to Main.java.
6.  Select some text and use Apple-C to try to copy it.
7.  See the error message I mentioned above.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm
Get rid of deprecated state.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73064" />
    <CreationDate amount="2004-09-01 11:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[options] Warning "Parameter xx is never read" does not account for passed references</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When I declare a method like this to return a status AND a String:

public int convert(String in, String out) ,

I get a warning that the second parameter is never read (if this warning is
turned on).
However this is correct, as the second parameter is passed in by the caller as a
way to get a second return-value from the method.

While in strict OO-sense this may be not very elegant (*blush*), it saves me
from having to deal with a complex Object that holds both a status-value and the
converted String (in this case).

So in short, before this warning is issued, it should check if the method
*writes* the paramter to allow for this (anti?)pattern to work...

PS: I know I can deactivate the warning, but I find it very useful otherwise...
oops, 2nd argument should be a StringBuffer.
And just for the record: a preferrable solution would be to return the converted
String and use RuntimExceptions instead of a status-int...

I just wanted to point out that the corresponding warning is not applicable in
this case.

Unclear this pattern is common enough to be dealt with at the compiler level. 
I would rather favor a solution where you could tag this specific usage as 
tolerable. Once we have implemented support for 1.5 annotations, it would be 
interesting to see if these could be used to give some hints to the compiler.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When I declare a method like this to return a status AND a String:

public int convert(String in, String out) ,

I get a warning that the second parameter is never read (if this warning is
turned on).
However this is correct, as the second parameter is passed in by the caller as a
way to get a second return-value from the method.

While in strict OO-sense this may be not very elegant (*blush*), it saves me
from having to deal with a complex Object that holds both a status-value and the
converted String (in this case).

So in short, before this warning is issued, it should check if the method
*writes* the paramter to allow for this (anti?)pattern to work...

PS: I know I can deactivate the warning, but I find it very useful otherwise...
oops, 2nd argument should be a StringBuffer.
And just for the record: a preferrable solution would be to return the converted
String and use RuntimExceptions instead of a status-int...

I just wanted to point out that the corresponding warning is not applicable in
this case.

Unclear this pattern is common enough to be dealt with at the compiler level. 
I would rather favor a solution where you could tag this specific usage as 
tolerable. Once we have implemented support for 1.5 annotations, it would be 
interesting to see if these could be used to give some hints to the compiler.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73065" />
    <CreationDate amount="2004-09-01 11:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>support code folding like in Java editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Java editor has code folding which is pretty cool.  It's really nice to be
able to collapse sections of code that I'm not interested in.  Are there any
plans to add it to the C/C++ editor?

Thanks!
This a UI enh.
&gt; The Java editor has code folding which is pretty cool.

Work allready started, in the head.

Please fill specific PR on this feature.
Thanks.</WithStack>
    <WithOutStack>The Java editor has code folding which is pretty cool.  It's really nice to be
able to collapse sections of code that I'm not interested in.  Are there any
plans to add it to the C/C++ editor?

Thanks!
This a UI enh.
&gt; The Java editor has code folding which is pretty cool.

Work allready started, in the head.

Please fill specific PR on this feature.
Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73066" />
    <CreationDate amount="2004-09-01 11:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Jar Packager should allow workspace relative targets [jarexporter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When exporting a project to a file, I'd like to be able to specify the target 
jar like:

&lt;project-name&gt;/lib

in addition to absolute files
Time permitted.
With 3.2, the jar export dialog allows to use project relative paths in the dialog (it gives a warning that the JAR will be created relative to the workspace) but when I click Finish, it tries to write into the root directory.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When exporting a project to a file, I'd like to be able to specify the target 
jar like:

&lt;project-name&gt;/lib

in addition to absolute files
Time permitted.
With 3.2, the jar export dialog allows to use project relative paths in the dialog (it gives a warning that the JAR will be created relative to the workspace) but when I click Finish, it tries to write into the root directory.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73067" />
    <CreationDate amount="2004-09-01 11:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DnD] Dock views is very hard if there is no editor area</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I created an RCP application without editor area.
Created some views. Undocked all of them by dragging with the mouse.
So all they are outside the workbench window. 

Now it is very hard to bring them back into the workbench window by 
dragging them. The dark gray line border appears in the workbench window but if
I release the mouse button the view jumps back outside the workbench window.

If the editor area is enabled this bug doesn't occur.
Fixed in head, 3.1 stream.
Verified in I200411022000</WithStack>
    <WithOutStack>I created an RCP application without editor area.
Created some views. Undocked all of them by dragging with the mouse.
So all they are outside the workbench window. 

Now it is very hard to bring them back into the workbench window by 
dragging them. The dark gray line border appears in the workbench window but if
I release the mouse button the view jumps back outside the workbench window.

If the editor area is enabled this bug doesn't occur.
Fixed in head, 3.1 stream.
Verified in I200411022000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73068" />
    <CreationDate amount="2004-09-01 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support for ordering launch shortcuts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>See bug 55804. We should support the ordering in 3.1 as well.
Add doc for "path" in schema, and note it was added in 3.0.1.
Merged in fix to the 3.1 stream and updated the schema doc.

Changes in LaunchShortcutExtension, LaunchConfigurationManager and 
launchShortcuts.exsd.
Please verify, Kevin.
verified</WithStack>
    <WithOutStack>See bug 55804. We should support the ordering in 3.1 as well.
Add doc for "path" in schema, and note it was added in 3.0.1.
Merged in fix to the 3.1 stream and updated the schema doc.

Changes in LaunchShortcutExtension, LaunchConfigurationManager and 
launchShortcuts.exsd.
Please verify, Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73069" />
    <CreationDate amount="2004-09-01 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>bogus extension point id in org.eclipse.debug.ui.launchShortcuts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>3.0

The schema for the org.eclipse.debug.ui.launchShortcuts extension point given 
the id as "org.eclipse.debug.ui.filaunchShortcuts".
Fixed in schema.
Please verify, Kevin.
Please fix in 3.0.1
verified
*** Bug 54083 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>3.0

The schema for the org.eclipse.debug.ui.launchShortcuts extension point given 
the id as "org.eclipse.debug.ui.filaunchShortcuts".
Fixed in schema.
Please verify, Kevin.
Please fix in 3.0.1
verified
*** Bug 54083 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73070" />
    <CreationDate amount="2004-09-01 11:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Extensible set of JDI Connectors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>JDI 1.5 has support for an extensible set of connetors. Our JDI client needs 
to be modified to support arbitrary connections. See:

http://java.sun.com/j2se/1.5.0/docs/guide/jpda/enhancements.html#plug

This will require refactoring our packet managers to support an arbitrary 
underlying Connection. We may also need an extension point to allow others to 
provide connector/transport implementations.
This has been fixed. Our implementation now supports an arbitrary connection. 
Creation of an extension point for contribution of connectors has been 
deferred until/if required.
Verified.</WithStack>
    <WithOutStack>JDI 1.5 has support for an extensible set of connetors. Our JDI client needs 
to be modified to support arbitrary connections. See:

http://java.sun.com/j2se/1.5.0/docs/guide/jpda/enhancements.html#plug

This will require refactoring our packet managers to support an arbitrary 
underlying Connection. We may also need an extension point to allow others to 
provide connector/transport implementations.
This has been fixed. Our implementation now supports an arbitrary connection. 
Creation of an extension point for contribution of connectors has been 
deferred until/if required.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73071" />
    <CreationDate amount="2004-09-01 11:50:00 -0400" />
    <DupId amount="3109" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>percent sign (%) in eclipse install folder path causes null error on eclipse startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Steps to reproduce:

1. 

Installed Eclipse 3.1 into the following folder:

  E:\eclipse3.1N20040831_Reproduce_%bug\

or Eclipse 3.0.1 into this folder:

  E:\eclipse3.01%M20040825

or Eclipse 3.0.0 into this folder:

  E:\eclipse%3.0.0

2. 

Then, when running 

  E:\eclipse3.1N20040831_Reproduce_%bug\eclipse\eclipse.exe
    or
  E:\eclipse3.01%M20040825\eclipse\eclipse.exe
    or
  E:\eclipse%3.0.0\eclipse\eclipse.exe

instead of starting Eclipse, I get an alert that reads:

  An error has occurred and could not be logged:
  null
               [ OK ]

Steps to mask error:

1. 

As above, then rename the install folder to remove the '%', and the problem goes
away. 

Is this a bug? Or a 'best-practices'/'why would you use a percent sign in a
folder name?' Is eclipse trying to resolve the chars following the % as a
hexcode, such as %20 = space?

;-)

To test the above question, I tried:

  E:\eclipse%203.0.0\eclipse\eclipse.exe

as above. Now the error is different:

  An error has occurred. See the log file
  e:\eclipse%203.0.0\eclipse\configuration\1094053334197.log
               [ OK ]

So, yes, eclipse is trying to resolve the % as a hexcode. But in the examples
above %M is never going to be a hexcode... since M is not in the 0-9A-F char range.
I suspect this is because we use the file: URL's which get interpreted by the 
file URL handler.  My suspicion is that the file URL handler is doing the hex 
conversions.
If something simple is doable we should do it, otherwise we should readme the issue.
Even better, it has already been readme'd!

*** This bug has been marked as a duplicate of 3109 ***</WithStack>
    <WithOutStack>Steps to reproduce:

1. 

Installed Eclipse 3.1 into the following folder:

  E:\eclipse3.1N20040831_Reproduce_%bug\

or Eclipse 3.0.1 into this folder:

  E:\eclipse3.01%M20040825

or Eclipse 3.0.0 into this folder:

  E:\eclipse%3.0.0

2. 

Then, when running 

  E:\eclipse3.1N20040831_Reproduce_%bug\eclipse\eclipse.exe
    or
  E:\eclipse3.01%M20040825\eclipse\eclipse.exe
    or
  E:\eclipse%3.0.0\eclipse\eclipse.exe

instead of starting Eclipse, I get an alert that reads:

  An error has occurred and could not be logged:
  null
               [ OK ]

Steps to mask error:

1. 

As above, then rename the install folder to remove the '%', and the problem goes
away. 

Is this a bug? Or a 'best-practices'/'why would you use a percent sign in a
folder name?' Is eclipse trying to resolve the chars following the % as a
hexcode, such as %20 = space?

;-)

To test the above question, I tried:

  E:\eclipse%203.0.0\eclipse\eclipse.exe

as above. Now the error is different:

  An error has occurred. See the log file
  e:\eclipse%203.0.0\eclipse\configuration\1094053334197.log
               [ OK ]

So, yes, eclipse is trying to resolve the % as a hexcode. But in the examples
above %M is never going to be a hexcode... since M is not in the 0-9A-F char range.
I suspect this is because we use the file: URL's which get interpreted by the 
file URL handler.  My suspicion is that the file URL handler is doing the hex 
conversions.
If something simple is doable we should do it, otherwise we should readme the issue.
Even better, it has already been readme'd!

*** This bug has been marked as a duplicate of 3109 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73072" />
    <CreationDate amount="2004-09-01 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.URLTest" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>HTTP Proxy Recorder has confusing help text.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>“HTTP Proxy Recorder” wizard initially comes up with the description “Create 
Java Project”. Some users (in a recent usability study) were confused as to 
what they were actually doing.

Suggestion:
Improve the wizard text using terms that users will understand.
updated title, description on wizard page.  
ACTION: Please verify/close this defect.
closing</WithStack>
    <WithOutStack>“HTTP Proxy Recorder” wizard initially comes up with the description “Create 
Java Project”. Some users (in a recent usability study) were confused as to 
what they were actually doing.

Suggestion:
Improve the wizard text using terms that users will understand.
updated title, description on wizard page.  
ACTION: Please verify/close this defect.
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73073" />
    <CreationDate amount="2004-09-01 11:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Docs" />
    <Version amount="DEVELOPMENT" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Inconsistency between starred and nonstarred type patterns in connection with shadowing.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="469" end="1196" />
        <code>public class ShadowingAndAccess {
    void foo() { p("ShadowingAndAccess"); }

    static public class A {
        void foo() { p("ShadowingAndAccess.A"); }
    }

    public static aspect InnerAspect {
        public static class A {
            void foo() { p("ShadowingAndAccess.Aspect.A"); }
        }

        after(): execution(void *.foo())    { p("*.foo()"); }
        after(): execution(void A.foo())    { p("A.foo()"); }
        after(): execution(void A*.foo())   { p("A*.foo()"); }
    }

    private static void p(String s) {
        System.out.println(s);
    }

    public static void main(String[] args) {
        new ShadowingAndAccess().foo();
        new A().foo();
        new InnerAspect.A().foo();
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Class type patterns match any class that, at the lexical point of the pattern, 
could be referred to by a name that textually matches the pattern. Thus, a type 
pattern consisting of just a single identifier matches at most one class - the 
class which that identifier would refer to, if such a class exists. This 
follows normal Java scoping rules, including shadowing. However, if the type 
pattern contains a wildcard, shadowing is ignored.

Consider this program:

public class ShadowingAndAccess {
    void foo() { p("ShadowingAndAccess"); }

    static public class A {
        void foo() { p("ShadowingAndAccess.A"); }
    }

    public static aspect InnerAspect {
        public static class A {
            void foo() { p("ShadowingAndAccess.Aspect.A"); }
        }

        after(): execution(void *.foo())    { p("*.foo()"); }
        after(): execution(void A.foo())    { p("A.foo()"); }
        after(): execution(void A*.foo())   { p("A*.foo()"); }
    }

    private static void p(String s) {
        System.out.println(s);
    }

    public static void main(String[] args) {
        new ShadowingAndAccess().foo();
        new A().foo();
        new InnerAspect.A().foo();
    }
}

The output from this program is:

ShadowingAndAccess
*.foo()
ShadowingAndAccess.A
*.foo()
A*.foo()
ShadowingAndAccess.Aspect.A
*.foo()
A.foo()
A*.foo()

As expected, the universal * type pattern mathces any class whatsoever. The 
type pattern A cannot see the shadowed ShadowingAndAccess.A class, but the A* 
pattern (which textually matches the exact same names as A in this example) 
ignores shadowing and matches both of the ShadowingAndAccess.A and 
ShadowingAndAccess.Aspect.A classes.

I don't know what is considered the correct behaviour of type patterns - 
shadowing or not shadowing - but in any case it should be consistent for all 
patterns and not depend on whether the patterns have wildcards in them or not.
This is (somewhat surprisingly?) working as designed. Here's what's going on:

When you specify an exact type pattern, the type is resolved in the scope of the 
declaration (so "A" inside InnerAspect resolves to InnerAspect.A). When you 
specify a wildcard type pattern, the pattern is matched against all types 
exposed to the weaver (ie. not based on the declaration scope). This gives the 
additional matches that you saw.

This point about type visibility constrained matching for exact type patterns 
crops up periodically, and I wanted to point you to the place in the docs where 
it was described, but I couldn't find such a place. Therefore I've made this a 
docs bug to make sure that we state this clearly somewhere.
Fixed by adding verbiage to the Type Patterns section of the semantics document.

Fix released as part of AspectJ 1.2.1</WithStack>
    <WithOutStack>Class type patterns match any class that, at the lexical point of the pattern, 
could be referred to by a name that textually matches the pattern. Thus, a type 
pattern consisting of just a single identifier matches at most one class - the 
class which that identifier would refer to, if such a class exists. This 
follows normal Java scoping rules, including shadowing. However, if the type 
pattern contains a wildcard, shadowing is ignored.

Consider this program:

public class ShadowingAndAccess {
    void foo() { p("ShadowingAndAccess"); }

    static public class A {
        void foo() { p("ShadowingAndAccess.A"); }
    }

    public static aspect InnerAspect {
        public static class A {
            void foo() { p("ShadowingAndAccess.Aspect.A"); }
        }

        after(): execution(void *.foo())    { p("*.foo()"); }
        after(): execution(void A.foo())    { p("A.foo()"); }
        after(): execution(void A*.foo())   { p("A*.foo()"); }
    }

    private static void p(String s) {
        System.out.println(s);
    }

    public static void main(String[] args) {
        new ShadowingAndAccess().foo();
        new A().foo();
        new InnerAspect.A().foo();
    }
}

The output from this program is:

ShadowingAndAccess
*.foo()
ShadowingAndAccess.A
*.foo()
A*.foo()
ShadowingAndAccess.Aspect.A
*.foo()
A.foo()
A*.foo()

As expected, the universal * type pattern mathces any class whatsoever. The 
type pattern A cannot see the shadowed ShadowingAndAccess.A class, but the A* 
pattern (which textually matches the exact same names as A in this example) 
ignores shadowing and matches both of the ShadowingAndAccess.A and 
ShadowingAndAccess.Aspect.A classes.

I don't know what is considered the correct behaviour of type patterns - 
shadowing or not shadowing - but in any case it should be consistent for all 
patterns and not depend on whether the patterns have wildcards in them or not.
This is (somewhat surprisingly?) working as designed. Here's what's going on:

When you specify an exact type pattern, the type is resolved in the scope of the 
declaration (so "A" inside InnerAspect resolves to InnerAspect.A). When you 
specify a wildcard type pattern, the pattern is matched against all types 
exposed to the weaver (ie. not based on the declaration scope). This gives the 
additional matches that you saw.

This point about type visibility constrained matching for exact type patterns 
crops up periodically, and I wanted to point you to the place in the docs where 
it was described, but I couldn't find such a place. Therefore I've made this a 
docs bug to make sure that we state this clearly somewhere.
Fixed by adding verbiage to the Type Patterns section of the semantics document.

Fix released as part of AspectJ 1.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73074" />
    <CreationDate amount="2004-09-01 11:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Execution fails when using non-ascii characters in classpath</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Create a directory with one extended ASCII character such as À or \u00C0</Line>
          <Line>(e.g. C:\aaaÀbbb).</Line>
          <Line>2) Move a test class (e.g. InOut.class) to the newly created directory.</Line>
          <Line>3) Profile the test class.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="15">
        <Lines>
          <Line>- I used a Japanese Windows XP</Line>
          <Line>- create a Java project using a location that contains folder in Japanese or</Line>
          <Line>put some Japanese characters in the project name itself.</Line>
          <Line>- create a Junit test suite (New &gt; Test &gt; Test Suite &gt; JUnit Test Suite</Line>
          <Line>definition)</Line>
          <Line>- add a test method (Test Methods tab of the test suite editor)</Line>
          <Line>- add a new behavior (Behavior tab) an invocation of the test method</Line>
          <Line>previously entered for instance.</Line>
          <Line>- save the test suite</Line>
          <Line>- generate the java file from the test suite (right click on test suite node)</Line>
          <Line>- create a location file (New... &gt; Test &gt; Test Elements &gt; Location)</Line>
          <Line>- create an artifact file (New.. &gt; Test &gt; Test Elements &gt; Artifact), associate</Line>
          <Line>the test suite to the artifact</Line>
          <Line>- create a deployment that uses the location and the artifact previously defined</Line>
          <Line>- run the test suite using the deployment previously defined</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>A ClassNotFoundException is emitted when I try to execute a simple Java Test
Suite that uses a java file (generated from the test suite) located in path that
contains unicode characters.

How to reproduce:

  - I used a Japanese Windows XP
  - create a Java project using a location that contains folder in Japanese or
put some Japanese characters in the project name itself.
  - create a Junit test suite (New &gt; Test &gt; Test Suite &gt; JUnit Test Suite
definition)
  - add a test method (Test Methods tab of the test suite editor)
  - add a new behavior (Behavior tab) an invocation of the test method
previously entered for instance.
  - save the test suite 
  - generate the java file from the test suite (right click on test suite node)
  - create a location file (New... &gt; Test &gt; Test Elements &gt; Location)
  - create an artifact file (New.. &gt; Test &gt; Test Elements &gt; Artifact), associate
the test suite to the artifact
  - create a deployment that uses the location and the artifact previously defined
  - run the test suite using the deployment previously defined

The class loader seems to be unable to get the class under test used in the
JUnit test script.
See attachment for result
Created attachment 14326
NoClassFoundException as execution result
As tested on the 20040920_1414 build (HEAD) of the Hyades Data Collection 
Engine, all extended ASCII characters
(http://www.unicode.org/charts/PDF/U0080.pdf) or \u0080 to \u00FF generate the 
same result when executing the following steps:

1) Create a directory with one extended ASCII character such as À or \u00C0 
(e.g. C:\aaaÀbbb).
2) Move a test class (e.g. InOut.class) to the newly created directory.
3) Profile the test class.

For example:

java -classpath C:\aaaÀbbb -XrunpiAgent:server=enabled InOut

Note that the Hyades Data Collection Engine cannot process the specified 
classpath to find the test class:

The java class is not found:  HeapJniCarTest
*** Bug 76600 has been marked as a duplicate of this bug. ***
*** Bug 76718 has been marked as a duplicate of this bug. ***
Fix checked in 2004/11/23 8:00AM EST.
*** Bug 45142 has been marked as a duplicate of this bug. ***
Verifed the Bluerat profiling components , probe, Leak Analysis, Method and 
line level coverage , Thread view and Call graph with RAD 6.0.0.1 in MArch '05 
on a Japanese machine.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>A ClassNotFoundException is emitted when I try to execute a simple Java Test
Suite that uses a java file (generated from the test suite) located in path that
contains unicode characters.

How to reproduce:

  - I used a Japanese Windows XP
  - create a Java project using a location that contains folder in Japanese or
put some Japanese characters in the project name itself.
  - create a Junit test suite (New &gt; Test &gt; Test Suite &gt; JUnit Test Suite
definition)
  - add a test method (Test Methods tab of the test suite editor)
  - add a new behavior (Behavior tab) an invocation of the test method
previously entered for instance.
  - save the test suite 
  - generate the java file from the test suite (right click on test suite node)
  - create a location file (New... &gt; Test &gt; Test Elements &gt; Location)
  - create an artifact file (New.. &gt; Test &gt; Test Elements &gt; Artifact), associate
the test suite to the artifact
  - create a deployment that uses the location and the artifact previously defined
  - run the test suite using the deployment previously defined

The class loader seems to be unable to get the class under test used in the
JUnit test script.
See attachment for result
Created attachment 14326
NoClassFoundException as execution result
As tested on the 20040920_1414 build (HEAD) of the Hyades Data Collection 
Engine, all extended ASCII characters
(http://www.unicode.org/charts/PDF/U0080.pdf) or \u0080 to \u00FF generate the 
same result when executing the following steps:

1) Create a directory with one extended ASCII character such as À or \u00C0 
(e.g. C:\aaaÀbbb).
2) Move a test class (e.g. InOut.class) to the newly created directory.
3) Profile the test class.

For example:

java -classpath C:\aaaÀbbb -XrunpiAgent:server=enabled InOut

Note that the Hyades Data Collection Engine cannot process the specified 
classpath to find the test class:

The java class is not found:  HeapJniCarTest
*** Bug 76600 has been marked as a duplicate of this bug. ***
*** Bug 76718 has been marked as a duplicate of this bug. ***
Fix checked in 2004/11/23 8:00AM EST.
*** Bug 45142 has been marked as a duplicate of this bug. ***
Verifed the Bluerat profiling components , probe, Leak Analysis, Method and 
line level coverage , Thread view and Call graph with RAD 6.0.0.1 in MArch '05 
on a Japanese machine.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73075" />
    <CreationDate amount="2004-09-01 12:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[source lookup] Workspace jar in project build path prevents source from launcher source path to be shown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If the same jar file is in the build path (without source attachment) of an
arbitrary project and also in the launcher classpath, the debugger will not show
any sources from the launcher source lookup path (the project not beeing defined
on the launcher). Remove the jar file from the build path (without changing
launcher config), and the java source for a class will be shown while debugging.
The default source lookup path for a Java launch config is the same as the 
buildpath. If the class if found first in the jar that does not have source, 
then source will not be shown. Sounds like it's working as expected. If not, 
please provide more explicit steps to reproduce.

Please look on the source lookup tab of the launch config. If the jar without 
source appears first, then all is working as expected.
Created attachment 14359
test case with two projects, see readme in eclipse-73075-1
Can reproduce the problem, and can explain why this is happening:

* The source lookup path is configured as "Default", followed by "src1.jar"
* The default source lookup path contains "test1.jar", since it is on the 
classpath (the default source lookup path is the classpath), which appears 
before "src1.jar".

In the first case, when test1.jar is not on any project classpath, it is 
simply a file in the workspace with no "Java" associations (source 
attachments). Thus, source is not found in the jar, since it does not contain 
a "Main.java" file.

In the second case, test1.jar is now on the buildpath of a project, and 
has "Java" associations (a jar with no source attachment). When we perform the 
source lookup, we find that it the jar has a test.Main.class in it, with no 
source attachment, and thus the result.

Jars on the source lookup path are resolved first as "Java elements" (i.e. if 
they exist as package fragment roots in a Java project), and second as source 
archives.

It's a subtle bug, and it's unclear if we want to do anything about it. In 
general if you place a jar on the source lookup path, you want it to retain 
its "java" settings (source attachments).
We should likely improve the default source lookup resolution to include only 
the source attachments, rather than the binary jars. Currently, the tab shows 
a list of binary jars, rather than the location of the source. This would 
eliminate binary jars that have no source attachments.
Deferred
Deferred till when - any ideas?
post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>If the same jar file is in the build path (without source attachment) of an
arbitrary project and also in the launcher classpath, the debugger will not show
any sources from the launcher source lookup path (the project not beeing defined
on the launcher). Remove the jar file from the build path (without changing
launcher config), and the java source for a class will be shown while debugging.
The default source lookup path for a Java launch config is the same as the 
buildpath. If the class if found first in the jar that does not have source, 
then source will not be shown. Sounds like it's working as expected. If not, 
please provide more explicit steps to reproduce.

Please look on the source lookup tab of the launch config. If the jar without 
source appears first, then all is working as expected.
Created attachment 14359
test case with two projects, see readme in eclipse-73075-1
Can reproduce the problem, and can explain why this is happening:

* The source lookup path is configured as "Default", followed by "src1.jar"
* The default source lookup path contains "test1.jar", since it is on the 
classpath (the default source lookup path is the classpath), which appears 
before "src1.jar".

In the first case, when test1.jar is not on any project classpath, it is 
simply a file in the workspace with no "Java" associations (source 
attachments). Thus, source is not found in the jar, since it does not contain 
a "Main.java" file.

In the second case, test1.jar is now on the buildpath of a project, and 
has "Java" associations (a jar with no source attachment). When we perform the 
source lookup, we find that it the jar has a test.Main.class in it, with no 
source attachment, and thus the result.

Jars on the source lookup path are resolved first as "Java elements" (i.e. if 
they exist as package fragment roots in a Java project), and second as source 
archives.

It's a subtle bug, and it's unclear if we want to do anything about it. In 
general if you place a jar on the source lookup path, you want it to retain 
its "java" settings (source attachments).
We should likely improve the default source lookup resolution to include only 
the source attachments, rather than the binary jars. Currently, the tab shows 
a list of binary jars, rather than the location of the source. This would 
eliminate binary jars that have no source attachments.
Deferred
Deferred till when - any ideas?
post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73076" />
    <CreationDate amount="2004-09-01 12:30:00 -0400" />
    <DupId amount="23064" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide a way to spool long console output into a file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently you have two options for handling console output. Either you can 
tell it to keep an unlimited amount of console lines and risk Eclipse running 
out of memory, or you can tell it to truncate the console after so many 
characters and risk losing information. This request is for having console 
output spooled out to a file so that all the lines will be saved.

I run into this problem a lot because I run test programs under Eclipse, 
either using the Java launcher or the external program launcher. Typically the 
test program will generate a line of output when each tests finishes. I want 
to see those lines scroll by, especially, at first, so I can satisfy myself 
that the tests are working correctly. However if I want to run the test more 
than a few minutes, say overnight, it can bump up against the console limits. 
This is especially true if the tests start to fail, and each failure prints a 
long traceback. I can get many megabytes of output, and the most interesting 
part (where the errors first occurred) is lost if I specified a limit on the 
console size.

Ideally, I would be able to scroll and search in the spooled file no matter 
how big it was, but I know that's hard so I'd be satisfied for the purpose of 
this request to have the file be complete ok disk but have only a portion be 
visible in the console window. Then I can bring up a native text editor like 
TextPad that can handle very long files with ease and read it and search it. A 
toolbar button to export the log or view it in an external editor would be 
handy, but not essential.

Now as far as how often to flush the console backing file, I can see some 
cases where one would want it flushed immediately and some cases where it 
wouldn't matter. Whatever's easiest to do would be ok with me.

It occurs to me that this could be done as part of the new IOConsole or as 
some function of the Debug/Launch mechanism, like a 'tee' type of 
functionality. I'll leave the design up to you.
Marking as a dup of bug 23064. However, this bug does offer some more 
suggestions on how things could work.

*** This bug has been marked as a duplicate of 23064 ***</WithStack>
    <WithOutStack>Currently you have two options for handling console output. Either you can 
tell it to keep an unlimited amount of console lines and risk Eclipse running 
out of memory, or you can tell it to truncate the console after so many 
characters and risk losing information. This request is for having console 
output spooled out to a file so that all the lines will be saved.

I run into this problem a lot because I run test programs under Eclipse, 
either using the Java launcher or the external program launcher. Typically the 
test program will generate a line of output when each tests finishes. I want 
to see those lines scroll by, especially, at first, so I can satisfy myself 
that the tests are working correctly. However if I want to run the test more 
than a few minutes, say overnight, it can bump up against the console limits. 
This is especially true if the tests start to fail, and each failure prints a 
long traceback. I can get many megabytes of output, and the most interesting 
part (where the errors first occurred) is lost if I specified a limit on the 
console size.

Ideally, I would be able to scroll and search in the spooled file no matter 
how big it was, but I know that's hard so I'd be satisfied for the purpose of 
this request to have the file be complete ok disk but have only a portion be 
visible in the console window. Then I can bring up a native text editor like 
TextPad that can handle very long files with ease and read it and search it. A 
toolbar button to export the log or view it in an external editor would be 
handy, but not essential.

Now as far as how often to flush the console backing file, I can see some 
cases where one would want it flushed immediately and some cases where it 
wouldn't matter. Whatever's easiest to do would be ok with me.

It occurs to me that this could be done as part of the new IOConsole or as 
some function of the Debug/Launch mechanism, like a 'tee' type of 
functionality. I'll leave the design up to you.
Marking as a dup of bug 23064. However, this bug does offer some more 
suggestions on how things could work.

*** This bug has been marked as a duplicate of 23064 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73077" />
    <CreationDate amount="2004-09-01 12:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[java launching] user library jars only in runtime classpath if in build path of a project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If a jar file is added to a user library, and this library defined as a
launcher's classpath, then classes from that user library are not found
(ClassNotFoundException). In this (first) setup, the user library is not added
to any build path of a project.

If that user library is added to an arbitrary project build path (project not
beeing set on launcher), the classes are still not found - why should they ;-).

If finally that project (which has user library in build path) is set on
launcher (in the main tab), the classes are found, even though the project
is not added to the classpath of the launcher.
Whe you set the project attributeo on a launch config, the runtime classpath 
corresponds to the project's build path. Need more explicit steps/example to 
reproduce this problem. It would be helpful if you attached a sample project 
and launch config illustrating the problem.
Created attachment 14357
test case, see readme.html

Added the test case, see readme.html
Created attachment 14358
corrected test case, see readme.html

Just found that launchers from test case had wrong source lookup path.
Attaching updated test case.
I see the problem - a user library is implemented as a classpath container, 
which requires a project to resolve the entries. Needs investigation.
Deferred, as we require bug 73455 to be fixed first (which has been deferred).
*** Bug 132501 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>If a jar file is added to a user library, and this library defined as a
launcher's classpath, then classes from that user library are not found
(ClassNotFoundException). In this (first) setup, the user library is not added
to any build path of a project.

If that user library is added to an arbitrary project build path (project not
beeing set on launcher), the classes are still not found - why should they ;-).

If finally that project (which has user library in build path) is set on
launcher (in the main tab), the classes are found, even though the project
is not added to the classpath of the launcher.
Whe you set the project attributeo on a launch config, the runtime classpath 
corresponds to the project's build path. Need more explicit steps/example to 
reproduce this problem. It would be helpful if you attached a sample project 
and launch config illustrating the problem.
Created attachment 14357
test case, see readme.html

Added the test case, see readme.html
Created attachment 14358
corrected test case, see readme.html

Just found that launchers from test case had wrong source lookup path.
Attaching updated test case.
I see the problem - a user library is implemented as a classpath container, 
which requires a project to resolve the entries. Needs investigation.
Deferred, as we require bug 73455 to be fixed first (which has been deferred).
*** Bug 132501 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73078" />
    <CreationDate amount="2004-09-01 13:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ISourceManipulation.delete() tries to run in WorkspaceRoot scheduling rule</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I beginRule() on the underlying IResource as a for the ICompilationUnit I'm
working with. When I invoke delete() on an IField (IMethod, IImportDeclaration,
etc) the delete tries to run within the WorkspaceRoot scheduling rule. This
causes a "inner scope rule doesn't match other scope rule" exception. 

I don't think I should be required to use the entire WS Root as the rule when I
want to delete a field from a single IResource. The delete() operation should be
modified to only require the underlying IResource as the rule it needs not the
entire WorkspaceRoot.
Added getSchedulingRule() on DeleteElementsOperation to return the modifyRule
from the workspace's rule factory. 

Added regression test DeleteTests#deleteField3()
Verified for 3.1M3 with build I20041102</WithStack>
    <WithOutStack>I beginRule() on the underlying IResource as a for the ICompilationUnit I'm
working with. When I invoke delete() on an IField (IMethod, IImportDeclaration,
etc) the delete tries to run within the WorkspaceRoot scheduling rule. This
causes a "inner scope rule doesn't match other scope rule" exception. 

I don't think I should be required to use the entire WS Root as the rule when I
want to delete a field from a single IResource. The delete() operation should be
modified to only require the underlying IResource as the rule it needs not the
entire WorkspaceRoot.
Added getSchedulingRule() on DeleteElementsOperation to return the modifyRule
from the workspace's rule factory. 

Added regression test DeleteTests#deleteField3()
Verified for 3.1M3 with build I20041102</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73079" />
    <CreationDate amount="2004-09-01 13:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[model] ICompilationUnit.createImport() after ICompilationUnit.move() fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Scenerio is this. This is being run inside of a runnable in JavaCore.run(). 

You have an IType and you get the compilation unit for it. 
You invoke ICompilationUnit.move() with a proper existing destination
IPackageFragment. If you try to add imports using createImport() to this
compilation unit it will not work. 

Workaround - creating imports first, and then performing the move works. 

Secondary (related problem). 

After the move, if you do ICompilationUnit.getParent() it still reports its
parent as the old IPackageFragment (not the new one that was where it was
supposed to move to) Also, things like type.getFullyQualifiedName() report the
original name, not the new name.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Scenerio is this. This is being run inside of a runnable in JavaCore.run(). 

You have an IType and you get the compilation unit for it. 
You invoke ICompilationUnit.move() with a proper existing destination
IPackageFragment. If you try to add imports using createImport() to this
compilation unit it will not work. 

Workaround - creating imports first, and then performing the move works. 

Secondary (related problem). 

After the move, if you do ICompilationUnit.getParent() it still reports its
parent as the old IPackageFragment (not the new one that was where it was
supposed to move to) Also, things like type.getFullyQualifiedName() report the
original name, not the new name.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73080" />
    <CreationDate amount="2004-09-01 13:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EValidator.URI_ATTRIBUTE has wrong value</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="174" end="196" />
        <code>(eObject).toString());</code>
      </source_code>
      <source_code type="multicomment">
        <location start="218" end="306" />
        <code>/**
   * This is the ID used for Eclipse markers which are based on diagnostics.
   */</code>
      </source_code>
      <source_code type="assignment">
        <location start="307" end="360" />
        <code>String MARKER = "org.eclipse.emf.ecore.diagnostic";</code>
      </source_code>
      <source_code type="multicomment">
        <location start="361" end="577" />
        <code>/**
   * This is the string for encoding the {@link 
org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */</code>
      </source_code>
      <source_code type="assignment">
        <location start="578" end="609" />
        <code>String URI_ATTRIBUTE = "uri";</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1072" end="1331" />
        <code>/**
   * This is the name of the marker attribute to hold the String reprsentation
of the {@link org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) The attribute name is declared as "diagnostic" rather than "uri"</Line>
          <Line>2) The comment for URI_ATTRIBUTE is confusing. Suggest:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>EclipseResourcesUtil.createMarkers(IFile, Diagnostic)
make the calls:
file.createMarker(EValidator.MARKER)
and
marker.setAttribute(EValidator.URI_ATTRIBUTE, EcoreUtil.getURI
(eObject).toString());

And EValidator has 
  /**
   * This is the ID used for Eclipse markers which are based on diagnostics.
   */
  String MARKER = "org.eclipse.emf.ecore.diagnostic";

  /**
   * This is the string for encoding the {@link 
org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */
  String URI_ATTRIBUTE = "uri";

Now the org.eclipse.emf.ecore plugin.xml has the following


&lt;extension id="diagnostic" name="%_UI_EMFDiagnostic_marker" 
point="org.eclipse.core.resources.markers"&gt;
  &lt;super type="org.eclipse.core.resources.problemmarker" /&gt; 
  &lt;persistent value="true" /&gt; 
  &lt;attribute name="diagnostic" /&gt; 
  &lt;/extension&gt;

There are two problems here
1) The attribute name is declared as "diagnostic" rather than "uri"
2) The comment for URI_ATTRIBUTE is confusing. Suggest:
  /**
   * This is the name of the marker attribute to hold the String reprsentation
of the {@link org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */
The fixes have been applied to for the 2.1.0 CVS stream.
Fixed in most recent 2.1.0 build
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>EclipseResourcesUtil.createMarkers(IFile, Diagnostic)
make the calls:
file.createMarker(EValidator.MARKER)
and
marker.setAttribute(EValidator.URI_ATTRIBUTE, EcoreUtil.getURI
(eObject).toString());

And EValidator has 
  /**
   * This is the ID used for Eclipse markers which are based on diagnostics.
   */
  String MARKER = "org.eclipse.emf.ecore.diagnostic";

  /**
   * This is the string for encoding the {@link 
org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */
  String URI_ATTRIBUTE = "uri";

Now the org.eclipse.emf.ecore plugin.xml has the following


&lt;extension id="diagnostic" name="%_UI_EMFDiagnostic_marker" 
point="org.eclipse.core.resources.markers"&gt;
  &lt;super type="org.eclipse.core.resources.problemmarker" /&gt; 
  &lt;persistent value="true" /&gt; 
  &lt;attribute name="diagnostic" /&gt; 
  &lt;/extension&gt;

There are two problems here
1) The attribute name is declared as "diagnostic" rather than "uri"
2) The comment for URI_ATTRIBUTE is confusing. Suggest:
  /**
   * This is the name of the marker attribute to hold the String reprsentation
of the {@link org.eclipse.emf.ecore.util.EcoreUtil#getURI URI} 
   * of the object that is the target of a marker.
   * @see org.eclipse.emf.ecore.util.EcoreUtil#getURI
   */
The fixes have been applied to for the 2.1.0 CVS stream.
Fixed in most recent 2.1.0 build
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73081" />
    <CreationDate amount="2004-09-01 13:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inconsistant type cast warning.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="41" end="102" />
        <code>public int hashCode() {
        return (int) value;
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="189" end="269" />
        <code>public String toString() {
        return String.valueOf((int) value);
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>"value" is declared as a short ivar in:

    public int hashCode() {
        return (int) value;
    }

Which warns: "Unnecessary cast to type int for expression of type short"

But here:

    public String toString() {
        return String.valueOf((int) value);
    }

I get: "Unnecessary cast to type int for expression of type short. It is already
compatible with the argument type int"

Shouldn't the messages be the same? If there is a subtle difference it should be
better explained. Thanks.

Version 3.1.M1
Merged to 2 problems in one as suggested. The extra message was indeed of little
value.
Fixed
Verified in I20050214</WithStack>
    <WithOutStack>"value" is declared as a short ivar in:

    public int hashCode() {
        return (int) value;
    }

Which warns: "Unnecessary cast to type int for expression of type short"

But here:

    public String toString() {
        return String.valueOf((int) value);
    }

I get: "Unnecessary cast to type int for expression of type short. It is already
compatible with the argument type int"

Shouldn't the messages be the same? If there is a subtle difference it should be
better explained. Thanks.

Version 3.1.M1
Merged to 2 problems in one as suggested. The extra message was indeed of little
value.
Fixed
Verified in I20050214</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73082" />
    <CreationDate amount="2004-09-01 13:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>[Encoding] Need an encoding extension point</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We need to have an extension point for encodings. All it need have is the IDs 
of the encodings that are to be added to the list.

It will require verification and indication of unavailable encodings.
Scenario:
Vladimir is working in the Russion locale, changes his default encoding to
Cyrillic (KOI8-R), and opens a file in the text editor.  He then switches to a
VM that does not have this encoding installed.  The editor is therefore unable
to convert from bytes to chars.  How should this be indicated in the text
editor, and the rest of the UI (encoding pref page)?
Implemented for build &gt;20040902.

I have added a new extension point (encodings) that takes a sequence of 
encoding (and element with just a name which corresponds to the Charset.getName
()).

I deprecated the old hard coded encodings and replaced them with the same 
values defined by the extension point . I'll delete them when I get the OK 
from JDT.

See WorkbenchEncoding for the changes,
Verified in build 200409210800</WithStack>
    <WithOutStack>We need to have an extension point for encodings. All it need have is the IDs 
of the encodings that are to be added to the list.

It will require verification and indication of unavailable encodings.
Scenario:
Vladimir is working in the Russion locale, changes his default encoding to
Cyrillic (KOI8-R), and opens a file in the text editor.  He then switches to a
VM that does not have this encoding installed.  The editor is therefore unable
to convert from bytes to chars.  How should this be indicated in the text
editor, and the rest of the UI (encoding pref page)?
Implemented for build &gt;20040902.

I have added a new extension point (encodings) that takes a sequence of 
encoding (and element with just a name which corresponds to the Charset.getName
()).

I deprecated the old hard coded encodings and replaced them with the same 
values defined by the extension point . I'll delete them when I get the OK 
from JDT.

See WorkbenchEncoding for the changes,
Verified in build 200409210800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73083" />
    <CreationDate amount="2004-09-01 13:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Encoding] Need to verify encodings and indicate unavailable ones</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When the encodings are set up we need to ensure  that they are in the list of 
valid encodings available from the VM.

Those that are not should be indicated as such and not be selectable in the UI.
Nick was asking for a benchmark of Charset.avaiableCharsets. The first call to 
it took 125ms on my machine - subsequent calls were less than 1 ms (I assume 
they are caching the list).

As I do this lazily 125ms when startup has already occured once per session 
seems fine to me. BTW if you are interested my machine returns 49 available 
encodings.
That's not too bad.  However, the Javadoc for Charset.availableCharsets says:

     * &lt;p&gt; The invocation of this method, and the subsequent use of the
     * resulting map, may cause time-consuming disk or network I/O operations
     * to occur.  This method is provided for applications that need to
     * enumerate all of the available charsets, for example to allow user
     * charset selection.  This method is not used by the {@link #forName
     * forName} method, which instead employs an efficient incremental lookup
     * algorithm.

Suggest timing getDisplayName() over all charsets.  Note that the default
implementation just returns the canonical name (getName()), but subclasses can
override (and CharsetProvider's do implement their own subclasses).
While doing this, should check that getDisplayName() is actually implemented to
give us what we want.

It would also be worth looking at the memory footprint cost of this.  It's
instantiating the actual Charset objects, not just building a table of their
names.  Large tables are often required to do encoding/decoding.

If the number of extensions are small compared to the total number of available
charsets, then it may be better to use Charset.isSupported(String) for checking.
I just followed up on Nicks suggestion. If you do not use avaialbleCharsets at 
any time is averages about 3 ms to do the isSupported() check.
I am now verifying the ones specified in the extension point and writing to 
the log when they are invalid. Invalid encodings will not be shown in the UI.

I have also added a test suite for this.
Verified in 20041102</WithStack>
    <WithOutStack>When the encodings are set up we need to ensure  that they are in the list of 
valid encodings available from the VM.

Those that are not should be indicated as such and not be selectable in the UI.
Nick was asking for a benchmark of Charset.avaiableCharsets. The first call to 
it took 125ms on my machine - subsequent calls were less than 1 ms (I assume 
they are caching the list).

As I do this lazily 125ms when startup has already occured once per session 
seems fine to me. BTW if you are interested my machine returns 49 available 
encodings.
That's not too bad.  However, the Javadoc for Charset.availableCharsets says:

     * &lt;p&gt; The invocation of this method, and the subsequent use of the
     * resulting map, may cause time-consuming disk or network I/O operations
     * to occur.  This method is provided for applications that need to
     * enumerate all of the available charsets, for example to allow user
     * charset selection.  This method is not used by the {@link #forName
     * forName} method, which instead employs an efficient incremental lookup
     * algorithm.

Suggest timing getDisplayName() over all charsets.  Note that the default
implementation just returns the canonical name (getName()), but subclasses can
override (and CharsetProvider's do implement their own subclasses).
While doing this, should check that getDisplayName() is actually implemented to
give us what we want.

It would also be worth looking at the memory footprint cost of this.  It's
instantiating the actual Charset objects, not just building a table of their
names.  Large tables are often required to do encoding/decoding.

If the number of extensions are small compared to the total number of available
charsets, then it may be better to use Charset.isSupported(String) for checking.
I just followed up on Nicks suggestion. If you do not use avaialbleCharsets at 
any time is averages about 3 ms to do the isSupported() check.
I am now verifying the ones specified in the extension point and writing to 
the log when they are invalid. Invalid encodings will not be shown in the UI.

I have also added a test suite for this.
Verified in 20041102</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73084" />
    <CreationDate amount="2004-09-01 14:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Datapools: Eclipse Editor - exception while editing datapool if also open in other view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Datapools: Eclipse Editor - exception while editing datapool if also open in 
other view.

In some products, shared datapools can be opened for edtiing in a window by 
itself in an editor and/or can be edited in a viewer. User can open both at the 
same time, but only one view shows the data table, the other view hides the 
table. If editing takes place in this case (record removal for example), NPE 
occur. datapool hangs with busy cursor and failed to update correctly.

This is due to both datapool tables are listeners on the same datapool object 
while the hidden table actually hold a null handle of the datapool.  Fix is to 
remove the table as a listenser when it's hidden, and re-add the listener when 
the table is shown.
changing priority to P2.
fixed in HEAD.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Datapools: Eclipse Editor - exception while editing datapool if also open in 
other view.

In some products, shared datapools can be opened for edtiing in a window by 
itself in an editor and/or can be edited in a viewer. User can open both at the 
same time, but only one view shows the data table, the other view hides the 
table. If editing takes place in this case (record removal for example), NPE 
occur. datapool hangs with busy cursor and failed to update correctly.

This is due to both datapool tables are listeners on the same datapool object 
while the hidden table actually hold a null handle of the datapool.  Fix is to 
remove the table as a listenser when it's hidden, and re-add the listener when 
the table is shown.
changing priority to P2.
fixed in HEAD.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73085" />
    <CreationDate amount="2004-09-01 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Themes] Need API to programatically configure theme elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>There needs to be a way for client code to access the underling definitions for
colours and fonts and to programatically set their current value.  It is
possible to change the value that lives in the actual color registry but this
change is not currently persisted across eclipse invocations.
Not going to happen for 3.1.  Deferring.
Susan is now responsible for watching the [Themes] category.</WithStack>
    <WithOutStack>There needs to be a way for client code to access the underling definitions for
colours and fonts and to programatically set their current value.  It is
possible to change the value that lives in the actual color registry but this
change is not currently persisted across eclipse invocations.
Not going to happen for 3.1.  Deferring.
Susan is now responsible for watching the [Themes] category.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73086" />
    <CreationDate amount="2004-09-01 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Encoding] Remove hard coded encodings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When we have an encoding extension point the current hard coded values should 
be moved to it in both the ide and the workbench.
It appears that no one is using the hard coded values currently so I will be 
deleting them for the 20040908 integration build
Sorry - should be 20040915
getStandardEncodings has been deleted. I have released the change to HEAD.
Verified in 200409210800</WithStack>
    <WithOutStack>When we have an encoding extension point the current hard coded values should 
be moved to it in both the ide and the workbench.
It appears that no one is using the hard coded values currently so I will be 
deleting them for the 20040908 integration build
Sorry - should be 20040915
getStandardEncodings has been deleted. I have released the change to HEAD.
Verified in 200409210800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73087" />
    <CreationDate amount="2004-09-01 14:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Handle name change of main type correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) From a class opened in the VE (extend JFrame), do a Save As..., giving it a</Line>
          <Line>new name.</Line>
          <Line>2) Then over the error on the class declaration line do a code assist and hit</Line>
          <Line>rename class to correct new name</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>If you do the following scenario there are problems:

1) From a class opened in the VE (extend JFrame), do a Save As..., giving it a
new name.
2) Then over the error on the class declaration line do a code assist and hit
rename class to correct new name

The problem we have is the TypeResolver thinks the main type is the old type and
this is now invalid and any resolves that are local will fail.

We need to add to TypeResolver a method that says setMainType(IType) and from
that we will refresh the main type hierarchy and clear anything cached due to
hierarchy.  We could probably get smarter and only clear immediately within
maintype cache and leave cache from inherited alone.

This needs to be called only by code gen snippet parser when it detects a change
of the class name. This SHOULD NOT be called on reload. In that case we want a
new TypeResolver (which we do now).
this now works ok in VE 1.1
closing</WithStack>
    <WithOutStack>If you do the following scenario there are problems:

1) From a class opened in the VE (extend JFrame), do a Save As..., giving it a
new name.
2) Then over the error on the class declaration line do a code assist and hit
rename class to correct new name

The problem we have is the TypeResolver thinks the main type is the old type and
this is now invalid and any resolves that are local will fail.

We need to add to TypeResolver a method that says setMainType(IType) and from
that we will refresh the main type hierarchy and clear anything cached due to
hierarchy.  We could probably get smarter and only clear immediately within
maintype cache and leave cache from inherited alone.

This needs to be called only by code gen snippet parser when it detects a change
of the class name. This SHOULD NOT be called on reload. In that case we want a
new TypeResolver (which we do now).
this now works ok in VE 1.1
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73088" />
    <CreationDate amount="2004-09-01 14:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[misc] Javadoc view does not handle &lt;br/&gt; properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="39" end="872" />
        <code>/**
 * &lt;p&gt;Provides HTML and XML entity utilities.&lt;/p&gt;
 *
 * @see &lt;a
href="http://hotwired.lycos.com/webmonkey/reference/special_characters/"&gt;ISO
Entities&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html32#latin1"&gt;HTML 3.2 Character
Entities for ISO Latin-1&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html40/sgml/entities.html"&gt;HTML
4.0 Character entity references&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/html401/charset.html#h-5.3"&gt;HTML 4.01
Character References&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a
href="http://www.w3.org/TR/html401/charset.html#code-position"&gt;HTML 4.01 Code
positions&lt;/a&gt;
 *
 * @author &lt;a href="mailto:alex@purpletech.com"&gt;Alexander Day Chaffee&lt;/a&gt;
 * @author &lt;a href="mailto:ggregory@seagullsw.com"&gt;Gary Gregory&lt;/a&gt;
 * @since 2.0
 * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Version 3.1.M1.
For the class comment:

/**
 * &lt;p&gt;Provides HTML and XML entity utilities.&lt;/p&gt;
 *
 * @see &lt;a
href="http://hotwired.lycos.com/webmonkey/reference/special_characters/"&gt;ISO
Entities&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html32#latin1"&gt;HTML 3.2 Character
Entities for ISO Latin-1&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html40/sgml/entities.html"&gt;HTML
4.0 Character entity references&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/html401/charset.html#h-5.3"&gt;HTML 4.01
Character References&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a
href="http://www.w3.org/TR/html401/charset.html#code-position"&gt;HTML 4.01 Code
positions&lt;/a&gt;
 *
 * @author &lt;a href="mailto:alex@purpletech.com"&gt;Alexander Day Chaffee&lt;/a&gt;
 * @author &lt;a href="mailto:ggregory@seagullsw.com"&gt;Gary Gregory&lt;/a&gt;
 * @since 2.0
 * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
 */

The Sun Javadoc 1.4.2_05 produces something that looks like one @see perline but
the Javadoc view adds one blank line between each line. Shouldn't the Javadoc
view be the same as Sun's Javadoc produced HTML?
The Javadoc format is not speced. Don't put a &lt;br&gt; if you don't want to have one.</WithStack>
    <WithOutStack>Version 3.1.M1.
For the class comment:

/**
 * &lt;p&gt;Provides HTML and XML entity utilities.&lt;/p&gt;
 *
 * @see &lt;a
href="http://hotwired.lycos.com/webmonkey/reference/special_characters/"&gt;ISO
Entities&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html32#latin1"&gt;HTML 3.2 Character
Entities for ISO Latin-1&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/REC-html40/sgml/entities.html"&gt;HTML
4.0 Character entity references&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a href="http://www.w3.org/TR/html401/charset.html#h-5.3"&gt;HTML 4.01
Character References&lt;/a&gt;
 * @see &lt;br/&gt;&lt;a
href="http://www.w3.org/TR/html401/charset.html#code-position"&gt;HTML 4.01 Code
positions&lt;/a&gt;
 *
 * @author &lt;a href="mailto:alex@purpletech.com"&gt;Alexander Day Chaffee&lt;/a&gt;
 * @author &lt;a href="mailto:ggregory@seagullsw.com"&gt;Gary Gregory&lt;/a&gt;
 * @since 2.0
 * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
 */

The Sun Javadoc 1.4.2_05 produces something that looks like one @see perline but
the Javadoc view adds one blank line between each line. Shouldn't the Javadoc
view be the same as Sun's Javadoc produced HTML?
The Javadoc format is not speced. Don't put a &lt;br&gt; if you don't want to have one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73089" />
    <CreationDate amount="2004-09-01 14:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Themes] Need reusable colour/font editing controls</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Along the lines of Bug 73085 we need to provide controls that other applications
may embed that allow the user to edit specific colours and fonts.  We may also
want to provide a control that allows the editing of a collection of fonts
anchored at a given category (much like a category specific preference page that
looks much like the global preference page we have now).
*** Bug 73373 has been marked as a duplicate of this bug. ***
Susan is now responsible for watching the [Themes] category.</WithStack>
    <WithOutStack>Along the lines of Bug 73085 we need to provide controls that other applications
may embed that allow the user to edit specific colours and fonts.  We may also
want to provide a control that allows the editing of a collection of fonts
anchored at a given category (much like a category specific preference page that
looks much like the global preference page we have now).
*** Bug 73373 has been marked as a duplicate of this bug. ***
Susan is now responsible for watching the [Themes] category.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73090" />
    <CreationDate amount="2004-09-01 14:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Update Manager still requires a restart sometimes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In 3.1M1, sometimes when I use the update manager to update a feature it gives 
me the option to install it without doing a restart, and sometimes it tells me 
a restart is required. 

I'm not sure but I think it has something to do with the fact that I am using 
multiple install locations. For example when I used update manager to install 
the Perfoce plug-in, I told it to put that in an extension directory called 
c:\Program Files\Eclipse Extensions\Perforce\eclipse. I was required to 
restart my workbench. Yesterday when there was a new version, Update installed 
it correctly but told me I had to restart my workbench again. Back when I was 
using only one install location (the default c:\program files\eclipse) I don't 
recall having this problem.

To test this I created my own simple plugin (just has a text editor in it), 
created a feature and an update site, and used update manager to install that 
in its own directory (c:\program files\eclipse extensions\research). Sure 
enough, restart was required after the install so I restarted. Then I bumped 
the plug-in and feature version number, recreated the update site, turned on 
the option to perform an automatic update each time the platform is restarted, 
and restarted Eclipse. When it came up it discovered the new version, 
installed it, and made me restart Eclipse again.
When a feature install brings in new plugins only, for those courageous enough 
to "apply now", you can get the changes dynamically applied to that eclipse 
instance. When updating exiting plugins or disabling/uninstalling, existing 
plugins are "touched", so a restart is needed.

The number of sites should be irrelevant. Please re-open if you see a 
different behavior than what I described above.
I think you're right, guess I was just assuming it should do updates without 
restart as well as initial installs. If there's a bug open to add this 
feature, please turn this into a dup.
Jeff and I talked about dynamic updates in 3.1 but I don't remember the bug 
number. I will try to dig a bit and dup this againt it.</WithStack>
    <WithOutStack>In 3.1M1, sometimes when I use the update manager to update a feature it gives 
me the option to install it without doing a restart, and sometimes it tells me 
a restart is required. 

I'm not sure but I think it has something to do with the fact that I am using 
multiple install locations. For example when I used update manager to install 
the Perfoce plug-in, I told it to put that in an extension directory called 
c:\Program Files\Eclipse Extensions\Perforce\eclipse. I was required to 
restart my workbench. Yesterday when there was a new version, Update installed 
it correctly but told me I had to restart my workbench again. Back when I was 
using only one install location (the default c:\program files\eclipse) I don't 
recall having this problem.

To test this I created my own simple plugin (just has a text editor in it), 
created a feature and an update site, and used update manager to install that 
in its own directory (c:\program files\eclipse extensions\research). Sure 
enough, restart was required after the install so I restarted. Then I bumped 
the plug-in and feature version number, recreated the update site, turned on 
the option to perform an automatic update each time the platform is restarted, 
and restarted Eclipse. When it came up it discovered the new version, 
installed it, and made me restart Eclipse again.
When a feature install brings in new plugins only, for those courageous enough 
to "apply now", you can get the changes dynamically applied to that eclipse 
instance. When updating exiting plugins or disabling/uninstalling, existing 
plugins are "touched", so a restart is needed.

The number of sites should be irrelevant. Please re-open if you see a 
different behavior than what I described above.
I think you're right, guess I was just assuming it should do updates without 
restart as well as initial installs. If there's a bug open to add this 
feature, please turn this into a dup.
Jeff and I talked about dynamic updates in 3.1 but I don't remember the bug 
number. I will try to dig a bit and dup this againt it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73091" />
    <CreationDate amount="2004-09-01 14:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in StatisticsSession.computeStats</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>latest from head

(using the releng bucket for lack of a better one)

While running some new tests that don't have a baseline in the database
(actually, there is no database), I get an NPE as follows because fDataPoints is
null.

Thread [main] (Suspended (exception NullPointerException))
	StatisticsSession.computeStats(Dimension) line: 70
	StatisticsSession.getStats(Dimension) line: 60
	StatisticsSession.getAverage(Dimension) line: 42
	RelativeBandChecker.test(StatisticsSession, StatisticsSession, StringBuffer)
line: 33
	DBEvaluator.evaluate(PerformanceMeter) line: 59
	Performance.assertPerformance(PerformanceMeter) line: 61
	EditorSwitchTest.testEditorSwitching() line: 100
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	EditorSwitchTest(TestCase).runTest() line: 154
	EditorSwitchTest(TestCase).runBare() line: 127
	TestResult$1.protect() line: 106
	TestResult.runProtected(Test, Protectable) line: 124
	TestResult.run(TestCase) line: 109
	EditorSwitchTest(TestCase).run(TestResult) line: 118
	TestSuite.runTest(Test, TestResult) line: 208
	TestSuite.run(TestResult) line: 203
	UIPerformanceTestSuite(TestSuite).runTest(Test, TestResult) line: 208
	UIPerformanceTestSuite(TestSuite).run(TestResult) line: 203
	UIPerformanceTestSetup(TestDecorator).basicRun(TestResult) line: 22
	TestSetup$1.protect() line: 19
	TestResult.runProtected(Test, Protectable) line: 124
	UIPerformanceTestSetup(TestSetup).run(TestResult) line: 23
	RemotePluginTestRunner(RemoteTestRunner).runTests(String[], String) line: 421
	RemotePluginTestRunner(RemoteTestRunner).run() line: 305
	RemotePluginTestRunner.main(String[]) line: 30
	UITestApplication$1.run() line: 92
	RunnableLock.run() line: 35
	UISynchronizer(Synchronizer).runAsyncMessages() line: 106
	Display.runAsyncMessages() line: 2760
	Display.readAndDispatch() line: 2445
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1435
	Workbench.runUI() line: 1406
	Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 263
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144
	IDEApplication.run(Object) line: 102
	UITestApplication.run(Object) line: 33
	PlatformActivator$1.run(Object) line: 335
	EclipseStarter.run(Object) line: 273
	EclipseStarter.run(String[], Runnable) line: 129
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 183
	Main.run(String[]) line: 644
	Main.main(String[]) line: 628
has been fixed in HEAD</WithStack>
    <WithOutStack>latest from head

(using the releng bucket for lack of a better one)

While running some new tests that don't have a baseline in the database
(actually, there is no database), I get an NPE as follows because fDataPoints is
null.

Thread [main] (Suspended (exception NullPointerException))
	StatisticsSession.computeStats(Dimension) line: 70
	StatisticsSession.getStats(Dimension) line: 60
	StatisticsSession.getAverage(Dimension) line: 42
	RelativeBandChecker.test(StatisticsSession, StatisticsSession, StringBuffer)
line: 33
	DBEvaluator.evaluate(PerformanceMeter) line: 59
	Performance.assertPerformance(PerformanceMeter) line: 61
	EditorSwitchTest.testEditorSwitching() line: 100
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	EditorSwitchTest(TestCase).runTest() line: 154
	EditorSwitchTest(TestCase).runBare() line: 127
	TestResult$1.protect() line: 106
	TestResult.runProtected(Test, Protectable) line: 124
	TestResult.run(TestCase) line: 109
	EditorSwitchTest(TestCase).run(TestResult) line: 118
	TestSuite.runTest(Test, TestResult) line: 208
	TestSuite.run(TestResult) line: 203
	UIPerformanceTestSuite(TestSuite).runTest(Test, TestResult) line: 208
	UIPerformanceTestSuite(TestSuite).run(TestResult) line: 203
	UIPerformanceTestSetup(TestDecorator).basicRun(TestResult) line: 22
	TestSetup$1.protect() line: 19
	TestResult.runProtected(Test, Protectable) line: 124
	UIPerformanceTestSetup(TestSetup).run(TestResult) line: 23
	RemotePluginTestRunner(RemoteTestRunner).runTests(String[], String) line: 421
	RemotePluginTestRunner(RemoteTestRunner).run() line: 305
	RemotePluginTestRunner.main(String[]) line: 30
	UITestApplication$1.run() line: 92
	RunnableLock.run() line: 35
	UISynchronizer(Synchronizer).runAsyncMessages() line: 106
	Display.runAsyncMessages() line: 2760
	Display.readAndDispatch() line: 2445
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1435
	Workbench.runUI() line: 1406
	Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 263
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144
	IDEApplication.run(Object) line: 102
	UITestApplication.run(Object) line: 33
	PlatformActivator$1.run(Object) line: 335
	EclipseStarter.run(Object) line: 273
	EclipseStarter.run(String[], Runnable) line: 129
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 183
	Main.run(String[]) line: 644
	Main.main(String[]) line: 628
has been fixed in HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73092" />
    <CreationDate amount="2004-09-01 15:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[IDE] WorkspaceModifyOperation does not avoid updates, although comment indicates it does</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From the class comment of WorkspaceModifyOperation:
 * The primary 
 * consequence of using this operation is that events which typically occur as a
 * result of workspace changes (such as the firing of resource deltas, 
 * performance of autobuilds, etc.) are deferred until the outermost operation
 * has successfully completed.

However this doesn't appear to be true in Eclipse 3.0.  It is possible that the 
notification manager will send out an intermediate ResourceModifyEvent during 
the execution.  It seems that this is because of this line:

IDEWorkbenchPlugin.getPluginWorkspace().run(workspaceRunnable, rule, 
IResource.NONE, monitor);

If IWorkspace.AVOID_UPDATE were passed (instead of IResource.NONE) I believe 
that these intermediate events would not occur.  Probably either the comment or 
the implementation should be changed.  Also as a side request it would be nice 
if this parameter could be configurable through the API of this class.
Possible regression?
What was the behaviour you were seeing in 2.1?
I assume the question was for me.  In 2.1, no resource change events would be 
fired until the end of the workspace modify operation.  The 2.1 behavior was 
the same as passing IWorkspace.AVOID_UPDATE.  Passing IResource.NONE gives you 
behavior that is only available in 3.0.

Also notice that IWorkspace.run
(IWorkspaceRunnable,ISchedulingRule,int,IProgressMonitor monitor) is not 
available in 3.0.  Only the 2 argument run method was available, which 
(according to the javadoc) is equivalent to passing IWorkspace.AVOID_UPDATE to 
the new 4 argument version.
*** Bug 194013 has been marked as a duplicate of this bug. ***
Created attachment 72221
Suggested wording

The documentation should be updated. Here is a suggested wording.
Thanks, that makes it indeed more clear. Would it additionally make sense to make the IResource.NONE vs. IWorkspace.AVOID_UPDATE configurable through a setter or a protected hook method? In our case, we really need the behavior that *no* notifications are sent (workaround is easy, we simply call the run() method with AVOID_UPDATE ourselves).
Patch released for build &gt;20070628. Thanks John
Verified in  I20070807-0010</WithStack>
    <WithOutStack>From the class comment of WorkspaceModifyOperation:
 * The primary 
 * consequence of using this operation is that events which typically occur as a
 * result of workspace changes (such as the firing of resource deltas, 
 * performance of autobuilds, etc.) are deferred until the outermost operation
 * has successfully completed.

However this doesn't appear to be true in Eclipse 3.0.  It is possible that the 
notification manager will send out an intermediate ResourceModifyEvent during 
the execution.  It seems that this is because of this line:

IDEWorkbenchPlugin.getPluginWorkspace().run(workspaceRunnable, rule, 
IResource.NONE, monitor);

If IWorkspace.AVOID_UPDATE were passed (instead of IResource.NONE) I believe 
that these intermediate events would not occur.  Probably either the comment or 
the implementation should be changed.  Also as a side request it would be nice 
if this parameter could be configurable through the API of this class.
Possible regression?
What was the behaviour you were seeing in 2.1?
I assume the question was for me.  In 2.1, no resource change events would be 
fired until the end of the workspace modify operation.  The 2.1 behavior was 
the same as passing IWorkspace.AVOID_UPDATE.  Passing IResource.NONE gives you 
behavior that is only available in 3.0.

Also notice that IWorkspace.run
(IWorkspaceRunnable,ISchedulingRule,int,IProgressMonitor monitor) is not 
available in 3.0.  Only the 2 argument run method was available, which 
(according to the javadoc) is equivalent to passing IWorkspace.AVOID_UPDATE to 
the new 4 argument version.
*** Bug 194013 has been marked as a duplicate of this bug. ***
Created attachment 72221
Suggested wording

The documentation should be updated. Here is a suggested wording.
Thanks, that makes it indeed more clear. Would it additionally make sense to make the IResource.NONE vs. IWorkspace.AVOID_UPDATE configurable through a setter or a protected hook method? In our case, we really need the behavior that *no* notifications are sent (workaround is easy, we simply call the run() method with AVOID_UPDATE ourselves).
Patch released for build &gt;20070628. Thanks John
Verified in  I20070807-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73093" />
    <CreationDate amount="2004-09-01 15:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Javadoc] Make all javadoc compiler warning options available from command line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When using the Eclipse Java compiler in batch mode, full control over the 
warning options should be provided.  As of 3.0, this does not appear to be the 
case:

I cannot control the scope of checking for missing Javadoc comments to only 
public classes and members (but I would want to leave checking for missing 
tags, bad syntax, and style issues to all existing Javadoc, even on private 
members).

I cannot control the sub-options to some of the other checks, such as the 
checks for hidden fields, unused parameters, etc.
You're right for Javadoc compiler options. There aren't all accessible using
Java compiler in batch mode.
But I don't think you're right for others. Hidden fields and unused parameters
are accessible using: -warn:fieldHiding,unusedArgument

Defer post 3.1
Given the discussions in bug 178923, could someone please reconsider the state of this bug.  I presume it is too late for 3.3, but can it be considered for Eclipse 3.4 (or whatever the next release number is)?
Reopen as LATER is deprecated...
Unfortunately we ran out of time again. Help fixing this would be appreciated.
Ownership has changed for the javadoc comments bugs, but I surely will not have enough time to fix your bug during the 3.5 development process, hence set its priority to P5.
Please provide a patch if you definitely need the bug to be fixed in this
version and I'll have a look at it...
TIA</WithStack>
    <WithOutStack>When using the Eclipse Java compiler in batch mode, full control over the 
warning options should be provided.  As of 3.0, this does not appear to be the 
case:

I cannot control the scope of checking for missing Javadoc comments to only 
public classes and members (but I would want to leave checking for missing 
tags, bad syntax, and style issues to all existing Javadoc, even on private 
members).

I cannot control the sub-options to some of the other checks, such as the 
checks for hidden fields, unused parameters, etc.
You're right for Javadoc compiler options. There aren't all accessible using
Java compiler in batch mode.
But I don't think you're right for others. Hidden fields and unused parameters
are accessible using: -warn:fieldHiding,unusedArgument

Defer post 3.1
Given the discussions in bug 178923, could someone please reconsider the state of this bug.  I presume it is too late for 3.3, but can it be considered for Eclipse 3.4 (or whatever the next release number is)?
Reopen as LATER is deprecated...
Unfortunately we ran out of time again. Help fixing this would be appreciated.
Ownership has changed for the javadoc comments bugs, but I surely will not have enough time to fix your bug during the 3.5 development process, hence set its priority to P5.
Please provide a patch if you definitely need the bug to be fixed in this
version and I'll have a look at it...
TIA</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73094" />
    <CreationDate amount="2004-09-01 15:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Show length of selection in status box</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I've used other editors before that display various bits of information as the
user changes selection, selects a line, etc.
One of the bits of info I like to see is when I make a selection the status
window tells me how many characters are in my selection.</WithStack>
    <WithOutStack>I've used other editors before that display various bits of information as the
user changes selection, selects a line, etc.
One of the bits of info I like to see is when I make a selection the status
window tells me how many characters are in my selection.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73095" />
    <CreationDate amount="2004-09-01 15:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AbstractReconciler.Listener should check fThread != null</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="236" end="612" />
        <code>public void documentChanged(DocumentEvent e) {
			// will get a NPE here if notified after uninstall
			if (!fThread.isDirty()&amp;&amp; fThread.isAlive())
				aboutToBeReconciled();
			
			if (fProgressMonitor != null &amp;&amp; fThread.isActive())
				fProgressMonitor.setCanceled(true);
				
			if (fIsIncrementalReconciler)
				createDirtyRegion(e);
				
			
			fThread.reset();
			
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>AbstractReconciler.Listener should check fThread != null

This is because other people may be holding onto a copy the listener
for delayed notification (in order to be thread safe), and 
document changed may be called after uninstall.

		public void documentChanged(DocumentEvent e) {
			// will get a NPE here if notified after uninstall
			if (!fThread.isDirty()&amp;&amp; fThread.isAlive())
				aboutToBeReconciled();
			
			if (fProgressMonitor != null &amp;&amp; fThread.isActive())
				fProgressMonitor.setCanceled(true);
				
			if (fIsIncrementalReconciler)
				createDirtyRegion(e);
				
			
			fThread.reset();
			
		}
I'm not sure reading your comment. Do you mean a copy of the listener? If so,
please note that in general you cannot copy the listener and then later expect
that it still works after it has been removed by its owner. Example: copy some
SWT listener and trigger the listener after the widget has been disposed: you
will most likely run into some exception.

Having said that, if it is important for you that we protect fThread we can do so.
Waiting for answer.
Get rid of deprecated state.
.</WithStack>
    <WithOutStack>AbstractReconciler.Listener should check fThread != null

This is because other people may be holding onto a copy the listener
for delayed notification (in order to be thread safe), and 
document changed may be called after uninstall.

		public void documentChanged(DocumentEvent e) {
			// will get a NPE here if notified after uninstall
			if (!fThread.isDirty()&amp;&amp; fThread.isAlive())
				aboutToBeReconciled();
			
			if (fProgressMonitor != null &amp;&amp; fThread.isActive())
				fProgressMonitor.setCanceled(true);
				
			if (fIsIncrementalReconciler)
				createDirtyRegion(e);
				
			
			fThread.reset();
			
		}
I'm not sure reading your comment. Do you mean a copy of the listener? If so,
please note that in general you cannot copy the listener and then later expect
that it still works after it has been removed by its owner. Example: copy some
SWT listener and trigger the listener after the widget has been disposed: you
will most likely run into some exception.

Having said that, if it is important for you that we protect fThread we can do so.
Waiting for answer.
Get rid of deprecated state.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73096" />
    <CreationDate amount="2004-09-01 15:58:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP ServerTools" />
    <component amount="wst.server" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>review of initial wtp.server APIs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Opening this PR as a convenient place to post API-related review comments, etc.
Created attachment 14330
Web Tools Server - API Summary
Created attachment 14768
WTP Server Core APIs - early notes

A few powerpoint slides covering earlist impressions coming out of API review.
Created attachment 15072
Improved API specs for (a part of) org.eclipse.wtp.server.core 

This patch contains improved API specs (i.e., Javadoc comments) for a small
(but central) portion of the org.eclipse.wtp.server.core plug-in. In addition
to the specs, I've made note of issues that should be considered. I didn't
change any of the code, or attempt to address any of the issues that I raised.

(Tip: Add "[issue:" in the Java &gt; Task Tags preference page to get the Java
editor to highlight issues in the margin.)
Created attachment 15288
Improved API specs for (a part of) org.eclipse.wst.server.core

I've expanded the patch to include the main server configuration and runtime
interfaces, and "ported" it to the renamed org.eclipse.wst.server.core plug-in.
moving to 'wst' at Jim's suggestion.
Hi,

To date I have:
* Created a component overview and documents for some of the key concepts.
* Created initial package level documentation for all API packages.
* Made changes to fix about 300 "issue" tags from Jim. (About 50 remain that I'm
still resolving)
* Removed many classes from API that weren't ready for primetime yet. These can
be phased in for later releases if they are required in the future.
* Refactored, cleaned up, and made numerous changes at the package, class, and
method level.
* Added and improved JavaDoc in lots of classes.
* Used what has been learned here and additional comments from Jim to clean up
the TCP/IP monitor and the internal Web browser plugins.

Additional changes will (must) occur in WTP 1.0 M4, but I think we've covered
the purpose of this initial API bug. I am going to resolve this bug as fixed and
will open up individual bugs for the specific work items that remain.

Thanks for all your help, Jim. I'll continue to wear my API goggles proudly. ;-)
Verifying bug on behalf of reporter.</WithStack>
    <WithOutStack>Opening this PR as a convenient place to post API-related review comments, etc.
Created attachment 14330
Web Tools Server - API Summary
Created attachment 14768
WTP Server Core APIs - early notes

A few powerpoint slides covering earlist impressions coming out of API review.
Created attachment 15072
Improved API specs for (a part of) org.eclipse.wtp.server.core 

This patch contains improved API specs (i.e., Javadoc comments) for a small
(but central) portion of the org.eclipse.wtp.server.core plug-in. In addition
to the specs, I've made note of issues that should be considered. I didn't
change any of the code, or attempt to address any of the issues that I raised.

(Tip: Add "[issue:" in the Java &gt; Task Tags preference page to get the Java
editor to highlight issues in the margin.)
Created attachment 15288
Improved API specs for (a part of) org.eclipse.wst.server.core

I've expanded the patch to include the main server configuration and runtime
interfaces, and "ported" it to the renamed org.eclipse.wst.server.core plug-in.
moving to 'wst' at Jim's suggestion.
Hi,

To date I have:
* Created a component overview and documents for some of the key concepts.
* Created initial package level documentation for all API packages.
* Made changes to fix about 300 "issue" tags from Jim. (About 50 remain that I'm
still resolving)
* Removed many classes from API that weren't ready for primetime yet. These can
be phased in for later releases if they are required in the future.
* Refactored, cleaned up, and made numerous changes at the package, class, and
method level.
* Added and improved JavaDoc in lots of classes.
* Used what has been learned here and additional comments from Jim to clean up
the TCP/IP monitor and the internal Web browser plugins.

Additional changes will (must) occur in WTP 1.0 M4, but I think we've covered
the purpose of this initial API bug. I am going to resolve this bug as fixed and
will open up individual bugs for the specific work items that remain.

Thanks for all your help, Jim. I'll continue to wear my API goggles proudly. ;-)
Verifying bug on behalf of reporter.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73097" />
    <CreationDate amount="2004-09-01 16:08:00 -0400" />
    <DupId amount="132029" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The update manager  does not display the required space and free space values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When installing a plug-in via the update manager, the Free Space and Required
Space fields are zeroed out.  Shouldn't they display their respective values
appropriately?
The Required Space is unknown becase the feature.xml does not define the space 
it needs (there is no automatic detection).
The Free Space should be displayed. Can you attach a screen shot?
Thanks.
Created attachment 14448
Screen shot

Here is an example
Worth noting, this screen cap was taken on a Windows 2003 Server system.
thanks.

On my XP machine, I do get the free space. The free space is obtained by 
running some native code, so perhaps that native code does not work on all 
windows versions.
Created attachment 39163
Update Manager dialog. It is not possible to install the plugin since eclipse believes there is no room (actual free space ~40 GB).

I'm running Windows XP x64. This worked on 3.2M6.
I just went back to 3.1.2 which doesn't correctly calculate the disk space either. However, the Finish button is not greyed out due to 0 kb free disk space in 3.1.2 so I am able to complete the installation.
This is bug in RC1 that has been fixed in the latest builds. Let me find the number.
Intersting that it shows up alos on Windows XP 64 though
perhaps because the native code for computing available space is in a fragment that is filtered by os/ws/arch tupple.


*** This bug has been marked as a duplicate of 132029 ***</WithStack>
    <WithOutStack>When installing a plug-in via the update manager, the Free Space and Required
Space fields are zeroed out.  Shouldn't they display their respective values
appropriately?
The Required Space is unknown becase the feature.xml does not define the space 
it needs (there is no automatic detection).
The Free Space should be displayed. Can you attach a screen shot?
Thanks.
Created attachment 14448
Screen shot

Here is an example
Worth noting, this screen cap was taken on a Windows 2003 Server system.
thanks.

On my XP machine, I do get the free space. The free space is obtained by 
running some native code, so perhaps that native code does not work on all 
windows versions.
Created attachment 39163
Update Manager dialog. It is not possible to install the plugin since eclipse believes there is no room (actual free space ~40 GB).

I'm running Windows XP x64. This worked on 3.2M6.
I just went back to 3.1.2 which doesn't correctly calculate the disk space either. However, the Finish button is not greyed out due to 0 kb free disk space in 3.1.2 so I am able to complete the installation.
This is bug in RC1 that has been fixed in the latest builds. Let me find the number.
Intersting that it shows up alos on Windows XP 64 though
perhaps because the native code for computing available space is in a fragment that is filtered by os/ws/arch tupple.


*** This bug has been marked as a duplicate of 132029 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73098" />
    <CreationDate amount="2004-09-01 16:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[IDE] No API to detemine file extension used to obtain an IStorageEditorInput</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="1300" end="1369" />
        <code>IStorage storage = ((IStorageEditorInput)editorInput).getStorage();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1370" end="1411" />
        <code>IPath fullPath = storage.getFullPath();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Change the IStorage specification to say the file extension of the full</Line>
          <Line>path must be the file extension (breaking API change)</Line>
          <Line>2) Add API to IStorageInput either through the abstract class or a sub-</Line>
          <Line>interface.</Line>
          <Line>3) Change the IStorage spec to state that if the file extension of the full</Line>
          <Line>path is not the file extension then some editors will not work properly (and</Line>
          <Line>have those editors show the contents as text only or some other fallback).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- editors show the input's name in the tab by default, but this can be</Line>
          <Line>overridden, so:</Line>
          <Line>- change RemoteFileEditorInput.getName() to exclude the revision number</Line>
          <Line>- add code to the editor to call setPartName(input.getName() + " " +</Line>
          <Line>input.getRevisionNumber())</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- change your IStorage's getName() to return the regular file name</Line>
          <Line>- clients wanting to try mapping to a file name (and extension) for</Line>
          <Line>IStorageEditorInput use getName() on the IStorage rather than getName() on the</Line>
          <Line>editor input.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Unlike in Eclipse R2.1.n, opening a file in the CVS repository gives the editor
an input org.eclipse.team.internal.ccvs.ui.RemoteFileEditorInput whose
getFullPath() method returns the full path with the version number appended to it!?

This is incorrect, the version should only be appended to #getName(), i.e., for
display purposes.  Having the version appended to the returned IPath causes
various problems, for example getFullPath().getFileExtension() will return the
".2" rathen than ".properties" in the case of
"dev.eclipse.org\home\eclipse\plugin.properties 1.2"
In general, clients should not deduce anything from the path of an IStorage. 
The spec for IStorage says that what is returned by getFullPath() depends on 
the implementor (i.e. has no meaning other than it is a full path that can be 
displayed to the user). The spec also states that the name should be the last 
segment of the full path which it currently is.

Perhaps if you described what you are trying to do, we can come up with a 
proper solution.


1.- My editor supports several parsers (for syntax coloring, etc.) - it supports
various editor "extensions" (in its plugin.xml), and then looks itself at the
file extension in order to determine the parser to use.

When its editor input is an IStorageEditorInput, it uses
  IStorage storage = ((IStorageEditorInput)editorInput).getStorage();
  IPath fullPath = storage.getFullPath();
in order to determine the name -&gt; extension -&gt; parser...

Having the revision number now part of the IPath causes this to fail.  Now I'd
have to handle a special case of editorInput.getClass() being
org.eclipse.team.internal.ccvs.ui.RemoteFileEditorInput, which will require my
plugin.xml to have an extra dependency on the cvs plug-in, etc...

2.- RemoteFileEditorInput has a #getContentType() method, but this is not part
of IStorageEditorInput, so it requires special-case handling as well...

2.- Is there a compelling reason to put, in Eclipse R3.0, the version number in
the IStorage#getFullPath(), which was not there in R2.n?

3.- IPath#getFileExtension() clearly also suffers from this change (see my
original problem description) - should a bug be opened against it?
The revision number is added to the full path for the same reason it is added 
to the name: as a way to differentiate one revision of the same file from 
another. As Imentioned before, the IStorage spec clearly states that the 
format of the path and name are up to the implementor and can even be null 
(i.e. the client cannot deduce anything from it. Also, the IPath spec just 
says that the file extension is determine using everything after the last 
period. It doesn't state that all uses must make sure that what is there is a 
meaningful extension (even though this may seem like a reasonable assumption).

However, I see you problem. Unfortunately, there is no API that will reliably 
give you the file extension that was used to obtain the editor input for an 
IStorage. This seems to me like a bug in the Platform Text component. One 
possible workaround would be to register a different class for each extension 
thus allowing you to deduce which extension was used to obtain the editor.


Reopeong to reassign
The above comments describe a case where an editor using IStorageEditorInput 
is associated with multiple file extensions. Once created, the 
IStorageEditorInput has no means of determining what file extension was used 
to obtain the input. The IStorage#getFullPath() method is not adequate as the 
spec states that the path returned is at the discretion of the implementor 
(and can even be null).

The possible solutions I see are:

1) Change the IStorage specification to say the file extension of the full 
path must be the file extension (breaking API change)
2) Add API to IStorageInput either through the abstract class or a sub-
interface.
3) Change the IStorage spec to state that if the file extension of the full 
path is not the file extension then some editors will not work properly (and 
have those editors show the contents as text only or some other fallback).

I don't see 1) happening so I'm moving this to Platform Text to get their 
opinion on 2). If that is not possible, we can do 3) for CVS but there may 
still be issues with other repository providers depending on how they 
implement the getFullPath method.
re 2) which abstract class do you mean: several clients directly implement
IStorageEditorInput

Michael, do you only want our comment on 2? Platform Text doesn't own it - it's
Platform UI.

Moving to Platform UI in reponse to Dani's comment. Given that 
IStorageEditorInput can be implemented by clients, possibility 2 becomes:

2) Add a sub-interface to IStorageEditorInput to allow the implementor to be 
told which file extension was used to obtain the input.

we inherited this bug and have not looked at it, however I'm moving the target
milestone
moving target to M4
M6 &lt;sigh&gt;
IStorage's spec can't be changed to refer to editors since IStorage is at core
level.

IEditorInput.getName() states:

     * Returns the name of this editor input for display purposes.
     * &lt;p&gt;
     * For instance, when the input is from a file, the return value would
     * ordinarily be just the file name.

So while it specs only that the name is used for display purposes, it does
suggest that the name can be treated as a file name when the input is a file.

I was going to suggest:
- editors show the input's name in the tab by default, but this can be
overridden, so:
- change RemoteFileEditorInput.getName() to exclude the revision number
- add code to the editor to call setPartName(input.getName() + " " +
input.getRevisionNumber())

However, the CVS repo explorer does not define its own editor.  It uses the
existing registered editors (how does it do the file to editor mapping?).

So we need to provide the revision number in the tabs (which we don't want to
lose) we need to keep the revision number in RemoteFileEditorInput.getName().
However, there's no requirement that IStorage.getName() return the same value.
How about:
- change your IStorage's getName() to return the regular file name
- clients wanting to try mapping to a file name (and extension) for
IStorageEditorInput use getName() on the IStorage rather than getName() on the
editor input.

There is still the problem about resolving the loose definition of
IStorage.getName(), however this seems about the best we can do given the
current APIs.

moving back to Core , please see comment #11
This means updating RemoteFileEditorInput.getFullPath() similarly, right?
Re comment 13: I believe that it already works the way Nick specified. That 
is, the getName() of the editor input includes the revision number since that 
is what is displayed in the tab but getName() of the IStorage obtained from 
the IStorageEditorInput does not include the revision name. The getFullPath() 
of the IStorage does include the revision at the end but that is for a 
different purpose (which unfortunately cannot be easily changed due to other 
clients). 

I'm going to mark this worksforme since you should be able to get the 
extension using IStorage#getName(). Please reopen if this is not the case.</WithStack>
    <WithOutStack>Unlike in Eclipse R2.1.n, opening a file in the CVS repository gives the editor
an input org.eclipse.team.internal.ccvs.ui.RemoteFileEditorInput whose
getFullPath() method returns the full path with the version number appended to it!?

This is incorrect, the version should only be appended to #getName(), i.e., for
display purposes.  Having the version appended to the returned IPath causes
various problems, for example getFullPath().getFileExtension() will return the
".2" rathen than ".properties" in the case of
"dev.eclipse.org\home\eclipse\plugin.properties 1.2"
In general, clients should not deduce anything from the path of an IStorage. 
The spec for IStorage says that what is returned by getFullPath() depends on 
the implementor (i.e. has no meaning other than it is a full path that can be 
displayed to the user). The spec also states that the name should be the last 
segment of the full path which it currently is.

Perhaps if you described what you are trying to do, we can come up with a 
proper solution.


1.- My editor supports several parsers (for syntax coloring, etc.) - it supports
various editor "extensions" (in its plugin.xml), and then looks itself at the
file extension in order to determine the parser to use.

When its editor input is an IStorageEditorInput, it uses
  IStorage storage = ((IStorageEditorInput)editorInput).getStorage();
  IPath fullPath = storage.getFullPath();
in order to determine the name -&gt; extension -&gt; parser...

Having the revision number now part of the IPath causes this to fail.  Now I'd
have to handle a special case of editorInput.getClass() being
org.eclipse.team.internal.ccvs.ui.RemoteFileEditorInput, which will require my
plugin.xml to have an extra dependency on the cvs plug-in, etc...

2.- RemoteFileEditorInput has a #getContentType() method, but this is not part
of IStorageEditorInput, so it requires special-case handling as well...

2.- Is there a compelling reason to put, in Eclipse R3.0, the version number in
the IStorage#getFullPath(), which was not there in R2.n?

3.- IPath#getFileExtension() clearly also suffers from this change (see my
original problem description) - should a bug be opened against it?
The revision number is added to the full path for the same reason it is added 
to the name: as a way to differentiate one revision of the same file from 
another. As Imentioned before, the IStorage spec clearly states that the 
format of the path and name are up to the implementor and can even be null 
(i.e. the client cannot deduce anything from it. Also, the IPath spec just 
says that the file extension is determine using everything after the last 
period. It doesn't state that all uses must make sure that what is there is a 
meaningful extension (even though this may seem like a reasonable assumption).

However, I see you problem. Unfortunately, there is no API that will reliably 
give you the file extension that was used to obtain the editor input for an 
IStorage. This seems to me like a bug in the Platform Text component. One 
possible workaround would be to register a different class for each extension 
thus allowing you to deduce which extension was used to obtain the editor.


Reopeong to reassign
The above comments describe a case where an editor using IStorageEditorInput 
is associated with multiple file extensions. Once created, the 
IStorageEditorInput has no means of determining what file extension was used 
to obtain the input. The IStorage#getFullPath() method is not adequate as the 
spec states that the path returned is at the discretion of the implementor 
(and can even be null).

The possible solutions I see are:

1) Change the IStorage specification to say the file extension of the full 
path must be the file extension (breaking API change)
2) Add API to IStorageInput either through the abstract class or a sub-
interface.
3) Change the IStorage spec to state that if the file extension of the full 
path is not the file extension then some editors will not work properly (and 
have those editors show the contents as text only or some other fallback).

I don't see 1) happening so I'm moving this to Platform Text to get their 
opinion on 2). If that is not possible, we can do 3) for CVS but there may 
still be issues with other repository providers depending on how they 
implement the getFullPath method.
re 2) which abstract class do you mean: several clients directly implement
IStorageEditorInput

Michael, do you only want our comment on 2? Platform Text doesn't own it - it's
Platform UI.

Moving to Platform UI in reponse to Dani's comment. Given that 
IStorageEditorInput can be implemented by clients, possibility 2 becomes:

2) Add a sub-interface to IStorageEditorInput to allow the implementor to be 
told which file extension was used to obtain the input.

we inherited this bug and have not looked at it, however I'm moving the target
milestone
moving target to M4
M6 &lt;sigh&gt;
IStorage's spec can't be changed to refer to editors since IStorage is at core
level.

IEditorInput.getName() states:

     * Returns the name of this editor input for display purposes.
     * &lt;p&gt;
     * For instance, when the input is from a file, the return value would
     * ordinarily be just the file name.

So while it specs only that the name is used for display purposes, it does
suggest that the name can be treated as a file name when the input is a file.

I was going to suggest:
- editors show the input's name in the tab by default, but this can be
overridden, so:
- change RemoteFileEditorInput.getName() to exclude the revision number
- add code to the editor to call setPartName(input.getName() + " " +
input.getRevisionNumber())

However, the CVS repo explorer does not define its own editor.  It uses the
existing registered editors (how does it do the file to editor mapping?).

So we need to provide the revision number in the tabs (which we don't want to
lose) we need to keep the revision number in RemoteFileEditorInput.getName().
However, there's no requirement that IStorage.getName() return the same value.
How about:
- change your IStorage's getName() to return the regular file name
- clients wanting to try mapping to a file name (and extension) for
IStorageEditorInput use getName() on the IStorage rather than getName() on the
editor input.

There is still the problem about resolving the loose definition of
IStorage.getName(), however this seems about the best we can do given the
current APIs.

moving back to Core , please see comment #11
This means updating RemoteFileEditorInput.getFullPath() similarly, right?
Re comment 13: I believe that it already works the way Nick specified. That 
is, the getName() of the editor input includes the revision number since that 
is what is displayed in the tab but getName() of the IStorage obtained from 
the IStorageEditorInput does not include the revision name. The getFullPath() 
of the IStorage does include the revision at the end but that is for a 
different purpose (which unfortunately cannot be easily changed due to other 
clients). 

I'm going to mark this worksforme since you should be able to get the 
extension using IStorage#getName(). Please reopen if this is not the case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73099" />
    <CreationDate amount="2004-09-01 16:57:00 -0400" />
    <DupId amount="97524" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[classpath] user libraries keep missing jar file contents.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I created user libraries (about 6), each contains a number of jar files, from 2 
to 7 or 8.  I then exported these user libraries to an export file for 
sharing.  I noticed after exporting to a new workspace, one of the user 
libraries will be empty or reset.  Even after I added back the jar files, 
restarting Eclipse will reset the user library to empty.  This is very annoying 
since I have to keep readding the jar files back to the user library. 

In addition, different projects using the same user libraries will have a 
misbehaved user library.
Created attachment 14334
exported user libraries file
Deferring post 3.1
Reopen to set as duplicate


*** This bug has been marked as a duplicate of 97524 ***
Set as duplicate although I'm not really sure it's really the case...
There's no API methods in JDT/Core to export user libraries, so this is
performed by JDT/UI specific code. I guess it has been fixed since this bug was
opened.

I didn't move this bug to JDT/UI for confirmation due to the fact that Brian let
us know this issue is fixed in RC1...</WithStack>
    <WithOutStack>I created user libraries (about 6), each contains a number of jar files, from 2 
to 7 or 8.  I then exported these user libraries to an export file for 
sharing.  I noticed after exporting to a new workspace, one of the user 
libraries will be empty or reset.  Even after I added back the jar files, 
restarting Eclipse will reset the user library to empty.  This is very annoying 
since I have to keep readding the jar files back to the user library. 

In addition, different projects using the same user libraries will have a 
misbehaved user library.
Created attachment 14334
exported user libraries file
Deferring post 3.1
Reopen to set as duplicate


*** This bug has been marked as a duplicate of 97524 ***
Set as duplicate although I'm not really sure it's really the case...
There's no API methods in JDT/Core to export user libraries, so this is
performed by JDT/UI specific code. I guess it has been fixed since this bug was
opened.

I didn't move this bug to JDT/UI for confirmation due to the fact that Brian let
us know this issue is fixed in RC1...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="73100" />
    <CreationDate amount="2004-09-01 17:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Crash while running a JUnit Plug-In test</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Check out "org.eclipse.ui.tests" and "org.eclipse.test.performance" from CVS.</Line>
          <Line>- Switch to the Java perspective and open the "IWorkbenchPageTest" class.</Line>
          <Line>- Run the test as a "Junit Plug-in test".</Line>
          <Line>- The test does not complete and crashes (around test 30) with the following:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am using build id 200408311100 on Mac OS 10.3.5 (512 MB SDRAM, 667 MHz PowerPC
G4) running java 1.4.2_05-141. This is reproducible with earlier builds as well.

I tried running a UI Junit Plug-in test ("IWorkbenchPageTest"), but it crashes
and does not complete (only on the Mac). I had to play around with the Vm's Xmx
and Xms settings to get all the tests to complete, but some tests still fail
with out of memory errors.

Steps:
- Check out "org.eclipse.ui.tests" and "org.eclipse.test.performance" from CVS.
- Switch to the Java perspective and open the "IWorkbenchPageTest" class.
- Run the test as a "Junit Plug-in test".
- The test does not complete and crashes (around test 30) with the following:

"Date/Time:      2004-09-01 16:53:46 -0400
OS Version:     10.3.5 (Build 7M34)
Report Version: 2

Command: java
Path:    /System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/bin/java
Version: ??? (???)
PID:     476
Thread:  0

Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000040

Thread 0 Crashed:
0   com.apple.HIToolbox          	0x927e05ac
_Z23GetMenuSystemAttributesP8MenuDataPm + 0
1   com.apple.HIToolbox          	0x927de32c
_Z18FindNextMenuInRootP12IterPositionP8MenuData + 0xb0
2   com.apple.HIToolbox          	0x927dfef0
_Z12FindNextMenuP12IterPositionP9RootMenus + 0xe4
3   com.apple.HIToolbox          	0x927e5ea4
_Z23_MenuIterGetDataAtIndexP21OpaqueMenuIteratorRefl + 0x5c
4   com.apple.HIToolbox          	0x927e5790 _Z18UpdateMenuEnablingv + 0x110
5   com.apple.HIToolbox          	0x928135b4
_Z12MenuBarTimerP16__EventLoopTimerPv + 0x5c
6   com.apple.CoreFoundation     	0x901946a8 __CFRunLoopDoTimer + 0xf4
7   com.apple.CoreFoundation     	0x90191a08 __CFRunLoopRun + 0x5c8
8   com.apple.CoreFoundation     	0x90195f1c CFRunLoopRunSpecific + 0x148
9   com.apple.HIToolbox          	0x927d5f88 RunCurrentEventLoopInMode + 0xac
10  com.apple.HIToolbox          	0x927dc668 ReceiveNextEventCommon + 0xf4
11  com.apple.HIToolbox          	0x9284d7fc ReceiveNextEventInMode + 0x48
12  libswt-pi-carbon-3104.jnilib 	0x017b7064
Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent + 0xd4
13  &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
14  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
15  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
16  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
17  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
18  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
19  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
20  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
21  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
22  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
23  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
24  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
25  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
26  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
27  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
28  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
29  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
30  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
31  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
32  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
33  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
34  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
35  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
36  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
37  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
38  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
39  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
40  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
41  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
42  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
43  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
44  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
45  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
46  libclient.dylib              	0x947d7234 JVM_IsNaN + 0x5b24
47  libclient.dylib              	0x947febc4 __floatdisf + 0xef4
48  libclient.dylib              	0x9482c710 JVM_InvokeMethod + 0x1f0
49  &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
50  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
51  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
52  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
53  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
54  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
55  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
56  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
57  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
58  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
59  libclient.dylib              	0x9485456c JVM_UnloadLibrary + 0xfc4c
60  libclient.dylib              	0x949246dc jio_vsnprintf + 0x103dc
61  java                         	0x00004604 0x1000 + 0x3604
62  java                         	0x000066b4 0x1000 + 0x56b4
63  java                         	0x00003d10 0x1000 + 0x2d10
64  java                         	0x00003b84 0x1000 + 0x2b84

Thread 1:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x948031dc JNI_CreateJavaVM_Impl + 0x44ec
3   libclient.dylib              	0x94803170 JNI_CreateJavaVM_Impl + 0x4480
4   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
5   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 2:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x9475e0a4 __divdi3 + 0x5094
4   libclient.dylib              	0x94773ca0 JVM_GetMethodIxModifiers + 0x4f0
5   libclient.dylib              	0x9481b48c JVM_GetInterfaceVersion + 0x17a4c
6   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
7   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 3:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
10  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
11  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
12  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
13  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
14  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
15  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
16  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
17  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 4:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 5:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x9473af60 JVM_GetCPMethodSignatureUTF + 0x1810
4   libclient.dylib              	0x9473b100 JVM_GetCPMethodSignatureUTF + 0x19b0
5   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
6   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 6:
0   libSystem.B.dylib            	0x90014528 semaphore_wait_trap + 0x8
1   libclient.dylib              	0x94857090 JVM_UnloadLibrary + 0x12770
2   libclient.dylib              	0x94856374 JVM_UnloadLibrary + 0x11a54
3   libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
4   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
5   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 7:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x9475e104 __divdi3 + 0x50f4
4   libclient.dylib              	0x94795510 JVM_GetFieldIxModifiers + 0xb60
5   libclient.dylib              	0x947812bc JVM_SocketAvailable + 0x130c
6   libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
7   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
8   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 8:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 9:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 10:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 11:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 12:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 13:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 14:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 15:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
11  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
12  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
13  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
14  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
15  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
16  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
17  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
18  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
19  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
20  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
21  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
22  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
23  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 16:
0   libSystem.B.dylib            	0x9000eacc read + 0xc
1   libnet.jnilib                	0x8e2779f0
Java_java_net_SocketInputStream_socketRead0 + 0x18c
2   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
3   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
4   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
5   &lt;&lt;00000000&gt;&gt; 	0x04024300 0 + 0x4024300
6   &lt;&lt;00000000&gt;&gt; 	0x04025d38 0 + 0x4025d38
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
9   &lt;&lt;00000000&gt;&gt; 	0x03fad258 0 + 0x3fad258
10  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
11  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
12  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
13  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
14  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
15  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
16  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
17  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
18  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
19  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
20  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 17:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

PPC Thread State:
  srr0: 0x927e05ac srr1: 0x0200f030                vrsave: 0x00000000
    cr: 0x84024222  xer: 0x20000000   lr: 0x927da888  ctr: 0x90193580
    r0: 0x927de32c   r1: 0xbfffcbe0   r2: 0x00000030   r3: 0x00000000
    r4: 0xbfffcc20   r5: 0x73686f72   r6: 0x00000000   r7: 0x00000002
    r8: 0x00000000   r9: 0xbfffcb82  r10: 0x00000000  r11: 0xbfffcb82
   r12: 0x08be63d0  r13: 0x00500c70  r14: 0x00000000  r15: 0x00000001
   r16: 0x00000000  r17: 0x00000001  r18: 0xa0191458  r19: 0x00000000
   r20: 0x00000000  r21: 0x00000000  r22: 0x00312980  r23: 0x00312a98
   r24: 0xa01945bc  r25: 0xa00011ac  r26: 0x00000021  r27: 0x08badcd0
   r28: 0x08b63270  r29: 0x00000010  r30: 0xbfffcd30  r31: 0x927dfe1c

Binary Images Description:
    0x1000 -     0xcfff java 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/bin/java
 0x177a000 -  0x177afff libcore_2_1_0b.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.core.resources.macosx_3.0.0/os/macosx/ppc/libcore_2_1_0b.jnilib
 0x17a0000 -  0x17d3fff libswt-pi-carbon-3104.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.swt.carbon_3.1.0/os/macosx/ppc/libswt-pi-carbon-3104.jnilib
 0x24da000 -  0x2506fff libswt-carbon-3104.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.swt.carbon_3.1.0/os/macosx/ppc/libswt-carbon-3104.jnilib
0x77fb0000 - 0x77fbbfff libzip.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libzip.jnilib
0x8e275000 - 0x8e27efff libnet.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libnet.jnilib
0x8e282000 - 0x8e286fff libnio.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libnio.jnilib
0x8fe00000 - 0x8fe4ffff dyld 	/usr/lib/dyld
0x90000000 - 0x90122fff libSystem.B.dylib 	/usr/lib/libSystem.B.dylib
0x90190000 - 0x9023dfff com.apple.CoreFoundation 6.3.4 (299.31)
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x90280000 - 0x904f9fff com.apple.CoreServices.CarbonCore 10.3.5
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x90570000 - 0x905dffff com.apple.framework.IOKit 1.3.5 (???)
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x90610000 - 0x9069afff com.apple.CoreServices.OSServices 3.0.1
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x90700000 - 0x90700fff com.apple.CoreServices 10.3 (???)
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x90720000 - 0x90787fff com.apple.audio.CoreAudio 2.1.2
/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x907f0000 - 0x907f9fff com.apple.DiskArbitration 2.0.3
/System/Library/PrivateFrameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x90810000 - 0x90810fff com.apple.ApplicationServices 1.0 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x90830000 - 0x9089ffff libobjc.A.dylib 	/usr/lib/libobjc.A.dylib
0x90910000 - 0x90983fff com.apple.DesktopServices 1.2.2
/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x909f0000 - 0x90b4bfff com.apple.Foundation 6.3.5 (500.56)
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x90d00000 - 0x90d1bfff com.apple.SystemConfiguration 1.7.1 (???)
/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x90d40000 - 0x90d40fff com.apple.Carbon 10.3 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x90df0000 - 0x90df4fff com.apple.JavaVM 1.4.2 (1.4.2 Release 1)
/System/Library/Frameworks/JavaVM.framework/Versions/A/JavaVM
0x910b0000 - 0x91101fff com.apple.bom 1.2.5 (63.2)
/System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
0x912a0000 - 0x912bdfff com.apple.audio.SoundManager 3.8
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x912e0000 - 0x912f7fff com.apple.LangAnalysis 1.5.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x91320000 - 0x913defff ColorSync 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x91460000 - 0x91473fff com.apple.speech.synthesis.framework 3.2
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x914a0000 - 0x91509fff com.apple.htmlrendering 1.1.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x9153a000 - 0x91544fff libverify.dylib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libverify.dylib
0x91560000 - 0x91619fff com.apple.QD 3.4.65 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x91670000 - 0x916a8fff com.apple.AE 1.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x916e0000 - 0x91773fff com.apple.print.framework.PrintCore 3.3
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x917e0000 - 0x917f0fff com.apple.speech.recognition.framework 3.3
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x91810000 - 0x9182afff com.apple.openscripting 1.2.1 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x91850000 - 0x91860fff com.apple.ImageCapture 2.1.5
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x91890000 - 0x9189cfff com.apple.help 1.0.1
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x918c0000 - 0x918cdfff com.apple.CommonPanels 1.2.1 (1.0)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x918f0000 - 0x9193efff com.apple.print.framework.Print 3.3
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x91990000 - 0x9199bfff com.apple.securityhi 1.2 (90)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x919c0000 - 0x91a33fff com.apple.NavigationServices 3.3.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x91ab0000 - 0x91ac4fff libCGATS.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGATS.A.dylib
0x91ae0000 - 0x91aebfff libCSync.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x91b10000 - 0x91b2afff libPDFRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libPDFRIP.A.dylib
0x91b50000 - 0x91b5ffff libPSRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libPSRIP.A.dylib
0x91b80000 - 0x91b93fff libRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x92070000 - 0x92096fff com.apple.FindByContent 1.4 (1.2)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/FindByContent.framework/Versions/A/FindByContent
0x920c0000 - 0x922a7fff com.apple.security 2.4 (177)
/System/Library/Frameworks/Security.framework/Versions/A/Security
0x92430000 - 0x92468fff com.apple.LaunchServices 10.3.5 (98.4)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x92740000 - 0x92777fff com.apple.CFNetwork 1.2.1 (7)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x927d0000 - 0x92b54fff com.apple.HIToolbox 1.3.4 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x92d30000 - 0x92d80fff com.apple.HIServices 1.4.1 (0.0.1d1)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x935d0000 - 0x938a8fff com.apple.CoreGraphics 1.203.26 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x939a0000 - 0x939b4fff libcups.2.dylib 	/usr/lib/libcups.2.dylib
0x939d0000 - 0x939d4fff libmathCommon.A.dylib 	/usr/lib/system/libmathCommon.A.dylib
0x94060000 - 0x94078fff com.apple.WebServices 1.1.1 (1.1.0)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/WebServicesCore.framework/Versions/A/WebServicesCore
0x945b0000 - 0x945b9fff libz.1.dylib 	/usr/lib/libz.1.dylib
0x94610000 - 0x9462afff libresolv.9.dylib 	/usr/lib/libresolv.9.dylib
0x94650000 - 0x946affff com.apple.SearchKit 1.0.2
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x94723000 - 0x94971fff libclient.dylib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libclient.dylib
0x94a30000 - 0x94af5fff libxml2.2.dylib 	/usr/lib/libxml2.2.dylib
0x94b20000 - 0x94badfff com.apple.ink.framework 101.1.3 (55.10)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x94c1a000 - 0x94c35fff libjava.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libjava.jnilib
0x968d0000 - 0x969b2fff libicucore.A.dylib 	/usr/lib/libicucore.A.dylib
0x96a20000 - 0x96ae2fff libcrypto.0.9.7.dylib 	/usr/lib/libcrypto.0.9.7.dylib
0x96b40000 - 0x96b6efff libssl.0.9.7.dylib 	/usr/lib/libssl.0.9.7.dylib
0x96bf0000 - 0x96c7ffff ATS 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x96cb0000 - 0x96d9efff libiconv.2.dylib 	/usr/lib/libiconv.2.dylib
0x97510000 - 0x97518fff libbsm.dylib 	/usr/lib/libbsm.dylib
"
My mistake. I meant to log this bug against SWT. I should also mention that I
was not able to reproduce this problem on a standalone application. The test
crashes when it reaches the "testShowActionSet" consistently (I just tried this
again on a different Mac lap top - 768 MB SDRAM, 1 GHz PowerPC G4).
Just to provide additional information:
I ran the same test on build id 200409070800. This time, I ran with -Xint and
unchecked the "org.eclipse.core.resources.macosx" fragment. The VM still crashed.

It also crashes when I run the test suites using the "releng" scripts (command
line). I have yet to successfully run the UI suite from start to finish.

For build 200409070800, you need to check out "org.eclipse.test.performance",
"org.eclipse.ui.tests" and "org.eclipse.ui.workbench".

Fixed &gt; 20041021.
Verified using N20041024. Thanks for the fix.</WithStack>
    <WithOutStack>I am using build id 200408311100 on Mac OS 10.3.5 (512 MB SDRAM, 667 MHz PowerPC
G4) running java 1.4.2_05-141. This is reproducible with earlier builds as well.

I tried running a UI Junit Plug-in test ("IWorkbenchPageTest"), but it crashes
and does not complete (only on the Mac). I had to play around with the Vm's Xmx
and Xms settings to get all the tests to complete, but some tests still fail
with out of memory errors.

Steps:
- Check out "org.eclipse.ui.tests" and "org.eclipse.test.performance" from CVS.
- Switch to the Java perspective and open the "IWorkbenchPageTest" class.
- Run the test as a "Junit Plug-in test".
- The test does not complete and crashes (around test 30) with the following:

"Date/Time:      2004-09-01 16:53:46 -0400
OS Version:     10.3.5 (Build 7M34)
Report Version: 2

Command: java
Path:    /System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/bin/java
Version: ??? (???)
PID:     476
Thread:  0

Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000040

Thread 0 Crashed:
0   com.apple.HIToolbox          	0x927e05ac
_Z23GetMenuSystemAttributesP8MenuDataPm + 0
1   com.apple.HIToolbox          	0x927de32c
_Z18FindNextMenuInRootP12IterPositionP8MenuData + 0xb0
2   com.apple.HIToolbox          	0x927dfef0
_Z12FindNextMenuP12IterPositionP9RootMenus + 0xe4
3   com.apple.HIToolbox          	0x927e5ea4
_Z23_MenuIterGetDataAtIndexP21OpaqueMenuIteratorRefl + 0x5c
4   com.apple.HIToolbox          	0x927e5790 _Z18UpdateMenuEnablingv + 0x110
5   com.apple.HIToolbox          	0x928135b4
_Z12MenuBarTimerP16__EventLoopTimerPv + 0x5c
6   com.apple.CoreFoundation     	0x901946a8 __CFRunLoopDoTimer + 0xf4
7   com.apple.CoreFoundation     	0x90191a08 __CFRunLoopRun + 0x5c8
8   com.apple.CoreFoundation     	0x90195f1c CFRunLoopRunSpecific + 0x148
9   com.apple.HIToolbox          	0x927d5f88 RunCurrentEventLoopInMode + 0xac
10  com.apple.HIToolbox          	0x927dc668 ReceiveNextEventCommon + 0xf4
11  com.apple.HIToolbox          	0x9284d7fc ReceiveNextEventInMode + 0x48
12  libswt-pi-carbon-3104.jnilib 	0x017b7064
Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent + 0xd4
13  &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
14  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
15  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
16  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
17  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
18  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
19  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
20  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
21  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
22  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
23  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
24  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
25  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
26  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
27  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
28  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
29  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
30  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
31  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
32  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
33  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
34  &lt;&lt;00000000&gt;&gt; 	0x03f2ce30 0 + 0x3f2ce30
35  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
36  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
37  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
38  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
39  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
40  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
41  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
42  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
43  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
44  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
45  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
46  libclient.dylib              	0x947d7234 JVM_IsNaN + 0x5b24
47  libclient.dylib              	0x947febc4 __floatdisf + 0xef4
48  libclient.dylib              	0x9482c710 JVM_InvokeMethod + 0x1f0
49  &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
50  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
51  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
52  &lt;&lt;00000000&gt;&gt; 	0x03f2d220 0 + 0x3f2d220
53  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
54  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
55  &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
56  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
57  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
58  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
59  libclient.dylib              	0x9485456c JVM_UnloadLibrary + 0xfc4c
60  libclient.dylib              	0x949246dc jio_vsnprintf + 0x103dc
61  java                         	0x00004604 0x1000 + 0x3604
62  java                         	0x000066b4 0x1000 + 0x56b4
63  java                         	0x00003d10 0x1000 + 0x2d10
64  java                         	0x00003b84 0x1000 + 0x2b84

Thread 1:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x948031dc JNI_CreateJavaVM_Impl + 0x44ec
3   libclient.dylib              	0x94803170 JNI_CreateJavaVM_Impl + 0x4480
4   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
5   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 2:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x9475e0a4 __divdi3 + 0x5094
4   libclient.dylib              	0x94773ca0 JVM_GetMethodIxModifiers + 0x4f0
5   libclient.dylib              	0x9481b48c JVM_GetInterfaceVersion + 0x17a4c
6   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
7   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 3:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
10  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
11  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
12  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
13  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
14  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
15  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
16  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
17  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 4:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 5:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x9473af60 JVM_GetCPMethodSignatureUTF + 0x1810
4   libclient.dylib              	0x9473b100 JVM_GetCPMethodSignatureUTF + 0x19b0
5   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
6   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 6:
0   libSystem.B.dylib            	0x90014528 semaphore_wait_trap + 0x8
1   libclient.dylib              	0x94857090 JVM_UnloadLibrary + 0x12770
2   libclient.dylib              	0x94856374 JVM_UnloadLibrary + 0x11a54
3   libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
4   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
5   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 7:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x9475e104 __divdi3 + 0x50f4
4   libclient.dylib              	0x94795510 JVM_GetFieldIxModifiers + 0xb60
5   libclient.dylib              	0x947812bc JVM_SocketAvailable + 0x130c
6   libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
7   libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
8   libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 8:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 9:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 10:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 11:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 12:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 13:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 14:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 15:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b3c8 JVM_GetClassAccessFlags + 0x1168
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
11  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
12  &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
13  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
14  &lt;&lt;00000000&gt;&gt; 	0x03f2d310 0 + 0x3f2d310
15  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
16  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
17  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
18  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
19  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
20  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
21  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
22  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
23  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 16:
0   libSystem.B.dylib            	0x9000eacc read + 0xc
1   libnet.jnilib                	0x8e2779f0
Java_java_net_SocketInputStream_socketRead0 + 0x18c
2   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
3   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
4   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
5   &lt;&lt;00000000&gt;&gt; 	0x04024300 0 + 0x4024300
6   &lt;&lt;00000000&gt;&gt; 	0x04025d38 0 + 0x4025d38
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
8   &lt;&lt;00000000&gt;&gt; 	0x03f2cef0 0 + 0x3f2cef0
9   &lt;&lt;00000000&gt;&gt; 	0x03fad258 0 + 0x3fad258
10  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
11  &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
12  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
13  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
14  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
15  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
16  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
17  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
18  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
19  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
20  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

Thread 17:
0   libSystem.B.dylib            	0x900074c8 mach_msg_trap + 0x8
1   libSystem.B.dylib            	0x90007018 mach_msg + 0x38
2   libclient.dylib              	0x9472b448 JVM_GetClassAccessFlags + 0x11e8
3   libclient.dylib              	0x94725d28 _mh_dylib_header + 0x2d28
4   libclient.dylib              	0x9472f194 __cmpdi2 + 0x1ad4
5   libclient.dylib              	0x9472b8a8 JVM_MonitorWait + 0x108
6   &lt;&lt;00000000&gt;&gt; 	0x03f33580 0 + 0x3f33580
7   &lt;&lt;00000000&gt;&gt; 	0x03f2cfb0 0 + 0x3f2cfb0
8   &lt;&lt;00000000&gt;&gt; 	0x041bf408 0 + 0x41bf408
9   &lt;&lt;00000000&gt;&gt; 	0x03f2cec0 0 + 0x3f2cec0
10  &lt;&lt;00000000&gt;&gt; 	0x03f2a16c 0 + 0x3f2a16c
11  libclient.dylib              	0x9473dff8 JVM_GetCPMethodClassNameUTF + 0xb38
12  libclient.dylib              	0x9475f448 JVM_GetCPClassNameUTF + 0x998
13  libclient.dylib              	0x9479c0a8 JVM_Close + 0x4b8
14  libclient.dylib              	0x947ac970 JVM_Interrupt + 0x2e0
15  libclient.dylib              	0x9485170c JVM_UnloadLibrary + 0xcdec
16  libclient.dylib              	0x94797e04 JVM_FindClassFromClass + 0xc14
17  libclient.dylib              	0x948f590c JVM_UnloadLibrary + 0xb0fec
18  libSystem.B.dylib            	0x900246e8 _pthread_body + 0x28

PPC Thread State:
  srr0: 0x927e05ac srr1: 0x0200f030                vrsave: 0x00000000
    cr: 0x84024222  xer: 0x20000000   lr: 0x927da888  ctr: 0x90193580
    r0: 0x927de32c   r1: 0xbfffcbe0   r2: 0x00000030   r3: 0x00000000
    r4: 0xbfffcc20   r5: 0x73686f72   r6: 0x00000000   r7: 0x00000002
    r8: 0x00000000   r9: 0xbfffcb82  r10: 0x00000000  r11: 0xbfffcb82
   r12: 0x08be63d0  r13: 0x00500c70  r14: 0x00000000  r15: 0x00000001
   r16: 0x00000000  r17: 0x00000001  r18: 0xa0191458  r19: 0x00000000
   r20: 0x00000000  r21: 0x00000000  r22: 0x00312980  r23: 0x00312a98
   r24: 0xa01945bc  r25: 0xa00011ac  r26: 0x00000021  r27: 0x08badcd0
   r28: 0x08b63270  r29: 0x00000010  r30: 0xbfffcd30  r31: 0x927dfe1c

Binary Images Description:
    0x1000 -     0xcfff java 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/bin/java
 0x177a000 -  0x177afff libcore_2_1_0b.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.core.resources.macosx_3.0.0/os/macosx/ppc/libcore_2_1_0b.jnilib
 0x17a0000 -  0x17d3fff libswt-pi-carbon-3104.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.swt.carbon_3.1.0/os/macosx/ppc/libswt-pi-carbon-3104.jnilib
 0x24da000 -  0x2506fff libswt-carbon-3104.jnilib 
/Users/ines/Desktop/I20040831/eclipse/plugins/org.eclipse.swt.carbon_3.1.0/os/macosx/ppc/libswt-carbon-3104.jnilib
0x77fb0000 - 0x77fbbfff libzip.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libzip.jnilib
0x8e275000 - 0x8e27efff libnet.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libnet.jnilib
0x8e282000 - 0x8e286fff libnio.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libnio.jnilib
0x8fe00000 - 0x8fe4ffff dyld 	/usr/lib/dyld
0x90000000 - 0x90122fff libSystem.B.dylib 	/usr/lib/libSystem.B.dylib
0x90190000 - 0x9023dfff com.apple.CoreFoundation 6.3.4 (299.31)
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x90280000 - 0x904f9fff com.apple.CoreServices.CarbonCore 10.3.5
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x90570000 - 0x905dffff com.apple.framework.IOKit 1.3.5 (???)
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x90610000 - 0x9069afff com.apple.CoreServices.OSServices 3.0.1
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x90700000 - 0x90700fff com.apple.CoreServices 10.3 (???)
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x90720000 - 0x90787fff com.apple.audio.CoreAudio 2.1.2
/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x907f0000 - 0x907f9fff com.apple.DiskArbitration 2.0.3
/System/Library/PrivateFrameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x90810000 - 0x90810fff com.apple.ApplicationServices 1.0 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x90830000 - 0x9089ffff libobjc.A.dylib 	/usr/lib/libobjc.A.dylib
0x90910000 - 0x90983fff com.apple.DesktopServices 1.2.2
/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x909f0000 - 0x90b4bfff com.apple.Foundation 6.3.5 (500.56)
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x90d00000 - 0x90d1bfff com.apple.SystemConfiguration 1.7.1 (???)
/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x90d40000 - 0x90d40fff com.apple.Carbon 10.3 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x90df0000 - 0x90df4fff com.apple.JavaVM 1.4.2 (1.4.2 Release 1)
/System/Library/Frameworks/JavaVM.framework/Versions/A/JavaVM
0x910b0000 - 0x91101fff com.apple.bom 1.2.5 (63.2)
/System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
0x912a0000 - 0x912bdfff com.apple.audio.SoundManager 3.8
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x912e0000 - 0x912f7fff com.apple.LangAnalysis 1.5.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x91320000 - 0x913defff ColorSync 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x91460000 - 0x91473fff com.apple.speech.synthesis.framework 3.2
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x914a0000 - 0x91509fff com.apple.htmlrendering 1.1.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x9153a000 - 0x91544fff libverify.dylib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libverify.dylib
0x91560000 - 0x91619fff com.apple.QD 3.4.65 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x91670000 - 0x916a8fff com.apple.AE 1.4
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x916e0000 - 0x91773fff com.apple.print.framework.PrintCore 3.3
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x917e0000 - 0x917f0fff com.apple.speech.recognition.framework 3.3
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x91810000 - 0x9182afff com.apple.openscripting 1.2.1 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x91850000 - 0x91860fff com.apple.ImageCapture 2.1.5
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x91890000 - 0x9189cfff com.apple.help 1.0.1
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x918c0000 - 0x918cdfff com.apple.CommonPanels 1.2.1 (1.0)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x918f0000 - 0x9193efff com.apple.print.framework.Print 3.3
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x91990000 - 0x9199bfff com.apple.securityhi 1.2 (90)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x919c0000 - 0x91a33fff com.apple.NavigationServices 3.3.2
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x91ab0000 - 0x91ac4fff libCGATS.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGATS.A.dylib
0x91ae0000 - 0x91aebfff libCSync.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x91b10000 - 0x91b2afff libPDFRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libPDFRIP.A.dylib
0x91b50000 - 0x91b5ffff libPSRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libPSRIP.A.dylib
0x91b80000 - 0x91b93fff libRIP.A.dylib 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x92070000 - 0x92096fff com.apple.FindByContent 1.4 (1.2)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/FindByContent.framework/Versions/A/FindByContent
0x920c0000 - 0x922a7fff com.apple.security 2.4 (177)
/System/Library/Frameworks/Security.framework/Versions/A/Security
0x92430000 - 0x92468fff com.apple.LaunchServices 10.3.5 (98.4)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x92740000 - 0x92777fff com.apple.CFNetwork 1.2.1 (7)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x927d0000 - 0x92b54fff com.apple.HIToolbox 1.3.4 (???)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x92d30000 - 0x92d80fff com.apple.HIServices 1.4.1 (0.0.1d1)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x935d0000 - 0x938a8fff com.apple.CoreGraphics 1.203.26 (???)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x939a0000 - 0x939b4fff libcups.2.dylib 	/usr/lib/libcups.2.dylib
0x939d0000 - 0x939d4fff libmathCommon.A.dylib 	/usr/lib/system/libmathCommon.A.dylib
0x94060000 - 0x94078fff com.apple.WebServices 1.1.1 (1.1.0)
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/WebServicesCore.framework/Versions/A/WebServicesCore
0x945b0000 - 0x945b9fff libz.1.dylib 	/usr/lib/libz.1.dylib
0x94610000 - 0x9462afff libresolv.9.dylib 	/usr/lib/libresolv.9.dylib
0x94650000 - 0x946affff com.apple.SearchKit 1.0.2
/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x94723000 - 0x94971fff libclient.dylib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libclient.dylib
0x94a30000 - 0x94af5fff libxml2.2.dylib 	/usr/lib/libxml2.2.dylib
0x94b20000 - 0x94badfff com.apple.ink.framework 101.1.3 (55.10)
/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x94c1a000 - 0x94c35fff libjava.jnilib 
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Libraries/libjava.jnilib
0x968d0000 - 0x969b2fff libicucore.A.dylib 	/usr/lib/libicucore.A.dylib
0x96a20000 - 0x96ae2fff libcrypto.0.9.7.dylib 	/usr/lib/libcrypto.0.9.7.dylib
0x96b40000 - 0x96b6efff libssl.0.9.7.dylib 	/usr/lib/libssl.0.9.7.dylib
0x96bf0000 - 0x96c7ffff ATS 
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x96cb0000 - 0x96d9efff libiconv.2.dylib 	/usr/lib/libiconv.2.dylib
0x97510000 - 0x97518fff libbsm.dylib 	/usr/lib/libbsm.dylib
"
My mistake. I meant to log this bug against SWT. I should also mention that I
was not able to reproduce this problem on a standalone application. The test
crashes when it reaches the "testShowActionSet" consistently (I just tried this
again on a different Mac lap top - 768 MB SDRAM, 1 GHz PowerPC G4).
Just to provide additional information:
I ran the same test on build id 200409070800. This time, I ran with -Xint and
unchecked the "org.eclipse.core.resources.macosx" fragment. The VM still crashed.

It also crashes when I run the test suites using the "releng" scripts (command
line). I have yet to successfully run the UI suite from start to finish.

For build 200409070800, you need to check out "org.eclipse.test.performance",
"org.eclipse.ui.tests" and "org.eclipse.ui.workbench".

Fixed &gt; 20041021.
Verified using N20041024. Thanks for the fix.</WithOutStack>
  </Bug>
</infozilla-output>

