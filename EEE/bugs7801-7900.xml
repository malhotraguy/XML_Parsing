<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="7801" />
    <CreationDate amount="2002-01-16 14:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>when to clear contents of Output view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="21">
        <Lines>
          <Line>1- Need to clear contents of Output view when a project is closed. If not, then</Line>
          <Line>any links created in the Output view(e.g by a command such as "ls -la") will</Line>
          <Line>cause Exceptions if they are followed.</Line>
          <Line />
          <Line>2- Also, need to clear the contents of the Output view when some actions have</Line>
          <Line>been executed:</Line>
          <Line>-when a file has been renamed/deleted. If a link exists in the Output</Line>
          <Line>view(created by a previous "ls -la" command) then Exceptions will occur if the</Line>
          <Line>link is followed after one of the files referenced by the link is</Line>
          <Line>renamed/deleted.</Line>
          <Line>I've changed the open editor action a bit so that if you click on a link in the</Line>
          <Line>output view when the file doesn't exist, that it won't be opened and the</Line>
          <Line>exceptions don't happen.  I still need to deal with the project closing and</Line>
          <Line>various history-related issues (remote projects don't share the same history as</Line>
          <Line>local).</Line>
          <Line>I've addressed problem #1 by addressing the history problem.  Output history</Line>
          <Line>used to use the DataStore log to deal with history.  Now it uses the Output view</Line>
          <Line>history (history of inputs to the Output view).  This allows us to view history</Line>
          <Line>across multiple DataStores rather than a single DataStore.  Before we used to</Line>
          <Line>clear the view based on whether the DataStore was connected or not - now we do</Line>
          <Line>it at the project level.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>1- Need to clear contents of Output view when a project is closed. If not, then
any links created in the Output view(e.g by a command such as "ls -la") will
cause Exceptions if they are followed.

2- Also, need to clear the contents of the Output view when some actions have
been executed: 
	-when a file has been renamed/deleted. If a link exists in the Output
view(created by a previous "ls -la" command) then Exceptions will occur if the
link is followed after one of the files referenced by the link is
renamed/deleted.
I've changed the open editor action a bit so that if you click on a link in the 
output view when the file doesn't exist, that it won't be opened and the 
exceptions don't happen.  I still need to deal with the project closing and 
various history-related issues (remote projects don't share the same history as 
local).
I've addressed problem #1 by addressing the history problem.  Output history 
used to use the DataStore log to deal with history.  Now it uses the Output view 
history (history of inputs to the Output view).  This allows us to view history 
across multiple DataStores rather than a single DataStore.  Before we used to 
clear the view based on whether the DataStore was connected or not - now we do 
it at the project level.  

Move to version 1</WithStack>
    <WithOutStack>1- Need to clear contents of Output view when a project is closed. If not, then
any links created in the Output view(e.g by a command such as "ls -la") will
cause Exceptions if they are followed.

2- Also, need to clear the contents of the Output view when some actions have
been executed: 
	-when a file has been renamed/deleted. If a link exists in the Output
view(created by a previous "ls -la" command) then Exceptions will occur if the
link is followed after one of the files referenced by the link is
renamed/deleted.
I've changed the open editor action a bit so that if you click on a link in the 
output view when the file doesn't exist, that it won't be opened and the 
exceptions don't happen.  I still need to deal with the project closing and 
various history-related issues (remote projects don't share the same history as 
local).
I've addressed problem #1 by addressing the history problem.  Output history 
used to use the DataStore log to deal with history.  Now it uses the Output view 
history (history of inputs to the Output view).  This allows us to view history 
across multiple DataStores rather than a single DataStore.  Before we used to 
clear the view based on whether the DataStore was connected or not - now we do 
it at the project level.  

Move to version 1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7802" />
    <CreationDate amount="2002-01-16 14:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Formatting doesn't indent properly after comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="233" end="261" />
        <code>/*
 * this is a comment
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The formatter(?) doesn't un-indent sufficiently after a multi-line comment.

(Not sure if this is the formatter.  I'm refering to the component which 
indents code automatically as you type.)

If you enter a multi-line comment like:

/*
 * this is a comment
 */

The cursor will be indented one space too far when you finish the comment.  
That is, the next line that you type will line up with the last '*', instead of 
the opening '/'.

(Tested against 20011219 build)
Deferring. Formatter issues are not on the 2.0 plan.
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Move to JDT/UI. They position the cursor at the right indentation.
has been fixed a while ago</WithStack>
    <WithOutStack>The formatter(?) doesn't un-indent sufficiently after a multi-line comment.

(Not sure if this is the formatter.  I'm refering to the component which 
indents code automatically as you type.)

If you enter a multi-line comment like:

/*
 * this is a comment
 */

The cursor will be indented one space too far when you finish the comment.  
That is, the next line that you type will line up with the last '*', instead of 
the opening '/'.

(Tested against 20011219 build)
Deferring. Formatter issues are not on the 2.0 plan.
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Move to JDT/UI. They position the cursor at the right indentation.
has been fixed a while ago</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7803" />
    <CreationDate amount="2002-01-16 14:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Problems with breakpoints after changing JRE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I believe this results from having a MethodEntryBreakpoint on a binary method 
on a class in the class libs.  I then changed the JRI from JDK1.3.1 to J9.
This is logged at startup:
Log: Wed Jan 16 13:28:21 CST 2002
4 org.eclipse.jdt.ui 1 Internal Error
Java Model Exception: Java Model Status [C:/jdk1.3.1_01/jre/lib/rt.jar does not 
exist.]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java:452)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.openWhenClosed
(PackageFragmentRoot.java:306)
	at org.eclipse.jdt.internal.core.JarPackageFragmentRoot.openWhenClosed
(JarPackageFragmentRoot.java:604)
	at org.eclipse.jdt.internal.core.Openable.open(Openable.java:341)
	at org.eclipse.jdt.internal.core.Openable.open(Openable.java:334)
	at org.eclipse.jdt.internal.core.JarPackageFragment.openWhenClosed
(JarPackageFragment.java:124)
	at org.eclipse.jdt.internal.core.Openable.openParent(Openable.java:364)
	at org.eclipse.jdt.internal.core.Openable.openWhenClosed
(Openable.java:381)
	at org.eclipse.jdt.internal.core.BinaryMember.openHierarchy
(BinaryMember.java:78)
	at org.eclipse.jdt.internal.core.JavaElement.getRawInfo
(JavaElement.java:361)
	at org.eclipse.jdt.internal.core.BinaryMethod.isConstructor
(BinaryMethod.java:225)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getMethodLabel
(JavaElementLabels.java:324)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel
(JavaElementLabels.java:277)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel
(JavaElementLabels.java:257)
	at org.eclipse.jdt.ui.JavaElementLabelProvider.getText
(JavaElementLabelProvider.java:258)
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getLineBreakpointText
(JDIModelPresentation.java:1167)
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getBreakpointText
(JDIModelPresentation.java:1088)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText
(JDIModelPresentation.java:330)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getText
(LazyModelPresentation.java:63)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText
(DelegatingModelPresentation.java:210)
	at org.eclipse.jface.viewers.TableViewer.doUpdateItem
(TableViewer.java:185)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:979)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:474)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:416)
	at org.eclipse.jface.viewers.StructuredViewer$1.run
(StructuredViewer.java:626)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:572)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:624)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:592)
	at org.eclipse.jface.viewers.TableViewer.inputChanged
(TableViewer.java:383)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:234)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:730)
	at org.eclipse.debug.internal.ui.views.BreakpointsView.createViewer
(BreakpointsView.java:154)
	at org.eclipse.debug.ui.AbstractDebugView$ViewerPage.createControl
(AbstractDebugView.java:159)
	at org.eclipse.debug.ui.AbstractDebugView.createDefaultPage
(AbstractDebugView.java:238)
	at org.eclipse.ui.part.PageBookView.createPartControl
(PageBookView.java:330)
	at org.eclipse.debug.ui.AbstractDebugView.createPartControl
(AbstractDebugView.java:207)
	at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:60)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:58)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:100)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:169)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:237)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:209)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:172)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:80)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:509)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1021)
	at org.eclipse.ui.internal.WorkbenchWindow$5.run
(WorkbenchWindow.java:869)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:857)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:770)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:781)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:549)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:533)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:590)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:433)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:801)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at SlimLauncher.main(SlimLauncher.java:14)
Perhaps the JDT core can delete markers installed in the class libs when the
JRE_LIB variable changes? It would probably require an unfortunate amount of
work at runtime, but I'm not sure how else we can remove breakpoints from the
class libs when the JRE changes.

Added a java model element changed listener to the JDT Debug UI Plugin. When a
package fragment root is removed, closed, or removed from the classpath, all
breakpoints contained in that package fragment root are removed.
Please verify.
Original test case still fails.
Whoops. That's what I get for adding a "simple sanity check that couldn't
possibly break anything" (complete with typo) before releasing.

Refixed.
Please verify.
Verified.
*** Bug 9205 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I believe this results from having a MethodEntryBreakpoint on a binary method 
on a class in the class libs.  I then changed the JRI from JDK1.3.1 to J9.
This is logged at startup:
Log: Wed Jan 16 13:28:21 CST 2002
4 org.eclipse.jdt.ui 1 Internal Error
Java Model Exception: Java Model Status [C:/jdk1.3.1_01/jre/lib/rt.jar does not 
exist.]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java:452)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.openWhenClosed
(PackageFragmentRoot.java:306)
	at org.eclipse.jdt.internal.core.JarPackageFragmentRoot.openWhenClosed
(JarPackageFragmentRoot.java:604)
	at org.eclipse.jdt.internal.core.Openable.open(Openable.java:341)
	at org.eclipse.jdt.internal.core.Openable.open(Openable.java:334)
	at org.eclipse.jdt.internal.core.JarPackageFragment.openWhenClosed
(JarPackageFragment.java:124)
	at org.eclipse.jdt.internal.core.Openable.openParent(Openable.java:364)
	at org.eclipse.jdt.internal.core.Openable.openWhenClosed
(Openable.java:381)
	at org.eclipse.jdt.internal.core.BinaryMember.openHierarchy
(BinaryMember.java:78)
	at org.eclipse.jdt.internal.core.JavaElement.getRawInfo
(JavaElement.java:361)
	at org.eclipse.jdt.internal.core.BinaryMethod.isConstructor
(BinaryMethod.java:225)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getMethodLabel
(JavaElementLabels.java:324)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel
(JavaElementLabels.java:277)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel
(JavaElementLabels.java:257)
	at org.eclipse.jdt.ui.JavaElementLabelProvider.getText
(JavaElementLabelProvider.java:258)
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getLineBreakpointText
(JDIModelPresentation.java:1167)
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getBreakpointText
(JDIModelPresentation.java:1088)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText
(JDIModelPresentation.java:330)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getText
(LazyModelPresentation.java:63)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText
(DelegatingModelPresentation.java:210)
	at org.eclipse.jface.viewers.TableViewer.doUpdateItem
(TableViewer.java:185)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:979)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:474)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:416)
	at org.eclipse.jface.viewers.StructuredViewer$1.run
(StructuredViewer.java:626)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:572)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:624)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:592)
	at org.eclipse.jface.viewers.TableViewer.inputChanged
(TableViewer.java:383)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:234)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:730)
	at org.eclipse.debug.internal.ui.views.BreakpointsView.createViewer
(BreakpointsView.java:154)
	at org.eclipse.debug.ui.AbstractDebugView$ViewerPage.createControl
(AbstractDebugView.java:159)
	at org.eclipse.debug.ui.AbstractDebugView.createDefaultPage
(AbstractDebugView.java:238)
	at org.eclipse.ui.part.PageBookView.createPartControl
(PageBookView.java:330)
	at org.eclipse.debug.ui.AbstractDebugView.createPartControl
(AbstractDebugView.java:207)
	at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:60)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:58)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:100)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:169)
	at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:237)
	at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:209)
	at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:172)
	at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:80)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:509)
	at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1021)
	at org.eclipse.ui.internal.WorkbenchWindow$5.run
(WorkbenchWindow.java:869)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:857)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:770)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:781)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:549)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:533)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:590)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:433)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:801)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at SlimLauncher.main(SlimLauncher.java:14)
Perhaps the JDT core can delete markers installed in the class libs when the
JRE_LIB variable changes? It would probably require an unfortunate amount of
work at runtime, but I'm not sure how else we can remove breakpoints from the
class libs when the JRE changes.

Added a java model element changed listener to the JDT Debug UI Plugin. When a
package fragment root is removed, closed, or removed from the classpath, all
breakpoints contained in that package fragment root are removed.
Please verify.
Original test case still fails.
Whoops. That's what I get for adding a "simple sanity check that couldn't
possibly break anything" (complete with typo) before releasing.

Refixed.
Please verify.
Verified.
*** Bug 9205 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7804" />
    <CreationDate amount="2002-01-16 14:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Internal VMDisconnected trying to delete event requests after VM is gone</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205420">
        <Exception>com.sun.jdi.VMDisconnectedException</Exception>
        <Reason>Got IOException from Virtual Machine</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.request.EventRequestImpl.disable(EventRequestImpl.java:173)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.request.EventRequestManagerImpl.deleteEventRequest(EventRequestManagerImpl.java:266)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.JavaBreakpoint.removeFromTarget(JavaBreakpoint.java:473)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.JDIDebugTarget.removeAllBreakpoints(JDIDebugTarget.java:1191)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.JDIDebugTarget.cleanup(JDIDebugTarget.java:1163)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.JDIDebugTarget.shutdown(JDIDebugTarget.java:1356)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.shutdown(JDIDebugPlugin.java:107)</Frame>
          <Frame depth="7">org.eclipse.core.internal.plugins.PluginRegistry$2.run(PluginRegistry.java:265)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:821)</Frame>
          <Frame depth="9">org.eclipse.core.internal.plugins.PluginRegistry$1.visit(PluginRegistry.java:274)</Frame>
          <Frame depth="10">org.eclipse.core.internal.plugins.PluginRegistry.accept(PluginRegistry.java:45)</Frame>
          <Frame depth="11">org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins(PluginRegistry.java:277)</Frame>
          <Frame depth="12">org.eclipse.core.internal.plugins.PluginRegistry.shutdown(PluginRegistry.java:252)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown(InternalPlatform.java:532)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="15">org.eclipse.core.internal.boot.InternalBootLoader.shutdown(InternalBootLoader.java:954)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:883)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="18">SlimLauncher.main(SlimLauncher.java:14)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="18">
        <Lines>
          <Line>- JDIDebugTarget#shutdown</Line>
          <Line>- JDIDebugTarget#terminate (sends request to VM)</Line>
          <Line>- JDIDebugTarget#removeBreakpoint</Line>
          <Line>- VM terminates (packet does not reach us yet)</Line>
          <Line>- JavaBreakpoint checks if the VM is terminated (we don't know that it is yet)</Line>
          <Line>and then tries to remove the event request</Line>
          <Line>- We get a VMDisconnectedException and handle it quietly (writing to the log)</Line>
          <Line>- VMDeathEvent arrives</Line>
          <Line>- JDIDebugTarget's state is updated to terminated</Line>
          <Line>Possible fixes include:</Line>
          <Line>- JDIDebugTarget#isTerminated() can return true if isTerminating() is true (this</Line>
          <Line>would negatively affect current logic inside the debug target)</Line>
          <Line>- The isTerminating() method can be promoted to API. Client could then check</Line>
          <Line>this flag as well as isTerminated() and isDisconnected()</Line>
          <Line>- A new "isAvailable()" method could be added to the API. This method would</Line>
          <Line>answer true if the debug target is available to handle requests. This would</Line>
          <Line>allow clients to check only one method. Our implementation could then return</Line>
          <Line>isTerminated() || isTerminating() || isDisconnected() || etc.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Occurs during shutdown

Log: Wed Jan 16 13:35:55 CST 2002
4 org.eclipse.jdt.debug 120 Internal error logged from JDI Debug: 
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.request.EventRequestImpl.disable
(EventRequestImpl.java:173)
	at 
org.eclipse.jdi.internal.request.EventRequestManagerImpl.deleteEventRequest
(EventRequestManagerImpl.java:266)
	at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.removeFromTarget
(JavaBreakpoint.java:473)
	at 
org.eclipse.jdt.internal.debug.core.JDIDebugTarget.removeAllBreakpoints
(JDIDebugTarget.java:1191)
	at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.cleanup
(JDIDebugTarget.java:1163)
	at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.shutdown
(JDIDebugTarget.java:1356)
	at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.shutdown
(JDIDebugPlugin.java:107)
	at org.eclipse.core.internal.plugins.PluginRegistry$2.run
(PluginRegistry.java:265)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.internal.plugins.PluginRegistry$1.visit
(PluginRegistry.java:274)
	at org.eclipse.core.internal.plugins.PluginRegistry.accept
(PluginRegistry.java:45)
	at org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins
(PluginRegistry.java:277)
	at org.eclipse.core.internal.plugins.PluginRegistry.shutdown
(PluginRegistry.java:252)
	at org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown
(InternalPlatform.java:532)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.internal.boot.InternalBootLoader.shutdown
(InternalBootLoader.java:954)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:883)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at SlimLauncher.main(SlimLauncher.java:14)
The sequence of events here is as follows:

- JDIDebugTarget#shutdown
- JDIDebugTarget#terminate (sends request to VM)
- JDIDebugTarget#removeBreakpoint
- VM terminates (packet does not reach us yet)
- JavaBreakpoint checks if the VM is terminated (we don't know that it is yet)
and then tries to remove the event request
- We get a VMDisconnectedException and handle it quietly (writing to the log)
- VMDeathEvent arrives
- JDIDebugTarget's state is updated to terminated
Possible fixes include:
- JDIDebugTarget#isTerminated() can return true if isTerminating() is true (this
would negatively affect current logic inside the debug target)
- The isTerminating() method can be promoted to API. Client could then check
this flag as well as isTerminated() and isDisconnected()
- A new "isAvailable()" method could be added to the API. This method would
answer true if the debug target is available to handle requests. This would
allow clients to check only one method. Our implementation could then return
isTerminated() || isTerminating() || isDisconnected() || etc.

I prefer the last option as I think it is what debug target clients want most of
the time. A quick browse of our code base shows that we call (isTerminated() ||
isDisconnected()) all over the place. It would be nice to centralize this logic
to answer the real question, isAvailable().
The "client" (i.e. breakpoint) is internal to the implementation - no API is 
required.
Implemented isAvailable() method on JDIDebugTarget and updated internal packages
of org.eclipse.jdt.debug to call this method.
Please verify.
Verified.
Added targetRequestFailed call in JDIStackFrame#isObsolete()
*** Bug 7975 has been marked as a duplicate of this bug. ***
*** Bug 6659 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Occurs during shutdown

Log: Wed Jan 16 13:35:55 CST 2002
4 org.eclipse.jdt.debug 120 Internal error logged from JDI Debug: 

The sequence of events here is as follows:

- JDIDebugTarget#shutdown
- JDIDebugTarget#terminate (sends request to VM)
- JDIDebugTarget#removeBreakpoint
- VM terminates (packet does not reach us yet)
- JavaBreakpoint checks if the VM is terminated (we don't know that it is yet)
and then tries to remove the event request
- We get a VMDisconnectedException and handle it quietly (writing to the log)
- VMDeathEvent arrives
- JDIDebugTarget's state is updated to terminated
Possible fixes include:
- JDIDebugTarget#isTerminated() can return true if isTerminating() is true (this
would negatively affect current logic inside the debug target)
- The isTerminating() method can be promoted to API. Client could then check
this flag as well as isTerminated() and isDisconnected()
- A new "isAvailable()" method could be added to the API. This method would
answer true if the debug target is available to handle requests. This would
allow clients to check only one method. Our implementation could then return
isTerminated() || isTerminating() || isDisconnected() || etc.

I prefer the last option as I think it is what debug target clients want most of
the time. A quick browse of our code base shows that we call (isTerminated() ||
isDisconnected()) all over the place. It would be nice to centralize this logic
to answer the real question, isAvailable().
The "client" (i.e. breakpoint) is internal to the implementation - no API is 
required.
Implemented isAvailable() method on JDIDebugTarget and updated internal packages
of org.eclipse.jdt.debug to call this method.
Please verify.
Verified.
Added targetRequestFailed call in JDIStackFrame#isObsolete()
*** Bug 7975 has been marked as a duplicate of this bug. ***
*** Bug 6659 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7805" />
    <CreationDate amount="2002-01-16 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>A new ImageData(from an InputStream) throwing NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="import">
        <location start="500" end="526" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="527" end="560" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="561" end="595" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="596" end="628" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="629" end="700" />
        <code>//-------------------------------------------------------------------</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="700" end="703" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="703" end="773" />
        <code>//-------------------------------------------------------------------</code>
      </source_code>
      <source_code type="class">
        <location start="773" end="1731" />
        <code>public class SwtJpegImageDataTest {

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
static public void main(String[] args) {
	new SwtJpegImageDataTest().runMain(args);
}

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
private void runMain(String[] args) {

	java.net.URL url = null;
	java.io.InputStream is = null;
	try {
		url = new java.net.URL
("http://www.x3mgames.com/games/chainreactions/game/images/background.jpg");
		//url = new java.net.URL
("http://www.ral.oti.com/bbawt/test/bild.jpg");
		is = url.openStream();
	} catch (java.net.MalformedURLException e) {
	} catch (java.io.IOException ioe) {
	}
	try {
		new ImageData(is);
	} catch (Exception e) {
		e.printStackTrace();
		System.exit(0);
	}
	System.out.println("everything ok");
	System.exit(0);
}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We were having trouble loading this applet on QNX
(http://www.x3mgames.com/games/chainreactions/game/game.html), and after 
debugging found out it's throwing the NPE when trying to create a new ImageData 
instance from an InputStream. In the sample code, the InputStream is set to a 
URL.openStream() call, where the URL points to the backgound .jpg image for the 
applet.

Note: This is a problem on Windows2000 and QNX


Sample code below(the commented out URL is a .jpg that will load correctly) 

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.events.*;

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
public class SwtJpegImageDataTest {

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
static public void main(String[] args) {
	new SwtJpegImageDataTest().runMain(args);
}

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
private void runMain(String[] args) {

	java.net.URL url = null;
	java.io.InputStream is = null;
	try {
		url = new java.net.URL
("http://www.x3mgames.com/games/chainreactions/game/images/background.jpg");
		//url = new java.net.URL
("http://www.ral.oti.com/bbawt/test/bild.jpg");
		is = url.openStream();
	} catch (java.net.MalformedURLException e) {
	} catch (java.io.IOException ioe) {
	}
	try {
		new ImageData(is);
	} catch (Exception e) {
		e.printStackTrace();
		System.exit(0);
	}
	System.out.println("everything ok");
	System.exit(0);
}

}
Here is the stack trace when the sample code fails...

org.eclipse.swt.SWTException: i/o error (java.lang.NullPointerException)

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWTException.&lt;init&gt;(ILjava/lang/String;)V
   org/eclipse/swt/SWTException.&lt;init&gt;(I)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/internal/image/FileFormat.loadFromStreamL
(org/eclipse/swt/internal/image/LEDataInputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.load
(Ljava/io/InputStream;Lorg/eclipse/swt/graphics/ImageLoader;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageLoader.load(Ljava/io/InputStream;)
[Lorg/eclipse/swt/graphics/ImageData;

   org/eclipse/swt/graphics/ImageData.&lt;init&gt;(Ljava/io/InputStream;)V
   SwtJpegImageDataTest.runMain([Ljava/lang/String;)V
   SwtJpegImageDataTest.main([Ljava/lang/String;)V

*** Stack trace of contained exception ***

java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/internal/image/JPEGFrameHeader.initializeComponentParameters
()V
   org/eclipse/swt/internal/image/JPEGFrameHeader.&lt;init&gt;
(Lorg/eclipse/swt/internal/image/LEDataInputStream;)V
   org/eclipse/swt/internal/image/JPEGFileFormat.loadFromByteStream()
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.loadFromStream
(Lorg/eclipse/swt/internal/image/LEDataInputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.load
(Ljava/io/InputStream;Lorg/eclipse/swt/graphics/ImageLoader;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageLoader.load(Ljava/io/InputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageData.&lt;init&gt;(Ljava/io/InputStream;)V
   SwtJpegImageDataTest.runMain([Ljava/lang/String;)V
   SwtJpegImageDataTest.main([Ljava/lang/String;)V
Verified that it doesn't have anything to do with URL - it's just a JPG that we 
can't read. Will look into why not.
Fixed and released - will be in builds &gt; 20020123.
This JPEG is using a non-standard method of identifying their color components.
The JFIF spec says that the ID for Y = 1, Cb = 2, and Cr = 3.
For reasons only know to the writer of this JPEG, they have decided to use the 
ID "72" to represent Y. (They are still using 2 for Cb and 3 for Cr, though).
Apparently, this is legal in JPEG, but not in JFIF (the JPEG file format).
The file header for this file says it is in JFIF format, and since they are not 
using proper JFIF, they are clearly violating the JFIF spec.
HOWEVER, all of that said, I read somewhere that there are several JPEG writers 
that will violate the JFIF spec in this same manner, so I decided to support it.</WithStack>
    <WithOutStack>We were having trouble loading this applet on QNX
(http://www.x3mgames.com/games/chainreactions/game/game.html), and after 
debugging found out it's throwing the NPE when trying to create a new ImageData 
instance from an InputStream. In the sample code, the InputStream is set to a 
URL.openStream() call, where the URL points to the backgound .jpg image for the 
applet.

Note: This is a problem on Windows2000 and QNX


Sample code below(the commented out URL is a .jpg that will load correctly) 

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.events.*;

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
public class SwtJpegImageDataTest {

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
static public void main(String[] args) {
	new SwtJpegImageDataTest().runMain(args);
}

//-------------------------------------------------------------------
//
//-------------------------------------------------------------------
private void runMain(String[] args) {

	java.net.URL url = null;
	java.io.InputStream is = null;
	try {
		url = new java.net.URL
("http://www.x3mgames.com/games/chainreactions/game/images/background.jpg");
		//url = new java.net.URL
("http://www.ral.oti.com/bbawt/test/bild.jpg");
		is = url.openStream();
	} catch (java.net.MalformedURLException e) {
	} catch (java.io.IOException ioe) {
	}
	try {
		new ImageData(is);
	} catch (Exception e) {
		e.printStackTrace();
		System.exit(0);
	}
	System.out.println("everything ok");
	System.exit(0);
}

}
Here is the stack trace when the sample code fails...

org.eclipse.swt.SWTException: i/o error (java.lang.NullPointerException)

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWTException.&lt;init&gt;(ILjava/lang/String;)V
   org/eclipse/swt/SWTException.&lt;init&gt;(I)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/internal/image/FileFormat.loadFromStreamL
(org/eclipse/swt/internal/image/LEDataInputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.load
(Ljava/io/InputStream;Lorg/eclipse/swt/graphics/ImageLoader;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageLoader.load(Ljava/io/InputStream;)
[Lorg/eclipse/swt/graphics/ImageData;

   org/eclipse/swt/graphics/ImageData.&lt;init&gt;(Ljava/io/InputStream;)V
   SwtJpegImageDataTest.runMain([Ljava/lang/String;)V
   SwtJpegImageDataTest.main([Ljava/lang/String;)V

*** Stack trace of contained exception ***

java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/internal/image/JPEGFrameHeader.initializeComponentParameters
()V
   org/eclipse/swt/internal/image/JPEGFrameHeader.&lt;init&gt;
(Lorg/eclipse/swt/internal/image/LEDataInputStream;)V
   org/eclipse/swt/internal/image/JPEGFileFormat.loadFromByteStream()
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.loadFromStream
(Lorg/eclipse/swt/internal/image/LEDataInputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/internal/image/FileFormat.load
(Ljava/io/InputStream;Lorg/eclipse/swt/graphics/ImageLoader;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageLoader.load(Ljava/io/InputStream;)
[Lorg/eclipse/swt/graphics/ImageData;
   org/eclipse/swt/graphics/ImageData.&lt;init&gt;(Ljava/io/InputStream;)V
   SwtJpegImageDataTest.runMain([Ljava/lang/String;)V
   SwtJpegImageDataTest.main([Ljava/lang/String;)V
Verified that it doesn't have anything to do with URL - it's just a JPG that we 
can't read. Will look into why not.
Fixed and released - will be in builds &gt; 20020123.
This JPEG is using a non-standard method of identifying their color components.
The JFIF spec says that the ID for Y = 1, Cb = 2, and Cr = 3.
For reasons only know to the writer of this JPEG, they have decided to use the 
ID "72" to represent Y. (They are still using 2 for Cb and 3 for Cr, though).
Apparently, this is legal in JPEG, but not in JFIF (the JPEG file format).
The file header for this file says it is in JFIF format, and since they are not 
using proper JFIF, they are clearly violating the JFIF spec.
HOWEVER, all of that said, I read somewhere that there are several JPEG writers 
that will violate the JFIF spec in this same manner, so I decided to support it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7806" />
    <CreationDate amount="2002-01-16 15:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't go back to opening a new perspective in a new window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="20">
        <Lines>
          <Line>- pick up new build and source code I'm working on</Line>
          <Line>- open a java perspective</Line>
          <Line>- change the Preferences to open a new perspective in the same window</Line>
          <Line>- set some breakpoints in my code and hit run</Line>
          <Line>- debug perspective pops up but appears to 'replace' the java perspective (i.e.</Line>
          <Line>I have to say open a new java perspective and not click on a tab item in the</Line>
          <Line>left margin to get back to the java perspective)</Line>
          <Line>- change Preference to open a new perspective in a different window</Line>
          <Line>- have the java perspective displayed and run my code again</Line>
          <Line>- debug perspective pops up, replacing the java perspective again (i.e. no new</Line>
          <Line>window)</Line>
          <Line>- try shutting down and restarting Eclipse and get the same behaviour</Line>
          <Line>- check the Preferences to ensure that the bullet indicating 'open a new</Line>
          <Line>perspective in a different window' is selected (and it was).</Line>
          <Line>This is a variant on " .... the debuger always opens in a new window ..."</Line>
          <Line>The prefs for this are confusing.</Line>
          <Line>You need to uncheck Reuse Perspectives as well.</Line>
          <Line>If this is checked, it reuses any window with the same input and switches its</Line>
          <Line>perspective.</Line>
          <Line>I've filed bug 7818 for this and am closing this one.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>This with build 2002015...

- pick up new build and source code I'm working on
- open a java perspective
- change the Preferences to open a new perspective in the same window
- set some breakpoints in my code and hit run
- debug perspective pops up but appears to 'replace' the java perspective (i.e. 
I have to say open a new java perspective and not click on a tab item in the 
left margin to get back to the java perspective)
- change Preference to open a new perspective in a different window
- have the java perspective displayed and run my code again
- debug perspective pops up, replacing the java perspective again (i.e. no new 
window)
- try shutting down and restarting Eclipse and get the same behaviour
- check the Preferences to ensure that the bullet indicating 'open a new 
perspective in a different window' is selected (and it was).
This is a variant on " .... the debuger always opens in a new window ..."
The prefs for this are confusing.
You need to uncheck Reuse Perspectives as well.
If this is checked, it reuses any window with the same input and switches its 
perspective.
I've filed bug 7818 for this and am closing this one.</WithStack>
    <WithOutStack>This with build 2002015...

- pick up new build and source code I'm working on
- open a java perspective
- change the Preferences to open a new perspective in the same window
- set some breakpoints in my code and hit run
- debug perspective pops up but appears to 'replace' the java perspective (i.e. 
I have to say open a new java perspective and not click on a tab item in the 
left margin to get back to the java perspective)
- change Preference to open a new perspective in a different window
- have the java perspective displayed and run my code again
- debug perspective pops up, replacing the java perspective again (i.e. no new 
window)
- try shutting down and restarting Eclipse and get the same behaviour
- check the Preferences to ensure that the bullet indicating 'open a new 
perspective in a different window' is selected (and it was).
This is a variant on " .... the debuger always opens in a new window ..."
The prefs for this are confusing.
You need to uncheck Reuse Perspectives as well.
If this is checked, it reuses any window with the same input and switches its 
perspective.
I've filed bug 7818 for this and am closing this one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7807" />
    <CreationDate amount="2002-01-16 15:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Breakpoint creation API should not use java elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="521" end="1938" />
        <code>/**
 * Creates and returns a line breakpoint for types with the given
 * name, at the given line number. If a character range within the
 * line is known, it may be specified by charStart/charEnd.
 * If hitCount is &gt; 0, the breakpoint will suspend execution when it is
 * "hit" the specified number of times.
 *
 * @param resource the resource to associate the newly created breakpoint
 *   marker with
 * @param typeName the fully qualified name of the type in which to create
 *   the breakpoint. If the breakpoint is in an inner type, the fully qualified
 *   name of the top level type in which the breakpoint is contained should
 *   be specified
 * @param lineNumber the lineNumber on which the breakpoint is created - line
 *   numbers are 1 based, associated with the compilation unit in which
 *   the type is defined
 * @param charStart the first character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param charEnd the last character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param hitCount the number of times the breakpoint will be hit before
 *   suspending execution - 0 if it should always suspend
 * @return a line breakpoint
 * @exception DebugException If this method fails. Reasons include:&lt;ul&gt; 
 *&lt;li&gt;Failure creating underlying marker.  The DebugException's status contains
 * the underlying exception responsible for the failure.&lt;/li&gt;&lt;/ul&gt;
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Breakpoint creation would be more flexible if we modified the API to create 
breakpoints in terms of type names, method names, method signatures etc. Tying 
breakpoints to the Java model means that breakpoints cannot be created unless 
there is an associated java model element (and sometimes, source is not 
availabe, etc.). 

The API should be changed to provide the required information for creating the 
breakpoint, and an arbitrary IResource with which to associated the marker.
Example creation API (JDIDebugModel)


/**
 * Creates and returns a line breakpoint for types with the given
 * name, at the given line number. If a character range within the
 * line is known, it may be specified by charStart/charEnd.
 * If hitCount is &gt; 0, the breakpoint will suspend execution when it is
 * "hit" the specified number of times.
 *
 * @param resource the resource to associate the newly created breakpoint
 *   marker with
 * @param typeName the fully qualified name of the type in which to create
 *   the breakpoint. If the breakpoint is in an inner type, the fully qualified
 *   name of the top level type in which the breakpoint is contained should
 *   be specified
 * @param lineNumber the lineNumber on which the breakpoint is created - line
 *   numbers are 1 based, associated with the compilation unit in which
 *   the type is defined
 * @param charStart the first character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param charEnd the last character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param hitCount the number of times the breakpoint will be hit before
 *   suspending execution - 0 if it should always suspend
 * @return a line breakpoint
 * @exception DebugException If this method fails. Reasons include:&lt;ul&gt; 
 *&lt;li&gt;Failure creating underlying marker.  The DebugException's status contains
 * the underlying exception responsible for the failure.&lt;/li&gt;&lt;/ul&gt;
 */
public static IJavaLineBreakpoint createLineBreakpoint(IResource resource, 
String typeName, int lineNumber, int charStart, int charEnd, int hitCount) 
throws DebugException;
Fixed. Creation API is now name based. Clients may also specify an arbitrary 
set of attributes to be placed on the underlying marker (this allows the Java 
UI to mark java breakpoints with required attributes that the java debugger 
does not have knowledge of).
Fixed
Please verify.
The API on JDIDebugModel#createLineBreakpoint says that adding the breakpoint to
the breakpoint manager is a client responsibility. Unless I'm missing something,
this statement isn't true and should be removed.

The API on all the JDIDebugModel#create*Breakpoint methods doesn't mention what
clients should pass in to the attributes parameter if they don't wish to add any
of their own attributes. If clients should pass in null when they don't want to
add any attributes, we should specify this in the API.
Updated comments as indicated
Update javadoc to totally reflect new state.
Verified.</WithStack>
    <WithOutStack>Breakpoint creation would be more flexible if we modified the API to create 
breakpoints in terms of type names, method names, method signatures etc. Tying 
breakpoints to the Java model means that breakpoints cannot be created unless 
there is an associated java model element (and sometimes, source is not 
availabe, etc.). 

The API should be changed to provide the required information for creating the 
breakpoint, and an arbitrary IResource with which to associated the marker.
Example creation API (JDIDebugModel)


/**
 * Creates and returns a line breakpoint for types with the given
 * name, at the given line number. If a character range within the
 * line is known, it may be specified by charStart/charEnd.
 * If hitCount is &gt; 0, the breakpoint will suspend execution when it is
 * "hit" the specified number of times.
 *
 * @param resource the resource to associate the newly created breakpoint
 *   marker with
 * @param typeName the fully qualified name of the type in which to create
 *   the breakpoint. If the breakpoint is in an inner type, the fully qualified
 *   name of the top level type in which the breakpoint is contained should
 *   be specified
 * @param lineNumber the lineNumber on which the breakpoint is created - line
 *   numbers are 1 based, associated with the compilation unit in which
 *   the type is defined
 * @param charStart the first character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param charEnd the last character index associated with the breakpoint,
 *   or -1 if unspecified
 * @param hitCount the number of times the breakpoint will be hit before
 *   suspending execution - 0 if it should always suspend
 * @return a line breakpoint
 * @exception DebugException If this method fails. Reasons include:&lt;ul&gt; 
 *&lt;li&gt;Failure creating underlying marker.  The DebugException's status contains
 * the underlying exception responsible for the failure.&lt;/li&gt;&lt;/ul&gt;
 */
public static IJavaLineBreakpoint createLineBreakpoint(IResource resource, 
String typeName, int lineNumber, int charStart, int charEnd, int hitCount) 
throws DebugException;
Fixed. Creation API is now name based. Clients may also specify an arbitrary 
set of attributes to be placed on the underlying marker (this allows the Java 
UI to mark java breakpoints with required attributes that the java debugger 
does not have knowledge of).
Fixed
Please verify.
The API on JDIDebugModel#createLineBreakpoint says that adding the breakpoint to
the breakpoint manager is a client responsibility. Unless I'm missing something,
this statement isn't true and should be removed.

The API on all the JDIDebugModel#create*Breakpoint methods doesn't mention what
clients should pass in to the attributes parameter if they don't wish to add any
of their own attributes. If clients should pass in null when they don't want to
add any attributes, we should specify this in the API.
Updated comments as indicated
Update javadoc to totally reflect new state.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7808" />
    <CreationDate amount="2002-01-16 15:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS Console should use different colors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From the newsgroup:

&gt; JM&gt; We're currently working on refining exactly what is printed in the
&gt; console, but the general idea is that you will get output similar to that of
&gt; WinCVS or the comand-line client. Assuming the console is open. :-)

if you do so, please use the same colors :-)
i am used to merge and updated colors of WinCVS
and i really like to have a simple overview of which files are changed.
Added line coloring according to the source of the messages.
Colors are configurable from a preference page.

Verified.</WithStack>
    <WithOutStack>From the newsgroup:

&gt; JM&gt; We're currently working on refining exactly what is printed in the
&gt; console, but the general idea is that you will get output similar to that of
&gt; WinCVS or the comand-line client. Assuming the console is open. :-)

if you do so, please use the same colors :-)
i am used to merge and updated colors of WinCVS
and i really like to have a simple overview of which files are changed.
Added line coloring according to the source of the messages.
Colors are configurable from a preference page.

Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7809" />
    <CreationDate amount="2002-01-16 15:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>AddExceptionDialog makes illegal access to internal class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>AddExceptionDialog accesses JavaExceptionBreakpoint and its marker type

As part of the UI plugin, this dialog may only access IJavaExceptionBreakpoint.
Further, JavaExceptionBreakpoint should not give access to its marker type to
the outside world - the static method getMarkerType() should be deleted.
Fixed in AddExceptionDialog and JavaExceptionBreakpoint.
Verified.</WithStack>
    <WithOutStack>AddExceptionDialog accesses JavaExceptionBreakpoint and its marker type

As part of the UI plugin, this dialog may only access IJavaExceptionBreakpoint.
Further, JavaExceptionBreakpoint should not give access to its marker type to
the outside world - the static method getMarkerType() should be deleted.
Fixed in AddExceptionDialog and JavaExceptionBreakpoint.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7810" />
    <CreationDate amount="2002-01-16 16:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Rename on collapsing a tree gives confusing error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Open a folder or file with a parent</Line>
          <Line>2) Select rename</Line>
          <Line>3) Collapse the parent</Line>
          <Line>Need to go though error messages to make sure they are appropriate and</Line>
          <Line>something that the user can understand.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>If you rename a file inline and then collapse it's parent you get an error 
message that says 


Assertion failed; Destination should not be under resource's hierarchy..

First of all the ; should be a : and there should only be one period.
Secondly this is not consistent behaviour. If you hit return the rename happens 
without a problem.

STEPS
1) Open a folder or file with a parent
2) Select rename
3) Collapse the parent
Need to go though error messages to make sure they are appropriate and 
something that the user can understand. 

This is caused by a bug in the UI code, ResourceNavigatorRenameAction.  On focus 
loss, the rename operation tries to go ahead, but the selection has been changed 
to the parent.  It then tries to rename the parent to the new name of the child, 
which is illegal according to the Core API.  The assertion failure message is 
consistent with what the caller is trying to do (punctuation problems aside).  
Moving to UI.
The rename problem is fixed in build &gt;20020115. The message is from Core and 
requires a fix from them.
Closing PR as Core has fixed the message.
Marking closed</WithStack>
    <WithOutStack>If you rename a file inline and then collapse it's parent you get an error 
message that says 


Assertion failed; Destination should not be under resource's hierarchy..

First of all the ; should be a : and there should only be one period.
Secondly this is not consistent behaviour. If you hit return the rename happens 
without a problem.

STEPS
1) Open a folder or file with a parent
2) Select rename
3) Collapse the parent
Need to go though error messages to make sure they are appropriate and 
something that the user can understand. 

This is caused by a bug in the UI code, ResourceNavigatorRenameAction.  On focus 
loss, the rename operation tries to go ahead, but the selection has been changed 
to the parent.  It then tries to rename the parent to the new name of the child, 
which is illegal according to the Core API.  The assertion failure message is 
consistent with what the caller is trying to do (punctuation problems aside).  
Moving to UI.
The rename problem is fixed in build &gt;20020115. The message is from Core and 
requires a fix from them.
Closing PR as Core has fixed the message.
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7811" />
    <CreationDate amount="2002-01-16 16:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Disappearing cursor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Write some code that references an unimported class.</Line>
          <Line>2. Save.</Line>
          <Line>3. ctrl+shift+o (organize imports). This should cause the source to shift down a</Line>
          <Line>line (as the import is added).</Line>
          <Line>4. The cursor disappears.</Line>
          <Line>Jared,</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Write some code that references an unimported class.
2. Save.
3. ctrl+shift+o (organize imports). This should cause the source to shift down a
line (as the import is added).
4. The cursor disappears.
Jared,

can you give me a reproducible test case? I can't reproduce it on my linux box.
also, please let me know with which build this happens.
It turns out that the case I gave you isn't guaranteed to cause the problem.
However, I have been able to reproduce this on my Linux box at home just by
fiddling with adding/removing imports after saving.

Both machines are running Enlightenment (a cousin of Gnome) on Mandrake 8.1.
I've been unable to reproduce this on RedHat 7.2 in vanilla KDE or Gnome.
The problem *does* appear on RedHat 7.2 running Enlightenment.

This is probably an issue for the SWT team.
changing component to SWT
Have you seen this anywhere but over a StyledText? Does StyledText hide the 
cursor while importing? Does JDT?

StyledText does not hide the caret at any time.  Not sure what JDT does.  This 
does not seem like a StyledText problem - it seems like a Caret problem.  Ping 
KR to see if he has any comment.
Canvas.scroll hides the caret before scrolling and displays it after scrolling. 
Sounds like this doesn't always work right on Motif.

I'm assuming that the caret isn't just scrolled off screen. I.e., the caret was 
in the center of the screen, you do an organize imports which adds one line. 
Now the caret should be just one line below the center of the screen but 
instead it's gone?

That's right. It just disappears. It is still "there", however. When I type, my
text still appears in the correct position, and clicking on a location with my
mouse still moves the cursor as you'd expect (though I can't see it).

Changing focus to a different application then returning it to Eclipse seems to
bring it back.
While the problem may be only seen in StyledText, this sounds like a more 
general SWT problem with Canvas and/or Caret on Linux-Motif.  It is probably 
only seen in the StyledText widget because the StyledText widget is the only 
Eclipse widget that actually uses the Caret widget.  Reassigning to McQ.
Ok, this bug is really old and Linux Motif is no longer a supported Eclipse platform.  Closing.</WithStack>
    <WithOutStack>1. Write some code that references an unimported class.
2. Save.
3. ctrl+shift+o (organize imports). This should cause the source to shift down a
line (as the import is added).
4. The cursor disappears.
Jared,

can you give me a reproducible test case? I can't reproduce it on my linux box.
also, please let me know with which build this happens.
It turns out that the case I gave you isn't guaranteed to cause the problem.
However, I have been able to reproduce this on my Linux box at home just by
fiddling with adding/removing imports after saving.

Both machines are running Enlightenment (a cousin of Gnome) on Mandrake 8.1.
I've been unable to reproduce this on RedHat 7.2 in vanilla KDE or Gnome.
The problem *does* appear on RedHat 7.2 running Enlightenment.

This is probably an issue for the SWT team.
changing component to SWT
Have you seen this anywhere but over a StyledText? Does StyledText hide the 
cursor while importing? Does JDT?

StyledText does not hide the caret at any time.  Not sure what JDT does.  This 
does not seem like a StyledText problem - it seems like a Caret problem.  Ping 
KR to see if he has any comment.
Canvas.scroll hides the caret before scrolling and displays it after scrolling. 
Sounds like this doesn't always work right on Motif.

I'm assuming that the caret isn't just scrolled off screen. I.e., the caret was 
in the center of the screen, you do an organize imports which adds one line. 
Now the caret should be just one line below the center of the screen but 
instead it's gone?

That's right. It just disappears. It is still "there", however. When I type, my
text still appears in the correct position, and clicking on a location with my
mouse still moves the cursor as you'd expect (though I can't see it).

Changing focus to a different application then returning it to Eclipse seems to
bring it back.
While the problem may be only seen in StyledText, this sounds like a more 
general SWT problem with Canvas and/or Caret on Linux-Motif.  It is probably 
only seen in the StyledText widget because the StyledText widget is the only 
Eclipse widget that actually uses the Caret widget.  Reassigning to McQ.
Ok, this bug is really old and Linux Motif is no longer a supported Eclipse platform.  Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7812" />
    <CreationDate amount="2002-01-16 16:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception in decorator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205429">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.CVSDecorationRunnable.computeLabelOverlaysFor(CVSDecorationRunnable.java:173)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.ui.CVSDecorationRunnable.run(CVSDecorationRunnable.java:95)</Frame>
          <Frame depth="2">java.lang.Thread.run(Thread.java:498)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I did not have decorators turned on. I checked out a project from the repo view 
and got the following (tiny) walkback.

java.lang.NullPointerException
	at 
org.eclipse.team.internal.ccvs.ui.CVSDecorationRunnable.computeLabelOverlaysFor
(CVSDecorationRunnable.java:173)
	at org.eclipse.team.internal.ccvs.ui.CVSDecorationRunnable.run
(CVSDecorationRunnable.java:95)
	at java.lang.Thread.run(Thread.java:498)
Fixed.</WithStack>
    <WithOutStack>I did not have decorators turned on. I checked out a project from the repo view 
and got the following (tiny) walkback.


Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7813" />
    <CreationDate amount="2002-01-16 16:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE in SearchPageDescriptor.readExtensionScorePairs/StringTokenizer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020115

I had a method reference selected in a java file. When I selected Edit-&gt;Search 
I got an internal error with the attached walkback. When I tried to open the 
Search dialog again it worked.
Created attachment 228
NPE in SearchPageDescriptor.readExtensionScorePairs

Knuth is this reproduceable?
Actually, it is reproducable. Happens everytime after I restart Eclipse.
Steps to reproduce:
-download /va2000/INCOMING/forKnut/7813.zip from walleye
-unzip the workspace (called Platform-UI) and start Eclipse with it 
-in the file AddBookmarkAction.java (open in the editor) select the word 
getAdapter in the createMarker(String) method.
-select Edit-&gt;Search
-&gt;NPE occurs the first time you do this after starting Eclipse
*** Bug 7817 has been marked as a duplicate of this bug. ***
The attribute "EXTENSIONS" in the SearchPages plugin.xml extension is specified
as optional but was not treated as such in the code. The new search page
provided by the Help plug-in does not provide this attribute (that's ok).</WithStack>
    <WithOutStack>build 20020115

I had a method reference selected in a java file. When I selected Edit-&gt;Search 
I got an internal error with the attached walkback. When I tried to open the 
Search dialog again it worked.
Created attachment 228
NPE in SearchPageDescriptor.readExtensionScorePairs

Knuth is this reproduceable?
Actually, it is reproducable. Happens everytime after I restart Eclipse.
Steps to reproduce:
-download /va2000/INCOMING/forKnut/7813.zip from walleye
-unzip the workspace (called Platform-UI) and start Eclipse with it 
-in the file AddBookmarkAction.java (open in the editor) select the word 
getAdapter in the createMarker(String) method.
-select Edit-&gt;Search
-&gt;NPE occurs the first time you do this after starting Eclipse
*** Bug 7817 has been marked as a duplicate of this bug. ***
The attribute "EXTENSIONS" in the SearchPages plugin.xml extension is specified
as optional but was not treated as such in the code. The new search page
provided by the Help plug-in does not provide this attribute (that's ok).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7814" />
    <CreationDate amount="2002-01-16 18:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>API for char range within a line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Debug models that support experession level stepping need to be able to specify 
a character range within a line that should be selected. Add API to IStackFrame 
for #getCharStart/#getCharEnd.
The launch view must use the specified character range (if any) for displaying 
the selected source line.
Fixed. Added API to IStackFrame, updated JDIStackFrame, and LaunchView to use 
information when available.
Please verify
Verified.</WithStack>
    <WithOutStack>Debug models that support experession level stepping need to be able to specify 
a character range within a line that should be selected. Add API to IStackFrame 
for #getCharStart/#getCharEnd.
The launch view must use the specified character range (if any) for displaying 
the selected source line.
Fixed. Added API to IStackFrame, updated JDIStackFrame, and LaunchView to use 
information when available.
Please verify
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7815" />
    <CreationDate amount="2002-01-16 18:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Export Wizard does not show items in default package</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create a new project.</Line>
          <Line>2. Create a couple new classes.  Don't specify a package (so they will be put in</Line>
          <Line>the default package).</Line>
          <Line>3. Select the classes from Step 2.</Line>
          <Line>4. File--&gt;Export.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Create a new project.
2. Create a couple new classes.  Don't specify a package (so they will be put in 
the default package).
3. Select the classes from Step 2.
4. File--&gt;Export.

Notice that the classes are not actually listed anywhere.  If you click Finish, 
the classes do get exported, so they are selected, just not displayed in the 
tree/list group of the wizard.
Note that within the wizard, if you select a project other than the project you 
created in the above steps and then reselect the project you created in the 
above steps, you will see the classes.  You do not see them when the wizard is 
opened and you initially select the project.
Same behavior noticed in the HP-UX 11.0

Eclipse stable build: 20020214
Motif: 2.1
CDE: 2.1.0
Java(TM) 2 RE, Standard Edition (build 1.3.1.02-011206-02:17)

Workaround specified by Lynne Kues works fine.
Works in build 20020430</WithStack>
    <WithOutStack>1. Create a new project.
2. Create a couple new classes.  Don't specify a package (so they will be put in 
the default package).
3. Select the classes from Step 2.
4. File--&gt;Export.

Notice that the classes are not actually listed anywhere.  If you click Finish, 
the classes do get exported, so they are selected, just not displayed in the 
tree/list group of the wizard.
Note that within the wizard, if you select a project other than the project you 
created in the above steps and then reselect the project you created in the 
above steps, you will see the classes.  You do not see them when the wizard is 
opened and you initially select the project.
Same behavior noticed in the HP-UX 11.0

Eclipse stable build: 20020214
Motif: 2.1
CDE: 2.1.0
Java(TM) 2 RE, Standard Edition (build 1.3.1.02-011206-02:17)

Workaround specified by Lynne Kues works fine.
Works in build 20020430</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7816" />
    <CreationDate amount="2002-01-16 19:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[resources] Wrong parent set in DeltaDataTree#assembleWithForwardDelta</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="372" end="445" />
        <code>d: = new DeltaDataTree(a.getRootNode().assembleWith(c.getRootNode()), a);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="857" end="872" />
        <code>a.getParent());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I believe there is a bug in this method, it looks like it assigns the wrong 
parent for the assembled delta that is returned.  The javadoc says,

 * Let d := a assembleWithForwardDelta: c.
 * d has the same content as c, and is represented as a delta tree
 * whose parent is the same as a's parent.

But the code does (replaced real code with a and c where appropriate):

d: = new DeltaDataTree(a.getRootNode().assembleWith(c.getRootNode()), a);

That is, d's parent is set to be a, instead of the parent of a.

This will have absolutely no effect on the behaviour of the resulting tree, 
since the assembled result contains all the data in "a", so "a" is never 
referenced.  However, this results in invalid delta chains, which could 
potentially lead to problems.  The fix would be:

d: = new DeltaDataTree(a.getRootNode().assembleWith(c.getRootNode()), 
a.getParent());

I'm not willing to try applying this fix before the 2.0 release, but it should 
be considered afterwards.
Will investigate post 2.0.

Reopening for investigation.
Closing old bug.</WithStack>
    <WithOutStack>I believe there is a bug in this method, it looks like it assigns the wrong 
parent for the assembled delta that is returned.  The javadoc says,

 * Let d := a assembleWithForwardDelta: c.
 * d has the same content as c, and is represented as a delta tree
 * whose parent is the same as a's parent.

But the code does (replaced real code with a and c where appropriate):

d: = new DeltaDataTree(a.getRootNode().assembleWith(c.getRootNode()), a);

That is, d's parent is set to be a, instead of the parent of a.

This will have absolutely no effect on the behaviour of the resulting tree, 
since the assembled result contains all the data in "a", so "a" is never 
referenced.  However, this results in invalid delta chains, which could 
potentially lead to problems.  The fix would be:

d: = new DeltaDataTree(a.getRootNode().assembleWith(c.getRootNode()), 
a.getParent());

I'm not willing to try applying this fix before the 2.0 release, but it should 
be considered afterwards.
Will investigate post 2.0.

Reopening for investigation.
Closing old bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7817" />
    <CreationDate amount="2002-01-16 19:30:00 -0500" />
    <DupId amount="7813" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE opening search dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205433">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java(Compiled Code))</Frame>
          <Frame depth="1">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs(SearchPageDescriptor.java:201)</Frame>
          <Frame depth="3">org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension(SearchPageDescriptor.java:184)</Frame>
          <Frame depth="4">org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore(SearchPageDescriptor.java:166)</Frame>
          <Frame depth="5">org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex(SearchDialog.java:278)</Frame>
          <Frame depth="6">org.eclipse.search.internal.ui.SearchDialog.createPageArea(SearchDialog.java:142)</Frame>
          <Frame depth="7">org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea(ExtendedDialogWindow.java:142)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)</Frame>
          <Frame depth="9">org.eclipse.jface.window.Window.create(Window.java:237)</Frame>
          <Frame depth="10">org.eclipse.search.internal.ui.SearchDialog.create(SearchDialog.java:128)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.open(Window.java:510)</Frame>
          <Frame depth="12">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:45)</Frame>
          <Frame depth="13">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:32)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:362)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Open a new workbench</Line>
          <Line>2. Create a simple project with file "abc.txt"</Line>
          <Line>3. Leave the editor on "abc.txt" open</Line>
          <Line>4. Click on the "Flashlight" button in the toolbar</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 2002-01-15

1. Open a new workbench
2. Create a simple project with file "abc.txt"
3. Leave the editor on "abc.txt" open
4. Click on the "Flashlight" button in the toolbar

Internal Error:

java.lang.NullPointerException
	at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java(Compiled Code))
	at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java(Compiled Code))
	at 
org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs(Sear
chPageDescriptor.java:201)
	at 
org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension(Sea
rchPageDescriptor.java:184)
	at 
org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore(SearchPageDescr
iptor.java:166)
	at 
org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex(SearchDialog.j
ava:278)
	at 
org.eclipse.search.internal.ui.SearchDialog.createPageArea(SearchDialog.java:142
)
	at 
org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea(Extend
edDialogWindow.java:142)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)
	at org.eclipse.jface.window.Window.create(Window.java:237)
	at 
org.eclipse.search.internal.ui.SearchDialog.create(SearchDialog.java:128)
	at org.eclipse.jface.window.Window.open(Window.java:510)
	at 
org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction
.java:45)
	at 
org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction
.java:32)
	at 
org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionCont
ributionItem.java:407)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContribu
tionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio
nContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio
nContributionItem.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at 
org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled 
Code))
	at 
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:87
8)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)


*** This bug has been marked as a duplicate of 7813 ***</WithStack>
    <WithOutStack>Build 2002-01-15

1. Open a new workbench
2. Create a simple project with file "abc.txt"
3. Leave the editor on "abc.txt" open
4. Click on the "Flashlight" button in the toolbar

Internal Error:




*** This bug has been marked as a duplicate of 7813 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7818" />
    <CreationDate amount="2002-01-16 21:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need to improve wording of preferences for perspective opening</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build 20020115

The prefs for perspective opening are confusing.
See bug 7806.
These options have been deleted.</WithStack>
    <WithOutStack>Build 20020115

The prefs for perspective opening are confusing.
See bug 7806.
These options have been deleted.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7819" />
    <CreationDate amount="2002-01-16 23:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Preferences] Apply buttons should be disabled until change made</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="718" end="763" />
        <code>public boolean isDirty() {
    return true;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) someone came up with a design that would work and was willing to contribute it, or</Line>
          <Line />
          <Line>2) this should be considered for preferences work in e4 (as the eclipse 4.0 work)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020115

The Apply button the Properties and Preferences dialogs should be disabled 
until the user actually makes a change which can be applied.
Please consider this change.
Randy and I discussed this change and here's what we came up with:

There's no easy way to force existing preference pages to do this (aside from 
releasing a breaking API change) because most preference pages don't keep a 
dirty bit.

It looks like the only reasonable solution is to create a new interface that 
extends IPreferencePage (such as IPreferencePageWithDirtyState, or something 
more elegant).  If we change PreferencePage to implement the new interface, and 
supply reasonable implementations for the new methods such as

public boolean isDirty() {
    return true;
}

then existing pages won't notice the difference and the pages provided with 
Eclipse could be changed to exhibit the behaviour we want.

The problem with this approach is that some pages will appear "smart" and 
others will appear "dumb" and the preferences dialog may not be self-
consistent.  If this isn't an issue, then I can get to work and fix it, 
otherwise, we'll need to discuss this further.
Not critical for 2.0.  Defer.

Reopen to investigate
Im developing swt apps so would benefit from this behaviour! any activity on this?
*** Bug 11558 has been marked as a duplicate of this bug. ***
There are currently no plans to work on this feature
(In reply to comment #7)
&gt; There are currently no plans to work on this feature

2 years ago there were no plans to fix it. What about the current day? Could you fix it?

Currently behavior is wrong (severity should be higher) - user should see that changes were saved...


(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; &gt; There are currently no plans to work on this feature
&gt; 
&gt; 2 years ago there were no plans to fix it. What about the current day? Could
&gt; you fix it?

This is marked as WONTFIX (not defered).

AFAICS there is no way to ask a preference dialog (and current preference page contributions) if there are changes waiting to be applied.

This could be re-opened if 

1) someone came up with a design that would work and was willing to contribute it, or

2) this should be considered for preferences work in e4 (as the eclipse 4.0 work)

PW



(In reply to comment #9)
&gt; (In reply to comment #8)
&gt; &gt; (In reply to comment #7)
&gt; &gt; &gt; There are currently no plans to work on this feature
&gt; &gt; 
&gt; &gt; 2 years ago there were no plans to fix it. What about the current day? Could
&gt; &gt; you fix it?
&gt; 
&gt; This is marked as WONTFIX (not defered).
&gt; 
&gt; AFAICS there is no way to ask a preference dialog (and current preference page
&gt; contributions) if there are changes waiting to be applied.
&gt; 
&gt; This could be re-opened if 
&gt; 
&gt; 1) someone came up with a design that would work and was willing to contribute
&gt; it, or
&gt; 
&gt; 2) this should be considered for preferences work in e4 (as the eclipse 4.0
&gt; work)
&gt; 
&gt; PW

CQ:WIND00084361

I do agree that this Apply behavior feels wrong from a user's perspective.
However, looks like the system was designed this way and would need new API to make this work so this is not an easy bugfix..

Paul, did we invest time in this in the E4 effort?

Helmut
(In reply to comment #10)
&gt; 
&gt; Paul, did we invest time in this in the E4 effort?
&gt; 

No, there were some ideas for preferences work in E4 but AFAIK it didn't include anything in the UI itself.

PW</WithStack>
    <WithOutStack>Build 20020115

The Apply button the Properties and Preferences dialogs should be disabled 
until the user actually makes a change which can be applied.
Please consider this change.
Randy and I discussed this change and here's what we came up with:

There's no easy way to force existing preference pages to do this (aside from 
releasing a breaking API change) because most preference pages don't keep a 
dirty bit.

It looks like the only reasonable solution is to create a new interface that 
extends IPreferencePage (such as IPreferencePageWithDirtyState, or something 
more elegant).  If we change PreferencePage to implement the new interface, and 
supply reasonable implementations for the new methods such as

public boolean isDirty() {
    return true;
}

then existing pages won't notice the difference and the pages provided with 
Eclipse could be changed to exhibit the behaviour we want.

The problem with this approach is that some pages will appear "smart" and 
others will appear "dumb" and the preferences dialog may not be self-
consistent.  If this isn't an issue, then I can get to work and fix it, 
otherwise, we'll need to discuss this further.
Not critical for 2.0.  Defer.

Reopen to investigate
Im developing swt apps so would benefit from this behaviour! any activity on this?
*** Bug 11558 has been marked as a duplicate of this bug. ***
There are currently no plans to work on this feature
(In reply to comment #7)
&gt; There are currently no plans to work on this feature

2 years ago there were no plans to fix it. What about the current day? Could you fix it?

Currently behavior is wrong (severity should be higher) - user should see that changes were saved...


(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; &gt; There are currently no plans to work on this feature
&gt; 
&gt; 2 years ago there were no plans to fix it. What about the current day? Could
&gt; you fix it?

This is marked as WONTFIX (not defered).

AFAICS there is no way to ask a preference dialog (and current preference page contributions) if there are changes waiting to be applied.

This could be re-opened if 

1) someone came up with a design that would work and was willing to contribute it, or

2) this should be considered for preferences work in e4 (as the eclipse 4.0 work)

PW



(In reply to comment #9)
&gt; (In reply to comment #8)
&gt; &gt; (In reply to comment #7)
&gt; &gt; &gt; There are currently no plans to work on this feature
&gt; &gt; 
&gt; &gt; 2 years ago there were no plans to fix it. What about the current day? Could
&gt; &gt; you fix it?
&gt; 
&gt; This is marked as WONTFIX (not defered).
&gt; 
&gt; AFAICS there is no way to ask a preference dialog (and current preference page
&gt; contributions) if there are changes waiting to be applied.
&gt; 
&gt; This could be re-opened if 
&gt; 
&gt; 1) someone came up with a design that would work and was willing to contribute
&gt; it, or
&gt; 
&gt; 2) this should be considered for preferences work in e4 (as the eclipse 4.0
&gt; work)
&gt; 
&gt; PW

CQ:WIND00084361

I do agree that this Apply behavior feels wrong from a user's perspective.
However, looks like the system was designed this way and would need new API to make this work so this is not an easy bugfix..

Paul, did we invest time in this in the E4 effort?

Helmut
(In reply to comment #10)
&gt; 
&gt; Paul, did we invest time in this in the E4 effort?
&gt; 

No, there were some ideas for preferences work in E4 but AFAIK it didn't include anything in the UI itself.

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7820" />
    <CreationDate amount="2002-01-17 04:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Team 2.0 CVS decorators bug</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Hi, 

I don't see all the version information on every file
CVS i see [] and other files like changes.txt or some jars
i don't see anything.
Created attachment 230
the navigator frame with missing version info
I commented on this on the newsgroup. Basically, the [] are okay since those 
files do not exist remotely (have never been added or committed). The contents 
of the web-site directory, however, should have decorations and does not. 
Assigning to J-M.
I have changed the default decoration for files to be {name}  {revision} instead 
of {name} [{revision}]. This way if revision is empty the brackets are not 
shown.

I can't reproduce the bug with the decorators not showing up. Could you tell me 
how you got the project into CVS in the first place. The exact steps would help.
Thanks.
today i reopend the navigator screen an Bang everything was decorated!!
When i tested it i had closed and reopend the resource.
But now the PC is restarted and eclipse is restarted a few times
and now suddenly i see everything.

That i don't see any decoraters on files that are not in CVS is great (i think 
that shouldn't be the case)

But what the most beatifull way would be was this:

name is blue: Unmodified CVS resource
name is red: Modified CVS Resource
name is black: Not a CVS Resource

That would be great and ofcourse decorators everywhere not only the
navigator view but also in the packages view of the Java perspective
-Decorators in the Java packages view has some problems but otherwise works.
-Different colors in tree items will not happen. The tree widget does not 
support multiple colors in tree items and probably never will.
Decorators in java package view:
Then there are the same problems as before.
I didn't see any decorators when i posted my previous comments.
But after yours i closed everything reopend a Java Project
and yes suddenly now i have decorators for the most part
(everything except java files itself)


about those colors this is really a great lose.
and the Windows Tree supports this because things can be bold
and colored (see for example Outlook folder bar)
I really love the way VAJ Assist decorated VAJ. 
Added bug dependency for coloring tree items.
- outgoing deletions do not dirty the parent folder. This would be easy to 
change, all that is needed is to use an Entry file iterator instead of a 
resource visitor.

- decorator should disable/enable decoration thread in dispose().
hello,

it would very helpful and greate, if the decorators, especially for the java-
files, would be shown in package view in the java perspective.
*** Bug 8558 has been marked as a duplicate of this bug. ***
Fixed in build 20020214
-decorators appear in Packages view. The JDT team now know how to enable their 
views for decorator support.</WithStack>
    <WithOutStack>Hi, 

I don't see all the version information on every file
CVS i see [] and other files like changes.txt or some jars
i don't see anything.
Created attachment 230
the navigator frame with missing version info
I commented on this on the newsgroup. Basically, the [] are okay since those 
files do not exist remotely (have never been added or committed). The contents 
of the web-site directory, however, should have decorations and does not. 
Assigning to J-M.
I have changed the default decoration for files to be {name}  {revision} instead 
of {name} [{revision}]. This way if revision is empty the brackets are not 
shown.

I can't reproduce the bug with the decorators not showing up. Could you tell me 
how you got the project into CVS in the first place. The exact steps would help.
Thanks.
today i reopend the navigator screen an Bang everything was decorated!!
When i tested it i had closed and reopend the resource.
But now the PC is restarted and eclipse is restarted a few times
and now suddenly i see everything.

That i don't see any decoraters on files that are not in CVS is great (i think 
that shouldn't be the case)

But what the most beatifull way would be was this:

name is blue: Unmodified CVS resource
name is red: Modified CVS Resource
name is black: Not a CVS Resource

That would be great and ofcourse decorators everywhere not only the
navigator view but also in the packages view of the Java perspective
-Decorators in the Java packages view has some problems but otherwise works.
-Different colors in tree items will not happen. The tree widget does not 
support multiple colors in tree items and probably never will.
Decorators in java package view:
Then there are the same problems as before.
I didn't see any decorators when i posted my previous comments.
But after yours i closed everything reopend a Java Project
and yes suddenly now i have decorators for the most part
(everything except java files itself)


about those colors this is really a great lose.
and the Windows Tree supports this because things can be bold
and colored (see for example Outlook folder bar)
I really love the way VAJ Assist decorated VAJ. 
Added bug dependency for coloring tree items.
- outgoing deletions do not dirty the parent folder. This would be easy to 
change, all that is needed is to use an Entry file iterator instead of a 
resource visitor.

- decorator should disable/enable decoration thread in dispose().
hello,

it would very helpful and greate, if the decorators, especially for the java-
files, would be shown in package view in the java perspective.
*** Bug 8558 has been marked as a duplicate of this bug. ***
Fixed in build 20020214
-decorators appear in Packages view. The JDT team now know how to enable their 
views for decorator support.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7821" />
    <CreationDate amount="2002-01-17 04:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Team 2.0 CVS synchronze bug &lt;no-name&gt; dirs..</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="597" end="657" />
        <code>return ((DiffNode)element).internalGetName(fLeftIsLocal);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When ever i do a sync with the build 20010115 i get &lt;no-name&gt; for every 
directory. 
I have downloaded the missing icons as far as i know.
Created attachment 231
the image with &lt;no-name&gt;
Hmm. After some investigation, it turns out that this is brought about by 
switching from I20020109 to I20020115, without any changes to the team 
codebase. Suspect something changed in the compare framework. Will investigate, 
thanks for the bug report.
This is due to changes in the compare framework. The DiffTreeViewer installs a 
label provider which does the following:

if (element instanceof DiffNode)
   return ((DiffNode)element).internalGetName(fLeftIsLocal);

I override DiffNode.getName(), but I can't override DiffNode.internalGetName(), 
which is default visibility. Because I can't override it, the default one is 
called, and it doesn't work because I have a specialized implementation. I 
think the isLeft flag should be added to a public API, or the internalGetName 
should be made protected.

I have a local hack to fix this behaviour for the time being, but I'd prefer to 
take it out. Assigning to Compare.

Released fix to HEAD, thanks for the bug report.
fixed for 20020122. Overriding getName should work fine now.</WithStack>
    <WithOutStack>When ever i do a sync with the build 20010115 i get &lt;no-name&gt; for every 
directory. 
I have downloaded the missing icons as far as i know.
Created attachment 231
the image with &lt;no-name&gt;
Hmm. After some investigation, it turns out that this is brought about by 
switching from I20020109 to I20020115, without any changes to the team 
codebase. Suspect something changed in the compare framework. Will investigate, 
thanks for the bug report.
This is due to changes in the compare framework. The DiffTreeViewer installs a 
label provider which does the following:

if (element instanceof DiffNode)
   return ((DiffNode)element).internalGetName(fLeftIsLocal);

I override DiffNode.getName(), but I can't override DiffNode.internalGetName(), 
which is default visibility. Because I can't override it, the default one is 
called, and it doesn't work because I have a specialized implementation. I 
think the isLeft flag should be added to a public API, or the internalGetName 
should be made protected.

I have a local hack to fix this behaviour for the time being, but I'd prefer to 
take it out. Assigning to Compare.

Released fix to HEAD, thanks for the bug report.
fixed for 20020122. Overriding getName should work fine now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7822" />
    <CreationDate amount="2002-01-17 05:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Navigator] no 'show in packages view' on non-java resources</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>i had a .properties file open and wanted to do 'show in packages view'
no such action was available in the context menu
The property editor is the standard text editor and it cannot know about Java.

To enable this would require a workbench provided "Show in" mechanism. This 
would be a useful addition but needs thoughts.

Moving to platform UI for consideration.
(notice this is a lost bug) this cannot happen for 2.0
Defer
Reopen to investigate
Bug 13560 mentions that a generic Show in feature would be helpful.
We should have Show in Navigator, Show in Packages view perhaps using a 
workbench extension point.
When we discussed bug 25731 we decided that JDT should remove the Show in 
Package Explorer context menu item. The Package Explorer should instead have 
a "sync with editor" tool item like the Navigator does.
It is not clear that "Sync with editor" is the way to go.
This item is on our M5 issue list.

This got addressed with the new Show In functionality.</WithStack>
    <WithOutStack>i had a .properties file open and wanted to do 'show in packages view'
no such action was available in the context menu
The property editor is the standard text editor and it cannot know about Java.

To enable this would require a workbench provided "Show in" mechanism. This 
would be a useful addition but needs thoughts.

Moving to platform UI for consideration.
(notice this is a lost bug) this cannot happen for 2.0
Defer
Reopen to investigate
Bug 13560 mentions that a generic Show in feature would be helpful.
We should have Show in Navigator, Show in Packages view perhaps using a 
workbench extension point.
When we discussed bug 25731 we decided that JDT should remove the Show in 
Package Explorer context menu item. The Package Explorer should instead have 
a "sync with editor" tool item like the Navigator does.
It is not clear that "Sync with editor" is the way to go.
This item is on our M5 issue list.

This got addressed with the new Show In functionality.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7823" />
    <CreationDate amount="2002-01-17 05:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] Null is converted in an empty StructuredSelection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- I have a compilation unit editor open with an active text selection.</Line>
          <Line>- now I click on the packages view which has selected elements.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I found a strange behaviour when using ActionDelegates and listening to 
selection changes. Below is my scenario

- I have a compilation unit editor open with an active text selection.
- now I click on the packages view which has selected elements.

As a result the method ActionDelegate#selectionChanged is called two times.

first call: you get an empty structured selection also the reset method on 
SelectionService fires with the selection null, indicating that you are losing 
the selection. This null selection is magically converted into an empty 
structured selection in PluginAction.selectionChanged. I think this is not ok 
when the platform handles any kind of selection. It should propagate the null 
selection to my action delegate. Another strange behaviour of this conversion is
that in ActionDelegate#selectionChanged the received selection is unequal the 
selection I retrieve from the 
IWorkbenchWindow.getSelectionService.getSelection. This one is still the old 
text selection.

second call: now I get the structured selection from the packages view.
We have a workaround for this but which will fail if a someone emits an empty 
structured selection on purpose. Opt to raise to P2
Randy, could you investigate this one?
selectionChanged should only be called once.
We need to ensure that propogating null is allowed by the existing contracts 
and won't break existing clients.
The spec for IActionDelegate.selectionChanged indicates that null is a valid 
selection. However the following two classes in my workbench do not check for 
null:
org.eclipse.jdt.internal.debug.ui.actions.WatchpointAction
org.eclipse.debug.internal.ui.actions.CopyVariablesToClipboardActionDelegate

Agree that we should not be magically turning null into an empty selection. 

The null selection is fired because the selection service listens for part 
deactivation/activation and does not know that one will be followed by the 
other. This would require a change in the way we notify of part activation 
changes.

I think it is now too late in the cycle for 2.0 to make such a changes. 
Suggest defer.
Defer
Reopen to investigate
History lesson: although we spec'ed that null could be passed, we originally did not pass null in the case of no selection (i.e. when the active part does not implement ISelectionProvider), but instead converted it to the empty selection.
When we added the support to distinguish between no selection and empty selection, we did that using the mix-in interface INullSelectionListener.
If the listener implements INullSelectionListener, we do pass null rather than converting to the empty selection (as per the spec for ISelectionListener.selectionChanged).


There is no plan to work on this currently
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I found a strange behaviour when using ActionDelegates and listening to 
selection changes. Below is my scenario

- I have a compilation unit editor open with an active text selection.
- now I click on the packages view which has selected elements.

As a result the method ActionDelegate#selectionChanged is called two times.

first call: you get an empty structured selection also the reset method on 
SelectionService fires with the selection null, indicating that you are losing 
the selection. This null selection is magically converted into an empty 
structured selection in PluginAction.selectionChanged. I think this is not ok 
when the platform handles any kind of selection. It should propagate the null 
selection to my action delegate. Another strange behaviour of this conversion is
that in ActionDelegate#selectionChanged the received selection is unequal the 
selection I retrieve from the 
IWorkbenchWindow.getSelectionService.getSelection. This one is still the old 
text selection.

second call: now I get the structured selection from the packages view.
We have a workaround for this but which will fail if a someone emits an empty 
structured selection on purpose. Opt to raise to P2
Randy, could you investigate this one?
selectionChanged should only be called once.
We need to ensure that propogating null is allowed by the existing contracts 
and won't break existing clients.
The spec for IActionDelegate.selectionChanged indicates that null is a valid 
selection. However the following two classes in my workbench do not check for 
null:
org.eclipse.jdt.internal.debug.ui.actions.WatchpointAction
org.eclipse.debug.internal.ui.actions.CopyVariablesToClipboardActionDelegate

Agree that we should not be magically turning null into an empty selection. 

The null selection is fired because the selection service listens for part 
deactivation/activation and does not know that one will be followed by the 
other. This would require a change in the way we notify of part activation 
changes.

I think it is now too late in the cycle for 2.0 to make such a changes. 
Suggest defer.
Defer
Reopen to investigate
History lesson: although we spec'ed that null could be passed, we originally did not pass null in the case of no selection (i.e. when the active part does not implement ISelectionProvider), but instead converted it to the empty selection.
When we added the support to distinguish between no selection and empty selection, we did that using the mix-in interface INullSelectionListener.
If the listener implements INullSelectionListener, we do pass null rather than converting to the empty selection (as per the spec for ISelectionListener.selectionChanged).


There is no plan to work on this currently
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7824" />
    <CreationDate amount="2002-01-17 06:14:00 -0500" />
    <DupId amount="7082" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>NPE in builder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205441">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.util.CharOperation.concatWith(CharOperation.java:164)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.assembleName(NameEnvironment.java:139)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.findClass(NameEnvironment.java:156)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.findType(NameEnvironment.java:170)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:59)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:23)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces(BinaryTypeBinding.java:411)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.storeDependencyInfo(CompilationUnitScope.java:512)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:463)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:261)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile(AbstractImageBuilder.java:212)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile(AbstractImageBuilder.java:158)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:100)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildDeltas(JavaBuilder.java:121)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build(JavaBuilder.java:76)</Frame>
          <Frame depth="15">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:356)</Frame>
          <Frame depth="16">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:821)</Frame>
          <Frame depth="17">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="18">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:114)</Frame>
          <Frame depth="19">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:179)</Frame>
          <Frame depth="20">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:189)</Frame>
          <Frame depth="21">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:138)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:821)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="24">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:152)</Frame>
          <Frame depth="25">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:214)</Frame>
          <Frame depth="26">org.eclipse.core.internal.resources.Workspace.build(Workspace.java:130)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.GlobalBuildAction.build(GlobalBuildAction.java:57)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.GlobalBuildAction$1.run(GlobalBuildAction.java:141)</Frame>
          <Frame depth="29">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Happened after I have deleted a constructor from a class. Tried to reproduce 
but same action work the second time.


Log: Thu Jan 17 12:11:10 CET 2002
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.util.CharOperation.concatWith
(CharOperation.java:164)
	at org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.assembleName
(NameEnvironment.java:139)
	at org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.findClass
(NameEnvironment.java:156)
	at org.eclipse.jdt.internal.core.newbuilder.NameEnvironment.findType
(NameEnvironment.java:170)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType
(LookupEnvironment.java:59)
	at 
org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve
(UnresolvedReferenceBinding.java:23)
	at 
org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces
(BinaryTypeBinding.java:411)
	at 
org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.storeDependencyInf
o(CompilationUnitScope.java:512)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:463)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:261)
	at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:212)
	at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:158)
	at 
org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.build
(IncrementalImageBuilder.java:100)
	at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildDeltas
(JavaBuilder.java:121)
	at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build
(JavaBuilder.java:76)
	at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:356)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:114)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:179)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:189)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:138)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:821)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:152)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:214)
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:130)
	at org.eclipse.ui.internal.GlobalBuildAction.build
(GlobalBuildAction.java:57)
	at org.eclipse.ui.internal.GlobalBuildAction$1.run
(GlobalBuildAction.java:141)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)
We need a reproducable case.

What build# &amp; VM are you running?

*** This bug has been marked as a duplicate of 7082 ***
I really tried to reproduce it but I wasn't able to do so. I am running on 
build 20020115 using Sun's JDK 1.3.1_01</WithStack>
    <WithOutStack>Happened after I have deleted a constructor from a class. Tried to reproduce 
but same action work the second time.


Log: Thu Jan 17 12:11:10 CET 2002
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.

We need a reproducable case.

What build# &amp; VM are you running?

*** This bug has been marked as a duplicate of 7082 ***
I really tried to reproduce it but I wasn't able to do so. I am running on 
build 20020115 using Sun's JDK 1.3.1_01</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7825" />
    <CreationDate amount="2002-01-17 06:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AbstractVariableDeclaration::modifiersSourceStart always 0 for Argument</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="0" end="52" />
        <code>class A {
	public void m(int i, final boolean b){}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>class A {
	public void m(int i, final boolean b){}
}


modifiersSourceStart is 0 for both Arguments
i'd expect it to be the same as type.sourceStart for the first argument 
(beginning of 'int')
and point to the beginning of 'final' for the seconf argument
Won't be fixed in the current stream. Need to wait for the new AST nodes.
You should use the declaration source start instead of the modifier source 
start. The declaration source start is properly set in build &gt; 0109.
Let me know if you have any problem. These positions are fixed in the new AST 
nodes.
ok, fixed - using declarationSourceStart
with 0 problems</WithStack>
    <WithOutStack>class A {
	public void m(int i, final boolean b){}
}


modifiersSourceStart is 0 for both Arguments
i'd expect it to be the same as type.sourceStart for the first argument 
(beginning of 'int')
and point to the beginning of 'final' for the seconf argument
Won't be fixed in the current stream. Need to wait for the new AST nodes.
You should use the declaration source start instead of the modifier source 
start. The declaration source start is properly set in build &gt; 0109.
Let me know if you have any problem. These positions are fixed in the new AST 
nodes.
ok, fixed - using declarationSourceStart
with 0 problems</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7826" />
    <CreationDate amount="2002-01-17 06:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE is java search page when context is CodeStream.generateSyntheticArgumentValues</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205444">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:122)</Frame>
          <Frame depth="1">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:138)</Frame>
          <Frame depth="2">org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs(SearchPageDescriptor.java:201)</Frame>
          <Frame depth="3">org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension(SearchPageDescriptor.java:184)</Frame>
          <Frame depth="4">org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore(SearchPageDescriptor.java:166)</Frame>
          <Frame depth="5">org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex(SearchDialog.java:278)</Frame>
          <Frame depth="6">org.eclipse.search.internal.ui.SearchDialog.createPageArea(SearchDialog.java:142)</Frame>
          <Frame depth="7">org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea(ExtendedDialogWindow.java:142)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)</Frame>
          <Frame depth="9">org.eclipse.jface.window.Window.create(Window.java:237)</Frame>
          <Frame depth="10">org.eclipse.search.internal.ui.SearchDialog.create(SearchDialog.java:128)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.open(Window.java:510)</Frame>
          <Frame depth="12">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:45)</Frame>
          <Frame depth="13">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:32)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:42)</Frame>
          <Frame depth="29">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:28)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Method.java:327)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020115

When attempting to open the Java search page, I get an internal error dialog 
with trace (see below) in the log.

Selected method in package view was:

org.eclipse.jdt.internal.compiler.codegen.CodeStream.
generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding 
targetType, Expression enclosingInstance, AstNode invocationSite)

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Unhandled exception caught in event loop.
Reason:
Log: Thu Jan 17 12:24:45 CET 2002
4 org.eclipse.ui 0 java.lang.NullPointerException
java.lang.NullPointerException
        at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:122)
        at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:138)
        at 
org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs
(SearchPageDescriptor.java:201)
        at 
org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension
(SearchPageDescriptor.java:184)
        at org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore
(SearchPageDescriptor.java:166)
        at org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex
(SearchDialog.java:278)
        at org.eclipse.search.internal.ui.SearchDialog.createPageArea
(SearchDialog.java:142)
        at 
org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea
(ExtendedDialogWindow.java:142)
        at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)
        at org.eclipse.jface.window.Window.create(Window.java:237)
        at org.eclipse.search.internal.ui.SearchDialog.create
(SearchDialog.java:128)
        at org.eclipse.jface.window.Window.open(Window.java:510)
        at org.eclipse.search.internal.ui.OpenSearchDialogAction.run
(OpenSearchDialogAction.java:45)
        at org.eclipse.search.internal.ui.OpenSearchDialogAction.run
(OpenSearchDialogAction.java:32)
        at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:204)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
        at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:42)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:28)
        at java.lang.reflect.Method.invoke(Method.java:327)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
        at org.eclipse.core.launcher.Main.run(Main.java:502)
        at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
java.lang.NullPointerException
dup, that is fixed in the latest</WithStack>
    <WithOutStack>Build 20020115

When attempting to open the Java search page, I get an internal error dialog 
with trace (see below) in the log.

Selected method in package view was:

org.eclipse.jdt.internal.compiler.codegen.CodeStream.
generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding 
targetType, Expression enclosingInstance, AstNode invocationSite)

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Unhandled exception caught in event loop.
Reason:
Log: Thu Jan 17 12:24:45 CET 2002
4 org.eclipse.ui 0 java.lang.NullPointerException
java.lang.NullPointerException
dup, that is fixed in the latest</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7827" />
    <CreationDate amount="2002-01-17 08:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>null returned from getOriginal(IJavaElement workingCopyElement) for IMPORT_CONTAINER</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The switch statement in WorkingCopy.getOriginal(IJavaElement workingCopyElement)
does not handle import containers i.e. type == IMPORT_CONTAINER and thus
returning null.
Added case statement for IMPORT_CONTAINER.</WithStack>
    <WithOutStack>The switch statement in WorkingCopy.getOriginal(IJavaElement workingCopyElement)
does not handle import containers i.e. type == IMPORT_CONTAINER and thus
returning null.
Added case statement for IMPORT_CONTAINER.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7828" />
    <CreationDate amount="2002-01-17 08:24:00 -0500" />
    <DupId amount="10800" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Arguments for Java App when launched interpreted differently by Workbench then from command line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have created a Java Project where naturally one of my classes has a main 
method in order to run the application.
I right click on that class and select Properties, in the dialog window that 
appears I fill in arguments required by the program, of course those program 
arguments will show up in the args[] array parameter in the main method
(public static void main(String[] args)

The argument I feed it is:

myServer="My Server"

When I run the program from the workbench, the args array will be populated as 
follows (which is not what I expect):

args[0] = myServer=My
args[1] = Server

However, when I run this same application from a regular DOS shell, I get what 
I expect which is:

args[0] = myServer=My Server

The quotes around My Server are supposed to indicate that the argument that 
follows may contain spaces.

I believe the workbench is thus wrong, and the shell is correct.

Thanks and regards
pls verify that this quoting problem is addressed in the new launch config 
implementation. 

Moving to Debug


*** This bug has been marked as a duplicate of 10800 ***</WithStack>
    <WithOutStack>I have created a Java Project where naturally one of my classes has a main 
method in order to run the application.
I right click on that class and select Properties, in the dialog window that 
appears I fill in arguments required by the program, of course those program 
arguments will show up in the args[] array parameter in the main method
(public static void main(String[] args)

The argument I feed it is:

myServer="My Server"

When I run the program from the workbench, the args array will be populated as 
follows (which is not what I expect):

args[0] = myServer=My
args[1] = Server

However, when I run this same application from a regular DOS shell, I get what 
I expect which is:

args[0] = myServer=My Server

The quotes around My Server are supposed to indicate that the argument that 
follows may contain spaces.

I believe the workbench is thus wrong, and the shell is correct.

Thanks and regards
pls verify that this quoting problem is addressed in the new launch config 
implementation. 

Moving to Debug


*** This bug has been marked as a duplicate of 10800 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7829" />
    <CreationDate amount="2002-01-17 09:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>IActionDelegate#selectionChanged call many times</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="5726" end="6074" />
        <code>public static void refreshActionList() {
		Iterator iter = staticActionList.iterator();
		while (iter.hasNext()) {
			WWinPluginAction action = (WWinPluginAction)iter.next();
			if ((action.getDelegate() == null) &amp;&amp; 
action.isOkToCreateDelegate())
				action.createDelegate();
				action.refreshSelection();
		}
		staticActionList.trimToSize();
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Start a typical workbench (some open editors, a packages view visible, ....) 
and set a breakpoint on selectionChanged for a subclass of IActionDelegate (for 
example RedoRefactoringAction). During startup the selectionChanged method is 
called 5 times.

Stack trace for 2nd - 5th call

Thread [main] (Suspended (breakpoint at line 86 in 
org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction))
	org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction.se
lectionChanged(org.eclipse.jface.action.IAction, 
org.eclipse.jface.viewers.ISelection) line: 86
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).refreshEnablement() line: 170
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 226
	org.eclipse.ui.internal.WWinPluginAction.refreshSelection() line: 125
	org.eclipse.ui.internal.WWinPluginAction.refreshActionList() line: 65
	org.eclipse.ui.internal.Workbench.refreshPluginActions
(java.lang.String) line: 1025
	org.eclipse.ui.plugin.AbstractUIPlugin$1.run() line: 393
	org.eclipse.swt.widgets.RunnableLock.run() line: 29
	org.eclipse.ui.internal.UISynchronizer
(org.eclipse.swt.widgets.Synchronizer).runAsyncMessages() line: 93
	org.eclipse.swt.widgets.Display.runAsyncMessages() line: 1390
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1208
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 822
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 805
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 878
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 321
	SlimLauncher.main(java.lang.String[]) line: 14


After that I activate the Rename action from the refactoring menu add hit the 
breakpoint on RedoRefactoringAction#selectionChanged again. Stack trace is

Thread [main] (Suspended (breakpoint at line 86 in 
org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction))
	org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction.se
lectionChanged(org.eclipse.jface.action.IAction, 
org.eclipse.jface.viewers.ISelection) line: 86
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).refreshEnablement() line: 170
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 226
	org.eclipse.ui.internal.WWinPluginAction.refreshSelection() line: 125
	org.eclipse.ui.internal.WWinPluginAction.refreshActionList() line: 65
	org.eclipse.ui.internal.Workbench.refreshPluginActions
(java.lang.String) line: 1025
	org.eclipse.ui.plugin.AbstractUIPlugin$1.run() line: 393
	org.eclipse.swt.widgets.RunnableLock.run() line: 29
	org.eclipse.ui.internal.UISynchronizer
(org.eclipse.swt.widgets.Synchronizer).runAsyncMessages() line: 93
	org.eclipse.swt.widgets.Display.runAsyncMessages() line: 1390
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1208
	org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog
(org.eclipse.jface.window.Window).runEventLoop(org.eclipse.swt.widgets.Shell) 
line: 536
	org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog
(org.eclipse.jface.window.Window).open() line: 523
	org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activ
ate(org.eclipse.jdt.internal.corext.refactoring.base.Refactoring, 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard, java.lang.String, 
boolean) line: 83
	org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$7
(org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$RenameSupport).rena
me(java.lang.Object) line: 59
	org.eclipse.jdt.internal.ui.reorg.RenameAction.run() line: 36
	org.eclipse.jdt.internal.ui.refactoring.actions.RenameActionDelegate
(org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate).run
(org.eclipse.jface.action.IAction) line: 52
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).runWithEvent
(org.eclipse.swt.widgets.Event) line: 204
	org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(org.eclipse.swt.widgets.Event) line: 407
	org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(org.eclipse.swt.widgets.Event) line: 361
	org.eclipse.jface.action.ActionContributionItem.access$0
(org.eclipse.jface.action.ActionContributionItem, 
org.eclipse.swt.widgets.Event) line: 352
	org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEve
nt(org.eclipse.swt.widgets.Event) line: 47
	org.eclipse.swt.widgets.EventTable.sendEvent
(org.eclipse.swt.widgets.Event) line: 74
	org.eclipse.swt.widgets.MenuItem
(org.eclipse.swt.widgets.Widget).notifyListeners(int, 
org.eclipse.swt.widgets.Event) line: 637
	org.eclipse.swt.widgets.Display.runDeferredEvents() line: 1413
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1205
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 822
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 805
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 878
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 321
	SlimLauncher.main(java.lang.String[]) line: 14
Corrected version information
This should be fixed. Improved performance, reduce flashing is critical for 2.0
Cannot reproduce the problem anymore. Code has change since problem was 
reported. Looking back at the old code (when this problem would have been 
reported:
	public static void refreshActionList() {
		Iterator iter = staticActionList.iterator();
		while (iter.hasNext()) {
			WWinPluginAction action = (WWinPluginAction)iter.next();
			if ((action.getDelegate() == null) &amp;&amp; 
action.isOkToCreateDelegate())
				action.createDelegate();
				action.refreshSelection();
		}
		staticActionList.trimToSize();
	}

I noticed the the "action.refreshSelection();" call is indented as if it 
belongs in the if statement, but is not. That was proabably the source of the 
problem.

In the latest code, that refreshSelection() call is no longer there because 
createDelegate takes care of that.</WithStack>
    <WithOutStack>Start a typical workbench (some open editors, a packages view visible, ....) 
and set a breakpoint on selectionChanged for a subclass of IActionDelegate (for 
example RedoRefactoringAction). During startup the selectionChanged method is 
called 5 times.

Stack trace for 2nd - 5th call

Thread [main] (Suspended (breakpoint at line 86 in 
org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction))
	org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction.se
lectionChanged(org.eclipse.jface.action.IAction, 
org.eclipse.jface.viewers.ISelection) line: 86
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).refreshEnablement() line: 170
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 226
	org.eclipse.ui.internal.WWinPluginAction.refreshSelection() line: 125
	org.eclipse.ui.internal.WWinPluginAction.refreshActionList() line: 65
	org.eclipse.ui.internal.Workbench.refreshPluginActions
(java.lang.String) line: 1025
	org.eclipse.ui.plugin.AbstractUIPlugin$1.run() line: 393
	org.eclipse.swt.widgets.RunnableLock.run() line: 29
	org.eclipse.ui.internal.UISynchronizer
(org.eclipse.swt.widgets.Synchronizer).runAsyncMessages() line: 93
	org.eclipse.swt.widgets.Display.runAsyncMessages() line: 1390
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1208
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 822
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 805
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 878
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 321
	SlimLauncher.main(java.lang.String[]) line: 14


After that I activate the Rename action from the refactoring menu add hit the 
breakpoint on RedoRefactoringAction#selectionChanged again. Stack trace is

Thread [main] (Suspended (breakpoint at line 86 in 
org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction))
	org.eclipse.jdt.internal.ui.refactoring.actions.RedoRefactoringAction.se
lectionChanged(org.eclipse.jface.action.IAction, 
org.eclipse.jface.viewers.ISelection) line: 86
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).refreshEnablement() line: 170
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 226
	org.eclipse.ui.internal.WWinPluginAction.refreshSelection() line: 125
	org.eclipse.ui.internal.WWinPluginAction.refreshActionList() line: 65
	org.eclipse.ui.internal.Workbench.refreshPluginActions
(java.lang.String) line: 1025
	org.eclipse.ui.plugin.AbstractUIPlugin$1.run() line: 393
	org.eclipse.swt.widgets.RunnableLock.run() line: 29
	org.eclipse.ui.internal.UISynchronizer
(org.eclipse.swt.widgets.Synchronizer).runAsyncMessages() line: 93
	org.eclipse.swt.widgets.Display.runAsyncMessages() line: 1390
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1208
	org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog
(org.eclipse.jface.window.Window).runEventLoop(org.eclipse.swt.widgets.Shell) 
line: 536
	org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog
(org.eclipse.jface.window.Window).open() line: 523
	org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activ
ate(org.eclipse.jdt.internal.corext.refactoring.base.Refactoring, 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard, java.lang.String, 
boolean) line: 83
	org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$7
(org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$RenameSupport).rena
me(java.lang.Object) line: 59
	org.eclipse.jdt.internal.ui.reorg.RenameAction.run() line: 36
	org.eclipse.jdt.internal.ui.refactoring.actions.RenameActionDelegate
(org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate).run
(org.eclipse.jface.action.IAction) line: 52
	org.eclipse.ui.internal.WWinPluginAction
(org.eclipse.ui.internal.PluginAction).runWithEvent
(org.eclipse.swt.widgets.Event) line: 204
	org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(org.eclipse.swt.widgets.Event) line: 407
	org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(org.eclipse.swt.widgets.Event) line: 361
	org.eclipse.jface.action.ActionContributionItem.access$0
(org.eclipse.jface.action.ActionContributionItem, 
org.eclipse.swt.widgets.Event) line: 352
	org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEve
nt(org.eclipse.swt.widgets.Event) line: 47
	org.eclipse.swt.widgets.EventTable.sendEvent
(org.eclipse.swt.widgets.Event) line: 74
	org.eclipse.swt.widgets.MenuItem
(org.eclipse.swt.widgets.Widget).notifyListeners(int, 
org.eclipse.swt.widgets.Event) line: 637
	org.eclipse.swt.widgets.Display.runDeferredEvents() line: 1413
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1205
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 822
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 805
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 878
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 321
	SlimLauncher.main(java.lang.String[]) line: 14
Corrected version information
This should be fixed. Improved performance, reduce flashing is critical for 2.0
Cannot reproduce the problem anymore. Code has change since problem was 
reported. Looking back at the old code (when this problem would have been 
reported:
	public static void refreshActionList() {
		Iterator iter = staticActionList.iterator();
		while (iter.hasNext()) {
			WWinPluginAction action = (WWinPluginAction)iter.next();
			if ((action.getDelegate() == null) &amp;&amp; 
action.isOkToCreateDelegate())
				action.createDelegate();
				action.refreshSelection();
		}
		staticActionList.trimToSize();
	}

I noticed the the "action.refreshSelection();" call is indented as if it 
belongs in the if statement, but is not. That was proabably the source of the 
problem.

In the latest code, that refreshSelection() call is no longer there because 
createDelegate takes care of that.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7830" />
    <CreationDate amount="2002-01-17 09:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Deleting more than one method consecutively from the hierarchy view causes unexpected corruption of othe methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If one deletes a method, but does not save the file, and the proceeds to delete 
another method, the method following the last deleted one gets badly corrupted.
Olivier : Please check if this is us.
Could you please specify the build you used?
I was using Build 20020115.
Could not reproduce with 20020125. Could you please double-check if you can 
reproduce it? If you don't, I will close this PR.

Could you please let me know if you can reproduce with latest build? I couldn't reproduce your 
problem and therefore I am unable to fix it. If you can reproduce, please provide steps to 
reproduce as accurate as possible.
The bug seems to be gone now.
I close it for now. Don't hesitate to reopen it if you see the bug back.
Closed.</WithStack>
    <WithOutStack>If one deletes a method, but does not save the file, and the proceeds to delete 
another method, the method following the last deleted one gets badly corrupted.
Olivier : Please check if this is us.
Could you please specify the build you used?
I was using Build 20020115.
Could not reproduce with 20020125. Could you please double-check if you can 
reproduce it? If you don't, I will close this PR.

Could you please let me know if you can reproduce with latest build? I couldn't reproduce your 
problem and therefore I am unable to fix it. If you can reproduce, please provide steps to 
reproduce as accurate as possible.
The bug seems to be gone now.
I close it for now. Don't hesitate to reopen it if you see the bug back.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7831" />
    <CreationDate amount="2002-01-17 09:32:00 -0500" />
    <DupId amount="7610" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>InvalidArgumentException when replacing resource being edited</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205453">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1887)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:96)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="4">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:133)</Frame>
          <Frame depth="5">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)</Frame>
          <Frame depth="6">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)</Frame>
          <Frame depth="7">org.eclipse.vcm.internal.ui.ResourceLoader.loadResources(ResourceLoader.java:372)</Frame>
          <Frame depth="8">org.eclipse.vcm.internal.ui.actions.ReplaceWithAction.run(ReplaceWithAction.java:75)</Frame>
          <Frame depth="9">org.eclipse.vcm.internal.ui.actions.ReplaceWithTeamStreamAction.run(ReplaceWithTeamStreamAction.java:59)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)</Frame>
          <Frame depth="11">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Frame>
          <Frame depth="21">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)</Frame>
          <Frame depth="22">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:42)</Frame>
          <Frame depth="25">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:28)</Frame>
          <Frame depth="26">java.lang.reflect.Method.invoke(Method.java:327)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- Open any compilation unit which is being managed (connected to a team stream).</Line>
          <Line>- Copy the last method to clibboard</Line>
          <Line>- Paste it right behind</Line>
          <Line>- Select the source of this latter method (ensuring the selection is out of the</Line>
          <Line>bounds of the original source before modification)</Line>
          <Line>- Save the current editor</Line>
          <Line>- Now move the mouse (leaving the text range selected in editor) and in the</Line>
          <Line>package view, force to replace the unit with its stream contents.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020115

Steps to reproduce:
- Open any compilation unit which is being managed (connected to a team stream).
- Copy the last method to clibboard
- Paste it right behind
- Select the source of this latter method (ensuring the selection is out of the 
bounds of the original source before modification)
- Save the current editor
- Now move the mouse (leaving the text range selected in editor) and in the 
package view, force to replace the unit with its stream contents.

An internal error dialog is raised corresponding to the following stack trace 
(likely died when attempting to reselect in the new unit content).

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Unhandled exception caught in event loop.
Reason:
Log: Thu Jan 17 15:27:02 CET 2002
4 org.eclipse.ui 0 Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)
        at org.eclipse.swt.SWT.error(SWT.java:1887)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:96)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java:133)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)
        at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
        at org.eclipse.vcm.internal.ui.ResourceLoader.loadResources
(ResourceLoader.java:372)
        at org.eclipse.vcm.internal.ui.actions.ReplaceWithAction.run
(ReplaceWithAction.java:75)
        at org.eclipse.vcm.internal.ui.actions.ReplaceWithTeamStreamAction.run
(ReplaceWithTeamStreamAction.java:59)
        at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:204)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
        at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:42)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:28)
        at java.lang.reflect.Method.invoke(Method.java:327)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
        at org.eclipse.core.launcher.Main.run(Main.java:502)
        at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
Failed to execute runnable (java.lang.IllegalArgumentException: Invalid range 
argument)
suspect this is the same problem as you get with Revert in the text editor.
pls investigate


*** This bug has been marked as a duplicate of 7610 ***</WithStack>
    <WithOutStack>Build 20020115

Steps to reproduce:
- Open any compilation unit which is being managed (connected to a team stream).
- Copy the last method to clibboard
- Paste it right behind
- Select the source of this latter method (ensuring the selection is out of the 
bounds of the original source before modification)
- Save the current editor
- Now move the mouse (leaving the text range selected in editor) and in the 
package view, force to replace the unit with its stream contents.

An internal error dialog is raised corresponding to the following stack trace 
(likely died when attempting to reselect in the new unit content).

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Unhandled exception caught in event loop.
Reason:
Log: Thu Jan 17 15:27:02 CET 2002
4 org.eclipse.ui 0 Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)

Failed to execute runnable (java.lang.IllegalArgumentException: Invalid range 
argument)
suspect this is the same problem as you get with Revert in the text editor.
pls investigate


*** This bug has been marked as a duplicate of 7610 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7832" />
    <CreationDate amount="2002-01-17 09:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Intercept and cancel window close operations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Currently, it is not possible to intercept and cancel window close operations.

Depending on the state of the application running on Eclipse, it is sometimes 
necessary to give the user the option to cancel a shut-down request.  This 
applies to individual document and tool windows as well as the Eclipse shell 
itself.
There is support for giving the user a chance to save unsaved changes in 
editors. The user can cancel this dialog and the workbench will not exit. 

Can you provide details on what state your application gets into that would 
benefit from user intervention. 
Waiting for feedback from reporter. 
Additional information from one of the original requestors of this feature:

We currently put up our own Save all dialog, and if we weren't able to do this 
and return a cancel, then I'd say this defect is still something I'd lobby
for fixing. We may have several files open at once, and want to
be able to present a list of files to the user. The user can checkbox 
select files they wish to save, or none, and say OK, in which case
the IDE should close (after we've possibly saved the files), or the
user can select Cancel, in which case the IDE should remain 
in place. Does the current Eclipse functionality support our having
our own dialog?

Can you explain why you needed to create your own SaveAll dialog instead of 
using the existing support which works for all editors that the user has 
unsaved changes in. 

To see this dialog in action. Create several projects and files with unsaved 
changes. You can also open multiple windows and/or perspectives. Then choose 
File-&gt;Exit

A list of dirty editors is displayed, you have the choice of saving them or 
aborting the action. 
The original requestors have not yet verified that the current Eclipse 
functionality meets their needs, or if they have any other issues with using 
the standard dialog.

I suggest we mark this defect resolved.  If there are additional requirements 
in this area, we'll open a new defect with the appropriate details.
Closing as suggested.</WithStack>
    <WithOutStack>Currently, it is not possible to intercept and cancel window close operations.

Depending on the state of the application running on Eclipse, it is sometimes 
necessary to give the user the option to cancel a shut-down request.  This 
applies to individual document and tool windows as well as the Eclipse shell 
itself.
There is support for giving the user a chance to save unsaved changes in 
editors. The user can cancel this dialog and the workbench will not exit. 

Can you provide details on what state your application gets into that would 
benefit from user intervention. 
Waiting for feedback from reporter. 
Additional information from one of the original requestors of this feature:

We currently put up our own Save all dialog, and if we weren't able to do this 
and return a cancel, then I'd say this defect is still something I'd lobby
for fixing. We may have several files open at once, and want to
be able to present a list of files to the user. The user can checkbox 
select files they wish to save, or none, and say OK, in which case
the IDE should close (after we've possibly saved the files), or the
user can select Cancel, in which case the IDE should remain 
in place. Does the current Eclipse functionality support our having
our own dialog?

Can you explain why you needed to create your own SaveAll dialog instead of 
using the existing support which works for all editors that the user has 
unsaved changes in. 

To see this dialog in action. Create several projects and files with unsaved 
changes. You can also open multiple windows and/or perspectives. Then choose 
File-&gt;Exit

A list of dirty editors is displayed, you have the choice of saving them or 
aborting the action. 
The original requestors have not yet verified that the current Eclipse 
functionality meets their needs, or if they have any other issues with using 
the standard dialog.

I suggest we mark this defect resolved.  If there are additional requirements 
in this area, we'll open a new defect with the appropriate details.
Closing as suggested.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7833" />
    <CreationDate amount="2002-01-17 09:53:00 -0500" />
    <DupId amount="1693" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="1.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Conditional Breakpoint Enhancements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1.  Skip x times before breaking</Line>
          <Line>The debugger will skip x hits on the line before breaking.</Line>
          <Line />
          <Line>2.  Break when an expression becomes true.</Line>
          <Line>A Java expression is defined using visible parameters.  The</Line>
          <Line>execution is stopped only when the condition is true.</Line>
          <Line>(1) already exists - it is a hit count, and available via the pop-up menu.</Line>
          <Line>(2) is a duplicate bug report - bug# 1693</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Two types of conditional breakpoints are required:

1.  Skip x times before breaking
    The debugger will skip x hits on the line before breaking.

2.  Break when an expression becomes true.
    A Java expression is defined using visible parameters.  The
    execution is stopped only when the condition is true.
(1) already exists - it is a hit count, and available via the pop-up menu.
(2) is a duplicate bug report - bug# 1693

*** This bug has been marked as a duplicate of 1693 ***</WithStack>
    <WithOutStack>Two types of conditional breakpoints are required:

1.  Skip x times before breaking
    The debugger will skip x hits on the line before breaking.

2.  Break when an expression becomes true.
    A Java expression is defined using visible parameters.  The
    execution is stopped only when the condition is true.
(1) already exists - it is a hit count, and available via the pop-up menu.
(2) is a duplicate bug report - bug# 1693

*** This bug has been marked as a duplicate of 1693 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7834" />
    <CreationDate amount="2002-01-17 09:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Methods-override dialog should present methods sorted (abc..)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Imagine a class extending JPanel. I want to override setBackgroundColor(Color 
c). I don't know where in the class-hierarchy the method is declared, so i've 
to search more or less to all entries in the tree, eye-scanning setBa.. . It's 
not so easy, as there are quite a few methods.
So it would be nice to sort the method names in alphabeticall order, and really 
great would be a method searching. Could the code assist used for that?
agreed that the method names should be sorted.

as a future feature we should provide the option to show a flattened method 
list and not only a tree.
entries are now sorted (&gt; 20115)
fixed in 20122
Verfied. -&gt;20020205. JRT.</WithStack>
    <WithOutStack>Imagine a class extending JPanel. I want to override setBackgroundColor(Color 
c). I don't know where in the class-hierarchy the method is declared, so i've 
to search more or less to all entries in the tree, eye-scanning setBa.. . It's 
not so easy, as there are quite a few methods.
So it would be nice to sort the method names in alphabeticall order, and really 
great would be a method searching. Could the code assist used for that?
agreed that the method names should be sorted.

as a future feature we should provide the option to show a flattened method 
list and not only a tree.
entries are now sorted (&gt; 20115)
fixed in 20122
Verfied. -&gt;20020205. JRT.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7835" />
    <CreationDate amount="2002-01-17 09:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Inline Local Varaible shows wizard for error reporting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In contrast to all other refactorings inline local variable shows a wizard for 
error reporting. Should use dialog instead.
this is done to show a preview of the error -
maybe we should put a preview to the dialog then?

or do we decide that preview is not that important?
ok, made it consistent with other ones
the point above still valid</WithStack>
    <WithOutStack>In contrast to all other refactorings inline local variable shows a wizard for 
error reporting. Should use dialog instead.
this is done to show a preview of the error -
maybe we should put a preview to the dialog then?

or do we decide that preview is not that important?
ok, made it consistent with other ones
the point above still valid</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7836" />
    <CreationDate amount="2002-01-17 10:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Preferences] Window menu not intuitive place for Preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Many IDEs and other applications place preferences under the Edit or Tools 
menus.  The Window menu is generally associated with swapping between currently 
open files.  Consequently, the Window menu is not an intuitive location for 
Preferences.
Minor defect. Consider after higher priority problems are resolved.
Reopen to investigate
This was looked at for 2.0 and the menus reorganized based on usability studies.</WithStack>
    <WithOutStack>Many IDEs and other applications place preferences under the Edit or Tools 
menus.  The Window menu is generally associated with swapping between currently 
open files.  Consequently, the Window menu is not an intuitive location for 
Preferences.
Minor defect. Consider after higher priority problems are resolved.
Reopen to investigate
This was looked at for 2.0 and the menus reorganized based on usability studies.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7837" />
    <CreationDate amount="2002-01-17 10:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launch configuration page verifier error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Open an editor on a class without a main method</Line>
          <Line>2. Bring up the launch configuration wizard (it should only have the project</Line>
          <Line>filled in)</Line>
          <Line>3. Choose a JRE</Line>
          <Line>4. Click to search for a main type; select one</Line>
          <Line>5. Note that the wizard wrongly complains that no JRE is selected</Line>
          <Line>I can't duplicate this.  Maybe we can talk about this.</Line>
          <Line>Duplicated problem.  This only happens after a successful config launch on a resource.  The VM used</Line>
          <Line>to launch the config is saved as a default value, but this  default value was read improperly in the</Line>
          <Line>launch config delegate.  Fixed.</Line>
          <Line>Please verify.</Line>
          <Line>Verified.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Open an editor on a class without a main method
2. Bring up the launch configuration wizard (it should only have the project
filled in)
3. Choose a JRE
4. Click to search for a main type; select one
5. Note that the wizard wrongly complains that no JRE is selected
I can't duplicate this.  Maybe we can talk about this.
Duplicated problem.  This only happens after a successful config launch on a resource.  The VM used 
to launch the config is saved as a default value, but this  default value was read improperly in the 
launch config delegate.  Fixed.
Please verify.
Verified.</WithStack>
    <WithOutStack>1. Open an editor on a class without a main method
2. Bring up the launch configuration wizard (it should only have the project
filled in)
3. Choose a JRE
4. Click to search for a main type; select one
5. Note that the wizard wrongly complains that no JRE is selected
I can't duplicate this.  Maybe we can talk about this.
Duplicated problem.  This only happens after a successful config launch on a resource.  The VM used 
to launch the config is saved as a default value, but this  default value was read improperly in the 
launch config delegate.  Fixed.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7838" />
    <CreationDate amount="2002-01-17 10:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Req] Copy to clipboard from Junit View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Dunno if this is the correct component

Want:
Ability to copy and paste result of JUnit execution, or somehow to export them
in a Text file.
JUnit is part of JDT so this is the right place.

What you can do in the latest is to copy a stack trace of a failure to the 
clipboard.

However, I think you want to have a textual represention of a text run copied 
to the clipboard (e.g. in the style of the junit.textrunner)? 


You are right, here is my scenario..

I run my Test bucket (60 tests) and let's say 45 fail.
I go to teh first testcase, fix it, and run the individual test. (I do not want 
to run teh 59 other...)
Now I lost the stack trace of the 44 other which fail and I have to run teh 
Test Buck again

What I want to do, is keep the trace somewhere, so I can now select each 
failing test... the text representation will help me
the best of course whould be to keep the contaxt of the firs Test Bucket I ran, 
so I can *double click* on the next failure so it opens the Java Editor at the 
right place..

Not sure if I made myself clear ;-)

you made yourself clear and the request makes sense. This is an excellent third 
party opportunity and marked bug as help wanted.
see fix in 36352
sebastian's patch for bug 36352 will improve this even further. In the current 
version you can execute "Copy Failure List" (this will include the stack 
traces of failed tests)</WithStack>
    <WithOutStack>Dunno if this is the correct component

Want:
Ability to copy and paste result of JUnit execution, or somehow to export them
in a Text file.
JUnit is part of JDT so this is the right place.

What you can do in the latest is to copy a stack trace of a failure to the 
clipboard.

However, I think you want to have a textual represention of a text run copied 
to the clipboard (e.g. in the style of the junit.textrunner)? 


You are right, here is my scenario..

I run my Test bucket (60 tests) and let's say 45 fail.
I go to teh first testcase, fix it, and run the individual test. (I do not want 
to run teh 59 other...)
Now I lost the stack trace of the 44 other which fail and I have to run teh 
Test Buck again

What I want to do, is keep the trace somewhere, so I can now select each 
failing test... the text representation will help me
the best of course whould be to keep the contaxt of the firs Test Bucket I ran, 
so I can *double click* on the next failure so it opens the Java Editor at the 
right place..

Not sure if I made myself clear ;-)

you made yourself clear and the request makes sense. This is an excellent third 
party opportunity and marked bug as help wanted.
see fix in 36352
sebastian's patch for bug 36352 will improve this even further. In the current 
version you can execute "Copy Failure List" (this will include the stack 
traces of failed tests)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7839" />
    <CreationDate amount="2002-01-17 10:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Modal dialog prevents navigation in Help</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Navigation in the help system should be enabled when a modal dialog is up.

Example scenario:
Open the Preferences modal dialog.
Click F1 to open help pop-up.
Select help topic from the pop-up.
Help perspective is opened, but you are unable to navigate within it.

The modal dialog on which the user wants help must be closed before the user 
can view the relevant help information. Ideally, to support a more interactive 
help system, the Help perspective should not be disabled when a modal dialog is 
up.
This is an SWT limitation, and it will be fixed in eclipse 2.0 by running an 
external help viewer (i.e. another non-modal window).
In 2.0 help is launched as an external, non-modal window, so this bug is 
invalid now.</WithStack>
    <WithOutStack>Navigation in the help system should be enabled when a modal dialog is up.

Example scenario:
Open the Preferences modal dialog.
Click F1 to open help pop-up.
Select help topic from the pop-up.
Help perspective is opened, but you are unable to navigate within it.

The modal dialog on which the user wants help must be closed before the user 
can view the relevant help information. Ideally, to support a more interactive 
help system, the Help perspective should not be disabled when a modal dialog is 
up.
This is an SWT limitation, and it will be fixed in eclipse 2.0 by running an 
external help viewer (i.e. another non-modal window).
In 2.0 help is launched as an external, non-modal window, so this bug is 
invalid now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7840" />
    <CreationDate amount="2002-01-17 10:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>adaptable flag on property pages doesn't work if filtered by nature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>(Apologies if this is a dup, I couldn't find such a bug anywhere).

org.eclipse.team.cvs.ui defines the following property page:

&lt;page name="%CVS" id="org.eclipse.team.ccvs.ui.propertyPages.CVSPropertiesPage"
	objectClass="org.eclipse.core.resources.IProject"
	class="org.eclipse.team.internal.ccvs.ui.CVSPropertiesPage" 
adaptable="true"&gt;
	&lt;filter name="nature" value="org.eclipse.team.cvs.core.cvsnature"/&gt; 
&lt;/page&gt;

In the packages view, this does not work because I believe the filter is being 
tested BEFORE the adaptation takes place. The IJavaProject does not have 
the "nature" value set, but the IProject that it adapts to DOES, so the filter 
should be tested after adaptation rather than before.

The result is that non-CVS projects have a CVS properties page in the packages 
view, and likewise non-CVS compilation units (not IFiles, they work fine) also 
have a CVS properties page due to a similar declaration in the plugin.xml.
This is part of the contribution mechanism provided by the workbench.
Moving to platform ui
*** Bug 13154 has been marked as a duplicate of this bug. ***
Still a problem in latest build.
We were adapting the ActionFilter to the original object (JavaProject) and not 
to the adapted one so the filter was being missed altogether.

Fix in build &gt;20020503
Marking fixed
*** Bug 9462 has been marked as a duplicate of this bug. ***
Marking as closed.</WithStack>
    <WithOutStack>(Apologies if this is a dup, I couldn't find such a bug anywhere).

org.eclipse.team.cvs.ui defines the following property page:

&lt;page name="%CVS" id="org.eclipse.team.ccvs.ui.propertyPages.CVSPropertiesPage"
	objectClass="org.eclipse.core.resources.IProject"
	class="org.eclipse.team.internal.ccvs.ui.CVSPropertiesPage" 
adaptable="true"&gt;
	&lt;filter name="nature" value="org.eclipse.team.cvs.core.cvsnature"/&gt; 
&lt;/page&gt;

In the packages view, this does not work because I believe the filter is being 
tested BEFORE the adaptation takes place. The IJavaProject does not have 
the "nature" value set, but the IProject that it adapts to DOES, so the filter 
should be tested after adaptation rather than before.

The result is that non-CVS projects have a CVS properties page in the packages 
view, and likewise non-CVS compilation units (not IFiles, they work fine) also 
have a CVS properties page due to a similar declaration in the plugin.xml.
This is part of the contribution mechanism provided by the workbench.
Moving to platform ui
*** Bug 13154 has been marked as a duplicate of this bug. ***
Still a problem in latest build.
We were adapting the ActionFilter to the original object (JavaProject) and not 
to the adapted one so the filter was being missed altogether.

Fix in build &gt;20020503
Marking fixed
*** Bug 9462 has been marked as a duplicate of this bug. ***
Marking as closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7841" />
    <CreationDate amount="2002-01-17 10:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Overriden methods inserted past the end of source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Win32 0109
If you override a method via the pop-up in the Outline view, the methods are 
added past the last }.
Works for me in the scenarios I've tried, please provide detailed steps for how 
to reproduce this behaviour.
I saw this too. Move to jdt.core
Martin - do you have a reproduceable scenario proving this is jdt.core ?
no, can't reproduce.
Could not reproduce with 20020125. Move to close.</WithStack>
    <WithOutStack>Win32 0109
If you override a method via the pop-up in the Outline view, the methods are 
added past the last }.
Works for me in the scenarios I've tried, please provide detailed steps for how 
to reproduce this behaviour.
I saw this too. Move to jdt.core
Martin - do you have a reproduceable scenario proving this is jdt.core ?
no, can't reproduce.
Could not reproduce with 20020125. Move to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7842" />
    <CreationDate amount="2002-01-17 10:49:00 -0500" />
    <DupId amount="7485" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Overriden methods do not have imports added</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Win32 0109

We are seeing that when we create new classes or override methods, new types 
introduced in methods are not being added to the import section.
it is fair for users to expect this behaviour since we provide import update 
support in several other places.

martin how much effort would this be?
this funtionality is already in, but is currently not working anymore due to 
jdt.core bug 7485

*** This bug has been marked as a duplicate of 7485 ***</WithStack>
    <WithOutStack>Win32 0109

We are seeing that when we create new classes or override methods, new types 
introduced in methods are not being added to the import section.
it is fair for users to expect this behaviour since we provide import update 
support in several other places.

martin how much effort would this be?
this funtionality is already in, but is currently not working anymore due to 
jdt.core bug 7485

*** This bug has been marked as a duplicate of 7485 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7843" />
    <CreationDate amount="2002-01-17 10:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Errors restoring registry cache</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205462">
        <Exception>java.io.FileNotFoundException</Exception>
        <Reason>d:\eclipse\test\.metadata\.registry.bak (The 
system cannot find the file specified)</Reason>
        <Frames>
          <Frame depth="0">java.io.FileInputStream.open(Native Method)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Running with -registrycache on, I got the following error in the log file this 
morning.  The platform correctly reverted to parsing the registry and there were 
no other startup errors (I didn't even notice anything had gone wrong until 
later).  I might have terminated the workbench without normal shutdown last 
night.

  &lt;status
     plugin-id="org.eclipse.core.runtime"
     severity="ERROR"
     message="Problems encountered loading the plug-in registry."
     code="1"&gt;
    &lt;status
       plugin-id="org.eclipse.core.runtime"
       severity="ERROR"
       message="Unable to create input stream for registry cache."
       code="2"&gt;
      &lt;exception
         message="d:\eclipse\test\.metadata\.registry.bak (The system cannot 
find the file specified)"
         trace="
java.io.FileNotFoundException: d:\eclipse\test\.metadata\.registry.bak (The 
system cannot find the file specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:70)
	at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:101)
	at 
org.eclipse.core.internal.runtime.SafeFileInputStream.getInputStream(SafeFileInp
utStream.java:37)
	at 
org.eclipse.core.internal.runtime.SafeFileInputStream.&amp;lt;init&amp;gt;(SafeFileInput
Stream.java:28)
	at 
org.eclipse.core.internal.runtime.InternalPlatform.loadRegistry(InternalPlatform
.java:665)
	at 
org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatfor
m.java:587)
	at java.lang.reflect.Method.invoke(Native Method)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.jav
a:978)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:86
6)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
"&gt;
      &lt;/exception&gt;
    &lt;/status&gt;
  &lt;/status&gt;
This error message typically appears when you first set the -registrycache 
option (the first time, we try to read the registry from a cache file which 
doesn't exist).  Now, we determine that the cache file exists before we try to 
read from it.</WithStack>
    <WithOutStack>Running with -registrycache on, I got the following error in the log file this 
morning.  The platform correctly reverted to parsing the registry and there were 
no other startup errors (I didn't even notice anything had gone wrong until 
later).  I might have terminated the workbench without normal shutdown last 
night.

  &lt;status
     plugin-id="org.eclipse.core.runtime"
     severity="ERROR"
     message="Problems encountered loading the plug-in registry."
     code="1"&gt;
    &lt;status
       plugin-id="org.eclipse.core.runtime"
       severity="ERROR"
       message="Unable to create input stream for registry cache."
       code="2"&gt;
      &lt;exception
         message="d:\eclipse\test\.metadata\.registry.bak (The system cannot 
find the file specified)"
         trace="

	at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:101)
	at 
org.eclipse.core.internal.runtime.SafeFileInputStream.getInputStream(SafeFileInp
utStream.java:37)
	at 
org.eclipse.core.internal.runtime.SafeFileInputStream.&amp;lt;init&amp;gt;(SafeFileInput
Stream.java:28)
	at 
org.eclipse.core.internal.runtime.InternalPlatform.loadRegistry(InternalPlatform
.java:665)
	at 
org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatfor
m.java:587)
	at java.lang.reflect.Method.invoke(Native Method)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.jav
a:978)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:86
6)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
"&gt;
      &lt;/exception&gt;
    &lt;/status&gt;
  &lt;/status&gt;
This error message typically appears when you first set the -registrycache 
option (the first time, we try to read the registry from a cache file which 
doesn't exist).  Now, we determine that the cache file exists before we try to 
read from it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7844" />
    <CreationDate amount="2002-01-17 10:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE when using Search</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205464">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:128)</Frame>
          <Frame depth="1">java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:144)</Frame>
          <Frame depth="2">org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs(SearchPageDescriptor.java:201)</Frame>
          <Frame depth="3">org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension(SearchPageDescriptor.java:184)</Frame>
          <Frame depth="4">org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore(SearchPageDescriptor.java:166)</Frame>
          <Frame depth="5">org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex(SearchDialog.java:278)</Frame>
          <Frame depth="6">org.eclipse.search.internal.ui.SearchDialog.createPageArea(SearchDialog.java:142)</Frame>
          <Frame depth="7">org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea(ExtendedDialogWindow.java:142)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)</Frame>
          <Frame depth="9">org.eclipse.jface.window.Window.create(Window.java:237)</Frame>
          <Frame depth="10">org.eclipse.search.internal.ui.SearchDialog.create(SearchDialog.java:128)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.open(Window.java:510)</Frame>
          <Frame depth="12">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:45)</Frame>
          <Frame depth="13">org.eclipse.jface.action.Action.runWithEvent(Action.java:452)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)</Frame>
          <Frame depth="25">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="26">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.main(Main.java:362)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1.  Open a fresh instance of Eclipse</Line>
          <Line>2.  If there is no file open in an editor, open one.  (I caused the bug with</Line>
          <Line>a java file, a plugin.xml file, and with a text file.  The stack trace</Line>
          <Line>below is for a java file.)</Line>
          <Line>3.  Click on the Search button in the Search view.  (I think it's the</Line>
          <Line>New Search button.  It's the one whose icon is a flashlight with nothing</Line>
          <Line>else.)</Line>
          <Line>4.  The exception should happen here.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build:
20020115

Description:
The first time I try to open the search window with a file open in an editor, I 
get a Null Pointer Exception and the search window does not appear.  It seems 
like it's an initialization problem because every time after the first, the 
error does not happen and the search window appears without a problem.

For some reason, if there are no editors open, then the error does not happen 
and the search window appears without a problem.

Steps:
1.  Open a fresh instance of Eclipse
2.  If there is no file open in an editor, open one.  (I caused the bug with
    a java file, a plugin.xml file, and with a text file.  The stack trace
    below is for a java file.)
3.  Click on the Search button in the Search view.  (I think it's the
    New Search button.  It's the one whose icon is a flashlight with nothing
    else.)
4.  The exception should happen here.

Stacktrace:
Log: Thu Jan 17 10:38:04 EST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Jan 17 10:38:04 EST 2002
4 org.eclipse.ui 0 java.lang.NullPointerException
java.lang.NullPointerException
	at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:128)
	at java.util.StringTokenizer.&lt;init&gt;(StringTokenizer.java:144)
	at 
org.eclipse.search.internal.ui.SearchPageDescriptor.readExtensionScorePairs
(SearchPageDescriptor.java:201)
	at 
org.eclipse.search.internal.ui.SearchPageDescriptor.getScoreForFileExtension
(SearchPageDescriptor.java:184)
	at org.eclipse.search.internal.ui.SearchPageDescriptor.computeScore
(SearchPageDescriptor.java:166)
	at org.eclipse.search.internal.ui.SearchDialog.getPreferredPageIndex
(SearchDialog.java:278)
	at org.eclipse.search.internal.ui.SearchDialog.createPageArea
(SearchDialog.java:142)
	at 
org.eclipse.search.internal.ui.util.ExtendedDialogWindow.createDialogArea
(ExtendedDialogWindow.java:142)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:434)
	at org.eclipse.jface.window.Window.create(Window.java:237)
	at org.eclipse.search.internal.ui.SearchDialog.create
(SearchDialog.java:128)
	at org.eclipse.jface.window.Window.open(Window.java:510)
	at org.eclipse.search.internal.ui.OpenSearchDialogAction.run
(OpenSearchDialogAction.java:45)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)
Happens to everyone, first time only.
Doesn't matter if you have an old workspace, or if your metadata is brand new.
This should be an easy fix, and since it is embarrassing, it should be fixed 
before the next integration build.
Obsolete</WithStack>
    <WithOutStack>Build:
20020115

Description:
The first time I try to open the search window with a file open in an editor, I 
get a Null Pointer Exception and the search window does not appear.  It seems 
like it's an initialization problem because every time after the first, the 
error does not happen and the search window appears without a problem.

For some reason, if there are no editors open, then the error does not happen 
and the search window appears without a problem.

Steps:
1.  Open a fresh instance of Eclipse
2.  If there is no file open in an editor, open one.  (I caused the bug with
    a java file, a plugin.xml file, and with a text file.  The stack trace
    below is for a java file.)
3.  Click on the Search button in the Search view.  (I think it's the
    New Search button.  It's the one whose icon is a flashlight with nothing
    else.)
4.  The exception should happen here.

Stacktrace:
Log: Thu Jan 17 10:38:04 EST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Jan 17 10:38:04 EST 2002
4 org.eclipse.ui 0 java.lang.NullPointerException

Happens to everyone, first time only.
Doesn't matter if you have an old workspace, or if your metadata is brand new.
This should be an easy fix, and since it is embarrassing, it should be fixed 
before the next integration build.
Obsolete</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7845" />
    <CreationDate amount="2002-01-17 11:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>API needed in Combo class to specify # of items visible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functioncall">
        <location start="1746" end="1782" />
        <code>combo_toto.setNbVisibleItem(int nb);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2767" end="2840" />
        <code>/* &lt;HACK&gt; 
 * configure the number of items in the combo dropdown list
*/</code>
      </source_code>
      <source_code type="assignment">
        <location start="2842" end="2874" />
        <code>private int numVisibleItems = 5;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2876" end="2972" />
        <code>public void setNumVisibleItems(int numVisibleItems) {
	this.numVisibleItems = numVisibleItems;
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2973" end="2987" />
        <code>/* &lt;/HACK&gt; */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2989" end="6316" />
        <code>void setBounds (int x, int y, int width, int height, int flags) {
	/*
	* Feature in Windows.  If the combo box has the CBS_DROPDOWN
	* or CBS_DROPDOWNLIST style, Windows uses the height that the
	* programmer sets in SetWindowPos () to control height of the
	* drop down list.  When the width is non-zero, Windows remembers
	* this value and sets the height to be the height of the text
	* field part of the combo box.  If the width is zero, Windows
	* allows the height to have any value.  Therefore, when the
	* programmer sets and then queries the height, the values can
	* be different depending on the width.  The problem occurs when
	* the programmer uses computeSize () to determine the preferred
	* height (always the height of the text field) and then uses
	* this value to set the height of the combo box.  The result
	* is a combo box with a zero size drop down list.  The fix, is
	* to always set the height to show a fixed number of combo box
	* items and ignore the height value that the programmer supplies.
	*/
	if ((style &amp; SWT.DROP_DOWN) != 0) {
		int textHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, -1, 0);
		int itemHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);
		height = textHeight + 6 + (itemHeight * numVisibleItems) + 2; // HACK
		/*
		* Feature in Windows.  When a drop down combo box is resized,
		* the combo box resizes the height of the text field and uses
		* the height provided in SetWindowPos () to determine the height
		* of the drop down list.  For some reason, the combo box redraws
		* the whole area, not just the text field.  The fix is to set the
		* SWP_NOSIZE bits when the height of text field and the drop down
		* list is the same as the requested height.
		* 
		* NOTE:  Setting the width of a combo box to zero does not update
		* the width of the drop down control rect.  If the width of the
		* combo box is zero, then do not set SWP_NOSIZE.
		*/
		RECT rect = new RECT ();
		OS.GetWindowRect (handle, rect);
		if (rect.right - rect.left != 0) {
			if (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {
				int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
				if (oldWidth == width &amp;&amp; oldHeight == height) flags |= OS.SWP_NOSIZE;
			}
		}
		OS.SetWindowPos (handle, 0, x, y, width, height, flags);
		return;
	}

	/*
	* Bug in Windows.  If the combo box has the CBS_SIMPLE style,
	* the list portion of the combo box is not redrawn when the
	* combo box is resized.  The fix is to force a redraw when
	* the size has changed.
	*/
	if (parent.lpwp != null || (flags &amp; OS.SWP_NOSIZE) != 0 || !OS.IsWindowVisible
(handle)) {
		super.setBounds (x, y, width, height, flags);
		return;
	}
	RECT rect = new RECT ();
	OS.GetWindowRect (handle, rect);
	super.setBounds (x, y, width, height, flags);
	int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
	if (oldWidth != width || oldHeight != height) {
		if (OS.IsWinCE) {	
			int hwndText = OS.GetDlgItem (handle, CBID_EDIT);
			if (hwndText != 0) OS.InvalidateRect (hwndText, null, true);
			int hwndList = OS.GetDlgItem (handle, CBID_LIST);
			if (hwndList != 0) OS.InvalidateRect (hwndList, null, true);
		} else {
			int uFlags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;
			OS.RedrawWindow (handle, null, 0, uFlags);
		}
	}
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="6573" end="6628" />
        <code>height = textHeight + 6 + (itemHeight * 5) + 2;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- added a field "numVisibleItems" and a corresponding setter method.</Line>
          <Line>- customized setBounds() so that it uses "numVisibleItems" rather than a</Line>
          <Line>hardcoded value of 5.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need an API for org.eclipse.swt.widgets.Combo that will allow us to specify 
the number of visible elements. This is needed for usability enhancement. It is 
acceptable if this feature is not supported on all platforms. We are primarily 
concerned with the feature working on Windows systems.

This issue was raised because the setBounds(int, int, int, int, int) method in 
Combo in the Windows version of Eclipse automatically sets the number of 
elements visible to 5. For the drop down perspectives list on the Eclipse 
toolbar in particular, we wanted to be able to specify the number of elements 
that would be shown without a scrollbar appearing.
*** Bug 29041 has been marked as a duplicate of this bug. ***
*** Bug 4559 has been marked as a duplicate of this bug. ***
*** Bug 35079 has been marked as a duplicate of this bug. ***
Why only 5 - not very usable!  Can this be changed to 30 (which I think is the 
windows default)?  
5 items in a Combo is definitely not a Windows default. IE and the Windows
Explorer show 14, Wordpad and Office always more than 10, the 'Regional and
Language Options' Control Panel a zillion, ...

As a user, I consider this limitation a bug, not a mere enhancement. Is there
any reason why the default could not just be set to, say, 20?

BTW: None of the combos on this webpage has a scrollbar in IE and Mozilla.
This is a major usability issue which should better be solved sooner than later.
Eight votes and the observation that 5 is not a native item count made me raise
the severity from Enhancement to Normal.

I guess an additional API would not even be necessary if the default item count
was not a one-digit number.
Definitivly a big probleme for me (as it is a query from me client!) 

can be:
combo_toto.setNbVisibleItem(int nb);

where nb is the max nomber of item that we want to see...

   JPP
Could the workaround from comment 4 please be considered for 3.0?

If not, can you please give us 15 voters a reasonable explanation for the
seemingly random number of 5 visible items? Thanks.
I put a hack in org/eclipse/swt/widgets/Combo.java some time ago. I'm not sure
if there are any side-effects, but it works in my Win32 standalone SWT applications.

Here's what I did:

- added a field "numVisibleItems" and a corresponding setter method.
- customized setBounds() so that it uses "numVisibleItems" rather than a
hardcoded value of 5.

I can now configure the number of visible items. I've set it to 20 for my
application.

Anyway, I would appreciate it if this could be resolved before 3.0 final. This
issue affects the usability of the Keys panel in Workbench Preferences. The
Category dropdown list is unnecessarily hard to use.

See source snippet below:

-------------------------------------------------
/* &lt;HACK&gt; 
 * configure the number of items in the combo dropdown list
*/

private int numVisibleItems = 5;

public void setNumVisibleItems(int numVisibleItems) {
	this.numVisibleItems = numVisibleItems;
}

/* &lt;/HACK&gt; */

void setBounds (int x, int y, int width, int height, int flags) {
	/*
	* Feature in Windows.  If the combo box has the CBS_DROPDOWN
	* or CBS_DROPDOWNLIST style, Windows uses the height that the
	* programmer sets in SetWindowPos () to control height of the
	* drop down list.  When the width is non-zero, Windows remembers
	* this value and sets the height to be the height of the text
	* field part of the combo box.  If the width is zero, Windows
	* allows the height to have any value.  Therefore, when the
	* programmer sets and then queries the height, the values can
	* be different depending on the width.  The problem occurs when
	* the programmer uses computeSize () to determine the preferred
	* height (always the height of the text field) and then uses
	* this value to set the height of the combo box.  The result
	* is a combo box with a zero size drop down list.  The fix, is
	* to always set the height to show a fixed number of combo box
	* items and ignore the height value that the programmer supplies.
	*/
	if ((style &amp; SWT.DROP_DOWN) != 0) {
		int textHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, -1, 0);
		int itemHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);
		height = textHeight + 6 + (itemHeight * numVisibleItems) + 2; // HACK
		/*
		* Feature in Windows.  When a drop down combo box is resized,
		* the combo box resizes the height of the text field and uses
		* the height provided in SetWindowPos () to determine the height
		* of the drop down list.  For some reason, the combo box redraws
		* the whole area, not just the text field.  The fix is to set the
		* SWP_NOSIZE bits when the height of text field and the drop down
		* list is the same as the requested height.
		* 
		* NOTE:  Setting the width of a combo box to zero does not update
		* the width of the drop down control rect.  If the width of the
		* combo box is zero, then do not set SWP_NOSIZE.
		*/
		RECT rect = new RECT ();
		OS.GetWindowRect (handle, rect);
		if (rect.right - rect.left != 0) {
			if (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {
				int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
				if (oldWidth == width &amp;&amp; oldHeight == height) flags |= OS.SWP_NOSIZE;
			}
		}
		OS.SetWindowPos (handle, 0, x, y, width, height, flags);
		return;
	}

	/*
	* Bug in Windows.  If the combo box has the CBS_SIMPLE style,
	* the list portion of the combo box is not redrawn when the
	* combo box is resized.  The fix is to force a redraw when
	* the size has changed.
	*/
	if (parent.lpwp != null || (flags &amp; OS.SWP_NOSIZE) != 0 || !OS.IsWindowVisible
(handle)) {
		super.setBounds (x, y, width, height, flags);
		return;
	}
	RECT rect = new RECT ();
	OS.GetWindowRect (handle, rect);
	super.setBounds (x, y, width, height, flags);
	int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
	if (oldWidth != width || oldHeight != height) {
		if (OS.IsWinCE) {	
			int hwndText = OS.GetDlgItem (handle, CBID_EDIT);
			if (hwndText != 0) OS.InvalidateRect (hwndText, null, true);
			int hwndList = OS.GetDlgItem (handle, CBID_LIST);
			if (hwndList != 0) OS.InvalidateRect (hwndList, null, true);
		} else {
			int uFlags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;
			OS.RedrawWindow (handle, null, 0, uFlags);
		}
	}
}

I'm sorry but we are API frozen for 3.0.  The hack fixes the problem on 
Windows only.  The other platforms need to be addressed as well.
Steve, I understand that we are API frozen. But why can't you just replace the
constant "5" in Combo:1074 ...
&lt;snip&gt;
        height = textHeight + 6 + (itemHeight * 5) + 2;
&lt;/snip&gt;
... with a "20"? That would alleviate most voters' and users' pains for 3.0.
Because 20 would be wrong in other situations?  Also, there are 4 other 
platforms that need to be changed as well.  You forget about non-Windows 
platforms.  If you can make a case to Jeem for this API, I will consider 
adding it.
Approved for inclusion in 3.0 RC1: Adding a new setter method to Combo for 
maximum number of visible elements. Maintain the old defaults if setter is 
never called.

Fixed &gt; 20040527. Will be in tonight's 8pm build (200405272000).

The API is Combo.getVisibleItemCount() and Combo.setVisibleItemCount(int).
Go ahead and use it after tonight's 8pm build.
*** Bug 38368 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>We need an API for org.eclipse.swt.widgets.Combo that will allow us to specify 
the number of visible elements. This is needed for usability enhancement. It is 
acceptable if this feature is not supported on all platforms. We are primarily 
concerned with the feature working on Windows systems.

This issue was raised because the setBounds(int, int, int, int, int) method in 
Combo in the Windows version of Eclipse automatically sets the number of 
elements visible to 5. For the drop down perspectives list on the Eclipse 
toolbar in particular, we wanted to be able to specify the number of elements 
that would be shown without a scrollbar appearing.
*** Bug 29041 has been marked as a duplicate of this bug. ***
*** Bug 4559 has been marked as a duplicate of this bug. ***
*** Bug 35079 has been marked as a duplicate of this bug. ***
Why only 5 - not very usable!  Can this be changed to 30 (which I think is the 
windows default)?  
5 items in a Combo is definitely not a Windows default. IE and the Windows
Explorer show 14, Wordpad and Office always more than 10, the 'Regional and
Language Options' Control Panel a zillion, ...

As a user, I consider this limitation a bug, not a mere enhancement. Is there
any reason why the default could not just be set to, say, 20?

BTW: None of the combos on this webpage has a scrollbar in IE and Mozilla.
This is a major usability issue which should better be solved sooner than later.
Eight votes and the observation that 5 is not a native item count made me raise
the severity from Enhancement to Normal.

I guess an additional API would not even be necessary if the default item count
was not a one-digit number.
Definitivly a big probleme for me (as it is a query from me client!) 

can be:
combo_toto.setNbVisibleItem(int nb);

where nb is the max nomber of item that we want to see...

   JPP
Could the workaround from comment 4 please be considered for 3.0?

If not, can you please give us 15 voters a reasonable explanation for the
seemingly random number of 5 visible items? Thanks.
I put a hack in org/eclipse/swt/widgets/Combo.java some time ago. I'm not sure
if there are any side-effects, but it works in my Win32 standalone SWT applications.

Here's what I did:

- added a field "numVisibleItems" and a corresponding setter method.
- customized setBounds() so that it uses "numVisibleItems" rather than a
hardcoded value of 5.

I can now configure the number of visible items. I've set it to 20 for my
application.

Anyway, I would appreciate it if this could be resolved before 3.0 final. This
issue affects the usability of the Keys panel in Workbench Preferences. The
Category dropdown list is unnecessarily hard to use.

See source snippet below:

-------------------------------------------------
/* &lt;HACK&gt; 
 * configure the number of items in the combo dropdown list
*/

private int numVisibleItems = 5;

public void setNumVisibleItems(int numVisibleItems) {
	this.numVisibleItems = numVisibleItems;
}

/* &lt;/HACK&gt; */

void setBounds (int x, int y, int width, int height, int flags) {
	/*
	* Feature in Windows.  If the combo box has the CBS_DROPDOWN
	* or CBS_DROPDOWNLIST style, Windows uses the height that the
	* programmer sets in SetWindowPos () to control height of the
	* drop down list.  When the width is non-zero, Windows remembers
	* this value and sets the height to be the height of the text
	* field part of the combo box.  If the width is zero, Windows
	* allows the height to have any value.  Therefore, when the
	* programmer sets and then queries the height, the values can
	* be different depending on the width.  The problem occurs when
	* the programmer uses computeSize () to determine the preferred
	* height (always the height of the text field) and then uses
	* this value to set the height of the combo box.  The result
	* is a combo box with a zero size drop down list.  The fix, is
	* to always set the height to show a fixed number of combo box
	* items and ignore the height value that the programmer supplies.
	*/
	if ((style &amp; SWT.DROP_DOWN) != 0) {
		int textHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, -1, 0);
		int itemHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);
		height = textHeight + 6 + (itemHeight * numVisibleItems) + 2; // HACK
		/*
		* Feature in Windows.  When a drop down combo box is resized,
		* the combo box resizes the height of the text field and uses
		* the height provided in SetWindowPos () to determine the height
		* of the drop down list.  For some reason, the combo box redraws
		* the whole area, not just the text field.  The fix is to set the
		* SWP_NOSIZE bits when the height of text field and the drop down
		* list is the same as the requested height.
		* 
		* NOTE:  Setting the width of a combo box to zero does not update
		* the width of the drop down control rect.  If the width of the
		* combo box is zero, then do not set SWP_NOSIZE.
		*/
		RECT rect = new RECT ();
		OS.GetWindowRect (handle, rect);
		if (rect.right - rect.left != 0) {
			if (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {
				int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
				if (oldWidth == width &amp;&amp; oldHeight == height) flags |= OS.SWP_NOSIZE;
			}
		}
		OS.SetWindowPos (handle, 0, x, y, width, height, flags);
		return;
	}

	/*
	* Bug in Windows.  If the combo box has the CBS_SIMPLE style,
	* the list portion of the combo box is not redrawn when the
	* combo box is resized.  The fix is to force a redraw when
	* the size has changed.
	*/
	if (parent.lpwp != null || (flags &amp; OS.SWP_NOSIZE) != 0 || !OS.IsWindowVisible
(handle)) {
		super.setBounds (x, y, width, height, flags);
		return;
	}
	RECT rect = new RECT ();
	OS.GetWindowRect (handle, rect);
	super.setBounds (x, y, width, height, flags);
	int oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;
	if (oldWidth != width || oldHeight != height) {
		if (OS.IsWinCE) {	
			int hwndText = OS.GetDlgItem (handle, CBID_EDIT);
			if (hwndText != 0) OS.InvalidateRect (hwndText, null, true);
			int hwndList = OS.GetDlgItem (handle, CBID_LIST);
			if (hwndList != 0) OS.InvalidateRect (hwndList, null, true);
		} else {
			int uFlags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;
			OS.RedrawWindow (handle, null, 0, uFlags);
		}
	}
}

I'm sorry but we are API frozen for 3.0.  The hack fixes the problem on 
Windows only.  The other platforms need to be addressed as well.
Steve, I understand that we are API frozen. But why can't you just replace the
constant "5" in Combo:1074 ...
&lt;snip&gt;
        height = textHeight + 6 + (itemHeight * 5) + 2;
&lt;/snip&gt;
... with a "20"? That would alleviate most voters' and users' pains for 3.0.
Because 20 would be wrong in other situations?  Also, there are 4 other 
platforms that need to be changed as well.  You forget about non-Windows 
platforms.  If you can make a case to Jeem for this API, I will consider 
adding it.
Approved for inclusion in 3.0 RC1: Adding a new setter method to Combo for 
maximum number of visible elements. Maintain the old defaults if setter is 
never called.

Fixed &gt; 20040527. Will be in tonight's 8pm build (200405272000).

The API is Combo.getVisibleItemCount() and Combo.setVisibleItemCount(int).
Go ahead and use it after tonight's 8pm build.
*** Bug 38368 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7846" />
    <CreationDate amount="2002-01-17 11:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[Presentations] CLabel and CTabFolder should directly support system colours for gradients</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020115

When the titlebar system colous are changed, Eclipse titlebars do not update.
Likewise for the current view or editor tab.
You have to restart to get the new colours
See trigger bug 7794.

Currently we set the background gradient colours on the corresponding CLabels 
and CTabFolders using the system colours SWT.COLOR_TITLE_BACKGROUND, 
SWT.COLOR_TITLE_BACKGROUND_GRADIENT, and SWT.COLOR_WIDGET_BACKGROUND.
These system colors are cached in Eclipse UI (see code in 
WorkbenchColors.startUp).


*** This bug has been marked as a duplicate of 7712 ***
OOPS. Was searching for 7712
*** Bug 10963 has been marked as a duplicate of this bug. ***
Requires new API.
Will revisit after R2.0.
Post 2.0. Re-opening bug reports for review.
On Linux-Gtk+, the ::style-set signal is emitted when the system colours are
changed:

http://developer.gnome.org/doc/API/2.0/gtk/GtkWidget.html#GtkWidget-style-set
http://mail.gnome.org/archives/gtk-devel-list/2002-October/msg00115.html

This could be used to implement an event which indicates that the system colour
constants in SWT have been updated.
This info is good to know.  However, it is not actually relevant to this bug 
report.  Maybe it should be added to bug 37457 or a new bug should be entered 
about GTK not responding to system colour changes.

This bug is not really about knowing when the system colours change.  This bug 
is about the fact that the CLabel and CTabFolder API takes Color as arguments 
and not SWT.COLOR_* constants.  Even if CTabFolder knew that the system 
colours had changed, it would not know that the Color object it was given was 
derived from a system colour and not just some other RGB values picked by the 
application designer.
Thanks, I opened bug 61445.
*** Bug 24337 has been marked as a duplicate of this bug. ***
This could now be fixed in UI by (carefully) using a SWT.Settings listener on the display to reset the system colors.  I don't recomend doing this so late in 3.3.  When/if this bug is fixed, I'd like to review the code.
Yes this would be a fairly significant change, since it needs to rippled through the workbench themes, etc., to be propagated to the CTabFolder.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Possible these days with CSS. While this was fixed, I mark it as worksforme as I don't think it is worth hunting down the commit id.</WithStack>
    <WithOutStack>Build 20020115

When the titlebar system colous are changed, Eclipse titlebars do not update.
Likewise for the current view or editor tab.
You have to restart to get the new colours
See trigger bug 7794.

Currently we set the background gradient colours on the corresponding CLabels 
and CTabFolders using the system colours SWT.COLOR_TITLE_BACKGROUND, 
SWT.COLOR_TITLE_BACKGROUND_GRADIENT, and SWT.COLOR_WIDGET_BACKGROUND.
These system colors are cached in Eclipse UI (see code in 
WorkbenchColors.startUp).


*** This bug has been marked as a duplicate of 7712 ***
OOPS. Was searching for 7712
*** Bug 10963 has been marked as a duplicate of this bug. ***
Requires new API.
Will revisit after R2.0.
Post 2.0. Re-opening bug reports for review.
On Linux-Gtk+, the ::style-set signal is emitted when the system colours are
changed:

http://developer.gnome.org/doc/API/2.0/gtk/GtkWidget.html#GtkWidget-style-set
http://mail.gnome.org/archives/gtk-devel-list/2002-October/msg00115.html

This could be used to implement an event which indicates that the system colour
constants in SWT have been updated.
This info is good to know.  However, it is not actually relevant to this bug 
report.  Maybe it should be added to bug 37457 or a new bug should be entered 
about GTK not responding to system colour changes.

This bug is not really about knowing when the system colours change.  This bug 
is about the fact that the CLabel and CTabFolder API takes Color as arguments 
and not SWT.COLOR_* constants.  Even if CTabFolder knew that the system 
colours had changed, it would not know that the Color object it was given was 
derived from a system colour and not just some other RGB values picked by the 
application designer.
Thanks, I opened bug 61445.
*** Bug 24337 has been marked as a duplicate of this bug. ***
This could now be fixed in UI by (carefully) using a SWT.Settings listener on the display to reset the system colors.  I don't recomend doing this so late in 3.3.  When/if this bug is fixed, I'd like to review the code.
Yes this would be a fairly significant change, since it needs to rippled through the workbench themes, etc., to be propagated to the CTabFolder.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Possible these days with CSS. While this was fixed, I mark it as worksforme as I don't think it is worth hunting down the commit id.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7847" />
    <CreationDate amount="2002-01-17 11:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>There is no UNDO for deletion of project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1.  The project was deleted but not the files in the project.</Line>
          <Line />
          <Line>In this case, the project would need to be re-created and the files re-</Line>
          <Line>associated with it.</Line>
          <Line />
          <Line>2.  The project was deleted along with the files in it.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>There are two possible scenarios to address.

1.  The project was deleted but not the files in the project.

In this case, the project would need to be re-created and the files re-
associated with it.

2.  The project was deleted along with the files in it.

In this case, the files would have to be restored, the project re-created, and 
the files re-associated with the project.
Not on the plan for 2.0.
Moving to Resolved/LATER.

John P is going to come back with more information on this. 
Additional input from the original reporter:

I would consider it acceptable to have UNDO only when underlying FS artifacts 
are not deleted, if in addition to that the 'delete confirmation dialog' (the 
one that asks the user whether they wish to deep-delete or shallow-delete) also 
makes it clear that deep-delete is NOT UNDO-able.  I believe there is already a 
separate defect asking to clarify the wording of the delete confirmation 
dialog, so I would think that the two issues could be addressed with a single 
change.

If projects are deleted but their contents are not, it is now possible to use 
the project import wizard to recreate the project.  Since the project 
description is now stored in the content area, the project will correctly get 
recreated with the correct natures and build specification.

Is this sufficient to meet your requirement?  I assume you're not asking for a 
literal "Undo" command, because we don't have that for *any* resource 
manipulation operations.
I've confirmed with the original reporter of this defect that the resolution 
meets his requirements.  This defect can be closed.
Closing at originator's request.</WithStack>
    <WithOutStack>There are two possible scenarios to address.

1.  The project was deleted but not the files in the project.

In this case, the project would need to be re-created and the files re-
associated with it.

2.  The project was deleted along with the files in it.

In this case, the files would have to be restored, the project re-created, and 
the files re-associated with the project.
Not on the plan for 2.0.
Moving to Resolved/LATER.

John P is going to come back with more information on this. 
Additional input from the original reporter:

I would consider it acceptable to have UNDO only when underlying FS artifacts 
are not deleted, if in addition to that the 'delete confirmation dialog' (the 
one that asks the user whether they wish to deep-delete or shallow-delete) also 
makes it clear that deep-delete is NOT UNDO-able.  I believe there is already a 
separate defect asking to clarify the wording of the delete confirmation 
dialog, so I would think that the two issues could be addressed with a single 
change.

If projects are deleted but their contents are not, it is now possible to use 
the project import wizard to recreate the project.  Since the project 
description is now stored in the content area, the project will correctly get 
recreated with the correct natures and build specification.

Is this sufficient to meet your requirement?  I assume you're not asking for a 
literal "Undo" command, because we don't have that for *any* resource 
manipulation operations.
I've confirmed with the original reporter of this defect that the resolution 
meets his requirements.  This defect can be closed.
Closing at originator's request.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7848" />
    <CreationDate amount="2002-01-17 11:13:00 -0500" />
    <DupId amount="7434" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incorrect import added during Organize import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Win32 0109

If I hit Organize Import on one of my classes, I get a invalid import added.
I have a variable named error which seems to cause an import statement to be 
added of the form import xxx.yyy.zzz.error;
If I save the document it says it cannot resolve the import.  If I attempt 
Content Assist on the error variable, the class/type of the import doesn't 
appear in the list, so I don't know how the matching is happening.
*** Bug 8062 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 7434 ***
Handled in JDT/UI</WithStack>
    <WithOutStack>Win32 0109

If I hit Organize Import on one of my classes, I get a invalid import added.
I have a variable named error which seems to cause an import statement to be 
added of the form import xxx.yyy.zzz.error;
If I save the document it says it cannot resolve the import.  If I attempt 
Content Assist on the error variable, the class/type of the import doesn't 
appear in the list, so I don't know how the matching is happening.
*** Bug 8062 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 7434 ***
Handled in JDT/UI</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7849" />
    <CreationDate amount="2002-01-17 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Labels on WINCE don't use background color of parent when color isn't set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="409" end="435" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="436" end="469" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="470" end="502" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="503" end="535" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="import">
        <location start="536" end="570" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="class">
        <location start="572" end="1661" />
        <code>public class SwtShellNoLabelTest {
	Display display;
	Shell shell;
	
public static void main (String[] args) {
	new SwtShellNoLabelTest().run();
}
private void run() {
	display = new Display();
	shell = new Shell(display, SWT.CLIP_CHILDREN | SWT.CLIP_SIBLINGS | 
SWT.BORDER | SWT.CLOSE | SWT.MENU | SWT.TITLE | SWT.MIN | SWT.MAX | SWT.RESIZE);
	shell.setLayout(new RowLayout());
	shell.setText("asdf");
	Label label = new Label(shell, 0);
	label.setText("Hello world");
	
	shell.addListener(SWT.Iconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("iconify");
		}
	});
	shell.addListener(SWT.Deiconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("Deiconify");
		}
	});
	shell.addListener(SWT.Activate, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("activate");
		}
	});
	shell.setSize(200, 240);
	shell.setVisible(false);
	shell.setVisible(true);
	shell.forceFocus();
//	shell.open();
	
      while (!shell.isDisposed()) {
         if (!display.readAndDispatch()) display.sleep();
      }

}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you don't explicitly set the background color of a Label, it is supposed 
to be "transparent", i.e. show the background color of the containing parent.  
In the following example, the Label widget shows up with a white background 
even though the background color hasn't been set and the parent's background is 
gray.  On Win32, both the Label and the Shell appear with the default platform 
background.

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.graphics.*;

public class SwtShellNoLabelTest {
	Display display;
	Shell shell;
	
public static void main (String[] args) {
	new SwtShellNoLabelTest().run();
}
private void run() {
	display = new Display();
	shell = new Shell(display, SWT.CLIP_CHILDREN | SWT.CLIP_SIBLINGS | 
SWT.BORDER | SWT.CLOSE | SWT.MENU | SWT.TITLE | SWT.MIN | SWT.MAX | SWT.RESIZE);
	shell.setLayout(new RowLayout());
	shell.setText("asdf");
	Label label = new Label(shell, 0);
	label.setText("Hello world");
	
	shell.addListener(SWT.Iconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("iconify");
		}
	});
	shell.addListener(SWT.Deiconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("Deiconify");
		}
	});
	shell.addListener(SWT.Activate, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("activate");
		}
	});
	shell.setSize(200, 240);
	shell.setVisible(false);
	shell.setVisible(true);
	shell.forceFocus();
//	shell.open();
	
      while (!shell.isDisposed()) {
         if (!display.readAndDispatch()) display.sleep();
      }

}

}
Doesn't it run the same code in both places? It may just be that the defaults 
don't work as you expect on WinCE? CC would know.

Thanks for the test case.
The bug was that the default Shell on PPC was not using the default background 
window color for that platform. This has been changed. Shells now have a white 
background on PPC.

Note that SWT does not manage labels (or radio buttons..) to be transparent. On 
the desktop (W2K), you can use the same test and set the background of the 
Shell to a different color. The background of the label will still appear gray, 
not red.

Internal comment: GetSysColor for WinCE defines 2 new constants which define 
the default background/foreground values for STATIC controls. COLOR_STATIC and 
COLOR_STATICTEXT. On current PPCs, COLOR_STATIC matches the COLOR_WINDOW which 
defines the window background color (white).</WithStack>
    <WithOutStack>When you don't explicitly set the background color of a Label, it is supposed 
to be "transparent", i.e. show the background color of the containing parent.  
In the following example, the Label widget shows up with a white background 
even though the background color hasn't been set and the parent's background is 
gray.  On Win32, both the Label and the Shell appear with the default platform 
background.

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.graphics.*;

public class SwtShellNoLabelTest {
	Display display;
	Shell shell;
	
public static void main (String[] args) {
	new SwtShellNoLabelTest().run();
}
private void run() {
	display = new Display();
	shell = new Shell(display, SWT.CLIP_CHILDREN | SWT.CLIP_SIBLINGS | 
SWT.BORDER | SWT.CLOSE | SWT.MENU | SWT.TITLE | SWT.MIN | SWT.MAX | SWT.RESIZE);
	shell.setLayout(new RowLayout());
	shell.setText("asdf");
	Label label = new Label(shell, 0);
	label.setText("Hello world");
	
	shell.addListener(SWT.Iconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("iconify");
		}
	});
	shell.addListener(SWT.Deiconify, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("Deiconify");
		}
	});
	shell.addListener(SWT.Activate, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("activate");
		}
	});
	shell.setSize(200, 240);
	shell.setVisible(false);
	shell.setVisible(true);
	shell.forceFocus();
//	shell.open();
	
      while (!shell.isDisposed()) {
         if (!display.readAndDispatch()) display.sleep();
      }

}

}
Doesn't it run the same code in both places? It may just be that the defaults 
don't work as you expect on WinCE? CC would know.

Thanks for the test case.
The bug was that the default Shell on PPC was not using the default background 
window color for that platform. This has been changed. Shells now have a white 
background on PPC.

Note that SWT does not manage labels (or radio buttons..) to be transparent. On 
the desktop (W2K), you can use the same test and set the background of the 
Shell to a different color. The background of the label will still appear gray, 
not red.

Internal comment: GetSysColor for WinCE defines 2 new constants which define 
the default background/foreground values for STATIC controls. COLOR_STATIC and 
COLOR_STATICTEXT. On current PPCs, COLOR_STATIC matches the COLOR_WINDOW which 
defines the window background color (white).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7850" />
    <CreationDate amount="2002-01-17 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Strucutre select Next and Previous only works for statements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>but expanding by statements looks like the most important expansion to me(e.g. 
for extract method). I wonder whether what we have is good enough. 

Do you have a scenario where the general solution would be important.
No, not for extract method
then I opt to defer (reopen if you disagree)
Reopening
Works for me in 2.0 (new AST)</WithStack>
    <WithOutStack>but expanding by statements looks like the most important expansion to me(e.g. 
for extract method). I wonder whether what we have is good enough. 

Do you have a scenario where the general solution would be important.
No, not for extract method
then I opt to defer (reopen if you disagree)
Reopening
Works for me in 2.0 (new AST)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7851" />
    <CreationDate amount="2002-01-17 11:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Decorators preferences pages sets control when it shouldn't</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Causes other preferences pages to be blank
Fixed</WithStack>
    <WithOutStack>Causes other preferences pages to be blank
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7852" />
    <CreationDate amount="2002-01-17 11:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Key Bindings] Arrow keys as accelerators for contributed actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you contribute an action via XML and want to bind an accelerator key like 
Alt+Arrow Left to it you have to write Alt+ARROW_LEFT in the plugin.xml file. 
This looks stupid in the UI.

Any hint ?
Opt to raise to P2.
I am not sure what you are asking for. Can you give me an example?
Take a look at the new actions in the Refactor menu. Their test is
Strucuture Select Previous Alt+ARROW_LEFT. The word ARROW_LEFT looks a stupid. 
I would like to have Alt+ Arrow Left of Better Alt+-&gt;. But I can't do this 
since the action is contributed via XML and therefore I have to specify the 
accelerator in plugin.xml.
That will be fixed in the future when we use only the keybinding extension 
points. The string used in the XML will may be different from the one shown to 
the user.
fixed</WithStack>
    <WithOutStack>If you contribute an action via XML and want to bind an accelerator key like 
Alt+Arrow Left to it you have to write Alt+ARROW_LEFT in the plugin.xml file. 
This looks stupid in the UI.

Any hint ?
Opt to raise to P2.
I am not sure what you are asking for. Can you give me an example?
Take a look at the new actions in the Refactor menu. Their test is
Strucuture Select Previous Alt+ARROW_LEFT. The word ARROW_LEFT looks a stupid. 
I would like to have Alt+ Arrow Left of Better Alt+-&gt;. But I can't do this 
since the action is contributed via XML and therefore I have to specify the 
accelerator in plugin.xml.
That will be fixed in the future when we use only the keybinding extension 
points. The string used in the XML will may be different from the one shown to 
the user.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7853" />
    <CreationDate amount="2002-01-17 11:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Structured Selection action</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>These actions should be in the Edit menu not in the refactoring menu. They 
should also work for class files.
suggest to wait until we have agreed on the menu organization.
The action could also be part of a Navigate menu.
Would also agree to move then to the Edit menu
the actions are now in the edit menu "Expand Selection" (we got too many 
complaints)
Verified</WithStack>
    <WithOutStack>These actions should be in the Edit menu not in the refactoring menu. They 
should also work for class files.
suggest to wait until we have agreed on the menu organization.
The action could also be part of a Navigate menu.
Would also agree to move then to the Edit menu
the actions are now in the edit menu "Expand Selection" (we got too many 
complaints)
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7854" />
    <CreationDate amount="2002-01-17 11:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Prompted twice for password</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Create repo connection, anonymous, dev.eclipse.org</Line>
          <Line>2. Add project to workspace</Line>
          <Line>3. Change project properties to extssh, your user/password.</Line>
          <Line>4. Synchronize. You are prompted for your password.</Line>
          <Line>Appears to be related to the fact that TWO repo locations are created in the</Line>
          <Line>repo view. Presumably the anonymous one is morphed into the non-anonymous one,</Line>
          <Line>and then a second non-anoymous one is created, and it is for this one that I'm</Line>
          <Line>being prompted for the password.</Line>
          <Line>This is the intended behavior. Each repo location has its own password. I'm not</Line>
          <Line>sure if we can guarantee that all connection types will use the same password,</Line>
          <Line>especially since we provide an extension point for connection methods.</Line>
          <Line>But when I changed the properties, I *provided* a password. It should have used</Line>
          <Line>this one rather than prompting me again.</Line>
          <Line>Fixed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Create repo connection, anonymous, dev.eclipse.org
2. Add project to workspace
3. Change project properties to extssh, your user/password.
4. Synchronize. You are prompted for your password.
Appears to be related to the fact that TWO repo locations are created in the 
repo view. Presumably the anonymous one is morphed into the non-anonymous one, 
and then a second non-anoymous one is created, and it is for this one that I'm 
being prompted for the password.
This is the intended behavior. Each repo location has its own password. I'm not 
sure if we can guarantee that all connection types will use the same password, 
especially since we provide an extension point for connection methods. 
But when I changed the properties, I *provided* a password. It should have used 
this one rather than prompting me again.
Fixed</WithStack>
    <WithOutStack>1. Create repo connection, anonymous, dev.eclipse.org
2. Add project to workspace
3. Change project properties to extssh, your user/password.
4. Synchronize. You are prompted for your password.
Appears to be related to the fact that TWO repo locations are created in the 
repo view. Presumably the anonymous one is morphed into the non-anonymous one, 
and then a second non-anoymous one is created, and it is for this one that I'm 
being prompted for the password.
This is the intended behavior. Each repo location has its own password. I'm not 
sure if we can guarantee that all connection types will use the same password, 
especially since we provide an extension point for connection methods. 
But when I changed the properties, I *provided* a password. It should have used 
this one rather than prompting me again.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7855" />
    <CreationDate amount="2002-01-17 11:31:00 -0500" />
    <DupId amount="9082" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Hotkeys don't work in I20020115</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Might not be a JDT bug.
F5-F8 did not work in hte debugger until after I pulled down the Debug menu for 
hte first time. Then they worked fine.
Tried to reproduce with other keys, e.g., from the workbench menu (ctrl-shift-t)
and there the keys work fine even when the menu wasn't pulled down yet. A 
difference is that the Workbench menu is "built-in" and the Debug menu is 
contributed.

Moving to Platform UI for investigation.
Still occurs in 0125. This bug makes debugging REALLY inconvenient if you use 
the keyboard.
Investigate the source of this problem. Good place to start is when Action Sets 
populate the menu with their items.
Build: 20020205

When switching to the Debug perspective form the Java perspective, the 
accelerators are not enabled because the Debug menu already exists. A menu is 
recursively updated when it is created, but since the debug menu is represented 
by an ActionSetContributionItem, not an instance of IMenuManager, it is not 
recursively updated when new actions are added [see MenuManager#update(boolean, 
boolean), ~line 461].

The accelerators are activated when the user opens the debug menu from the menu 
bar.
Defer until after TC. The whole menu contribution implementation needs to be 
revised anyway with some of the work going on (global action def, etc).


*** This bug has been marked as a duplicate of 9082 ***</WithStack>
    <WithOutStack>Might not be a JDT bug.
F5-F8 did not work in hte debugger until after I pulled down the Debug menu for 
hte first time. Then they worked fine.
Tried to reproduce with other keys, e.g., from the workbench menu (ctrl-shift-t)
and there the keys work fine even when the menu wasn't pulled down yet. A 
difference is that the Workbench menu is "built-in" and the Debug menu is 
contributed.

Moving to Platform UI for investigation.
Still occurs in 0125. This bug makes debugging REALLY inconvenient if you use 
the keyboard.
Investigate the source of this problem. Good place to start is when Action Sets 
populate the menu with their items.
Build: 20020205

When switching to the Debug perspective form the Java perspective, the 
accelerators are not enabled because the Debug menu already exists. A menu is 
recursively updated when it is created, but since the debug menu is represented 
by an ActionSetContributionItem, not an instance of IMenuManager, it is not 
recursively updated when new actions are added [see MenuManager#update(boolean, 
boolean), ~line 461].

The accelerators are activated when the user opens the debug menu from the menu 
bar.
Defer until after TC. The whole menu contribution implementation needs to be 
revised anyway with some of the work going on (global action def, etc).


*** This bug has been marked as a duplicate of 9082 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7856" />
    <CreationDate amount="2002-01-17 11:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad Exception message when bad move occurs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Create a project in the Resource Navigator</Line>
          <Line>2) Create a folder under the project</Line>
          <Line>3) Select rename on the folder</Line>
          <Line>4) change the name but do not hit return</Line>
          <Line>5) Collapse the tree - you will get a dialog with the above message</Line>
          <Line>Picky picky.  I considered launching into a debate about appropriate uses of</Line>
          <Line>semi-colon versus colon, but changing the message required less effort.</Line>
          <Line>Whatever happened to artistic freedom? ;)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you try and move a resource under its own hierarchy you will get the 
following message in a Core Exception

"Assertion failed; Destination should not be under resource's hierarchy.."

The ; should be a : and there should only be one period at the end.

This is not possible using the current UI but in build 20020115 or earlier this 
can be replicated using the following steps

1) Create a project in the Resource Navigator
2) Create a folder under the project
3) Select rename on the folder
4) change the name but do not hit return
5) Collapse the tree - you will get a dialog with the above message
Picky picky.  I considered launching into a debate about appropriate uses of 
semi-colon versus colon, but changing the message required less effort.  
Whatever happened to artistic freedom? ;)

Released for builds &gt; 2002-01-17</WithStack>
    <WithOutStack>When you try and move a resource under its own hierarchy you will get the 
following message in a Core Exception

"Assertion failed; Destination should not be under resource's hierarchy.."

The ; should be a : and there should only be one period at the end.

This is not possible using the current UI but in build 20020115 or earlier this 
can be replicated using the following steps

1) Create a project in the Resource Navigator
2) Create a folder under the project
3) Select rename on the folder
4) change the name but do not hit return
5) Collapse the tree - you will get a dialog with the above message
Picky picky.  I considered launching into a debate about appropriate uses of 
semi-colon versus colon, but changing the message required less effort.  
Whatever happened to artistic freedom? ;)

Released for builds &gt; 2002-01-17</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7857" />
    <CreationDate amount="2002-01-17 11:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Confirm project delete dialog could be enhanced</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The new project delete dialog (as in build 2002-01-15) improved on the previous 
one so as to ask whether to delete the contents of the project in the file 
system.

However, the dialog is a bit too verbose. It would be better if instead of two 
radio buttons, we should only have one check box. It would say:
   Delete contents under &lt;&lt;path to project location&gt;&gt;
or
   Delete contents in the file system
when multiple projects selected.

By default, the check box is not selected. It is obvious enough to the user 
that selecting it will delete the contents, while not selecting it will leave 
the contents alone.

Usability guidelines recommend keeping dialog text brief and to the point. 
Users do not like to read much! Also, only to use two radio buttons instead of 
a check box only if it is not obvious to the user what the check and uncheck 
state will do. In this case, it is obvious and will help keep the dialog brief.
We should change the default to NOT deleting the user's work. 
We should change the default to NOT deleting the user's work.</WithStack>
    <WithOutStack>The new project delete dialog (as in build 2002-01-15) improved on the previous 
one so as to ask whether to delete the contents of the project in the file 
system.

However, the dialog is a bit too verbose. It would be better if instead of two 
radio buttons, we should only have one check box. It would say:
   Delete contents under &lt;&lt;path to project location&gt;&gt;
or
   Delete contents in the file system
when multiple projects selected.

By default, the check box is not selected. It is obvious enough to the user 
that selecting it will delete the contents, while not selecting it will leave 
the contents alone.

Usability guidelines recommend keeping dialog text brief and to the point. 
Users do not like to read much! Also, only to use two radio buttons instead of 
a check box only if it is not obvious to the user what the check and uncheck 
state will do. In this case, it is obvious and will help keep the dialog brief.
We should change the default to NOT deleting the user's work. 
We should change the default to NOT deleting the user's work.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7858" />
    <CreationDate amount="2002-01-17 12:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Feature: gets super class for an IJavaClassType</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Developers of the 'super debug adapter' need access to the superclass of an 
IJavaClassType.
Fixed.
Please verify.
Verified. Code/API looks good.</WithStack>
    <WithOutStack>Developers of the 'super debug adapter' need access to the superclass of an 
IJavaClassType.
Fixed.
Please verify.
Verified. Code/API looks good.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7859" />
    <CreationDate amount="2002-01-17 12:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Feature: method exit breakpoints</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Super debug adapter developers require method exit breakpoints.
Fixed. IJavaMethodEntryBreakpoint was replaced with IJavaMethodBreakpoint which 
provides support for entry &amp; exit breakpoints on specific types and/or methods.
Please verify
Updated BreakpointToggleAction and associated .properties file to yield generic
error messages. The messages were watchpoint specific.
Verified.</WithStack>
    <WithOutStack>Super debug adapter developers require method exit breakpoints.
Fixed. IJavaMethodEntryBreakpoint was replaced with IJavaMethodBreakpoint which 
provides support for entry &amp; exit breakpoints on specific types and/or methods.
Please verify
Updated BreakpointToggleAction and associated .properties file to yield generic
error messages. The messages were watchpoint specific.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7860" />
    <CreationDate amount="2002-01-17 12:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Feature: support suspend/resume of VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>super debug adaptors require the ability to create an IJavaDebugTarget that is 
suspended, and control when it is resumed.
Fixed. Java VMs can now be suspended/resumed from the UI as well as 
programatically. By default a VM is resumed at startup, but clients can 
override the default, specifying to suspened at startup.  While the VM is 
suspended, threads cannot be resumed. While a thread is suspended, the VM 
cannto be suspended (that is, either individual threads can be suspended, or 
the VM as a whole). 
Please verify.
Verified.</WithStack>
    <WithOutStack>super debug adaptors require the ability to create an IJavaDebugTarget that is 
suspended, and control when it is resumed.
Fixed. Java VMs can now be suspended/resumed from the UI as well as 
programatically. By default a VM is resumed at startup, but clients can 
override the default, specifying to suspened at startup.  While the VM is 
suspended, threads cannot be resumed. While a thread is suspended, the VM 
cannto be suspended (that is, either individual threads can be suspended, or 
the VM as a whole). 
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7861" />
    <CreationDate amount="2002-01-17 12:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Multiple enabled decorators doesn't work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>If you have two decorators enabled at the same time only one of them wins and 
gets to decorate. If you load the org.eclipse.team.* projects from 
dev.eclipse.org and enable both the CVS and Team Examples decorators then create 
a CVS project and an Example (file system provider) both decorations are never 
shown although both decorators are enabled.
Fixed in build &gt;20020115
Marking closed</WithStack>
    <WithOutStack>If you have two decorators enabled at the same time only one of them wins and 
gets to decorate. If you load the org.eclipse.team.* projects from 
dev.eclipse.org and enable both the CVS and Team Examples decorators then create 
a CVS project and an Example (file system provider) both decorations are never 
shown although both decorators are enabled.
Fixed in build &gt;20020115
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7862" />
    <CreationDate amount="2002-01-17 12:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Feature: hidden breakpoints</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>super debug adapters require to be able to create breakpoints and install them 
in targets, such that they are not visible to other targets, or in the 
breakpoint manager.
Fixed. Breakpoints may be specified as "registered" on creation. Breakpoints 
that are not added to the breakpoint manager do not display in the UI. Such 
breakpoints are persisted if specified. All breakpoints now have a "persisted" 
property such that breakpoints of a specific kind can be selectively persisted.
Please verify.
Verified.</WithStack>
    <WithOutStack>super debug adapters require to be able to create breakpoints and install them 
in targets, such that they are not visible to other targets, or in the 
breakpoint manager.
Fixed. Breakpoints may be specified as "registered" on creation. Breakpoints 
that are not added to the breakpoint manager do not display in the UI. Such 
breakpoints are persisted if specified. All breakpoints now have a "persisted" 
property such that breakpoints of a specific kind can be selectively persisted.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7863" />
    <CreationDate amount="2002-01-17 13:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>VCM froze my IDE - had to kill it</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Build 20020115

Attempting to synchronize with a remote server, I had previously worked with 
just fine, I issued a synchronization operation. The progress dialog showed up, 
not doing anything. The cancel button had no action.

Had to manually kill my IDE after a 45 minutes wait... 

Could I suggest a timeout AND honouring the cancel request ? I think I reported 
the non honouring cancel requests various times already...
We are close to having people self-host on our new 2.0 work.
Which is why we haven't fixed the cancel problem in 1.0.
This no longer applieas
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithStack>
    <WithOutStack>Build 20020115

Attempting to synchronize with a remote server, I had previously worked with 
just fine, I issued a synchronization operation. The progress dialog showed up, 
not doing anything. The cancel button had no action.

Had to manually kill my IDE after a 45 minutes wait... 

Could I suggest a timeout AND honouring the cancel request ? I think I reported 
the non honouring cancel requests various times already...
We are close to having people self-host on our new 2.0 work.
Which is why we haven't fixed the cancel problem in 1.0.
This no longer applieas
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7864" />
    <CreationDate amount="2002-01-17 13:42:00 -0500" />
    <DupId amount="2668" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Need API for selection changes in debug view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Other debug developers would like access to our special selection service for 
the debug view (which provides selection change notification even when a part 
does not have focus - i.e. is not the active part).
There is a bug for this to be provided in the ui framework.
See bug 2668.
If API/function is to be provided by the workbench, the debugger does not need 
to provide such API. This function is being requested by other debug developers 
writing custom views. They too rely on the selecction in the debug view (i.e. 
current stack frame), which may not be the active part. 


*** This bug has been marked as a duplicate of 2668 ***</WithStack>
    <WithOutStack>Other debug developers would like access to our special selection service for 
the debug view (which provides selection change notification even when a part 
does not have focus - i.e. is not the active part).
There is a bug for this to be provided in the ui framework.
See bug 2668.
If API/function is to be provided by the workbench, the debugger does not need 
to provide such API. This function is being requested by other debug developers 
writing custom views. They too rely on the selecction in the debug view (i.e. 
current stack frame), which may not be the active part. 


*** This bug has been marked as a duplicate of 2668 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7865" />
    <CreationDate amount="2002-01-17 14:01:00 -0500" />
    <DupId amount="6191" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Double-click selection is broken for strings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="200" end="270" />
        <code>System.out.println("Fred and Barney counted " + 3 + " lollipops.");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>You used to be able to double-click inside a double-quote in the editor, and it 
would select everything up to the inside of the next double-quote. For example, 
if I have the following line of code:
   System.out.println("Fred and Barney counted " + 3 + " lollipops.");
and if I move the mouse to exactly between the " and the F in Fred, and double-
click, then in VAJ and in VAME the entire string &lt;Fred and Barney counted &gt; is 
selected. This used to work in Eclipse as well, but it appears to be broken, 
because now all you get is Fred selected.

I use this all the time to cut/paste printlns and change the string. It is 
annoying to have to now carefully drag-select the string. Please put this 
behavior back the way it was.
(I'm pretty sure you have reported this bug before, but I can't find the dup)

double clicking is now done using the java.text support to be NLS compliant.
Need to investigate whether a double click near the quotes can be handled 
specially.



*** This bug has been marked as a duplicate of 6191 ***</WithStack>
    <WithOutStack>You used to be able to double-click inside a double-quote in the editor, and it 
would select everything up to the inside of the next double-quote. For example, 
if I have the following line of code:
   System.out.println("Fred and Barney counted " + 3 + " lollipops.");
and if I move the mouse to exactly between the " and the F in Fred, and double-
click, then in VAJ and in VAME the entire string &lt;Fred and Barney counted &gt; is 
selected. This used to work in Eclipse as well, but it appears to be broken, 
because now all you get is Fred selected.

I use this all the time to cut/paste printlns and change the string. It is 
annoying to have to now carefully drag-select the string. Please put this 
behavior back the way it was.
(I'm pretty sure you have reported this bug before, but I can't find the dup)

double clicking is now done using the java.text support to be NLS compliant.
Need to investigate whether a double click near the quotes can be handled 
specially.



*** This bug has been marked as a duplicate of 6191 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7866" />
    <CreationDate amount="2002-01-17 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-other" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Incorrect type info after remove parse info and reparse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Remove the parse information then reparse a source file, you would see 
incorrect type information, e.g. the type of "int a[2]" becomes "[2]" rather 
than "int [2]".
I'm going to defer this to R2 since I made the "Type(s)" reference invisible so 
a user would never see this anyway.

In the latest parsers, type info has been removed due to memory concerns so 
this bug is no longer valid
Closing</WithStack>
    <WithOutStack>Remove the parse information then reparse a source file, you would see 
incorrect type information, e.g. the type of "int a[2]" becomes "[2]" rather 
than "int [2]".
I'm going to defer this to R2 since I made the "Type(s)" reference invisible so 
a user would never see this anyway.

In the latest parsers, type info has been removed due to memory concerns so 
this bug is no longer valid
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7867" />
    <CreationDate amount="2002-01-17 15:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DCR: Delete checkSubclass method from Dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We should let people subclass Dialog.
The actual Dialog class itself doesn't do anything much except provide 3 inst 
vars (parent, style, text) and getters for the inst vars, a setter for text 
(the shell's title), and some simple constructors to set the parent and style.
The reason this would be nice is that it groups all dialogs together in the 
same hierarchy under Dialog.
Had a discussion with SN, and he is convinced that this is harmless and that it 
is the right thing to do.
Make it so. ;-)
Done, will be in build &gt; 20020118.</WithStack>
    <WithOutStack>We should let people subclass Dialog.
The actual Dialog class itself doesn't do anything much except provide 3 inst 
vars (parent, style, text) and getters for the inst vars, a setter for text 
(the shell's title), and some simple constructors to set the parent and style.
The reason this would be nice is that it groups all dialogs together in the 
same hierarchy under Dialog.
Had a discussion with SN, and he is convinced that this is harmless and that it 
is the right thing to do.
Make it so. ;-)
Done, will be in build &gt; 20020118.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7868" />
    <CreationDate amount="2002-01-17 15:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Team is decorating items that JDT hasn't decorated yet</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Somewhere there is some conflicting interaction between JDT's decorator (in the 
packages view) and the CVS decorator. If you flip on the CVS decorator when the 
workspace has been started, everything paints correctly. If, however, you exit 
the workbench with the decorator on and restart, weird behaviour happens:

-Some nodes appear to be decorated by JDT and then passed to CVS: we decorate 
these fine and both JDT and CVS decorations are visible.

-Some nodes are not decorated by CVS; actually I suspect they are decorated by 
CVS and THEN decorated by JDT, which somehow un-does the CVS decorations.

The general problem is ordering - it looks like in some circumstances JDT 
either decorates too late, or perhaps decorates twice.
This may be as a result of PR 7861. Please reload org.eclipse.ui to be sure.
I think this can probably be closed; decorating in the packages view seems to
work great now.
closing</WithStack>
    <WithOutStack>Somewhere there is some conflicting interaction between JDT's decorator (in the 
packages view) and the CVS decorator. If you flip on the CVS decorator when the 
workspace has been started, everything paints correctly. If, however, you exit 
the workbench with the decorator on and restart, weird behaviour happens:

-Some nodes appear to be decorated by JDT and then passed to CVS: we decorate 
these fine and both JDT and CVS decorations are visible.

-Some nodes are not decorated by CVS; actually I suspect they are decorated by 
CVS and THEN decorated by JDT, which somehow un-does the CVS decorations.

The general problem is ordering - it looks like in some circumstances JDT 
either decorates too late, or perhaps decorates twice.
This may be as a result of PR 7861. Please reload org.eclipse.ui to be sure.
I think this can probably be closed; decorating in the packages view seems to
work great now.
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7869" />
    <CreationDate amount="2002-01-17 16:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>'Refresh from local CVS state' confusing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>As a user I have no idea what this does, or under what conditions (or how 
frequently) I should run it. Is it really something we can't do with delta 
listening?
I had the same reaction, it kind of scared/confused me when I first saw it.

The case though is that I use the CC command line tool and now our cache of the 
cvs info is out of date.  In this case we don't get the deltas because the 
files were modified in the filesystem.

However, we *should* be watching for deltas on these anyway since the user 
could use cvs command line then "Refresh from Local" on the appropriate files.  
In that case all the menu would be is the equivalent of selecting the four 
files and doing just that (or selecting the parent folder and "Refresh from 
Local"). Then maybe our story is people learn this is what they are to do and 
we can get rid of the menu operation.

Baring that it would be nice if we could put this operation somewhere less 
conspicuous since its an infrequent operation.
I agree. It would be better to hook into Refresh From Local and handle resource 
changes on the meta files. I will see...
For the moment I have removed the CVS refresh action from the UI. I beleive that 
the CVS provider should implement the sync' with the local file system via the 
generic refresh from local action. That would mean listening to resource delta's 
on meta files (CVS/Entry...) and resources and broadcasting state events. This 
means that the decorator resource listener should be removed and all resource 
changes should be handled by this new CVS resource listener.
Fixed, released to HEAD. Refresh from Local should bring you into sync with 
changes to CVS state located on disk.</WithStack>
    <WithOutStack>As a user I have no idea what this does, or under what conditions (or how 
frequently) I should run it. Is it really something we can't do with delta 
listening?
I had the same reaction, it kind of scared/confused me when I first saw it.

The case though is that I use the CC command line tool and now our cache of the 
cvs info is out of date.  In this case we don't get the deltas because the 
files were modified in the filesystem.

However, we *should* be watching for deltas on these anyway since the user 
could use cvs command line then "Refresh from Local" on the appropriate files.  
In that case all the menu would be is the equivalent of selecting the four 
files and doing just that (or selecting the parent folder and "Refresh from 
Local"). Then maybe our story is people learn this is what they are to do and 
we can get rid of the menu operation.

Baring that it would be nice if we could put this operation somewhere less 
conspicuous since its an infrequent operation.
I agree. It would be better to hook into Refresh From Local and handle resource 
changes on the meta files. I will see...
For the moment I have removed the CVS refresh action from the UI. I beleive that 
the CVS provider should implement the sync' with the local file system via the 
generic refresh from local action. That would mean listening to resource delta's 
on meta files (CVS/Entry...) and resources and broadcasting state events. This 
means that the decorator resource listener should be removed and all resource 
changes should be handled by this new CVS resource listener.
Fixed, released to HEAD. Refresh from Local should bring you into sync with 
changes to CVS state located on disk.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7870" />
    <CreationDate amount="2002-01-17 17:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search markers are disappearing as soon as editing source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- Search for references to constructor ElementSearchAction(String, Class[])</Line>
          <Line>- added comments before and after the invocation</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Build 20020115

After having searched for references to a given method (in my case this was a 
constructor), I edited each unit containing a match, near the constructor call 
(added a comment and brackets around it).

Each time I saved the modified source, I ended up losing the search marker 
(likely due to the code flusing obsolete markers).

I would rather expect my marker to be relocated, since in my case, the 
corresponding source is still there.
I cannot see the problem with the test case I perform:
- Search for references to constructor ElementSearchAction(String, Class[])
- added comments before and after the invocation

Can you provide an exact test case. What do you mean by adding brackets? Did the
marker(s) go away while editing or when saving?

Normally the markers are already relocated during edit.


Waiting for input from Philippe
Cannot reproduce anymore with build 20020123
Closing
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20020115

After having searched for references to a given method (in my case this was a 
constructor), I edited each unit containing a match, near the constructor call 
(added a comment and brackets around it).

Each time I saved the modified source, I ended up losing the search marker 
(likely due to the code flusing obsolete markers).

I would rather expect my marker to be relocated, since in my case, the 
corresponding source is still there.
I cannot see the problem with the test case I perform:
- Search for references to constructor ElementSearchAction(String, Class[])
- added comments before and after the invocation

Can you provide an exact test case. What do you mean by adding brackets? Did the
marker(s) go away while editing or when saving?

Normally the markers are already relocated during edit.


Waiting for input from Philippe
Cannot reproduce anymore with build 20020123
Closing
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7871" />
    <CreationDate amount="2002-01-17 17:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>gp - Core dump opening Type selection dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Attached is the javacore file generated when on the 1219 build on Windows2000, 
I attempted to open a Type selection dialog.
Created attachment 234
javacore file
I was using the IBM VM
java version "1.3.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0)
Classic VM (build 1.3.0, J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
Can't recreate it.  Feel free to reopen this PR if it happens again.</WithStack>
    <WithOutStack>Attached is the javacore file generated when on the 1219 build on Windows2000, 
I attempted to open a Type selection dialog.
Created attachment 234
javacore file
I was using the IBM VM
java version "1.3.0"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0)
Classic VM (build 1.3.0, J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
Can't recreate it.  Feel free to reopen this PR if it happens again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7872" />
    <CreationDate amount="2002-01-17 17:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Remove special support for VA/Java</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All VA/Java-specific support should be removed from the Platform.

This code is vestigial - a hold over from the early days before
self-hosting when Eclipse was being developed in VA/Java.

No one is developing Eclipse in VA/Java any more, and it's time
these hacks were removed and the code streamlined.
*** Bug 13123 has been marked as a duplicate of this bug. ***
Also be sure to include code in the startup.jar. (Main/UIMain)
I can remove this.  CC Vlad FYI...
Fixed.  All dead wood removed.</WithStack>
    <WithOutStack>All VA/Java-specific support should be removed from the Platform.

This code is vestigial - a hold over from the early days before
self-hosting when Eclipse was being developed in VA/Java.

No one is developing Eclipse in VA/Java any more, and it's time
these hacks were removed and the code streamlined.
*** Bug 13123 has been marked as a duplicate of this bug. ***
Also be sure to include code in the startup.jar. (Main/UIMain)
I can remove this.  CC Vlad FYI...
Fixed.  All dead wood removed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7873" />
    <CreationDate amount="2002-01-17 17:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Bogus error messages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="786" end="844" />
        <code>fStatus = new MultiStatus(id, IStatus.OK, "Status", null);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Create a Project Test with a folder "COM".</Line>
          <Line>2. Create a Project Test2 with a folder "com".</Line>
          <Line>3. Select "COM" from Step 1, copy it to Test2.  You get an error dialog:</Line>
          <Line />
          <Line>An error occurred while copying resources.</Line>
          <Line />
          <Line>Reason:</Line>
          <Line>Status    &lt;==== bogus, what does "Status" mean?</Line>
          <Line />
          <Line>4.  Same thing happens if you try to a folder with the same name AND the error</Line>
          <Line>dialog has the incorrect action information (the dialog is titled "Copy" instead</Line>
          <Line>of "Move" and its error message says error "copying", not "moving").</Line>
          <Line>build 20020115</Line>
          <Line>Note that this only happens in the packages view, not the resource navigator.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Create a Project Test with a folder "COM".
2. Create a Project Test2 with a folder "com".
3. Select "COM" from Step 1, copy it to Test2.  You get an error dialog:

  An error occurred while copying resources.

  Reason:
   Status    &lt;==== bogus, what does "Status" mean?

4.  Same thing happens if you try to a folder with the same name AND the error 
dialog has the incorrect action information (the dialog is titled "Copy" instead 
of "Move" and its error message says error "copying", not "moving").
build 20020115
Note that this only happens in the packages view, not the resource navigator.

This string comes from:

org.eclipse.jdt.internal.ui.reorg.ReorgExceptionHandler.java

In its constructor it creates a new status object with the bogus (and not 
externalized) message:

fStatus = new MultiStatus(id, IStatus.OK, "Status", null);

changed the 'Status' string to "See details",
and fixed the bogus error dialog title and message
fixed for 20020122
Verified.</WithStack>
    <WithOutStack>1. Create a Project Test with a folder "COM".
2. Create a Project Test2 with a folder "com".
3. Select "COM" from Step 1, copy it to Test2.  You get an error dialog:

  An error occurred while copying resources.

  Reason:
   Status    &lt;==== bogus, what does "Status" mean?

4.  Same thing happens if you try to a folder with the same name AND the error 
dialog has the incorrect action information (the dialog is titled "Copy" instead 
of "Move" and its error message says error "copying", not "moving").
build 20020115
Note that this only happens in the packages view, not the resource navigator.

This string comes from:

org.eclipse.jdt.internal.ui.reorg.ReorgExceptionHandler.java

In its constructor it creates a new status object with the bogus (and not 
externalized) message:

fStatus = new MultiStatus(id, IStatus.OK, "Status", null);

changed the 'Status' string to "See details",
and fixed the bogus error dialog title and message
fixed for 20020122
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7874" />
    <CreationDate amount="2002-01-17 18:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Connection wizard: "Finish" should be enabled if no follow on page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If there is no follow on page after picking the provider, Finish should be 
enabled (and Next disabled).

I recall us discussing this but didn't see a PR.
Fixed.</WithStack>
    <WithOutStack>If there is no follow on page after picking the provider, Finish should be 
enabled (and Next disabled).

I recall us discussing this but didn't see a PR.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7875" />
    <CreationDate amount="2002-01-18 02:12:00 -0500" />
    <DupId amount="8804" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Eliminate "Save Resources" dialog box</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. I hit the F10 button</Line>
          <Line>2. The annoying "Save Resources" dialog comes up forcing me to save the changed</Line>
          <Line>file and compile it.</Line>
          <Line>3. I hit the 'Yes' button; the source is saved, compiled and executed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Okay, so I've just changed a java file Foo.java and wish to execute my java app
with the changes. Note, I haven't saved the file (and don't wish to).

1. I hit the F10 button
2. The annoying "Save Resources" dialog comes up forcing me to save the changed 
   file and compile it.
3. I hit the 'Yes' button; the source is saved, compiled and executed.

Since I perform the above steps very frequently, I find it dialog box annoying. 
Please remove it (or make it optional via a checkbox in preferences).

IMHO, the Eclipse should behave this way:

1. I change Foo.java, but don't save it
2. I hit F10. Eclipse saves all changed source files (NO dialog boxes), compiles 
   the sources, and executes the app
do you have the preference Workbench&gt;Preferences&gt;"Save resources 
automatically..." set?
Sorry, I couldn't find that preference; (looked in 'Window -&gt; Preferences' 
dialog). I'm using build 20011206.

I turned ON the option 'Window-&gt;Preferences-&gt;Workbench-&gt;Save all modified 
resources prior to manual build.' Now, when I hit 'Project-&gt;Rebuild All,'
Eclipse saves all source files prior to building the project.

But when I hit F10, the save resources dialog still comes up.
Where do I find your "Save resources automatically" option? Do I need a newer 
build?

The launcher performs a build before run but doesn't honor this preference 
setting in the same way as rebuild all does. We should change this - moving to 
Debug.
In the interest of brevity and clean design, I think the option:
 'Window-&gt;Preferences-&gt;Workbench-&gt;Save all modified resources prior to manual 
build.'

should be changed to
 'Window-&gt;Preferences-&gt;Workbench-&gt;Auto-save resources'

Now if this option were enabled, Eclipse would automatically save source files 
prior to performing the following actions:
* Project-&gt;Rebuild All
* Debug-&gt;Debug
* Debug-&gt;Run
* Debug-&gt;Relaunch Last
* Project-&gt;Close All
and others...
Add sub-preference underneath 'Build before launch pref.' that controls auto-
saving unsaved resources.


*** This bug has been marked as a duplicate of 8804 ***</WithStack>
    <WithOutStack>Okay, so I've just changed a java file Foo.java and wish to execute my java app
with the changes. Note, I haven't saved the file (and don't wish to).

1. I hit the F10 button
2. The annoying "Save Resources" dialog comes up forcing me to save the changed 
   file and compile it.
3. I hit the 'Yes' button; the source is saved, compiled and executed.

Since I perform the above steps very frequently, I find it dialog box annoying. 
Please remove it (or make it optional via a checkbox in preferences).

IMHO, the Eclipse should behave this way:

1. I change Foo.java, but don't save it
2. I hit F10. Eclipse saves all changed source files (NO dialog boxes), compiles 
   the sources, and executes the app
do you have the preference Workbench&gt;Preferences&gt;"Save resources 
automatically..." set?
Sorry, I couldn't find that preference; (looked in 'Window -&gt; Preferences' 
dialog). I'm using build 20011206.

I turned ON the option 'Window-&gt;Preferences-&gt;Workbench-&gt;Save all modified 
resources prior to manual build.' Now, when I hit 'Project-&gt;Rebuild All,'
Eclipse saves all source files prior to building the project.

But when I hit F10, the save resources dialog still comes up.
Where do I find your "Save resources automatically" option? Do I need a newer 
build?

The launcher performs a build before run but doesn't honor this preference 
setting in the same way as rebuild all does. We should change this - moving to 
Debug.
In the interest of brevity and clean design, I think the option:
 'Window-&gt;Preferences-&gt;Workbench-&gt;Save all modified resources prior to manual 
build.'

should be changed to
 'Window-&gt;Preferences-&gt;Workbench-&gt;Auto-save resources'

Now if this option were enabled, Eclipse would automatically save source files 
prior to performing the following actions:
* Project-&gt;Rebuild All
* Debug-&gt;Debug
* Debug-&gt;Run
* Debug-&gt;Relaunch Last
* Project-&gt;Close All
and others...
Add sub-preference underneath 'Build before launch pref.' that controls auto-
saving unsaved resources.


*** This bug has been marked as a duplicate of 8804 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7876" />
    <CreationDate amount="2002-01-18 02:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Abnormal behavior in the new folder dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The new folder dialog does not check the folder name.

Given a Project Foo (located in e:\foo), if you ask for the creation of a new 
folder you can type in as a folder name "d:\bar", which result in the following 
directory : e:\foo\bar to be created.
The new folder dialog detects this case now.</WithStack>
    <WithOutStack>The new folder dialog does not check the folder name.

Given a Project Foo (located in e:\foo), if you ask for the creation of a new 
folder you can type in as a folder name "d:\bar", which result in the following 
directory : e:\foo\bar to be created.
The new folder dialog detects this case now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7877" />
    <CreationDate amount="2002-01-18 02:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Dialogs] Reusing ProgressMonitorDialog results in expanded dialog size</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="43" end="110" />
        <code>ProgressMonitorDialog monitor = new ProgressMonitorDialog(shell);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="122" end="190" />
        <code>monitor.run(true,true,new IRunnableWithProgress () {
				...
			}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="315" end="383" />
        <code>monitor.run(true,true,new IRunnableWithProgress () {
				...
			}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When performing code something like this 

		ProgressMonitorDialog monitor = new ProgressMonitorDialog(shell);
		
		try {
			monitor.run(true,true,new IRunnableWithProgress () {
				...
			});
		} catch ....

works fine. Then if I attempt to run another runnable with the same
ProgressMonitorDialog object

		try {
			monitor.run(true,true,new IRunnableWithProgress () {
				...
			});
		} catch ....

the dialog grows to somewhere between 640x480 - 800x600 and shifts position on
the screen. Further calls do not change the dialog's size, but move the position
of the dialog, usually to the top left corner of the screen.

Is this a valid use of a ProgressMonitorDialog?  I could see no documentation
warning against it.

This is no showstopper, but I thought the behaviour was odd enough to warrant a
bug report.

Regards,

Sean.
Nick, Explaining progress monitors would be a good addition to the FAQ. 
Is this within the scope of the FAQ or should we rather fix up the comment to 
give a longer example SWT style?
Should give longer description in the constructor to make this clear to 
developers.
Clarification added to Javadoc
Marking closed</WithStack>
    <WithOutStack>When performing code something like this 

		ProgressMonitorDialog monitor = new ProgressMonitorDialog(shell);
		
		try {
			monitor.run(true,true,new IRunnableWithProgress () {
				...
			});
		} catch ....

works fine. Then if I attempt to run another runnable with the same
ProgressMonitorDialog object

		try {
			monitor.run(true,true,new IRunnableWithProgress () {
				...
			});
		} catch ....

the dialog grows to somewhere between 640x480 - 800x600 and shifts position on
the screen. Further calls do not change the dialog's size, but move the position
of the dialog, usually to the top left corner of the screen.

Is this a valid use of a ProgressMonitorDialog?  I could see no documentation
warning against it.

This is no showstopper, but I thought the behaviour was odd enough to warrant a
bug report.

Regards,

Sean.
Nick, Explaining progress monitors would be a good addition to the FAQ. 
Is this within the scope of the FAQ or should we rather fix up the comment to 
give a longer example SWT style?
Should give longer description in the constructor to make this clear to 
developers.
Clarification added to Javadoc
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7878" />
    <CreationDate amount="2002-01-18 05:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>On Package creation: No warning for unconventional names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In New Package Wizard: No Warning if package name starts with uppercase letter.

When renaming an existing package, there is a warning. And there are warnings 
for class creation/renaming and field renaming.
JavaConventions.validatePackageName is used...
JavaConventions.validatePackageName(String) now returns a warning if the first 
letter of a package is uppercase.</WithStack>
    <WithOutStack>In New Package Wizard: No Warning if package name starts with uppercase letter.

When renaming an existing package, there is a warning. And there are warnings 
for class creation/renaming and field renaming.
JavaConventions.validatePackageName is used...
JavaConventions.validatePackageName(String) now returns a warning if the first 
letter of a package is uppercase.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7879" />
    <CreationDate amount="2002-01-18 05:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>RMI stub and skeleton generation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>eclpise should generate stubs and skeletons for "RMI-classes"
Passing it on
RMI support isn't on the plan for 2.0.

This is an excellent plugin contribution opportunity. 

You can use the RMI ant tasks to help you with the stub generation.
deferring
Erich,
yet another contribution (work in progres):

Try this plugin: 
http://sourceforge.net/project/showfiles.php?group_id=53485

Release notes:
http://sourceforge.net/project/shownotes.php?release_id=90026

It runs JDK's rmic on all classes that implement java.rmi.Remote

(However it is not fully automatic yet)
*** Bug 16255 has been marked as a duplicate of this bug. ***
the plugin has significantly improved since my first post.
you may look at the source.
Are you going to re-implement it although a sepatate plugin is available ?

Genady
We are sitll in the planning pahse for 2.1 but it will very likely not be 
addressed in 2.x. That's why it is tagged as help wanted. May be one of the 
Open source plugins can be contributed ?
In principle it is possible (speaking as the author of such plugin) to 
contribute the code.
However, today the plugin is distributed  under slighlty modified GPL license.
I need to understant what contribution means in terms of copyright issues and 
license type.

email me when you decide to include it in the release plans
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
I understand that Genady's plugin starting at version 1.5 requires a fee for 
commercial use.  For Eclipse to become a quality development environment it 
must (in my opinion) generate stubs for remote objects out of the box.  I've 
used Genady's plugin and it appears to do the job.  I'd be interested in the 
Eclipse team and Genady coming to some agreement on the licensing issues so 
that Genady's plug-in becomes part of the Eclipse offering.
I also agree the support for RMI is a missing component of Java suport in 
Eclipse.  I have used Genady's plugin and have been very pleased with it.  RMIC 
should however be an included part of eclipse's java supoort in my opinion.
Without external contributions this will very likely not happen for 3.0 
This bug enhancement should have a higher priority. RMI support should be
included of the box with Eclipse. Genady's plugin is nice, very nice, but it's a
nowadays not free for commercial use.
What the status on this feature? It has been assigned for quite some time...
*** Bug 74143 has been marked as a duplicate of this bug. ***
Me again... There does not seem to be any activaty on this one. What is the
status of this bug? It is assigned but will this be incorporated to Eclipse?
There is a solution for this.

Add a hook to when the workspace/project is cleaned or rebuild then run an Ant
target that compiles the RMI stubs/skels for you. Just did it and it works very
nice.

For more information(thanks to Darin Swanson for the reference):

"Take a look at the Eclipse help:

Workbench User Guide&gt;Getting Started&gt;Ant &amp; External tools tutorial&gt;Use cases
for Ant in Eclipse&gt;Ant buildfiles as project builders"


Make sure that you add the "Ant Build" AFTER the "Java Builder".
Still no intention to include support for this in JDT, sorry. It's a matter of available manpower in the team: the time needed to add and especially to maitain it. This is really a nice area for an external contribution, and we'd also be interested in integrating a solution in JDT.UI if somebody is ready to maintain it.
First, if you're using Java 5.0 you can do well without stubs generation.

More to the point - I obviously can't contribute the entire code of the RMI Plugin, but if anybody at Eclipse/IBM is serious about working with me on some smaller contribution, I'll be glad to help.
(We could be already past all this in 2002....)

Besides, the older code (version 1.4) is GPL-licensed, and I have no problem to relicense it under EPL if that will help anybody. I believe it still works with Eclispe 3.2 (maybe some minor modifications are required).

Genady
The GPL license is the big problem and is why I can't look at your code. So yes, EPL would be great. It would be great if you have the time to adapt your plugin so we can integrate this in JDT UI; it seems this is a wish of quite some users. I'll be glad to help.
Yes, the older version of the plug-in still works (perfectly for me) in 3.2 (I need to use Java 1.4).  From my perspective this is one hole that really should be addressed to make Eclipse a complete product.  So, if something can be worked out with Genaday it would be much appreciated.
Guys, unfortunately I didn't have much time working on a possible code contribution when we restarted this discussion. The old SF code requires much work to be brought to a state acceptable for a contribution.

I also think that since dynamic proxies introduction in Java 5.0, providing basic "rmic" functionality is no longer the no.1 issue for RMI developers. There are also various issues of using internal "sun" code which I'm not sure how well they will be accepted by the Eclipse committers (Martin?). 
So instead I focused on adding some new cool features to the RMI Plugin. And it's still free for personal use.

Genady
P.S. If you wish to try the new features, the new URL is http://www.genady.net/rmi/v20/ (check v2.0.2, now still in beta)
Usage of sun package is indeed a problem to be released in Eclipse.



As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>eclpise should generate stubs and skeletons for "RMI-classes"
Passing it on
RMI support isn't on the plan for 2.0.

This is an excellent plugin contribution opportunity. 

You can use the RMI ant tasks to help you with the stub generation.
deferring
Erich,
yet another contribution (work in progres):

Try this plugin: 
http://sourceforge.net/project/showfiles.php?group_id=53485

Release notes:
http://sourceforge.net/project/shownotes.php?release_id=90026

It runs JDK's rmic on all classes that implement java.rmi.Remote

(However it is not fully automatic yet)
*** Bug 16255 has been marked as a duplicate of this bug. ***
the plugin has significantly improved since my first post.
you may look at the source.
Are you going to re-implement it although a sepatate plugin is available ?

Genady
We are sitll in the planning pahse for 2.1 but it will very likely not be 
addressed in 2.x. That's why it is tagged as help wanted. May be one of the 
Open source plugins can be contributed ?
In principle it is possible (speaking as the author of such plugin) to 
contribute the code.
However, today the plugin is distributed  under slighlty modified GPL license.
I need to understant what contribution means in terms of copyright issues and 
license type.

email me when you decide to include it in the release plans
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
I understand that Genady's plugin starting at version 1.5 requires a fee for 
commercial use.  For Eclipse to become a quality development environment it 
must (in my opinion) generate stubs for remote objects out of the box.  I've 
used Genady's plugin and it appears to do the job.  I'd be interested in the 
Eclipse team and Genady coming to some agreement on the licensing issues so 
that Genady's plug-in becomes part of the Eclipse offering.
I also agree the support for RMI is a missing component of Java suport in 
Eclipse.  I have used Genady's plugin and have been very pleased with it.  RMIC 
should however be an included part of eclipse's java supoort in my opinion.
Without external contributions this will very likely not happen for 3.0 
This bug enhancement should have a higher priority. RMI support should be
included of the box with Eclipse. Genady's plugin is nice, very nice, but it's a
nowadays not free for commercial use.
What the status on this feature? It has been assigned for quite some time...
*** Bug 74143 has been marked as a duplicate of this bug. ***
Me again... There does not seem to be any activaty on this one. What is the
status of this bug? It is assigned but will this be incorporated to Eclipse?
There is a solution for this.

Add a hook to when the workspace/project is cleaned or rebuild then run an Ant
target that compiles the RMI stubs/skels for you. Just did it and it works very
nice.

For more information(thanks to Darin Swanson for the reference):

"Take a look at the Eclipse help:

Workbench User Guide&gt;Getting Started&gt;Ant &amp; External tools tutorial&gt;Use cases
for Ant in Eclipse&gt;Ant buildfiles as project builders"


Make sure that you add the "Ant Build" AFTER the "Java Builder".
Still no intention to include support for this in JDT, sorry. It's a matter of available manpower in the team: the time needed to add and especially to maitain it. This is really a nice area for an external contribution, and we'd also be interested in integrating a solution in JDT.UI if somebody is ready to maintain it.
First, if you're using Java 5.0 you can do well without stubs generation.

More to the point - I obviously can't contribute the entire code of the RMI Plugin, but if anybody at Eclipse/IBM is serious about working with me on some smaller contribution, I'll be glad to help.
(We could be already past all this in 2002....)

Besides, the older code (version 1.4) is GPL-licensed, and I have no problem to relicense it under EPL if that will help anybody. I believe it still works with Eclispe 3.2 (maybe some minor modifications are required).

Genady
The GPL license is the big problem and is why I can't look at your code. So yes, EPL would be great. It would be great if you have the time to adapt your plugin so we can integrate this in JDT UI; it seems this is a wish of quite some users. I'll be glad to help.
Yes, the older version of the plug-in still works (perfectly for me) in 3.2 (I need to use Java 1.4).  From my perspective this is one hole that really should be addressed to make Eclipse a complete product.  So, if something can be worked out with Genaday it would be much appreciated.
Guys, unfortunately I didn't have much time working on a possible code contribution when we restarted this discussion. The old SF code requires much work to be brought to a state acceptable for a contribution.

I also think that since dynamic proxies introduction in Java 5.0, providing basic "rmic" functionality is no longer the no.1 issue for RMI developers. There are also various issues of using internal "sun" code which I'm not sure how well they will be accepted by the Eclipse committers (Martin?). 
So instead I focused on adding some new cool features to the RMI Plugin. And it's still free for personal use.

Genady
P.S. If you wish to try the new features, the new URL is http://www.genady.net/rmi/v20/ (check v2.0.2, now still in beta)
Usage of sun package is indeed a problem to be released in Eclipse.



As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7880" />
    <CreationDate amount="2002-01-18 06:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Scrapbook page making IDE super slow</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="12">
      <Enumeration lines="18">
        <Lines>
          <Line>- waiting on &lt;0968B140&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at java.lang.Object.wait(Object.java:425)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable</Line>
          <Line>(PacketReceiveManager.java:144)</Line>
          <Line>at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand</Line>
          <Line>(PacketReceiveManager.java:79)</Line>
          <Line>- locked &lt;0968B140&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)</Line>
          <Line>at org.eclipse.jdi.internal.event.EventQueueImpl.remove</Line>
          <Line>(EventQueueImpl.java:55)</Line>
          <Line>at org.eclipse.jdi.internal.event.EventQueueImpl.remove</Line>
          <Line>(EventQueueImpl.java:40)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.EventDispatcher.run</Line>
          <Line>(EventDispatcher.java:150)</Line>
          <Line>at java.lang.Thread.run(Thread.java:539)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="11">
        <Lines>
          <Line>- waiting on &lt;0968B1F8&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketSendManager)</Line>
          <Line>at java.lang.Object.wait(Object.java:425)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePackets</Line>
          <Line>(PacketSendManager.java:72)</Line>
          <Line>- locked &lt;0968B1F8&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketSendManager)</Line>
          <Line>at org.eclipse.jdi.internal.connect.PacketSendManager.run</Line>
          <Line>(PacketSendManager.java:42)</Line>
          <Line>at java.lang.Thread.run(Thread.java:539)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- waiting on &lt;0968B2F8&gt; (a java.lang.Object)</Line>
          <Line>at java.lang.Object.wait(Object.java:425)</Line>
          <Line>at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext</Line>
          <Line>(InputStreamMonitor.java:113)</Line>
          <Line>- locked &lt;0968B2F8&gt; (a java.lang.Object)</Line>
          <Line>at org.eclipse.debug.internal.core.InputStreamMonitor.write</Line>
          <Line>(InputStreamMonitor.java:91)</Line>
          <Line>at org.eclipse.debug.internal.core.InputStreamMonitor$1.run</Line>
          <Line>(InputStreamMonitor.java:67)</Line>
          <Line>at java.lang.Thread.run(Thread.java:539)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;09578308&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;09578308&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;09578368&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;09578368&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;09501698&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;09501698&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;09227178&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;09227178&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;054CD3E8&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;054CD3E8&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- waiting on &lt;054A83A8&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run</Line>
          <Line>(AbstractReconciler.java:128)</Line>
          <Line>- locked &lt;054A83A8&gt; (a</Line>
          <Line>org.eclipse.jface.text.reconciler.DirtyRegionQueue)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="18">
        <Lines>
          <Line>- waiting on &lt;04960720&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at java.lang.Object.wait(Object.java:425)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable</Line>
          <Line>(PacketReceiveManager.java:144)</Line>
          <Line>at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand</Line>
          <Line>(PacketReceiveManager.java:79)</Line>
          <Line>- locked &lt;04960720&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)</Line>
          <Line>at org.eclipse.jdi.internal.event.EventQueueImpl.remove</Line>
          <Line>(EventQueueImpl.java:55)</Line>
          <Line>at org.eclipse.jdi.internal.event.EventQueueImpl.remove</Line>
          <Line>(EventQueueImpl.java:40)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.EventDispatcher.run</Line>
          <Line>(EventDispatcher.java:150)</Line>
          <Line>at java.lang.Thread.run(Thread.java:539)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- waiting on &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)</Line>
          <Line>at java.lang.Object.wait(Object.java:425)</Line>
          <Line>at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)</Line>
          <Line>- locked &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="52">
        <Lines>
          <Line>- waiting on &lt;0968B140&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable</Line>
          <Line>(PacketReceiveManager.java:146)</Line>
          <Line>at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply</Line>
          <Line>(PacketReceiveManager.java:109)</Line>
          <Line>- locked &lt;0968B140&gt; (a</Line>
          <Line>org.eclipse.jdi.internal.connect.PacketReceiveManager)</Line>
          <Line>at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply</Line>
          <Line>(PacketReceiveManager.java:130)</Line>
          <Line>at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:155)</Line>
          <Line>at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:173)</Line>
          <Line>at org.eclipse.jdi.internal.ThreadReferenceImpl.frames</Line>
          <Line>(ThreadReferenceImpl.java:174)</Line>
          <Line>at org.eclipse.jdi.internal.ThreadReferenceImpl.frames</Line>
          <Line>(ThreadReferenceImpl.java:158)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.JDIThread.getUnderlyingFrames</Line>
          <Line>(JDIThread.java:465)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.JDIThread.createAllStackFrames</Line>
          <Line>(JDIThread.java:442)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.JDIThread.computeStackFrames</Line>
          <Line>(JDIThread.java:364)</Line>
          <Line>- locked &lt;096923E0&gt; (a org.eclipse.jdt.internal.debug.core.JDIThread)</Line>
          <Line>at org.eclipse.jdt.internal.debug.core.JDIThread.getTopStackFrame</Line>
          <Line>(JDIThread.java:895)</Line>
          <Line>at org.eclipse.debug.internal.ui.views.LaunchView.findFrame</Line>
          <Line>(LaunchView.java:182)</Line>
          <Line>at org.eclipse.debug.internal.ui.views.LaunchView.initializeSelection</Line>
          <Line>(LaunchView.java:159)</Line>
          <Line>at org.eclipse.debug.internal.ui.views.LaunchView$1.run</Line>
          <Line>(LaunchView.java:125)</Line>
          <Line>at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)</Line>
          <Line>at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages</Line>
          <Line>(Synchronizer.java:93)</Line>
          <Line>- locked &lt;03043E58&gt; (a org.eclipse.swt.widgets.RunnableLock)</Line>
          <Line>at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Line>
          <Line>at org.eclipse.core.internal.boot.InternalBootLoader.run</Line>
          <Line>(InternalBootLoader.java:878)</Line>
          <Line>at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke</Line>
          <Line>(NativeMethodAccessorImpl.java:42)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.invoke</Line>
          <Line>(DelegatingMethodAccessorImpl.java:28)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:327)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:502)</Line>
          <Line>at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020115

As soon as I evaluate anything in a scrapbook page, the scrapbook process seems 
to take huge amount of cycles, preventing normal refresh of the UI. It seems 
like it is sleeping then timing out in the main thread or something like that.
Also, further build actions raise a HotSwap failure dialog (when only running 
process is the scrapbook page). 
I am on Win2000, running scrapbook against J9 or JDK1.4b3 (haven't seen any 
difference in behavior in between these wrt this issue).

Below is attached a thread activity dump while the IDE went to sleep.
========
Full thread dump Java HotSpot(TM) Client VM (1.4.0-beta3-b84 mixed mode):

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x17D80E10 nid=0x4c0 
waiting on monitor [1d76f000..1d76fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:144)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand
(PacketReceiveManager.java:79)
        - locked &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:55)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:40)
        at org.eclipse.jdt.internal.debug.core.EventDispatcher.run
(EventDispatcher.java:150)
        at java.lang.Thread.run(Thread.java:539)

"Packet Send Manager" prio=5 tid=0x17D9F9A8 nid=0x608 waiting on monitor 
[1d72f000..1d72fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B1F8&gt; (a 
org.eclipse.jdi.internal.connect.PacketSendManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePackets
(PacketSendManager.java:72)
        - locked &lt;0968B1F8&gt; (a 
org.eclipse.jdi.internal.connect.PacketSendManager)
        at org.eclipse.jdi.internal.connect.PacketSendManager.run
(PacketSendManager.java:42)
        at java.lang.Thread.run(Thread.java:539)

"Process Monitor" prio=5 tid=0x17E68210 nid=0x618 runnable [1d6af000..1d6afdb8]
        at java.lang.Win32Process.waitFor(Native Method)
        at org.eclipse.debug.internal.core.ProcessMonitor.monitorProcess
(ProcessMonitor.java:45)
        at org.eclipse.debug.internal.core.ProcessMonitor.access$0
(ProcessMonitor.java:42)
        at org.eclipse.debug.internal.core.ProcessMonitor$1.run
(ProcessMonitor.java:62)
        at java.lang.Thread.run(Thread.java:539)

"Input Stream Monitor" prio=5 tid=0x1696B640 nid=0x1d8 waiting on monitor 
[1d66f000..1d66fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B2F8&gt; (a java.lang.Object)
        at java.lang.Object.wait(Object.java:425)
        at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext
(InputStreamMonitor.java:113)
        - locked &lt;0968B2F8&gt; (a java.lang.Object)
        at org.eclipse.debug.internal.core.InputStreamMonitor.write
(InputStreamMonitor.java:91)
        at org.eclipse.debug.internal.core.InputStreamMonitor$1.run
(InputStreamMonitor.java:67)
        at java.lang.Thread.run(Thread.java:539)

"Output Stream Monitor" prio=5 tid=0x17DF2D58 nid=0x404 waiting on monitor 
[1d62f000..1d62fdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$0
(OutputStreamMonitor.java:112)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:152)
        at java.lang.Thread.run(Thread.java:539)

"Output Stream Monitor" prio=5 tid=0x16C3D958 nid=0x338 waiting on monitor 
[1d5ef000..1d5efdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$0
(OutputStreamMonitor.java:112)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:152)
        at java.lang.Thread.run(Thread.java:539)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16B3DEB0 
nid=0x5d0 runnable [1d0ff000..1d0ffdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09578308&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09578308&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x17AED008 
nid=0x668 runnable [1d06f000..1d06fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09578368&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09578368&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16B1FB18 
nid=0x468 runnable [1cd2f000..1cd2fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09501698&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09501698&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x168F3950 
nid=0x58c runnable [1ccef000..1ccefdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09227178&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09227178&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x168F3680 
nid=0x248 runnable [1cbaf000..1cbafdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;054CD3E8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;054CD3E8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16A72588 
nid=0x620 runnable [1cb2f000..1cb2fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;054A83A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;054A83A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x16ACDB18 nid=0x5c4 
waiting on monitor [18fff000..18fffdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;04960720&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:144)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand
(PacketReceiveManager.java:79)
        - locked &lt;04960720&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:55)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:40)
        at org.eclipse.jdt.internal.debug.core.EventDispatcher.run
(EventDispatcher.java:150)
        at java.lang.Thread.run(Thread.java:539)

"Java indexing" daemon prio=5 tid=0x1697C150 nid=0x49c waiting on monitor 
[1787f000..1787fdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java:255)
        at java.lang.Thread.run(Thread.java:539)

"Signal Dispatcher" daemon prio=10 tid=0x00900968 nid=0x62c waiting on monitor 
[0..0]

"Finalizer" daemon prio=9 tid=0x0023D400 nid=0x5ac waiting on monitor 
[165ff000..165ffdb8]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:114)
        - locked &lt;03D39890&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:130)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:162)

"Reference Handler" daemon prio=10 tid=0x008EADA0 nid=0x588 waiting on monitor 
[165bf000..165bfdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:425)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x00234A50 nid=0x5ec runnable [6f000..6fc3c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:146)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply
(PacketReceiveManager.java:109)
        - locked &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply
(PacketReceiveManager.java:130)
        at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:155)
        at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:173)
        at org.eclipse.jdi.internal.ThreadReferenceImpl.frames
(ThreadReferenceImpl.java:174)
        at org.eclipse.jdi.internal.ThreadReferenceImpl.frames
(ThreadReferenceImpl.java:158)
        at org.eclipse.jdt.internal.debug.core.JDIThread.getUnderlyingFrames
(JDIThread.java:465)
        at org.eclipse.jdt.internal.debug.core.JDIThread.createAllStackFrames
(JDIThread.java:442)
        at org.eclipse.jdt.internal.debug.core.JDIThread.computeStackFrames
(JDIThread.java:364)
        - locked &lt;096923E0&gt; (a org.eclipse.jdt.internal.debug.core.JDIThread)
        at org.eclipse.jdt.internal.debug.core.JDIThread.getTopStackFrame
(JDIThread.java:895)
        at org.eclipse.debug.internal.ui.views.LaunchView.findFrame
(LaunchView.java:182)
        at org.eclipse.debug.internal.ui.views.LaunchView.initializeSelection
(LaunchView.java:159)
        at org.eclipse.debug.internal.ui.views.LaunchView$1.run
(LaunchView.java:125)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:93)
        - locked &lt;03043E58&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:42)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:28)
        at java.lang.reflect.Method.invoke(Method.java:327)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
        at org.eclipse.core.launcher.Main.run(Main.java:502)
        at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)

"VM Thread" prio=5 tid=0x008B22D8 nid=0x1b8 runnable

"VM Periodic Task Thread" prio=10 tid=0x008EA5C0 nid=0x5c0 waiting on monitor
"Suspend Checker Thread" prio=10 tid=0x008B5F60 nid=0x5cc runnable
Unable to reproduce "slowness" problem. The "hot code replace failure" dialog 
is misleading, as the scrapbook can actually similuate HCR by using a new class 
loader for every evaluation. Thus, HCR works even for VMs that do not support 
HCR.
Fixed HCR failure notification. No longer reported for snippet editor VM.

Philippe, do you have a reproduceble case for the slowness?
I'm finding the scrapbook does not work well with JDK1.4 - the VM seems to 
terminate and abend fequently.
Cannot reproduce these symptoms anymore. The scrapbook page will still be 
problematic at some point (HCR failing because of the scrapbook page update).
So it might still be the same problem, but different behavior ?
Fixed. Hot code replace failure no longer reported for scrapbook VM. Slow 
problem is not reproduceable.
please verify (Jared)
Verified.</WithStack>
    <WithOutStack>Build 20020115

As soon as I evaluate anything in a scrapbook page, the scrapbook process seems 
to take huge amount of cycles, preventing normal refresh of the UI. It seems 
like it is sleeping then timing out in the main thread or something like that.
Also, further build actions raise a HotSwap failure dialog (when only running 
process is the scrapbook page). 
I am on Win2000, running scrapbook against J9 or JDK1.4b3 (haven't seen any 
difference in behavior in between these wrt this issue).

Below is attached a thread activity dump while the IDE went to sleep.
========
Full thread dump Java HotSpot(TM) Client VM (1.4.0-beta3-b84 mixed mode):

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x17D80E10 nid=0x4c0 
waiting on monitor [1d76f000..1d76fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:144)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand
(PacketReceiveManager.java:79)
        - locked &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:55)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:40)
        at org.eclipse.jdt.internal.debug.core.EventDispatcher.run
(EventDispatcher.java:150)
        at java.lang.Thread.run(Thread.java:539)

"Packet Send Manager" prio=5 tid=0x17D9F9A8 nid=0x608 waiting on monitor 
[1d72f000..1d72fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B1F8&gt; (a 
org.eclipse.jdi.internal.connect.PacketSendManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePackets
(PacketSendManager.java:72)
        - locked &lt;0968B1F8&gt; (a 
org.eclipse.jdi.internal.connect.PacketSendManager)
        at org.eclipse.jdi.internal.connect.PacketSendManager.run
(PacketSendManager.java:42)
        at java.lang.Thread.run(Thread.java:539)

"Process Monitor" prio=5 tid=0x17E68210 nid=0x618 runnable [1d6af000..1d6afdb8]
        at java.lang.Win32Process.waitFor(Native Method)
        at org.eclipse.debug.internal.core.ProcessMonitor.monitorProcess
(ProcessMonitor.java:45)
        at org.eclipse.debug.internal.core.ProcessMonitor.access$0
(ProcessMonitor.java:42)
        at org.eclipse.debug.internal.core.ProcessMonitor$1.run
(ProcessMonitor.java:62)
        at java.lang.Thread.run(Thread.java:539)

"Input Stream Monitor" prio=5 tid=0x1696B640 nid=0x1d8 waiting on monitor 
[1d66f000..1d66fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B2F8&gt; (a java.lang.Object)
        at java.lang.Object.wait(Object.java:425)
        at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext
(InputStreamMonitor.java:113)
        - locked &lt;0968B2F8&gt; (a java.lang.Object)
        at org.eclipse.debug.internal.core.InputStreamMonitor.write
(InputStreamMonitor.java:91)
        at org.eclipse.debug.internal.core.InputStreamMonitor$1.run
(InputStreamMonitor.java:67)
        at java.lang.Thread.run(Thread.java:539)

"Output Stream Monitor" prio=5 tid=0x17DF2D58 nid=0x404 waiting on monitor 
[1d62f000..1d62fdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$0
(OutputStreamMonitor.java:112)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:152)
        at java.lang.Thread.run(Thread.java:539)

"Output Stream Monitor" prio=5 tid=0x16C3D958 nid=0x338 waiting on monitor 
[1d5ef000..1d5efdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.read
(OutputStreamMonitor.java:132)
        at org.eclipse.debug.internal.core.OutputStreamMonitor.access$0
(OutputStreamMonitor.java:112)
        at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run
(OutputStreamMonitor.java:152)
        at java.lang.Thread.run(Thread.java:539)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16B3DEB0 
nid=0x5d0 runnable [1d0ff000..1d0ffdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09578308&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09578308&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x17AED008 
nid=0x668 runnable [1d06f000..1d06fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09578368&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09578368&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16B1FB18 
nid=0x468 runnable [1cd2f000..1cd2fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09501698&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09501698&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x168F3950 
nid=0x58c runnable [1ccef000..1ccefdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;09227178&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;09227178&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x168F3680 
nid=0x248 runnable [1cbaf000..1cbafdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;054CD3E8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;054CD3E8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x16A72588 
nid=0x620 runnable [1cb2f000..1cb2fdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;054A83A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)
        at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:128)
        - locked &lt;054A83A8&gt; (a 
org.eclipse.jface.text.reconciler.DirtyRegionQueue)

"org.eclipse.jdt.debug: JDI Event Dispatcher" prio=5 tid=0x16ACDB18 nid=0x5c4 
waiting on monitor [18fff000..18fffdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;04960720&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at java.lang.Object.wait(Object.java:425)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:144)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand
(PacketReceiveManager.java:79)
        - locked &lt;04960720&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:256)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:55)
        at org.eclipse.jdi.internal.event.EventQueueImpl.remove
(EventQueueImpl.java:40)
        at org.eclipse.jdt.internal.debug.core.EventDispatcher.run
(EventDispatcher.java:150)
        at java.lang.Thread.run(Thread.java:539)

"Java indexing" daemon prio=5 tid=0x1697C150 nid=0x49c waiting on monitor 
[1787f000..1787fdb8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java:255)
        at java.lang.Thread.run(Thread.java:539)

"Signal Dispatcher" daemon prio=10 tid=0x00900968 nid=0x62c waiting on monitor 
[0..0]

"Finalizer" daemon prio=9 tid=0x0023D400 nid=0x5ac waiting on monitor 
[165ff000..165ffdb8]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:114)
        - locked &lt;03D39890&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:130)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:162)

"Reference Handler" daemon prio=10 tid=0x008EADA0 nid=0x588 waiting on monitor 
[165bf000..165bfdb8]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:425)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked &lt;03D398F8&gt; (a java.lang.ref.Reference$Lock)

"main" prio=5 tid=0x00234A50 nid=0x5ec runnable [6f000..6fc3c]
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at 
org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable
(PacketReceiveManager.java:146)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply
(PacketReceiveManager.java:109)
        - locked &lt;0968B140&gt; (a 
org.eclipse.jdi.internal.connect.PacketReceiveManager)
        at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply
(PacketReceiveManager.java:130)
        at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:155)
        at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:173)
        at org.eclipse.jdi.internal.ThreadReferenceImpl.frames
(ThreadReferenceImpl.java:174)
        at org.eclipse.jdi.internal.ThreadReferenceImpl.frames
(ThreadReferenceImpl.java:158)
        at org.eclipse.jdt.internal.debug.core.JDIThread.getUnderlyingFrames
(JDIThread.java:465)
        at org.eclipse.jdt.internal.debug.core.JDIThread.createAllStackFrames
(JDIThread.java:442)
        at org.eclipse.jdt.internal.debug.core.JDIThread.computeStackFrames
(JDIThread.java:364)
        - locked &lt;096923E0&gt; (a org.eclipse.jdt.internal.debug.core.JDIThread)
        at org.eclipse.jdt.internal.debug.core.JDIThread.getTopStackFrame
(JDIThread.java:895)
        at org.eclipse.debug.internal.ui.views.LaunchView.findFrame
(LaunchView.java:182)
        at org.eclipse.debug.internal.ui.views.LaunchView.initializeSelection
(LaunchView.java:159)
        at org.eclipse.debug.internal.ui.views.LaunchView$1.run
(LaunchView.java:125)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:93)
        - locked &lt;03043E58&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:822)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:42)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:28)
        at java.lang.reflect.Method.invoke(Method.java:327)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
        at org.eclipse.core.launcher.Main.run(Main.java:502)
        at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)

"VM Thread" prio=5 tid=0x008B22D8 nid=0x1b8 runnable

"VM Periodic Task Thread" prio=10 tid=0x008EA5C0 nid=0x5c0 waiting on monitor
"Suspend Checker Thread" prio=10 tid=0x008B5F60 nid=0x5cc runnable
Unable to reproduce "slowness" problem. The "hot code replace failure" dialog 
is misleading, as the scrapbook can actually similuate HCR by using a new class 
loader for every evaluation. Thus, HCR works even for VMs that do not support 
HCR.
Fixed HCR failure notification. No longer reported for snippet editor VM.

Philippe, do you have a reproduceble case for the slowness?
I'm finding the scrapbook does not work well with JDK1.4 - the VM seems to 
terminate and abend fequently.
Cannot reproduce these symptoms anymore. The scrapbook page will still be 
problematic at some point (HCR failing because of the scrapbook page update).
So it might still be the same problem, but different behavior ?
Fixed. Hot code replace failure no longer reported for scrapbook VM. Slow 
problem is not reproduceable.
please verify (Jared)
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7881" />
    <CreationDate amount="2002-01-18 07:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IType.move() clobbers editing buffer of destination element</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="singlecomment">
        <location start="115" end="169" />
        <code>// Both exist, non-null and are ITypes obtained from</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="180" end="214" />
        <code>// working-copy ICompilationUnits</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>This was on WSAD 4.0.2 on a WinNT 4.0 (SP5) machine:

The call in question was like 
this:

IType classA, classB; 
// Both exist, non-null and are ITypes obtained from 
different 
// working-copy ICompilationUnits
classA.move(classB, null, null, false, 
null);

The call succeeds and classA is added as an inner class to
classB, but any user 
interaction with the editor for classB
after the call causes NullPointerExceptions to be 
thrown by
the Buffer.
This works for me in build 20020321.
Closing. Please re-open if you still have the problem in build &gt;= 20020321 and 
paste in the stack trace.</WithStack>
    <WithOutStack>This was on WSAD 4.0.2 on a WinNT 4.0 (SP5) machine:

The call in question was like 
this:

IType classA, classB; 
// Both exist, non-null and are ITypes obtained from 
different 
// working-copy ICompilationUnits
classA.move(classB, null, null, false, 
null);

The call succeeds and classA is added as an inner class to
classB, but any user 
interaction with the editor for classB
after the call causes NullPointerExceptions to be 
thrown by
the Buffer.
This works for me in build 20020321.
Closing. Please re-open if you still have the problem in build &gt;= 20020321 and 
paste in the stack trace.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7882" />
    <CreationDate amount="2002-01-18 08:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Rename method to Constructor Name: Warning shows twice</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When renaming a method, I enter the class name, and press Next.
I get warning that the method will have a constructor name, but I get this same 
warning twice.
fixed for 20020212
verified in 20020212-I</WithStack>
    <WithOutStack>When renaming a method, I enter the class name, and press Next.
I get warning that the method will have a constructor name, but I get this same 
warning twice.
fixed for 20020212
verified in 20020212-I</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7883" />
    <CreationDate amount="2002-01-18 09:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default "open a new perspective" preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The default preferences under "Workbench-&gt;Preferences-&gt;Workbench-&gt;Open a new
perspective" should be:

In the same window - SELECTED
Reuse Perspectives with same input - OFF

User feedback (on Eclipse corner) has been very negative about the defaults as
they are. The behavior with "in a new window" and "reusing perspectives" (the
current defaults) is often inconvenient and unintuitive.

Every developer I've spoken with sets their preferences to the above (same
window, don't reuse perspectives).
I don't think this applies anymore.

Move to close.
Closing.</WithStack>
    <WithOutStack>The default preferences under "Workbench-&gt;Preferences-&gt;Workbench-&gt;Open a new
perspective" should be:

In the same window - SELECTED
Reuse Perspectives with same input - OFF

User feedback (on Eclipse corner) has been very negative about the defaults as
they are. The behavior with "in a new window" and "reusing perspectives" (the
current defaults) is often inconvenient and unintuitive.

Every developer I've spoken with sets their preferences to the above (same
window, don't reuse perspectives).
I don't think this applies anymore.

Move to close.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7884" />
    <CreationDate amount="2002-01-18 09:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Projects expanded in the navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. I have the Java, Debug, and Team perspectives open.</Line>
          <Line>2. Go to the team perspective and make sure all projects in the Navigator are</Line>
          <Line>collapsed.</Line>
          <Line>3. Switch to the Java perspective.</Line>
          <Line>4. Close Eclipse.</Line>
          <Line>5. Relaunch Eclipse (startup in the Java perspective)</Line>
          <Line>6. Switch to the Team perspective.</Line>
          <Line>7. Many of the projects are expanded completely.</Line>
          <Line>Can't reproduce. The navigator belongs to UI, we don't do anything special to</Line>
          <Line>it other than include it in our perspective. Moving to UI for possible</Line>
          <Line>investigation.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Every time I bring up the Team perspective for the first time, the projects that
I had previously selected are completely expanded (they were not expanded at all
when the workbench shut down).
I don't understand. Expanded in what view? You talk about shutting down, do I 
have to do this? Please provide steps.
Sorry.

1. I have the Java, Debug, and Team perspectives open.
2. Go to the team perspective and make sure all projects in the Navigator are
collapsed.
3. Switch to the Java perspective.
4. Close Eclipse.
5. Relaunch Eclipse (startup in the Java perspective) 
6. Switch to the Team perspective.
7. Many of the projects are expanded completely.
Can't reproduce. The navigator belongs to UI, we don't do anything special to 
it other than include it in our perspective. Moving to UI for possible 
investigation.

More info needed: Jared, what are your perspective settings? (i.e. reuse with 
same input? Open in new window? etc) Do you have navigator tracks open editors 
turned on or off?
(applicable) workbench preferences:
OFF - Link Navigator selection to active editor
Open a new perspective
 ON - In the same window
OFF - Reuse Perspectives with same input
New Project Options
ON - Do not switch
Obsolete - Team perspective is gone. If you ever see this type of problem again 
please reopen this defect.</WithStack>
    <WithOutStack>Every time I bring up the Team perspective for the first time, the projects that
I had previously selected are completely expanded (they were not expanded at all
when the workbench shut down).
I don't understand. Expanded in what view? You talk about shutting down, do I 
have to do this? Please provide steps.
Sorry.

1. I have the Java, Debug, and Team perspectives open.
2. Go to the team perspective and make sure all projects in the Navigator are
collapsed.
3. Switch to the Java perspective.
4. Close Eclipse.
5. Relaunch Eclipse (startup in the Java perspective) 
6. Switch to the Team perspective.
7. Many of the projects are expanded completely.
Can't reproduce. The navigator belongs to UI, we don't do anything special to 
it other than include it in our perspective. Moving to UI for possible 
investigation.

More info needed: Jared, what are your perspective settings? (i.e. reuse with 
same input? Open in new window? etc) Do you have navigator tracks open editors 
turned on or off?
(applicable) workbench preferences:
OFF - Link Navigator selection to active editor
Open a new perspective
 ON - In the same window
OFF - Reuse Perspectives with same input
New Project Options
ON - Do not switch
Obsolete - Team perspective is gone. If you ever see this type of problem again 
please reopen this defect.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7885" />
    <CreationDate amount="2002-01-18 09:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error occurs if "cvs removed" file is recreated before sync</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Load a project from a repo</Line>
          <Line>2. For a shared file in the project, choose CVS/Delete from the context menu</Line>
          <Line>3. Recreate the file locally</Line>
          <Line>4. Perform a sync</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The scenario is as follows.

1. Load a project from a repo
2. For a shared file in the project, choose CVS/Delete from the context menu
3. Recreate the file locally
4. Perform a sync

An error occurs and the sync view is not shown. Below are the messages from the 
server. We will need to handle this case somehow.

E cvs server: Updating .
E cvs server: a.txt should be removed and is still there
M R a.txt
This condition will be reported to the user as an error during synchronization.

However, a better approach would be to detect the addition of a "cvs deleted" 
file using resource listeners and perform the proper updating of the sync info 
at that time. 

A second case to consider is that of a "cvs added" file that has been deleted 
locally before a sync.
Both these cases are now handled properly</WithStack>
    <WithOutStack>The scenario is as follows.

1. Load a project from a repo
2. For a shared file in the project, choose CVS/Delete from the context menu
3. Recreate the file locally
4. Perform a sync

An error occurs and the sync view is not shown. Below are the messages from the 
server. We will need to handle this case somehow.

E cvs server: Updating .
E cvs server: a.txt should be removed and is still there
M R a.txt
This condition will be reported to the user as an error during synchronization.

However, a better approach would be to detect the addition of a "cvs deleted" 
file using resource listeners and perform the proper updating of the sync info 
at that time. 

A second case to consider is that of a "cvs added" file that has been deleted 
locally before a sync.
Both these cases are now handled properly</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7886" />
    <CreationDate amount="2002-01-18 09:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Mnemonic for Convert to &amp;PDE Project conflicts with Open &amp;Perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020115

In the Navigator's context menu, the mnemonic for Convert to &amp;PDE Project 
conflicts with Open &amp;Perspective.
They both use P.

Since it is an infrequently used feature, and may easily conflict with other 
contributions, I recommend removing the mnemonic.

See bug 3755 for context.
Fixed.</WithStack>
    <WithOutStack>Build 20020115

In the Navigator's context menu, the mnemonic for Convert to &amp;PDE Project 
conflicts with Open &amp;Perspective.
They both use P.

Since it is an infrequently used feature, and may easily conflict with other 
contributions, I recommend removing the mnemonic.

See bug 3755 for context.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7887" />
    <CreationDate amount="2002-01-18 10:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>shortkey for code formater</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hi, Eclipse provides the "format" function like in Visual Age with more 
options. But the shortkey &lt;ctrl&gt; + W (as it is in VAJ) doesn't work. I would 
really like (as user) if that was included into Eclipse.

Thanks, Thierry.

As well, it would be very great if there was a shortkey editor.
Moving to JDT for consideration
in eclipse it's always been ctrl+o
ctrl+w is taken by 'manage markers' menu

ok to close the report?

there is now short cut ctrl-o
closing</WithStack>
    <WithOutStack>Hi, Eclipse provides the "format" function like in Visual Age with more 
options. But the shortkey &lt;ctrl&gt; + W (as it is in VAJ) doesn't work. I would 
really like (as user) if that was included into Eclipse.

Thanks, Thierry.

As well, it would be very great if there was a shortkey editor.
Moving to JDT for consideration
in eclipse it's always been ctrl+o
ctrl+w is taken by 'manage markers' menu

ok to close the report?

there is now short cut ctrl-o
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7888" />
    <CreationDate amount="2002-01-18 11:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="1.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>SWT: *NEED* a way to scroll the StyledText widget hor &amp; ver by a specified # of pixels</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>First, this is a strategic issue for us. There are several critical features
of our application that cannot be implemented with these enhancements.

We need public methods for scrolling the StyledText by a specified number
of pixels. Currently there are public methods that allow us to scroll to
the nearest line and character but this isn't precise enough for our
application.

There already is a method for pixel-based horizontal scrolling, scrollHorizontal
() but it's not public. The support for pixel-based vertical scolling is already
in the class but the class needs a public scrollVertical(int numVerPixels) 
signature.

Note that I set the Version to 1.0. We'll take whatever version this is 
available with this addition. As I noted earlier this is a strategic issue
for us.

Michael Duchesneau
Sr. Software Engineer
Rational Software
aren't public.
Suggestion is to add API for setHorizontalPixel, setTopPixel that scroll *to* 
the specified pixel position, not by the number of pixels as suggested.  We 
already have getHorizontalPixel and getTopPixel. We also have the line 
based/character based setTopIndex and setHorizontalIndex so the above names and 
behavior would be consistent with existing API.  Miked - we assume this will be 
sufficient for you - right?

Yes, scrolling *to* a specified pixel is sufficient. Actually, it's what I 
need! I wasn't thinking clearly when I requested methods for scrolling by a 
specified number of pixels.

Thanks,
Michael Duchesneau
Rational Software
Fixed as proposed by Lynne Kues above. Will be in build &gt; 20020121.</WithStack>
    <WithOutStack>First, this is a strategic issue for us. There are several critical features
of our application that cannot be implemented with these enhancements.

We need public methods for scrolling the StyledText by a specified number
of pixels. Currently there are public methods that allow us to scroll to
the nearest line and character but this isn't precise enough for our
application.

There already is a method for pixel-based horizontal scrolling, scrollHorizontal
() but it's not public. The support for pixel-based vertical scolling is already
in the class but the class needs a public scrollVertical(int numVerPixels) 
signature.

Note that I set the Version to 1.0. We'll take whatever version this is 
available with this addition. As I noted earlier this is a strategic issue
for us.

Michael Duchesneau
Sr. Software Engineer
Rational Software
aren't public.
Suggestion is to add API for setHorizontalPixel, setTopPixel that scroll *to* 
the specified pixel position, not by the number of pixels as suggested.  We 
already have getHorizontalPixel and getTopPixel. We also have the line 
based/character based setTopIndex and setHorizontalIndex so the above names and 
behavior would be consistent with existing API.  Miked - we assume this will be 
sufficient for you - right?

Yes, scrolling *to* a specified pixel is sufficient. Actually, it's what I 
need! I wasn't thinking clearly when I requested methods for scrolling by a 
specified number of pixels.

Thanks,
Michael Duchesneau
Rational Software
Fixed as proposed by Lynne Kues above. Will be in build &gt; 20020121.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7889" />
    <CreationDate amount="2002-01-18 11:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Contributions] Need a general addition of menu entries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>We need to define a standard set of group markers for addition into menus on 
top of the additions marker we currently have so that plug-in developers have a 
general place to add menu items that logically fit in better. This approach 
should make sense for all menus and not be view specific.
Consider doing this as a post 2.0 enhancement. 
Reopen to investigate
Assigning to component owner
PW

These will not be worked on.  Please re-open if you feel the community should get a crack at them.

PW</WithStack>
    <WithOutStack>We need to define a standard set of group markers for addition into menus on 
top of the additions marker we currently have so that plug-in developers have a 
general place to add menu items that logically fit in better. This approach 
should make sense for all menus and not be view specific.
Consider doing this as a post 2.0 enhancement. 
Reopen to investigate
Assigning to component owner
PW

These will not be worked on.  Please re-open if you feel the community should get a crack at them.

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7890" />
    <CreationDate amount="2002-01-18 11:31:00 -0500" />
    <DupId amount="5693" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>The wizard window is behind the other panel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I was using the WSAD 4.02 on WindowsNT 4.0 and found this bug.
if you unduck the console window, drag it out and place in a different loation, 
and start any wizard, the wizard window will get the focus and waiting you 
action, but it is behind the other panel, you cannot see it and put action on 
it. The whole tools just like hung. not response at all. The only way to get 
out of it is kill the WSAD process.
This is an SWT bug that got fixed in the 2.0 stream (not sure whether it made 
it in the 1.0 roll-up).

There are two bugs in this area.  One was fixed in 1.0 and the other one I've 
been working on (on and off) for a couple of months now.  I believe is to 
caused by a Windows bug in (what else) setParent but I've been unable to track 
it down.  It only happens when views are torn off.

*** This bug has been marked as a duplicate of 5693 ***
*** Bug 8752 has been marked as a duplicate of this bug. ***
*** Bug 2939 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I was using the WSAD 4.02 on WindowsNT 4.0 and found this bug.
if you unduck the console window, drag it out and place in a different loation, 
and start any wizard, the wizard window will get the focus and waiting you 
action, but it is behind the other panel, you cannot see it and put action on 
it. The whole tools just like hung. not response at all. The only way to get 
out of it is kill the WSAD process.
This is an SWT bug that got fixed in the 2.0 stream (not sure whether it made 
it in the 1.0 roll-up).

There are two bugs in this area.  One was fixed in 1.0 and the other one I've 
been working on (on and off) for a couple of months now.  I believe is to 
caused by a Windows bug in (what else) setParent but I've been unable to track 
it down.  It only happens when views are torn off.

*** This bug has been marked as a duplicate of 5693 ***
*** Bug 8752 has been marked as a duplicate of this bug. ***
*** Bug 2939 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7891" />
    <CreationDate amount="2002-01-18 12:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Open on Selection should work on type names even if they can't be resolved</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020109

The other day I ran into a case where it couldn't resolve the hierarchy, and 
therefore couldn't do F3 or F4 when I had selected a type name.
It would be good to do the VA/Java-style hack where if you have a capitalized 
word selected, it assumes it's a type name even if it can't be resolved, and 
does the same as Open Type on the name.

It would be deluxe if this worked in the console too (if it doesn't already).

See also bug 7144.
I like this. UI keeps the AllTypes cache so we should do this in the UI.

The console doesn't use code resolve and is using search so this should work.


Nick,
Can you give me a simple test-case? Even if I remove all imports from a CU, I
can still open the referenced types. This works for javadocs as well...

I couldn't reproduce it in 20020124.
Seems to have been fixed by 7144.
I didn't try the console.

console works for me as well. I just printed out some class names and did F3. It
works even if no selection is made (caret only).</WithStack>
    <WithOutStack>Build 20020109

The other day I ran into a case where it couldn't resolve the hierarchy, and 
therefore couldn't do F3 or F4 when I had selected a type name.
It would be good to do the VA/Java-style hack where if you have a capitalized 
word selected, it assumes it's a type name even if it can't be resolved, and 
does the same as Open Type on the name.

It would be deluxe if this worked in the console too (if it doesn't already).

See also bug 7144.
I like this. UI keeps the AllTypes cache so we should do this in the UI.

The console doesn't use code resolve and is using search so this should work.


Nick,
Can you give me a simple test-case? Even if I remove all imports from a CU, I
can still open the referenced types. This works for javadocs as well...

I couldn't reproduce it in 20020124.
Seems to have been fixed by 7144.
I didn't try the console.

console works for me as well. I just printed out some class names and did F3. It
works even if no selection is made (caret only).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7892" />
    <CreationDate amount="2002-01-18 12:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>extract method: incorrect on nested loops (compile errors)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="0" end="117" />
        <code>public class A{
	void f(){
		for (int i = 0; i &lt; 10; i++) {
			/*[*/for (int j = 0; j &lt; 10; j++) {
			}/*]*/
		}
	}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="138" end="216" />
        <code>protected int dd() {
		/*[*/for (int j = 0; j &lt; 10; j++) {
		}
		return j;
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>public class A{
	void f(){
		for (int i = 0; i &lt; 10; i++) {
			/*[*/for (int j = 0; j &lt; 10; j++) {
			}/*]*/
		}
	}
}

the new method is:
	protected int dd() {
		/*[*/for (int j = 0; j &lt; 10; j++) {
		}
		return j;
	}

which results in a compile error
*** Bug 6620 has been marked as a duplicate of this bug. ***
Fixed in build &gt; iX-20020115
Verified.</WithStack>
    <WithOutStack>public class A{
	void f(){
		for (int i = 0; i &lt; 10; i++) {
			/*[*/for (int j = 0; j &lt; 10; j++) {
			}/*]*/
		}
	}
}

the new method is:
	protected int dd() {
		/*[*/for (int j = 0; j &lt; 10; j++) {
		}
		return j;
	}

which results in a compile error
*** Bug 6620 has been marked as a duplicate of this bug. ***
Fixed in build &gt; iX-20020115
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7893" />
    <CreationDate amount="2002-01-18 13:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Importing CVS to Navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Why is it that you have to import an entire project out of CVS?  Under our 
projects in CVS we may have source code and resources such as images, jsp's, 
html, etc...  If I'm trying to create a Web Application based on my project in 
CVS, I'd want to import the source code into the "New Web App"/source folder, 
while importing all resources under the "New Web App"/webApplication folder.  
If I this is not possible, why not be able to import this project, then create 
the new Web Application and be able to tie the source folder to the imported 
projects source folder, and tie the webApplication folder to the imported 
projects resources.
Jeremy,

Are you sure this is the right component? Based on your question, the more 
appropriate component would be VCM in the Product project (they handle CVS and 
other repositories).
you are correct.  i was under the assumption that CVS was a component, 
separated from the core.  i apologize</WithStack>
    <WithOutStack>Why is it that you have to import an entire project out of CVS?  Under our 
projects in CVS we may have source code and resources such as images, jsp's, 
html, etc...  If I'm trying to create a Web Application based on my project in 
CVS, I'd want to import the source code into the "New Web App"/source folder, 
while importing all resources under the "New Web App"/webApplication folder.  
If I this is not possible, why not be able to import this project, then create 
the new Web Application and be able to tie the source folder to the imported 
projects source folder, and tie the webApplication folder to the imported 
projects resources.
Jeremy,

Are you sure this is the right component? Based on your question, the more 
appropriate component would be VCM in the Product project (they handle CVS and 
other repositories).
you are correct.  i was under the assumption that CVS was a component, 
separated from the core.  i apologize</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7894" />
    <CreationDate amount="2002-01-18 14:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Error loading resource from stream</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341205527">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1887)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)</Frame>
          <Frame depth="6">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)</Frame>
          <Frame depth="7">org.eclipse.vcm.internal.ui.ResourceLoader.loadResources(ResourceLoader.java:372)</Frame>
          <Frame depth="8">org.eclipse.vcm.internal.ui.actions.ReplaceWithAction.run(ReplaceWithAction.java:75)</Frame>
          <Frame depth="9">org.eclipse.vcm.internal.ui.actions.ReplaceWithTeamStreamAction.run(ReplaceWithTeamStreamAction.java:59)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)</Frame>
          <Frame depth="11">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.run(Workbench.java:805)</Frame>
          <Frame depth="21">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)</Frame>
          <Frame depth="22">org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)</Frame>
          <Frame depth="23">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.main(Main.java:362)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20020115
I had some local changes to a class.
I decided to replace with stream contents and say "yes" to overwrite the local 
changes.
The operation began, and finished, but I got the walkback below just as the 
dialog was closing.
The class does appear to have been correctly replaced from the stream, but the 
editor that it was in was not updated (it has a solid grey background, so it 
looks like it was in the process of being updated after the operation).
Closing the editor and reopening fixes the editor, so it looks like there was 
no harm done, just disconcerting to get the walkback.

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Fri Jan 18 13:47:51 EST 2002
4 org.eclipse.ui 0 Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)
	at org.eclipse.swt.SWT.error(SWT.java:1887)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java(Compiled Code))
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.vcm.internal.ui.ResourceLoader.loadResources
(ResourceLoader.java:372)
	at org.eclipse.vcm.internal.ui.actions.ReplaceWithAction.run
(ReplaceWithAction.java:75)
	at org.eclipse.vcm.internal.ui.actions.ReplaceWithTeamStreamAction.run
(ReplaceWithTeamStreamAction.java:59)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:204)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:805)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:878)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)
Actually, there was more harm done than I thought. Please see bug:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=7895
which I noticed immediately after entering this PR.
*** Bug 7618 has been marked as a duplicate of this bug. ***
Seems to work in Team 2.0 M3</WithStack>
    <WithOutStack>20020115
I had some local changes to a class.
I decided to replace with stream contents and say "yes" to overwrite the local 
changes.
The operation began, and finished, but I got the walkback below just as the 
dialog was closing.
The class does appear to have been correctly replaced from the stream, but the 
editor that it was in was not updated (it has a solid grey background, so it 
looks like it was in the process of being updated after the operation).
Closing the editor and reopening fixes the editor, so it looks like there was 
no harm done, just disconcerting to get the walkback.

1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Fri Jan 18 13:47:51 EST 2002
4 org.eclipse.ui 0 Failed to execute runnable 
(java.lang.IllegalArgumentException: Invalid range argument)

Actually, there was more harm done than I thought. Please see bug:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=7895
which I noticed immediately after entering this PR.
*** Bug 7618 has been marked as a duplicate of this bug. ***
Seems to work in Team 2.0 M3</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7895" />
    <CreationDate amount="2002-01-18 14:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Wierd state: Project not built because inconsistent.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- There's an error marked against the project you were working in</Line>
          <Line>- The error message in the task view says the following:</Line>
          <Line>"The project was not built since it is inconsistent. Refresh this project</Line>
          <Line>then rebuild it"</Line>
          <Line>- You try to refresh from local and then rebuild, but the error does not go away</Line>
          <Line>- You try exiting eclipse and restarting/rebuilding, but the error still stays</Line>
          <Line>- The only way we have discovered to get rid of the error and get out of the</Line>
          <Line>wierd state is to delete the bin directory and rebuild.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20020115
This is the second time I have found myself in this state, and I know that 
Veronika got into this state once also. Neither of us had ever seen this state 
before 20020115. Originally, we were not sure what caused the state, but I 
think now that it may have something to do with loading from stream.
Please see Bug:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=7894
which happened immediately before I entered this state for the second time.

The symptoms of the wierd state are:
- There's an error marked against the project you were working in
- The error message in the task view says the following:
  "The project was not built since it is inconsistent. Refresh this project 
then rebuild it"
- You try to refresh from local and then rebuild, but the error does not go away
- You try exiting eclipse and restarting/rebuilding, but the error still stays
- The only way we have discovered to get rid of the error and get out of the 
wierd state is to delete the bin directory and rebuild.

I looked to see if anyone else had reported this, and the closest Bug report I 
can see is the following, but it may not be related:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=5552
Some notes from Tim Francis indicating this is not a VCM bug.
Have emailed JDT-Core.  Moving to JDT-Core.

From Tim:

 My pop-up action, which I've been testing
with the last stable build (20011219) consistently and repeatedly causes
the problem you report in bugzilla.  On some projects it works fine, but I
have one project for which the problem is 100% reproducible, without using
CMVC.  The action in question simply locates a source jar, unzips it,
modifies the project's classpath, refreshes and rebuilds.  Once the project
gets into this state, I can't fix it - contrary to the message text,
refreshing and rebuilding do not help.  If you need a reproducible testcase
to help you narrow the problem down, let me know and I'll be happy to send
it to you.

I did do some investigation myself, and the error appears to be emitted
from org.eclipse.jdt.internal.core.newbuilder.JavaBuilder, in the build
method.  There are two catch blocks there, for CoreException and
ImageBuilderInternalException, and both add the message we're both seeing
to the task list.  This makes me think the problem is much more generic
than the message implies, it's really just a catch-all "the Java builder
had problems" message, and unfortunately I don't see any logging of what
that root problem is.

Tim - did you try going to the file system, deleting your project's "bin" 
directory, and rebuilding the project? This hack seems to work for both 
Veronika and I. (and it has worked twice for me).
Anyhow, the hack lets you keep your workspace.
FYI, this problem still exists in 20020125. I just got it again. Seems to 
happen when I make a change to the "COM" class in SWT. Then I delete my SWT 
project's 'bin' directory in my workspace, and I can recompile the project, and 
all is well again. KJ, if you want me to run with any debug code, or call you 
when it happens again, please let me know.
Please let me know if this still happens with a new build (from the Integration 
build 20020129 on).
Something to keep in mind. If you have explorers or dos boxes open, whose 
current directories are inside the bin directory, then full builds will fail 
when they try to wipe the bin directory.

Also please enable builder tracing... follow the instructions below to set:

org.eclipse.jdt.core/debug/builder=true

All other subtraces should be set to false.

---------------------

From build 20011107 on, we have released a ".options" file inside our 
plugin which can be used as a template for activating traces inside the 
JDT/Core area. It is using the generic Eclipse debug mode which means that 
you need to perform the following steps before seeing the JDT/Core traces:

Copy our .options template file located at 
&lt;installLocation&gt;/plugins/org.eclipse.jdt.core/.options up to the 
&lt;installLocation&gt; next to the Eclipse.exe file.
Start Eclipse in debug mode using the -debug extra command line argument.

Example of an JDT/Core .options file:

org.eclipse.jdt.core/debug=true
org.eclipse.jdt.core/debug/indexmanager=true
org.eclipse.jdt.core/debug/compiler=true
org.eclipse.jdt.core/debug/javamodel=true
org.eclipse.jdt.core/debug/javadelta=true
org.eclipse.jdt.core/debug/hierarchy=true
org.eclipse.jdt.core/debug/builder=true

Debug tracing the JDT/Core can lead to a lot of messages to be dumped out, 
therefore you can further edit the .options file in order to turn off 
uninteresting traces. Here is what can be selectively chosen:

org.eclipse.jdt.core/debug/indexmanager=true
 Enable tracing of background indexing process. It will indicate all 
interactions with the indexer, either when modifying the index files and 
or performing queries in them.

org.eclipse.jdt.core/debug/compiler=true
 Enable tracing of all actual Java compiler activity.

org.eclipse.jdt.core/debug/javamodel=true
Enable tracing of the Java Model lazy populating. It will indicate when 
actually opening/closing a Java element.

org.eclipse.jdt.core/debug/javadelta=true
Enable tracing of the Java element deltas which are fired to listeners.

org.eclipse.jdt.core/debug/hierarchy=true
Enable tracing of the type hierarchy computation.

org.eclipse.jdt.core/debug/builder=true
Enable tracing of the Java builder activity. The Java builder is driving 
the incremental recompilation aspects, and this trace can be used to 
understand why a given file actually got triggered for recompilation. Note 
that this trace is not yet fully implemented given the Java builder is 
under rework. 
The Java debug options gave me no additional info - but I tried the 20020129 
integration drop, and it seems to have fixed the problem.  I now get an error 
in the project that "This resource "(a non-java file in my source directory)" 
is a duplicate and was not copied to the output folder".

This is much better than the previous error - mostly because it's just an 
error, but doesn't appear to stop the rest of the build, but also because it 
clearly identifies the problem, so I can now go to the root cause and fix it 
properly.  My suspicion is that this was the problem all along, and I'm just 
getting a much better error message now.  Anyway, thanks for your help.
You're right Tim, duplicates (java files as well as other resources) were not 
detected before 0129.

The catch all error is really only intended to catch the case of an explorer or 
dos-box with a current directory inside the output folder... a refresh + 
rebuild works in the cases we have tested. All other CoreExceptions are 
internal bugs which we need to track down &amp; fix.
Closing.</WithStack>
    <WithOutStack>20020115
This is the second time I have found myself in this state, and I know that 
Veronika got into this state once also. Neither of us had ever seen this state 
before 20020115. Originally, we were not sure what caused the state, but I 
think now that it may have something to do with loading from stream.
Please see Bug:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=7894
which happened immediately before I entered this state for the second time.

The symptoms of the wierd state are:
- There's an error marked against the project you were working in
- The error message in the task view says the following:
  "The project was not built since it is inconsistent. Refresh this project 
then rebuild it"
- You try to refresh from local and then rebuild, but the error does not go away
- You try exiting eclipse and restarting/rebuilding, but the error still stays
- The only way we have discovered to get rid of the error and get out of the 
wierd state is to delete the bin directory and rebuild.

I looked to see if anyone else had reported this, and the closest Bug report I 
can see is the following, but it may not be related:
   http://dev.eclipse.org/bugs/show_bug.cgi?id=5552
Some notes from Tim Francis indicating this is not a VCM bug.
Have emailed JDT-Core.  Moving to JDT-Core.

From Tim:

 My pop-up action, which I've been testing
with the last stable build (20011219) consistently and repeatedly causes
the problem you report in bugzilla.  On some projects it works fine, but I
have one project for which the problem is 100% reproducible, without using
CMVC.  The action in question simply locates a source jar, unzips it,
modifies the project's classpath, refreshes and rebuilds.  Once the project
gets into this state, I can't fix it - contrary to the message text,
refreshing and rebuilding do not help.  If you need a reproducible testcase
to help you narrow the problem down, let me know and I'll be happy to send
it to you.

I did do some investigation myself, and the error appears to be emitted
from org.eclipse.jdt.internal.core.newbuilder.JavaBuilder, in the build
method.  There are two catch blocks there, for CoreException and
ImageBuilderInternalException, and both add the message we're both seeing
to the task list.  This makes me think the problem is much more generic
than the message implies, it's really just a catch-all "the Java builder
had problems" message, and unfortunately I don't see any logging of what
that root problem is.

Tim - did you try going to the file system, deleting your project's "bin" 
directory, and rebuilding the project? This hack seems to work for both 
Veronika and I. (and it has worked twice for me).
Anyhow, the hack lets you keep your workspace.
FYI, this problem still exists in 20020125. I just got it again. Seems to 
happen when I make a change to the "COM" class in SWT. Then I delete my SWT 
project's 'bin' directory in my workspace, and I can recompile the project, and 
all is well again. KJ, if you want me to run with any debug code, or call you 
when it happens again, please let me know.
Please let me know if this still happens with a new build (from the Integration 
build 20020129 on).
Something to keep in mind. If you have explorers or dos boxes open, whose 
current directories are inside the bin directory, then full builds will fail 
when they try to wipe the bin directory.

Also please enable builder tracing... follow the instructions below to set:

org.eclipse.jdt.core/debug/builder=true

All other subtraces should be set to false.

---------------------

From build 20011107 on, we have released a ".options" file inside our 
plugin which can be used as a template for activating traces inside the 
JDT/Core area. It is using the generic Eclipse debug mode which means that 
you need to perform the following steps before seeing the JDT/Core traces:

Copy our .options template file located at 
&lt;installLocation&gt;/plugins/org.eclipse.jdt.core/.options up to the 
&lt;installLocation&gt; next to the Eclipse.exe file.
Start Eclipse in debug mode using the -debug extra command line argument.

Example of an JDT/Core .options file:

org.eclipse.jdt.core/debug=true
org.eclipse.jdt.core/debug/indexmanager=true
org.eclipse.jdt.core/debug/compiler=true
org.eclipse.jdt.core/debug/javamodel=true
org.eclipse.jdt.core/debug/javadelta=true
org.eclipse.jdt.core/debug/hierarchy=true
org.eclipse.jdt.core/debug/builder=true

Debug tracing the JDT/Core can lead to a lot of messages to be dumped out, 
therefore you can further edit the .options file in order to turn off 
uninteresting traces. Here is what can be selectively chosen:

org.eclipse.jdt.core/debug/indexmanager=true
 Enable tracing of background indexing process. It will indicate all 
interactions with the indexer, either when modifying the index files and 
or performing queries in them.

org.eclipse.jdt.core/debug/compiler=true
 Enable tracing of all actual Java compiler activity.

org.eclipse.jdt.core/debug/javamodel=true
Enable tracing of the Java Model lazy populating. It will indicate when 
actually opening/closing a Java element.

org.eclipse.jdt.core/debug/javadelta=true
Enable tracing of the Java element deltas which are fired to listeners.

org.eclipse.jdt.core/debug/hierarchy=true
Enable tracing of the type hierarchy computation.

org.eclipse.jdt.core/debug/builder=true
Enable tracing of the Java builder activity. The Java builder is driving 
the incremental recompilation aspects, and this trace can be used to 
understand why a given file actually got triggered for recompilation. Note 
that this trace is not yet fully implemented given the Java builder is 
under rework. 
The Java debug options gave me no additional info - but I tried the 20020129 
integration drop, and it seems to have fixed the problem.  I now get an error 
in the project that "This resource "(a non-java file in my source directory)" 
is a duplicate and was not copied to the output folder".

This is much better than the previous error - mostly because it's just an 
error, but doesn't appear to stop the rest of the build, but also because it 
clearly identifies the problem, so I can now go to the root cause and fix it 
properly.  My suspicion is that this was the problem all along, and I'm just 
getting a much better error message now.  Anyway, thanks for your help.
You're right Tim, duplicates (java files as well as other resources) were not 
detected before 0129.

The catch all error is really only intended to catch the case of an explorer or 
dos-box with a current directory inside the output folder... a refresh + 
rebuild works in the cases we have tested. All other CoreExceptions are 
internal bugs which we need to track down &amp; fix.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7896" />
    <CreationDate amount="2002-01-18 14:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Replace With/Compare With terminology needs tweaks</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Replace With-&gt;Remote Contents should be Replace With-&gt;Base</Line>
          <Line>2. Compare With-&gt;Repository Contents should be renamed; KM suggested 'Branch</Line>
          <Line>Tip'. Repository Contents seems ambiguous.</Line>
          <Line>Replace With doesn't replace with Base, it replaces with the current</Line>
          <Line>repository contents.</Line>
          <Line>Fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Replace With-&gt;Remote Contents should be Replace With-&gt;Base
2. Compare With-&gt;Repository Contents should be renamed; KM suggested 'Branch 
Tip'. Repository Contents seems ambiguous.
Replace With doesn't replace with Base, it replaces with the current 
repository contents.
Fixed.</WithStack>
    <WithOutStack>1. Replace With-&gt;Remote Contents should be Replace With-&gt;Base
2. Compare With-&gt;Repository Contents should be renamed; KM suggested 'Branch 
Tip'. Repository Contents seems ambiguous.
Replace With doesn't replace with Base, it replaces with the current 
repository contents.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7897" />
    <CreationDate amount="2002-01-18 14:50:00 -0500" />
    <DupId amount="15658" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Returns:" oddly highlighted in Content Assist JavaDoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="package">
        <location start="662" end="674" />
        <code>package foo;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="675" end="711" />
        <code>/**
 * @version 	1.0
 * @author
 */</code>
      </source_code>
      <source_code type="class">
        <location start="712" end="1336" />
        <code>public class Bar {

	/**
	 * @return the human readable name for this rule
	 */
	public String getName() { return ""; }
	
	/**
	 * @param source: the source BusinessObject type
	 * @param srcVars: an Iterator on the source variables
	 * @param destination: the destination BusinessObject type
	 * @param dstVars: an Iterator on the destination variables
	 * @return a description of this rule as applied
	 * to the specified variables
	 */
	public String getDescription() {
		StringBuffer buf = new StringBuffer();
		buf.append("Apply the ");
		buf.append(getName());
		buf.append(" rule to ");
		return buf.toString();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you open up Content Assist, a second window appears to the right of the 
content assist with JavaDoc for the selected method.  When the only JavaDoc for 
the method is an @returns tag, the JavaDoc is incorrectly highlighted.  It 
appears as:

Re&lt;b&gt;turns:&lt;/b&gt;

I'll try to attach a screen shot.

(Tested against 20011219 build)
Created attachment 235
Screen shot of Content Assist windows
I cannot open the attachment (tried to save as a gif but this didn't help).

It would also help to paste the javadoc comment that isn't rendered properly.
Screenshot is a BMP file.  It opens fine in IE5.5.

Here's an example of a class which demonstrates the problem:

package foo;

/**
 * @version 	1.0
 * @author
 */
public class Bar {

	/**
	 * @return the human readable name for this rule
	 */
	public String getName() { return ""; }
	
	/**
	 * @param source: the source BusinessObject type
	 * @param srcVars: an Iterator on the source variables
	 * @param destination: the destination BusinessObject type
	 * @param dstVars: an Iterator on the destination variables
	 * @return a description of this rule as applied
	 * to the specified variables
	 */
	public String getDescription() {
		StringBuffer buf = new StringBuffer();
		buf.append("Apply the ");
		buf.append(getName());
		buf.append(" rule to ");
		return buf.toString();
	}
}

Place your cursor after the 'get' in 'buf.append(getName());' and open content 
assist.  If you arrow down to 'getDescription', you'll see the following 
JavaDoc:


Pa&lt;b&gt;rameters:&lt;/b&gt;
  so&lt;b&gt;urce:&lt;/b&gt; the source BusinessObject type
  sr&lt;b&gt;cVars:&lt;/b&gt; an Iterator on the source variables
. . .

Added to Javadoc cleanup PRs

*** This bug has been marked as a duplicate of 15658 ***</WithStack>
    <WithOutStack>When you open up Content Assist, a second window appears to the right of the 
content assist with JavaDoc for the selected method.  When the only JavaDoc for 
the method is an @returns tag, the JavaDoc is incorrectly highlighted.  It 
appears as:

Re&lt;b&gt;turns:&lt;/b&gt;

I'll try to attach a screen shot.

(Tested against 20011219 build)
Created attachment 235
Screen shot of Content Assist windows
I cannot open the attachment (tried to save as a gif but this didn't help).

It would also help to paste the javadoc comment that isn't rendered properly.
Screenshot is a BMP file.  It opens fine in IE5.5.

Here's an example of a class which demonstrates the problem:

package foo;

/**
 * @version 	1.0
 * @author
 */
public class Bar {

	/**
	 * @return the human readable name for this rule
	 */
	public String getName() { return ""; }
	
	/**
	 * @param source: the source BusinessObject type
	 * @param srcVars: an Iterator on the source variables
	 * @param destination: the destination BusinessObject type
	 * @param dstVars: an Iterator on the destination variables
	 * @return a description of this rule as applied
	 * to the specified variables
	 */
	public String getDescription() {
		StringBuffer buf = new StringBuffer();
		buf.append("Apply the ");
		buf.append(getName());
		buf.append(" rule to ");
		return buf.toString();
	}
}

Place your cursor after the 'get' in 'buf.append(getName());' and open content 
assist.  If you arrow down to 'getDescription', you'll see the following 
JavaDoc:


Pa&lt;b&gt;rameters:&lt;/b&gt;
  so&lt;b&gt;urce:&lt;/b&gt; the source BusinessObject type
  sr&lt;b&gt;cVars:&lt;/b&gt; an Iterator on the source variables
. . .

Added to Javadoc cleanup PRs

*** This bug has been marked as a duplicate of 15658 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7898" />
    <CreationDate amount="2002-01-18 15:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Divide by zero crashed Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I attempted to launch eclipse in eclipse and my original IDE disappeared, with 
the following:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_INT_DIVIDE_BY_ZERO occurred at PC=0x750213f1
Function name=WahInsertHandleContext
Library=C:\WINNT\System32\WS2HELP.DLL

Current Java thread:
	at java.net.PlainSocketImpl.socketCreate(Native Method)
	at java.net.PlainSocketImpl.create(PlainSocketImpl.java:78)
	at java.net.Socket.&lt;init&gt;(Socket.java:266)
	at java.net.Socket.&lt;init&gt;(Socket.java:100)
	at 
org.eclipse.jdt.internal.debug.ui.launcher.SocketUtil.findUnusedLocalPort
(SocketUtil.java:22)
	at org.eclipse.jdt.internal.debug.ui.launcher.JDKDebugLauncher.run
(JDKDebugLauncher.java:64)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherDelegate.doLaunch
(EclipseLauncherDelegate.java:117)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard.delegateLaunch
(EclipseLauncherWizard.java:118)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard.access$0
(EclipseLauncherWizard.java:109)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard$1.run
(EclipseLauncherWizard.java:82)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)

Dynamic libraries:
0x00400000 - 0x00405000 	d:\jdk1.3.1_01\jre\bin\java.exe
0x77F80000 - 0x77FFA000 	C:\WINNT\System32\ntdll.dll
0x77DB0000 - 0x77E0A000 	C:\WINNT\system32\ADVAPI32.dll
0x77E80000 - 0x77F35000 	C:\WINNT\system32\KERNEL32.DLL
0x77D40000 - 0x77DB0000 	C:\WINNT\system32\RPCRT4.DLL
0x78000000 - 0x78046000 	C:\WINNT\system32\MSVCRT.dll
0x6D420000 - 0x6D4EE000 	d:\jdk1.3.1_01\jre\bin\hotspot\jvm.dll
0x77E10000 - 0x77E74000 	C:\WINNT\system32\USER32.dll
0x77F40000 - 0x77F7C000 	C:\WINNT\system32\GDI32.DLL
0x77570000 - 0x775A0000 	C:\WINNT\System32\WINMM.dll
0x10000000 - 0x10019000 	C:\WINNT\System32\NVDESK32.DLL
0x6D220000 - 0x6D227000 	d:\jdk1.3.1_01\jre\bin\hpi.dll
0x6D3B0000 - 0x6D3BD000 	d:\jdk1.3.1_01\jre\bin\verify.dll
0x6D250000 - 0x6D266000 	d:\jdk1.3.1_01\jre\bin\java.dll
0x6D3C0000 - 0x6D3CD000 	d:\jdk1.3.1_01\jre\bin\zip.dll
0x09160000 - 0x091A3000 	D:\sdk20020109
\eclipse\plugins\org.eclipse.swt\ws\win32\swt-win32-2021.dll
0x77A50000 - 0x77B45000 	C:\WINNT\system32\ole32.dll
0x71700000 - 0x7178A000 	C:\WINNT\system32\COMCTL32.dll
0x76B30000 - 0x76B6E000 	C:\WINNT\system32\comdlg32.dll
0x70BD0000 - 0x70C1C000 	C:\WINNT\system32\SHLWAPI.DLL
0x69800000 - 0x69A42000 	C:\WINNT\system32\SHELL32.DLL
0x779B0000 - 0x77A45000 	C:\WINNT\system32\OLEAUT32.dll
0x75E60000 - 0x75E7A000 	C:\WINNT\System32\IMM32.dll
0x09860000 - 0x09867000 	D:\sdk20020109
\eclipse\plugins\org.eclipse.core.resources\os\win32\core_2_0_5.dll
0x6D340000 - 0x6D348000 	D:\jdk1.3.1_01\jre\bin\net.dll
0x75050000 - 0x75058000 	C:\WINNT\System32\WSOCK32.dll
0x75030000 - 0x75044000 	C:\WINNT\System32\WS2_32.DLL
0x75020000 - 0x75028000 	C:\WINNT\System32\WS2HELP.DLL
0x74FD0000 - 0x74FED000 	C:\WINNT\system32\msafd.dll
0x77340000 - 0x77353000 	C:\WINNT\System32\IPHLPAPI.DLL
0x77520000 - 0x77525000 	C:\WINNT\System32\ICMP.DLL
0x77320000 - 0x77337000 	C:\WINNT\System32\MPRAPI.DLL
0x75150000 - 0x7515F000 	C:\WINNT\System32\SAMLIB.DLL
0x75170000 - 0x751BF000 	C:\WINNT\System32\NETAPI32.DLL
0x77BE0000 - 0x77BEF000 	C:\WINNT\System32\SECUR32.DLL
0x751C0000 - 0x751C6000 	C:\WINNT\System32\NETRAP.DLL
0x77950000 - 0x77979000 	C:\WINNT\system32\WLDAP32.DLL
0x77980000 - 0x779A4000 	C:\WINNT\System32\DNSAPI.DLL
0x773B0000 - 0x773DE000 	C:\WINNT\System32\ACTIVEDS.DLL
0x77380000 - 0x773A2000 	C:\WINNT\System32\ADSLDPC.DLL
0x77830000 - 0x7783E000 	C:\WINNT\System32\RTUTILS.DLL
0x77880000 - 0x7790D000 	C:\WINNT\System32\SETUPAPI.DLL
0x77C10000 - 0x77C6D000 	C:\WINNT\System32\USERENV.DLL
0x774E0000 - 0x77512000 	C:\WINNT\System32\RASAPI32.DLL
0x774C0000 - 0x774D1000 	C:\WINNT\System32\RASMAN.DLL
0x77530000 - 0x77552000 	C:\WINNT\system32\TAPI32.DLL
0x77360000 - 0x77379000 	C:\WINNT\System32\DHCPCSVC.DLL
0x691D0000 - 0x69255000 	C:\WINNT\System32\CLBCATQ.DLL
0x75010000 - 0x75017000 	C:\WINNT\System32\wshtcpip.dll
0x78280000 - 0x7828C000 	C:\WINNT\System32\rnr20.dll
0x777E0000 - 0x777E8000 	C:\WINNT\System32\winrnr.dll
0x6B2C0000 - 0x6B2C5000 	C:\WINNT\System32\msimg32.dll
0x777F0000 - 0x777F5000 	C:\WINNT\System32\rasadhlp.dll
0x77920000 - 0x77942000 	C:\WINNT\system32\imagehlp.dll
0x72A00000 - 0x72A2D000 	C:\WINNT\system32\DBGHELP.dll
0x690A0000 - 0x690AB000 	C:\WINNT\System32\PSAPI.DLL

Local Time = Fri Jan 18 14:21:08 2002
Elapsed Time = 18102
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.3.1_01 mixed mode)
#
Unable to reproduce.</WithStack>
    <WithOutStack>I attempted to launch eclipse in eclipse and my original IDE disappeared, with 
the following:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : EXCEPTION_INT_DIVIDE_BY_ZERO occurred at PC=0x750213f1
Function name=WahInsertHandleContext
Library=C:\WINNT\System32\WS2HELP.DLL

Current Java thread:
	at java.net.PlainSocketImpl.socketCreate(Native Method)
	at java.net.PlainSocketImpl.create(PlainSocketImpl.java:78)
	at java.net.Socket.&lt;init&gt;(Socket.java:266)
	at java.net.Socket.&lt;init&gt;(Socket.java:100)
	at 
org.eclipse.jdt.internal.debug.ui.launcher.SocketUtil.findUnusedLocalPort
(SocketUtil.java:22)
	at org.eclipse.jdt.internal.debug.ui.launcher.JDKDebugLauncher.run
(JDKDebugLauncher.java:64)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherDelegate.doLaunch
(EclipseLauncherDelegate.java:117)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard.delegateLaunch
(EclipseLauncherWizard.java:118)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard.access$0
(EclipseLauncherWizard.java:109)
	at 
org.eclipse.pde.selfhosting.internal.launch.EclipseLauncherWizard$1.run
(EclipseLauncherWizard.java:82)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)

Dynamic libraries:
0x00400000 - 0x00405000 	d:\jdk1.3.1_01\jre\bin\java.exe
0x77F80000 - 0x77FFA000 	C:\WINNT\System32\ntdll.dll
0x77DB0000 - 0x77E0A000 	C:\WINNT\system32\ADVAPI32.dll
0x77E80000 - 0x77F35000 	C:\WINNT\system32\KERNEL32.DLL
0x77D40000 - 0x77DB0000 	C:\WINNT\system32\RPCRT4.DLL
0x78000000 - 0x78046000 	C:\WINNT\system32\MSVCRT.dll
0x6D420000 - 0x6D4EE000 	d:\jdk1.3.1_01\jre\bin\hotspot\jvm.dll
0x77E10000 - 0x77E74000 	C:\WINNT\system32\USER32.dll
0x77F40000 - 0x77F7C000 	C:\WINNT\system32\GDI32.DLL
0x77570000 - 0x775A0000 	C:\WINNT\System32\WINMM.dll
0x10000000 - 0x10019000 	C:\WINNT\System32\NVDESK32.DLL
0x6D220000 - 0x6D227000 	d:\jdk1.3.1_01\jre\bin\hpi.dll
0x6D3B0000 - 0x6D3BD000 	d:\jdk1.3.1_01\jre\bin\verify.dll
0x6D250000 - 0x6D266000 	d:\jdk1.3.1_01\jre\bin\java.dll
0x6D3C0000 - 0x6D3CD000 	d:\jdk1.3.1_01\jre\bin\zip.dll
0x09160000 - 0x091A3000 	D:\sdk20020109
\eclipse\plugins\org.eclipse.swt\ws\win32\swt-win32-2021.dll
0x77A50000 - 0x77B45000 	C:\WINNT\system32\ole32.dll
0x71700000 - 0x7178A000 	C:\WINNT\system32\COMCTL32.dll
0x76B30000 - 0x76B6E000 	C:\WINNT\system32\comdlg32.dll
0x70BD0000 - 0x70C1C000 	C:\WINNT\system32\SHLWAPI.DLL
0x69800000 - 0x69A42000 	C:\WINNT\system32\SHELL32.DLL
0x779B0000 - 0x77A45000 	C:\WINNT\system32\OLEAUT32.dll
0x75E60000 - 0x75E7A000 	C:\WINNT\System32\IMM32.dll
0x09860000 - 0x09867000 	D:\sdk20020109
\eclipse\plugins\org.eclipse.core.resources\os\win32\core_2_0_5.dll
0x6D340000 - 0x6D348000 	D:\jdk1.3.1_01\jre\bin\net.dll
0x75050000 - 0x75058000 	C:\WINNT\System32\WSOCK32.dll
0x75030000 - 0x75044000 	C:\WINNT\System32\WS2_32.DLL
0x75020000 - 0x75028000 	C:\WINNT\System32\WS2HELP.DLL
0x74FD0000 - 0x74FED000 	C:\WINNT\system32\msafd.dll
0x77340000 - 0x77353000 	C:\WINNT\System32\IPHLPAPI.DLL
0x77520000 - 0x77525000 	C:\WINNT\System32\ICMP.DLL
0x77320000 - 0x77337000 	C:\WINNT\System32\MPRAPI.DLL
0x75150000 - 0x7515F000 	C:\WINNT\System32\SAMLIB.DLL
0x75170000 - 0x751BF000 	C:\WINNT\System32\NETAPI32.DLL
0x77BE0000 - 0x77BEF000 	C:\WINNT\System32\SECUR32.DLL
0x751C0000 - 0x751C6000 	C:\WINNT\System32\NETRAP.DLL
0x77950000 - 0x77979000 	C:\WINNT\system32\WLDAP32.DLL
0x77980000 - 0x779A4000 	C:\WINNT\System32\DNSAPI.DLL
0x773B0000 - 0x773DE000 	C:\WINNT\System32\ACTIVEDS.DLL
0x77380000 - 0x773A2000 	C:\WINNT\System32\ADSLDPC.DLL
0x77830000 - 0x7783E000 	C:\WINNT\System32\RTUTILS.DLL
0x77880000 - 0x7790D000 	C:\WINNT\System32\SETUPAPI.DLL
0x77C10000 - 0x77C6D000 	C:\WINNT\System32\USERENV.DLL
0x774E0000 - 0x77512000 	C:\WINNT\System32\RASAPI32.DLL
0x774C0000 - 0x774D1000 	C:\WINNT\System32\RASMAN.DLL
0x77530000 - 0x77552000 	C:\WINNT\system32\TAPI32.DLL
0x77360000 - 0x77379000 	C:\WINNT\System32\DHCPCSVC.DLL
0x691D0000 - 0x69255000 	C:\WINNT\System32\CLBCATQ.DLL
0x75010000 - 0x75017000 	C:\WINNT\System32\wshtcpip.dll
0x78280000 - 0x7828C000 	C:\WINNT\System32\rnr20.dll
0x777E0000 - 0x777E8000 	C:\WINNT\System32\winrnr.dll
0x6B2C0000 - 0x6B2C5000 	C:\WINNT\System32\msimg32.dll
0x777F0000 - 0x777F5000 	C:\WINNT\System32\rasadhlp.dll
0x77920000 - 0x77942000 	C:\WINNT\system32\imagehlp.dll
0x72A00000 - 0x72A2D000 	C:\WINNT\system32\DBGHELP.dll
0x690A0000 - 0x690AB000 	C:\WINNT\System32\PSAPI.DLL

Local Time = Fri Jan 18 14:21:08 2002
Elapsed Time = 18102
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.3.1_01 mixed mode)
#
Unable to reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7899" />
    <CreationDate amount="2002-01-18 15:19:00 -0500" />
    <DupId amount="7564" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ITeamManager.getProvider(IResource) - should be IProject</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The method ITeamManager.getProvider(IResource) should instead have argument 
IProject since its at that level that the association exists.


*** This bug has been marked as a duplicate of 7564 ***</WithStack>
    <WithOutStack>The method ITeamManager.getProvider(IResource) should instead have argument 
IProject since its at that level that the association exists.


*** This bug has been marked as a duplicate of 7564 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="7900" />
    <CreationDate amount="2002-01-18 15:36:00 -0500" />
    <DupId amount="7564" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ITeamNature.configureProvider() not needed?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It seems like we shouldn't need this method. Since its provider specific data, 
the one who supplies the page in the "Share Project" dialog should, after the 
nature is set, be able to remember extra state wherever they choose. 
Programmatically this is equivalent to the one who calls addNatureToProject() 
should also do any special configuring.

In theory the only thing we provide is ensuring that only one Team nature is 
set on a project.  In the future the nature support could do this.  In the 
meantime, an alternative would be to watch for ProjectDescription deltas and 
report an error if the case occurs.  The only requirement then would be that 
the natures are registered with us first; after that, the caller would just use 
standard Core calls.  The effective difference would be that currently we can 
prevent the two provider case, while as listening for deltas would mean we 
could only report the case, which is good enough considering you can't get into 
this case using the standard "Share Project" action.

The advantage to the change would be that we don't have to worry that someone 
is using "our" nature call instead of just the core call.
Let's look at the API all at once. This was originally intended for running 
headless tests on the ITeamProvider interface.


*** This bug has been marked as a duplicate of 7564 ***</WithStack>
    <WithOutStack>It seems like we shouldn't need this method. Since its provider specific data, 
the one who supplies the page in the "Share Project" dialog should, after the 
nature is set, be able to remember extra state wherever they choose. 
Programmatically this is equivalent to the one who calls addNatureToProject() 
should also do any special configuring.

In theory the only thing we provide is ensuring that only one Team nature is 
set on a project.  In the future the nature support could do this.  In the 
meantime, an alternative would be to watch for ProjectDescription deltas and 
report an error if the case occurs.  The only requirement then would be that 
the natures are registered with us first; after that, the caller would just use 
standard Core calls.  The effective difference would be that currently we can 
prevent the two provider case, while as listening for deltas would mean we 
could only report the case, which is good enough considering you can't get into 
this case using the standard "Share Project" action.

The advantage to the change would be that we don't have to worry that someone 
is using "our" nature call instead of just the core call.
Let's look at the API all at once. This was originally intended for running 
headless tests on the ITeamProvider interface.


*** This bug has been marked as a duplicate of 7564 ***</WithOutStack>
  </Bug>
</infozilla-output>

