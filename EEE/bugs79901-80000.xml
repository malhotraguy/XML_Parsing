<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="79901" />
    <CreationDate amount="2004-12-01 12:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debug unusable on GTK</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Launch eclipse with a brand new worksapce.</Line>
          <Line>2. As anonymous, check out org.eclipse.swt and org.eclipse.swt.gtk from HEAD.</Line>
          <Line>3. In org.eclipse.swt, copy ".classpath_gtk" to ".classpath".</Line>
          <Line>4. Open the type Control.</Line>
          <Line>5. Set a breakpoint at the beginning of the constructor Control(Composite, int)</Line>
          <Line>6. Debug eclipse</Line>
          <Line>7. When you hit the breakpoint, step over the first two lines and step into</Line>
          <Line>createWidget.</Line>
          <Line />
          <Line>At this point, all I get is ... in the tree showing the stack trace.  I can</Line>
          <Line>wait forever and this never gets replaced with the real trace.  If I collapse</Line>
          <Line>the tree and expand it, it usually gets fixed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>eclipse.buildId=I200411240800
java.version=1.4.2_06
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Framework arguments:  -showlocation
Command-line arguments:  -os linux -ws gtk -arch x86 -showlocation

Trying to debug eclipse.  The first time I hit a breakpoint, things seem OK but
when I hit the next breakpoint, the stack is not updated, can't see the
variables or where I am in the source.  Sometimes, I get the tree but it just
has "..." in it and sometimes I get "Invalid stack frame" in the variables view.
 There are no errors reported in the log for this.  Sometimes I can't even
resume from this point.
2/5 of the debug team develops on GTK full-time. :-) What version of distro/version (and GTK version) 
are you running? Did these problems just appear with this build?
I am using KDE on SUSE8.0 which has GTK2-2.2.1-29.

I think this is new because I was happily debugging with last weeks integration 
build.  However, I will get last weeks build and try with the exact same 
breakpoints to be sure.
(according to your log output, you're still on last week's build :) )
Sorry, log output was wrong:

Using I200411300800

There were no logs when I get this error, I was just getting the info from an 
old error.
I tried rapid stepping examples on GTK without problem (I20041201).
Just tried exact same debugging steps with build I200411240800 and debugging 
works fine.  Seems to be broken recently.
Tried scenario on I200412011139 and it is quite broken.

Here is what I have:
 
Eclipse workspace with:

   org.eclipse.swt and org.eclipse.swt.gtk from HEAD.
   org.eclipse.debug.ui imported from external plugins with source

Put a breakpoint in:
   Shell.setBounds(int, int, int, int, boolean, boolean)
   LaunchConfigurationsDialog.initializeSashForm
   SashForm.setWeights(int[])

Disable all breakpoints
Debug eclipse
Open the Java perspective
Enable all breakpoints
Choose Run... from the toolbar in the Java Perspective

Step into a few things and suddenly stack trace becomes stale.  Alternatively 
hit resume after the first breakpoint is hit and by the second or third 
breakpoint, stack trace is stale.
Created attachment 16278
preferences

Here are my preferences.
Same setup on Win32 works OK. Will have to try GTK.
On GTK, I found the "..." appears when holding down the step into key (F5), but
that when I let go, the UI eventually stabalizes (a few seconds). Is this what
you are seeing?
I never see it stabilize.  And I wait quite a while.  I coud try waiting for a 
really long time like 30 minutes to see if it ever stabilizes.
That shouldn't be required, thanks :-)
Can you provide a thread dump when the "..." are showing.
Here are the suspended threads.

org.eclipse.core.launcher.Main at localhost:37418 (Suspended)
	System Thread [Finalizer] (Suspended)
		Object.wait(long) line: not available [native method]
		ReferenceQueue.remove(long) line: 111
		ReferenceQueue.remove() line: 127
		Finalizer$FinalizerThread.run() line: 159
	System Thread [Reference Handler] (Suspended)
		Object.wait(long) line: not available [native method]
		Reference$Lock(Object).wait() line: 429
		Reference$ReferenceHandler.run() line: 115
	Thread [main] (Suspended)
		OS._gtk_main_do_event(int) line: not available [native method]
		OS.gtk_main_do_event(int) line: 4615
		Display.eventProc(int, int) line: 907
		OS._g_main_context_iteration(int, boolean) line: not available [native method]
		OS.g_main_context_iteration(int, boolean) line: 1077
		Display.readAndDispatch() line: 2393
		Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1579
		Workbench.runUI() line: 1550
		Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 282
		PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144
		IDEApplication.run(Object) line: 102
		PlatformActivator$1.run(Object) line: 220
		EclipseStarter.run(Object) line: 273
		EclipseStarter.run(String[], Runnable) line: 129
		NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
		NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
		DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
		Method.invoke(Object, Object[]) line: 324
		Main.basicRun(String[]) line: 185
		Main.run(String[]) line: 710
		Main.main(String[]) line: 694
	System Thread [Signal Dispatcher] (Suspended)
	Thread [Framework Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		EventThread(Object).wait() line: 429
		EventThread.getNextEvent() line: 162
		EventThread.run() line: 100
	Thread [Start Level Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		EventThread(Object).wait() line: 429
		EventThread.getNextEvent() line: 162
		EventThread.run() line: 100
	Thread [Reference Cleaner: 1] (Suspended)
		Object.wait(long) line: not available [native method]
		ReferenceQueue.remove(long) line: 111
		ReferenceQueue.remove() line: 127
		ImageCache$ReferenceCleanerThread.run() line: 427
	Thread [Java indexing] (Suspended)
		Object.wait(long) line: not available [native method]
		IndexManager(Object).wait() line: 429
		IndexManager(JobManager).run() line: 345
		Thread.run() line: 534
	Thread [Worker-0] (Suspended)
		Object.wait(long) line: not available [native method]
		IOConsoleInputStream(Object).wait() line: 429
		IOConsoleInputStream.waitForData() line: 139
		IOConsoleInputStream.read(byte[], int, int) line: 85
		IOConsoleInputStream.read(byte[]) line: 110
		ProcessConsole$InputReadJob.run(IProgressMonitor) line: 620
		Worker.run() line: 66
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
	Thread [process reaper] (Suspended)
		UNIXProcess.waitForProcessExit(int) line: not available [native method]
		UNIXProcess.access$1500(UNIXProcess, int) line: 20
		UNIXProcess$2.run() line: 127
	Thread [Output Stream Monitor] (Suspended)
		FileInputStream.readBytes(byte[], int, int) line: not available [native method]
		FileInputStream.read(byte[], int, int) line: 194
		BufferedInputStream.read1(byte[], int, int) line: 220
		BufferedInputStream.read(byte[], int, int) line: 277
		BufferedInputStream(FilterInputStream).read(byte[]) line: 90
		OutputStreamMonitor.read() line: 133
		OutputStreamMonitor.access$1(OutputStreamMonitor) line: 124
		OutputStreamMonitor$1.run() line: 191
		Thread.run() line: 534
	Thread [Output Stream Monitor] (Suspended)
		FileInputStream.readBytes(byte[], int, int) line: not available [native method]
		FileInputStream.read(byte[]) line: 177
		OutputStreamMonitor.read() line: 133
		OutputStreamMonitor.access$1(OutputStreamMonitor) line: 124
		OutputStreamMonitor$1.run() line: 191
		Thread.run() line: 534
	Thread [Input Stream Monitor] (Suspended)
		Object.wait(long) line: not available [native method]
		Object.wait() line: 429
		InputStreamMonitor.writeNext() line: 131
		InputStreamMonitor.write() line: 104
		InputStreamMonitor$1.run() line: 80
		Thread.run() line: 534
	Thread [Process monitor] (Suspended)
		Object.wait(long) line: not available [native method]
		UNIXProcess(Object).wait() line: 429
		UNIXProcess.waitFor() line: 160
		RuntimeProcess$ProcessMonitorThread.run() line: 397
	Thread [Packet Receive Manager] (Suspended)
		SocketInputStream.socketRead0(FileDescriptor, byte[], int, int, int) line: not
available [native method]
		SocketInputStream.read(byte[], int, int) line: 129
		SocketInputStream.read() line: 182
		DataInputStream.readInt() line: 443
		JdwpPacket.read(InputStream) line: 125
		PacketReceiveManager.readAvailablePacket() line: 224
		PacketReceiveManager.run() line: 70
		Thread.run() line: 534
	Thread [Packet Send Manager] (Suspended)
		Object.wait(long) line: not available [native method]
		PacketSendManager(Object).wait() line: 429
		PacketSendManager.sendAvailablePackets() line: 94
		PacketSendManager.run() line: 54
		Thread.run() line: 534
	Thread [org.eclipse.jdt.debug: JDI Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		PacketReceiveManager(Object).wait() line: 429
		PacketReceiveManager.waitForPacketAvailable(long) line: 168
		PacketReceiveManager.getCommand(int, long) line: 93
		EventQueueImpl(MirrorImpl).getCommandVM(int, long) line: 276
		EventQueueImpl.remove(long) line: 63
		EventQueueImpl.remove() line: 48
		EventDispatcher.run() line: 213
		Thread.run() line: 534
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
	Thread [Worker-9] (Suspended)
		Object.wait(long) line: not available [native method]
		WorkerPool.sleep(long) line: 168
		WorkerPool.startJob(Worker) line: 195
		Worker.run() line: 59
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
Sometimes collapsing the tree and expanding it again makes the stack trace appear.
Interesting. The trace shows that there's no deadlocks or work waiting to 
happen - it just didn't happen.
Veronika, is this still occurring?
Marking as works for me.
Just had a chance to try this again with 3.1 M4.  It is still happening for 
me.  Reopening.  Let me know if there is additional info I can collect for you.
Does it happen with HelloWorld? or perhaps junit.samples.VectorTest? If not, 
is it particular to where you are setting your breakpoints? Can you attach a 
screen shot.
No problems on Gnome or KDE, GTK version 1.2.10 :-)
Does the problem happen if you use Gnome?
Darin, to determine your GTK version you need to use "rpm -q gtk2" (the result 
you gave is for "rpm -q gtk" but SWT does not use the 1.2 version of GTK).

I tried with 3.1 M3 and debugging works fine.
I tried 3.1 M4 and the problem occurs.
I tried 3.1 M4 with SWT plugins from 3.1 M3 and the problem occurs.

Here are the exact steps I followed:

1. Launch eclipse with a brand new worksapce.
2. As anonymous, check out org.eclipse.swt and org.eclipse.swt.gtk from HEAD.
3. In org.eclipse.swt, copy ".classpath_gtk" to ".classpath".
4. Open the type Control.
5. Set a breakpoint at the beginning of the constructor Control(Composite, int)
6. Debug eclipse
7. When you hit the breakpoint, step over the first two lines and step into 
createWidget.
 
At this point, all I get is ... in the tree showing the stack trace.  I can 
wait forever and this never gets replaced with the real trace.  If I collapse 
the tree and expand it, it usually gets fixed.

I will try with Gnome and also with a later version of GTK.

Where is the code that updates the debug tree?  Any idea what changed between 
M3 and Nov 24 in this area?  Perhaps it was not you but JFace that changed.  
There could also be an SWT or GTK bug that was exposed by some new code.  Need 
to find out where the problem is happening.

Version update:

gtk2-2.2.4-4.0
The debug view's label provider itself, has not changed in July 20, 2004. The 
content provider has been refactored between M3 and M4, but in both builds, 
content is retrieved in the background.

The label provider generates labels in the background (since 3.0) - 
DebugViewDecoratingLabelProvider.

The  DebugViewLabelDecorator was changed to re-use a job that computes labels, 
rather than create a new job for each batch of labels (between M3 and M4).
(NOTE, following exact steps from comment#23, I don't see the problem).
Works for me with same workspace but using GTK2 2.2.1-4.

Seems to be a bug with the interaction with older GTK2's.  Unfortunately, we 
still support them so we have to figure what is wrong.  I will look at the use 
of the Tree in DebugViewDecoratingLabelProvider.  Moving bug report to SWT.
Vikki, since you did all the tracking of this, you own it.  Please bring in 
FH, BB and whoever else to help as necessary determining exactly which version 
of GTK has the problem.  The problem is in GTK, but determining exactly how 
debug is using SWT and exposing the GTK bug might be difficult.
I think I am experiencing something similar. The debug view is sucking almost all my CPU can become unresponsive can stop refreshing and also appears to sometimes cause OOM errors. I have a similar setup on the same machine with the same version of java in windows and it's fine so I'm guessing it is GTK related.

Versions:
Eclipse 3.2 RC1 (Downloading RC4 right now to try that)
java version "1.5.0_06"
Linux / Fedora Core 5
gtk2-2.8.17-1.fc5.1

I ran eclipse with hprof/cpusampling and left the CPU maxed out for a bit in the hope that might help someone find the problem, full hprof is attached but here is the CPU breakdown:
CPU SAMPLES BEGIN (total = 73464) Wed May 17 18:00:27 2006
rank   self  accum   count trace method
   1 37.56% 37.56%   27592 301053 java.io.FileInputStream.readBytes
   2 19.76% 57.32%   14516 300135 java.lang.UNIXProcess.waitForProcessExit
   3 14.99% 72.30%   11010 300865 org.eclipse.swt.internal.gtk.OS.Call
   4 13.50% 85.80%    9914 301060 java.net.SocketInputStream.socketRead0
   5  5.25% 91.05%    3856 301063 java.net.SocketInputStream.socketRead0
   6  1.05% 92.10%     769 301148 org.eclipse.swt.internal.gtk.OS.g_main_context_wakeup
   7  0.35% 92.45%     260 301433 org.eclipse.ui.internal.progress.ProgressManager.hasNoRegularJobInfos
   8  0.34% 92.79%     247 300202 java.lang.ClassLoader.defineClass1
   9  0.31% 93.10%     231 301498 org.eclipse.core.internal.jobs.JobManager.schedule
Created attachment 41756
Full hprof sample taken whilst GTK/debugger sucking all the CPU and having refresh problems
You could be seeing bug 137926, which was fixed in RC2
SSQ, this looks really bad.  Veronika is away and so am I so we can't look at it.  Could be another unrelated but in the virtual tree?  NOTE: GTK 2.8.17.
(In reply to comment #31)
&gt; You could be seeing bug 137926, which was fixed in RC2
&gt; 

Yes, I think you are right as it seems ok in RC4. Perhaps bug 137926 just hits GTK quite hard. It's still a bit slow refreshing the tree (kind of like doing a remote debug on windows) but all the major problems seem fixed. 

Many Thanks.
(Steve, this bug was reported against 3.1, when we were not using the virtual tree).
Works for me on Linux Fedora Core 5 and Eclipse 3.2 RC4.
Bogdan, do you want to declare this WORKSFORME (ie. fixed in later version of GTK)?
Yes - closing this as a WORKSFORME on all versions of GTK =&gt; 2.4.</WithStack>
    <WithOutStack>eclipse.buildId=I200411240800
java.version=1.4.2_06
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Framework arguments:  -showlocation
Command-line arguments:  -os linux -ws gtk -arch x86 -showlocation

Trying to debug eclipse.  The first time I hit a breakpoint, things seem OK but
when I hit the next breakpoint, the stack is not updated, can't see the
variables or where I am in the source.  Sometimes, I get the tree but it just
has "..." in it and sometimes I get "Invalid stack frame" in the variables view.
 There are no errors reported in the log for this.  Sometimes I can't even
resume from this point.
2/5 of the debug team develops on GTK full-time. :-) What version of distro/version (and GTK version) 
are you running? Did these problems just appear with this build?
I am using KDE on SUSE8.0 which has GTK2-2.2.1-29.

I think this is new because I was happily debugging with last weeks integration 
build.  However, I will get last weeks build and try with the exact same 
breakpoints to be sure.
(according to your log output, you're still on last week's build :) )
Sorry, log output was wrong:

Using I200411300800

There were no logs when I get this error, I was just getting the info from an 
old error.
I tried rapid stepping examples on GTK without problem (I20041201).
Just tried exact same debugging steps with build I200411240800 and debugging 
works fine.  Seems to be broken recently.
Tried scenario on I200412011139 and it is quite broken.

Here is what I have:
 
Eclipse workspace with:

   org.eclipse.swt and org.eclipse.swt.gtk from HEAD.
   org.eclipse.debug.ui imported from external plugins with source

Put a breakpoint in:
   Shell.setBounds(int, int, int, int, boolean, boolean)
   LaunchConfigurationsDialog.initializeSashForm
   SashForm.setWeights(int[])

Disable all breakpoints
Debug eclipse
Open the Java perspective
Enable all breakpoints
Choose Run... from the toolbar in the Java Perspective

Step into a few things and suddenly stack trace becomes stale.  Alternatively 
hit resume after the first breakpoint is hit and by the second or third 
breakpoint, stack trace is stale.
Created attachment 16278
preferences

Here are my preferences.
Same setup on Win32 works OK. Will have to try GTK.
On GTK, I found the "..." appears when holding down the step into key (F5), but
that when I let go, the UI eventually stabalizes (a few seconds). Is this what
you are seeing?
I never see it stabilize.  And I wait quite a while.  I coud try waiting for a 
really long time like 30 minutes to see if it ever stabilizes.
That shouldn't be required, thanks :-)
Can you provide a thread dump when the "..." are showing.
Here are the suspended threads.

org.eclipse.core.launcher.Main at localhost:37418 (Suspended)
	System Thread [Finalizer] (Suspended)
		Object.wait(long) line: not available [native method]
		ReferenceQueue.remove(long) line: 111
		ReferenceQueue.remove() line: 127
		Finalizer$FinalizerThread.run() line: 159
	System Thread [Reference Handler] (Suspended)
		Object.wait(long) line: not available [native method]
		Reference$Lock(Object).wait() line: 429
		Reference$ReferenceHandler.run() line: 115
	Thread [main] (Suspended)
		OS._gtk_main_do_event(int) line: not available [native method]
		OS.gtk_main_do_event(int) line: 4615
		Display.eventProc(int, int) line: 907
		OS._g_main_context_iteration(int, boolean) line: not available [native method]
		OS.g_main_context_iteration(int, boolean) line: 1077
		Display.readAndDispatch() line: 2393
		Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1579
		Workbench.runUI() line: 1550
		Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 282
		PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144
		IDEApplication.run(Object) line: 102
		PlatformActivator$1.run(Object) line: 220
		EclipseStarter.run(Object) line: 273
		EclipseStarter.run(String[], Runnable) line: 129
		NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
		NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
		DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
		Method.invoke(Object, Object[]) line: 324
		Main.basicRun(String[]) line: 185
		Main.run(String[]) line: 710
		Main.main(String[]) line: 694
	System Thread [Signal Dispatcher] (Suspended)
	Thread [Framework Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		EventThread(Object).wait() line: 429
		EventThread.getNextEvent() line: 162
		EventThread.run() line: 100
	Thread [Start Level Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		EventThread(Object).wait() line: 429
		EventThread.getNextEvent() line: 162
		EventThread.run() line: 100
	Thread [Reference Cleaner: 1] (Suspended)
		Object.wait(long) line: not available [native method]
		ReferenceQueue.remove(long) line: 111
		ReferenceQueue.remove() line: 127
		ImageCache$ReferenceCleanerThread.run() line: 427
	Thread [Java indexing] (Suspended)
		Object.wait(long) line: not available [native method]
		IndexManager(Object).wait() line: 429
		IndexManager(JobManager).run() line: 345
		Thread.run() line: 534
	Thread [Worker-0] (Suspended)
		Object.wait(long) line: not available [native method]
		IOConsoleInputStream(Object).wait() line: 429
		IOConsoleInputStream.waitForData() line: 139
		IOConsoleInputStream.read(byte[], int, int) line: 85
		IOConsoleInputStream.read(byte[]) line: 110
		ProcessConsole$InputReadJob.run(IProgressMonitor) line: 620
		Worker.run() line: 66
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
	Thread [process reaper] (Suspended)
		UNIXProcess.waitForProcessExit(int) line: not available [native method]
		UNIXProcess.access$1500(UNIXProcess, int) line: 20
		UNIXProcess$2.run() line: 127
	Thread [Output Stream Monitor] (Suspended)
		FileInputStream.readBytes(byte[], int, int) line: not available [native method]
		FileInputStream.read(byte[], int, int) line: 194
		BufferedInputStream.read1(byte[], int, int) line: 220
		BufferedInputStream.read(byte[], int, int) line: 277
		BufferedInputStream(FilterInputStream).read(byte[]) line: 90
		OutputStreamMonitor.read() line: 133
		OutputStreamMonitor.access$1(OutputStreamMonitor) line: 124
		OutputStreamMonitor$1.run() line: 191
		Thread.run() line: 534
	Thread [Output Stream Monitor] (Suspended)
		FileInputStream.readBytes(byte[], int, int) line: not available [native method]
		FileInputStream.read(byte[]) line: 177
		OutputStreamMonitor.read() line: 133
		OutputStreamMonitor.access$1(OutputStreamMonitor) line: 124
		OutputStreamMonitor$1.run() line: 191
		Thread.run() line: 534
	Thread [Input Stream Monitor] (Suspended)
		Object.wait(long) line: not available [native method]
		Object.wait() line: 429
		InputStreamMonitor.writeNext() line: 131
		InputStreamMonitor.write() line: 104
		InputStreamMonitor$1.run() line: 80
		Thread.run() line: 534
	Thread [Process monitor] (Suspended)
		Object.wait(long) line: not available [native method]
		UNIXProcess(Object).wait() line: 429
		UNIXProcess.waitFor() line: 160
		RuntimeProcess$ProcessMonitorThread.run() line: 397
	Thread [Packet Receive Manager] (Suspended)
		SocketInputStream.socketRead0(FileDescriptor, byte[], int, int, int) line: not
available [native method]
		SocketInputStream.read(byte[], int, int) line: 129
		SocketInputStream.read() line: 182
		DataInputStream.readInt() line: 443
		JdwpPacket.read(InputStream) line: 125
		PacketReceiveManager.readAvailablePacket() line: 224
		PacketReceiveManager.run() line: 70
		Thread.run() line: 534
	Thread [Packet Send Manager] (Suspended)
		Object.wait(long) line: not available [native method]
		PacketSendManager(Object).wait() line: 429
		PacketSendManager.sendAvailablePackets() line: 94
		PacketSendManager.run() line: 54
		Thread.run() line: 534
	Thread [org.eclipse.jdt.debug: JDI Event Dispatcher] (Suspended)
		Object.wait(long) line: not available [native method]
		PacketReceiveManager(Object).wait() line: 429
		PacketReceiveManager.waitForPacketAvailable(long) line: 168
		PacketReceiveManager.getCommand(int, long) line: 93
		EventQueueImpl(MirrorImpl).getCommandVM(int, long) line: 276
		EventQueueImpl.remove(long) line: 63
		EventQueueImpl.remove() line: 48
		EventDispatcher.run() line: 213
		Thread.run() line: 534
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
	Thread [Worker-9] (Suspended)
		Object.wait(long) line: not available [native method]
		WorkerPool.sleep(long) line: 168
		WorkerPool.startJob(Worker) line: 195
		Worker.run() line: 59
	Thread [org.eclipse.jdt.internal.ui.text.JavaReconciler] (Suspended)
		Object.wait(long) line: not available [native method]
		AbstractReconciler$BackgroundThread.run() line: 176
Sometimes collapsing the tree and expanding it again makes the stack trace appear.
Interesting. The trace shows that there's no deadlocks or work waiting to 
happen - it just didn't happen.
Veronika, is this still occurring?
Marking as works for me.
Just had a chance to try this again with 3.1 M4.  It is still happening for 
me.  Reopening.  Let me know if there is additional info I can collect for you.
Does it happen with HelloWorld? or perhaps junit.samples.VectorTest? If not, 
is it particular to where you are setting your breakpoints? Can you attach a 
screen shot.
No problems on Gnome or KDE, GTK version 1.2.10 :-)
Does the problem happen if you use Gnome?
Darin, to determine your GTK version you need to use "rpm -q gtk2" (the result 
you gave is for "rpm -q gtk" but SWT does not use the 1.2 version of GTK).

I tried with 3.1 M3 and debugging works fine.
I tried 3.1 M4 and the problem occurs.
I tried 3.1 M4 with SWT plugins from 3.1 M3 and the problem occurs.

Here are the exact steps I followed:

1. Launch eclipse with a brand new worksapce.
2. As anonymous, check out org.eclipse.swt and org.eclipse.swt.gtk from HEAD.
3. In org.eclipse.swt, copy ".classpath_gtk" to ".classpath".
4. Open the type Control.
5. Set a breakpoint at the beginning of the constructor Control(Composite, int)
6. Debug eclipse
7. When you hit the breakpoint, step over the first two lines and step into 
createWidget.
 
At this point, all I get is ... in the tree showing the stack trace.  I can 
wait forever and this never gets replaced with the real trace.  If I collapse 
the tree and expand it, it usually gets fixed.

I will try with Gnome and also with a later version of GTK.

Where is the code that updates the debug tree?  Any idea what changed between 
M3 and Nov 24 in this area?  Perhaps it was not you but JFace that changed.  
There could also be an SWT or GTK bug that was exposed by some new code.  Need 
to find out where the problem is happening.

Version update:

gtk2-2.2.4-4.0
The debug view's label provider itself, has not changed in July 20, 2004. The 
content provider has been refactored between M3 and M4, but in both builds, 
content is retrieved in the background.

The label provider generates labels in the background (since 3.0) - 
DebugViewDecoratingLabelProvider.

The  DebugViewLabelDecorator was changed to re-use a job that computes labels, 
rather than create a new job for each batch of labels (between M3 and M4).
(NOTE, following exact steps from comment#23, I don't see the problem).
Works for me with same workspace but using GTK2 2.2.1-4.

Seems to be a bug with the interaction with older GTK2's.  Unfortunately, we 
still support them so we have to figure what is wrong.  I will look at the use 
of the Tree in DebugViewDecoratingLabelProvider.  Moving bug report to SWT.
Vikki, since you did all the tracking of this, you own it.  Please bring in 
FH, BB and whoever else to help as necessary determining exactly which version 
of GTK has the problem.  The problem is in GTK, but determining exactly how 
debug is using SWT and exposing the GTK bug might be difficult.
I think I am experiencing something similar. The debug view is sucking almost all my CPU can become unresponsive can stop refreshing and also appears to sometimes cause OOM errors. I have a similar setup on the same machine with the same version of java in windows and it's fine so I'm guessing it is GTK related.

Versions:
Eclipse 3.2 RC1 (Downloading RC4 right now to try that)
java version "1.5.0_06"
Linux / Fedora Core 5
gtk2-2.8.17-1.fc5.1

I ran eclipse with hprof/cpusampling and left the CPU maxed out for a bit in the hope that might help someone find the problem, full hprof is attached but here is the CPU breakdown:
CPU SAMPLES BEGIN (total = 73464) Wed May 17 18:00:27 2006
rank   self  accum   count trace method
   1 37.56% 37.56%   27592 301053 java.io.FileInputStream.readBytes
   2 19.76% 57.32%   14516 300135 java.lang.UNIXProcess.waitForProcessExit
   3 14.99% 72.30%   11010 300865 org.eclipse.swt.internal.gtk.OS.Call
   4 13.50% 85.80%    9914 301060 java.net.SocketInputStream.socketRead0
   5  5.25% 91.05%    3856 301063 java.net.SocketInputStream.socketRead0
   6  1.05% 92.10%     769 301148 org.eclipse.swt.internal.gtk.OS.g_main_context_wakeup
   7  0.35% 92.45%     260 301433 org.eclipse.ui.internal.progress.ProgressManager.hasNoRegularJobInfos
   8  0.34% 92.79%     247 300202 java.lang.ClassLoader.defineClass1
   9  0.31% 93.10%     231 301498 org.eclipse.core.internal.jobs.JobManager.schedule
Created attachment 41756
Full hprof sample taken whilst GTK/debugger sucking all the CPU and having refresh problems
You could be seeing bug 137926, which was fixed in RC2
SSQ, this looks really bad.  Veronika is away and so am I so we can't look at it.  Could be another unrelated but in the virtual tree?  NOTE: GTK 2.8.17.
(In reply to comment #31)
&gt; You could be seeing bug 137926, which was fixed in RC2
&gt; 

Yes, I think you are right as it seems ok in RC4. Perhaps bug 137926 just hits GTK quite hard. It's still a bit slow refreshing the tree (kind of like doing a remote debug on windows) but all the major problems seem fixed. 

Many Thanks.
(Steve, this bug was reported against 3.1, when we were not using the virtual tree).
Works for me on Linux Fedora Core 5 and Eclipse 3.2 RC4.
Bogdan, do you want to declare this WORKSFORME (ie. fixed in later version of GTK)?
Yes - closing this as a WORKSFORME on all versions of GTK =&gt; 2.4.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79902" />
    <CreationDate amount="2004-12-01 12:59:00 -0500" />
    <DupId amount="55116" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[JFace] ApplicationWindowLayout incorrectly assumes separator as first child</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When using a StatusLine on the Mac, you will notice that it appears at the top of the window instead of 
the bottom, where it's supposed to be.

This is because the ApplicationWindow.ApplicationWindowLayout assumes that the first child of the 
Composite will be a Separator. This breaks on the Mac because the Mac has no MenuBar in the window 
and there is no need for a separator. (Many thanks to Andre Weinand for discovering this).

From Andre:
"A workaround is to add dummy widget with size (0,0) to the Composite as its first child
in createToolBarControl()."
Saw that someone else was having this problem too...


*** This bug has been marked as a duplicate of 55116 ***</WithStack>
    <WithOutStack>When using a StatusLine on the Mac, you will notice that it appears at the top of the window instead of 
the bottom, where it's supposed to be.

This is because the ApplicationWindow.ApplicationWindowLayout assumes that the first child of the 
Composite will be a Separator. This breaks on the Mac because the Mac has no MenuBar in the window 
and there is no need for a separator. (Many thanks to Andre Weinand for discovering this).

From Andre:
"A workaround is to add dummy widget with size (0,0) to the Composite as its first child
in createToolBarControl()."
Saw that someone else was having this problem too...


*** This bug has been marked as a duplicate of 55116 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79903" />
    <CreationDate amount="2004-12-01 13:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Source not found automatically for higher level plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>- new workspace</Line>
          <Line>- create a plug-in project</Line>
          <Line>- create a launch config to run the IDE, i.e. using default settings for new</Line>
          <Line>Eclipse Application launcher</Line>
          <Line>- debug</Line>
          <Line>- in target, create a Java project and a CU</Line>
          <Line>- in host, set a breakpoint in FileInputStream(File)</Line>
          <Line>- in target, rename the CU from package explorer</Line>
          <Line>- breakpoint is hit, with stack containing frames from JDT Core and JDT UI</Line>
          <Line>- select any of these stack frames</Line>
          <Line>- no source is shown, and there is no prompt</Line>
          <Line>- need to manually add these via Edit Source Lookup...</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- create a plug-in project</Line>
          <Line>I did:</Line>
          <Line>- load the org.eclipse.ui.examples.rcp.browser example</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20041130

Not sure if this is a JDT or PDE thing, but I'll start here...

- new workspace
- create a plug-in project
- create a launch config to run the IDE, i.e. using default settings for new
Eclipse Application launcher
- debug
- in target, create a Java project and a CU
- in host, set a breakpoint in FileInputStream(File)
- in target, rename the CU from package explorer
- breakpoint is hit, with stack containing frames from JDT Core and JDT UI
- select any of these stack frames
- no source is shown, and there is no prompt
- need to manually add these via Edit Source Lookup...

This scenario came up as I was trying to determine why the IDE was frequently
consuming many cycles.

Even if my project does not depend on the whole IDE, the source for the whole
IDE should be available (automatically) since that's what I'm running.
I think this is a major problem for people that need to debug not just their
plug-ins and the code it calls, but also the broader IDE in which it's running.
There may also be downstream plug-ins called indirectly from the plug-in (e.g.
by extension to its extension points), that aren't necessarily loaded in the
workspace.

The scenario above is not quite what I had done.
Instead of:
- create a plug-in project
I did:
- load the org.eclipse.ui.examples.rcp.browser example

But I was not running the browser app, I was running the IDE.
It could be that source paths are set up differently in this case though.

Same problem here.

Clicking on a stack frame doesn't show the source, and stepping doesn't show the
source. This worked fine with the previous I build. 
PDE sets up the source path for runtime workbench configs.
I don't think this is anything new (for the most part).  It is a 
limitation/fact of life.

The only code that we have source attached to in your host workspace is 
whatever is in the Java search scope.  Since Nick's project does not contain 
references to JDT/Core or JDT/UI, code from those plugins is not in the java 
search scope and is not therefore on the source lookup path.

What you can do is use the PDE utility to add these plugins to the Java search 
scope and you will be fine.

As for:
&gt;no source is shown, and there is no prompt
I'm not sure why there is no prompt here, but this would be a debug issue.  
Adding Darin for comment.

As for JM's comments:
Unclear to me what used to work and what doesn't work now...

In summary, if this is all related to the Java search scope thing, then it's a 
limitation as I said.  
If there is more to it, then PDE's source code lookup hasn't changed in 
months, Darin, has anything changed at your end in this area?
Moving to debug...
Just passing through... hi.
The "source not found" editor not appearing is bug in the debug platform, due 
to the fix to bug 35400. The fact that the source is not found is due to 
comment#5.

Fixed. The source not found editor is now properly opened. Changes in 
SourceLookupFacility.
This does not address the source not being found issue, but as Wassim points 
out, this is a known limitation, or at least, a new feature request :-) 

Please verify, Jared.
&gt; What you can do is use the PDE utility to add these plugins to the Java search 
&gt; scope and you will be fine.

What's the best way of doing this?  Previously, I've created a dummy PDE project
and added the plugins I want to see to its prerequisites.

best way to do this is through the fake project.  ie. go the plugins view, 
selecta all and htne choose Add to Java Search from the context menu.
Verified code.</WithStack>
    <WithOutStack>build I20041130

Not sure if this is a JDT or PDE thing, but I'll start here...

- new workspace
- create a plug-in project
- create a launch config to run the IDE, i.e. using default settings for new
Eclipse Application launcher
- debug
- in target, create a Java project and a CU
- in host, set a breakpoint in FileInputStream(File)
- in target, rename the CU from package explorer
- breakpoint is hit, with stack containing frames from JDT Core and JDT UI
- select any of these stack frames
- no source is shown, and there is no prompt
- need to manually add these via Edit Source Lookup...

This scenario came up as I was trying to determine why the IDE was frequently
consuming many cycles.

Even if my project does not depend on the whole IDE, the source for the whole
IDE should be available (automatically) since that's what I'm running.
I think this is a major problem for people that need to debug not just their
plug-ins and the code it calls, but also the broader IDE in which it's running.
There may also be downstream plug-ins called indirectly from the plug-in (e.g.
by extension to its extension points), that aren't necessarily loaded in the
workspace.

The scenario above is not quite what I had done.
Instead of:
- create a plug-in project
I did:
- load the org.eclipse.ui.examples.rcp.browser example

But I was not running the browser app, I was running the IDE.
It could be that source paths are set up differently in this case though.

Same problem here.

Clicking on a stack frame doesn't show the source, and stepping doesn't show the
source. This worked fine with the previous I build. 
PDE sets up the source path for runtime workbench configs.
I don't think this is anything new (for the most part).  It is a 
limitation/fact of life.

The only code that we have source attached to in your host workspace is 
whatever is in the Java search scope.  Since Nick's project does not contain 
references to JDT/Core or JDT/UI, code from those plugins is not in the java 
search scope and is not therefore on the source lookup path.

What you can do is use the PDE utility to add these plugins to the Java search 
scope and you will be fine.

As for:
&gt;no source is shown, and there is no prompt
I'm not sure why there is no prompt here, but this would be a debug issue.  
Adding Darin for comment.

As for JM's comments:
Unclear to me what used to work and what doesn't work now...

In summary, if this is all related to the Java search scope thing, then it's a 
limitation as I said.  
If there is more to it, then PDE's source code lookup hasn't changed in 
months, Darin, has anything changed at your end in this area?
Moving to debug...
Just passing through... hi.
The "source not found" editor not appearing is bug in the debug platform, due 
to the fix to bug 35400. The fact that the source is not found is due to 
comment#5.

Fixed. The source not found editor is now properly opened. Changes in 
SourceLookupFacility.
This does not address the source not being found issue, but as Wassim points 
out, this is a known limitation, or at least, a new feature request :-) 

Please verify, Jared.
&gt; What you can do is use the PDE utility to add these plugins to the Java search 
&gt; scope and you will be fine.

What's the best way of doing this?  Previously, I've created a dummy PDE project
and added the plugins I want to see to its prerequisites.

best way to do this is through the fake project.  ie. go the plugins view, 
selecta all and htne choose Add to Java Search from the context menu.
Verified code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79904" />
    <CreationDate amount="2004-12-01 13:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][dom][javadoc] TagElement range not complete for type parameter tags</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="111" end="133" />
        <code>/**
 * @param &lt;A&gt;
 */</code>
      </source_code>
      <source_code type="class">
        <location start="134" end="148" />
        <code>class E&lt;A&gt; {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20041201

In the following code is the node range of the TagElement not complete: It only
contains '@param &lt;A'

/**
 * @param &lt;A&gt;
 */
class E&lt;A&gt; {
}
Underlying this is the fact that J2SE 5 allows @parameter tag elements on 
class and interface declarations.  "@parameter &lt;X&gt;" should parse the same was 
as on method declarations.
DocCommentParser already parses @param &lt;X&gt; tags in class javadoc the same way it
does in method javadoc. So, the problem is the same in both cases...

Fixed.

Range now includes closing '&gt;'.

|jdt-core-internal]
Changes done in AbstractCommentParser.parseParam().
Test case added: ASTConverterJavadocTests#testBug79904()

Verified in 200412140800</WithStack>
    <WithOutStack>20041201

In the following code is the node range of the TagElement not complete: It only
contains '@param &lt;A'

/**
 * @param &lt;A&gt;
 */
class E&lt;A&gt; {
}
Underlying this is the fact that J2SE 5 allows @parameter tag elements on 
class and interface declarations.  "@parameter &lt;X&gt;" should parse the same was 
as on method declarations.
DocCommentParser already parses @param &lt;X&gt; tags in class javadoc the same way it
does in method javadoc. So, the problem is the same in both cases...

Fixed.

Range now includes closing '&gt;'.

|jdt-core-internal]
Changes done in AbstractCommentParser.parseParam().
Test case added: ASTConverterJavadocTests#testBug79904()

Verified in 200412140800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79905" />
    <CreationDate amount="2004-12-01 13:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move inner to top failed for enums</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211420">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(Unknown Source)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.ProgressManager$3.run(Unknown Source)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.BusyIndicator.showWhile(Unknown Source)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(Unknown Source)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions(UnknownSource)</Frame>
          <Frame depth="8">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.access$0(UnknownSource)</Frame>
          <Frame depth="9">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(UnknownSource)</Frame>
          <Frame depth="10">org.eclipse.swt.custom.BusyIndicator.showWhile(Unknown Source)</Frame>
          <Frame depth="11">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(Unknown Source)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(UnknownSource)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.actions.ConvertNestedToTopAction.startRefactoring(UnknownSource)</Frame>
          <Frame depth="14">org.eclipse.jdt.ui.actions.ConvertNestedToTopAction.run(Unknown Source)</Frame>
          <Frame depth="15">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(Unknown Source)</Frame>
          <Frame depth="16">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(UnknownSource)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(Unknown Source)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Unknown Source)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.actions.QuickMenuAction.run(Unknown Source)</Frame>
          <Frame depth="26">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="27">org.eclipse.ui.commands.ActionHandler.execute(Unknown Source)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.commands.Command.execute(Unknown Source)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(Unknown Source)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(Unknown Source)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(UnknownSource)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(Unknown Source)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(Unknown Source)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.filterEvent(Unknown Source)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Control.traverse(Unknown Source)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Control.translateMnemonic(Unknown Source)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Composite.translateMnemonic(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Control.translateMnemonic(Unknown Source)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Display.translateMnemonic(Unknown Source)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Display.filterMessage(Unknown Source)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.Workbench.runEventLoop(Unknown Source)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Workbench.runUI(Unknown Source)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Unknown Source)</Frame>
          <Frame depth="50">org.eclipse.ui.PlatformUI.createAndRunWorkbench(Unknown Source)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)</Frame>
          <Frame depth="52">org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)</Frame>
          <Frame depth="53">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="54">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="55">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="57">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="58">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="59">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.run(Main.java:684)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.main(Main.java:668)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="0" end="34" />
        <code>public class A {
	enum E {
		
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>public class A {
	enum E {
		
	}
}

- try moving E to top

java.lang.reflect.InvocationTargetException
at org.eclipse.jface.operation.ModalContext.run(Unknown Source)
at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(Unknown Source)
at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(Unknown Source)
at org.eclipse.ui.internal.progress.ProgressManager$3.run(Unknown Source)
at org.eclipse.swt.custom.BusyIndicator.showWhile(Unknown Source)
at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(Unknown Source)
at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(Unknown Source)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions(Unknown
Source)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.access$0(Unknown
Source)
at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(Unknown
Source)
at org.eclipse.swt.custom.BusyIndicator.showWhile(Unknown Source)
at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(Unknown Source)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(Unknown
Source)
at org.eclipse.jdt.ui.actions.ConvertNestedToTopAction.startRefactoring(Unknown
Source)
at org.eclipse.jdt.ui.actions.ConvertNestedToTopAction.run(Unknown Source)
at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(Unknown Source)
at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(Unknown Source)
at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown
Source)
at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)
at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(Unknown Source)
at org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Unknown Source)
at org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)
at org.eclipse.jdt.internal.ui.actions.QuickMenuAction.run(Unknown Source)
at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
at org.eclipse.ui.commands.ActionHandler.execute(Unknown Source)
at org.eclipse.ui.internal.commands.Command.execute(Unknown Source)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(Unknown Source)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(Unknown Source)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(Unknown Source)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(Unknown
Source)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(Unknown Source)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(Unknown Source)
at org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Display.filterEvent(Unknown Source)
at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)
at org.eclipse.swt.widgets.Control.traverse(Unknown Source)
at org.eclipse.swt.widgets.Control.translateMnemonic(Unknown Source)
at org.eclipse.swt.widgets.Composite.translateMnemonic(Unknown Source)
at org.eclipse.swt.widgets.Control.translateMnemonic(Unknown Source)
at org.eclipse.swt.widgets.Display.translateMnemonic(Unknown Source)
at org.eclipse.swt.widgets.Display.filterMessage(Unknown Source)
at org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)
at org.eclipse.ui.internal.Workbench.runEventLoop(Unknown Source)
at org.eclipse.ui.internal.Workbench.runUI(Unknown Source)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Unknown Source)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(Unknown Source)
at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
at java.lang.reflect.Method.invoke(Method.java:391)
at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
at org.eclipse.core.launcher.Main.run(Main.java:684)
at org.eclipse.core.launcher.Main.main(Main.java:668)
Caused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null
argument;
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(Unknown
Source)
at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(Unknown Source)
at org.eclipse.core.internal.resources.Workspace.run(Unknown Source)
at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(Unknown
Source)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)
Root exception:
org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null argument;
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(Unknown
Source)
at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(Unknown Source)
at org.eclipse.core.internal.resources.Workspace.run(Unknown Source)
at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(Unknown
Source)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)
I'm working on it...
Fixed &gt; 20041206</WithStack>
    <WithOutStack>public class A {
	enum E {
		
	}
}

- try moving E to top

Caused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null
argument;
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(Unknown
Source)
at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(Unknown Source)
at org.eclipse.core.internal.resources.Workspace.run(Unknown Source)
at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(Unknown
Source)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)
Root exception:
org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null argument;
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at org.eclipse.jdt.internal.corext.Assert.isNotNull(Unknown Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(Unknown
Source)
at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(Unknown
Source)
at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(Unknown Source)
at org.eclipse.core.internal.resources.Workspace.run(Unknown Source)
at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(Unknown
Source)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)
I'm working on it...
Fixed &gt; 20041206</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79906" />
    <CreationDate amount="2004-12-01 13:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[refactoring]  convert anonym to inner should follow naming conventions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="252" end="415" />
        <code>public void foo(final int pVar1) {
      final int lVar2= 1;
      Runnable r= new Runnable() {
		public void run() {
			int x= pVar1 + lVar2;
		}
      };
   }</code>
      </source_code>
      <source_code type="class">
        <location start="419" end="670" />
        <code>private final class Inner implements Runnable {
		private final int fVar1;
		private final int fVar2;

		private Inner(int pVar1, int pVar2) {
			super();
			fVar1 = pVar1;
			fVar2 = pVar2;
		}
		public void run() {
			int x= fVar1 + fVar2;
		}
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- use field pre/suffixes for introduced fields,</Line>
          <Line>remove params and local pre/suffixes for used variables</Line>
          <Line>- use 'this' if preferred by the user</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20041201

The 'convert anonym to inner class' refactoring should follow the naming
conventions.
- use field pre/suffixes for introduced fields,
remove params and local pre/suffixes for used variables
- use 'this' if preferred by the user

for example:
   public void foo(final int pVar1) {
      final int lVar2= 1;
      Runnable r= new Runnable() {
		public void run() {
			int x= pVar1 + lVar2;
		}
      };
   }
-&gt;
   private final class Inner implements Runnable {
		private final int fVar1;
		private final int fVar2;

		private Inner(int pVar1, int pVar2) {
			super();
			fVar1 = pVar1;
			fVar2 = pVar2;
		}
		public void run() {
			int x= fVar1 + fVar2;
		}
	}
Agree.
*** Bug 84029 has been marked as a duplicate of this bug. ***
*** Bug 43724 has been marked as a duplicate of this bug. ***
*** Bug 88437 has been marked as a duplicate of this bug. ***
Fixed &gt; 20050525
Verifying...
Verified in I20050527-0010.</WithStack>
    <WithOutStack>20041201

The 'convert anonym to inner class' refactoring should follow the naming
conventions.
- use field pre/suffixes for introduced fields,
remove params and local pre/suffixes for used variables
- use 'this' if preferred by the user

for example:
   public void foo(final int pVar1) {
      final int lVar2= 1;
      Runnable r= new Runnable() {
		public void run() {
			int x= pVar1 + lVar2;
		}
      };
   }
-&gt;
   private final class Inner implements Runnable {
		private final int fVar1;
		private final int fVar2;

		private Inner(int pVar1, int pVar2) {
			super();
			fVar1 = pVar1;
			fVar2 = pVar2;
		}
		public void run() {
			int x= fVar1 + fVar2;
		}
	}
Agree.
*** Bug 84029 has been marked as a duplicate of this bug. ***
*** Bug 43724 has been marked as a duplicate of this bug. ***
*** Bug 88437 has been marked as a duplicate of this bug. ***
Fixed &gt; 20050525
Verifying...
Verified in I20050527-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79907" />
    <CreationDate amount="2004-12-01 13:28:00 -0500" />
    <DupId amount="38265" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Keep a selection in Synchronize view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20041130800

If I have the following tree in the Synchronize view's outgoing mode:

P1
  Folder1
    File11
    File12
P2
  Folder2
    File21
    File22
    File23
  Folder3

and Commit or 'Override and Update' File22 the selection gets lost. I would
prefer that the selection is set to the next sibling (File23). If there's no
sibling I'd like to have the selection on the next parent (Folder2).

I would not auto-expand e.g. if I commit Folder2 I would select Folder3 but not
expand it. If I commit P2 I would set the selection to P1.
This would be helpful in some cases. However, implementing it would not be 
trivial due to the architecture of the synchronize view.


*** This bug has been marked as a duplicate of 38265 ***</WithStack>
    <WithOutStack>I20041130800

If I have the following tree in the Synchronize view's outgoing mode:

P1
  Folder1
    File11
    File12
P2
  Folder2
    File21
    File22
    File23
  Folder3

and Commit or 'Override and Update' File22 the selection gets lost. I would
prefer that the selection is set to the next sibling (File23). If there's no
sibling I'd like to have the selection on the next parent (Folder2).

I would not auto-expand e.g. if I commit Folder2 I would select Folder3 but not
expand it. If I commit P2 I would set the selection to P1.
This would be helpful in some cases. However, implementing it would not be 
trivial due to the architecture of the synchronize view.


*** This bug has been marked as a duplicate of 38265 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79908" />
    <CreationDate amount="2004-12-01 13:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Change Sets] Change sets expand without my will</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="24">
        <Lines>
          <Line>1. have the Synchronize view in outgoing mode and show change sets</Line>
          <Line>2. change file F1 contained in project P</Line>
          <Line>3. add changed file F1 to new change set S</Line>
          <Line>4. change F2 contained in project P (not part of change set S)</Line>
          <Line>5. override and updated F2</Line>
          <Line>==&gt; change set(s) containing P get expanded which is very nasty because I loose</Line>
          <Line>my work context. This context loss is even worse because the selection gets lost</Line>
          <Line>too (see also bug 79907).</Line>
          <Line>Yes, this is a known issue (although this is the first bug report). The</Line>
          <Line>problem is that we try to preserve expanion and selection accross all modes</Line>
          <Line>and layouts in the view which means that we need a common way of persisting</Line>
          <Line>the expansion. We use resources for this. Since P is expanded, it's gets shown</Line>
          <Line>in all places. This is rather excessive so I will see if I can come up with a</Line>
          <Line>better measn of preserving expansion.</Line>
          <Line>&gt; (although this is the first bug report)</Line>
          <Line>I'm sure others have spotted this too, but did not track it down to give</Line>
          <Line>reproducible steps. It's one of those bugs I never know for sure whether it's me</Line>
          <Line>or eclipse that is buggy ;-).</Line>
          <Line>This becomes really nasty when in "Incoming" mode with tons of changes in the</Line>
          <Line>same projects. When updating a subset of the displayed change sets, everything</Line>
          <Line>starts to expand, even if I had not expanded a single change set in the first place.</Line>
          <Line>*** Bug 89242 has been marked as a duplicate of this bug. ***</Line>
          <Line>I agree with Tom, this is really nasty an annoying issue.</Line>
          <Line>Fix released to HEAD</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I200411300800

1. have the Synchronize view in outgoing mode and show change sets
2. change file F1 contained in project P
3. add changed file F1 to new change set S
4. change F2 contained in project P (not part of change set S)
5. override and updated F2
==&gt; change set(s) containing P get expanded which is very nasty because I loose
my work context. This context loss is even worse because the selection gets lost
too (see also bug 79907).
Yes, this is a known issue (although this is the first bug report). The 
problem is that we try to preserve expanion and selection accross all modes 
and layouts in the view which means that we need a common way of persisting 
the expansion. We use resources for this. Since P is expanded, it's gets shown 
in all places. This is rather excessive so I will see if I can come up with a 
better measn of preserving expansion.
&gt; (although this is the first bug report)
I'm sure others have spotted this too, but did not track it down to give
reproducible steps. It's one of those bugs I never know for sure whether it's me
or eclipse that is buggy ;-).
This becomes really nasty when in "Incoming" mode with tons of changes in the
same projects. When updating a subset of the displayed change sets, everything
starts to expand, even if I had not expanded a single change set in the first place.
*** Bug 89242 has been marked as a duplicate of this bug. ***
I agree with Tom, this is really nasty an annoying issue.
Fix released to HEAD</WithStack>
    <WithOutStack>I200411300800

1. have the Synchronize view in outgoing mode and show change sets
2. change file F1 contained in project P
3. add changed file F1 to new change set S
4. change F2 contained in project P (not part of change set S)
5. override and updated F2
==&gt; change set(s) containing P get expanded which is very nasty because I loose
my work context. This context loss is even worse because the selection gets lost
too (see also bug 79907).
Yes, this is a known issue (although this is the first bug report). The 
problem is that we try to preserve expanion and selection accross all modes 
and layouts in the view which means that we need a common way of persisting 
the expansion. We use resources for this. Since P is expanded, it's gets shown 
in all places. This is rather excessive so I will see if I can come up with a 
better measn of preserving expansion.
&gt; (although this is the first bug report)
I'm sure others have spotted this too, but did not track it down to give
reproducible steps. It's one of those bugs I never know for sure whether it's me
or eclipse that is buggy ;-).
This becomes really nasty when in "Incoming" mode with tons of changes in the
same projects. When updating a subset of the displayed change sets, everything
starts to expand, even if I had not expanded a single change set in the first place.
*** Bug 89242 has been marked as a duplicate of this bug. ***
I agree with Tom, this is really nasty an annoying issue.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79909" />
    <CreationDate amount="2004-12-01 13:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JFace] Localized resource registries for JFace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- A registry can allocate and deallocate SWT resources given a descriptor</Line>
          <Line>- Resources are reference-counted and shared, allowing different objects with</Line>
          <Line>equivalent descriptors to share resources.</Line>
          <Line>- Everything in the registry can be deallocated with one function call</Line>
          <Line>- The registry should support an open-ended set of resources (and should</Line>
          <Line>initially support, at minimum, Images, Fonts, Colors)</Line>
          <Line>- It should be possible to create a "local registry" that behaves like a regular</Line>
          <Line>registry but actually shares its resources with a global registry.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Please provide improved JFace support for managing SWT resources, with the
following properties:

- A registry can allocate and deallocate SWT resources given a descriptor
- Resources are reference-counted and shared, allowing different objects with
equivalent descriptors to share resources.
- Everything in the registry can be deallocated with one function call
- The registry should support an open-ended set of resources (and should
initially support, at minimum, Images, Fonts, Colors)
- It should be possible to create a "local registry" that behaves like a regular
registry but actually shares its resources with a global registry.

For example, the workbench could offer a local registry as a service to views
and editors. This would allow views and editors to safely allocate and
deallocate SWT resources without any chance of leaking.
Created attachment 16272
Implements this enhancement

Implementation for this enhancement.

(I'm submitting the APIs and JavaDoc for review, but the implementation is
untested. If the API looks okay, I'll write test suites for this.)
Some comments:

How does one get the descriptor object to hold on to? create returns the Image 
font etc.

I think we should avoid the use of the word "resource" - it is pretty much a  
core idea to most people.

I would call SWTResourceException JFaceAllocationException or else people will 
dig through SWT for it.

ColorDescriptor: Would we ever describe this with something other than an RGB?
FontDescriptors should use FontDatas as this can be read from an existing 
font. The current API is too vague to just do it from style bits.

AbstractSWTREgistry has references to  
org.eclipse.ui.part.interfaces.ISwtResources#createImage
(org.eclipse.jface.resource.ImageDescriptor)

I think this is obsolete
Also please consider how this integrates into themes...
Created attachment 16358
Improved fix

Adds Tod's suggestions, and adds new factories that allow an ImageDescriptor to
be created from an existing Image.
Regarding themes:

All of the existing JFace registries should be refactored to store their actual
resources in an external ResourceManager -- this will allow equivalent resources
to be shared across registries... but it won't really help with cleanup.

As long as clients don't call the registry methods that return real resources
(ie: as long as they're using ColorRegistry.getRGB(String) instead of
ColorRegistry.get(String)) then they can use their own ResourceManager to safely
manage the objects returned by the theme... but there's nothing we can do to
improve on the methods that allocate real SWT resources.

I'd suggest writing a more restrictive version of the JFace registries (one that
only maps keys onto descriptors and never allocates or disposes anything), add
methods to ITheme that returns the new version, and deprecate the methods that
that return a ColorRegistry, FontRegistry, etc. 

Alternatively, we could just deprecate individual methods on *Registry, but I
prefer the idea of having a simpler interface where all the methods are leakproof.

This will mean that the Theme will determine which colours and fonts to use, and
the ResourceManager will handle all allocation and deallocation.


Created attachment 16443
Updated patch

Oops. Looks like I sent the wrong attachment last time. This one is correct.
Fixed in HEAD
&gt;I'd suggest writing a more restrictive version of the JFace registries (one 
&gt;that
&gt;only maps keys onto descriptors and never allocates or disposes anything), 
Do you mean less behaviour or more restrictive to the plug-in writer? I think 
a second, lower functionality class would not be useful.

&gt;add methods to ITheme that returns the new version, and deprecate the methods 
&gt;that that return a ColorRegistry, FontRegistry, etc.

If it is just that some of the management in a registry is done elsewhere I am 
not sure that this is of any use.
Adding Nick as he has a fair amount of context
Re: comment 8

Right now, the only useful thing that ImageRegistry does is map symbolic IDs
onto ImageDescriptors. ResourceManager deals with allocation/deallocation much
more efficiently, hence the deprecation on "get".

If mapping strings onto ImageDescriptors is useful, then I was suggesting we
make a new class that only does this without giving the appearance of doing
resource management. This would remove the confusion among people who expect
ImageRegistry to deallocate their Images for them.

&gt;Right now, the only useful thing that ImageRegistry does is map symbolic IDs
&gt;onto ImageDescriptors. ResourceManager deals with allocation/deallocation much
&gt;more efficiently, hence the deprecation on "get".

So how would it be as easy as 

myWidget.setImage(JFaceResources.getImageRegistry().get(MY_CONSTANT)?

There are several cases where people use the public JFace images (like the 
error, warning and info images) and a lot of cases where registries will live 
until stop() is called on the plug-in.

If you think the allocation and deallocation can be done transparently using 
the ResourceManager that is fine but the get() method is very useful for 
people who need to access images whose IDs are API.

I would not be surprised if others use this mechanism to add public images 
across plug-ins as well. Deprecation is heavy handed and indicates a method is 
completely obsolete - I think a note discussing the resource lifecycle issues 
that point to a ResourceManager is more appropriate.

BTW, the deprecation has been removed. I still think it's a good idea, but I
shouldn't have deprecated API in your component without discussing it first.
Sorry. :-(


&gt; So how would it be as easy as 
&gt; 
&gt; myWidget.setImage(JFaceResources.getImageRegistry().get(MY_CONSTANT)?

It wouldn't. In order to deallocate SWT resources earlier, the application needs
to indicate when it's done with them, and that requires more code.

Although allocating/deallocating the image would take more code, it takes less
code to register the images. As long as you're referring to non-api images in
your own plugin (which is a common case), you can simply refer to them using
their path name and delete boilerplate classes like WorkbenchImages.


See bug 82459 for a discussion of the deprecation.
The comments seem to indicate this was fixed in 3.1 M5.
Verified on GTK, I20050217-1200</WithStack>
    <WithOutStack>Please provide improved JFace support for managing SWT resources, with the
following properties:

- A registry can allocate and deallocate SWT resources given a descriptor
- Resources are reference-counted and shared, allowing different objects with
equivalent descriptors to share resources.
- Everything in the registry can be deallocated with one function call
- The registry should support an open-ended set of resources (and should
initially support, at minimum, Images, Fonts, Colors)
- It should be possible to create a "local registry" that behaves like a regular
registry but actually shares its resources with a global registry.

For example, the workbench could offer a local registry as a service to views
and editors. This would allow views and editors to safely allocate and
deallocate SWT resources without any chance of leaking.
Created attachment 16272
Implements this enhancement

Implementation for this enhancement.

(I'm submitting the APIs and JavaDoc for review, but the implementation is
untested. If the API looks okay, I'll write test suites for this.)
Some comments:

How does one get the descriptor object to hold on to? create returns the Image 
font etc.

I think we should avoid the use of the word "resource" - it is pretty much a  
core idea to most people.

I would call SWTResourceException JFaceAllocationException or else people will 
dig through SWT for it.

ColorDescriptor: Would we ever describe this with something other than an RGB?
FontDescriptors should use FontDatas as this can be read from an existing 
font. The current API is too vague to just do it from style bits.

AbstractSWTREgistry has references to  
org.eclipse.ui.part.interfaces.ISwtResources#createImage
(org.eclipse.jface.resource.ImageDescriptor)

I think this is obsolete
Also please consider how this integrates into themes...
Created attachment 16358
Improved fix

Adds Tod's suggestions, and adds new factories that allow an ImageDescriptor to
be created from an existing Image.
Regarding themes:

All of the existing JFace registries should be refactored to store their actual
resources in an external ResourceManager -- this will allow equivalent resources
to be shared across registries... but it won't really help with cleanup.

As long as clients don't call the registry methods that return real resources
(ie: as long as they're using ColorRegistry.getRGB(String) instead of
ColorRegistry.get(String)) then they can use their own ResourceManager to safely
manage the objects returned by the theme... but there's nothing we can do to
improve on the methods that allocate real SWT resources.

I'd suggest writing a more restrictive version of the JFace registries (one that
only maps keys onto descriptors and never allocates or disposes anything), add
methods to ITheme that returns the new version, and deprecate the methods that
that return a ColorRegistry, FontRegistry, etc. 

Alternatively, we could just deprecate individual methods on *Registry, but I
prefer the idea of having a simpler interface where all the methods are leakproof.

This will mean that the Theme will determine which colours and fonts to use, and
the ResourceManager will handle all allocation and deallocation.


Created attachment 16443
Updated patch

Oops. Looks like I sent the wrong attachment last time. This one is correct.
Fixed in HEAD
&gt;I'd suggest writing a more restrictive version of the JFace registries (one 
&gt;that
&gt;only maps keys onto descriptors and never allocates or disposes anything), 
Do you mean less behaviour or more restrictive to the plug-in writer? I think 
a second, lower functionality class would not be useful.

&gt;add methods to ITheme that returns the new version, and deprecate the methods 
&gt;that that return a ColorRegistry, FontRegistry, etc.

If it is just that some of the management in a registry is done elsewhere I am 
not sure that this is of any use.
Adding Nick as he has a fair amount of context
Re: comment 8

Right now, the only useful thing that ImageRegistry does is map symbolic IDs
onto ImageDescriptors. ResourceManager deals with allocation/deallocation much
more efficiently, hence the deprecation on "get".

If mapping strings onto ImageDescriptors is useful, then I was suggesting we
make a new class that only does this without giving the appearance of doing
resource management. This would remove the confusion among people who expect
ImageRegistry to deallocate their Images for them.

&gt;Right now, the only useful thing that ImageRegistry does is map symbolic IDs
&gt;onto ImageDescriptors. ResourceManager deals with allocation/deallocation much
&gt;more efficiently, hence the deprecation on "get".

So how would it be as easy as 

myWidget.setImage(JFaceResources.getImageRegistry().get(MY_CONSTANT)?

There are several cases where people use the public JFace images (like the 
error, warning and info images) and a lot of cases where registries will live 
until stop() is called on the plug-in.

If you think the allocation and deallocation can be done transparently using 
the ResourceManager that is fine but the get() method is very useful for 
people who need to access images whose IDs are API.

I would not be surprised if others use this mechanism to add public images 
across plug-ins as well. Deprecation is heavy handed and indicates a method is 
completely obsolete - I think a note discussing the resource lifecycle issues 
that point to a ResourceManager is more appropriate.

BTW, the deprecation has been removed. I still think it's a good idea, but I
shouldn't have deprecated API in your component without discussing it first.
Sorry. :-(


&gt; So how would it be as easy as 
&gt; 
&gt; myWidget.setImage(JFaceResources.getImageRegistry().get(MY_CONSTANT)?

It wouldn't. In order to deallocate SWT resources earlier, the application needs
to indicate when it's done with them, and that requires more code.

Although allocating/deallocating the image would take more code, it takes less
code to register the images. As long as you're referring to non-api images in
your own plugin (which is a common case), you can simply refer to them using
their path name and delete boilerplate classes like WorkbenchImages.


See bug 82459 for a discussion of the deprecation.
The comments seem to indicate this was fixed in 3.1 M5.
Verified on GTK, I20050217-1200</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79910" />
    <CreationDate amount="2004-12-01 13:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Request for New Plug-in Integration similar to TOAD (from Quest) and XMLSpy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I'm new in Eclipse.  I am very impressed with the mission Eclipse is set to 
achieved.  For Java development, you've already integrated Ant, Junit, CVS, 
etc.  Yet, two common pieces missing are (1) XML editor, validator, and 
transformer using Xalan &amp; Xerces from Apache Org. and (2) SQL IDE like Toad 
from Quest software.  

For #2, you could integrate only the SQL query and scripts editor and 
executioner, but in later phases, you could proceed to provide the plug-in 
integration with TOAD's Procedure Editor and Debugger for stored procs and 
other sophisticated db development.  Backend development is an essential part 
of an application development.

As of now, especially for #2, we still have to juggle with proprietary tools.  
Please add these 2 enhancements to the default Eclipse SDK.

Thanks for a job well-done and look forward to more exciting and useful 
releases of Eclipse features!
Phuong Tran
I'm sorry, but this isn't a Visual Editor enhancement request. It's more of a
request against the entire Eclipse community.

I would suggest the eclipse.foundation newsgroup as maybe a better place to ask
this.
verified and closed for 1.0.2</WithStack>
    <WithOutStack>I'm new in Eclipse.  I am very impressed with the mission Eclipse is set to 
achieved.  For Java development, you've already integrated Ant, Junit, CVS, 
etc.  Yet, two common pieces missing are (1) XML editor, validator, and 
transformer using Xalan &amp; Xerces from Apache Org. and (2) SQL IDE like Toad 
from Quest software.  

For #2, you could integrate only the SQL query and scripts editor and 
executioner, but in later phases, you could proceed to provide the plug-in 
integration with TOAD's Procedure Editor and Debugger for stored procs and 
other sophisticated db development.  Backend development is an essential part 
of an application development.

As of now, especially for #2, we still have to juggle with proprietary tools.  
Please add these 2 enhancements to the default Eclipse SDK.

Thanks for a job well-done and look forward to more exciting and useful 
releases of Eclipse features!
Phuong Tran
I'm sorry, but this isn't a Visual Editor enhancement request. It's more of a
request against the entire Eclipse community.

I would suggest the eclipse.foundation newsgroup as maybe a better place to ask
this.
verified and closed for 1.0.2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79911" />
    <CreationDate amount="2004-12-01 13:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Missing keys in JDT Debug UI plugin.properties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The following keys are missing in the jdt debug ui plugin.properties but are 
ref'd from the plugin.xml:

showConstantsAction.tooltip (twice)
JavaBreakpointITypeMoveParticipant.name
I found the keys present in the properties file.</WithStack>
    <WithOutStack>The following keys are missing in the jdt debug ui plugin.properties but are 
ref'd from the plugin.xml:

showConstantsAction.tooltip (twice)
JavaBreakpointITypeMoveParticipant.name
I found the keys present in the properties file.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79912" />
    <CreationDate amount="2004-12-01 13:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad sizing in LaunchConfigurationsDialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="1267" end="1302" />
        <code>private void initializeSashForm() {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1303" end="1655" />
        <code>if (getSashForm() != null) {
		IDialogSettings settings = getDialogSettings();
		int[] sashWeights;
		int w1, w2;
		w1 = fLaunchConfigurationSelectionArea.computeSize(SWT.DEFAULT, SWT.DEFALT).x;
		w2 = fLaunchConfigurationEditArea.computeSize(SWT.DEFAULT, SWT.DEFAULT).x;
		sashWeights = new int[] {w1, w2};
		getSashForm().setWeights(sashWeights);
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="21">
        <Lines>
          <Line>1) setShellSize uses getShell().getDisplay().getBounds(); for maximum sizes.</Line>
          <Line>This is not correct for multiple monitor case.  See Control.getMonitor().</Line>
          <Line />
          <Line>2) In resize, calculations are being made for the size of tabs but there is no</Line>
          <Line>knowledge of how much spacing appears between the text and the image etc.  This</Line>
          <Line>calculation is quite meaningless.  You should rely on TabFolder.computeSize to</Line>
          <Line>give the correct answer.</Line>
          <Line />
          <Line>3) getInitializeSize is returning a very large number which is not based on the</Line>
          <Line>contents of the dialog and is too big on many platforms.  I would just stick</Line>
          <Line>with the default provided by Window.</Line>
          <Line />
          <Line>4) initializeBounds should call initializeSashForm before calling</Line>
          <Line>super.initializeBounds.  Otherwise, SashForm assumes that all children have the</Line>
          <Line>same weight and this throws off the value calculated by the super.  Having done</Line>
          <Line>this, there is no need to call ensureSelectionAreaWidth or resize (assuming the</Line>
          <Line>sash weights are calculated correctly - see point 5).</Line>
          <Line />
          <Line>5) initializeSashForm should use computeSize to determine the optimal weights.</Line>
          <Line>Call computeSize on the two children that are on the left and the right of the</Line>
          <Line>SashForm and use these as the weights.  This will give the ideal weighting.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Run... Dialog comes up far to big on most platforms.

1) setShellSize uses getShell().getDisplay().getBounds(); for maximum sizes. 
This is not correct for multiple monitor case.  See Control.getMonitor().

2) In resize, calculations are being made for the size of tabs but there is no
knowledge of how much spacing appears between the text and the image etc.  This
calculation is quite meaningless.  You should rely on TabFolder.computeSize to
give the correct answer.

3) getInitializeSize is returning a very large number which is not based on the
contents of the dialog and is too big on many platforms.  I would just stick
with the default provided by Window.

4) initializeBounds should call initializeSashForm before calling
super.initializeBounds.  Otherwise, SashForm assumes that all children have the
same weight and this throws off the value calculated by the super.  Having done
this, there is no need to call ensureSelectionAreaWidth or resize (assuming the
sash weights are calculated correctly - see point 5).

5) initializeSashForm should use computeSize to determine the optimal weights. 
Call computeSize on the two children that are on the left and the right of the
SashForm and use these as the weights.  This will give the ideal weighting.

private void initializeSashForm() {
	if (getSashForm() != null) {
		IDialogSettings settings = getDialogSettings();
		int[] sashWeights;
		int w1, w2;
		w1 = fLaunchConfigurationSelectionArea.computeSize(SWT.DEFAULT, SWT.DEFALT).x;
		w2 = fLaunchConfigurationEditArea.computeSize(SWT.DEFAULT, SWT.DEFAULT).x;
		sashWeights = new int[] {w1, w2};
		getSashForm().setWeights(sashWeights);
	}
Created attachment 20214
patch

First stab at implementing some of VI's suggestions. Patch is not gold. Only
tested on mac so far.
Deferred
reopening to reassign
Kevin, where was this bug to be re-assigned to?
Just bad wording. I threw it back in the debug inbox because it felt like other
work under consideration in this area could result in a different fix to any LCD
sizing issues. 
added new code to HEAD that incorporates the fixes and cleans up the dialog itself

see LaunchConfigurationsDialog
please verify Kevin.
Sizing is no good on a clean workspace. The LCD opens up very tall and narrow.
Mike, see comment #8
fixed in HEAD, provided some default sizing hints in the event we have nothing yet to compute the size on.

see LaunchConfigurationsDialog#resize and #initializeBounds
please verify Kevin.
My LCD fills the entire screen each time I open it. Cool.
Created attachment 35488
patch

having alot of problems with the new SWT sizing, but I think this patch has got it mostly nailed down.

Give it as try Darin W
Works for me on XP
Created attachment 35543
screen shot

The tabs aren't all displayed on mac in a clean workspace. Happens to all launch config types. Dialog just never seems wide enough until I resize.
CC MR comment #15
Limiting the size to 50% of the screen width is causing the mac problem. The computed width of the content area of the dialog is 724, and my screen is 1280 wide. After the math is done the content area is chopped to 451 pixels which is too small to see all the tabs on any launch config type.
Also, the LCD is showing up on the far left side of the screen now, regardless of where eclipse is on the screen.
fixed in HEAD.

as for the layout issue on mac I am not sure what is happening there. The window positions are fine for windows and linux, I will investigate the reasons for the odd mac dialog placement.

please verify Kevin
This still doesn't look good on mac. Will attach screen shot.
Created attachment 35765
screen shot

launch a target on a new workspace.
move the window to the right hand side of the screen
open the LCD with External Tools...
create a new Ant launch config.

Notice:
1 - the dialog is on the far left of my screen.
2 - the main and common tabs are not visible at all.
added to HEAD (I hesitate to say fixed until it passes MAC approval).

changed the type of the tab folder to be CTabFolder, this way if all of the tabs are not showing we have a method to see/access them on all platforms (even MAC).

The positioning of the dialog is updated to use strictly JFace to handle the placement of the dialog, which seems to alleviate the left-side-of the window-issue on MAC.

I will leave the bug open until it has been verified.
please verify Kevin &amp; Darin W
I am satisfied with this now.
verified</WithStack>
    <WithOutStack>The Run... Dialog comes up far to big on most platforms.

1) setShellSize uses getShell().getDisplay().getBounds(); for maximum sizes. 
This is not correct for multiple monitor case.  See Control.getMonitor().

2) In resize, calculations are being made for the size of tabs but there is no
knowledge of how much spacing appears between the text and the image etc.  This
calculation is quite meaningless.  You should rely on TabFolder.computeSize to
give the correct answer.

3) getInitializeSize is returning a very large number which is not based on the
contents of the dialog and is too big on many platforms.  I would just stick
with the default provided by Window.

4) initializeBounds should call initializeSashForm before calling
super.initializeBounds.  Otherwise, SashForm assumes that all children have the
same weight and this throws off the value calculated by the super.  Having done
this, there is no need to call ensureSelectionAreaWidth or resize (assuming the
sash weights are calculated correctly - see point 5).

5) initializeSashForm should use computeSize to determine the optimal weights. 
Call computeSize on the two children that are on the left and the right of the
SashForm and use these as the weights.  This will give the ideal weighting.

private void initializeSashForm() {
	if (getSashForm() != null) {
		IDialogSettings settings = getDialogSettings();
		int[] sashWeights;
		int w1, w2;
		w1 = fLaunchConfigurationSelectionArea.computeSize(SWT.DEFAULT, SWT.DEFALT).x;
		w2 = fLaunchConfigurationEditArea.computeSize(SWT.DEFAULT, SWT.DEFAULT).x;
		sashWeights = new int[] {w1, w2};
		getSashForm().setWeights(sashWeights);
	}
Created attachment 20214
patch

First stab at implementing some of VI's suggestions. Patch is not gold. Only
tested on mac so far.
Deferred
reopening to reassign
Kevin, where was this bug to be re-assigned to?
Just bad wording. I threw it back in the debug inbox because it felt like other
work under consideration in this area could result in a different fix to any LCD
sizing issues. 
added new code to HEAD that incorporates the fixes and cleans up the dialog itself

see LaunchConfigurationsDialog
please verify Kevin.
Sizing is no good on a clean workspace. The LCD opens up very tall and narrow.
Mike, see comment #8
fixed in HEAD, provided some default sizing hints in the event we have nothing yet to compute the size on.

see LaunchConfigurationsDialog#resize and #initializeBounds
please verify Kevin.
My LCD fills the entire screen each time I open it. Cool.
Created attachment 35488
patch

having alot of problems with the new SWT sizing, but I think this patch has got it mostly nailed down.

Give it as try Darin W
Works for me on XP
Created attachment 35543
screen shot

The tabs aren't all displayed on mac in a clean workspace. Happens to all launch config types. Dialog just never seems wide enough until I resize.
CC MR comment #15
Limiting the size to 50% of the screen width is causing the mac problem. The computed width of the content area of the dialog is 724, and my screen is 1280 wide. After the math is done the content area is chopped to 451 pixels which is too small to see all the tabs on any launch config type.
Also, the LCD is showing up on the far left side of the screen now, regardless of where eclipse is on the screen.
fixed in HEAD.

as for the layout issue on mac I am not sure what is happening there. The window positions are fine for windows and linux, I will investigate the reasons for the odd mac dialog placement.

please verify Kevin
This still doesn't look good on mac. Will attach screen shot.
Created attachment 35765
screen shot

launch a target on a new workspace.
move the window to the right hand side of the screen
open the LCD with External Tools...
create a new Ant launch config.

Notice:
1 - the dialog is on the far left of my screen.
2 - the main and common tabs are not visible at all.
added to HEAD (I hesitate to say fixed until it passes MAC approval).

changed the type of the tab folder to be CTabFolder, this way if all of the tabs are not showing we have a method to see/access them on all platforms (even MAC).

The positioning of the dialog is updated to use strictly JFace to handle the placement of the dialog, which seems to alleviate the left-side-of the window-issue on MAC.

I will leave the bug open until it has been verified.
please verify Kevin &amp; Darin W
I am satisfied with this now.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79913" />
    <CreationDate amount="2004-12-01 13:44:00 -0500" />
    <DupId amount="80152" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Concurrency support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Many debug architectures require communicating with a remote debug target. The 
debug user interface needs to be robust in the face of latent and unreliable 
connections. To avoid blocking the user interface, the debug platform is 
exploiting the use of background jobs to perform operations and communicate 
with debuggers. As the opportunity for concurrent requests against debuggers 
increases, the platform must provide support for serializing conflicting 
requests against debuggers - for example a read operation to render a stack 
frame and a request that would invalidate the stack frame by resuming its 
thread. The debug platform needs to provide API and a set of guidlines to 
follow when scheduling concurrent operations and requests against debuggers.
Created attachment 16273
patch in progress
Created attachment 16274
patch in progress - debug.ui
Created attachment 16275
patch in progress - jdt.debug
Created attachment 16276
patch in progress - jdt.debug.ui
Created a branch with work in progress for these plug-ins:

* org.eclipse.deubg.core
* org.eclipse.deubg.ui
* org.eclipse.jdt.deubg
* org.eclipse.jdt.deubg.ui

The branch name is r3_1_debug_concurrency_branch
Discoveries:

* A debug model may already implement its own concurrency/thread safe support 
via synchronization/locking. When combined with the locks proposed in this 
feature request, two sets of locks are active which could cause deadlocks. 
I.e. the debug UI obtains a rule lock on a thread, and then needs VM lock on 
an object, while a debug element maintains a VM lock on an object and needs a 
rule lock.
* Obtaining locks at the client (debug UI) end is very agressive. I.e. 
obtaining an access lock to generate a label is agressive since it is possible 
that the information is cached in the debug element, and requires no 
communication with the target. Only the model knows when/if 
communication/locking is required.
* Obtaining locks has a performance hit. For each access, rather than an API 
call an adapter must be obtained, a rule generated, and a lock obtained on the 
rule, and then the API call followed by the release.
Marking as dup of plan item bug.

*** This bug has been marked as a duplicate of 80152 ***</WithStack>
    <WithOutStack>Many debug architectures require communicating with a remote debug target. The 
debug user interface needs to be robust in the face of latent and unreliable 
connections. To avoid blocking the user interface, the debug platform is 
exploiting the use of background jobs to perform operations and communicate 
with debuggers. As the opportunity for concurrent requests against debuggers 
increases, the platform must provide support for serializing conflicting 
requests against debuggers - for example a read operation to render a stack 
frame and a request that would invalidate the stack frame by resuming its 
thread. The debug platform needs to provide API and a set of guidlines to 
follow when scheduling concurrent operations and requests against debuggers.
Created attachment 16273
patch in progress
Created attachment 16274
patch in progress - debug.ui
Created attachment 16275
patch in progress - jdt.debug
Created attachment 16276
patch in progress - jdt.debug.ui
Created a branch with work in progress for these plug-ins:

* org.eclipse.deubg.core
* org.eclipse.deubg.ui
* org.eclipse.jdt.deubg
* org.eclipse.jdt.deubg.ui

The branch name is r3_1_debug_concurrency_branch
Discoveries:

* A debug model may already implement its own concurrency/thread safe support 
via synchronization/locking. When combined with the locks proposed in this 
feature request, two sets of locks are active which could cause deadlocks. 
I.e. the debug UI obtains a rule lock on a thread, and then needs VM lock on 
an object, while a debug element maintains a VM lock on an object and needs a 
rule lock.
* Obtaining locks at the client (debug UI) end is very agressive. I.e. 
obtaining an access lock to generate a label is agressive since it is possible 
that the information is cached in the debug element, and requires no 
communication with the target. Only the model knows when/if 
communication/locking is required.
* Obtaining locks has a performance hit. For each access, rather than an API 
call an adapter must be obtained, a rule generated, and a lock obtained on the 
rule, and then the API call followed by the release.
Marking as dup of plan item bug.

*** This bug has been marked as a duplicate of 80152 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79914" />
    <CreationDate amount="2004-12-01 13:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>o.e.h.trace.sample plugin should not require o.e.h.sdb plugin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>o.e.h.trace.sample plugin cannot have dependency on o.e.h.sdb as o.e.h.sdb is 
to be replaced in downstream product. The code of trace.sample need to be 
rework to make it independent on sdb, mainly in 
org.eclipse.hyades.trace.sample.loganalyzer.AnalyzeLogAction class
fixed in HEAD
close bug</WithStack>
    <WithOutStack>o.e.h.trace.sample plugin cannot have dependency on o.e.h.sdb as o.e.h.sdb is 
to be replaced in downstream product. The code of trace.sample need to be 
rework to make it independent on sdb, mainly in 
org.eclipse.hyades.trace.sample.loganalyzer.AnalyzeLogAction class
fixed in HEAD
close bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79915" />
    <CreationDate amount="2004-12-01 14:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Probe compiler should tag Probekit objects with line numbers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The probe compiler can tag the EObjects that make up the probe source code with 
EMF "Adapter" objects that tell what generated Java source lines came from each 
element of the probe source. With this information, a caller can map errors 
reported by the Java compiler back to the EObjects that caused them.
Checked in new code. Callers can use object.eAdapters() to get the adapters for 
a given EObject (that is, Probe and its constituents) and find those which are 
of type org.eclipse.hyades.probekit.LocationAdapter.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The probe compiler can tag the EObjects that make up the probe source code with 
EMF "Adapter" objects that tell what generated Java source lines came from each 
element of the probe source. With this information, a caller can map errors 
reported by the Java compiler back to the EObjects that caused them.
Checked in new code. Callers can use object.eAdapters() to get the adapters for 
a given EObject (that is, Probe and its constituents) and find those which are 
of type org.eclipse.hyades.probekit.LocationAdapter.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79916" />
    <CreationDate amount="2004-12-01 14:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] isDisposed check needed in AbstractTreeViewer#internalRemove</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211436">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2767)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2692)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2663)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:388)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:290)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TreeItem.getExpanded(TreeItem.java:319)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.TreeViewer.getExpanded(TreeViewer.java:154)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.AbstractTreeViewer.internalRemove(AbstractTreeViewer.java:1138)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.AbstractTreeViewer.access$1(AbstractTreeViewer.java:1115)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer$6.run(AbstractTreeViewer.java:1240)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1064)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.remove(AbstractTreeViewer.java:1238)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.doRemove(AbstractSynchronizeModelProvider.java:871)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.removeFromViewer(AbstractSynchronizeModelProvider.java:761)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ui.synchronize.SynchronizeModelProvider.removeFromViewer(SynchronizeModelProvider.java:132)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ui.synchronize.CompressedFoldersModelProvider.handleResourceRemovals(CompressedFoldersModelProvider.java:288)</Frame>
          <Frame depth="16">org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.handleChanges(AbstractSynchronizeModelProvider.java:654)</Frame>
          <Frame depth="17">org.eclipse.team.internal.ui.synchronize.SynchronizeModelProvider.handleChanges(SynchronizeModelProvider.java:188)</Frame>
          <Frame depth="18">org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$3.run(SynchronizeModelUpdateHandler.java:514)</Frame>
          <Frame depth="19">org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.internalRunViewUpdate(SynchronizeModelUpdateHandler.java:587)</Frame>
          <Frame depth="20">org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.access$1(SynchronizeModelUpdateHandler.java:575)</Frame>
          <Frame depth="21">org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$5.run(SynchronizeModelUpdateHandler.java:554)</Frame>
          <Frame depth="22">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="23">org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$4.run(SynchronizeModelUpdateHandler.java:552)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:145)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)</Frame>
          <Frame depth="30">org.eclipse.jface.window.Window.runEventLoop(Window.java:718)</Frame>
          <Frame depth="31">org.eclipse.jface.window.Window.open(Window.java:696)</Frame>
          <Frame depth="32">org.eclipse.team.internal.ui.actions.ConfigureProjectAction$1.run(ConfigureProjectAction.java:55)</Frame>
          <Frame depth="33">org.eclipse.team.internal.ui.actions.TeamAction$1.run(TeamAction.java:193)</Frame>
          <Frame depth="34">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="35">org.eclipse.team.internal.ui.actions.TeamAction.run(TeamAction.java:190)</Frame>
          <Frame depth="36">org.eclipse.team.internal.ui.actions.ConfigureProjectAction.run(ConfigureProjectAction.java:60)</Frame>
          <Frame depth="37">org.eclipse.ui.actions.ActionDelegate.runWithEvent(ActionDelegate.java:70)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:288)</Frame>
          <Frame depth="39">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)</Frame>
          <Frame depth="40">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)</Frame>
          <Frame depth="41">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:419)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="49">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="51">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="52">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="53">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="54">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="55">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="57">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="58">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="59">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Bug 78951 has the following stack trace. I have been unable to reproduce but 
it is failing on a getExpanded on a parent item. It is possible that the paent 
was one of the elements passed and was disposed. The removal code handles this 
but the "appending dummy" portion doesn't. Here's the trace. I will attach a 
patch.

!ENTRY org.eclipse.ui 4 0 2004-11-24 11:39:30.125
!MESSAGE Widget is disposed
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:2767)
	at org.eclipse.swt.SWT.error(SWT.java:2692)
	at org.eclipse.swt.SWT.error(SWT.java:2663)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:388)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:290)
	at org.eclipse.swt.widgets.TreeItem.getExpanded(TreeItem.java:319)
	at org.eclipse.jface.viewers.TreeViewer.getExpanded
(TreeViewer.java:154)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRemove
(AbstractTreeViewer.java:1138)
	at org.eclipse.jface.viewers.AbstractTreeViewer.access$1
(AbstractTreeViewer.java:1115)
	at org.eclipse.jface.viewers.AbstractTreeViewer$6.run
(AbstractTreeViewer.java:1240)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:1064)
	at org.eclipse.jface.viewers.AbstractTreeViewer.remove
(AbstractTreeViewer.java:1238)
	at 
org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.doRem
ove(AbstractSynchronizeModelProvider.java:871)
	at 
org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.remov
eFromViewer(AbstractSynchronizeModelProvider.java:761)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelProvider.removeFromVie
wer(SynchronizeModelProvider.java:132)
	at 
org.eclipse.team.internal.ui.synchronize.CompressedFoldersModelProvider.handleR
esourceRemovals(CompressedFoldersModelProvider.java:288)
	at 
org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.handl
eChanges(AbstractSynchronizeModelProvider.java:654)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelProvider.handleChanges
(SynchronizeModelProvider.java:188)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$3.run
(SynchronizeModelUpdateHandler.java:514)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.internal
RunViewUpdate(SynchronizeModelUpdateHandler.java:587)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.access$1
(SynchronizeModelUpdateHandler.java:575)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$5.run
(SynchronizeModelUpdateHandler.java:554)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at 
org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$4.run
(SynchronizeModelUpdateHandler.java:552)
	at org.eclipse.ui.internal.UILockListener.doPendingWork
(UILockListener.java:145)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:718)
	at org.eclipse.jface.window.Window.open(Window.java:696)
	at org.eclipse.team.internal.ui.actions.ConfigureProjectAction$1.run
(ConfigureProjectAction.java:55)
	at org.eclipse.team.internal.ui.actions.TeamAction$1.run
(TeamAction.java:193)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.team.internal.ui.actions.TeamAction.run
(TeamAction.java:190)
	at org.eclipse.team.internal.ui.actions.ConfigureProjectAction.run
(ConfigureProjectAction.java:60)
	at org.eclipse.ui.actions.ActionDelegate.runWithEvent
(ActionDelegate.java:70)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:288)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:555)
	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:505)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent
(ActionContributionItem.java:419)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:102)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
Created attachment 16277
Patch that adds an isDisposed check
Added a check to the internalRemove method in build &gt; 20050117
Verified in 20050215-2300</WithStack>
    <WithOutStack>Bug 78951 has the following stack trace. I have been unable to reproduce but 
it is failing on a getExpanded on a parent item. It is possible that the paent 
was one of the elements passed and was disposed. The removal code handles this 
but the "appending dummy" portion doesn't. Here's the trace. I will attach a 
patch.

!ENTRY org.eclipse.ui 4 0 2004-11-24 11:39:30.125
!MESSAGE Widget is disposed
!STACK 0

Created attachment 16277
Patch that adds an isDisposed check
Added a check to the internalRemove method in build &gt; 20050117
Verified in 20050215-2300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79917" />
    <CreationDate amount="2004-12-01 14:26:00 -0500" />
    <DupId amount="33452" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ObjectCollectedException while evaluating conditional breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="295" end="330" />
        <code>System.out.println("open " + this);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- set breakpoints on the FileInputStream(File) and FileOutputStream(File)</Line>
          <Line>constructors, and the corresponding close() methods</Line>
          <Line>- made these conditional breakpoints with conditions like the following:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- in the target, did a refactoring rename</Line>
          <Line>- I got some output, but then it failed with a Conditional Breakpoint Error</Line>
          <Line>dialog stating: com.sun.jdi.ObjectCollectedException occurred invoking method</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a without -Xj9

- set breakpoints on the FileInputStream(File) and FileOutputStream(File)
constructors, and the corresponding close() methods
- made these conditional breakpoints with conditions like the following:
System.out.println("open " + this);
return false;

- in the target, did a refactoring rename
- I got some output, but then it failed with a Conditional Breakpoint Error
dialog stating: com.sun.jdi.ObjectCollectedException occurred invoking method

Is there any way to prevent the object from being GCed until the expression has
been evaluated?
There is a solution that we currently are not using - see comment#12 in bug 
33452.

*** This bug has been marked as a duplicate of 33452 ***</WithStack>
    <WithOutStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a without -Xj9

- set breakpoints on the FileInputStream(File) and FileOutputStream(File)
constructors, and the corresponding close() methods
- made these conditional breakpoints with conditions like the following:
System.out.println("open " + this);
return false;

- in the target, did a refactoring rename
- I got some output, but then it failed with a Conditional Breakpoint Error
dialog stating: com.sun.jdi.ObjectCollectedException occurred invoking method

Is there any way to prevent the object from being GCed until the expression has
been evaluated?
There is a solution that we currently are not using - see comment#12 in bug 
33452.

*** This bug has been marked as a duplicate of 33452 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79918" />
    <CreationDate amount="2004-12-01 14:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Eclipse crashes when you start Mozilla Firefox</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341211442">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2587)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.init(Image.java:1549)</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.Image.init(Image.java:1695)</Frame>
          <Frame depth="5">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:555)</Frame>
          <Frame depth="6">org.eclipse.swt.graphics.ImageData.fillGradientRectangle(ImageData.java:3548)</Frame>
          <Frame depth="7">org.eclipse.swt.graphics.GC.fillGradientRectangle(GC.java:1702)</Frame>
          <Frame depth="8">org.eclipse.swt.custom.CBanner.onPaint(CBanner.java:460)</Frame>
          <Frame depth="9">org.eclipse.swt.custom.CBanner$1.handleEvent(CBanner.java:116)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:805)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Control.windowProc(Control.java:3020)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="17">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="18">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1435)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)</Frame>
          <Frame depth="23">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="25">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="30">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211442">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.graphics.Image.init(Image.java:1368)</Frame>
          <Frame depth="2">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:161)</Frame>
          <Frame depth="3">org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:5676)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5072)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4752)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:805)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Control.windowProc(Control.java:3020)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="13">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="14">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop(EventLoopProgressMonitor.java:123)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.internalWorked(EventLoopProgressMonitor.java:90)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.SubProgressMonitor.worked(SubProgressMonitor.java:173)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.core.JavaModelOperation.worked(JavaModelOperation.java:829)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:156)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)</Frame>
          <Frame depth="28">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:317)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:905)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$2.execute(CompilationUnitDocumentProvider.java:951)</Frame>
          <Frame depth="33">org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:126)</Frame>
          <Frame depth="34">org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:68)</Frame>
          <Frame depth="35">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:98)</Frame>
          <Frame depth="36">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)</Frame>
          <Frame depth="37">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:110)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:73)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:63)</Frame>
          <Frame depth="40">org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:440)</Frame>
          <Frame depth="41">org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:699)</Frame>
          <Frame depth="42">org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3539)</Frame>
          <Frame depth="43">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1357)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1410)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1261)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1164)</Frame>
          <Frame depth="47">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:322)</Frame>
          <Frame depth="48">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:269)</Frame>
          <Frame depth="49">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)</Frame>
          <Frame depth="50">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="51">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1799)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1170)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1281)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.Workbench$11.run(Workbench.java:533)</Frame>
          <Frame depth="56">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:504)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:422)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.access$8(Workbench.java:413)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:598)</Frame>
          <Frame depth="62">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.close(Workbench.java:596)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose(WorkbenchConfigurer.java:153)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.ide.IDEExceptionHandler.closeWorkbench(IDEExceptionHandler.java:122)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEExceptionHandler.handleException(IDEExceptionHandler.java:101)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.eventLoopException(IDEWorkbenchAdvisor.java:241)</Frame>
          <Frame depth="68">org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:62)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1439)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)</Frame>
          <Frame depth="72">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="74">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="75">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="76">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="77">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="78">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="79">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="80">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="81">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="82">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211442">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2616)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2587)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:279)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.ToolItem.createDisabledImage(ToolItem.java:195)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.ToolItem.updateImages(ToolItem.java:794)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.ToolItem.setEnabled(ToolItem.java:556)</Frame>
          <Frame depth="7">org.eclipse.jface.action.StatusLine.setCancelEnabled(StatusLine.java:432)</Frame>
          <Frame depth="8">org.eclipse.jface.action.StatusLineManager.setCancelEnabled(StatusLineManager.java:236)</Frame>
          <Frame depth="9">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:660)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1799)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1170)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1281)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench$11.run(Workbench.java:533)</Frame>
          <Frame depth="14">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:504)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:422)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.access$8(Workbench.java:413)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:598)</Frame>
          <Frame depth="20">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.close(Workbench.java:596)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose(WorkbenchConfigurer.java:153)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ide.IDEExceptionHandler.closeWorkbench(IDEExceptionHandler.java:122)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.ide.IDEExceptionHandler.handleException(IDEExceptionHandler.java:101)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.eventLoopException(IDEWorkbenchAdvisor.java:241)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:62)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1439)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)</Frame>
          <Frame depth="30">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="32">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="37">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="38">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.run(Main.java:644)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.main(Main.java:628)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>start eclipse.  Start editing a java file.  Start Mozilla Firefox version 1+. 
Eclipse crashes and also leaves trash on the screen.  Mozilla window is missing
pieces.  Here is the log.


!SESSION Dec 01, 2004 11:22:54.445 ---------------------------------------------
eclipse.buildId=I200408122000
java.version=1.4.2_05
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.ui 4 4 Dec 01, 2004 11:22:54.445
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Dec 01, 2004 11:22:54.546
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2717)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.SWT.error(SWT.java:2587)
	at org.eclipse.swt.graphics.Image.init(Image.java:1549)
	at org.eclipse.swt.graphics.Image.init(Image.java:1695)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:555)
	at org.eclipse.swt.graphics.ImageData.fillGradientRectangle(ImageData.java:3548)
	at org.eclipse.swt.graphics.GC.fillGradientRectangle(GC.java:1702)
	at org.eclipse.swt.custom.CBanner.onPaint(CBanner.java:460)
	at org.eclipse.swt.custom.CBanner$1.handleEvent(CBanner.java:116)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:805)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3020)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1435)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.ui 4 4 Dec 01, 2004 11:22:55.357
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Dec 01, 2004 11:22:55.357
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2717)
	at org.eclipse.swt.graphics.Image.init(Image.java:1368)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:161)
	at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:5676)
	at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5072)
	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4752)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:805)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3020)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1467)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at
org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop(EventLoopProgressMonitor.java:123)
	at
org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.internalWorked(EventLoopProgressMonitor.java:90)
	at
org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)
	at
org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)
	at
org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)
	at
org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)
	at
org.eclipse.core.runtime.ProgressMonitorWrapper.internalWorked(ProgressMonitorWrapper.java:94)
	at
org.eclipse.core.runtime.SubProgressMonitor.internalWorked(SubProgressMonitor.java:147)
	at org.eclipse.core.runtime.SubProgressMonitor.worked(SubProgressMonitor.java:173)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.worked(JavaModelOperation.java:829)
	at
org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:156)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)
	at
org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:317)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:905)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$2.execute(CompilationUnitDocumentProvider.java:951)
	at
org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:126)
	at
org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:68)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:98)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:110)
	at
org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:73)
	at
org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:63)
	at
org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:440)
	at
org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:699)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:3539)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1357)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1410)
	at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1261)
	at org.eclipse.ui.internal.EditorManager$10.run(EditorManager.java:1164)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:322)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:269)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1799)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1170)
	at org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1281)
	at org.eclipse.ui.internal.Workbench$11.run(Workbench.java:533)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:504)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:422)
	at org.eclipse.ui.internal.Workbench.access$8(Workbench.java:413)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:598)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:596)
	at
org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose(WorkbenchConfigurer.java:153)
	at
org.eclipse.ui.internal.ide.IDEExceptionHandler.closeWorkbench(IDEExceptionHandler.java:122)
	at
org.eclipse.ui.internal.ide.IDEExceptionHandler.handleException(IDEExceptionHandler.java:101)
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.eventLoopException(IDEWorkbenchAdvisor.java:241)
	at
org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:62)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1439)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

!ENTRY org.eclipse.osgi Dec 01, 2004 11:22:55.507
!MESSAGE Application error
!STACK 1
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2717)
	at org.eclipse.swt.SWT.error(SWT.java:2616)
	at org.eclipse.swt.SWT.error(SWT.java:2587)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:279)
	at org.eclipse.swt.widgets.ToolItem.createDisabledImage(ToolItem.java:195)
	at org.eclipse.swt.widgets.ToolItem.updateImages(ToolItem.java:794)
	at org.eclipse.swt.widgets.ToolItem.setEnabled(ToolItem.java:556)
	at org.eclipse.jface.action.StatusLine.setCancelEnabled(StatusLine.java:432)
	at
org.eclipse.jface.action.StatusLineManager.setCancelEnabled(StatusLineManager.java:236)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:660)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1799)
	at
org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:1170)
	at org.eclipse.ui.internal.EditorManager.saveAll(EditorManager.java:1281)
	at org.eclipse.ui.internal.Workbench$11.run(Workbench.java:533)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:504)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:422)
	at org.eclipse.ui.internal.Workbench.access$8(Workbench.java:413)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:598)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:596)
	at
org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose(WorkbenchConfigurer.java:153)
	at
org.eclipse.ui.internal.ide.IDEExceptionHandler.closeWorkbench(IDEExceptionHandler.java:122)
	at
org.eclipse.ui.internal.ide.IDEExceptionHandler.handleException(IDEExceptionHandler.java:101)
	at
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.eventLoopException(IDEWorkbenchAdvisor.java:241)
	at
org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:62)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1439)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1406)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:263)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)
I run Eclipse and Firefox side by side on a daily basis, never saw this
happening. This is usually due to some plug-in leaking OS handles. Are you using
only plug-ins in the Eclipse SDK? Any other resource-intensive applications
running at the same time? Can you reproduce this after a reboot?

Does eclipse crash immediately after Firefox is started or can you continue to
use it for some time?  Passing to SWT for comment.
I'm assigning this to Cornu cause he is responsible by the Browser widget. But 
I don't think he can do anything. I think your system doens't have enough 
memory.

Let us know about your hardware and versio/distribution of your linux box.
Thanks.

Note, this is a windows bug :)
Allan: does upgrading to the most recent Eclipse integration build change 
anything?
e.g
http://download.eclipse.org/downloads/drops/I-I20041201-200412011139/index.php
It doesn't look like the browser is the cause.  Someone is leaking and Windows 
is running out of resources.
The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.</WithStack>
    <WithOutStack>start eclipse.  Start editing a java file.  Start Mozilla Firefox version 1+. 
Eclipse crashes and also leaves trash on the screen.  Mozilla window is missing
pieces.  Here is the log.


!SESSION Dec 01, 2004 11:22:54.445 ---------------------------------------------
eclipse.buildId=I200408122000
java.version=1.4.2_05
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US

!ENTRY org.eclipse.ui 4 4 Dec 01, 2004 11:22:54.445
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Dec 01, 2004 11:22:54.546
!MESSAGE No more handles
!STACK 0

!ENTRY org.eclipse.ui 4 4 Dec 01, 2004 11:22:55.357
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Dec 01, 2004 11:22:55.357
!MESSAGE No more handles
!STACK 0

!ENTRY org.eclipse.osgi Dec 01, 2004 11:22:55.507
!MESSAGE Application error
!STACK 1

I run Eclipse and Firefox side by side on a daily basis, never saw this
happening. This is usually due to some plug-in leaking OS handles. Are you using
only plug-ins in the Eclipse SDK? Any other resource-intensive applications
running at the same time? Can you reproduce this after a reboot?

Does eclipse crash immediately after Firefox is started or can you continue to
use it for some time?  Passing to SWT for comment.
I'm assigning this to Cornu cause he is responsible by the Browser widget. But 
I don't think he can do anything. I think your system doens't have enough 
memory.

Let us know about your hardware and versio/distribution of your linux box.
Thanks.

Note, this is a windows bug :)
Allan: does upgrading to the most recent Eclipse integration build change 
anything?
e.g
http://download.eclipse.org/downloads/drops/I-I20041201-200412011139/index.php
It doesn't look like the browser is the cause.  Someone is leaking and Windows 
is running out of resources.
The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79919" />
    <CreationDate amount="2004-12-01 14:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Process terminated, VM left hanging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341211445">
        <Exception>com.sun.jdi.VMDisconnectedException</Exception>
        <Reason>Got IOException from Virtual Machine</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)</Frame>
          <Frame depth="3">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)</Frame>
          <Frame depth="4">org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount(ThreadReferenceImpl.java:147)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount(JDIThread.java:629)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.model.JDIThread.createAllStackFrames(JDIThread.java:543)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:409)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:515)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1018)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$5.run(LaunchViewEventHandler.java:540)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="18">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211445">
        <Exception>com.sun.jdi.VMDisconnectedException</Exception>
        <Reason>Got IOException from Virtual Machine</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)</Frame>
          <Frame depth="3">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)</Frame>
          <Frame depth="4">org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount(ThreadReferenceImpl.java:147)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount(JDIThread.java:629)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.model.JDIThread.createAllStackFrames(JDIThread.java:543)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:409)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:515)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1018)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$5.run(LaunchViewEventHandler.java:540)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="18">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a with -Xj9

Every time I launch the target eclipse now (using F11), I get the following.
I was also seeing this without having -Xj9 for the target vm.
It happens immediately after pressing F11.

!ENTRY org.eclipse.debug.ui 4 120 2004-12-01 14:52:02.596
!MESSAGE Error logged from Debug UI: 
!STACK 1
org.eclipse.debug.core.DebugException[5010]:
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at
org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)
	at
org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount(ThreadReferenceImpl.java:147)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount(JDIThread.java:629)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.createAllStackFrames(JDIThread.java:543)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:409)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:515)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1018)
	at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$5.run(LaunchViewEventHandler.java:540)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
!SUBENTRY 1 org.eclipse.jdt.debug 4 5010 2004-12-01 14:52:02.636
!MESSAGE com.sun.jdi.VMDisconnectedException: Got IOException from Virtual
Machine occurred retrieving frame count.
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at
org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)
	at
org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount(ThreadReferenceImpl.java:147)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount(JDIThread.java:629)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.createAllStackFrames(JDIThread.java:543)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:409)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:515)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1018)
	at
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$5.run(LaunchViewEventHandler.java:540)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
Nick - it looks like there may be a disconnected target lying around (not 
removed from the launch manager properly?) If you re-start your workspace, do 
these "VM disconnected" problems disappear?
Yes, I had another disconnected VM lying around (see one of my earlier PRs from
today).

If I restart, the problem goes away.

So the disconnected VM is not fully dead?

The disconnected VM was still attempting to carry out requests... So the bug 
is that the VM did not clean up properly. The process terminated, but the VM 
never received notification, and did not know it was dead.
*** Bug 79920 has been marked as a duplicate of this bug. ***
See bug 79896 for the original cause.  The screen shot there shows that somebody
in the Debug view knows that the VM is gone.

We should be able to do a better job of this... Currently, the VM only notices 
that it has termianted/disconnected when notified via JDI events. However, it 
its associated process terminates, we should ensure that the VM knows that it 
has been disconnected (first wait for the notification, but if it does not 
arrive in a reasonable amount of time, assume the backend has died).
*** Bug 90417 has been marked as a duplicate of this bug. ***
Fixed in JDIDebugTarget and EventDispatcher.

When a VM's associated process termiantes a job is scheduled to cleanup the 
target in case it does not receive a terminate event. The job is delayed based 
on the communication timeout being used for debugging (default 3 seconds).

I changed the EventDispatcher to read events from the target in a non-blocking 
fashions (delays a second at most), such that the event dispatcher can be 
shutdown in the case that a target goes south.
Please verify, Kevin.
verified
*** Bug 91106 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a with -Xj9

Every time I launch the target eclipse now (using F11), I get the following.
I was also seeing this without having -Xj9 for the target vm.
It happens immediately after pressing F11.

!ENTRY org.eclipse.debug.ui 4 120 2004-12-01 14:52:02.596
!MESSAGE Error logged from Debug UI: 
!STACK 1
org.eclipse.debug.core.DebugException[5010]:
!SUBENTRY 1 org.eclipse.jdt.debug 4 5010 2004-12-01 14:52:02.636
!MESSAGE com.sun.jdi.VMDisconnectedException: Got IOException from Virtual
Machine occurred retrieving frame count.
!STACK 0

Nick - it looks like there may be a disconnected target lying around (not 
removed from the launch manager properly?) If you re-start your workspace, do 
these "VM disconnected" problems disappear?
Yes, I had another disconnected VM lying around (see one of my earlier PRs from
today).

If I restart, the problem goes away.

So the disconnected VM is not fully dead?

The disconnected VM was still attempting to carry out requests... So the bug 
is that the VM did not clean up properly. The process terminated, but the VM 
never received notification, and did not know it was dead.
*** Bug 79920 has been marked as a duplicate of this bug. ***
See bug 79896 for the original cause.  The screen shot there shows that somebody
in the Debug view knows that the VM is gone.

We should be able to do a better job of this... Currently, the VM only notices 
that it has termianted/disconnected when notified via JDI events. However, it 
its associated process terminates, we should ensure that the VM knows that it 
has been disconnected (first wait for the notification, but if it does not 
arrive in a reasonable amount of time, assume the backend has died).
*** Bug 90417 has been marked as a duplicate of this bug. ***
Fixed in JDIDebugTarget and EventDispatcher.

When a VM's associated process termiantes a job is scheduled to cleanup the 
target in case it does not receive a terminate event. The job is delayed based 
on the communication timeout being used for debugging (default 3 seconds).

I changed the EventDispatcher to read events from the target in a non-blocking 
fashions (delays a second at most), such that the event dispatcher can be 
shutdown in the case that a target goes south.
Please verify, Kevin.
verified
*** Bug 91106 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79920" />
    <CreationDate amount="2004-12-01 14:59:00 -0500" />
    <DupId amount="79919" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Unable to create class prepare request" when reenabling breakpoints</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341211449">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Unable to create class prepare request -
VM disconnected.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:295)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:253)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:224)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:1011)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:987)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:966)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.createRequests(JavaBreakpoint.java:496)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.addToTarget(JavaBreakpoint.java:477)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.breakpointManagerEnablementChanged(JDIDebugTarget.java:2145)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.run(BreakpointManager.java:938)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.notify(BreakpointManager.java:953)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.core.BreakpointManager.setEnabled(BreakpointManager.java:900)</Frame>
          <Frame depth="14">org.eclipse.debug.internal.ui.actions.SkipAllBreakpointsAction.run(SkipAllBreakpointsAction.java:53)</Frame>
          <Frame depth="15">org.eclipse.jface.action.Action.runWithEvent(Action.java:989)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="26">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211449">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Unable to create class prepare request -
VM disconnected.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:295)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:253)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:224)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:1011)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:987)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:966)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.createRequests(JavaBreakpoint.java:496)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.addToTarget(JavaBreakpoint.java:477)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.breakpointManagerEnablementChanged(JDIDebugTarget.java:2145)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.run(BreakpointManager.java:938)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.notify(BreakpointManager.java:953)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.core.BreakpointManager.setEnabled(BreakpointManager.java:900)</Frame>
          <Frame depth="14">org.eclipse.debug.internal.ui.actions.SkipAllBreakpointsAction.run(SkipAllBreakpointsAction.java:53)</Frame>
          <Frame depth="15">org.eclipse.jface.action.Action.runWithEvent(Action.java:989)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="26">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- had 4 breakpoints, all with conditions, all on binary classes</Line>
          <Line>- had Skip All Breakpoints selected</Line>
          <Line>- launched target</Line>
          <Line>- pressed Skip All Breakpoints to turn it off</Line>
          <Line>- got the following</Line>
          <Line>- the VM is definitely still connected</Line>
          <Line>- the breakpoints appear to have been properly installed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a with -Xj9

- had 4 breakpoints, all with conditions, all on binary classes
- had Skip All Breakpoints selected
- launched target
- pressed Skip All Breakpoints to turn it off
- got the following
- the VM is definitely still connected
- the breakpoints appear to have been properly installed

I also saw this without using -Xj9 on the target.


!ENTRY org.eclipse.jdt.debug 4 120 2004-12-01 14:55:42.562
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Unable to create class prepare request -
VM disconnected.
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:295)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:253)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:224)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:1011)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:987)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:966)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.createRequests(JavaBreakpoint.java:496)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.addToTarget(JavaBreakpoint.java:477)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.breakpointManagerEnablementChanged(JDIDebugTarget.java:2145)
	at
org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.run(BreakpointManager.java:938)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at
org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.notify(BreakpointManager.java:953)
	at
org.eclipse.debug.internal.core.BreakpointManager.setEnabled(BreakpointManager.java:900)
	at
org.eclipse.debug.internal.ui.actions.SkipAllBreakpointsAction.run(SkipAllBreakpointsAction.java:53)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:989)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)
	at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
!SUBENTRY 1 org.eclipse.jdt.debug 4 5012 2004-12-01 14:55:42.622
!MESSAGE Unable to create class prepare request - VM disconnected.

!ENTRY org.eclipse.jdt.debug 4 120 2004-12-01 14:55:42.632
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Unable to create class prepare request -
VM disconnected.
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:295)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:253)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:224)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:1011)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:987)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createClassPrepareRequest(JDIDebugTarget.java:966)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.createRequests(JavaBreakpoint.java:496)
	at
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.addToTarget(JavaBreakpoint.java:477)
	at
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.breakpointManagerEnablementChanged(JDIDebugTarget.java:2145)
	at
org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.run(BreakpointManager.java:938)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at
org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerNotifier.notify(BreakpointManager.java:953)
	at
org.eclipse.debug.internal.core.BreakpointManager.setEnabled(BreakpointManager.java:900)
	at
org.eclipse.debug.internal.ui.actions.SkipAllBreakpointsAction.run(SkipAllBreakpointsAction.java:53)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:989)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)
	at
org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
!SUBENTRY 1 org.eclipse.jdt.debug 4 5012 2004-12-01 14:55:42.682
!MESSAGE Unable to create class prepare request - VM disconnected.
See also bug 79919.


This is for the same reason as 79919.

*** This bug has been marked as a duplicate of 79919 ***</WithStack>
    <WithOutStack>build I20041130
host vm: pj9n142-20040928a with -Xj9
target vm: pj9n142-20040928a with -Xj9

- had 4 breakpoints, all with conditions, all on binary classes
- had Skip All Breakpoints selected
- launched target
- pressed Skip All Breakpoints to turn it off
- got the following
- the VM is definitely still connected
- the breakpoints appear to have been properly installed

I also saw this without using -Xj9 on the target.


!ENTRY org.eclipse.jdt.debug 4 120 2004-12-01 14:55:42.562
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
!SUBENTRY 1 org.eclipse.jdt.debug 4 5012 2004-12-01 14:55:42.622
!MESSAGE Unable to create class prepare request - VM disconnected.

!ENTRY org.eclipse.jdt.debug 4 120 2004-12-01 14:55:42.632
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1

!SUBENTRY 1 org.eclipse.jdt.debug 4 5012 2004-12-01 14:55:42.682
!MESSAGE Unable to create class prepare request - VM disconnected.
See also bug 79919.


This is for the same reason as 79919.

*** This bug has been marked as a duplicate of 79919 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79921" />
    <CreationDate amount="2004-12-01 15:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Scanner] problems with ')' inside a string being passed to va_args macro parm</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="multicomment">
        <location start="401" end="513" />
        <code>/* some commented code 
 * 1                   
 * 2                   
 * 3                   
 * 4
 * 5
 * */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="515" end="564" />
        <code>#define g_message(...) g_log (1, 2, __VA_ARGS__);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="565" end="608" />
        <code>int g_log (int a, int b, ...) { return 0; }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="610" end="737" />
        <code>int foo2() {
	g_message("a string [as] f%2.2x (%2)")               \
//                                         ^ the culprit
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) The first IProblem is on the first 4 lines of the multiline comment (offset</Line>
          <Line>bug).</Line>
          <Line>2) The second IProblem is on the code: g_message("a string [as] f%2.2x (%2)</Line>
          <Line>3) The third IProblem is on the code: )                   \ and continues until</Line>
          <Line>the next \n is found</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There are 3 IProblems in the following code.  If the culprit is removed from 
the string shown in the code then there are no IProblems.

1) The first IProblem is on the first 4 lines of the multiline comment (offset 
bug).
2) The second IProblem is on the code: g_message("a string [as] f%2.2x (%2)
3) The third IProblem is on the code: )                   \ and continues until 
the next \n is found

/* some commented code 
 * 1                   
 * 2                   
 * 3                   
 * 4
 * 5
 * */

#define g_message(...) g_log (1, 2, __VA_ARGS__);
int g_log (int a, int b, ...) { return 0; }

int foo2() {
	g_message("a string [as] f%2.2x (%2)")               \
//                                         ^ the culprit
}

The IProblems:
Severity	Description	Resource	In Folder	Location
	Creation Time
1	C/C++ Indexer Problem: Syntax error encountered in file: c:\runtime-
workspace\test-links\test.cpp on line: 13.	test.cpp	test-links
	line 13	December 1, 2004 2:50:59 PM
1	C/C++ Indexer Problem: Unbounded string encountered  in file: 
c:\runtime-workspace\test-links\test.cpp on line: 13.	test.cpp	test-
links	line 13	December 1, 2004 2:50:59 PM
1	C/C++ Indexer Problem: Unbounded string encountered  in file: 
c:\runtime-workspace\test-links\test.cpp on line: 15.	test.cpp	test-
links	line 15	December 1, 2004 2:50:59 PM
Fix applied to HEAD.</WithStack>
    <WithOutStack>There are 3 IProblems in the following code.  If the culprit is removed from 
the string shown in the code then there are no IProblems.

1) The first IProblem is on the first 4 lines of the multiline comment (offset 
bug).
2) The second IProblem is on the code: g_message("a string [as] f%2.2x (%2)
3) The third IProblem is on the code: )                   \ and continues until 
the next \n is found

/* some commented code 
 * 1                   
 * 2                   
 * 3                   
 * 4
 * 5
 * */

#define g_message(...) g_log (1, 2, __VA_ARGS__);
int g_log (int a, int b, ...) { return 0; }

int foo2() {
	g_message("a string [as] f%2.2x (%2)")               \
//                                         ^ the culprit
}

The IProblems:
Severity	Description	Resource	In Folder	Location
	Creation Time
1	C/C++ Indexer Problem: Syntax error encountered in file: c:\runtime-
workspace\test-links\test.cpp on line: 13.	test.cpp	test-links
	line 13	December 1, 2004 2:50:59 PM
1	C/C++ Indexer Problem: Unbounded string encountered  in file: 
c:\runtime-workspace\test-links\test.cpp on line: 13.	test.cpp	test-
links	line 13	December 1, 2004 2:50:59 PM
1	C/C++ Indexer Problem: Unbounded string encountered  in file: 
c:\runtime-workspace\test-links\test.cpp on line: 15.	test.cpp	test-
links	line 15	December 1, 2004 2:50:59 PM
Fix applied to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79922" />
    <CreationDate amount="2004-12-01 15:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EDate's createFromString/convertToString isn't thread safe.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211452">
        <Exception>java.lang.NumberFormatException</Exception>
        <Reason>For input string: ""</Reason>
        <Frames>
          <Frame depth="0">java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)</Frame>
          <Frame depth="1">java.lang.Long.parseLong(Long.java:415)</Frame>
          <Frame depth="2">java.lang.Long.parseLong(Long.java:452)</Frame>
          <Frame depth="3">java.text.DigitList.getLong(DigitList.java:149)</Frame>
          <Frame depth="4">java.text.DecimalFormat.parse(DecimalFormat.java:1068)</Frame>
          <Frame depth="5">java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1705)</Frame>
          <Frame depth="6">java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1156)</Frame>
          <Frame depth="7">java.text.DateFormat.parse(DateFormat.java:333)</Frame>
          <Frame depth="8">org.eclipse.emf.ecore.impl.EcoreFactoryImpl.createEDateFromString(EcoreFactoryImpl.java:426)</Frame>
          <Frame depth="9">org.eclipse.emf.ecore.impl.EcoreFactoryImpl.createFromString(EcoreFactoryImpl.java:108)</Frame>
          <Frame depth="10">org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.createFromString(XMLHelperImpl.java:1090)</Frame>
          <Frame depth="11">org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue(XMLHelperImpl.java:768)</Frame>
          <Frame depth="12">org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:1729)</Frame>
          <Frame depth="13">org.eclipse.emf.ecore.xmi.impl.XMLHandler.setAttribValue(XMLHandler.java:1788)</Frame>
          <Frame depth="14">org.eclipse.emf.ecore.xmi.impl.SAXXMLHandler.handleObjectAttribs(SAXXMLHandler.java:145)</Frame>
          <Frame depth="15">org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory(XMLHandler.java:1346)</Frame>
          <Frame depth="16">org.eclipse.emf.ecore.sdo.util.DataGraphResourceFactoryImpl$1.createObjectFromFactory(DataGraphResourceFactoryImpl.java:451)</Frame>
          <Frame depth="17">org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType(XMLHandler.java:1318)</Frame>
          <Frame depth="18">org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject(XMLHandler.java:1213)</Frame>
          <Frame depth="19">org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:1022)</Frame>
          <Frame depth="20">org.eclipse.emf.ecore.sdo.util.DataGraphResourceFactoryImpl$1.handleFeature(DataGraphResourceFactoryImpl.java:393)</Frame>
          <Frame depth="21">org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:448)</Frame>
          <Frame depth="22">org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:431)</Frame>
          <Frame depth="23">org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement(SAXWrapper.java:75)</Frame>
          <Frame depth="24">org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)</Frame>
          <Frame depth="25">org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement(Unknown Source)</Frame>
          <Frame depth="26">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(UnknownSource)</Frame>
          <Frame depth="27">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(UnknownSource)</Frame>
          <Frame depth="28">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)</Frame>
          <Frame depth="29">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="30">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="31">org.apache.xerces.parsers.XMLParser.parse(Unknown Source)</Frame>
          <Frame depth="32">org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</Frame>
          <Frame depth="33">javax.xml.parsers.SAXParser.parse(Unknown Source)</Frame>
          <Frame depth="34">org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:129)</Frame>
          <Frame depth="35">org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:155)</Frame>
          <Frame depth="36">org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:888)</Frame>
          <Frame depth="37">org.eclipse.emf.ecore.sdo.impl.EDataGraphImpl$EDataGraphExternalizable.readExternal(EDataGraphImpl.java:560)</Frame>
          <Frame depth="38">java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1686)</Frame>
          <Frame depth="39">java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1644)</Frame>
          <Frame depth="40">java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)</Frame>
          <Frame depth="41">java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)</Frame>
          <Frame depth="42">org.eclipse.emf.ecore.sdo.impl.EDataGraphImpl$EDataObjectExternalizable.readExternal(EDataGraphImpl.java:612)</Frame>
          <Frame depth="43">java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1686)</Frame>
          <Frame depth="44">java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1644)</Frame>
          <Frame depth="45">java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)</Frame>
          <Frame depth="46">java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1845)</Frame>
          <Frame depth="47">java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1769)</Frame>
          <Frame depth="48">java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1646)</Frame>
          <Frame depth="49">java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)</Frame>
          <Frame depth="50">java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)</Frame>
          <Frame depth="51">java.util.HashMap.readObject(HashMap.java:1006)</Frame>
          <Frame depth="52">sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)</Frame>
          <Frame depth="53">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="54">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="55">java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:838)</Frame>
          <Frame depth="56">java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1746)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Over our latest long run (3 days with 20 users I believe) we saw several
instances of the exception listed below.  To make a long story short, it turns
out that this is caused from the DateFormat class not being thread safe.  
[11/27/04 10:38:58:232 EST]   b421fd SessionContex E Exception is:
java.lang.NumberFormatException: For input string: ""
        at
java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
        at java.lang.Long.parseLong(Long.java:415)
        at java.lang.Long.parseLong(Long.java:452)
        at java.text.DigitList.getLong(DigitList.java:149)
        at java.text.DecimalFormat.parse(DecimalFormat.java:1068)
        at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1705)
        at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1156)
        at java.text.DateFormat.parse(DateFormat.java:333)
        at
org.eclipse.emf.ecore.impl.EcoreFactoryImpl.createEDateFromString(EcoreFactoryImpl.java:426)
        at
org.eclipse.emf.ecore.impl.EcoreFactoryImpl.createFromString(EcoreFactoryImpl.java:108)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.createFromString(XMLHelperImpl.java:1090)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue(XMLHelperImpl.java:768)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:1729)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.setAttribValue(XMLHandler.java:1788)
        at
org.eclipse.emf.ecore.xmi.impl.SAXXMLHandler.handleObjectAttribs(SAXXMLHandler.java:145)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory(XMLHandler.java:1346)
        at
org.eclipse.emf.ecore.sdo.util.DataGraphResourceFactoryImpl$1.createObjectFromFactory(DataGraphResourceFactoryImpl.java:451)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType(XMLHandler.java:1318)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject(XMLHandler.java:1213)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:1022)
        at
org.eclipse.emf.ecore.sdo.util.DataGraphResourceFactoryImpl$1.handleFeature(DataGraphResourceFactoryImpl.java:393)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:448)
        at
org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:431)
        at
org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement(SAXWrapper.java:75)
        at org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)
        at
org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement(Unknown Source)
        at
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown
Source)
        at
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown
Source)
        at
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
        at javax.xml.parsers.SAXParser.parse(Unknown Source)
        at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:129)
        at
org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:155)
        at
org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:888)
        at
org.eclipse.emf.ecore.sdo.impl.EDataGraphImpl$EDataGraphExternalizable.readExternal(EDataGraphImpl.java:560)
        at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1686)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1644)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)
        at
org.eclipse.emf.ecore.sdo.impl.EDataGraphImpl$EDataObjectExternalizable.readExternal(EDataGraphImpl.java:612)
        at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1686)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1644)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1845)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1769)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1646)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)
        at java.util.HashMap.readObject(HashMap.java:1006)
        at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:838)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1746)
The SimpleDataFormat instances in EFactoryImpl.EDATA_FORMATS aren't thread safe,
so a fix has been applied to make those instances thread safe.
Fixed in Build 2.1.0.I200412091159.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Over our latest long run (3 days with 20 users I believe) we saw several
instances of the exception listed below.  To make a long story short, it turns
out that this is caused from the DateFormat class not being thread safe.  
[11/27/04 10:38:58:232 EST]   b421fd SessionContex E Exception is:

The SimpleDataFormat instances in EFactoryImpl.EDATA_FORMATS aren't thread safe,
so a fix has been applied to make those instances thread safe.
Fixed in Build 2.1.0.I200412091159.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79923" />
    <CreationDate amount="2004-12-01 15:24:00 -0500" />
    <DupId amount="125114" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[navigation] Editor often scrolls unnecessarily</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="3932" end="3967" />
        <code>ret = option[option_pointer++];</code>
      </source_code>
      <source_code type="assignment">
        <location start="3998" end="4045" />
        <code>ret = "Option " + option[option_pointer++];</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>While using JDT to edit source files, I often find that the source view scrolls 
while I'm typing. It sometimes happens when something "electric" occurs, like 
completion or magic typing (JavaDoc comments etc.) but it also has happened 
when I didn't do anything very special. 

This is hard to reproduce because it happens by surprise and it can be hard to 
remember what I just did and hard to recreate. However, a recent example 
includes scrolling by a line or two when I hit ^S to save a file. Why should 
that cause scrolling? Also, I've had it happen while typing in a comment. Maybe 
it was when typing something special like @link, but still.

I think the editor should work harder NOT to make things jump around for no 
reason. I think the window contents should never scroll as a result of my 
typing, as long as what I typed doesn't insert or remove newlines at the cursor 
location. This probably means making an effort to remember the screen position 
of the caret as well as the file position, so when the editor internally moves 
its attention somewhere else and then back where I started, the relative scroll 
position is maintained along with the file position.
Which build are you using?
Do you use the Java editor (if so, is folding enabled?) from Eclipse SDK or did
you eventually install some other plug-in(s) from where you get the editor?

&gt;I hit ^S to save a file. Why should that cause scrolling?
I've never seen this and can't imagine how this would happen when using the Java
editor provided by Eclipse SDK?

There are conditions where scrolling can happen e.g. if you have folding enabled
and you type some brackets causing folding structure to change. I agree that
unwanted scrolling is bad and it would really be great if you could provide
detailed steps for each of the unnecessary scrolling cases, especially for the
one which happens upon Ctrl+S.
"Help/About/Plug-in details" shows org.eclipse.jdt.core version 3.0.1.1, and 
org.eclipse.jdt.ui version 3.0.1. I am using the java editor, not any special 
plug-in I'm aware of. Folding is enabled but I don't use it much. 

I will keep an eye out for what things cause scrolling, but as I said it's not 
repeatable: I type fast enough that I can be a couple of letters or symbols 
past the thing that caused scrolling before I register that it happened, and if 
you go back and re-enter the same things it might not decide to scroll again.
&gt;Folding is enabled but I don't use it much.
Yes, but if you use the defaults then inner types get folded (and sometimes
unfolded if errors get introduced into the code e.g. by adding or deleting an
unmatching '{' or '}'. This is covered by bug 80000.

Regarding Ctrl+S: might this have happened after typing quickly and then press
Ctrl+S? This might well be bug 80000 again.

Please try whether this bug goes away when you disable folding.
Since I can't reliably reproduce this, I can't tell if it goes away when I 
disable folding.

I do know I've seen it at times when the thing I typed was not a brace.

Also, even if something I type causes folding to change or other side-effects, 
the editor should still work hard not to scroll. The algorithm I imagine is 
this: at the moment I hit a key, the editor knows the scroll position - which 
line the caret is on relative to the top of the window. After processing the 
key - no matter how complex the processing turns out to be - the editor should 
try to make my scroll position the same after as it was before. 

Typing a newline is obviously is an exception, and this will also be impossible 
when the file is too short to fill the window or the caret is too close to the 
top of the file. But in the middle of a long-enough file, this should always be 
possible.

Incident report: ^S caused scrolling. I was editing a Java source file, changed 
the contents of a single line, pressed ^S, and the window scrolled up by a line 
or two. The line was this:
    ret = option[option_pointer++];
and I had changed it to this:
    ret = "Option " + option[option_pointer++];

(The source is from an IBM Rational Application Developer 6.0 sample.)

Before the scroll event, I think the window was NOT scrolled all the way to the 
bottom of the file; after, I think it was. The bottom of the file was 24 lines 
down from the location of the change. After the scroll, the changed line was 26 
lines from the top of the window, and 51 lines from the top of the file. 
Undoing the change, saving the file, redoing the change and saving the file did 
not reproduce the scrolling behavior.
I should have mentioned: the file is a complete, error-free Java source file. 
Auto-build is enabled in my Workbench, and the program was executing on the 
built-in mini-WAS 6.0 server in debug mode at the time, so as a consequence of 
saving it the file was recompiled, and the changed class was hot-swapped into 
place. I don't know how much of this can have a bearing on the scrolling 
behavior.
Was folding enabled when this happened?
As I describe in bug 80437, I'm observing this behavior as well.

Code folding is enabled (at least, it's at the default setting). Will report
back when I can reproduce reliably.

Version: 3.1.0
Build id: 200411050810
Yes, folding is enabled. The entire file was un-collapsed except for 
the "imports" block at the top - this is the default behavior for folding and I 
had not changed that. The source file change I performed (adding a prefix to a 
string) should not affect folding; therefore if the folding subsystem is the 
cause of the scrolling/recentering, it's not restricted to situations where the 
program stucture actually changes.
*** Bug 80437 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 125114 ***</WithStack>
    <WithOutStack>While using JDT to edit source files, I often find that the source view scrolls 
while I'm typing. It sometimes happens when something "electric" occurs, like 
completion or magic typing (JavaDoc comments etc.) but it also has happened 
when I didn't do anything very special. 

This is hard to reproduce because it happens by surprise and it can be hard to 
remember what I just did and hard to recreate. However, a recent example 
includes scrolling by a line or two when I hit ^S to save a file. Why should 
that cause scrolling? Also, I've had it happen while typing in a comment. Maybe 
it was when typing something special like @link, but still.

I think the editor should work harder NOT to make things jump around for no 
reason. I think the window contents should never scroll as a result of my 
typing, as long as what I typed doesn't insert or remove newlines at the cursor 
location. This probably means making an effort to remember the screen position 
of the caret as well as the file position, so when the editor internally moves 
its attention somewhere else and then back where I started, the relative scroll 
position is maintained along with the file position.
Which build are you using?
Do you use the Java editor (if so, is folding enabled?) from Eclipse SDK or did
you eventually install some other plug-in(s) from where you get the editor?

&gt;I hit ^S to save a file. Why should that cause scrolling?
I've never seen this and can't imagine how this would happen when using the Java
editor provided by Eclipse SDK?

There are conditions where scrolling can happen e.g. if you have folding enabled
and you type some brackets causing folding structure to change. I agree that
unwanted scrolling is bad and it would really be great if you could provide
detailed steps for each of the unnecessary scrolling cases, especially for the
one which happens upon Ctrl+S.
"Help/About/Plug-in details" shows org.eclipse.jdt.core version 3.0.1.1, and 
org.eclipse.jdt.ui version 3.0.1. I am using the java editor, not any special 
plug-in I'm aware of. Folding is enabled but I don't use it much. 

I will keep an eye out for what things cause scrolling, but as I said it's not 
repeatable: I type fast enough that I can be a couple of letters or symbols 
past the thing that caused scrolling before I register that it happened, and if 
you go back and re-enter the same things it might not decide to scroll again.
&gt;Folding is enabled but I don't use it much.
Yes, but if you use the defaults then inner types get folded (and sometimes
unfolded if errors get introduced into the code e.g. by adding or deleting an
unmatching '{' or '}'. This is covered by bug 80000.

Regarding Ctrl+S: might this have happened after typing quickly and then press
Ctrl+S? This might well be bug 80000 again.

Please try whether this bug goes away when you disable folding.
Since I can't reliably reproduce this, I can't tell if it goes away when I 
disable folding.

I do know I've seen it at times when the thing I typed was not a brace.

Also, even if something I type causes folding to change or other side-effects, 
the editor should still work hard not to scroll. The algorithm I imagine is 
this: at the moment I hit a key, the editor knows the scroll position - which 
line the caret is on relative to the top of the window. After processing the 
key - no matter how complex the processing turns out to be - the editor should 
try to make my scroll position the same after as it was before. 

Typing a newline is obviously is an exception, and this will also be impossible 
when the file is too short to fill the window or the caret is too close to the 
top of the file. But in the middle of a long-enough file, this should always be 
possible.

Incident report: ^S caused scrolling. I was editing a Java source file, changed 
the contents of a single line, pressed ^S, and the window scrolled up by a line 
or two. The line was this:
    ret = option[option_pointer++];
and I had changed it to this:
    ret = "Option " + option[option_pointer++];

(The source is from an IBM Rational Application Developer 6.0 sample.)

Before the scroll event, I think the window was NOT scrolled all the way to the 
bottom of the file; after, I think it was. The bottom of the file was 24 lines 
down from the location of the change. After the scroll, the changed line was 26 
lines from the top of the window, and 51 lines from the top of the file. 
Undoing the change, saving the file, redoing the change and saving the file did 
not reproduce the scrolling behavior.
I should have mentioned: the file is a complete, error-free Java source file. 
Auto-build is enabled in my Workbench, and the program was executing on the 
built-in mini-WAS 6.0 server in debug mode at the time, so as a consequence of 
saving it the file was recompiled, and the changed class was hot-swapped into 
place. I don't know how much of this can have a bearing on the scrolling 
behavior.
Was folding enabled when this happened?
As I describe in bug 80437, I'm observing this behavior as well.

Code folding is enabled (at least, it's at the default setting). Will report
back when I can reproduce reliably.

Version: 3.1.0
Build id: 200411050810
Yes, folding is enabled. The entire file was un-collapsed except for 
the "imports" block at the top - this is the default behavior for folding and I 
had not changed that. The source file change I performed (adding a prefix to a 
string) should not affect folding; therefore if the folding subsystem is the 
cause of the scrolling/recentering, it's not restricted to situations where the 
program stucture actually changes.
*** Bug 80437 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 125114 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79924" />
    <CreationDate amount="2004-12-01 15:41:00 -0500" />
    <DupId amount="72054" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Arguments ignores double-quotes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. create a simple ant script, like this:</Line>
          <Line>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</Line>
          <Line>&lt;project name="test" default="showbug"&gt;</Line>
          <Line>&lt;target name="showbug"&gt;</Line>
          <Line>&lt;/target&gt;</Line>
          <Line>&lt;/project&gt;</Line>
          <Line />
          <Line>2. create a simple build.properties file. Can be emtpy.</Line>
          <Line />
          <Line>3. Run with this arguments:</Line>
          <Line>-verbose "-propertyfile c:\development\My Project\build.properties"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Desc: The Ant runner ignores the double-quotes in the arguments section. Could
be "external tools" problem as well. 

How to reproduce:

1. create a simple ant script, like this: 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="test" default="showbug"&gt; 
    &lt;target name="showbug"&gt;
    &lt;/target&gt;
&lt;/project&gt;

2. create a simple build.properties file. Can be emtpy.

3. Run with this arguments:
-verbose "-propertyfile c:\development\My Project\build.properties"

Note the white space in "My Project" folder. 

The result is : 

Could not load property file c:\development\My: C:\development\My (The system
cannot find the file specified)

Apperantly the Ant runner ignores the double-quotes and it should not.
You can also change the place of the quotes and run it like this: 

-verbose -propertyfile "c:\development\My Project\build.properties"

Same problem will occur. 

Thanks for the bug report. 
This is fixed in 3.1.
To use in 3.1 
 -verbose -propertyfile "c:\development\My Project\build.properties"
is the correct format.


*** This bug has been marked as a duplicate of 72054 ***</WithStack>
    <WithOutStack>Desc: The Ant runner ignores the double-quotes in the arguments section. Could
be "external tools" problem as well. 

How to reproduce:

1. create a simple ant script, like this: 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="test" default="showbug"&gt; 
    &lt;target name="showbug"&gt;
    &lt;/target&gt;
&lt;/project&gt;

2. create a simple build.properties file. Can be emtpy.

3. Run with this arguments:
-verbose "-propertyfile c:\development\My Project\build.properties"

Note the white space in "My Project" folder. 

The result is : 

Could not load property file c:\development\My: C:\development\My (The system
cannot find the file specified)

Apperantly the Ant runner ignores the double-quotes and it should not.
You can also change the place of the quotes and run it like this: 

-verbose -propertyfile "c:\development\My Project\build.properties"

Same problem will occur. 

Thanks for the bug report. 
This is fixed in 3.1.
To use in 3.1 
 -verbose -propertyfile "c:\development\My Project\build.properties"
is the correct format.


*** This bug has been marked as a duplicate of 72054 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79925" />
    <CreationDate amount="2004-12-01 16:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[consistency] Button MenuDetect preceeds MouseDown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- run the ControlExample, stay on the initial Button tab</Line>
          <Line>- listen for MouseDown and MenuDetect</Line>
          <Line>- right-click on an example Button on the page</Line>
          <Line>-&gt; on motif and gtk you'll receive MenuDetect - MouseDown (seems wrong)</Line>
          <Line>-&gt; on win32 and osx you'll receive MouseDown - MenuDetect</Line>
          <Line>On further looking, this seems to be the case for all of the controls on gtk.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>- run the ControlExample, stay on the initial Button tab
- listen for MouseDown and MenuDetect
- right-click on an example Button on the page
  -&gt; on motif and gtk you'll receive MenuDetect - MouseDown (seems wrong)
  -&gt; on win32 and osx you'll receive MouseDown - MenuDetect
On further looking, this seems to be the case for all of the controls on gtk.

Grant to prioritize.
*** Bug 78547 has been marked as a duplicate of this bug. ***
*** Bug 240806 has been marked as a duplicate of this bug. ***
*** Bug 239927 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>- run the ControlExample, stay on the initial Button tab
- listen for MouseDown and MenuDetect
- right-click on an example Button on the page
  -&gt; on motif and gtk you'll receive MenuDetect - MouseDown (seems wrong)
  -&gt; on win32 and osx you'll receive MouseDown - MenuDetect
On further looking, this seems to be the case for all of the controls on gtk.

Grant to prioritize.
*** Bug 78547 has been marked as a duplicate of this bug. ***
*** Bug 240806 has been marked as a duplicate of this bug. ***
*** Bug 239927 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79926" />
    <CreationDate amount="2004-12-01 16:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Junit] Result comparison window needs two clicks to be closed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using 200411240800, when I compare result of a junit test with the expected
result, I need to click twice on the cross in the top right corner to close the
window. Once click should be enough.
Got fixed for I20041201.
...</WithStack>
    <WithOutStack>Using 200411240800, when I compare result of a junit test with the expected
result, I need to click twice on the cross in the top right corner to close the
window. Once click should be enough.
Got fixed for I20041201.
...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79927" />
    <CreationDate amount="2004-12-01 16:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>crash when using a Table, TableItems using images with alpha, and using TableColumn.pack</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="209" end="1532" />
        <code>static void init(Shell shell, String name) {
		Display display = shell.getDisplay();
		shell.setLayout(new FillLayout());
		Image image = new Image(display,
PR35040Benchmark.class.getResourceAsStream(name));
	
		Table table = new Table (shell, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
		table.setLinesVisible (true);
		table.setHeaderVisible (true);
		table.setBackground(display.getSystemColor(SWT.COLOR_RED));

		String[] titles = {" ", "C", "!", "Description", "Resource", "In Folder",
"Location"};
		for (int i=0; i&lt;titles.length; i++) {
			TableColumn column = new TableColumn (table, SWT.NULL);
			column.setText (titles [i]);
			column.setImage(image);
		}	
		int count = 128;
		for (int i=0; i&lt;count; i++) {
			TableItem titem = new TableItem (table, SWT.NULL);
			titem.setText (0, "x");
			titem.setText (1, "y");
			titem.setText (2, "!");
			titem.setText (3, "this stuff behaves the way I expect");
			titem.setText (4, "almost everywhere");
			titem.setText (5, "some.folder");
			titem.setText (6, "line " + i + " in nowhere");
// 1. comment to avoid crash (or use images with gif, not png with alpha)
			titem.setImage(image);
		}

// 2. comment to avoid crash (2)
		for (int i=0; i&lt;titles.length; i++) {
			table.getColumn (i).pack ();
		}	
		table.setSize (table.computeSize (SWT.DEFAULT, 200));

	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1534" end="1847" />
        <code>public static void main(String[] args) {

		Display display = new Display();
		
		final Shell shell = new Shell(display);		
		shell.setText("PR");
		init(shell, "a.png");
		//init(shell, "a.gif");
		shell.open();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1935" end="1988" />
        <code>table.setSize (table.computeSize (SWT.DEFAULT, 200));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>X Error of failed request:  BadMatch (invalid parameter attributes)
  Major opcode of failed request:  73 (X_GetImage)
  Serial number of failed request:  7408
  Current serial number in output stream:  7408

	static void init(Shell shell, String name) {
		Display display = shell.getDisplay();
		shell.setLayout(new FillLayout());
		Image image = new Image(display,
PR35040Benchmark.class.getResourceAsStream(name));
	
		Table table = new Table (shell, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
		table.setLinesVisible (true);
		table.setHeaderVisible (true);
		table.setBackground(display.getSystemColor(SWT.COLOR_RED));

		String[] titles = {" ", "C", "!", "Description", "Resource", "In Folder",
"Location"};
		for (int i=0; i&lt;titles.length; i++) {
			TableColumn column = new TableColumn (table, SWT.NULL);
			column.setText (titles [i]);
			column.setImage(image);
		}	
		int count = 128;
		for (int i=0; i&lt;count; i++) {
			TableItem titem = new TableItem (table, SWT.NULL);
			titem.setText (0, "x");
			titem.setText (1, "y");
			titem.setText (2, "!");
			titem.setText (3, "this stuff behaves the way I expect");
			titem.setText (4, "almost everywhere");
			titem.setText (5, "some.folder");
			titem.setText (6, "line " + i + " in nowhere");
// 1. comment to avoid crash (or use images with gif, not png with alpha)
			titem.setImage(image);
		}

// 2. comment to avoid crash (2)
		for (int i=0; i&lt;titles.length; i++) {
			table.getColumn (i).pack ();
		}	
		table.setSize (table.computeSize (SWT.DEFAULT, 200));

	}

	public static void main(String[] args) {

		Display display = new Display();
		
		final Shell shell = new Shell(display);		
		shell.setText("PR");
		init(shell, "a.png");
		//init(shell, "a.gif");
		shell.open();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}
the code is stupid but should not crash.

3. commenting this line avoid the crash too.
table.setSize (table.computeSize (SWT.DEFAULT, 200));
FYI I just tried this as part of testing of the new Table and it didn't crash
for me, using the png from bug 35040.
Nice!

Closing PR. Fixed in M6 with new Table code.</WithStack>
    <WithOutStack>X Error of failed request:  BadMatch (invalid parameter attributes)
  Major opcode of failed request:  73 (X_GetImage)
  Serial number of failed request:  7408
  Current serial number in output stream:  7408

	static void init(Shell shell, String name) {
		Display display = shell.getDisplay();
		shell.setLayout(new FillLayout());
		Image image = new Image(display,
PR35040Benchmark.class.getResourceAsStream(name));
	
		Table table = new Table (shell, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
		table.setLinesVisible (true);
		table.setHeaderVisible (true);
		table.setBackground(display.getSystemColor(SWT.COLOR_RED));

		String[] titles = {" ", "C", "!", "Description", "Resource", "In Folder",
"Location"};
		for (int i=0; i&lt;titles.length; i++) {
			TableColumn column = new TableColumn (table, SWT.NULL);
			column.setText (titles [i]);
			column.setImage(image);
		}	
		int count = 128;
		for (int i=0; i&lt;count; i++) {
			TableItem titem = new TableItem (table, SWT.NULL);
			titem.setText (0, "x");
			titem.setText (1, "y");
			titem.setText (2, "!");
			titem.setText (3, "this stuff behaves the way I expect");
			titem.setText (4, "almost everywhere");
			titem.setText (5, "some.folder");
			titem.setText (6, "line " + i + " in nowhere");
// 1. comment to avoid crash (or use images with gif, not png with alpha)
			titem.setImage(image);
		}

// 2. comment to avoid crash (2)
		for (int i=0; i&lt;titles.length; i++) {
			table.getColumn (i).pack ();
		}	
		table.setSize (table.computeSize (SWT.DEFAULT, 200));

	}

	public static void main(String[] args) {

		Display display = new Display();
		
		final Shell shell = new Shell(display);		
		shell.setText("PR");
		init(shell, "a.png");
		//init(shell, "a.gif");
		shell.open();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}
the code is stupid but should not crash.

3. commenting this line avoid the crash too.
table.setSize (table.computeSize (SWT.DEFAULT, 200));
FYI I just tried this as part of testing of the new Table and it didn't crash
for me, using the png from bug 35040.
Nice!

Closing PR. Fixed in M6 with new Table code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79928" />
    <CreationDate amount="2004-12-01 16:22:00 -0500" />
    <DupId amount="50927" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Request to rename .log file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>This problem was reported by our QE team while testing our RCP-based 
application on Windows.

The request is that the .log file created in ..\workspace\.metadata\.log 
should have a name preceding the .log extension in case the user has their 
Windows Folder Options set to "Hide extensions for known file types".  As 
things stand today, the file appears in the Windows Explorer without a name.

If the intent is really to hide files that start with a ".", the Hidden 
attribute should be used on Windows.
Similar request (for different reasons): bug 50927.


*** This bug has been marked as a duplicate of 50927 ***</WithStack>
    <WithOutStack>This problem was reported by our QE team while testing our RCP-based 
application on Windows.

The request is that the .log file created in ..\workspace\.metadata\.log 
should have a name preceding the .log extension in case the user has their 
Windows Folder Options set to "Hide extensions for known file types".  As 
things stand today, the file appears in the Windows Explorer without a name.

If the intent is really to hide files that start with a ".", the Hidden 
attribute should be used on Windows.
Similar request (for different reasons): bug 50927.


*** This bug has been marked as a duplicate of 50927 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79929" />
    <CreationDate amount="2004-12-01 16:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide Extension point for contribution of JDI Connectors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Now that the JDT debugger uses the new extensible connectors we should provide an extension point 
that allows others to plug-in their connectors. Requires changes to our launch framework... ie 
-Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:port is hard coded in StandardVM 
Debugger right now. Contributed connectors may also want to allow users to configure them in the 
LCD.
Deferred.
Closing unless we get specific requests for this.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Now that the JDT debugger uses the new extensible connectors we should provide an extension point 
that allows others to plug-in their connectors. Requires changes to our launch framework... ie 
-Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:port is hard coded in StandardVM 
Debugger right now. Contributed connectors may also want to allow users to configure them in the 
LCD.
Deferred.
Closing unless we get specific requests for this.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79930" />
    <CreationDate amount="2004-12-01 16:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[consistency] MenuDetect preceeds MouseDown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- run the ControlExample, pick any control page other than Button, Slider,</Line>
          <Line>ToolBar</Line>
          <Line>- listen for MouseDown and MenuDetect</Line>
          <Line>- right-click on the example widget on the page</Line>
          <Line>-&gt; on osx you'll get MenuDetect - MouseDown, but these should be MouseDown -</Line>
          <Line>MenuDetect</Line>
          <Line>- the order comes in correctly for Button, Slider and ToolBar</Line>
          <Line>Grant to prioritize.</Line>
          <Line>Please check this one in the latest.</Line>
          <Line>This behaviour hasn't changed in HEAD.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>- run the ControlExample, pick any control page other than Button, Slider, 
ToolBar
- listen for MouseDown and MenuDetect
- right-click on the example widget on the page
  -&gt; on osx you'll get MenuDetect - MouseDown, but these should be MouseDown - 
MenuDetect
- the order comes in correctly for Button, Slider and ToolBar
Grant to prioritize.
Please check this one in the latest.
This behaviour hasn't changed in HEAD.

Moving report to triage, see http://www.eclipse.org/swt/triage.php
for more info about bug handling.

Works fine in Cocoa, so we won't be addressing this.
Reopening and updating the platform/version, I see this in the latest Cocoa in the ControlExample, including on the controls that were previously indicated as working on Carbon.  Perhaps this has been recently broken.  I'm using OSX 10.5.8.</WithStack>
    <WithOutStack>- run the ControlExample, pick any control page other than Button, Slider, 
ToolBar
- listen for MouseDown and MenuDetect
- right-click on the example widget on the page
  -&gt; on osx you'll get MenuDetect - MouseDown, but these should be MouseDown - 
MenuDetect
- the order comes in correctly for Button, Slider and ToolBar
Grant to prioritize.
Please check this one in the latest.
This behaviour hasn't changed in HEAD.

Moving report to triage, see http://www.eclipse.org/swt/triage.php
for more info about bug handling.

Works fine in Cocoa, so we won't be addressing this.
Reopening and updating the platform/version, I see this in the latest Cocoa in the ControlExample, including on the controls that were previously indicated as working on Carbon.  Perhaps this has been recently broken.  I'm using OSX 10.5.8.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79931" />
    <CreationDate amount="2004-12-01 16:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No dynamic variable expansion for contributed runtime properties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Contribute via the extension point an ant property named "Foo" with a value</Line>
          <Line>of "${env_var:PATH}"</Line>
          <Line>2. Variable expansion does not happen when script is run.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>A simple, contrived example:
1. Contribute via the extension point an ant property named "Foo" with a value
of "${env_var:PATH}"
2. Variable expansion does not happen when script is run.

Now remove the contributed property, and manual define the exact same key/value
pair via the Ant preference page; you will get the expected expansion.

This is frustrating because it forces me to implement an
IAntPropertyValueProvider to chain to an existing IDynamicVariableResolver if I
want to define the properties for the user via the Ant properties extension point.
Is it that the variable is not expanded or just not defined?

I believe this is really the confusion presented by showing properties that 
are not set for separate JRE builds (duplicate of bug 56072)

To make the property available for separate JRE builds define:
&lt;antProperty
      name="expanded"
      value="${env_var:PATH}"
      eclipseRuntime="false"&gt;
&lt;/antProperty&gt;

On 3.1 I200411300800 this works for separate and same JRE builds

&lt;antProperty
      name="expanded"
      value="${env_var:PATH}"&gt;
&lt;/antProperty&gt;
On 3.1 I200411300800 this works only for same JRE builds


I hadn't changed the "Eclipse Runtime" property, as the variable that would be
expanded in the case of my real-world example (too involved to post here)
requires the Eclipse runtime to function.  It depends on other plugins.

So variables used in properties that are *not* set for seperate JRE builds will
not be expanded?  Why is that?

I believe the variable is defined ok... it shows up in the preference page, it
just isn't being expanded.

My testing with contributed properties for builds in the same JRE shows that 
the variables are expanded. So I cannot reproduce your problem on the latest 
3.1. I will go back and attempt to reproduce on 3.0.1.

Contributed properties that require the eclipse runtime are not set (not even 
considered) for the separate JRE builds.
No need for you to try to reproduce with 3.1.  The "eclipseRuntime" flag fixed
the issue for me.  Thanks!  
Thanks for reporting back Ben.
Marking as worksforme.</WithStack>
    <WithOutStack>A simple, contrived example:
1. Contribute via the extension point an ant property named "Foo" with a value
of "${env_var:PATH}"
2. Variable expansion does not happen when script is run.

Now remove the contributed property, and manual define the exact same key/value
pair via the Ant preference page; you will get the expected expansion.

This is frustrating because it forces me to implement an
IAntPropertyValueProvider to chain to an existing IDynamicVariableResolver if I
want to define the properties for the user via the Ant properties extension point.
Is it that the variable is not expanded or just not defined?

I believe this is really the confusion presented by showing properties that 
are not set for separate JRE builds (duplicate of bug 56072)

To make the property available for separate JRE builds define:
&lt;antProperty
      name="expanded"
      value="${env_var:PATH}"
      eclipseRuntime="false"&gt;
&lt;/antProperty&gt;

On 3.1 I200411300800 this works for separate and same JRE builds

&lt;antProperty
      name="expanded"
      value="${env_var:PATH}"&gt;
&lt;/antProperty&gt;
On 3.1 I200411300800 this works only for same JRE builds


I hadn't changed the "Eclipse Runtime" property, as the variable that would be
expanded in the case of my real-world example (too involved to post here)
requires the Eclipse runtime to function.  It depends on other plugins.

So variables used in properties that are *not* set for seperate JRE builds will
not be expanded?  Why is that?

I believe the variable is defined ok... it shows up in the preference page, it
just isn't being expanded.

My testing with contributed properties for builds in the same JRE shows that 
the variables are expanded. So I cannot reproduce your problem on the latest 
3.1. I will go back and attempt to reproduce on 3.0.1.

Contributed properties that require the eclipse runtime are not set (not even 
considered) for the separate JRE builds.
No need for you to try to reproduce with 3.1.  The "eclipseRuntime" flag fixed
the issue for me.  Thanks!  
Thanks for reporting back Ben.
Marking as worksforme.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79932" />
    <CreationDate amount="2004-12-01 16:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add support to GLA to return the status of the adapter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Add the necessary classes and update the classes necessary to support saving 
and retreiving the status of the GLA components and contexts.
Committed change to Head:

Created o.e.h.logging.adapter.IStatus interface as a way to retrieve the status 
of an adapter entity.
Created o.e.h.logging.adapter.impl.Status as an implementation of IStatus.
Changed Adapter and Component classes to have a Status instance variable.
Changed all component implementation classes to increment the 
itemsProcessedCount of the Component status.
Added the getStatus method to Adapter that will get the status objects of the 
contexts.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Add the necessary classes and update the classes necessary to support saving 
and retreiving the status of the GLA components and contexts.
Committed change to Head:

Created o.e.h.logging.adapter.IStatus interface as a way to retrieve the status 
of an adapter entity.
Created o.e.h.logging.adapter.impl.Status as an implementation of IStatus.
Changed Adapter and Component classes to have a Status instance variable.
Changed all component implementation classes to increment the 
itemsProcessedCount of the Component status.
Added the getStatus method to Adapter that will get the status objects of the 
contexts.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79933" />
    <CreationDate amount="2004-12-01 16:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[consistency] Table MenuDetect preceeds MouseDown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- run the ControlExample, go on the Table tab</Line>
          <Line>- listen for MouseDown and MenuDetect</Line>
          <Line>- right-click on the example Button on the page</Line>
          <Line>-&gt; on all platforms you'll receive MenuDetect - MouseDown</Line>
          <Line>-&gt; this is consistent across the platforms but wrong given the convention</Line>
          <Line>that a triggering event should arrive before any resulting higher-level events</Line>
          <Line>Grant to prioritize.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>- run the ControlExample, go on the Table tab
- listen for MouseDown and MenuDetect
- right-click on the example Button on the page
  -&gt; on all platforms you'll receive MenuDetect - MouseDown
  -&gt; this is consistent across the platforms but wrong given the convention 
that a triggering event should arrive before any resulting higher-level events
Grant to prioritize.</WithStack>
    <WithOutStack>- run the ControlExample, go on the Table tab
- listen for MouseDown and MenuDetect
- right-click on the example Button on the page
  -&gt; on all platforms you'll receive MenuDetect - MouseDown
  -&gt; this is consistent across the platforms but wrong given the convention 
that a triggering event should arrive before any resulting higher-level events
Grant to prioritize.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79934" />
    <CreationDate amount="2004-12-01 16:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Incorrect SWT.Deactivate received</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="383" end="1749" />
        <code>public static void main(String[] args) {
	Display display = new Display();
	final Shell shell1 = new Shell(display);
	shell1.setLayout(new RowLayout());
	Button b = new Button(shell1, SWT.PUSH);
	b.setText("show list");
	b.addListener(SWT.Selection, new Listener() {
		public void handleEvent(Event e) {
			//final Shell shell2 = new Shell(shell1, SWT.ON_TOP);
			final Shell shell2 = new Shell(shell1, SWT.DIALOG_TRIM);
			shell2.addListener(SWT.MouseExit, new Listener() {
				public void handleEvent(Event e) {
					shell2.dispose();
					//shell2.setVisible(false); // has same effect
				}
			});
			final Shell shell3 = new Shell(shell1, SWT.ON_TOP);
			//final Shell shell3 = new Shell(shell1, SWT.DIALOG_TRIM); // shell3 does not
get deactivated if DIALOG_TRIM
			shell3.setLayout(new RowLayout());
			Text t = new Text(shell3, SWT.BORDER);
			shell3.addListener(SWT.Deactivate, new Listener() {
				public void handleEvent(Event e) {
					shell3.dispose();
				}
			});
			shell2.pack();
			Rectangle r = shell1.getBounds();
			shell2.setLocation(r.x, r.y + r.height + 10);
			shell2.open();
			r = shell2.getBounds();
			shell3.pack();
			shell3.setLocation(r.x, r.y + r.height + 10);
			shell3.open();
		}
	});
	
	shell1.pack();
	shell1.open();
	while (!shell1.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This bug makes it very difficult to select an editor or a view from the chevron
in eclipse.

Run the following example.

Click on the "show list" button
Move the mouse over the second shell.
When the mouse exits the second shell, the second and third shell disappear.
Note that if the third shell has the style DIALOG_TRIM, it  does not get the
Deactivate event when shell2 closes.

public static void main(String[] args) {
	Display display = new Display();
	final Shell shell1 = new Shell(display);
	shell1.setLayout(new RowLayout());
	Button b = new Button(shell1, SWT.PUSH);
	b.setText("show list");
	b.addListener(SWT.Selection, new Listener() {
		public void handleEvent(Event e) {
			//final Shell shell2 = new Shell(shell1, SWT.ON_TOP);
			final Shell shell2 = new Shell(shell1, SWT.DIALOG_TRIM);
			shell2.addListener(SWT.MouseExit, new Listener() {
				public void handleEvent(Event e) {
					shell2.dispose();
					//shell2.setVisible(false); // has same effect
				}
			});
			final Shell shell3 = new Shell(shell1, SWT.ON_TOP);
			//final Shell shell3 = new Shell(shell1, SWT.DIALOG_TRIM); // shell3 does not
get deactivated if DIALOG_TRIM
			shell3.setLayout(new RowLayout());
			Text t = new Text(shell3, SWT.BORDER);
			shell3.addListener(SWT.Deactivate, new Listener() {
				public void handleEvent(Event e) {
					shell3.dispose();
				}
			});
			shell2.pack();
			Rectangle r = shell1.getBounds();
			shell2.setLocation(r.x, r.y + r.height + 10);
			shell2.open();
			r = shell2.getBounds();
			shell3.pack();
			shell3.setLocation(r.x, r.y + r.height + 10);
			shell3.open();
		}
	});
	
	shell1.pack();
	shell1.open();
	while (!shell1.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
Fixed in 3.1 HEAD &gt; Dec 1, 2004.

Removed check for XmNoverrideRedirect in dispose method of Shell.  It seems that
an on ON_TOP shell should only set fous back to its parent's shell if it is the
active shell.
Change also copied to 3.0 maintainence stream for inclusion in 3.0.2.</WithStack>
    <WithOutStack>This bug makes it very difficult to select an editor or a view from the chevron
in eclipse.

Run the following example.

Click on the "show list" button
Move the mouse over the second shell.
When the mouse exits the second shell, the second and third shell disappear.
Note that if the third shell has the style DIALOG_TRIM, it  does not get the
Deactivate event when shell2 closes.

public static void main(String[] args) {
	Display display = new Display();
	final Shell shell1 = new Shell(display);
	shell1.setLayout(new RowLayout());
	Button b = new Button(shell1, SWT.PUSH);
	b.setText("show list");
	b.addListener(SWT.Selection, new Listener() {
		public void handleEvent(Event e) {
			//final Shell shell2 = new Shell(shell1, SWT.ON_TOP);
			final Shell shell2 = new Shell(shell1, SWT.DIALOG_TRIM);
			shell2.addListener(SWT.MouseExit, new Listener() {
				public void handleEvent(Event e) {
					shell2.dispose();
					//shell2.setVisible(false); // has same effect
				}
			});
			final Shell shell3 = new Shell(shell1, SWT.ON_TOP);
			//final Shell shell3 = new Shell(shell1, SWT.DIALOG_TRIM); // shell3 does not
get deactivated if DIALOG_TRIM
			shell3.setLayout(new RowLayout());
			Text t = new Text(shell3, SWT.BORDER);
			shell3.addListener(SWT.Deactivate, new Listener() {
				public void handleEvent(Event e) {
					shell3.dispose();
				}
			});
			shell2.pack();
			Rectangle r = shell1.getBounds();
			shell2.setLocation(r.x, r.y + r.height + 10);
			shell2.open();
			r = shell2.getBounds();
			shell3.pack();
			shell3.setLocation(r.x, r.y + r.height + 10);
			shell3.open();
		}
	});
	
	shell1.pack();
	shell1.open();
	while (!shell1.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
Fixed in 3.1 HEAD &gt; Dec 1, 2004.

Removed check for XmNoverrideRedirect in dispose method of Shell.  It seems that
an on ON_TOP shell should only set fous back to its parent's shell if it is the
active shell.
Change also copied to 3.0 maintainence stream for inclusion in 3.0.2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79935" />
    <CreationDate amount="2004-12-01 16:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[hovering] IndexOutOfBounds in warning roll-over popup menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 200411230838

I had a source file with a warning (un-externalized string). I expanded the
annotation rollover in the editor's rule, and opened the context menu (right
clicked).  I then selected Quick Fix from the menu. Nothing happened.  I opened
the context menu again, and then decided to try Ctrl+1.  An error occurred (see
attached log). At this point the context menu and the roll-over disappeared and
were replaced with blank grey squares.  The editor refused to paint after that
point, and I had to close and reopen the editor.  After reopening the editor, I
was unable to reproduce the error.  Selecting "Quick fix" from the context menu
on the annotation roll-over still does not open quick fix though.
Created attachment 16280
Log file
hm, unable to reproduce, and neither do I see how this would happen.
I assume that the document was modified while the roll-over was showing - the
remembered style range used to restore the highlighting did then not accurately
describe the region in the widget any longer.
I was able to reproduce several times, but couldn't get precise steps.  I was
able to get stale popups by alt-tabbing to another application while the
roll-over is on - this isn't easy though, you kind of have to move the mouse off
the roll-over as you are alt-tabbing to another application that will cover the
editor area.  Once you have a stale roll-over, you can continue editing the
document while the roll-over is still up (not by typing into the document, but
by executing commands such as Undo/Redo, delete line, etc).  However, I am
unable to reproduce this today in a fresh editor, so I suspect my editor was
already in some strange state before I got the error.
The deactivation detection has been improved for 3.1. Please reopen if you see
this again.</WithStack>
    <WithOutStack>Build: 200411230838

I had a source file with a warning (un-externalized string). I expanded the
annotation rollover in the editor's rule, and opened the context menu (right
clicked).  I then selected Quick Fix from the menu. Nothing happened.  I opened
the context menu again, and then decided to try Ctrl+1.  An error occurred (see
attached log). At this point the context menu and the roll-over disappeared and
were replaced with blank grey squares.  The editor refused to paint after that
point, and I had to close and reopen the editor.  After reopening the editor, I
was unable to reproduce the error.  Selecting "Quick fix" from the context menu
on the annotation roll-over still does not open quick fix though.
Created attachment 16280
Log file
hm, unable to reproduce, and neither do I see how this would happen.
I assume that the document was modified while the roll-over was showing - the
remembered style range used to restore the highlighting did then not accurately
describe the region in the widget any longer.
I was able to reproduce several times, but couldn't get precise steps.  I was
able to get stale popups by alt-tabbing to another application while the
roll-over is on - this isn't easy though, you kind of have to move the mouse off
the roll-over as you are alt-tabbing to another application that will cover the
editor area.  Once you have a stale roll-over, you can continue editing the
document while the roll-over is still up (not by typing into the document, but
by executing commands such as Undo/Redo, delete line, etc).  However, I am
unable to reproduce this today in a fresh editor, so I suspect my editor was
already in some strange state before I got the error.
The deactivation detection has been improved for 3.1. Please reopen if you see
this again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79936" />
    <CreationDate amount="2004-12-01 17:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Double-click and WORD_PREVIOUS should be the same</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) single-click</Line>
          <Line>2) CTRL+RIGHT</Line>
          <Line>3) CTRL+SHIFT+LEFT</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Given the text "MY_CONSTANT", double-clicking will select the entire text, but 
CTRL+ARROW will navigate to 3 different "words".

double-click should be the same as:
1) single-click
2) CTRL+RIGHT
3) CTRL+SHIFT+LEFT

My preference is that WORD_NEXT/PREVIOUS treat MY_CONSTANT as one word.
&gt;CTRL+ARROW will navigate to 3 different "words".
or 2 if you enable smart Java word navigation

&gt;double-click should be the same as:
Did you mean: "... should be one of:"?

I agree that sometimes I'd liked the double-click strategy behave smarter and
even  honor my Java word navigation preference.</WithStack>
    <WithOutStack>Given the text "MY_CONSTANT", double-clicking will select the entire text, but 
CTRL+ARROW will navigate to 3 different "words".

double-click should be the same as:
1) single-click
2) CTRL+RIGHT
3) CTRL+SHIFT+LEFT

My preference is that WORD_NEXT/PREVIOUS treat MY_CONSTANT as one word.
&gt;CTRL+ARROW will navigate to 3 different "words".
or 2 if you enable smart Java word navigation

&gt;double-click should be the same as:
Did you mean: "... should be one of:"?

I agree that sometimes I'd liked the double-click strategy behave smarter and
even  honor my Java word navigation preference.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79937" />
    <CreationDate amount="2004-12-01 17:05:00 -0500" />
    <DupId amount="22880" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StyledText double-click should select on mouse down</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When double-clicking, the text should be selected on mouse down, not afterwards 
on mouse up. See SWT's Text behavior as reference.


*** This bug has been marked as a duplicate of 22880 ***</WithStack>
    <WithOutStack>When double-clicking, the text should be selected on mouse down, not afterwards 
on mouse up. See SWT's Text behavior as reference.


*** This bug has been marked as a duplicate of 22880 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79938" />
    <CreationDate amount="2004-12-01 17:07:00 -0500" />
    <DupId amount="5138" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>double-click drag should swipe select words</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>double-clicking and not releasing the mouse, but continuing to drag, should 
swipe selection at word boundaries.  See win32's Text control, IE, Frontpage, 
or Word for demonstrations of this behavior.


*** This bug has been marked as a duplicate of 5138 ***</WithStack>
    <WithOutStack>double-clicking and not releasing the mouse, but continuing to drag, should 
swipe selection at word boundaries.  See win32's Text control, IE, Frontpage, 
or Word for demonstrations of this behavior.


*** This bug has been marked as a duplicate of 5138 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79939" />
    <CreationDate amount="2004-12-01 17:09:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Commit initial version of Web services wizardry to CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Refreshing and refactoring of the Web services wizards is nearly complete. The 
org.eclipse.jst.ws plugins will be committed to CVS in reference to this bug.
Plugins committed:

org.eclipse.jst.ws
org.eclipse.jst.ws.axis.consumption.core
org.eclipse.jst.ws.axis.consumption.ui
org.eclipse.jst.ws.axis.creation.ui
org.eclipse.jst.ws.consumption
org.eclipse.jst.ws.consumption.ui
org.eclipse.jst.ws.creation.ejb.ui
org.eclipse.jst.ws.creation.ui
org.eclipse.jst.ws.explorer
org.eclipse.jst.ws.uddiregistry
org.eclipse.jst.ws.ui
Closed.</WithStack>
    <WithOutStack>Refreshing and refactoring of the Web services wizards is nearly complete. The 
org.eclipse.jst.ws plugins will be committed to CVS in reference to this bug.
Plugins committed:

org.eclipse.jst.ws
org.eclipse.jst.ws.axis.consumption.core
org.eclipse.jst.ws.axis.consumption.ui
org.eclipse.jst.ws.axis.creation.ui
org.eclipse.jst.ws.consumption
org.eclipse.jst.ws.consumption.ui
org.eclipse.jst.ws.creation.ejb.ui
org.eclipse.jst.ws.creation.ui
org.eclipse.jst.ws.explorer
org.eclipse.jst.ws.uddiregistry
org.eclipse.jst.ws.ui
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79940" />
    <CreationDate amount="2004-12-01 17:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Expand GLA support for continuously monitoring when imbedded in another application</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>There is a requirement to be able to configure GLA to monitor a log file 
forever.  To do this, I propose that when the Context Instance maximumIdleTime 
attribute has a value of zero and continuousOperation="true", the context will 
run forever, or until it is stopped programatically by calling the Adapter.stop
() method.  This behaviour will need to be documented.

There is another requirement to start the GLA to monitor a log file, even if 
the log file doesn't exist at the time.  It may be created later, at which time 
it is parsed.  Changes to SingleOSFileSensor (for rules adapters) and 
MonitoringParser (for static parsers) are required to support this scenario.
Committed all changes for this fix to Head except the change to Context class 
to process a maximumIdleTime value of zero as run forever.  I'll commit that 
change with the fix for 79932.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>There is a requirement to be able to configure GLA to monitor a log file 
forever.  To do this, I propose that when the Context Instance maximumIdleTime 
attribute has a value of zero and continuousOperation="true", the context will 
run forever, or until it is stopped programatically by calling the Adapter.stop
() method.  This behaviour will need to be documented.

There is another requirement to start the GLA to monitor a log file, even if 
the log file doesn't exist at the time.  It may be created later, at which time 
it is parsed.  Changes to SingleOSFileSensor (for rules adapters) and 
MonitoringParser (for static parsers) are required to support this scenario.
Committed all changes for this fix to Head except the change to Context class 
to process a maximumIdleTime value of zero as run forever.  I'll commit that 
change with the fix for 79932.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79941" />
    <CreationDate amount="2004-12-01 17:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The memory displays all 0 if less than a line(?) of memory is actually valid</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I'm shooting from the hip here. 

Please close PR, if there is in fact a code path to handle this, but I believe
I've seen problems that match up with my theory.


Is there a code path to handle this type of feedback from GDB?

In this case the memory area above the stack is invalid.

[1 101 940 500 531] 4130-data-read-memory $sp x 1 1 640
[1 101 940 500 562]
4130^done,addr="0x00003fdc",nr-bytes="37",total-bytes="640",next-row="0x0000425c\
",prev-row="0x00003d5c",next-page="0x0000425c",prev-page="0x00003d5c",memory=[{addr="0x00003fdc",dat\
a=["0x10","0x00","0x00","0xb8","0x10","0x00","0x00","0x50","0x01","0x02","0x03","0x04","0x00","0x00"\
,"0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","\
0x10","0x00","0x00","0x08","0x00","0x00","0x00","0x00","0xe0","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A"]}]

I've observed that the memory view shows all 0's if too much of the memory range
is unacessible.
Investigate for 3.0.
I suspect this is a scrolling problem in the Memory view, but I haven'y been 
able to reproduce.</WithStack>
    <WithOutStack>I'm shooting from the hip here. 

Please close PR, if there is in fact a code path to handle this, but I believe
I've seen problems that match up with my theory.


Is there a code path to handle this type of feedback from GDB?

In this case the memory area above the stack is invalid.

[1 101 940 500 531] 4130-data-read-memory $sp x 1 1 640
[1 101 940 500 562]
4130^done,addr="0x00003fdc",nr-bytes="37",total-bytes="640",next-row="0x0000425c\
",prev-row="0x00003d5c",next-page="0x0000425c",prev-page="0x00003d5c",memory=[{addr="0x00003fdc",dat\
a=["0x10","0x00","0x00","0xb8","0x10","0x00","0x00","0x50","0x01","0x02","0x03","0x04","0x00","0x00"\
,"0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","\
0x10","0x00","0x00","0x08","0x00","0x00","0x00","0x00","0xe0","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A"]}]

I've observed that the memory view shows all 0's if too much of the memory range
is unacessible.
Investigate for 3.0.
I suspect this is a scrolling problem in the Memory view, but I haven'y been 
able to reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79942" />
    <CreationDate amount="2004-12-01 17:36:00 -0500" />
    <DupId amount="30826" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Allow "Pull up" refactor into an interface definition [refactoring] [pull up]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I use the Eclipse refactoring tools frequently, but have yet to use the "Pull-
up" refactor. I tend to work with shallow inheritance hierarchies beaneath 
interfaces, and by far the most common "Pull-up" situation find myself needing 
is to move a method or costant from an implementation class into its 
interface. 

But the pull-up refactor doesnt seem to support this at present. I think it 
would be a very useful future enhancement.
Move to JDT/UI


*** This bug has been marked as a duplicate of 30826 ***</WithStack>
    <WithOutStack>I use the Eclipse refactoring tools frequently, but have yet to use the "Pull-
up" refactor. I tend to work with shallow inheritance hierarchies beaneath 
interfaces, and by far the most common "Pull-up" situation find myself needing 
is to move a method or costant from an implementation class into its 
interface. 

But the pull-up refactor doesnt seem to support this at present. I think it 
would be a very useful future enhancement.
Move to JDT/UI


*** This bug has been marked as a duplicate of 30826 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79943" />
    <CreationDate amount="2004-12-01 17:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in disassembly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I think this is new...
Created attachment 16281
Shows NPE in debugger
Some GDB trace to boot:

[1 101 940 740 640] 4345-exec-step-instruction 1
[1 101 940 740 656] 4345^running
[1 101 940 740 656] (gdb) 
[1 101 940 740 671]
4345*stopped,reason="end-stepping-range",thread-id="0",frame={addr="0x100000db",\
func="from0",args=[],file="arit.c",line="40"}
[1 101 940 740 671] (gdb) 
[1 101 940 740 671] 4346 info threads
[1 101 940 740 687] &amp;"info threads\n"
[1 101 940 740 687] &amp;"warning: RMT ERROR : failed to get remote thread list\n"
[1 101 940 740 687] &amp;"\n"
[1 101 940 740 687] &amp;"warning: Couldn't restore frame in current thread, at
frame 0\n"
[1 101 940 740 687]
4346^done,frame={addr="0x100000db",func="from0",args=[],file="arit.c",line="40"}
[1 101 940 740 687] (gdb) 
[1 101 940 740 687] 4347-stack-info-depth
[1 101 940 740 687] 4347^done,depth="1"
[1 101 940 740 687] (gdb) 
[1 101 940 740 687] 4348-stack-list-frames 0 1
[1 101 940 740 703]
4348^done,stack=[frame={level="0",addr="0x100000db",func="from0",file="arit.c",l\
ine="40"}]
[1 101 940 740 703] (gdb) 
[1 101 940 740 703] 4349-data-list-changed-registers
[1 101 940 740 703] 4349^done,changed-registers=["4","5"]
[1 101 940 740 703] (gdb) 
[1 101 940 740 703] 4350-data-read-memory $sp x 1 1 640
[1 101 940 740 765]
4350^done,addr="0x00003fc8",nr-bytes="57",total-bytes="640",next-row="0x00004248\
",prev-row="0x00003d48",next-page="0x00004248",prev-page="0x00003d48",memory=[{addr="0x00003fc8",dat\
a=["0x00","0x00","0x00","0x33","0x10","0x00","0x00","0xd9","0x10","0x00","0x01","0x48","0x00","0x00"\
,"0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x3f","0xf0","0x10","0x00","0x00","0x50","\
0x01","0x02","0x03","0x04","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x\
00","0x00","0x00","0x00","0x00","0x00","0x10","0x00","0x00","0x08","0x00","0x00","0x00","0x00","0xe0\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A"]\
}]
[1 101 940 740 781] (gdb) 

This was fixed in the platform.

Please verify.
I haven't observed this problem in ages.

Øyvind

Closing.</WithStack>
    <WithOutStack>I think this is new...
Created attachment 16281
Shows NPE in debugger
Some GDB trace to boot:

[1 101 940 740 640] 4345-exec-step-instruction 1
[1 101 940 740 656] 4345^running
[1 101 940 740 656] (gdb) 
[1 101 940 740 671]
4345*stopped,reason="end-stepping-range",thread-id="0",frame={addr="0x100000db",\
func="from0",args=[],file="arit.c",line="40"}
[1 101 940 740 671] (gdb) 
[1 101 940 740 671] 4346 info threads
[1 101 940 740 687] &amp;"info threads\n"
[1 101 940 740 687] &amp;"warning: RMT ERROR : failed to get remote thread list\n"
[1 101 940 740 687] &amp;"\n"
[1 101 940 740 687] &amp;"warning: Couldn't restore frame in current thread, at
frame 0\n"
[1 101 940 740 687]
4346^done,frame={addr="0x100000db",func="from0",args=[],file="arit.c",line="40"}
[1 101 940 740 687] (gdb) 
[1 101 940 740 687] 4347-stack-info-depth
[1 101 940 740 687] 4347^done,depth="1"
[1 101 940 740 687] (gdb) 
[1 101 940 740 687] 4348-stack-list-frames 0 1
[1 101 940 740 703]
4348^done,stack=[frame={level="0",addr="0x100000db",func="from0",file="arit.c",l\
ine="40"}]
[1 101 940 740 703] (gdb) 
[1 101 940 740 703] 4349-data-list-changed-registers
[1 101 940 740 703] 4349^done,changed-registers=["4","5"]
[1 101 940 740 703] (gdb) 
[1 101 940 740 703] 4350-data-read-memory $sp x 1 1 640
[1 101 940 740 765]
4350^done,addr="0x00003fc8",nr-bytes="57",total-bytes="640",next-row="0x00004248\
",prev-row="0x00003d48",next-page="0x00004248",prev-page="0x00003d48",memory=[{addr="0x00003fc8",dat\
a=["0x00","0x00","0x00","0x33","0x10","0x00","0x00","0xd9","0x10","0x00","0x01","0x48","0x00","0x00"\
,"0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x3f","0xf0","0x10","0x00","0x00","0x50","\
0x01","0x02","0x03","0x04","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x\
00","0x00","0x00","0x00","0x00","0x00","0x10","0x00","0x00","0x08","0x00","0x00","0x00","0x00","0xe0\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A",\
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A\
","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N\
/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A"]\
}]
[1 101 940 740 781] (gdb) 

This was fixed in the platform.

Please verify.
I haven't observed this problem in ages.

Øyvind

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79944" />
    <CreationDate amount="2004-12-01 17:49:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Framework" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[launcher] The Eclipse launcher should give the splash screen window a type hint</Summery>
    <Patches amount="1">
      <Patch>
        <index>library/gtk/eclipseGtk.c</index>
        <original_file>library/gtk/eclipseGtk.c</original_file>
        <modified_file>library/gtk/eclipseGtk.c</modified_file>
        <Hunks>
          <hunk />
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="multicomment">
        <location start="369" end="424" />
        <code>/* Create a top level window for the image. */</code>
      </source_code>
      <source_code type="assignment">
        <location start="425" end="488" />
        <code>main = GTK_WINDOW(gtk_window_new(GTK_WINDOW_TOPLEVEL));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="489" end="563" />
        <code>+       gtk_window_set_type_hint(main, GDK_WINDOW_TYPE_HINT_SPLASHSCREEN);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="564" end="618" />
        <code>gtk_window_set_title(main, getOfficialName());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="619" end="685" />
        <code>gtk_container_add(GTK_CONTAINER(main), GTK_WIDGET(image));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Index: library/gtk/eclipseGtk.c
===================================================================
RCS file: /home/eclipse/platform-launcher/library/gtk/eclipseGtk.c,v
retrieving revision 1.13
diff -u -r1.13 eclipseGtk.c
--- library/gtk/eclipseGtk.c    19 Aug 2004 16:22:39 -0000      1.13
+++ library/gtk/eclipseGtk.c    1 Dec 2004 22:46:36 -0000
@@ -123,6 +123,7 @@

        /* Create a top level window for the image. */
        main = GTK_WINDOW(gtk_window_new(GTK_WINDOW_TOPLEVEL));
+       gtk_window_set_type_hint(main, GDK_WINDOW_TYPE_HINT_SPLASHSCREEN);
        gtk_window_set_title(main, getOfficialName());
        gtk_container_add(GTK_CONTAINER(main), GTK_WIDGET(image));
What exactly the WM does when the hint _NET_WM_WINDOW_TYPE_SPLASH is set ?
We can probably use X calls and do the same for the motif launcher (on linux 
only maybe).

I doubt that WMs currently do anything with this hint.  This fix would be for
correctness.  The purpose is so that WMs can enforce policy.

As an example, a reasonable policy a WM could do with splashscreens would be
rules like "splash screens do not appear in the task list" and "the first
application window to appear should be placed on the desktop that their splash
screen was shown on".
Christophe?  I think you own the launcher.. :)
&lt;bugzilla erase="comment 3" mode=";-)"/&gt;

Looking into it
fixed v&gt;20050119
See https://bugs.eclipse.org/bugs/show_bug.cgi?id=83667#c1
Patch causes trouble on certain versions of window managers and has been 
removed.

Billy: the GDK_WINDOW_TYPE_HINT_SPLASHSCREEN is interesting for later. Until 
Window managers treat this hint in a way that makes the splash screen window 
look different and 'better' to the user (whatever that could mean) - it is 
probably preferable to keep that patch for later. If we add conditional code 
for different window managers and versions then we need to specifically test 
and confirm this conditional code works on each of these window managers 
before we ship. This has to be weighted against the benefits.
Moving to BB even though he doesn't own the launcher because he cares about 
the right window manager hints.
I don't see us making this change.  Andrew, please reopen if you think the benefit of using GDK_WINDOW_TYPE_HINT_SPLASHSCREEN outweighs the risk and necessary testing.
If window managers don't respect GDK_WINDOW_TYPE_HINT_SPLASHSCREEN, it's the problem of the window managers, not the problem of eclipse. Actually, the hint would be _NET_WM_WINDOW_TYPE_SPLASH as per http://standards.freedesktop.org/wm-spec/wm-spec-1.3.html.</WithStack>
    <WithOutStack>Index: library/gtk/eclipseGtk.c
===================================================================
RCS file: /home/eclipse/platform-launcher/library/gtk/eclipseGtk.c,v
retrieving revision 1.13
diff -u -r1.13 eclipseGtk.c
--- library/gtk/eclipseGtk.c    19 Aug 2004 16:22:39 -0000      1.13
+++ library/gtk/eclipseGtk.c    1 Dec 2004 22:46:36 -0000
@@ -123,6 +123,7 @@

        /* Create a top level window for the image. */
        main = GTK_WINDOW(gtk_window_new(GTK_WINDOW_TOPLEVEL));
+       gtk_window_set_type_hint(main, GDK_WINDOW_TYPE_HINT_SPLASHSCREEN);
        gtk_window_set_title(main, getOfficialName());
        gtk_container_add(GTK_CONTAINER(main), GTK_WIDGET(image));
What exactly the WM does when the hint _NET_WM_WINDOW_TYPE_SPLASH is set ?
We can probably use X calls and do the same for the motif launcher (on linux 
only maybe).

I doubt that WMs currently do anything with this hint.  This fix would be for
correctness.  The purpose is so that WMs can enforce policy.

As an example, a reasonable policy a WM could do with splashscreens would be
rules like "splash screens do not appear in the task list" and "the first
application window to appear should be placed on the desktop that their splash
screen was shown on".
Christophe?  I think you own the launcher.. :)
&lt;bugzilla erase="comment 3" mode=";-)"/&gt;

Looking into it
fixed v&gt;20050119
See https://bugs.eclipse.org/bugs/show_bug.cgi?id=83667#c1
Patch causes trouble on certain versions of window managers and has been 
removed.

Billy: the GDK_WINDOW_TYPE_HINT_SPLASHSCREEN is interesting for later. Until 
Window managers treat this hint in a way that makes the splash screen window 
look different and 'better' to the user (whatever that could mean) - it is 
probably preferable to keep that patch for later. If we add conditional code 
for different window managers and versions then we need to specifically test 
and confirm this conditional code works on each of these window managers 
before we ship. This has to be weighted against the benefits.
Moving to BB even though he doesn't own the launcher because he cares about 
the right window manager hints.
I don't see us making this change.  Andrew, please reopen if you think the benefit of using GDK_WINDOW_TYPE_HINT_SPLASHSCREEN outweighs the risk and necessary testing.
If window managers don't respect GDK_WINDOW_TYPE_HINT_SPLASHSCREEN, it's the problem of the window managers, not the problem of eclipse. Actually, the hint would be _NET_WM_WINDOW_TYPE_SPLASH as per http://standards.freedesktop.org/wm-spec/wm-spec-1.3.html.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79945" />
    <CreationDate amount="2004-12-01 17:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>performance problems in JarVerifier</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>JarVerifier creates a buffer for each file it verifies. This can have a 
serious performance impact.
Also, the buffer size is 4K.

I suggest having the buffer done as a private static field (there is no 
concurrency during verification), and increase its size to 8k.
fixed</WithStack>
    <WithOutStack>JarVerifier creates a buffer for each file it verifies. This can have a 
serious performance impact.
Also, the buffer size is 4K.

I suggest having the buffer done as a private static field (there is no 
concurrency during verification), and increase its size to 8k.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79946" />
    <CreationDate amount="2004-12-01 17:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Last if statement in while loop looks like it is running when in the debugger when it shouldn't be</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="836" end="1056" />
        <code>public void testSimpleTest(){    
    boolean result = true;
    while(result){
        boolean test = false;
        
        if(test) 
            _log.info("~~~~~~ This should not be running ~~~~~");  
    }        
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. breakpoint on while statement. debugger stops there</Line>
          <Line>2. step over takes me to "boolean test = false"</Line>
          <Line>3. step over takes me to "if (test)"</Line>
          <Line>4. step over takes me to while again</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Found something weird happening in my debugger when I was checking a major part
of my code. 
Basically, the last if statement in my while loop looked like it was actually
running in the debugger. But in actuality it was not.
I've included a simple down version of my code which does the same thing, which
I checked to see if the behavior was still happening and it was still happening.

If you place a break point just before the [if(test)] statement and then do a
step over in the debugger. It looks like the next line is actually being run. 
The statement [_log.info("~~~~~~ This should not be running ~~~~~")] is
basically sending the string to the console. I checked the console and nothing
was being put there.   
Which was to be expected. What wasn't expected was seeing it actually running
the [_log.info] statement in the IDE.

public void testSimpleTest(){    
    boolean result = true;
    while(result){
        boolean test = false;
        
        if(test) 
            _log.info("~~~~~~ This should not be running ~~~~~");  
    }        
}
I'm unable to reproduce anything unusual with your code. As I step over it I see the following

1. breakpoint on while statement. debugger stops there
2. step over takes me to "boolean test = false"
3. step over takes me to "if (test)"
4. step over takes me to while again

putting the breakpoint in other places did the same thing (just order the steps differently). 
Where exactly are you putting the breakpoint? Does placing it on another line change anything? What 
makes you think the _log.info line is being run if nothing is in the console? Are you sure that the source 
and class file are in sync (ie line number in the .class match up with line number in the .java)? What VM 
are you using?
Strange. I tested it out on another machine here at work and I'm getting the
same thing happening.

&gt; Where exactly are you putting the breakpoint? Does placing it on another line
change anything?
I've tested the breakpoint on different parts of that code. I even put it on the
method that was calling this testSimpleTest method.
Placing it on different lines still gives me the same result.

&gt; What makes you think the _log.info line is being run if nothing is in the console?
The reason I thought that the _log.info line was being run is cause the
debugger, in Eclipse, did a step over onto that line. As soon as I hit the F6 on
the "if(test)" part.

&gt; Are you sure that the source and class file are in sync (ie line number in the
.class match up with line number in the .java)?
I'm pretty sure the .class and .java files are the same. I did a refresh and
clean on my project when I was testing this out.

&gt;What VM are you using?
The VM we are using is:
java version "1.4.2_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)

I have noticed something else, after I submitted this bug, if I place code after
the "if" statement or have some other logic following the "while" loop. The
debugger functions normally. 
 

How are you building the project - the normal way, or with Ant?

I'm building my project the normal way. Through Eclipse and running the debug
through it as well.

I can't reproduce it either (althoug we don't have the exact code you are 
running). Can you provide a more complete test case?
Oops, my mistake. Sorry. But that could be the problem. I redid the test just
through Eclipse and I'm not getting the error either.
Our project is worked on through Eclipse. But for deployment we are using an ant
script. We are deploying to Jboss. The Ant Build Tool Core is (3.0.0) and the
Apache Ant is (1.6.2) in Eclipse. Also for the running of the test we are using
JunitEE, to be able to run the tests through Jboss. 
Came across the problem now being discussed, when I remotely attached to the
Jboss to debug a problem.

The ant script we are using for compiling our code is:
&lt;target depends="clean" name="compile"&gt;
    &lt;echo message="Compiling ${component} files..."/&gt;
    &lt;mkdir dir="${class.dir}"/&gt;
    &lt;javac  classpathref="build.classpath" 
            debug="on" 
            deprecation="off" 
            destdir="${class.dir}" 
            optimize="off" 
            srcdir="${src}" 
            listfiles="true"&gt;
        &lt;include name="**/*.java"/&gt;
        &lt;exclude name="**/*.contrib"/&gt;
    &lt;/javac&gt; 
    &lt;copy todir="${class.dir}"&gt;
        &lt;fileset dir="${src}"&gt;
            &lt;include name="**/*.txt" /&gt;   
            &lt;include name="**/*.properties" /&gt;
            &lt;include name="data/**" /&gt;
            &lt;include name="scripts/**" /&gt;
        &lt;/fileset&gt;
    &lt;/copy&gt;
&lt;/target&gt;

Am I missing something here? I checked in my Eclipse
(Window-&gt;Preferences-&gt;Ant-&gt;Runtime). It looks like it is using the same java
compiler as my standard project would and everything else is using the same java
jvm. Got any ideas what could be off? Thanks everyone, for the assist.
The compiler in Eclipse is not "javac". Eclipse comes with its own Java 
compiler. If you are building with Ant and javac, that could be the 
difference. Since the problem does not occurr when you build standalone with 
Eclispe, marking as works for me.</WithStack>
    <WithOutStack>Found something weird happening in my debugger when I was checking a major part
of my code. 
Basically, the last if statement in my while loop looked like it was actually
running in the debugger. But in actuality it was not.
I've included a simple down version of my code which does the same thing, which
I checked to see if the behavior was still happening and it was still happening.

If you place a break point just before the [if(test)] statement and then do a
step over in the debugger. It looks like the next line is actually being run. 
The statement [_log.info("~~~~~~ This should not be running ~~~~~")] is
basically sending the string to the console. I checked the console and nothing
was being put there.   
Which was to be expected. What wasn't expected was seeing it actually running
the [_log.info] statement in the IDE.

public void testSimpleTest(){    
    boolean result = true;
    while(result){
        boolean test = false;
        
        if(test) 
            _log.info("~~~~~~ This should not be running ~~~~~");  
    }        
}
I'm unable to reproduce anything unusual with your code. As I step over it I see the following

1. breakpoint on while statement. debugger stops there
2. step over takes me to "boolean test = false"
3. step over takes me to "if (test)"
4. step over takes me to while again

putting the breakpoint in other places did the same thing (just order the steps differently). 
Where exactly are you putting the breakpoint? Does placing it on another line change anything? What 
makes you think the _log.info line is being run if nothing is in the console? Are you sure that the source 
and class file are in sync (ie line number in the .class match up with line number in the .java)? What VM 
are you using?
Strange. I tested it out on another machine here at work and I'm getting the
same thing happening.

&gt; Where exactly are you putting the breakpoint? Does placing it on another line
change anything?
I've tested the breakpoint on different parts of that code. I even put it on the
method that was calling this testSimpleTest method.
Placing it on different lines still gives me the same result.

&gt; What makes you think the _log.info line is being run if nothing is in the console?
The reason I thought that the _log.info line was being run is cause the
debugger, in Eclipse, did a step over onto that line. As soon as I hit the F6 on
the "if(test)" part.

&gt; Are you sure that the source and class file are in sync (ie line number in the
.class match up with line number in the .java)?
I'm pretty sure the .class and .java files are the same. I did a refresh and
clean on my project when I was testing this out.

&gt;What VM are you using?
The VM we are using is:
java version "1.4.2_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)

I have noticed something else, after I submitted this bug, if I place code after
the "if" statement or have some other logic following the "while" loop. The
debugger functions normally. 
 

How are you building the project - the normal way, or with Ant?

I'm building my project the normal way. Through Eclipse and running the debug
through it as well.

I can't reproduce it either (althoug we don't have the exact code you are 
running). Can you provide a more complete test case?
Oops, my mistake. Sorry. But that could be the problem. I redid the test just
through Eclipse and I'm not getting the error either.
Our project is worked on through Eclipse. But for deployment we are using an ant
script. We are deploying to Jboss. The Ant Build Tool Core is (3.0.0) and the
Apache Ant is (1.6.2) in Eclipse. Also for the running of the test we are using
JunitEE, to be able to run the tests through Jboss. 
Came across the problem now being discussed, when I remotely attached to the
Jboss to debug a problem.

The ant script we are using for compiling our code is:
&lt;target depends="clean" name="compile"&gt;
    &lt;echo message="Compiling ${component} files..."/&gt;
    &lt;mkdir dir="${class.dir}"/&gt;
    &lt;javac  classpathref="build.classpath" 
            debug="on" 
            deprecation="off" 
            destdir="${class.dir}" 
            optimize="off" 
            srcdir="${src}" 
            listfiles="true"&gt;
        &lt;include name="**/*.java"/&gt;
        &lt;exclude name="**/*.contrib"/&gt;
    &lt;/javac&gt; 
    &lt;copy todir="${class.dir}"&gt;
        &lt;fileset dir="${src}"&gt;
            &lt;include name="**/*.txt" /&gt;   
            &lt;include name="**/*.properties" /&gt;
            &lt;include name="data/**" /&gt;
            &lt;include name="scripts/**" /&gt;
        &lt;/fileset&gt;
    &lt;/copy&gt;
&lt;/target&gt;

Am I missing something here? I checked in my Eclipse
(Window-&gt;Preferences-&gt;Ant-&gt;Runtime). It looks like it is using the same java
compiler as my standard project would and everything else is using the same java
jvm. Got any ideas what could be off? Thanks everyone, for the assist.
The compiler in Eclipse is not "javac". Eclipse comes with its own Java 
compiler. If you are building with Ant and javac, that could be the 
difference. Since the problem does not occurr when you build standalone with 
Eclispe, marking as works for me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79947" />
    <CreationDate amount="2004-12-01 18:02:00 -0500" />
    <DupId amount="41867" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java Source Viewer Hover Text is unreadable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>My java source editor is configured to use a black background and I have
tailored my foreground colors according to this (mostly white and other bright
colors).  Unfortunately the Java source viewer hover uses the foreground color
settings, but not the background color settings.  This leads to unreadable text
within the hover.  If the hover is to obey color settings it should obey both
foreground and background.  Or there at least be options to control the behavior.

Reported against 11-17-04 integration build.


*** This bug has been marked as a duplicate of 41867 ***</WithStack>
    <WithOutStack>My java source editor is configured to use a black background and I have
tailored my foreground colors according to this (mostly white and other bright
colors).  Unfortunately the Java source viewer hover uses the foreground color
settings, but not the background color settings.  This leads to unreadable text
within the hover.  If the hover is to obey color settings it should obey both
foreground and background.  Or there at least be options to control the behavior.

Reported against 11-17-04 integration build.


*** This bug has been marked as a duplicate of 41867 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79948" />
    <CreationDate amount="2004-12-01 18:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.jface.text.source.projection.ProjectViewer should not be subclassed, according to docs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>org.eclipse.jface.text.source.projection.ProjectViewer should not be subclassed,
according to docs, yet org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer
extends it.
You are right. However, we will not change that.
Thought I would try assigning this to platform text.  I really think that the
doc for ProjectionViewer should at least be updated to reflect the reality of
how the class is being used.  As a plugin developer it is really confusing to
look at the docs then find that the contracts are being violated within the
eclipse project itself...
Again, you are right in that it might be confusing. Anyway, ProjectionViewer 
is considered "soft final", this means that we have not used Java code 
constructs to mark the class as unchangeable. "Soft final" also means that we 
keep the public API stable but do not promise to kept the subclass API stable. 
Thus, when you subclass ProjectViewer you might be broken by future builds. We 
will take away the "soft final" flag as soon as we know that the 
ProjectionViewer is mature enough. In order to mature it we need clients, one 
of them is the one that lives in JDT. We are controlling both, 
ProjectionViewer and JavaSourceViewer. Thus, when changing one, we also can 
change the other without breaking anybody.

BTW, reopening a 'wontfix' bug does not make too much sense. As we won't 
change the current situation anytime soon. See my explanation above.
What you said makes perfect sense, however I feel that there is a distinction
between (a) a class being designed for extension but whose subclass API is not
yet considered stable and (b) a class not being designed for extension at all. 
Judging from your previous comment, ProjectionViewer seems to fit category (a)
and it would clear up the confusion if this were explicitly stated instead of
simply saying "This class should not be subclassed."

Sorry for wining about this but it can be pretty bewildering trying to
understand the Eclipse APIs if the javadocs are misleading.  Thanks for listening!</WithStack>
    <WithOutStack>org.eclipse.jface.text.source.projection.ProjectViewer should not be subclassed,
according to docs, yet org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer
extends it.
You are right. However, we will not change that.
Thought I would try assigning this to platform text.  I really think that the
doc for ProjectionViewer should at least be updated to reflect the reality of
how the class is being used.  As a plugin developer it is really confusing to
look at the docs then find that the contracts are being violated within the
eclipse project itself...
Again, you are right in that it might be confusing. Anyway, ProjectionViewer 
is considered "soft final", this means that we have not used Java code 
constructs to mark the class as unchangeable. "Soft final" also means that we 
keep the public API stable but do not promise to kept the subclass API stable. 
Thus, when you subclass ProjectViewer you might be broken by future builds. We 
will take away the "soft final" flag as soon as we know that the 
ProjectionViewer is mature enough. In order to mature it we need clients, one 
of them is the one that lives in JDT. We are controlling both, 
ProjectionViewer and JavaSourceViewer. Thus, when changing one, we also can 
change the other without breaking anybody.

BTW, reopening a 'wontfix' bug does not make too much sense. As we won't 
change the current situation anytime soon. See my explanation above.
What you said makes perfect sense, however I feel that there is a distinction
between (a) a class being designed for extension but whose subclass API is not
yet considered stable and (b) a class not being designed for extension at all. 
Judging from your previous comment, ProjectionViewer seems to fit category (a)
and it would clear up the confusion if this were explicitly stated instead of
simply saying "This class should not be subclassed."

Sorry for wining about this but it can be pretty bewildering trying to
understand the Eclipse APIs if the javadocs are misleading.  Thanks for listening!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79949" />
    <CreationDate amount="2004-12-01 18:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Console View is missing Ctrl-C in context menu item.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Console View is missing Ctrl+C in context menu item. The menu item "Copy" is
present but the Ctrl+C is not there.
Version 3.1.M3. 
Thanks,
Gary.
I thought the trick for this was setting the actionDefinitionId on the 
IAction, but I tried and it did not work. The strange thing is that the key 
bindings show up for "select all" and "find".

Doug, is there something else we should be doing?
Fixed. (I was using the wrong Ids).
Please verify, Kevin. Changes in TextConsolePage.
verified</WithStack>
    <WithOutStack>The Console View is missing Ctrl+C in context menu item. The menu item "Copy" is
present but the Ctrl+C is not there.
Version 3.1.M3. 
Thanks,
Gary.
I thought the trick for this was setting the actionDefinitionId on the 
IAction, but I tried and it did not work. The strange thing is that the key 
bindings show up for "select all" and "find".

Doug, is there something else we should be doing?
Fixed. (I was using the wrong Ids).
Please verify, Kevin. Changes in TextConsolePage.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79950" />
    <CreationDate amount="2004-12-01 18:56:00 -0500" />
    <DupId amount="62281" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Debug Expressions View missing "Open" context menu items.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Debug Expressions View is missing the "Open" context menu items found in the
Variables View.
Version 3.1.M3.
Thanks,
Gary
The actions appear for children of expressions - just not the root element, as 
it is an expression, rather than a variable. Perhaps we can use an adapter to 
make this work.
Deferred
re-open to mark as dup.


*** This bug has been marked as a duplicate of 62281 ***</WithStack>
    <WithOutStack>The Debug Expressions View is missing the "Open" context menu items found in the
Variables View.
Version 3.1.M3.
Thanks,
Gary
The actions appear for children of expressions - just not the root element, as 
it is an expression, rather than a variable. Perhaps we can use an adapter to 
make this work.
Deferred
re-open to mark as dup.


*** This bug has been marked as a duplicate of 62281 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79951" />
    <CreationDate amount="2004-12-01 19:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Output lost / colored incorrect with echoProperties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I can consistently get truncated output or output that is colored incorrectly 
with the following test file:

Test file:
&lt;project name="project" default="default"&gt;
    &lt;target name="default"&gt;
        &lt;echoproperties&gt;&lt;/echoproperties&gt;
    &lt;/target&gt;
&lt;/project&gt;
Kevin are you going to have time to investigate this?
I think so. I spent a few minutes already. I was able to reproduce it in my host, but not in my target. Not 
sure what that mean though. :-/
Moving to my inbox so I don't forget...
Before removing the stream listeners to stream monitors that have not been flushed, should try getting 
the stream monitors contents and writing them to the console.
fixed in ProcessConsole.

Note that I was never able to reproduce the problem in my target. Had to export the plugin and run my 
host with the new code to test the fix.

Darins, please verify
The change looks good but I can't reproduce the problem here at home at all. 
My machine at work is really good at it so I will verify there tomorrow.
Verified.</WithStack>
    <WithOutStack>I can consistently get truncated output or output that is colored incorrectly 
with the following test file:

Test file:
&lt;project name="project" default="default"&gt;
    &lt;target name="default"&gt;
        &lt;echoproperties&gt;&lt;/echoproperties&gt;
    &lt;/target&gt;
&lt;/project&gt;
Kevin are you going to have time to investigate this?
I think so. I spent a few minutes already. I was able to reproduce it in my host, but not in my target. Not 
sure what that mean though. :-/
Moving to my inbox so I don't forget...
Before removing the stream listeners to stream monitors that have not been flushed, should try getting 
the stream monitors contents and writing them to the console.
fixed in ProcessConsole.

Note that I was never able to reproduce the problem in my target. Had to export the plugin and run my 
host with the new code to test the fix.

Darins, please verify
The change looks good but I can't reproduce the problem here at home at all. 
My machine at work is really good at it so I will verify there tomorrow.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79952" />
    <CreationDate amount="2004-12-01 19:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>broken hyperlink in console redirecting process output to console.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341211483">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Path must include project and resource name: /foo.txt</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.utils.Assert.isLegal(Assert.java:58)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1519)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Container.getFile(Container.java:124)</Frame>
          <Frame depth="3">org.eclipse.debug.internal.ui.views.console.ProcessConsole$ConsoleLogFileHyperlink.linkActivated(ProcessConsole.java:688)</Frame>
          <Frame depth="4">org.eclipse.ui.console.TextConsoleViewer.mouseUp(TextConsoleViewer.java:467)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:136)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1231)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1255)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1240)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1088)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2898)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2566)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="16">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="23">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211483">
        <Exception>java.util.regex.PatternSyntaxException</Exception>
        <Reason>Illegal/unsupported escape squence 
near index 19
C:\Darins\Debugger\latest\eclipse\temp.txt
                   ^</Reason>
        <Frames>
          <Frame depth="0">java.util.regex.Pattern.error(Pattern.java:1528)</Frame>
          <Frame depth="1">java.util.regex.Pattern.escape(Pattern.java:1964)</Frame>
          <Frame depth="2">java.util.regex.Pattern.atom(Pattern.java:1720)</Frame>
          <Frame depth="3">java.util.regex.Pattern.sequence(Pattern.java:1652)</Frame>
          <Frame depth="4">java.util.regex.Pattern.expr(Pattern.java:1545)</Frame>
          <Frame depth="5">java.util.regex.Pattern.compile(Pattern.java:1279)</Frame>
          <Frame depth="6">java.util.regex.Pattern.&lt;init&gt;(Pattern.java:1035)</Frame>
          <Frame depth="7">java.util.regex.Pattern.compile(Pattern.java:802)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.console.ConsolePatternMatcher.addPatternMatchListener(ConsolePatternMatcher.java:205)</Frame>
          <Frame depth="9">org.eclipse.ui.console.TextConsole.addPatternMatchListener(TextConsole.java:366)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.views.console.ProcessConsole.&lt;init&gt;(ProcessConsole.java:126)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.ui.views.console.ProcessConsoleManager.launchChanged(ProcessConsoleManager.java:153)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.run(LaunchManager.java:1410)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.notify(LaunchManager.java:1429)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.core.LaunchManager.fireUpdate(LaunchManager.java:390)</Frame>
          <Frame depth="17">org.eclipse.debug.core.Launch.fireChanged(Launch.java:399)</Frame>
          <Frame depth="18">org.eclipse.debug.core.Launch.addProcess(Launch.java:362)</Frame>
          <Frame depth="19">org.eclipse.debug.core.model.RuntimeProcess.&lt;init&gt;(RuntimeProcess.java:124)</Frame>
          <Frame depth="20">org.eclipse.ant.internal.ui.launchConfigurations.RemoteAntRuntimeProcess.&lt;init&gt;(RemoteAntRuntimeProcess.java:28)</Frame>
          <Frame depth="21">org.eclipse.ant.internal.ui.launchConfigurations.RemoteAntProcessFactory.newProcess(RemoteAntProcessFactory.java:31)</Frame>
          <Frame depth="22">org.eclipse.debug.core.DebugPlugin.newProcess(DebugPlugin.java:628)</Frame>
          <Frame depth="23">org.eclipse.jdt.launching.AbstractVMRunner.newProcess(AbstractVMRunner.java:110)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.launching.StandardVMRunner.run(StandardVMRunner.java:252)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:109)</Frame>
          <Frame depth="26">org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.runInSeparateVM(AntLaunchDelegate.java:485)</Frame>
          <Frame depth="27">org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.launch(AntLaunchDelegate.java:184)</Frame>
          <Frame depth="28">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:588)</Frame>
          <Frame depth="29">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:513)</Frame>
          <Frame depth="30">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:738)</Frame>
          <Frame depth="31">org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:910)</Frame>
          <Frame depth="32">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Redirected console output to "foo.txt" which is valid (&lt;eclipse_home&gt;/foo.txt is the full path). The file 
was created properly and contains the expected output.

Clicking on the hyperlink barfed this up:

java.lang.IllegalArgumentException: Path must include project and resource name: /foo.txt
	at org.eclipse.core.internal.utils.Assert.isLegal(Assert.java:58)
	at org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1519)
	at org.eclipse.core.internal.resources.Container.getFile(Container.java:124)
	at 
org.eclipse.debug.internal.ui.views.console.ProcessConsole$ConsoleLogFileHyperlink.linkActivated(Proc
essConsole.java:688)
	at org.eclipse.ui.console.TextConsoleViewer.mouseUp(TextConsoleViewer.java:467)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:136)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1231)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1255)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1240)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1088)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2898)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2566)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)
fixed with Bug #79735
DarinS, please verify
I get two of these attempting to verify this bug report on WinXP:
!ENTRY org.eclipse.debug.core 4 120 2004-12-05 20:16:45.625
!MESSAGE An exception occurred during launch change notification.
!STACK 0
java.util.regex.PatternSyntaxException: Illegal/unsupported escape squence 
near index 19
C:\Darins\Debugger\latest\eclipse\temp.txt
                   ^
	at java.util.regex.Pattern.error(Pattern.java:1528)
	at java.util.regex.Pattern.escape(Pattern.java:1964)
	at java.util.regex.Pattern.atom(Pattern.java:1720)
	at java.util.regex.Pattern.sequence(Pattern.java:1652)
	at java.util.regex.Pattern.expr(Pattern.java:1545)
	at java.util.regex.Pattern.compile(Pattern.java:1279)
	at java.util.regex.Pattern.&lt;init&gt;(Pattern.java:1035)
	at java.util.regex.Pattern.compile(Pattern.java:802)
	at 
org.eclipse.ui.internal.console.ConsolePatternMatcher.addPatternMatchListener
(ConsolePatternMatcher.java:205)
	at org.eclipse.ui.console.TextConsole.addPatternMatchListener
(TextConsole.java:366)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole.&lt;init&gt;
(ProcessConsole.java:126)
	at 
org.eclipse.debug.internal.ui.views.console.ProcessConsoleManager.launchChanged
(ProcessConsoleManager.java:153)
	at org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.run
(LaunchManager.java:1410)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.notify
(LaunchManager.java:1429)
	at org.eclipse.debug.internal.core.LaunchManager.fireUpdate
(LaunchManager.java:390)
	at org.eclipse.debug.core.Launch.fireChanged(Launch.java:399)
	at org.eclipse.debug.core.Launch.addProcess(Launch.java:362)
	at org.eclipse.debug.core.model.RuntimeProcess.&lt;init&gt;
(RuntimeProcess.java:124)
	at 
org.eclipse.ant.internal.ui.launchConfigurations.RemoteAntRuntimeProcess.&lt;init&gt;
(RemoteAntRuntimeProcess.java:28)
	at 
org.eclipse.ant.internal.ui.launchConfigurations.RemoteAntProcessFactory.newPro
cess(RemoteAntProcessFactory.java:31)
	at org.eclipse.debug.core.DebugPlugin.newProcess(DebugPlugin.java:628)
	at org.eclipse.jdt.launching.AbstractVMRunner.newProcess
(AbstractVMRunner.java:110)
	at org.eclipse.jdt.internal.launching.StandardVMRunner.run
(StandardVMRunner.java:252)
	at 
org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDeleg
ate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:109)
	at 
org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.runInSeparat
eVM(AntLaunchDelegate.java:485)
	at 
org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.launch
(AntLaunchDelegate.java:184)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:588)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:513)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:738)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run
(DebugUIPlugin.java:910)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

The exception only happens once (just reported twice using -console :-) ) but 
this results in not getting any output (I have it set to output to file and 
console)
*** Bug 80235 has been marked as a duplicate of this bug. ***
moved the call to replace('\\','/') from common tab to process console. has to 
be done after the variable expansion. ideally we could use windows slashes on 
windows boxes.
fixed the separators... Windows machines now show the correct separator and 
still link correctly. This requires doubling the escape sequence when creating 
the regular expression (ie use "\\\\" instead of "\\").

Changes in ProcessConsole.
DarinS, please verify.
Verified.</WithStack>
    <WithOutStack>Redirected console output to "foo.txt" which is valid (&lt;eclipse_home&gt;/foo.txt is the full path). The file 
was created properly and contains the expected output.

Clicking on the hyperlink barfed this up:

fixed with Bug #79735
DarinS, please verify
I get two of these attempting to verify this bug report on WinXP:
!ENTRY org.eclipse.debug.core 4 120 2004-12-05 20:16:45.625
!MESSAGE An exception occurred during launch change notification.
!STACK 0


The exception only happens once (just reported twice using -console :-) ) but 
this results in not getting any output (I have it set to output to file and 
console)
*** Bug 80235 has been marked as a duplicate of this bug. ***
moved the call to replace('\\','/') from common tab to process console. has to 
be done after the variable expansion. ideally we could use windows slashes on 
windows boxes.
fixed the separators... Windows machines now show the correct separator and 
still link correctly. This requires doubling the escape sequence when creating 
the regular expression (ie use "\\\\" instead of "\\").

Changes in ProcessConsole.
DarinS, please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79953" />
    <CreationDate amount="2004-12-01 20:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AST Creation Error while editing Java file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) If there is no syntax error then the declarationSourceEnd is at ';' location.</Line>
          <Line>2) If there is a syntax error and the field have an initiliazer then the</Line>
          <Line>declarationSourceEnd is at the end of the initiliazer.</Line>
          <Line>3) If there is a syntax error and the field have no initiliazer then the</Line>
          <Line>declarationSourceEnd is at the end of the field name. But the bracket are after</Line>
          <Line>the field name.</Line>
          <Line>Created attachment 16321</Line>
          <Line>Released patch for positions problem</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>While creating a new Java file Ive got into a state where a recurring "AST 
Creation Error" dialog pops up. Closing the dialog just causes it to 
immediately reappear. Restarting Eclipse didnt help.

I can continue by closing the offending file (attached to this report), but 
the error recurrs if I open it.

The file includes source fragments Ive just pasted in from an article and its 
undoubtedly invalid, but it shouldn't crash eclipse like this.
Created attachment 16282
file that causes AST error
An internal error occurred during: "Java AST creation".
java.lang.IllegalArgumentException
org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2583)
org.eclipse.jdt.core.dom.ASTConverter.updateInnerPositions
(ASTConverter.java:2863)
org.eclipse.jdt.core.dom.ASTConverter.setTypeForField(ASTConverter.java:2847)
org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration
(ASTConverter.java:2779)
org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration
(ASTConverter.java:370)
org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations
(ASTConverter.java:330)
org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)
org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)
org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)
org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST
(ASTProvider.java:439)
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis
tenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:159)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run
(SelectionListenerWithASTManager.java:136)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

The problem is a syntax error in the file.
David, why the dimensions are not included in the source positions of the type.

With latest code, it doesn't crash anymore, but the positions are incorrect.
David, could you please investigate why the positions don't include the brackets?
Once done, please move it back to me. I will ensure that the DOM/AST nodes have
the proper positions.
This is a recovery problem.

1) If there is no syntax error then the declarationSourceEnd is at ';' location.
2) If there is a syntax error and the field have an initiliazer then the
declarationSourceEnd is at the end of the initiliazer.
3) If there is a syntax error and the field have no initiliazer then the
declarationSourceEnd is at the end of the field name. But the bracket are after
the field name.
Created attachment 16321
Released patch for positions problem

Released patch for positions problem
Thanks, David. I will check that this fixed it for the ASTConverter. The
converter assumes that the brackets are inside the positions as it scans the
declaration to find the right positions for the brackets.
Fixed and released in HEAD.
Regression test added.
The type of the field declaration is a simple type "d" and the fragments has an
extra dimension of 2.
Verified for 3.1 M4 using build I200412142000 + ASTView 1.0.2.</WithStack>
    <WithOutStack>While creating a new Java file Ive got into a state where a recurring "AST 
Creation Error" dialog pops up. Closing the dialog just causes it to 
immediately reappear. Restarting Eclipse didnt help.

I can continue by closing the offending file (attached to this report), but 
the error recurrs if I open it.

The file includes source fragments Ive just pasted in from an article and its 
undoubtedly invalid, but it shouldn't crash eclipse like this.
Created attachment 16282
file that causes AST error
An internal error occurred during: "Java AST creation".
java.lang.IllegalArgumentException
org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2583)
org.eclipse.jdt.core.dom.ASTConverter.updateInnerPositions
(ASTConverter.java:2863)
org.eclipse.jdt.core.dom.ASTConverter.setTypeForField(ASTConverter.java:2847)
org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration
(ASTConverter.java:2779)
org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration
(ASTConverter.java:370)
org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations
(ASTConverter.java:330)
org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:274)
org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:152)
org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:711)
org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:681)
org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST
(ASTProvider.java:439)
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:391)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis
tenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:159)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run
(SelectionListenerWithASTManager.java:136)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

The problem is a syntax error in the file.
David, why the dimensions are not included in the source positions of the type.

With latest code, it doesn't crash anymore, but the positions are incorrect.
David, could you please investigate why the positions don't include the brackets?
Once done, please move it back to me. I will ensure that the DOM/AST nodes have
the proper positions.
This is a recovery problem.

1) If there is no syntax error then the declarationSourceEnd is at ';' location.
2) If there is a syntax error and the field have an initiliazer then the
declarationSourceEnd is at the end of the initiliazer.
3) If there is a syntax error and the field have no initiliazer then the
declarationSourceEnd is at the end of the field name. But the bracket are after
the field name.
Created attachment 16321
Released patch for positions problem

Released patch for positions problem
Thanks, David. I will check that this fixed it for the ASTConverter. The
converter assumes that the brackets are inside the positions as it scans the
declaration to find the right positions for the brackets.
Fixed and released in HEAD.
Regression test added.
The type of the field declaration is a simple type "d" and the fragments has an
extra dimension of 2.
Verified for 3.1 M4 using build I200412142000 + ASTView 1.0.2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79954" />
    <CreationDate amount="2004-12-01 21:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Patch] Apply Patch -&gt; Verify Patch page could do with a Select/De-Select all button</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>When applying patches that effect many files in many hunks, sometimes a 
developer wants to commit a small portion of the patch only.  When the patch is 
initially matched to the source, all matching hunks are selected by default.

If only one or two hunks of hundreds are to be applied, the patcher must 
individually deselect all of the unwanted matching hunks.  An improvement to 
the UI design would be to add a toggle Select All / Deselect All command button.
Apply Patch is provided by the Compare component. Moving to Compare</WithStack>
    <WithOutStack>When applying patches that effect many files in many hunks, sometimes a 
developer wants to commit a small portion of the patch only.  When the patch is 
initially matched to the source, all matching hunks are selected by default.

If only one or two hunks of hundreds are to be applied, the patcher must 
individually deselect all of the unwanted matching hunks.  An improvement to 
the UI design would be to add a toggle Select All / Deselect All command button.
Apply Patch is provided by the Compare component. Moving to Compare</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79955" />
    <CreationDate amount="2004-12-01 23:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[NL] help cannot load /org.eclipse.jdt.doc.user/topics_Tasks.xml in ja_JP locale</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Eclipse3.0.1 + NLpack-eclipse-SDK-3.0.x-win32.zip

If Eclipse/JDT is installed with NLpack in ja_JP locale,
a help system can not load /org.eclipse.jdt.doc.user/topics_Tasks.xml

see an attached log file for details.
Created attachment 16283
.log file
From the stack trace this looks like an internal help problem.
The 
Japanese translation, a file 
eclipse/plugins/org.eclipse.jdt.doc.user.nl1_3.0.1/nl/ja/topics_Reference.xml
file has some out of specs characters on the first line, that crimson parser 
does not tolerate.
As a results the Task subtree does not appear in Japanese Java Development 
User Guide.
Please add a screen capture of the problem.
Created attachment 16307
Screenshot

Without a screenshot, it is hard to tell what exactly is wrong, but I am taking
a guess here.  See the screenshot I attached and tell me if that is similar?

From what I can tell, that is the topics_Tasks.xml displaying, and it looks
correct.
Created attachment 16313
Snap2.png

Screenshot of the problem.  You need to run with Sun jre.  IBM jre contains a
more tolerant parser.
Some characters on the first line are Byte Order Mark.

XML parser must support UTF-8 file with BOM.
http://www.w3.org/TR/2004/REC-xml-20040204/#charencoding
&gt;Entities encoded in UTF-16 MUST and entities encoded in UTF-8 MAY begin with 
&gt;the Byte Order Mark described by Annex H of [ISO/IEC 10646:2000], section 2.4 
&gt;of [Unicode], and section 2.7 of [Unicode3] (the ZERO WIDTH NO-BREAK SPACE 
&gt;character, #xFEFF). This is an encoding signature, not part of either the 
&gt;markup or the character data of the XML document. XML processors MUST be able 
&gt;to use this character to differentiate between UTF-8 and UTF-16 encoded 
&gt;documents.

I think that this is a crimson's bug.
Translation files are no longer provided.</WithStack>
    <WithOutStack>Eclipse3.0.1 + NLpack-eclipse-SDK-3.0.x-win32.zip

If Eclipse/JDT is installed with NLpack in ja_JP locale,
a help system can not load /org.eclipse.jdt.doc.user/topics_Tasks.xml

see an attached log file for details.
Created attachment 16283
.log file
From the stack trace this looks like an internal help problem.
The 
Japanese translation, a file 
eclipse/plugins/org.eclipse.jdt.doc.user.nl1_3.0.1/nl/ja/topics_Reference.xml
file has some out of specs characters on the first line, that crimson parser 
does not tolerate.
As a results the Task subtree does not appear in Japanese Java Development 
User Guide.
Please add a screen capture of the problem.
Created attachment 16307
Screenshot

Without a screenshot, it is hard to tell what exactly is wrong, but I am taking
a guess here.  See the screenshot I attached and tell me if that is similar?

From what I can tell, that is the topics_Tasks.xml displaying, and it looks
correct.
Created attachment 16313
Snap2.png

Screenshot of the problem.  You need to run with Sun jre.  IBM jre contains a
more tolerant parser.
Some characters on the first line are Byte Order Mark.

XML parser must support UTF-8 file with BOM.
http://www.w3.org/TR/2004/REC-xml-20040204/#charencoding
&gt;Entities encoded in UTF-16 MUST and entities encoded in UTF-8 MAY begin with 
&gt;the Byte Order Mark described by Annex H of [ISO/IEC 10646:2000], section 2.4 
&gt;of [Unicode], and section 2.7 of [Unicode3] (the ZERO WIDTH NO-BREAK SPACE 
&gt;character, #xFEFF). This is an encoding signature, not part of either the 
&gt;markup or the character data of the XML document. XML processors MUST be able 
&gt;to use this character to differentiate between UTF-8 and UTF-16 encoded 
&gt;documents.

I think that this is a crimson's bug.
Translation files are no longer provided.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79956" />
    <CreationDate amount="2004-12-01 23:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Remote update sites require a description</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.1M3

When I add a new remote site, it prompts me with a dialog
for the URL, and also a description.  I must put something
in the description and cannot leave it blank.

I find this a usability problem.  When I am trying to download
a new package, I must stop what I am doing and think about
what to call this new site.  I think it would be an improvement
to make the name field optional, and use either the title from
the web page I link to, or simply the URL itself as a temporary
name tag.
Yes.
Many times, my clipboard contains the URL of the site I am about to add, and I 
just paste it in both locations (name and url).
Such information can be contained in site.xml file (where is a scheme for it,
btw?) Dialog for URL can contain only one field. After site URL was entered
Eclipse makes connection and reveals next editable field with description. User
can modify description or just click ok. It is a proposal. =)
This is addressed in Equinox p2 but no changes planned for update.</WithStack>
    <WithOutStack>3.1M3

When I add a new remote site, it prompts me with a dialog
for the URL, and also a description.  I must put something
in the description and cannot leave it blank.

I find this a usability problem.  When I am trying to download
a new package, I must stop what I am doing and think about
what to call this new site.  I think it would be an improvement
to make the name field optional, and use either the title from
the web page I link to, or simply the URL itself as a temporary
name tag.
Yes.
Many times, my clipboard contains the URL of the site I am about to add, and I 
just paste it in both locations (name and url).
Such information can be contained in site.xml file (where is a scheme for it,
btw?) Dialog for URL can contain only one field. After site URL was entered
Eclipse makes connection and reveals next editable field with description. User
can modify description or just click ok. It is a proposal. =)
This is addressed in Equinox p2 but no changes planned for update.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79957" />
    <CreationDate amount="2004-12-02 00:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Viewers] NPE changing input usingTableViewer and virtual</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211489">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.viewers.TableViewer$1.handleEvent(TableViewer.java:103)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:3158)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:4040)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:722)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Control.windowProc(Control.java:3025)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1400)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.windowProc(Display.java:3349)</Frame>
          <Frame depth="11">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="12">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1403)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Table.callWindowProc(Table.java:137)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Control.windowProc(Control.java:3056)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.windowProc(Display.java:3349)</Frame>
          <Frame depth="16">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="17">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1479)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2440)</Frame>
          <Frame depth="19">jface.viewers.TestJfaceVirtual.main(TestJfaceVirtual.java:49)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="6">
      <source_code type="assignment">
        <location start="136" end="177" />
        <code>Table table=new Table(shell,SWT.VIRTUAL);</code>
      </source_code>
      <source_code type="assignment">
        <location start="178" end="216" />
        <code>TableViewer tv=new TableViewer(table);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="217" end="269" />
        <code>tv.setContentProvider(new NetworkContentProvider());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="270" end="318" />
        <code>tv.setLabelProvider(new NetworkLabelProvider());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="319" end="338" />
        <code>tv.setInput(model);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="422" end="442" />
        <code>tv.setInput(model1);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using the latest code for Table viewer with a private virtual manager class
in table viewer.
i've straight forward code ... 
&lt;code&gt;
Table table=new Table(shell,SWT.VIRTUAL);
TableViewer tv=new TableViewer(table);
tv.setContentProvider(new NetworkContentProvider());
tv.setLabelProvider(new NetworkLabelProvider());
tv.setInput(model);
.
.
.
in a selection event handler for a button, i've to reset the model input
.
.
tv.setInput(model1);
.
.
Same code works fine without the SWT.VIRTUAL style bit,but when VIRTUAL is set
it throws a null pointer exception...

the stack trace was

java.lang.NullPointerException
	at org.eclipse.jface.viewers.TableViewer$1.handleEvent(TableViewer.java:103)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:3158)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:4040)
	at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:722)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3025)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1400)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3349)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1403)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3056)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3349)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1479)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2440)
	at jface.viewers.TestJfaceVirtual.main(TestJfaceVirtual.java:49)
See Bug 79180. The problem is that the refresh was refreshing one too few 
items.

Fixed in build &gt; 20041206
Verified in 20041217</WithStack>
    <WithOutStack>I'm using the latest code for Table viewer with a private virtual manager class
in table viewer.
i've straight forward code ... 
&lt;code&gt;
Table table=new Table(shell,SWT.VIRTUAL);
TableViewer tv=new TableViewer(table);
tv.setContentProvider(new NetworkContentProvider());
tv.setLabelProvider(new NetworkLabelProvider());
tv.setInput(model);
.
.
.
in a selection event handler for a button, i've to reset the model input
.
.
tv.setInput(model1);
.
.
Same code works fine without the SWT.VIRTUAL style bit,but when VIRTUAL is set
it throws a null pointer exception...

the stack trace was


See Bug 79180. The problem is that the refresh was refreshing one too few 
items.

Fixed in build &gt; 20041206
Verified in 20041217</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79958" />
    <CreationDate amount="2004-12-02 00:58:00 -0500" />
    <DupId amount="78295" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>GtkFileChooser crash on 64 bit</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="import">
        <location start="10235" end="10261" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10262" end="10295" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10296" end="10330" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10331" end="10370" />
        <code>import org.eclipse.swt.internal.gtk.OS;</code>
      </source_code>
      <source_code type="import">
        <location start="10371" end="10403" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="import">
        <location start="10404" end="10436" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="class">
        <location start="10438" end="11075" />
        <code>public class PR {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("PR");
		shell.setLayout(new FillLayout());
		
		boolean useChooserDialog = OS.gtk_check_version (2, 4, 10) == 
0;
		System.out.println("useChooserDialog "+useChooserDialog);
		
		System.out.println("step 1");
		FileDialog dialog = new FileDialog(shell);
		System.out.println("step 2");
		shell.open();
		System.out.println("step 3");
		String s = dialog.open();
		System.out.println(s);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I try to add an external jar file Eclipse crashes.
Repro steps:
Right click on Java project in Navigator, select properites, select Java Build
Path, select Libraries, click on Add external jars -&gt; crash
(This happens with several DB plugins too, when trying to add a jdbc driver,
that's where I initially discovered it)

This is what I see in the log file:

!SESSION 2004-12-01 21:49:11.498 -----------------------------------------------
eclipse.buildId=I200412011139
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=amd64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch amd64

!ENTRY org.eclipse.core.resources 1 1 2004-12-01 21:49:11.500
!MESSAGE Could not load library: libcore_3_1_0.so.  This library provides
platform-specific optimizations for certain file system operations.  This
library is not present on all platforms, so this may not be an error.  The
resources plug-in will safely fall back to using java.io.File functionality.

Rico
Is this a dup of bug 79761 ?
I don't think this is a dup of bug 79761. I'm not even selecting a jar file. I 
try to open a dialog that lets me select a jar file to add it.
Also the whole VM crashes when I click the button.

Rico
Move to Platform/Resources.
The library should be loaded.
The entry in the error log has nothing to do with the crash. To figure out what
is really going on, you will have to run Eclipse skipping the native launcher.
Please run Eclipse from the command line with:

cd &lt;eclipse install&gt;
&lt;JAVA_HOME&gt;/bin/java -jar startup.jar

Then cause the error to happen. When the VM crashes, you should get a VM dump on
the terminal. Please add the output produced to this PR.
I have released the core native library for AMD 64, so the error log entry in
this bug should no longer appear as of next integration build.
I'm running this /usr/bin/java -verbose -cp /u01/apps/eclipse/startup.jar
org.eclipse.core.launcher.Main -os linux -ws gtk -arch amd64 -debug 

But I don't get a VM dump:

[Loaded org.eclipse.jdt.internal.compiler.parser.Scanner from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.dialogs.StatusUtil from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.util.PixelConverter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathBasePage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ITreeListAdapter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElementSorter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage$SourceContainerAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$TreeViewerAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogField from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.LayoutUtil from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$2
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.ProjectsWorkbookPage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.ProjectsWorkbookPage$ProjectsAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.LibrariesWorkbookPage
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.LibrariesWorkbookPage$LibrariesAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.viewsupport.ImageDisposer from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.ClasspathOrderingWorkbookPage
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.CheckedListDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$2 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.StringDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.StringButtonDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.OpenExternalFileAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.NewTextEditorAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.texteditor.GotoLastEditPositionAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.editors.text.FileBufferOperationAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToMacOS9 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.editors.text.FileBufferOperationAction$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.internal.filebuffers.FileBuffersPlugin from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.IFileBufferManager from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.ITextFileBufferManager from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.IFileBufferOperation from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.TextEditorMessages from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.TextFileBufferOperation from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.ConvertLineDelimitersOperation
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.text.edits.TextEdit from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.text.edits.ReplaceEdit from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.Messages from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToUnix from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToWindows from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.corext.util.AllTypesCache$1$RequestorAbort from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded java.lang.IllegalMonitorStateException from
/u01/apps/jdk1.5.0/jre/lib/rt.jar]
[Loaded org.eclipse.jdt.ui.wizards.BuildPathDialogAccess from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.swt.widgets.Dialog from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.swt.widgets.FileDialog from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
Segmentation fault

No dump... sigh...

Rico, does opening the file dialog for importing preferences cause Eclipse to
crash as well (Window &gt; Preferences &gt; Import...)? Or the file dialog for opening
an external file (File &gt; Open External File...)?
In both cases it crashes.

Rico
Maybe dup of bug 77414.
I don't think this is the same problem as bug 77414.
I only had one JDK installed, and the other bug seems to be Windows related.
I tried to switch to the blackdown jsdk1.4.2 and I get the same behavior.
So it doesn't seem to be JDK specific.

Rico
I tried Eclipse M3 build ... the same problem.
But Eclipse 3.0.1 works.

Rico
NOTE: -arch amd64
I'm just wondering if you know what the problem is and if you think this fix
will make it into M4? (Would be super nice if it would :-) )

Thanks
Rico
This sounds like a bug with our GtkFileChooser. That part has been changed in 
M3 - if M2 works for you, maybe it's related to that change.

It works in our AMD64 box here but we'll check further.
Rico:
can you confirm you see the filedialog but it crashes when you press the OL 
button?
Can you browser folders correctly?
I cannot see the file dialog ... it never comes up.

Rico
Could you run the following test:
It's a standalone SWT application. You need to set Eclipse so that it finds 
the swt.jar swt-pi.jar in the classpath. And the native swt-xxxx.so library 
with the -Djava.library.path. If all that makes no sense please let me know 
and I'll provide step by step details. Otherwise please paste the console 
output back to the PR. Thanks!

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.internal.gtk.OS;
import org.eclipse.swt.events.*;
import org.eclipse.swt.layout.*;

public class PR {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("PR");
		shell.setLayout(new FillLayout());
		
		boolean useChooserDialog = OS.gtk_check_version (2, 4, 10) == 
0;
		System.out.println("useChooserDialog "+useChooserDialog);
		
		System.out.println("step 1");
		FileDialog dialog = new FileDialog(shell);
		System.out.println("step 2");
		shell.open();
		System.out.println("step 3");
		String s = dialog.open();
		System.out.println(s);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}
}
Hmmm .... not sure what to expect when running it but this is what it displayed
in the console:


useChooserDialog true
step 1
step 2
step 3

Rico
I would have liked it to crash but at least it instructs us you are using a 
more recent version of GTK than our 64 bit testing box here - and that you use 
the new GtkFileChooser dialog as a result.

We need to upgrade our GTK on our side to try to duplicate.
Something possibly truncating an argument in the code. We will update related 
bug 78295 when a new version that addresses that issue.

*** This bug has been marked as a duplicate of 78295 ***</WithStack>
    <WithOutStack>When I try to add an external jar file Eclipse crashes.
Repro steps:
Right click on Java project in Navigator, select properites, select Java Build
Path, select Libraries, click on Add external jars -&gt; crash
(This happens with several DB plugins too, when trying to add a jdbc driver,
that's where I initially discovered it)

This is what I see in the log file:

!SESSION 2004-12-01 21:49:11.498 -----------------------------------------------
eclipse.buildId=I200412011139
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=amd64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch amd64

!ENTRY org.eclipse.core.resources 1 1 2004-12-01 21:49:11.500
!MESSAGE Could not load library: libcore_3_1_0.so.  This library provides
platform-specific optimizations for certain file system operations.  This
library is not present on all platforms, so this may not be an error.  The
resources plug-in will safely fall back to using java.io.File functionality.

Rico
Is this a dup of bug 79761 ?
I don't think this is a dup of bug 79761. I'm not even selecting a jar file. I 
try to open a dialog that lets me select a jar file to add it.
Also the whole VM crashes when I click the button.

Rico
Move to Platform/Resources.
The library should be loaded.
The entry in the error log has nothing to do with the crash. To figure out what
is really going on, you will have to run Eclipse skipping the native launcher.
Please run Eclipse from the command line with:

cd &lt;eclipse install&gt;
&lt;JAVA_HOME&gt;/bin/java -jar startup.jar

Then cause the error to happen. When the VM crashes, you should get a VM dump on
the terminal. Please add the output produced to this PR.
I have released the core native library for AMD 64, so the error log entry in
this bug should no longer appear as of next integration build.
I'm running this /usr/bin/java -verbose -cp /u01/apps/eclipse/startup.jar
org.eclipse.core.launcher.Main -os linux -ws gtk -arch amd64 -debug 

But I don't get a VM dump:

[Loaded org.eclipse.jdt.internal.compiler.parser.Scanner from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.dialogs.StatusUtil from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.util.PixelConverter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathBasePage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ITreeListAdapter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElementSorter from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage$SourceContainerAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$TreeViewerAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogField from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.LayoutUtil from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$2
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.ProjectsWorkbookPage from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.ProjectsWorkbookPage$ProjectsAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.LibrariesWorkbookPage
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.LibrariesWorkbookPage$LibrariesAdapter
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.viewsupport.ImageDisposer from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.buildpaths.ClasspathOrderingWorkbookPage
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.CheckedListDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$2 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.dialogfields.StringDialogField$1
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded
org.eclipse.jdt.internal.ui.wizards.dialogfields.StringButtonDialogField$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.OpenExternalFileAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.NewTextEditorAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.texteditor.GotoLastEditPositionAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.editors.text.FileBufferOperationAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersAction from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToMacOS9 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.editors.text.FileBufferOperationAction$1 from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.internal.filebuffers.FileBuffersPlugin from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.IFileBufferManager from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.ITextFileBufferManager from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.IFileBufferOperation from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.TextEditorMessages from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.TextFileBufferOperation from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.ConvertLineDelimitersOperation
from org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.text.edits.TextEdit from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.text.edits.ReplaceEdit from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.core.filebuffers.manipulation.Messages from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToUnix from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.ui.internal.editors.text.ConvertLineDelimitersToWindows from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.jdt.internal.corext.util.AllTypesCache$1$RequestorAbort from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded java.lang.IllegalMonitorStateException from
/u01/apps/jdk1.5.0/jre/lib/rt.jar]
[Loaded org.eclipse.jdt.ui.wizards.BuildPathDialogAccess from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.swt.widgets.Dialog from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
[Loaded org.eclipse.swt.widgets.FileDialog from
org.eclipse.core.runtime.adaptor.EclipseClassLoader]
Segmentation fault

No dump... sigh...

Rico, does opening the file dialog for importing preferences cause Eclipse to
crash as well (Window &gt; Preferences &gt; Import...)? Or the file dialog for opening
an external file (File &gt; Open External File...)?
In both cases it crashes.

Rico
Maybe dup of bug 77414.
I don't think this is the same problem as bug 77414.
I only had one JDK installed, and the other bug seems to be Windows related.
I tried to switch to the blackdown jsdk1.4.2 and I get the same behavior.
So it doesn't seem to be JDK specific.

Rico
I tried Eclipse M3 build ... the same problem.
But Eclipse 3.0.1 works.

Rico
NOTE: -arch amd64
I'm just wondering if you know what the problem is and if you think this fix
will make it into M4? (Would be super nice if it would :-) )

Thanks
Rico
This sounds like a bug with our GtkFileChooser. That part has been changed in 
M3 - if M2 works for you, maybe it's related to that change.

It works in our AMD64 box here but we'll check further.
Rico:
can you confirm you see the filedialog but it crashes when you press the OL 
button?
Can you browser folders correctly?
I cannot see the file dialog ... it never comes up.

Rico
Could you run the following test:
It's a standalone SWT application. You need to set Eclipse so that it finds 
the swt.jar swt-pi.jar in the classpath. And the native swt-xxxx.so library 
with the -Djava.library.path. If all that makes no sense please let me know 
and I'll provide step by step details. Otherwise please paste the console 
output back to the PR. Thanks!

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.internal.gtk.OS;
import org.eclipse.swt.events.*;
import org.eclipse.swt.layout.*;

public class PR {

	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setText("PR");
		shell.setLayout(new FillLayout());
		
		boolean useChooserDialog = OS.gtk_check_version (2, 4, 10) == 
0;
		System.out.println("useChooserDialog "+useChooserDialog);
		
		System.out.println("step 1");
		FileDialog dialog = new FileDialog(shell);
		System.out.println("step 2");
		shell.open();
		System.out.println("step 3");
		String s = dialog.open();
		System.out.println(s);
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}		
	}
}
Hmmm .... not sure what to expect when running it but this is what it displayed
in the console:


useChooserDialog true
step 1
step 2
step 3

Rico
I would have liked it to crash but at least it instructs us you are using a 
more recent version of GTK than our 64 bit testing box here - and that you use 
the new GtkFileChooser dialog as a result.

We need to upgrade our GTK on our side to try to duplicate.
Something possibly truncating an argument in the code. We will update related 
bug 78295 when a new version that addresses that issue.

*** This bug has been marked as a duplicate of 78295 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79959" />
    <CreationDate amount="2004-12-02 01:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[select] Not able to refactor name member of aononymous class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functiondef">
        <location start="123" end="200" />
        <code>PropertyChangeListener changeListener = new PropertyChangeListener() {</code>
      </source_code>
      <source_code type="assignment">
        <location start="201" end="234" />
        <code>private int aInt = 0;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="235" end="303" />
        <code>private void yaMethod() {
                
            }</code>
      </source_code>
      <source_code type="package">
        <location start="536" end="546" />
        <code>package p;</code>
      </source_code>
      <source_code type="import">
        <location start="547" end="586" />
        <code>import java.beans.PropertyChangeEvent;</code>
      </source_code>
      <source_code type="import">
        <location start="587" end="628" />
        <code>import java.beans.PropertyChangeListener;</code>
      </source_code>
      <source_code type="class">
        <location start="630" end="855" />
        <code>class A {
	void bar() {
		PropertyChangeListener changeListener= new PropertyChangeListener() {
			private int aInt= 0;
			private void yaMethod() {
			}
			public void propertyChange(PropertyChangeEvent evt) {
			}
		};
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi,

I find we are not able to refactor the name a member field/method of anonymous
class, in the following code snippet:

       PropertyChangeListener changeListener = new PropertyChangeListener() {
            private int aInt = 0;
            private void yaMethod() {
                
            }
            ....

When I try to rename the field aInt or the method yaMethod()
bothly I have been told, "Operation unavailible on the current selection..."

Regards
Roger
This works for me using I20041201 in the following example.

package p;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

class A {
	void bar() {
		PropertyChangeListener changeListener= new PropertyChangeListener() {
			private int aInt= 0;
			private void yaMethod() {
			}
			public void propertyChange(PropertyChangeEvent evt) {
			}
		};
	}
}


Roger, please reopen and provide detailed steps and log entries (if any) if you
still see the problem.
Hi,

There must have been some mistake when I try to simplify the problem, now I've 
got it:

in ur previous class A, if I change the signature of aInt to
"private static final int aInt = 0"
then the refactor rename operation will not work.
but "private [final] int aInt = 0" is ok


ICompilationUnit#codeSelect(..) does not return the expected IField for the
"static final" field in the anonymous class. No element is returned.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Hi,

I find we are not able to refactor the name a member field/method of anonymous
class, in the following code snippet:

       PropertyChangeListener changeListener = new PropertyChangeListener() {
            private int aInt = 0;
            private void yaMethod() {
                
            }
            ....

When I try to rename the field aInt or the method yaMethod()
bothly I have been told, "Operation unavailible on the current selection..."

Regards
Roger
This works for me using I20041201 in the following example.

package p;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

class A {
	void bar() {
		PropertyChangeListener changeListener= new PropertyChangeListener() {
			private int aInt= 0;
			private void yaMethod() {
			}
			public void propertyChange(PropertyChangeEvent evt) {
			}
		};
	}
}


Roger, please reopen and provide detailed steps and log entries (if any) if you
still see the problem.
Hi,

There must have been some mistake when I try to simplify the problem, now I've 
got it:

in ur previous class A, if I change the signature of aInt to
"private static final int aInt = 0"
then the refactor rename operation will not work.
but "private [final] int aInt = 0" is ok


ICompilationUnit#codeSelect(..) does not return the expected IField for the
"static final" field in the anonymous class. No element is returned.
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79960" />
    <CreationDate amount="2004-12-02 02:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Wildcards in file name used to emulate -find</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>e.g. build*, *.ant.xml
Not currently planned.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>e.g. build*, *.ant.xml
Not currently planned.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79961" />
    <CreationDate amount="2004-12-02 02:11:00 -0500" />
    <DupId amount="22905" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] Wildcards and multi periods should be allowed anywhere in the file associations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>e.g.
assign build*.xml to Ant Editor
assign *.ant.xml to Ant Editor


*** This bug has been marked as a duplicate of 22905 ***</WithStack>
    <WithOutStack>e.g.
assign build*.xml to Ant Editor
assign *.ant.xml to Ant Editor


*** This bug has been marked as a duplicate of 22905 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79962" />
    <CreationDate amount="2004-12-02 02:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] Missing IMPORT for Workbench / Keys</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Need importing the csv file to restore the key settings.
Yes import/export preferences (bottom left).  The export is only intended for 
viewing in an external editor. 
 
For usability problems, see Bug 43506</WithStack>
    <WithOutStack>Need importing the csv file to restore the key settings.
Yes import/export preferences (bottom left).  The export is only intended for 
viewing in an external editor. 
 
For usability problems, see Bug 43506</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79963" />
    <CreationDate amount="2004-12-02 02:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Getting java.lang.OutOfMemoryError, while compilation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am trying to compile my project using AspectJ compiler v1.1.1. My Project has 
nearly 1000 java files. But everytime I compile, I 
get "java.lang.OutOfMemoryError". I have tries compiling my project in parts 
also, but it gives the same error, while compiling 200 files together. I can 
not afford to compile less than these files at a time, as these are in 
different packages also. Exact compiler options I am giving is....

C:\jdk1.4.2_04\bin\java -cp C:\progra~1\JBuilder9
\lib\ext\aspectjrt.jar;C:\progra~1
\JBuilder9lib\ext\aspectjtools.jar;D:\Temp\RecordsManager\lib-extract\ALL 
org.aspectj.tools.ajc.Main -g -d "D:\~Working\FileNet\RecordsManager\WEB-
INF\classes" -sourceroots "com\filenet\wcm;com\filenet\rm;com\filenet\portal" 
1&gt;compile_log.txt 2&gt;&amp;1 

And exact text of error is.....
java.lang.OutOfMemoryError
D:\~Working\FileNet\RecordsManager\Source\com\filenet\wcm\apps\server\ui\WcmPlug
InModule.java:0 Internal compiler error
java.lang.OutOfMemoryError

!! no source information available !!
ABORT
Exception thrown from AspectJ 1.1.1

Please look into this asap. 

I get the same error, If I try to compile the same code from JBuilder (with 
AspectJ plugin).

Regards,
Praveen
Two things spring to mind.

First, from the list of compiler options, you don't seem to be specifying a
large heap setting?  The default for the JVM is 64M I think, which isn't very
much at all.  Can you try by specifying '-Xmx256M' or '-Xmx512M' to supply more
memory?

Second, 1.1.1 is an old version of AspectJ - 1.2.1 is now out and improves
memory usage and compile/weave times - can you switch to this new version?

let me know what happens.
The problem has been resolved by using '-Xmx256M' option in compiler options. 
But this option is not accepted by AspectJ plugin in Jbuilder. I guess, this is 
not the right place to discuss about that plugin. Anyway I am able to compile 
now through command prompt after increasing heap size.

Thanks,

Praveen
For JBuilder, add the following line to your &lt;jbuilder&gt;/bin/jbuilder.config 
file:

vmparam -Xmx256m

Or more if you find it still running out.</WithStack>
    <WithOutStack>I am trying to compile my project using AspectJ compiler v1.1.1. My Project has 
nearly 1000 java files. But everytime I compile, I 
get "java.lang.OutOfMemoryError". I have tries compiling my project in parts 
also, but it gives the same error, while compiling 200 files together. I can 
not afford to compile less than these files at a time, as these are in 
different packages also. Exact compiler options I am giving is....

C:\jdk1.4.2_04\bin\java -cp C:\progra~1\JBuilder9
\lib\ext\aspectjrt.jar;C:\progra~1
\JBuilder9lib\ext\aspectjtools.jar;D:\Temp\RecordsManager\lib-extract\ALL 
org.aspectj.tools.ajc.Main -g -d "D:\~Working\FileNet\RecordsManager\WEB-
INF\classes" -sourceroots "com\filenet\wcm;com\filenet\rm;com\filenet\portal" 
1&gt;compile_log.txt 2&gt;&amp;1 

And exact text of error is.....
java.lang.OutOfMemoryError
D:\~Working\FileNet\RecordsManager\Source\com\filenet\wcm\apps\server\ui\WcmPlug
InModule.java:0 Internal compiler error
java.lang.OutOfMemoryError

!! no source information available !!
ABORT
Exception thrown from AspectJ 1.1.1

Please look into this asap. 

I get the same error, If I try to compile the same code from JBuilder (with 
AspectJ plugin).

Regards,
Praveen
Two things spring to mind.

First, from the list of compiler options, you don't seem to be specifying a
large heap setting?  The default for the JVM is 64M I think, which isn't very
much at all.  Can you try by specifying '-Xmx256M' or '-Xmx512M' to supply more
memory?

Second, 1.1.1 is an old version of AspectJ - 1.2.1 is now out and improves
memory usage and compile/weave times - can you switch to this new version?

let me know what happens.
The problem has been resolved by using '-Xmx256M' option in compiler options. 
But this option is not accepted by AspectJ plugin in Jbuilder. I guess, this is 
not the right place to discuss about that plugin. Anyway I am able to compile 
now through command prompt after increasing heap size.

Thanks,

Praveen
For JBuilder, add the following line to your &lt;jbuilder&gt;/bin/jbuilder.config 
file:

vmparam -Xmx256m

Or more if you find it still running out.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79964" />
    <CreationDate amount="2004-12-02 02:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse crashes frequently giving exit code - 255</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="28">
        <Lines>
          <Line>1. remove the gcc java lib and any java RTE JDK SDK etc.. using yum aptget this includes the IBM ones.</Line>
          <Line>2. cd /usr/lib/</Line>
          <Line>3. ll ./j*</Line>
          <Line>4. do rm -r -f on all java related files</Line>
          <Line>5. cd /usr/java</Line>
          <Line>6. rm -r -f *</Line>
          <Line>7. cd /usr/bin</Line>
          <Line>8. ll ./j*</Line>
          <Line>9. look for the broken links java related and remove them</Line>
          <Line>10. cd /etc/alternatives/</Line>
          <Line>11. ll ./j*</Line>
          <Line>12. look for the broken links java related and remove them</Line>
          <Line>13. download and install the java JDK 1.5.0_08</Line>
          <Line>14. export the java paths this is a fedora example:</Line>
          <Line />
          <Line>create /etc/profile.d/java.sh</Line>
          <Line />
          <Line>#!/bin/sh</Line>
          <Line>JAVA_HOME=/usr/java/jre1.5.0_08</Line>
          <Line>export JAVA_HOME</Line>
          <Line>JAVA_BIN=$JAVA_HOME/bin</Line>
          <Line>CLASSPATH=$CLASSPATH:$JAVA_HOME:$JAVA_HOME/lib</Line>
          <Line>PATH=$JAVA_BIN:$PATH</Line>
          <Line>export JAVA_BIN CLASSPATH PATH</Line>
          <Line />
          <Line />
          <Line>15. reboot</Line>
          <Line>16. run eclipse</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- JDK 1.5.0_01 with Eclipse 3.1M4 does neither crash my notebook, nor my desktop</Line>
          <Line>PC</Line>
          <Line>- JDK 1.5.0_01 with Eclipse 3.1M5a with the 3.1M4 workspace crashes my notebook</Line>
          <Line>as describes above, but the desktop does not crash.</Line>
          <Line>- JDK 1.5.0_01 with Eclipse 3.1M5a and a new workspace crashes much much less</Line>
          <Line>often.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Following is what I get when eclipse crashes:

I went to Sun's site to report this (as mentioned in the dump) but I decided to
post it here because of following text, please let me know if this should be
reported to sun.

&lt;from Sun site&gt;
#

Check for third party products.

If the HotSpot error occurred while running a product developed other than Sun,
please report this issue to that vendor. The developers of the product will be
able to examine their code, isolate the cause of the behavior, and provide us
with a detailed report.
&lt;/from Sun site&gt;


#
# HotSpot Virtual Machine Error, Internal Error
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b03 mixed mode)
#
# Error ID: 43113F32554E54494D45110E4350500308
#
# Problematic Thread: prio=1 tid=0x0884afa8 nid=0x2022 runnable
#

Heap at VM Abort:
Heap
 def new generation   total 1728K, used 1721K [0xef000000, 0xef1d0000, 0xef4e0000)
  eden space 1600K,  99% used [0xef000000, 0xef18e730, 0xef190000)
  from space 128K,  99% used [0xef190000, 0xef1afff8, 0xef1b0000)
  to   space 128K,   0% used [0xef1b0000, 0xef1b0000, 0xef1d0000)
 tenured generation   total 21720K, used 16430K [0xef4e0000, 0xf0a16000, 0xf3000000)
   the space 21720K,  75% used [0xef4e0000, 0xf04ebaa8, 0xf04ebc00, 0xf0a16000)
 compacting perm gen  total 25344K, used 25260K [0xf3000000, 0xf48c0000, 0xf7000000)
   the space 25344K,  99% used [0xf3000000, 0xf48ab388, 0xf48ab400, 0xf48c0000)
[error occured during error reporting]

On first attempt I got following
#
# HotSpot Virtual Machine Error, Internal Error
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b03 mixed mode)
#
# Error ID: 43113F32554E54494D45110E4350500308
#
# Problematic Thread: prio=1 tid=0x0805bb60 nid=0x1f77 runnable
#

Heap at VM Abort:
Heap
 def new generation   total 1536K, used 750K [0xef000000, 0xef1a0000, 0xef4e0000)
  eden space 1408K,  45% used [0xef000000, 0xef09eaf8, 0xef160000)
  from space 128K,  90% used [0xef180000, 0xef19ceb8, 0xef1a0000)
  to   space 128K,   0% used [0xef160000, 0xef160000, 0xef180000)
 tenured generation   total 19764K, used 12955K [0xef4e0000, 0xf082d000, 0xf3000000)
   the space 19764K,  65% used [0xef4e0000, 0xf0186c70, 0xf0186e00, 0xf082d000)
 compacting perm gen  total 23296K, used 23231K [0xf3000000, 0xf46c0000, 0xf7000000)
   the space 23296K,  99% used [0xf3000000, 0xf46afde0, 0xf46afe00, 0xf46c0000)
[error occured during error reporting]
eclipse version- 3.1M3
Version: 3.1.0
Build id: 200411050810

JDK- j2sdk1.4.2_06
OS-Fedora core 3 (2.6.9-1.667)
What were you doing when the crash occured?
Do you have anything in the .log?
-No logs do not have anything.
-Eclipse crashes anytime, sometimes just after start, sometimes when I try to
open an editor, sometimes when I try to open a Menu

by the way, when I start ecipse using IBM jdk (eclipse -vm) it works ok.
Basically, eclipse only crashes when using sun jdk and when RAM is almost full
and system is using SWAP as well.
There is very little useful information in the VM error report.  It says on the
last line:

[error occured during error reporting]

This suggests to me some internal VM corruption. Please reopen here if you are
able to get a stack dump that shows Eclipse code is running at the time of the
failure.
The same occures here with:
eclipse 3.1M4 with
every single version of j2sdk1.4.2_06 and j2re1.4.2_07
The same occures here with:
eclipse 3.1M4 with my fedora 3 with jdk: Sun 1.4.2_06, blackdown 1.4.2.rc1 and
Sun 1.5.0_01.
The latest crash (with JDK 1.5) gives this log:
#
# An unexpected error has been detected by HotSpot Virtual Machine:
#
#  Internal Error (53484152454432554E54494D450E4350500125), pid=6234, tid=8062656
#
# Java VM: Java HotSpot(TM) Client VM (1.5.0_01-b08 mixed mode, sharing)

---------------  T H R E A D  ---------------

Current thread (0x0805bbb8):  JavaThread "main" [_thread_in_Java, id=6234]

Stack: [0xfee00000,0xff000000),  sp=0xfeff9f7c,  free space=2023k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0x2da193]
V  [libjvm.so+0x11a18f]
V  [libjvm.so+0x282045]
V  [libjvm.so+0x28216e]
v  ~StubRoutines::forward exception
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j 
org.eclipse.ui.internal.commands.KeySequenceBindingMachine.getMatchesByKeySequence()Ljava/util/Map;+19
j 
org.eclipse.ui.internal.commands.KeySequenceBindingMachine.getKeySequenceBindingsByCommandId()Ljava/util/Map;+13
j 
org.eclipse.ui.internal.commands.MutableCommandManager.calculateKeySequenceBindings()V+82
j 
org.eclipse.ui.internal.commands.MutableCommandManager.setActiveContextIds(Ljava/util/Map;)V+25
j 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.setActiveContextIds(Ljava/util/Map;)V+5
j 
org.eclipse.ui.internal.Workbench$2.contextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+36
j 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+38
j 
org.eclipse.ui.internal.contexts.ProxyContextManager$1.contextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+33
j 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+38
j 
org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds(Ljava/util/Set;)V+111
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(ZLorg/eclipse/swt/widgets/Shell;)V+675
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(Z)V+12
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.addEnabledSubmissions(Ljava/util/Collection;)V+34
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.checkWindowType(Lorg/eclipse/swt/widgets/Shell;)V+194
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.access$0(Lorg/eclipse/ui/internal/contexts/ws/WorkbenchContextSupport;Lorg/eclipse/swt/widgets/Shell;)V+2
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport$1.handleEvent(Lorg/eclipse/swt/widgets/Event;)V+11
J  org.eclipse.swt.widgets.EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
J  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V
j  org.eclipse.swt.widgets.Widget.sendEvent(I)V+4
j  org.eclipse.swt.widgets.Shell.gtk_focus_in_event(II)I+37
J  org.eclipse.swt.widgets.Widget.windowProc(III)I
J  org.eclipse.swt.widgets.Display.windowProc(III)I
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x14043]  fn6_3+0x23
C  [libgtk-x11-2.0.so.0+0x10ce67]
C  [libgobject-2.0.so.0+0x9347]  g_closure_invoke+0xf6
C  [libgobject-2.0.so.0+0x1e94e]
C  [libgobject-2.0.so.0+0x20613]  g_signal_emit_valist+0x5b7
C  [libgobject-2.0.so.0+0x20c5a]  g_signal_emit+0x32
C  [libgtk-x11-2.0.so.0+0x200a75]
C  [libgtk-x11-2.0.so.0+0x10b653]  gtk_main_do_event+0x3d7
C  [libswt-pi-gtk-3116.so+0x2dc02] 
Java_org_eclipse_swt_internal_gtk_OS__1gtk_1main_1do_1event+0x1b
J  org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(I)V
J  org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(I)V
J  org.eclipse.swt.widgets.Display.eventProc(II)I
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x12d1a]  fn2_2+0x20
C  [libgdk-x11-2.0.so.0+0x3d082]
C  [libglib-2.0.so.0+0x2374b]  g_main_context_dispatch+0x1cb
C  [libglib-2.0.so.0+0x251d2]
C  [libglib-2.0.so.0+0x256b8]  g_main_context_iteration+0x63
C  [libswt-pi-gtk-3116.so+0x27020] 
Java_org_eclipse_swt_internal_gtk_OS__1g_1main_1context_1iteration+0x20
J  org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(IZ)Z
J  org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(IZ)Z
J  org.eclipse.swt.widgets.Display.readAndDispatch()Z
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j  org.eclipse.jface.window.Window.runEventLoop(Lorg/eclipse/swt/widgets/Shell;)V+23
j  org.eclipse.jface.window.Window.open()I+34
j  org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.open()I+1
j  org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.open()I+127
j  org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run()V+54
j 
org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(Lorg/eclipse/jface/action/IAction;)V+1
j 
org.eclipse.ui.internal.PluginAction.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V+124
j 
org.eclipse.ui.internal.WWinPluginAction.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V+9
j 
org.eclipse.ui.commands.ActionHandler.execute(Ljava/util/Map;)Ljava/lang/Object;+64
j 
org.eclipse.ui.internal.commands.Command.execute(Ljava/util/Map;)Ljava/lang/Object;+93
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(Ljava/lang/String;)Z+237
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(Ljava/util/List;Lorg/eclipse/swt/widgets/Event;)Z+200
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(Ljava/util/List;Lorg/eclipse/swt/widgets/Event;)V+14
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(Lorg/eclipse/swt/widgets/Event;)V+158
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(Lorg/eclipse/ui/internal/keys/WorkbenchKeyboard;Lorg/eclipse/swt/widgets/Event;)V+2
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(Lorg/eclipse/swt/widgets/Event;)V+167
J  org.eclipse.swt.widgets.EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
J  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V+4
j 
org.eclipse.swt.widgets.Widget.sendKeyEvent(ILorg/eclipse/swt/internal/gtk/GdkEventKey;)Z+44
j  org.eclipse.swt.widgets.Widget.gtk_key_press_event(II)I+19
j  org.eclipse.swt.widgets.Control.gtk_key_press_event(II)I+93
j  org.eclipse.swt.widgets.Composite.gtk_key_press_event(II)I+3
j  org.eclipse.swt.widgets.Tree.gtk_key_press_event(II)I+3
J  org.eclipse.swt.widgets.Widget.windowProc(III)I
J  org.eclipse.swt.widgets.Display.windowProc(III)I
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x14043]  fn6_3+0x23
...&lt;more frames&gt;...


---------------  P R O C E S S  ---------------

Java Threads: ( =&gt; current thread )
  0x08922fa8 JavaThread "Worker-11" [_thread_blocked, id=6737]
  0x0823c670 JavaThread "Worker-9" [_thread_blocked, id=6380]
  0x081c3290 JavaThread "Worker-3" [_thread_blocked, id=6255]
  0x0870b3f8 JavaThread "Java indexing" daemon [_thread_blocked, id=6248]
  0x085c15a0 JavaThread "Reference Cleaner: 1" [_thread_blocked, id=6247]
  0x083b32f0 JavaThread "Start Level Event Dispatcher" daemon [_thread_blocked,
id=6245]
  0x083d2d80 JavaThread "Framework Event Dispatcher" daemon [_thread_blocked,
id=6244]
  0x080a0948 JavaThread "Low Memory Detector" daemon [_thread_blocked, id=6240]
  0x0809f3f8 JavaThread "CompilerThread0" daemon [_thread_blocked, id=6239]
  0x0809e4e8 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=6238]
  0x080997c0 JavaThread "Finalizer" daemon [_thread_blocked, id=6237]
  0x08098a88 JavaThread "Reference Handler" daemon [_thread_blocked, id=6236]
=&gt;0x0805bbb8 JavaThread "main" [_thread_in_Java, id=6234]

Other Threads:
  0x08095fc8 VMThread [id=6235]
  0x080a1dd8 WatcherThread [id=6241]

VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap
 def new generation   total 2752K, used 1574K [0xcd400000, 0xcd6f0000, 0xcd8e0000)
  eden space 2496K,  52% used [0xcd400000, 0xcd5499d8, 0xcd670000)
  from space 256K, 100% used [0xcd670000, 0xcd6b0000, 0xcd6b0000)
  to   space 256K,   0% used [0xcd6b0000, 0xcd6b0000, 0xcd6f0000)
 tenured generation   total 35172K, used 31115K [0xcd8e0000, 0xcfb39000, 0xd1400000)
   the space 35172K,  88% used [0xcd8e0000, 0xcf742db0, 0xcf742e00, 0xcfb39000)
 compacting perm gen  total 27648K, used 27530K [0xd1400000, 0xd2f00000, 0xd5400000)
   the space 27648K,  99% used [0xd1400000, 0xd2ee2800, 0xd2ee2800, 0xd2f00000)
    ro space 8192K,  68% used [0xd5400000, 0xd5978578, 0xd5978600, 0xd5c00000)
    rw space 12288K,  47% used [0xd5c00000, 0xd61b6370, 0xd61b6400, 0xd6800000)

Dynamic libraries:
00111000-00232000 r-xp 00000000 03:41 598166     /lib/tls/libc-2.3.3.so
00232000-00234000 r-xp 00120000 03:41 598166     /lib/tls/libc-2.3.3.so
00234000-00236000 rwxp 00122000 03:41 598166     /lib/tls/libc-2.3.3.so
00236000-00238000 rwxp 00236000 00:00 0 
00238000-00259000 r-xp 00000000 03:41 196051    
/usr/java/jdk1.5.0_01/jre/lib/i386/libjava.so
00259000-0025b000 rwxp 00020000 03:41 196051    
/usr/java/jdk1.5.0_01/jre/lib/i386/libjava.so
0025b000-0026e000 r-xp 00000000 03:41 196071    
/usr/java/jdk1.5.0_01/jre/lib/i386/libzip.so
0026e000-00270000 rwxp 00012000 03:41 196071    
/usr/java/jdk1.5.0_01/jre/lib/i386/libzip.so
00270000-00284000 r-xs 00000000 03:41 196115    
/usr/java/jdk1.5.0_01/jre/lib/jce.jar
00284000-00296000 rwxp 00284000 00:00 0 
00296000-002a2000 rwxp 00296000 00:00 0 
002a2000-002a9000 rwxp 002a2000 00:00 0 
002a9000-002ab000 r-xs 00000000 03:41 195994    
/usr/java/jdk1.5.0_01/jre/lib/ext/dnsns.jar
002ab000-002b0000 r-xs 00000000 03:43 2885561   
/home/sabri/compiler/preview3M4/eclipse/startup.jar
002b0000-002b8000 r-xs 00000000 03:43 3115832   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
002b8000-002b9000 r-xs 00000000 03:43 3146138   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.1.0/compatibility.jar
002b9000-002bb000 r-xs 00000000 03:43 3115644   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui_3.1.0/ui.jar
002bb000-002bc000 r-xp 00000000 03:41 226654    
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
002bc000-002bd000 rwxp 00000000 03:41 226654    
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
002bd000-002be000 r-xp 002bd000 00:00 0 
002be000-00328000 rwxp 002be000 00:00 0 
00328000-0033a000 rwxp 00328000 00:00 0 
0033a000-00346000 rwxp 0033a000 00:00 0 
00346000-00354000 rwxp 00346000 00:00 0 
00354000-00366000 rwxp 00354000 00:00 0 
00366000-0037f000 rwxp 00366000 00:00 0 
0037f000-00392000 rwxp 0037f000 00:00 0 
00392000-003b8000 r-xs 00000000 03:41 195996    
/usr/java/jdk1.5.0_01/jre/lib/ext/sunjce_provider.jar
003b8000-003c4000 r-xs 00000000 03:43 3115834   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/osgi.jar
003c4000-003da000 r-xs 00000000 03:43 3115833   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/resolver.jar
003dc000-003ee000 r-xp 00000000 03:41 599392     /lib/libnsl-2.3.3.so
003ee000-003ef000 r-xp 00011000 03:41 599392     /lib/libnsl-2.3.3.so
003ef000-003f0000 rwxp 00012000 03:41 599392     /lib/libnsl-2.3.3.so
003f0000-003f2000 rwxp 003f0000 00:00 0 
003f2000-00408000 r-xs 00000000 03:43 3115836   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/defaultAdaptor.jar
00408000-0040e000 r-xp 00000000 03:41 196066    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnio.so
0040e000-0040f000 rwxp 00005000 03:41 196066    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnio.so
0040f000-00412000 r-xp 00000000 03:41 229847     /usr/lib/libgthread-2.0.so.0.400.7
00412000-00413000 rwxp 00003000 03:41 229847     /usr/lib/libgthread-2.0.so.0.400.7
00413000-00417000 r-xp 00000000 03:41 188791     /usr/X11R6/lib/libXtst.so.6.1
00417000-00418000 rwxp 00003000 03:41 188791     /usr/X11R6/lib/libXtst.so.6.1
00419000-0042b000 rwxp 00419000 00:00 0 
0042b000-00499000 rwxp 0042b000 00:00 0 
00499000-004b8000 r-xs 00000000 03:43 3115835   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
004b8000-004b9000 rwxp 004b8000 00:00 0 
004bb000-004c3000 rwxs 00000000 03:41 161066     /tmp/hsperfdata_sabri/6234
004c3000-004c4000 ---p 004c3000 00:00 0 
004c4000-00544000 rwxp 004c4000 00:00 0 
00544000-00547000 ---p 00544000 00:00 0 
00547000-005c5000 rwxp 00547000 00:00 0 
005c5000-005d9000 r-xp 00000000 03:41 196065    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnet.so
005d9000-005da000 rwxp 00013000 03:41 196065    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnet.so
005da000-005dc000 r-xp 00000000 03:41 229822     /usr/lib/libgmodule-2.0.so.0.400.7
005dc000-005dd000 rwxp 00002000 03:41 229822     /usr/lib/libgmodule-2.0.so.0.400.7
005de000-005e7000 r-xp 00000000 03:41 592050     /lib/libnss_files-2.3.3.so
005e7000-005e8000 r-xp 00008000 03:41 592050     /lib/libnss_files-2.3.3.so
005e8000-005e9000 rwxp 00009000 03:41 592050     /lib/libnss_files-2.3.3.so
005e9000-00614000 r-xs 00000000 03:41 195997    
/usr/java/jdk1.5.0_01/jre/lib/ext/sunpkcs11.jar
00614000-00629000 r-xs 00000000 03:43 3145947   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
00629000-0063f000 r-xs 00000000 03:43 3130653   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
0063f000-0064a000 r-xp 00000000 03:41 196070    
/usr/java/jdk1.5.0_01/jre/lib/i386/libverify.so
0064a000-0064b000 rwxp 0000b000 03:41 196070    
/usr/java/jdk1.5.0_01/jre/lib/i386/libverify.so
0064b000-0064e000 ---p 0064b000 00:00 0 
0064e000-006cc000 rwxp 0064e000 00:00 0 
006cc000-006d0000 r-xp 00000000 03:41 229908     /usr/lib/libpangoxft-1.0.so.0.600.0
006d0000-006d1000 rwxp 00003000 03:41 229908     /usr/lib/libpangoxft-1.0.so.0.600.0
006d1000-006d6000 rwxp 006d1000 00:00 0 
006d6000-006d9000 ---p 006d6000 00:00 0 
006d9000-00757000 rwxp 006d9000 00:00 0 
00757000-00764000 r-xs 00000000 03:43 3131445   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt-mozilla.jar
00764000-00766000 r-xp 00000000 03:41 612042     /usr/X11R6/lib/libXrandr.so.2.0
00766000-00767000 rwxp 00002000 03:41 612042     /usr/X11R6/lib/libXrandr.so.2.0
00767000-00769000 r-xp 00000000 03:41 612044     /usr/X11R6/lib/libXinerama.so.1.0
00769000-0076a000 rwxp 00001000 03:41 612044     /usr/X11R6/lib/libXinerama.so.1.0
0076b000-00780000 r-xp 00000000 03:41 598165     /lib/ld-2.3.3.so
00780000-00781000 r-xp 00014000 03:41 598165     /lib/ld-2.3.3.so
00781000-00782000 rwxp 00015000 03:41 598165     /lib/ld-2.3.3.so
00782000-0079d000 r-xs 00000000 03:43 3131444   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt-pi.jar
0079d000-007a7000 r-xp 00000000 03:41 230138     /usr/lib/libpangox-1.0.so.0.600.0
007a7000-007a8000 rwxp 00009000 03:41 230138     /usr/lib/libpangox-1.0.so.0.600.0
007a8000-007af000 r-xp 00000000 03:41 612040     /usr/X11R6/lib/libXrender.so.1.2.2
007af000-007b0000 rwxp 00006000 03:41 612040     /usr/X11R6/lib/libXrender.so.1.2.2
007b0000-007b1000 rwxp 007b0000 00:00 0 
007b1000-007e9000 r-xs 00000000 03:43 3115831   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
007e9000-007ef000 r-xs 00000000 03:41 192860     /usr/lib/gconv/gconv-modules.cache
007ef000-007f0000 r-xp 00000000 03:41 192788     /usr/lib/gconv/ISO8859-1.so
007f0000-007f2000 rwxp 00000000 03:41 192788     /usr/lib/gconv/ISO8859-1.so
007f2000-007fe000 r-xp 00000000 03:41 291312    
/usr/lib/gtk-2.0/2.4.0/engines/libbluecurve.so
007fe000-007ff000 rwxp 0000b000 03:41 291312    
/usr/lib/gtk-2.0/2.4.0/engines/libbluecurve.so
007ff000-00813000 r-xp 00000000 03:41 229824    
/usr/lib/libgdk_pixbuf-2.0.so.0.400.13
00813000-00814000 rwxp 00013000 03:41 229824    
/usr/lib/libgdk_pixbuf-2.0.so.0.400.13
00815000-0089c000 r-xs 00000000 03:41 196174    
/usr/java/jdk1.5.0_01/jre/lib/jsse.jar
0089c000-008a9000 r-xp 00000000 03:41 612039     /usr/X11R6/lib/libXext.so.6.4
008a9000-008aa000 rwxp 0000c000 03:41 612039     /usr/X11R6/lib/libXext.so.6.4
008aa000-008ac000 r-xp 00000000 03:43 2999840   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources.linux_3.0.0/os/linux/x86/libcore_3_1_0.so
008ac000-008ad000 rwxp 00001000 03:43 2999840   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources.linux_3.0.0/os/linux/x86/libcore_3_1_0.so
008ad000-008ce000 r-xp 00000000 03:41 598168     /lib/tls/libm-2.3.3.so
008ce000-008cf000 r-xp 00020000 03:41 598168     /lib/tls/libm-2.3.3.so
008cf000-008d0000 rwxp 00021000 03:41 598168     /lib/tls/libm-2.3.3.so
008d2000-008d4000 r-xp 00000000 03:41 598175     /lib/libdl-2.3.3.so
008d4000-008d5000 r-xp 00001000 03:41 598175     /lib/libdl-2.3.3.so
008d5000-008d6000 rwxp 00002000 03:41 598175     /lib/libdl-2.3.3.so
008d6000-008de000 r-xp 00000000 03:41 612043     /usr/X11R6/lib/libXcursor.so.1.0.2
008de000-008df000 rwxp 00007000 03:41 612043     /usr/X11R6/lib/libXcursor.so.1.0.2
008df000-008e1000 r-xp 00000000 03:41 245005    
/usr/lib/pango/1.4.0/modules/pango-basic-fc.so
008e1000-008e2000 rwxp 00001000 03:41 245005    
/usr/lib/pango/1.4.0/modules/pango-basic-fc.so
008e2000-008e5000 r-xp 00000000 03:41 245058    
/usr/lib/gtk-2.0/2.4.0/loaders/libpixbufloader-png.so
008e5000-008e6000 rwxp 00003000 03:41 245058    
/usr/lib/gtk-2.0/2.4.0/loaders/libpixbufloader-png.so
008e7000-008ed000 r-xp 00000000 03:41 196075    
/usr/java/jdk1.5.0_01/jre/lib/i386/native_threads/libhpi.so
008ed000-008ee000 rwxp 00006000 03:41 196075    
/usr/java/jdk1.5.0_01/jre/lib/i386/native_threads/libhpi.so
008ee000-008f1000 ---p 008ee000 00:00 0 
008f1000-0096f000 rwxp 008f1000 00:00 0 
0096f000-009af000 r-xp 00000000 03:43 3131453   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-pi-gtk-3116.so
009af000-009b1000 rwxp 00040000 03:43 3131453   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-pi-gtk-3116.so
009b1000-009c2000 r-xp 00000000 03:41 612045     /usr/X11R6/lib/libXft.so.2.1.2
009c2000-009c3000 rwxp 00010000 03:41 612045     /usr/X11R6/lib/libXft.so.2.1.2
009c3000-009d1000 r-xp 00000000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d1000-009d2000 r-xp 0000d000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d2000-009d3000 rwxp 0000e000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d3000-009d5000 rwxp 009d3000 00:00 0 
009d5000-00cf1000 r-xp 00000000 03:41 196034    
/usr/java/jdk1.5.0_01/jre/lib/i386/client/libjvm.so
00cf1000-00d0e000 rwxp 0031c000 03:41 196034    
/usr/java/jdk1.5.0_01/jre/lib/i386/client/libjvm.so
00d0e000-01124000 rwxp 00d0e000 00:00 0 
01124000-01324000 r-xp 00000000 03:41 179820     /usr/lib/locale/locale-archive
01324000-01327000 ---p 01324000 00:00 0 
01327000-013a5000 rwxp 01327000 00:00 0 
013a5000-013a6000 ---p 013a5000 00:00 0 
013a6000-01426000 rwxp 013a6000 00:00 0 
01426000-014ea000 r-xs 00000000 03:41 96409     
/usr/java/jdk1.5.0_01/jre/lib/ext/localedata.jar
014ea000-014ed000 rwxp 014ea000 00:00 0 
014ed000-0156b000 rwxp 014ed000 00:00 0 
0156b000-0156e000 ---p 0156b000 00:00 0 
0156e000-015ec000 rwxp 0156e000 00:00 0 
015ec000-015ef000 ---p 015ec000 00:00 0 
015ef000-0166d000 rwxp 015ef000 00:00 0 
0166d000-016ce000 r-xs 00000000 03:43 3130636   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.runtime_3.1.0/runtime.jar
016ce000-016f0000 r-xp 00000000 03:41 229816     /usr/lib/libfontconfig.so.1.0.4
016f0000-016f3000 rwxp 00022000 03:41 229816     /usr/lib/libfontconfig.so.1.0.4
016f3000-016f4000 rwxp 016f3000 00:00 0 
016f4000-01703000 r-xs 00000000 03:43 3131472   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.help_3.0.0/help.jar
01703000-03cc4000 r-xs 00000000 03:41 196618    
/usr/java/jdk1.5.0_01/jre/lib/rt.jar
03cc4000-03f36000 r-xs 00000000 03:43 3116291   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench_3.1.0/workbench.jar
03f36000-03fba000 r-xs 00000000 03:43 3129832   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jface_3.1.0/jface.jar
03fba000-04021000 r-xp 00000000 03:41 187232     /usr/lib/libgdk-x11-2.0.so.0.400.13
04021000-04026000 rwxp 00066000 03:41 187232     /usr/lib/libgdk-x11-2.0.so.0.400.13
04026000-040e9000 r-xp 00000000 03:41 612012     /usr/X11R6/lib/libX11.so.6.2
040e9000-040ed000 rwxp 000c3000 03:41 612012     /usr/X11R6/lib/libX11.so.6.2
040ed000-0411e000 r-xp 00000000 03:41 179824     /usr/lib/libpango-1.0.so.0.600.0
0411e000-04123000 rwxp 00030000 03:41 179824     /usr/lib/libpango-1.0.so.0.600.0
04123000-0415d000 r-xp 00000000 03:41 229823     /usr/lib/libgobject-2.0.so.0.400.7
0415d000-0415e000 rwxp 00039000 03:41 229823     /usr/lib/libgobject-2.0.so.0.400.7
0415e000-0415f000 rwxp 0415e000 00:00 0 
0415f000-0417c000 r-xp 00000000 03:41 229815     /usr/lib/libexpat.so.0.5.0
0417c000-0417e000 rwxp 0001d000 03:41 229815     /usr/lib/libexpat.so.0.5.0
0417e000-04184000 r-xs 00000000 03:43 3115973   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.update.scheduler_3.0.0/scheduler.jar
04184000-042de000 r-xs 00000000 03:43 3130352   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.ide_3.1.0/ide.jar
042de000-04586000 r-xp 00000000 03:41 230162     /usr/lib/libgtk-x11-2.0.so.0.400.13
04586000-0458f000 rwxp 002a8000 03:41 230162     /usr/lib/libgtk-x11-2.0.so.0.400.13
0458f000-04592000 rwxp 0458f000 00:00 0 
04592000-0460c000 r-xp 00000000 03:41 184470     /usr/lib/libglib-2.0.so.0.400.7
0460c000-0460d000 rwxp 0007a000 03:41 184470     /usr/lib/libglib-2.0.so.0.400.7
0460d000-0466d000 r-xp 00000000 03:41 229814     /usr/lib/libfreetype.so.6.3.7
0466d000-04674000 rwxp 00060000 03:41 229814     /usr/lib/libfreetype.so.6.3.7
04674000-04699000 r-xp 00000000 03:41 179863     /usr/lib/libpangoft2-1.0.so.0.600.0
04699000-0469a000 rwxp 00025000 03:41 179863     /usr/lib/libpangoft2-1.0.so.0.600.0
0469a000-046a9000 r-xp 00000000 03:41 65222      /usr/lib/libz.so.1.2.1.2
046a9000-046aa000 rwxp 0000e000 03:41 65222      /usr/lib/libz.so.1.2.1.2
046aa000-046d0000 r-xp 00000000 03:43 3131451   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-gtk-3116.so
046d0000-046d2000 rwxp 00025000 03:43 3131451   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-gtk-3116.so
046d2000-046d3000 rwxp 046d2000 00:00 0 
046d3000-04733000 rwxs 00000000 00:06 4292631    /SYSV00000000 (deleted)
04733000-047db000 r-xs 00000000 03:43 3131531   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources_3.1.0/resources.jar
047db000-0480f000 r-xs 00000000 03:43 3130659   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.core_3.1.0/team.jar
0480f000-04821000 r-xp 00000000 03:41 433086    
/usr/X11R6/lib/X11/fonts/Type1/l048013t.pfa
04821000-0482a000 r-xp 00000000 03:41 288203    
/usr/share/fonts/default/Type1/s050000l.pfb
0482a000-04856000 r-xs 00000000 03:43 3115826   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.text_3.1.0/text.jar
04856000-0486f000 r-xs 00000000 03:43 3145886   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ltk.core.refactoring_3.1.0/refcore.jar
0486f000-04881000 r-xs 00000000 03:43 3116023   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.filebuffers_3.1.0/filebuffers.jar
04882000-04971000 r-xs 00000000 03:43 3131446   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt.jar
04971000-04974000 ---p 04971000 00:00 0 
04974000-049f2000 rwxp 04974000 00:00 0 
049f2000-049f5000 ---p 049f2000 00:00 0 
049f5000-04a73000 rwxp 049f5000 00:00 0 
04a73000-04b11000 r-xs 00000000 03:43 2999842   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jface.text_3.1.0/jfacetext.jar
04b11000-04b6e000 r-xs 00000000 03:43 3129837   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.editors_3.1.0/editors.jar
04b6e000-04bd0000 r-xs 00000000 03:43 3131340   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench.texteditor_3.1.0/texteditor.jar
04bd0000-04bde000 r-xs 00000000 03:43 3146233   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.views_3.1.0/views.jar
04bde000-04c0b000 r-xs 00000000 03:43 3131363   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.launching_3.1.0/launching.jar
04c0b000-04c43000 r-xs 00000000 03:43 3129826   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.debug.core_3.1.0/dtcore.jar
04c43000-04caa000 r-xs 00000000 03:43 3131353   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde.core_3.1.0/pdecore.jar
04caa000-04cbc000 r-xp 00000000 03:41 433090    
/usr/X11R6/lib/X11/fonts/Type1/l048033t.pfa
04cbc000-04cce000 r-xp 00000000 03:41 433088    
/usr/X11R6/lib/X11/fonts/Type1/l048016t.pfa
04cce000-04cee000 r-xs 00000000 03:43 3146265   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ltk.ui.refactoring_3.1.0/refui.jar
04cf3000-04cfa000 r-xp 00000000 03:41 188875     /usr/X11R6/lib/libXi.so.6.0
04cfa000-04cfb000 rwxp 00006000 03:41 188875     /usr/X11R6/lib/libXi.so.6.0
04cfd000-04d15000 r-xp 00000000 03:41 187274     /usr/lib/libatk-1.0.so.0.800.0
04d15000-04d17000 rwxp 00018000 03:41 187274     /usr/lib/libatk-1.0.so.0.800.0
04d17000-05040000 r-xs 00000000 03:43 3116169   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.core_3.1.0/jdtcore.jar
05040000-05043000 rwxp 05040000 00:00 0 
05043000-050c1000 rwxp 05043000 00:00 0 
050c1000-050c4000 rwxp 050c1000 00:00 0 
050c4000-05142000 rwxp 050c4000 00:00 0 
05142000-0514f000 r-xs 00000000 03:43 3115852   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.expressions_3.1.0/expressions.jar
0514f000-0515c000 r-xs 00000000 03:43 2966981   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug_3.1.0/jdi.jar
05174000-0518e000 r-xs 00000000 03:43 2999852   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.externaltools_3.1.0/externaltools.jar
0518f000-05192000 ---p 0518f000 00:00 0 
05192000-05210000 rwxp 05192000 00:00 0 
05210000-05320000 r-xs 00000000 03:43 3130462   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.debug.ui_3.1.0/dtui.jar
05320000-05380000 rwxs 00000000 00:06 4325400    /SYSV00000000 (deleted)
05380000-0548e000 r-xs 00000000 03:43 3116092   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.cvs.ui_3.1.0/teamcvsui.jar
0548e000-054ab000 r-xs 00000000 03:43 2966975   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.console_3.1.0/console.jar
054ab000-054bc000 r-xs 00000000 03:43 3130304   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde_3.1.0/pde.jar
054bc000-054cf000 r-xp 00000000 03:41 433078    
/usr/X11R6/lib/X11/fonts/Type1/l047013t.pfa
054da000-05d15000 r-xs 00000000 03:41 196116    
/usr/java/jdk1.5.0_01/jre/lib/charsets.jar
05d15000-06185000 rwxp 05d15000 00:00 0 
06185000-07d15000 rwxp 06185000 00:00 0 
07d15000-07d89000 r-xs 00000000 03:43 3115978   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.cvs.core_3.1.0/cvs.jar
07d89000-07d8c000 ---p 07d89000 00:00 0 
07d8c000-07e0a000 rwxp 07d8c000 00:00 0 
07e0a000-07e0d000 rwxp 07e0a000 00:00 0 
07e0d000-07e8b000 rwxp 07e0d000 00:00 0 
07e8b000-07e8e000 ---p 07e8b000 00:00 0 
07e8e000-07f0c000 rwxp 07e8e000 00:00 0 
07f0c000-07f98000 r-xs 00000000 03:43 3116204   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.ui_3.1.0/teamui.jar
07f98000-08045000 r-xs 00000000 03:43 2966982   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug_3.1.0/jdimodel.jar
08048000-08056000 r-xp 00000000 03:41 195962     /usr/java/jdk1.5.0_01/jre/bin/java
08056000-08058000 rwxp 0000e000 03:41 195962     /usr/java/jdk1.5.0_01/jre/bin/java
08058000-08ae9000 rwxp 08058000 00:00 0 
cd400000-cd6f0000 rwxp cd400000 00:00 0 
cd6f0000-cd8e0000 rwxp cd6f0000 00:00 0 
cd8e0000-cfb39000 rwxp cd8e0000 00:00 0 
cfb39000-d1400000 rwxp cfb39000 00:00 0 
d1400000-d2f00000 rwxp d1400000 00:00 0 
d2f00000-d5400000 rwxp d2f00000 00:00 0 
d5400000-d5979000 r-xs 00001000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d5979000-d5c00000 rwxp d5979000 00:00 0 
d5c00000-d61b7000 rwxp 0057a000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d61b7000-d6800000 rwxp d61b7000 00:00 0 
d6800000-d68cf000 rwxp 00b31000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d68cf000-d6c00000 rwxp d68cf000 00:00 0 
d6c00000-d6c04000 r-xs 00c00000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d6c04000-d7000000 rwxp d6c04000 00:00 0 
f4d00000-f4d21000 rwxp f4d00000 00:00 0 
f4d21000-f4e00000 ---p f4d21000 00:00 0 
f645f000-f6481000 r-xp 00000000 03:41 185990     /usr/lib/libpng12.so.0.1.2.7
f6481000-f6482000 rwxp 00022000 03:41 185990     /usr/lib/libpng12.so.0.1.2.7
f6482000-f6496000 r-xp 00000000 03:41 433080    
/usr/X11R6/lib/X11/fonts/Type1/l047016t.pfa
f6496000-f6499000 rwxp f6496000 00:00 0 
f6499000-f6517000 rwxp f6499000 00:00 0 
f6517000-f651a000 rwxp f6517000 00:00 0 
f651a000-f6598000 rwxp f651a000 00:00 0 
f6598000-f659b000 rwxp f6598000 00:00 0 
f659b000-f6619000 rwxp f659b000 00:00 0 
f6619000-f67f2000 r-xs 00000000 03:43 3130910   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde.ui_3.1.0/pdeui.jar
f67f2000-f67f5000 rwxp f67f2000 00:00 0 
f67f5000-f6873000 rwxp f67f5000 00:00 0 
f6873000-f6876000 rwxp f6873000 00:00 0 
f6876000-f68f4000 rwxp f6876000 00:00 0 
f68f4000-f68f7000 rwxp f68f4000 00:00 0 
f68f7000-f6975000 rwxp f68f7000 00:00 0 
f6975000-f6a65000 r-xs 00000000 03:43 3116524   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug.ui_3.1.0/jdiui.jar
f6a65000-f7000000 r-xs 00000000 03:43 3129928   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.ui_3.1.0/jdt.jar
fee00000-fee03000 ---p fee00000 00:00 0 
fee03000-ff000000 rwxp fee03000 00:00 0 
ffffe000-fffff000 ---p 00000000 00:00 0 

VM Arguments:
java_command: org.eclipse.core.launcher.Main -os linux -ws gtk -arch x86
-showsplash /home/sabri/compiler/preview3M4/eclipse/eclipse -showsplash 600
-exitdata /home/sabri/compiler/preview3M4/eclipse/eclipse -exitdata 408015
-Xmx256M -vm /usr/java/jdk1.5.0_01/jre/bin/java -vmargs -cp
/home/sabri/compiler/preview3M4/eclipse/startup.jar org.eclipse.core.launcher.Main

Environment Variables:
JAVA_HOME=/usr/java/jdk1.5.0_01
PATH=/usr/kerberos/bin:/usr/java/jdk1.5.0_01/jre/bin:/usr/java/jdk1.5.0_01/bin:/home/sabri/compiler/apache-ant-1.5.3-1/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/sbin:/home/sabri/compiler/opt/bin:/home/sabri/compiler/apache-ant-1.5.3-1/bin:/home/sabri/bin
LD_LIBRARY_PATH=/usr/java/jdk1.5.0_01/jre/lib/i386/client:/usr/java/jdk1.5.0_01/jre/lib/i386:/usr/java/jdk1.5.0_01/jre/../lib/i386:/usr/java/jdk1.5.0_01/jre/lib/i386:/usr/java/jdk1.5.0_01/jre/lib/i386/client::/usr/lib/mozilla-1.7.3
SHELL=/bin/bash
DISPLAY=:0.0


---------------  S Y S T E M  ---------------

OS:Fedora Core release 3 (Heidelberg)

uname:Linux 2.6.9-1.667 #1 Tue Nov 2 14:41:25 EST 2004 i686
libc:glibc 2.3.3 NPTL 2.3.3 
rlimit: STACK 10240k, CORE 0k, NPROC 12275, NOFILE 1024, AS infinity
load average:0.01 0.04 0.08

CPU:total 1 family 15, cmov, cx8, fxsr, mmx, sse, sse2, ht

Memory: 4k page, physical 775088k(78196k free), swap 819304k(819304k free)

vm_info: Java HotSpot(TM) Client VM (1.5.0_01-b08) for linux-x86, built on Dec 
6 2004 20:41:12 by java_re with gcc 3.2.1-7a (J2SE release)



I have had this HotSpot crash for 3.1 Milestones M2, M3 and M3 since I 
installed SuSE 9.2 which has java build 1.4.2_05-b04. I have been running #
with -Xint for 3 months (which really is annoying...)

Browsing the JDC shows several bugs with this HotSpot failure ID, some fixed,
some not, all complicated and hard to track. Most indicate this has to 
do with eclipse opening a large number of files at the same time (and 
I get the crash either on startup or while doing CVS synchronize!), some
suspect the gfx card driver.

Although this issue is most probably not caused by Eclipsed, it would be
worthwhile to help sun people fix the bug, or provide a workaround in eclipse.

I have the same issue with j2sdk 1.4.2-05, j2sdk 1.4.2-06, jdk 1.5.0 and jdk 
1.5.0-01 on Mandrake Linux. 
Ever since I upgraded to current cooker (since about 1 month ago) Eclipse 
crashes every time I run it - either immidietly (before even the workspace 
selector comes up) or after I start working. 
 
It crashes with both GTK and Motif versions although the motif version crashed 
with a different error (and I got a java stack trace) so I'm not sure its 
related. 
 
I tried to use 3.0, 3.0.1, 3.1M3 and M4 and several post-M4 integration builds 
- all behave the same way. 
 
I noticed that if I set the system locale to en (different from what I usually 
use which is en_US.utf8) then eclipse stays up the most time - maybe even 10 
minutes. 
 
Ever since the above mentioned upgrade, I also had unexpected crashes in 
Mozilla applications and OpenOffice which I thought may be related to a GTK+2 
issue, though these are more rare then Eclipse's crashes and other GTK+2 
applications (for example: evolution) seems to work fine. 
 
I found a page on the net describing fix done to some kind of Java based 
product to work around an issue with the same error ID as this and thought it 
may be related, so here it is:  
http://www.orindasoft.com/public/V4 Fixestwo.php4 
 

try -vmargs -Dosgi.locking = java.io and enjoy :-)
(In reply to comment #9)
&gt; try -vmargs -Dosgi.locking = java.io and enjoy :-)

Sorry, that was too quick, but for me, this runs much longer
than without, eclipse is faster, and the crash looked somewhat
different. Maybe this has some informational value after all.
*** Bug 85800 has been marked as a duplicate of this bug. ***
I am getting the same JVM crash behaviour on SUSE 9.1 with M4 (gtk) and various
Sun 1.4 JDK's. Setting -vmargs -Dosgi.locking=java.io seems to have no effect at
all. Seems like Sun lay the blame with Eclipse saying it's something in the 3rd
party product and Eclipse dev's lay the blame with Sun saying it's a VM bug.
Can't we all just get along and try figure out how to fix this?
Sun is not blaming Eclipse, is actually asking us to investigate the
circumstances the problems happens in the context of running Eclipse. The
problem is that we need to reproduce it consistently. Since we cannot, and the
VM dump just does not leave any clue on when the problem happens, we need help
from the users experiencing this problem. So far, it seems the problem happens
randomly, sometimes during startup, sometimes while performing user actions. We
need to find out a single simplest flow that always (or at least often enough)
causes the crash. Can anybody provide a test case that works at least in their
own setup?



Sun is not blaming Eclipse, is actually asking us to investigate the
circumstances the problems happens in the context of running Eclipse. The
problem is that we need to reproduce it consistently. Since we cannot, and the
VM dump just does not leave any clue on when the problem happens, we need help
from the users experiencing this problem. So far, it seems the problem happens
randomly, sometimes during startup, sometimes while performing user actions. We
need to find out a single simplest flow that always (or at least often enough)
causes the crash. Can anybody provide a test case that works at least in their
own setup?
Sheesh... what a mess. 
Sorry about that. Resolving again.
There's more to it than just Sun or Eclipse.
The collegue sitting opposite to me has the very same Hardware (Dell D800),
the very same Java version, the very same Linux (SuSE 9.2 supplied kernel), 
also a 3.1 milestone and for him it does not crash.
I tried 4 different JREs today, from 1.4.0 (eclipse doesn't work ;-), 1.4.1 
(crash) and different 1.4.2s (all crash). Last week I tried different eclipse
milestones.
Maybe it is related to having or not having some kernel settings, or having (or
not) installed some SuSE packages...

Since the osgi.locking thing issue, I am suspecting some filesystem or
device driver issues. (we both have ide dma on, so that'S not it).

Anyway, I will try with some IBM JRE, maybe that's good for a change. I will
keep you posted...

Was restless, had to try. ;-)

Indeed, IBM JRE 1.4.2 looks very promising.
When usually I crashed during startup, I just did 5 refreshes and 10
clean/builds and it worked well.

And it's a lot faster than Sun JRE with -Xint ;-)

http://www-106.ibm.com/developerworks/java/jdk/linux140/

What are your experiences ?

I have a very similar experience, M4 works perfectly on the exact same version
of SUSE and kernel on my work machine but on my home machine (different hardware
admittedly) no 1.4 versions of Sun's JDKs work. It never runs for more than one
or two "open editor" clicks. The thing is that 3.01 works fine so something must
have been introduced inbetween which is causing this. I haven't tried the IBM
JDK but will do so this weekend and let you know on Monday if that helps. That's
still more of a workaround than a fix though.
IBM 1.4 JDK works fine as Tom experienced too. Oh well, at least I can use M4
now although it's not 100% ideal as the production system is running Sun's JDK
and it's always best to develop against a system that's as close to production
as possible.
*** Bug 86925 has been marked as a duplicate of this bug. ***
(In reply to comment #20)
&gt; IBM 1.4 JDK works fine as Tom experienced too. Oh well, at least I can use M4

This didn't help. Tried out with IBM 1.42, Sun 1.4.2_05,_07 and other fixes
mentioned here. The interesting part for me is that if I remove qtengine for GTK
path I get the following GTK error

(&lt;unknown&gt;:2695): Gtk-WARNING **: Unable to locate theme engine in module_path:
"qtengine",

but eclipse keeps running for quite a long while before crashing. And when it
crashes, its usually when I try to switch between 2 open files in the editor of
usually 2 different types like txt and java
A little more checking on Google turned this out
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4820592

Sun claims that this has been fixed on 1.5, so downloaded 1.5.0_01. So far so
good (this is with qtengine included in path). Will report back if the error
resurfaces.
(In reply to comment #22)
&gt; This didn't help. Tried out with IBM 1.42, Sun 1.4.2_05,_07 and other fixes
&gt; mentioned here. 

Well, I have been running for 2 weeks now with no crash, so for me IBM JRE
works great. Your problem must be something different than mine.

Concerning the bug parade link, if you search a bit more, you will see that 
there is a large number of bugs with that exact hotspot crash, some fixed, some
not. So maybe the solution is a bit different for everybody of us ;-)
I had the same problem on a Linux Mandrake 10 (comment #8), using kernel 
2.6.3. I've seen a similar behavior on other computers running 2.6.7 and 2.6.8 
(the last one very infrequently). 
 
I recently upgraded to 2.6.10 kernel from Mandrake and have since had no more 
issues with crashing eclipse regardless of the JVM in use. note: only the 
kernel was upgraded. 
I am experiencing the same phenomenon, but MORE CONSISTENTLY!
My Eclipse crashes 3 of 4 times during startup,
the remaining 1 of 4 times it crashes within the next 30 to 60 seconds.

The following combinations of Eclipse and Sun VM procude interesting results:
- JDK 1.5.0_01 with Eclipse 3.1M4 does neither crash my notebook, nor my desktop 
PC
- JDK 1.5.0_01 with Eclipse 3.1M5a with the 3.1M4 workspace crashes my notebook 
as describes above, but the desktop does not crash.
- JDK 1.5.0_01 with Eclipse 3.1M5a and a new workspace crashes much much less 
often.

Perhaps it helps that I submit my 3.1M4 workspace to produce the crash on your 
machines too? So I did.

Good luck!
Created attachment 19018
The crashing workspace attachment, as mentioned above.

The crashing workspace attachment, as mentioned above.
Created attachment 19019
The error message when using the workspace

The error message when using the workspace
At bugs.sun.com, I can find my native stack frames in a bug in the 
WindowsLookAndFeel rasterizer. They say that this is caused using some fonts 
only.
Commenters, do you use custom or rare fonts? I do. Perhaps this is the reason.

The Sun bug entry:
http://bugs.sun.com/bugdatabase/view_bug.do;:WuuT?bug_id=6174389

I will attach the font I use for my editors.
Created attachment 19020
An example of a font that may cause this problem.
I had a similar bug. (It was Error Code 1 but also Error ID:
43113F32554E54494D45110E4350500308)
I used eclipse 3.0.2 with jdk 1.4 as provided with suse 9.2.
I then tried with the IBM jre 1.4. Didn't work - now i got error Code 13 shortly
after startup.
Finally i got it to work by using jdk 1.5 and specifiying the vm path as
commandline argument.
I have also seen the workaround by specifying jdk 1.5.0 on the commandline.
Please see bug 81803 and bug 86925.
I had a similar error, and tried multiple VM's with the similar results (i.e. a
crash each time). I narrowed it down to SWT's GTK bindings, as the crash does
not occur with the Motif version. Finally, my fix was to choose a different GTK
theme, the crash only seems to occur with me with the "Thin Keramic" theme
(unfortunately the default on SuSe).

I will withhold judgement on whether this is a bug in GTK, the "Thin Keramic"
style engine, or SWT itself...
Careful, there are a few different problems all reported on this bug now.

TheReincarnator: Your crash log is from a Windows machine.  Please file a new
bug for this issue.

Others: There are some known issues with the gtk-qt theme engine shipped with
SuSE 9.2.  Please see bug 77928 for more information.  This bug is tracking
crash logs that have no stack trace, only a cryptic VM error ID, which may be
bugs in the Sun VM.
I just noticed that the previous comment is similar to the contents below.  
However, I still posted this comment to make the previous statement more 
transparent. 
 
After reading the comments I think that I may have been encountered the same 
error.  I noticed in one of the posts that the person had problems with the 
library: 
     libgobject-2.0.so.0 
I also had a problem with this library and when eclipse (and firefox for that 
matter) would try to start a SIGSEV signal was caught (aka a segmentation fault 
occured).  As a result, eclipse (and firefox) would not start. 
 
It is important to note that I was using Suse 9.2 and was currently running KDE 
3.3.0.  I then tried to start eclipse after starting a failsafe session (with 
only X running) and eclipse started fine.  Indeed when I started gnome, Eclipse 
would also run fine. 
 
I looked into the rpms that I had recently installed and found one that looked 
suspicious, 'gtk-qt-engine-0.6cvs20050229-4.1'  I did an rpm erase (aka 'rpm -e 
gtk-qt-engine-0.6cvs20050229-4.1') of this package.  After I did so, Eclipse 
and Firefox would start fine. 
 
In one person's post, he said that he and his colleage had the same Suse 
installation.  However, his eclipse wouldn't work but hist colleage's would.  
This could have been due to the packate 'gtk-qt-engine-0.6cvs20050229-4.1'.  In 
fact, if I remember correctly, Yast offered to install this package for me.  
Thus, if someone just checked all of the available packages to install/upgrade 
or had a fully automatic upgrade, it would have been easy to have eclipse work 
one day and not the next (assuming this package is the one and only one to 
blame). 
 
I hope this is helpful. 
Faced similar problem (Error ID : 43113F32554E54494D45110E4350500308) with
Eclipse running on SUSE Prof 9.3 JDK 1.4.2_06-b03, mixed mode.
After reading this thread, installed GNome and ran Eclipse. Works just fine.
I got the solution for your problem... 
in the eclipse.ini type:
-vm /usr/java/jdk1.5.0_01/jre/bin/java
-vmargs
-Xbootclasspath/a:"$JAVA_HOME"/lib/tools.jar
-Xverify:none
-XX:+UseParallelGC
-XX:PermSize=20M
-XX:MaxNewSize=32M
-XX:NewSize=32M

-Xms80m
-Xmx300m

and the problem is over... 
I work out here... 

HP Compaq
P4 3.2
2GB DDR
160GB Sata
Suse 9.3
Eclipse 3.1
WebTools 0.7
Final
I have found a fix for this,

The problem has much less to do with eclipse than the java clutter on a computer.

1. remove the gcc java lib and any java RTE JDK SDK etc.. using yum aptget this includes the IBM ones.
2. cd /usr/lib/
3. ll ./j*
4. do rm -r -f on all java related files
5. cd /usr/java
6. rm -r -f *
7. cd /usr/bin
8. ll ./j*
9. look for the broken links java related and remove them
10. cd /etc/alternatives/
11. ll ./j*
12. look for the broken links java related and remove them
13. download and install the java JDK 1.5.0_08
14. export the java paths this is a fedora example:

create /etc/profile.d/java.sh

#!/bin/sh
JAVA_HOME=/usr/java/jre1.5.0_08
export JAVA_HOME
JAVA_BIN=$JAVA_HOME/bin
CLASSPATH=$CLASSPATH:$JAVA_HOME:$JAVA_HOME/lib
PATH=$JAVA_BIN:$PATH
export JAVA_BIN CLASSPATH PATH


15. reboot
16. run eclipse

You will want to reconfigure applications like mozilla to the new java if it has installed in a new location/version.  Here is the usual command:
    
ln -s /usr/java/jdk1.5.0_08/jre/plugin/i386/ns7/libjavaplugin_oji.so
 /usr/lib/mozilla/plugins

Hope this works,  :)
the software pacht no resolve my problem with Rationalñ MOdeler 6.0 all the time  i open modeler and open the project this error 255 it appears, teh system is windows XP and eclipse is 3.0
(In reply to comment #39)
&gt; the software pacht no resolve my problem with Rationalñ MOdeler 6.0 all the
&gt; time  i open modeler and open the project this error 255 it appears, teh system
&gt; is windows XP and eclipse is 3.0
&gt; 

Could you give some more information, in better English please, what patch are you talking about, and what is the exact error message, 255 is generic. If it is the same as above posts, it is a JAVA problem not eclipse.

MODERATOR PLEASE CLOSE THIS BUG, IT IS NOT A ECLIPSE BUG</WithStack>
    <WithOutStack>Following is what I get when eclipse crashes:

I went to Sun's site to report this (as mentioned in the dump) but I decided to
post it here because of following text, please let me know if this should be
reported to sun.

&lt;from Sun site&gt;
#

Check for third party products.

If the HotSpot error occurred while running a product developed other than Sun,
please report this issue to that vendor. The developers of the product will be
able to examine their code, isolate the cause of the behavior, and provide us
with a detailed report.
&lt;/from Sun site&gt;


#
# HotSpot Virtual Machine Error, Internal Error
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b03 mixed mode)
#
# Error ID: 43113F32554E54494D45110E4350500308
#
# Problematic Thread: prio=1 tid=0x0884afa8 nid=0x2022 runnable
#

Heap at VM Abort:
Heap
 def new generation   total 1728K, used 1721K [0xef000000, 0xef1d0000, 0xef4e0000)
  eden space 1600K,  99% used [0xef000000, 0xef18e730, 0xef190000)
  from space 128K,  99% used [0xef190000, 0xef1afff8, 0xef1b0000)
  to   space 128K,   0% used [0xef1b0000, 0xef1b0000, 0xef1d0000)
 tenured generation   total 21720K, used 16430K [0xef4e0000, 0xf0a16000, 0xf3000000)
   the space 21720K,  75% used [0xef4e0000, 0xf04ebaa8, 0xf04ebc00, 0xf0a16000)
 compacting perm gen  total 25344K, used 25260K [0xf3000000, 0xf48c0000, 0xf7000000)
   the space 25344K,  99% used [0xf3000000, 0xf48ab388, 0xf48ab400, 0xf48c0000)
[error occured during error reporting]

On first attempt I got following
#
# HotSpot Virtual Machine Error, Internal Error
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b03 mixed mode)
#
# Error ID: 43113F32554E54494D45110E4350500308
#
# Problematic Thread: prio=1 tid=0x0805bb60 nid=0x1f77 runnable
#

Heap at VM Abort:
Heap
 def new generation   total 1536K, used 750K [0xef000000, 0xef1a0000, 0xef4e0000)
  eden space 1408K,  45% used [0xef000000, 0xef09eaf8, 0xef160000)
  from space 128K,  90% used [0xef180000, 0xef19ceb8, 0xef1a0000)
  to   space 128K,   0% used [0xef160000, 0xef160000, 0xef180000)
 tenured generation   total 19764K, used 12955K [0xef4e0000, 0xf082d000, 0xf3000000)
   the space 19764K,  65% used [0xef4e0000, 0xf0186c70, 0xf0186e00, 0xf082d000)
 compacting perm gen  total 23296K, used 23231K [0xf3000000, 0xf46c0000, 0xf7000000)
   the space 23296K,  99% used [0xf3000000, 0xf46afde0, 0xf46afe00, 0xf46c0000)
[error occured during error reporting]
eclipse version- 3.1M3
Version: 3.1.0
Build id: 200411050810

JDK- j2sdk1.4.2_06
OS-Fedora core 3 (2.6.9-1.667)
What were you doing when the crash occured?
Do you have anything in the .log?
-No logs do not have anything.
-Eclipse crashes anytime, sometimes just after start, sometimes when I try to
open an editor, sometimes when I try to open a Menu

by the way, when I start ecipse using IBM jdk (eclipse -vm) it works ok.
Basically, eclipse only crashes when using sun jdk and when RAM is almost full
and system is using SWAP as well.
There is very little useful information in the VM error report.  It says on the
last line:

[error occured during error reporting]

This suggests to me some internal VM corruption. Please reopen here if you are
able to get a stack dump that shows Eclipse code is running at the time of the
failure.
The same occures here with:
eclipse 3.1M4 with
every single version of j2sdk1.4.2_06 and j2re1.4.2_07
The same occures here with:
eclipse 3.1M4 with my fedora 3 with jdk: Sun 1.4.2_06, blackdown 1.4.2.rc1 and
Sun 1.5.0_01.
The latest crash (with JDK 1.5) gives this log:
#
# An unexpected error has been detected by HotSpot Virtual Machine:
#
#  Internal Error (53484152454432554E54494D450E4350500125), pid=6234, tid=8062656
#
# Java VM: Java HotSpot(TM) Client VM (1.5.0_01-b08 mixed mode, sharing)

---------------  T H R E A D  ---------------

Current thread (0x0805bbb8):  JavaThread "main" [_thread_in_Java, id=6234]

Stack: [0xfee00000,0xff000000),  sp=0xfeff9f7c,  free space=2023k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0x2da193]
V  [libjvm.so+0x11a18f]
V  [libjvm.so+0x282045]
V  [libjvm.so+0x28216e]
v  ~StubRoutines::forward exception
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j 
org.eclipse.ui.internal.commands.KeySequenceBindingMachine.getMatchesByKeySequence()Ljava/util/Map;+19
j 
org.eclipse.ui.internal.commands.KeySequenceBindingMachine.getKeySequenceBindingsByCommandId()Ljava/util/Map;+13
j 
org.eclipse.ui.internal.commands.MutableCommandManager.calculateKeySequenceBindings()V+82
j 
org.eclipse.ui.internal.commands.MutableCommandManager.setActiveContextIds(Ljava/util/Map;)V+25
j 
org.eclipse.ui.internal.commands.ws.WorkbenchCommandSupport.setActiveContextIds(Ljava/util/Map;)V+5
j 
org.eclipse.ui.internal.Workbench$2.contextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+36
j 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+38
j 
org.eclipse.ui.internal.contexts.ProxyContextManager$1.contextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+33
j 
org.eclipse.ui.internal.contexts.AbstractContextManager.fireContextManagerChanged(Lorg/eclipse/ui/contexts/ContextManagerEvent;)V+38
j 
org.eclipse.ui.internal.contexts.MutableContextManager.setEnabledContextIds(Ljava/util/Set;)V+111
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(ZLorg/eclipse/swt/widgets/Shell;)V+675
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.processEnabledSubmissions(Z)V+12
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.addEnabledSubmissions(Ljava/util/Collection;)V+34
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.checkWindowType(Lorg/eclipse/swt/widgets/Shell;)V+194
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.access$0(Lorg/eclipse/ui/internal/contexts/ws/WorkbenchContextSupport;Lorg/eclipse/swt/widgets/Shell;)V+2
j 
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport$1.handleEvent(Lorg/eclipse/swt/widgets/Event;)V+11
J  org.eclipse.swt.widgets.EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
J  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V
j  org.eclipse.swt.widgets.Widget.sendEvent(I)V+4
j  org.eclipse.swt.widgets.Shell.gtk_focus_in_event(II)I+37
J  org.eclipse.swt.widgets.Widget.windowProc(III)I
J  org.eclipse.swt.widgets.Display.windowProc(III)I
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x14043]  fn6_3+0x23
C  [libgtk-x11-2.0.so.0+0x10ce67]
C  [libgobject-2.0.so.0+0x9347]  g_closure_invoke+0xf6
C  [libgobject-2.0.so.0+0x1e94e]
C  [libgobject-2.0.so.0+0x20613]  g_signal_emit_valist+0x5b7
C  [libgobject-2.0.so.0+0x20c5a]  g_signal_emit+0x32
C  [libgtk-x11-2.0.so.0+0x200a75]
C  [libgtk-x11-2.0.so.0+0x10b653]  gtk_main_do_event+0x3d7
C  [libswt-pi-gtk-3116.so+0x2dc02] 
Java_org_eclipse_swt_internal_gtk_OS__1gtk_1main_1do_1event+0x1b
J  org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(I)V
J  org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(I)V
J  org.eclipse.swt.widgets.Display.eventProc(II)I
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x12d1a]  fn2_2+0x20
C  [libgdk-x11-2.0.so.0+0x3d082]
C  [libglib-2.0.so.0+0x2374b]  g_main_context_dispatch+0x1cb
C  [libglib-2.0.so.0+0x251d2]
C  [libglib-2.0.so.0+0x256b8]  g_main_context_iteration+0x63
C  [libswt-pi-gtk-3116.so+0x27020] 
Java_org_eclipse_swt_internal_gtk_OS__1g_1main_1context_1iteration+0x20
J  org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(IZ)Z
J  org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(IZ)Z
J  org.eclipse.swt.widgets.Display.readAndDispatch()Z
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j  org.eclipse.jface.window.Window.runEventLoop(Lorg/eclipse/swt/widgets/Shell;)V+23
j  org.eclipse.jface.window.Window.open()I+34
j  org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.open()I+1
j  org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.open()I+127
j  org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run()V+54
j 
org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(Lorg/eclipse/jface/action/IAction;)V+1
j 
org.eclipse.ui.internal.PluginAction.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V+124
j 
org.eclipse.ui.internal.WWinPluginAction.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V+9
j 
org.eclipse.ui.commands.ActionHandler.execute(Ljava/util/Map;)Ljava/lang/Object;+64
j 
org.eclipse.ui.internal.commands.Command.execute(Ljava/util/Map;)Ljava/lang/Object;+93
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(Ljava/lang/String;)Z+237
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(Ljava/util/List;Lorg/eclipse/swt/widgets/Event;)Z+200
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(Ljava/util/List;Lorg/eclipse/swt/widgets/Event;)V+14
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(Lorg/eclipse/swt/widgets/Event;)V+158
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(Lorg/eclipse/ui/internal/keys/WorkbenchKeyboard;Lorg/eclipse/swt/widgets/Event;)V+2
j 
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(Lorg/eclipse/swt/widgets/Event;)V+167
J  org.eclipse.swt.widgets.EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
J  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V
v  ~RuntimeStub::alignment_frame_return Runtime1 stub
j  org.eclipse.swt.widgets.Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V+4
j 
org.eclipse.swt.widgets.Widget.sendKeyEvent(ILorg/eclipse/swt/internal/gtk/GdkEventKey;)Z+44
j  org.eclipse.swt.widgets.Widget.gtk_key_press_event(II)I+19
j  org.eclipse.swt.widgets.Control.gtk_key_press_event(II)I+93
j  org.eclipse.swt.widgets.Composite.gtk_key_press_event(II)I+3
j  org.eclipse.swt.widgets.Tree.gtk_key_press_event(II)I+3
J  org.eclipse.swt.widgets.Widget.windowProc(III)I
J  org.eclipse.swt.widgets.Display.windowProc(III)I
v  ~StubRoutines::call_stub
V  [libjvm.so+0x168c1c]
V  [libjvm.so+0x254668]
V  [libjvm.so+0x168a4f]
V  [libjvm.so+0x18a703]
V  [libjvm.so+0x175a24]
C  [libswt-gtk-3116.so+0x25000]  callback+0x1e4
C  [libswt-gtk-3116.so+0x14043]  fn6_3+0x23
...&lt;more frames&gt;...


---------------  P R O C E S S  ---------------

Java Threads: ( =&gt; current thread )
  0x08922fa8 JavaThread "Worker-11" [_thread_blocked, id=6737]
  0x0823c670 JavaThread "Worker-9" [_thread_blocked, id=6380]
  0x081c3290 JavaThread "Worker-3" [_thread_blocked, id=6255]
  0x0870b3f8 JavaThread "Java indexing" daemon [_thread_blocked, id=6248]
  0x085c15a0 JavaThread "Reference Cleaner: 1" [_thread_blocked, id=6247]
  0x083b32f0 JavaThread "Start Level Event Dispatcher" daemon [_thread_blocked,
id=6245]
  0x083d2d80 JavaThread "Framework Event Dispatcher" daemon [_thread_blocked,
id=6244]
  0x080a0948 JavaThread "Low Memory Detector" daemon [_thread_blocked, id=6240]
  0x0809f3f8 JavaThread "CompilerThread0" daemon [_thread_blocked, id=6239]
  0x0809e4e8 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=6238]
  0x080997c0 JavaThread "Finalizer" daemon [_thread_blocked, id=6237]
  0x08098a88 JavaThread "Reference Handler" daemon [_thread_blocked, id=6236]
=&gt;0x0805bbb8 JavaThread "main" [_thread_in_Java, id=6234]

Other Threads:
  0x08095fc8 VMThread [id=6235]
  0x080a1dd8 WatcherThread [id=6241]

VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap
 def new generation   total 2752K, used 1574K [0xcd400000, 0xcd6f0000, 0xcd8e0000)
  eden space 2496K,  52% used [0xcd400000, 0xcd5499d8, 0xcd670000)
  from space 256K, 100% used [0xcd670000, 0xcd6b0000, 0xcd6b0000)
  to   space 256K,   0% used [0xcd6b0000, 0xcd6b0000, 0xcd6f0000)
 tenured generation   total 35172K, used 31115K [0xcd8e0000, 0xcfb39000, 0xd1400000)
   the space 35172K,  88% used [0xcd8e0000, 0xcf742db0, 0xcf742e00, 0xcfb39000)
 compacting perm gen  total 27648K, used 27530K [0xd1400000, 0xd2f00000, 0xd5400000)
   the space 27648K,  99% used [0xd1400000, 0xd2ee2800, 0xd2ee2800, 0xd2f00000)
    ro space 8192K,  68% used [0xd5400000, 0xd5978578, 0xd5978600, 0xd5c00000)
    rw space 12288K,  47% used [0xd5c00000, 0xd61b6370, 0xd61b6400, 0xd6800000)

Dynamic libraries:
00111000-00232000 r-xp 00000000 03:41 598166     /lib/tls/libc-2.3.3.so
00232000-00234000 r-xp 00120000 03:41 598166     /lib/tls/libc-2.3.3.so
00234000-00236000 rwxp 00122000 03:41 598166     /lib/tls/libc-2.3.3.so
00236000-00238000 rwxp 00236000 00:00 0 
00238000-00259000 r-xp 00000000 03:41 196051    
/usr/java/jdk1.5.0_01/jre/lib/i386/libjava.so
00259000-0025b000 rwxp 00020000 03:41 196051    
/usr/java/jdk1.5.0_01/jre/lib/i386/libjava.so
0025b000-0026e000 r-xp 00000000 03:41 196071    
/usr/java/jdk1.5.0_01/jre/lib/i386/libzip.so
0026e000-00270000 rwxp 00012000 03:41 196071    
/usr/java/jdk1.5.0_01/jre/lib/i386/libzip.so
00270000-00284000 r-xs 00000000 03:41 196115    
/usr/java/jdk1.5.0_01/jre/lib/jce.jar
00284000-00296000 rwxp 00284000 00:00 0 
00296000-002a2000 rwxp 00296000 00:00 0 
002a2000-002a9000 rwxp 002a2000 00:00 0 
002a9000-002ab000 r-xs 00000000 03:41 195994    
/usr/java/jdk1.5.0_01/jre/lib/ext/dnsns.jar
002ab000-002b0000 r-xs 00000000 03:43 2885561   
/home/sabri/compiler/preview3M4/eclipse/startup.jar
002b0000-002b8000 r-xs 00000000 03:43 3115832   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
002b8000-002b9000 r-xs 00000000 03:43 3146138   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.1.0/compatibility.jar
002b9000-002bb000 r-xs 00000000 03:43 3115644   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui_3.1.0/ui.jar
002bb000-002bc000 r-xp 00000000 03:41 226654    
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
002bc000-002bd000 rwxp 00000000 03:41 226654    
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
002bd000-002be000 r-xp 002bd000 00:00 0 
002be000-00328000 rwxp 002be000 00:00 0 
00328000-0033a000 rwxp 00328000 00:00 0 
0033a000-00346000 rwxp 0033a000 00:00 0 
00346000-00354000 rwxp 00346000 00:00 0 
00354000-00366000 rwxp 00354000 00:00 0 
00366000-0037f000 rwxp 00366000 00:00 0 
0037f000-00392000 rwxp 0037f000 00:00 0 
00392000-003b8000 r-xs 00000000 03:41 195996    
/usr/java/jdk1.5.0_01/jre/lib/ext/sunjce_provider.jar
003b8000-003c4000 r-xs 00000000 03:43 3115834   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/osgi.jar
003c4000-003da000 r-xs 00000000 03:43 3115833   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/resolver.jar
003dc000-003ee000 r-xp 00000000 03:41 599392     /lib/libnsl-2.3.3.so
003ee000-003ef000 r-xp 00011000 03:41 599392     /lib/libnsl-2.3.3.so
003ef000-003f0000 rwxp 00012000 03:41 599392     /lib/libnsl-2.3.3.so
003f0000-003f2000 rwxp 003f0000 00:00 0 
003f2000-00408000 r-xs 00000000 03:43 3115836   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/defaultAdaptor.jar
00408000-0040e000 r-xp 00000000 03:41 196066    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnio.so
0040e000-0040f000 rwxp 00005000 03:41 196066    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnio.so
0040f000-00412000 r-xp 00000000 03:41 229847     /usr/lib/libgthread-2.0.so.0.400.7
00412000-00413000 rwxp 00003000 03:41 229847     /usr/lib/libgthread-2.0.so.0.400.7
00413000-00417000 r-xp 00000000 03:41 188791     /usr/X11R6/lib/libXtst.so.6.1
00417000-00418000 rwxp 00003000 03:41 188791     /usr/X11R6/lib/libXtst.so.6.1
00419000-0042b000 rwxp 00419000 00:00 0 
0042b000-00499000 rwxp 0042b000 00:00 0 
00499000-004b8000 r-xs 00000000 03:43 3115835   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
004b8000-004b9000 rwxp 004b8000 00:00 0 
004bb000-004c3000 rwxs 00000000 03:41 161066     /tmp/hsperfdata_sabri/6234
004c3000-004c4000 ---p 004c3000 00:00 0 
004c4000-00544000 rwxp 004c4000 00:00 0 
00544000-00547000 ---p 00544000 00:00 0 
00547000-005c5000 rwxp 00547000 00:00 0 
005c5000-005d9000 r-xp 00000000 03:41 196065    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnet.so
005d9000-005da000 rwxp 00013000 03:41 196065    
/usr/java/jdk1.5.0_01/jre/lib/i386/libnet.so
005da000-005dc000 r-xp 00000000 03:41 229822     /usr/lib/libgmodule-2.0.so.0.400.7
005dc000-005dd000 rwxp 00002000 03:41 229822     /usr/lib/libgmodule-2.0.so.0.400.7
005de000-005e7000 r-xp 00000000 03:41 592050     /lib/libnss_files-2.3.3.so
005e7000-005e8000 r-xp 00008000 03:41 592050     /lib/libnss_files-2.3.3.so
005e8000-005e9000 rwxp 00009000 03:41 592050     /lib/libnss_files-2.3.3.so
005e9000-00614000 r-xs 00000000 03:41 195997    
/usr/java/jdk1.5.0_01/jre/lib/ext/sunpkcs11.jar
00614000-00629000 r-xs 00000000 03:43 3145947   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
00629000-0063f000 r-xs 00000000 03:43 3130653   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
0063f000-0064a000 r-xp 00000000 03:41 196070    
/usr/java/jdk1.5.0_01/jre/lib/i386/libverify.so
0064a000-0064b000 rwxp 0000b000 03:41 196070    
/usr/java/jdk1.5.0_01/jre/lib/i386/libverify.so
0064b000-0064e000 ---p 0064b000 00:00 0 
0064e000-006cc000 rwxp 0064e000 00:00 0 
006cc000-006d0000 r-xp 00000000 03:41 229908     /usr/lib/libpangoxft-1.0.so.0.600.0
006d0000-006d1000 rwxp 00003000 03:41 229908     /usr/lib/libpangoxft-1.0.so.0.600.0
006d1000-006d6000 rwxp 006d1000 00:00 0 
006d6000-006d9000 ---p 006d6000 00:00 0 
006d9000-00757000 rwxp 006d9000 00:00 0 
00757000-00764000 r-xs 00000000 03:43 3131445   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt-mozilla.jar
00764000-00766000 r-xp 00000000 03:41 612042     /usr/X11R6/lib/libXrandr.so.2.0
00766000-00767000 rwxp 00002000 03:41 612042     /usr/X11R6/lib/libXrandr.so.2.0
00767000-00769000 r-xp 00000000 03:41 612044     /usr/X11R6/lib/libXinerama.so.1.0
00769000-0076a000 rwxp 00001000 03:41 612044     /usr/X11R6/lib/libXinerama.so.1.0
0076b000-00780000 r-xp 00000000 03:41 598165     /lib/ld-2.3.3.so
00780000-00781000 r-xp 00014000 03:41 598165     /lib/ld-2.3.3.so
00781000-00782000 rwxp 00015000 03:41 598165     /lib/ld-2.3.3.so
00782000-0079d000 r-xs 00000000 03:43 3131444   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt-pi.jar
0079d000-007a7000 r-xp 00000000 03:41 230138     /usr/lib/libpangox-1.0.so.0.600.0
007a7000-007a8000 rwxp 00009000 03:41 230138     /usr/lib/libpangox-1.0.so.0.600.0
007a8000-007af000 r-xp 00000000 03:41 612040     /usr/X11R6/lib/libXrender.so.1.2.2
007af000-007b0000 rwxp 00006000 03:41 612040     /usr/X11R6/lib/libXrender.so.1.2.2
007b0000-007b1000 rwxp 007b0000 00:00 0 
007b1000-007e9000 r-xs 00000000 03:43 3115831   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
007e9000-007ef000 r-xs 00000000 03:41 192860     /usr/lib/gconv/gconv-modules.cache
007ef000-007f0000 r-xp 00000000 03:41 192788     /usr/lib/gconv/ISO8859-1.so
007f0000-007f2000 rwxp 00000000 03:41 192788     /usr/lib/gconv/ISO8859-1.so
007f2000-007fe000 r-xp 00000000 03:41 291312    
/usr/lib/gtk-2.0/2.4.0/engines/libbluecurve.so
007fe000-007ff000 rwxp 0000b000 03:41 291312    
/usr/lib/gtk-2.0/2.4.0/engines/libbluecurve.so
007ff000-00813000 r-xp 00000000 03:41 229824    
/usr/lib/libgdk_pixbuf-2.0.so.0.400.13
00813000-00814000 rwxp 00013000 03:41 229824    
/usr/lib/libgdk_pixbuf-2.0.so.0.400.13
00815000-0089c000 r-xs 00000000 03:41 196174    
/usr/java/jdk1.5.0_01/jre/lib/jsse.jar
0089c000-008a9000 r-xp 00000000 03:41 612039     /usr/X11R6/lib/libXext.so.6.4
008a9000-008aa000 rwxp 0000c000 03:41 612039     /usr/X11R6/lib/libXext.so.6.4
008aa000-008ac000 r-xp 00000000 03:43 2999840   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources.linux_3.0.0/os/linux/x86/libcore_3_1_0.so
008ac000-008ad000 rwxp 00001000 03:43 2999840   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources.linux_3.0.0/os/linux/x86/libcore_3_1_0.so
008ad000-008ce000 r-xp 00000000 03:41 598168     /lib/tls/libm-2.3.3.so
008ce000-008cf000 r-xp 00020000 03:41 598168     /lib/tls/libm-2.3.3.so
008cf000-008d0000 rwxp 00021000 03:41 598168     /lib/tls/libm-2.3.3.so
008d2000-008d4000 r-xp 00000000 03:41 598175     /lib/libdl-2.3.3.so
008d4000-008d5000 r-xp 00001000 03:41 598175     /lib/libdl-2.3.3.so
008d5000-008d6000 rwxp 00002000 03:41 598175     /lib/libdl-2.3.3.so
008d6000-008de000 r-xp 00000000 03:41 612043     /usr/X11R6/lib/libXcursor.so.1.0.2
008de000-008df000 rwxp 00007000 03:41 612043     /usr/X11R6/lib/libXcursor.so.1.0.2
008df000-008e1000 r-xp 00000000 03:41 245005    
/usr/lib/pango/1.4.0/modules/pango-basic-fc.so
008e1000-008e2000 rwxp 00001000 03:41 245005    
/usr/lib/pango/1.4.0/modules/pango-basic-fc.so
008e2000-008e5000 r-xp 00000000 03:41 245058    
/usr/lib/gtk-2.0/2.4.0/loaders/libpixbufloader-png.so
008e5000-008e6000 rwxp 00003000 03:41 245058    
/usr/lib/gtk-2.0/2.4.0/loaders/libpixbufloader-png.so
008e7000-008ed000 r-xp 00000000 03:41 196075    
/usr/java/jdk1.5.0_01/jre/lib/i386/native_threads/libhpi.so
008ed000-008ee000 rwxp 00006000 03:41 196075    
/usr/java/jdk1.5.0_01/jre/lib/i386/native_threads/libhpi.so
008ee000-008f1000 ---p 008ee000 00:00 0 
008f1000-0096f000 rwxp 008f1000 00:00 0 
0096f000-009af000 r-xp 00000000 03:43 3131453   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-pi-gtk-3116.so
009af000-009b1000 rwxp 00040000 03:43 3131453   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-pi-gtk-3116.so
009b1000-009c2000 r-xp 00000000 03:41 612045     /usr/X11R6/lib/libXft.so.2.1.2
009c2000-009c3000 rwxp 00010000 03:41 612045     /usr/X11R6/lib/libXft.so.2.1.2
009c3000-009d1000 r-xp 00000000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d1000-009d2000 r-xp 0000d000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d2000-009d3000 rwxp 0000e000 03:41 598176     /lib/tls/libpthread-2.3.3.so
009d3000-009d5000 rwxp 009d3000 00:00 0 
009d5000-00cf1000 r-xp 00000000 03:41 196034    
/usr/java/jdk1.5.0_01/jre/lib/i386/client/libjvm.so
00cf1000-00d0e000 rwxp 0031c000 03:41 196034    
/usr/java/jdk1.5.0_01/jre/lib/i386/client/libjvm.so
00d0e000-01124000 rwxp 00d0e000 00:00 0 
01124000-01324000 r-xp 00000000 03:41 179820     /usr/lib/locale/locale-archive
01324000-01327000 ---p 01324000 00:00 0 
01327000-013a5000 rwxp 01327000 00:00 0 
013a5000-013a6000 ---p 013a5000 00:00 0 
013a6000-01426000 rwxp 013a6000 00:00 0 
01426000-014ea000 r-xs 00000000 03:41 96409     
/usr/java/jdk1.5.0_01/jre/lib/ext/localedata.jar
014ea000-014ed000 rwxp 014ea000 00:00 0 
014ed000-0156b000 rwxp 014ed000 00:00 0 
0156b000-0156e000 ---p 0156b000 00:00 0 
0156e000-015ec000 rwxp 0156e000 00:00 0 
015ec000-015ef000 ---p 015ec000 00:00 0 
015ef000-0166d000 rwxp 015ef000 00:00 0 
0166d000-016ce000 r-xs 00000000 03:43 3130636   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.runtime_3.1.0/runtime.jar
016ce000-016f0000 r-xp 00000000 03:41 229816     /usr/lib/libfontconfig.so.1.0.4
016f0000-016f3000 rwxp 00022000 03:41 229816     /usr/lib/libfontconfig.so.1.0.4
016f3000-016f4000 rwxp 016f3000 00:00 0 
016f4000-01703000 r-xs 00000000 03:43 3131472   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.help_3.0.0/help.jar
01703000-03cc4000 r-xs 00000000 03:41 196618    
/usr/java/jdk1.5.0_01/jre/lib/rt.jar
03cc4000-03f36000 r-xs 00000000 03:43 3116291   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench_3.1.0/workbench.jar
03f36000-03fba000 r-xs 00000000 03:43 3129832   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jface_3.1.0/jface.jar
03fba000-04021000 r-xp 00000000 03:41 187232     /usr/lib/libgdk-x11-2.0.so.0.400.13
04021000-04026000 rwxp 00066000 03:41 187232     /usr/lib/libgdk-x11-2.0.so.0.400.13
04026000-040e9000 r-xp 00000000 03:41 612012     /usr/X11R6/lib/libX11.so.6.2
040e9000-040ed000 rwxp 000c3000 03:41 612012     /usr/X11R6/lib/libX11.so.6.2
040ed000-0411e000 r-xp 00000000 03:41 179824     /usr/lib/libpango-1.0.so.0.600.0
0411e000-04123000 rwxp 00030000 03:41 179824     /usr/lib/libpango-1.0.so.0.600.0
04123000-0415d000 r-xp 00000000 03:41 229823     /usr/lib/libgobject-2.0.so.0.400.7
0415d000-0415e000 rwxp 00039000 03:41 229823     /usr/lib/libgobject-2.0.so.0.400.7
0415e000-0415f000 rwxp 0415e000 00:00 0 
0415f000-0417c000 r-xp 00000000 03:41 229815     /usr/lib/libexpat.so.0.5.0
0417c000-0417e000 rwxp 0001d000 03:41 229815     /usr/lib/libexpat.so.0.5.0
0417e000-04184000 r-xs 00000000 03:43 3115973   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.update.scheduler_3.0.0/scheduler.jar
04184000-042de000 r-xs 00000000 03:43 3130352   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.ide_3.1.0/ide.jar
042de000-04586000 r-xp 00000000 03:41 230162     /usr/lib/libgtk-x11-2.0.so.0.400.13
04586000-0458f000 rwxp 002a8000 03:41 230162     /usr/lib/libgtk-x11-2.0.so.0.400.13
0458f000-04592000 rwxp 0458f000 00:00 0 
04592000-0460c000 r-xp 00000000 03:41 184470     /usr/lib/libglib-2.0.so.0.400.7
0460c000-0460d000 rwxp 0007a000 03:41 184470     /usr/lib/libglib-2.0.so.0.400.7
0460d000-0466d000 r-xp 00000000 03:41 229814     /usr/lib/libfreetype.so.6.3.7
0466d000-04674000 rwxp 00060000 03:41 229814     /usr/lib/libfreetype.so.6.3.7
04674000-04699000 r-xp 00000000 03:41 179863     /usr/lib/libpangoft2-1.0.so.0.600.0
04699000-0469a000 rwxp 00025000 03:41 179863     /usr/lib/libpangoft2-1.0.so.0.600.0
0469a000-046a9000 r-xp 00000000 03:41 65222      /usr/lib/libz.so.1.2.1.2
046a9000-046aa000 rwxp 0000e000 03:41 65222      /usr/lib/libz.so.1.2.1.2
046aa000-046d0000 r-xp 00000000 03:43 3131451   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-gtk-3116.so
046d0000-046d2000 rwxp 00025000 03:43 3131451   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/os/linux/x86/libswt-gtk-3116.so
046d2000-046d3000 rwxp 046d2000 00:00 0 
046d3000-04733000 rwxs 00000000 00:06 4292631    /SYSV00000000 (deleted)
04733000-047db000 r-xs 00000000 03:43 3131531   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.resources_3.1.0/resources.jar
047db000-0480f000 r-xs 00000000 03:43 3130659   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.core_3.1.0/team.jar
0480f000-04821000 r-xp 00000000 03:41 433086    
/usr/X11R6/lib/X11/fonts/Type1/l048013t.pfa
04821000-0482a000 r-xp 00000000 03:41 288203    
/usr/share/fonts/default/Type1/s050000l.pfb
0482a000-04856000 r-xs 00000000 03:43 3115826   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.text_3.1.0/text.jar
04856000-0486f000 r-xs 00000000 03:43 3145886   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ltk.core.refactoring_3.1.0/refcore.jar
0486f000-04881000 r-xs 00000000 03:43 3116023   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.filebuffers_3.1.0/filebuffers.jar
04882000-04971000 r-xs 00000000 03:43 3131446   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.swt.gtk_3.1.0/ws/gtk/swt.jar
04971000-04974000 ---p 04971000 00:00 0 
04974000-049f2000 rwxp 04974000 00:00 0 
049f2000-049f5000 ---p 049f2000 00:00 0 
049f5000-04a73000 rwxp 049f5000 00:00 0 
04a73000-04b11000 r-xs 00000000 03:43 2999842   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jface.text_3.1.0/jfacetext.jar
04b11000-04b6e000 r-xs 00000000 03:43 3129837   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.editors_3.1.0/editors.jar
04b6e000-04bd0000 r-xs 00000000 03:43 3131340   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.workbench.texteditor_3.1.0/texteditor.jar
04bd0000-04bde000 r-xs 00000000 03:43 3146233   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.views_3.1.0/views.jar
04bde000-04c0b000 r-xs 00000000 03:43 3131363   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.launching_3.1.0/launching.jar
04c0b000-04c43000 r-xs 00000000 03:43 3129826   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.debug.core_3.1.0/dtcore.jar
04c43000-04caa000 r-xs 00000000 03:43 3131353   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde.core_3.1.0/pdecore.jar
04caa000-04cbc000 r-xp 00000000 03:41 433090    
/usr/X11R6/lib/X11/fonts/Type1/l048033t.pfa
04cbc000-04cce000 r-xp 00000000 03:41 433088    
/usr/X11R6/lib/X11/fonts/Type1/l048016t.pfa
04cce000-04cee000 r-xs 00000000 03:43 3146265   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ltk.ui.refactoring_3.1.0/refui.jar
04cf3000-04cfa000 r-xp 00000000 03:41 188875     /usr/X11R6/lib/libXi.so.6.0
04cfa000-04cfb000 rwxp 00006000 03:41 188875     /usr/X11R6/lib/libXi.so.6.0
04cfd000-04d15000 r-xp 00000000 03:41 187274     /usr/lib/libatk-1.0.so.0.800.0
04d15000-04d17000 rwxp 00018000 03:41 187274     /usr/lib/libatk-1.0.so.0.800.0
04d17000-05040000 r-xs 00000000 03:43 3116169   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.core_3.1.0/jdtcore.jar
05040000-05043000 rwxp 05040000 00:00 0 
05043000-050c1000 rwxp 05043000 00:00 0 
050c1000-050c4000 rwxp 050c1000 00:00 0 
050c4000-05142000 rwxp 050c4000 00:00 0 
05142000-0514f000 r-xs 00000000 03:43 3115852   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.core.expressions_3.1.0/expressions.jar
0514f000-0515c000 r-xs 00000000 03:43 2966981   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug_3.1.0/jdi.jar
05174000-0518e000 r-xs 00000000 03:43 2999852   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.externaltools_3.1.0/externaltools.jar
0518f000-05192000 ---p 0518f000 00:00 0 
05192000-05210000 rwxp 05192000 00:00 0 
05210000-05320000 r-xs 00000000 03:43 3130462   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.debug.ui_3.1.0/dtui.jar
05320000-05380000 rwxs 00000000 00:06 4325400    /SYSV00000000 (deleted)
05380000-0548e000 r-xs 00000000 03:43 3116092   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.cvs.ui_3.1.0/teamcvsui.jar
0548e000-054ab000 r-xs 00000000 03:43 2966975   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.ui.console_3.1.0/console.jar
054ab000-054bc000 r-xs 00000000 03:43 3130304   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde_3.1.0/pde.jar
054bc000-054cf000 r-xp 00000000 03:41 433078    
/usr/X11R6/lib/X11/fonts/Type1/l047013t.pfa
054da000-05d15000 r-xs 00000000 03:41 196116    
/usr/java/jdk1.5.0_01/jre/lib/charsets.jar
05d15000-06185000 rwxp 05d15000 00:00 0 
06185000-07d15000 rwxp 06185000 00:00 0 
07d15000-07d89000 r-xs 00000000 03:43 3115978   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.cvs.core_3.1.0/cvs.jar
07d89000-07d8c000 ---p 07d89000 00:00 0 
07d8c000-07e0a000 rwxp 07d8c000 00:00 0 
07e0a000-07e0d000 rwxp 07e0a000 00:00 0 
07e0d000-07e8b000 rwxp 07e0d000 00:00 0 
07e8b000-07e8e000 ---p 07e8b000 00:00 0 
07e8e000-07f0c000 rwxp 07e8e000 00:00 0 
07f0c000-07f98000 r-xs 00000000 03:43 3116204   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.team.ui_3.1.0/teamui.jar
07f98000-08045000 r-xs 00000000 03:43 2966982   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug_3.1.0/jdimodel.jar
08048000-08056000 r-xp 00000000 03:41 195962     /usr/java/jdk1.5.0_01/jre/bin/java
08056000-08058000 rwxp 0000e000 03:41 195962     /usr/java/jdk1.5.0_01/jre/bin/java
08058000-08ae9000 rwxp 08058000 00:00 0 
cd400000-cd6f0000 rwxp cd400000 00:00 0 
cd6f0000-cd8e0000 rwxp cd6f0000 00:00 0 
cd8e0000-cfb39000 rwxp cd8e0000 00:00 0 
cfb39000-d1400000 rwxp cfb39000 00:00 0 
d1400000-d2f00000 rwxp d1400000 00:00 0 
d2f00000-d5400000 rwxp d2f00000 00:00 0 
d5400000-d5979000 r-xs 00001000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d5979000-d5c00000 rwxp d5979000 00:00 0 
d5c00000-d61b7000 rwxp 0057a000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d61b7000-d6800000 rwxp d61b7000 00:00 0 
d6800000-d68cf000 rwxp 00b31000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d68cf000-d6c00000 rwxp d68cf000 00:00 0 
d6c00000-d6c04000 r-xs 00c00000 03:41 65020     
/usr/java/jdk1.5.0_01/jre/lib/i386/client/classes.jsa
d6c04000-d7000000 rwxp d6c04000 00:00 0 
f4d00000-f4d21000 rwxp f4d00000 00:00 0 
f4d21000-f4e00000 ---p f4d21000 00:00 0 
f645f000-f6481000 r-xp 00000000 03:41 185990     /usr/lib/libpng12.so.0.1.2.7
f6481000-f6482000 rwxp 00022000 03:41 185990     /usr/lib/libpng12.so.0.1.2.7
f6482000-f6496000 r-xp 00000000 03:41 433080    
/usr/X11R6/lib/X11/fonts/Type1/l047016t.pfa
f6496000-f6499000 rwxp f6496000 00:00 0 
f6499000-f6517000 rwxp f6499000 00:00 0 
f6517000-f651a000 rwxp f6517000 00:00 0 
f651a000-f6598000 rwxp f651a000 00:00 0 
f6598000-f659b000 rwxp f6598000 00:00 0 
f659b000-f6619000 rwxp f659b000 00:00 0 
f6619000-f67f2000 r-xs 00000000 03:43 3130910   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.pde.ui_3.1.0/pdeui.jar
f67f2000-f67f5000 rwxp f67f2000 00:00 0 
f67f5000-f6873000 rwxp f67f5000 00:00 0 
f6873000-f6876000 rwxp f6873000 00:00 0 
f6876000-f68f4000 rwxp f6876000 00:00 0 
f68f4000-f68f7000 rwxp f68f4000 00:00 0 
f68f7000-f6975000 rwxp f68f7000 00:00 0 
f6975000-f6a65000 r-xs 00000000 03:43 3116524   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.debug.ui_3.1.0/jdiui.jar
f6a65000-f7000000 r-xs 00000000 03:43 3129928   
/home/sabri/compiler/preview3M4/eclipse/plugins/org.eclipse.jdt.ui_3.1.0/jdt.jar
fee00000-fee03000 ---p fee00000 00:00 0 
fee03000-ff000000 rwxp fee03000 00:00 0 
ffffe000-fffff000 ---p 00000000 00:00 0 

VM Arguments:
java_command: org.eclipse.core.launcher.Main -os linux -ws gtk -arch x86
-showsplash /home/sabri/compiler/preview3M4/eclipse/eclipse -showsplash 600
-exitdata /home/sabri/compiler/preview3M4/eclipse/eclipse -exitdata 408015
-Xmx256M -vm /usr/java/jdk1.5.0_01/jre/bin/java -vmargs -cp
/home/sabri/compiler/preview3M4/eclipse/startup.jar org.eclipse.core.launcher.Main

Environment Variables:
JAVA_HOME=/usr/java/jdk1.5.0_01
PATH=/usr/kerberos/bin:/usr/java/jdk1.5.0_01/jre/bin:/usr/java/jdk1.5.0_01/bin:/home/sabri/compiler/apache-ant-1.5.3-1/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/sbin:/home/sabri/compiler/opt/bin:/home/sabri/compiler/apache-ant-1.5.3-1/bin:/home/sabri/bin
LD_LIBRARY_PATH=/usr/java/jdk1.5.0_01/jre/lib/i386/client:/usr/java/jdk1.5.0_01/jre/lib/i386:/usr/java/jdk1.5.0_01/jre/../lib/i386:/usr/java/jdk1.5.0_01/jre/lib/i386:/usr/java/jdk1.5.0_01/jre/lib/i386/client::/usr/lib/mozilla-1.7.3
SHELL=/bin/bash
DISPLAY=:0.0


---------------  S Y S T E M  ---------------

OS:Fedora Core release 3 (Heidelberg)

uname:Linux 2.6.9-1.667 #1 Tue Nov 2 14:41:25 EST 2004 i686
libc:glibc 2.3.3 NPTL 2.3.3 
rlimit: STACK 10240k, CORE 0k, NPROC 12275, NOFILE 1024, AS infinity
load average:0.01 0.04 0.08

CPU:total 1 family 15, cmov, cx8, fxsr, mmx, sse, sse2, ht

Memory: 4k page, physical 775088k(78196k free), swap 819304k(819304k free)

vm_info: Java HotSpot(TM) Client VM (1.5.0_01-b08) for linux-x86, built on Dec 
6 2004 20:41:12 by java_re with gcc 3.2.1-7a (J2SE release)



I have had this HotSpot crash for 3.1 Milestones M2, M3 and M3 since I 
installed SuSE 9.2 which has java build 1.4.2_05-b04. I have been running #
with -Xint for 3 months (which really is annoying...)

Browsing the JDC shows several bugs with this HotSpot failure ID, some fixed,
some not, all complicated and hard to track. Most indicate this has to 
do with eclipse opening a large number of files at the same time (and 
I get the crash either on startup or while doing CVS synchronize!), some
suspect the gfx card driver.

Although this issue is most probably not caused by Eclipsed, it would be
worthwhile to help sun people fix the bug, or provide a workaround in eclipse.

I have the same issue with j2sdk 1.4.2-05, j2sdk 1.4.2-06, jdk 1.5.0 and jdk 
1.5.0-01 on Mandrake Linux. 
Ever since I upgraded to current cooker (since about 1 month ago) Eclipse 
crashes every time I run it - either immidietly (before even the workspace 
selector comes up) or after I start working. 
 
It crashes with both GTK and Motif versions although the motif version crashed 
with a different error (and I got a java stack trace) so I'm not sure its 
related. 
 
I tried to use 3.0, 3.0.1, 3.1M3 and M4 and several post-M4 integration builds 
- all behave the same way. 
 
I noticed that if I set the system locale to en (different from what I usually 
use which is en_US.utf8) then eclipse stays up the most time - maybe even 10 
minutes. 
 
Ever since the above mentioned upgrade, I also had unexpected crashes in 
Mozilla applications and OpenOffice which I thought may be related to a GTK+2 
issue, though these are more rare then Eclipse's crashes and other GTK+2 
applications (for example: evolution) seems to work fine. 
 
I found a page on the net describing fix done to some kind of Java based 
product to work around an issue with the same error ID as this and thought it 
may be related, so here it is:  
http://www.orindasoft.com/public/V4 Fixestwo.php4 
 

try -vmargs -Dosgi.locking = java.io and enjoy :-)
(In reply to comment #9)
&gt; try -vmargs -Dosgi.locking = java.io and enjoy :-)

Sorry, that was too quick, but for me, this runs much longer
than without, eclipse is faster, and the crash looked somewhat
different. Maybe this has some informational value after all.
*** Bug 85800 has been marked as a duplicate of this bug. ***
I am getting the same JVM crash behaviour on SUSE 9.1 with M4 (gtk) and various
Sun 1.4 JDK's. Setting -vmargs -Dosgi.locking=java.io seems to have no effect at
all. Seems like Sun lay the blame with Eclipse saying it's something in the 3rd
party product and Eclipse dev's lay the blame with Sun saying it's a VM bug.
Can't we all just get along and try figure out how to fix this?
Sun is not blaming Eclipse, is actually asking us to investigate the
circumstances the problems happens in the context of running Eclipse. The
problem is that we need to reproduce it consistently. Since we cannot, and the
VM dump just does not leave any clue on when the problem happens, we need help
from the users experiencing this problem. So far, it seems the problem happens
randomly, sometimes during startup, sometimes while performing user actions. We
need to find out a single simplest flow that always (or at least often enough)
causes the crash. Can anybody provide a test case that works at least in their
own setup?



Sun is not blaming Eclipse, is actually asking us to investigate the
circumstances the problems happens in the context of running Eclipse. The
problem is that we need to reproduce it consistently. Since we cannot, and the
VM dump just does not leave any clue on when the problem happens, we need help
from the users experiencing this problem. So far, it seems the problem happens
randomly, sometimes during startup, sometimes while performing user actions. We
need to find out a single simplest flow that always (or at least often enough)
causes the crash. Can anybody provide a test case that works at least in their
own setup?
Sheesh... what a mess. 
Sorry about that. Resolving again.
There's more to it than just Sun or Eclipse.
The collegue sitting opposite to me has the very same Hardware (Dell D800),
the very same Java version, the very same Linux (SuSE 9.2 supplied kernel), 
also a 3.1 milestone and for him it does not crash.
I tried 4 different JREs today, from 1.4.0 (eclipse doesn't work ;-), 1.4.1 
(crash) and different 1.4.2s (all crash). Last week I tried different eclipse
milestones.
Maybe it is related to having or not having some kernel settings, or having (or
not) installed some SuSE packages...

Since the osgi.locking thing issue, I am suspecting some filesystem or
device driver issues. (we both have ide dma on, so that'S not it).

Anyway, I will try with some IBM JRE, maybe that's good for a change. I will
keep you posted...

Was restless, had to try. ;-)

Indeed, IBM JRE 1.4.2 looks very promising.
When usually I crashed during startup, I just did 5 refreshes and 10
clean/builds and it worked well.

And it's a lot faster than Sun JRE with -Xint ;-)

http://www-106.ibm.com/developerworks/java/jdk/linux140/

What are your experiences ?

I have a very similar experience, M4 works perfectly on the exact same version
of SUSE and kernel on my work machine but on my home machine (different hardware
admittedly) no 1.4 versions of Sun's JDKs work. It never runs for more than one
or two "open editor" clicks. The thing is that 3.01 works fine so something must
have been introduced inbetween which is causing this. I haven't tried the IBM
JDK but will do so this weekend and let you know on Monday if that helps. That's
still more of a workaround than a fix though.
IBM 1.4 JDK works fine as Tom experienced too. Oh well, at least I can use M4
now although it's not 100% ideal as the production system is running Sun's JDK
and it's always best to develop against a system that's as close to production
as possible.
*** Bug 86925 has been marked as a duplicate of this bug. ***
(In reply to comment #20)
&gt; IBM 1.4 JDK works fine as Tom experienced too. Oh well, at least I can use M4

This didn't help. Tried out with IBM 1.42, Sun 1.4.2_05,_07 and other fixes
mentioned here. The interesting part for me is that if I remove qtengine for GTK
path I get the following GTK error

(&lt;unknown&gt;:2695): Gtk-WARNING **: Unable to locate theme engine in module_path:
"qtengine",

but eclipse keeps running for quite a long while before crashing. And when it
crashes, its usually when I try to switch between 2 open files in the editor of
usually 2 different types like txt and java
A little more checking on Google turned this out
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4820592

Sun claims that this has been fixed on 1.5, so downloaded 1.5.0_01. So far so
good (this is with qtengine included in path). Will report back if the error
resurfaces.
(In reply to comment #22)
&gt; This didn't help. Tried out with IBM 1.42, Sun 1.4.2_05,_07 and other fixes
&gt; mentioned here. 

Well, I have been running for 2 weeks now with no crash, so for me IBM JRE
works great. Your problem must be something different than mine.

Concerning the bug parade link, if you search a bit more, you will see that 
there is a large number of bugs with that exact hotspot crash, some fixed, some
not. So maybe the solution is a bit different for everybody of us ;-)
I had the same problem on a Linux Mandrake 10 (comment #8), using kernel 
2.6.3. I've seen a similar behavior on other computers running 2.6.7 and 2.6.8 
(the last one very infrequently). 
 
I recently upgraded to 2.6.10 kernel from Mandrake and have since had no more 
issues with crashing eclipse regardless of the JVM in use. note: only the 
kernel was upgraded. 
I am experiencing the same phenomenon, but MORE CONSISTENTLY!
My Eclipse crashes 3 of 4 times during startup,
the remaining 1 of 4 times it crashes within the next 30 to 60 seconds.

The following combinations of Eclipse and Sun VM procude interesting results:
- JDK 1.5.0_01 with Eclipse 3.1M4 does neither crash my notebook, nor my desktop 
PC
- JDK 1.5.0_01 with Eclipse 3.1M5a with the 3.1M4 workspace crashes my notebook 
as describes above, but the desktop does not crash.
- JDK 1.5.0_01 with Eclipse 3.1M5a and a new workspace crashes much much less 
often.

Perhaps it helps that I submit my 3.1M4 workspace to produce the crash on your 
machines too? So I did.

Good luck!
Created attachment 19018
The crashing workspace attachment, as mentioned above.

The crashing workspace attachment, as mentioned above.
Created attachment 19019
The error message when using the workspace

The error message when using the workspace
At bugs.sun.com, I can find my native stack frames in a bug in the 
WindowsLookAndFeel rasterizer. They say that this is caused using some fonts 
only.
Commenters, do you use custom or rare fonts? I do. Perhaps this is the reason.

The Sun bug entry:
http://bugs.sun.com/bugdatabase/view_bug.do;:WuuT?bug_id=6174389

I will attach the font I use for my editors.
Created attachment 19020
An example of a font that may cause this problem.
I had a similar bug. (It was Error Code 1 but also Error ID:
43113F32554E54494D45110E4350500308)
I used eclipse 3.0.2 with jdk 1.4 as provided with suse 9.2.
I then tried with the IBM jre 1.4. Didn't work - now i got error Code 13 shortly
after startup.
Finally i got it to work by using jdk 1.5 and specifiying the vm path as
commandline argument.
I have also seen the workaround by specifying jdk 1.5.0 on the commandline.
Please see bug 81803 and bug 86925.
I had a similar error, and tried multiple VM's with the similar results (i.e. a
crash each time). I narrowed it down to SWT's GTK bindings, as the crash does
not occur with the Motif version. Finally, my fix was to choose a different GTK
theme, the crash only seems to occur with me with the "Thin Keramic" theme
(unfortunately the default on SuSe).

I will withhold judgement on whether this is a bug in GTK, the "Thin Keramic"
style engine, or SWT itself...
Careful, there are a few different problems all reported on this bug now.

TheReincarnator: Your crash log is from a Windows machine.  Please file a new
bug for this issue.

Others: There are some known issues with the gtk-qt theme engine shipped with
SuSE 9.2.  Please see bug 77928 for more information.  This bug is tracking
crash logs that have no stack trace, only a cryptic VM error ID, which may be
bugs in the Sun VM.
I just noticed that the previous comment is similar to the contents below.  
However, I still posted this comment to make the previous statement more 
transparent. 
 
After reading the comments I think that I may have been encountered the same 
error.  I noticed in one of the posts that the person had problems with the 
library: 
     libgobject-2.0.so.0 
I also had a problem with this library and when eclipse (and firefox for that 
matter) would try to start a SIGSEV signal was caught (aka a segmentation fault 
occured).  As a result, eclipse (and firefox) would not start. 
 
It is important to note that I was using Suse 9.2 and was currently running KDE 
3.3.0.  I then tried to start eclipse after starting a failsafe session (with 
only X running) and eclipse started fine.  Indeed when I started gnome, Eclipse 
would also run fine. 
 
I looked into the rpms that I had recently installed and found one that looked 
suspicious, 'gtk-qt-engine-0.6cvs20050229-4.1'  I did an rpm erase (aka 'rpm -e 
gtk-qt-engine-0.6cvs20050229-4.1') of this package.  After I did so, Eclipse 
and Firefox would start fine. 
 
In one person's post, he said that he and his colleage had the same Suse 
installation.  However, his eclipse wouldn't work but hist colleage's would.  
This could have been due to the packate 'gtk-qt-engine-0.6cvs20050229-4.1'.  In 
fact, if I remember correctly, Yast offered to install this package for me.  
Thus, if someone just checked all of the available packages to install/upgrade 
or had a fully automatic upgrade, it would have been easy to have eclipse work 
one day and not the next (assuming this package is the one and only one to 
blame). 
 
I hope this is helpful. 
Faced similar problem (Error ID : 43113F32554E54494D45110E4350500308) with
Eclipse running on SUSE Prof 9.3 JDK 1.4.2_06-b03, mixed mode.
After reading this thread, installed GNome and ran Eclipse. Works just fine.
I got the solution for your problem... 
in the eclipse.ini type:
-vm /usr/java/jdk1.5.0_01/jre/bin/java
-vmargs
-Xbootclasspath/a:"$JAVA_HOME"/lib/tools.jar
-Xverify:none
-XX:+UseParallelGC
-XX:PermSize=20M
-XX:MaxNewSize=32M
-XX:NewSize=32M

-Xms80m
-Xmx300m

and the problem is over... 
I work out here... 

HP Compaq
P4 3.2
2GB DDR
160GB Sata
Suse 9.3
Eclipse 3.1
WebTools 0.7
Final
I have found a fix for this,

The problem has much less to do with eclipse than the java clutter on a computer.

1. remove the gcc java lib and any java RTE JDK SDK etc.. using yum aptget this includes the IBM ones.
2. cd /usr/lib/
3. ll ./j*
4. do rm -r -f on all java related files
5. cd /usr/java
6. rm -r -f *
7. cd /usr/bin
8. ll ./j*
9. look for the broken links java related and remove them
10. cd /etc/alternatives/
11. ll ./j*
12. look for the broken links java related and remove them
13. download and install the java JDK 1.5.0_08
14. export the java paths this is a fedora example:

create /etc/profile.d/java.sh

#!/bin/sh
JAVA_HOME=/usr/java/jre1.5.0_08
export JAVA_HOME
JAVA_BIN=$JAVA_HOME/bin
CLASSPATH=$CLASSPATH:$JAVA_HOME:$JAVA_HOME/lib
PATH=$JAVA_BIN:$PATH
export JAVA_BIN CLASSPATH PATH


15. reboot
16. run eclipse

You will want to reconfigure applications like mozilla to the new java if it has installed in a new location/version.  Here is the usual command:
    
ln -s /usr/java/jdk1.5.0_08/jre/plugin/i386/ns7/libjavaplugin_oji.so
 /usr/lib/mozilla/plugins

Hope this works,  :)
the software pacht no resolve my problem with Rationalñ MOdeler 6.0 all the time  i open modeler and open the project this error 255 it appears, teh system is windows XP and eclipse is 3.0
(In reply to comment #39)
&gt; the software pacht no resolve my problem with Rationalñ MOdeler 6.0 all the
&gt; time  i open modeler and open the project this error 255 it appears, teh system
&gt; is windows XP and eclipse is 3.0
&gt; 

Could you give some more information, in better English please, what patch are you talking about, and what is the exact error message, 255 is generic. If it is the same as above posts, it is a JAVA problem not eclipse.

MODERATOR PLEASE CLOSE THIS BUG, IT IS NOT A ECLIPSE BUG</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79965" />
    <CreationDate amount="2004-12-02 03:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Parser] Names added to Symbol table too late</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="37" end="82" />
        <code>int i,str_len=strlen(str),half_len=str_len/2;</code>
      </source_code>
      <source_code type="assignment">
        <location start="643" end="669" />
        <code>int i = 2, half_i = i / 2;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Indexer shows problem in this line:

int i,str_len=strlen(str),half_len=str_len/2;

It does not see str_len variable in 'half_len=str_len/2'.
This problem exists on newest HEAD version (3.0).
See spec 3.3.1: The point of declaration for a name is immediately after its
complete declarator...

We are not adding symbols to the symbol table until the end of the declaration.
 We should be adding them at the end of each declarator so that if they are
referenced in the initializer clause of later declarators in the same
declaration we would be able to find them.

The function call is superfluous, and the following generates the same problem:
int i = 2, half_i = i / 2;
this is working with the new DOM, CDT3.0M7</WithStack>
    <WithOutStack>Indexer shows problem in this line:

int i,str_len=strlen(str),half_len=str_len/2;

It does not see str_len variable in 'half_len=str_len/2'.
This problem exists on newest HEAD version (3.0).
See spec 3.3.1: The point of declaration for a name is immediately after its
complete declarator...

We are not adding symbols to the symbol table until the end of the declaration.
 We should be adding them at the end of each declarator so that if they are
referenced in the initializer clause of later declarators in the same
declaration we would be able to find them.

The function call is superfluous, and the following generates the same problem:
int i = 2, half_i = i / 2;
this is working with the new DOM, CDT3.0M7</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79966" />
    <CreationDate amount="2004-12-02 03:18:00 -0500" />
    <DupId amount="73957" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Implement/override indicators in ruler don't always display when they should</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Create a plugin project that depends on org.eclipse.ui.workbench.texteditor.</Line>
          <Line>2. Open org.eclipse.ui.texteditor.AbstractTextEditor (use ctrl+shift+T).</Line>
          <Line>3. Open/go to the outline view, and click on the init method.</Line>
          <Line>4. Notice how the implement indicator shows next to the init method in the</Line>
          <Line>outline view, but not in the source editor's vertical ruler.</Line>
          <Line>Works for me using I200412011139 (tested with source and binary project).</Line>
          <Line>Just tried with a clean install of latest integration build: 200412011139.</Line>
          <Line>Started with a brand new workspace.  This is not working for me.  Would you mind</Line>
          <Line>trying again with a clean install+workspace?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1. start with empty workspace</Line>
          <Line>2. File &gt; New Project</Line>
          <Line>3. Select "Plug-in Project"</Line>
          <Line>4. Enter "Test" as name</Line>
          <Line>5. Press Finish (allow to switch perspective)</Line>
          <Line>6. open plugin.xml and add required plug-in:</Line>
          <Line>&lt;import plugin="org.eclipse.ui.workbench.texteditor"/&gt;</Line>
          <Line>7. save plugin.xml</Line>
          <Line>8. open type AbstractTextEditor (using Ctrl+Shift+T)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1. import org.eclipse.text and org.eclipse.ui.workbench.texteditor as binary</Line>
          <Line>projects</Line>
          <Line>2. perform steps 2 to 8</Line>
          <Line>==&gt; works</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1) Since Java Core is not able to work with the given classpath (see comment 8)</Line>
          <Line>it should generate an incomplete classpath problem marker (on the project) as it</Line>
          <Line>does in other cases.</Line>
          <Line />
          <Line>2) PDE warns the user when about setups like those described by this PR and</Line>
          <Line>suggests to import the plug-ins as binary projects.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Working with build id 200411170800.

Example reproduction:
1. Create a plugin project that depends on org.eclipse.ui.workbench.texteditor.
2. Open org.eclipse.ui.texteditor.AbstractTextEditor (use ctrl+shift+T).
3. Open/go to the outline view, and click on the init method.
4. Notice how the implement indicator shows next to the init method in the
outline view, but not in the source editor's vertical ruler.
Works for me using I200412011139 (tested with source and binary project).
Just tried with a clean install of latest integration build: 200412011139. 
Started with a brand new workspace.  This is not working for me.  Would you mind
trying again with a clean install+workspace?

BTW, don't confuse the folding widget with the implement indicator (I doubt that
you are, thought I'd mention it just in case :-)).
which JRE are you using?
Was using JDK 1.5.0.  Just tried chaning to 1.4.2_04.  Same result...
BTW, the VM used to launch eclipse is Sun's 1.5.0...
Created attachment 16306
screenshot that show's the problem

Just to prove I ain't crazy...
I don't think you're crazy ;-). The key is to have reproducible steps. If - for
example - I take a new drop and an empty workspace I don't have any line numbers
in the editor, however your picture does ;-) However, I am now able to reproduce
with the following steps with a fresh I200412011139 installed into an empty
directory using JRE 1.4.02:

1. start with empty workspace
2. File &gt; New Project
3. Select "Plug-in Project"
4. Enter "Test" as name
5. Press Finish (allow to switch perspective)
6. open plugin.xml and add required plug-in:
       &lt;import plugin="org.eclipse.ui.workbench.texteditor"/&gt;
7. save plugin.xml
8. open type AbstractTextEditor (using Ctrl+Shift+T)

==&gt; no override indicators.

I suspect a problem with the AST which provides this info. Search occurrences
and mark occurrences (once enabled via tool bar) does not work for most of the
elements either, e.g. if I select a type in the import section it (Ctrl+Shift+U
&gt; Identifier and marking occurrences) works fine but if I select a method or
parameter further down in the file it's not working. Ctrl+Shift+U &gt; Identifier
tells me that the Java element is unknown.

If I open another type, e.g. CaseAction then everything works as expected.
I've been walking through alot of eclipse platform/JDT code lately and am quite
often experiencing what you experienced within AbstractTextEditor.  Some of the
classes I open work fine (ie. show override indicators, let me browse into types
they are using, ctrl+U, etc), but others do not.  At one point the UI might be
behaving OK for a particlur file, and at another point it may not for that same
file.  Hopefully a fix for this bug will also fix most/all of the other issues...
The AST bindings cannot be created since classes in the org.eclipse.text cannot
be found. This is because this plugin is not listed in the Plug-in Dependencies
container.

Moving to PDE UI to investigate why this plugin was not added to the dependencies.
org.eclipse.ui.workbench.texteditor does not re-export org.eclipse.text, and 
that is why it is (and must not be) on the classpath of the plugin in question.

Moving back to JDT/Core for final resolution.
Jerome, the classpath is correct, so please resolve as you see fit.
To clarify, I meant to say that org.eclipse.text is NOT and must NOT be on the 
dev classpath of the plugin.
This bug proves otherwise: a plugin P that prereqs
org.eclipse.ui.workbench.texteditor needs org.eclipse.text in its classpath,
otherwise name resolution fails.
Wassim, are you saying that P should also prereq org.eclipse.text ? Or are you
suggesting that org.eclipse.ui.workbench.texteditor should reexport
org.eclipse.text so that it is visible to P ?
I am not suggesting either actually.

From a PDE and a runtime point of view, the plugin should not unnecessarily 
import org.eclipse.text, and org.eclipse.ui.workbench.texteditor is not in a 
position to re-export org.eclipse.jface.text(which in turn re-exports 
org.eclipse.text) to its clients.

The unfortunate incident is that although the dev classpath for the plugin is 
complete, some type hierarchies are not complete and thus JDT/Core is unable 
to do the name resolution it needs to do.  


Jerome, I don't think there is anything you can do here.
The AST contains the problems that would help the user to find out that the
classpath needs to be fixed. These problems could be shown in the UI (I'm not
sure how) when the AST is created.

Moving to JDT Text to comment or dispose.
It would be weird if the user selects PDE Tools &gt; Update Classpath... and later
gets informed by JDT Text that the classpath is incorrect, especially because
invalid classpath problems are normally reported as problems by JDT Core.

Sorry but I have to move the bug back to PDE UI who introduced a classpath
container who allows to work with stuff (i.e. projects) which is not in the
workspace. While doing so important classpath information which otherwise is
present gets lost, in this example the relationship from
org.eclipse.ui.workbench.texteditor project to org.eclipse.text.

Example:
1. import org.eclipse.text and org.eclipse.ui.workbench.texteditor as binary
   projects
2. perform steps 2 to 8
==&gt; works

So it's PDE's fault for introducing a classpath container that advanced self-
hosting from the dark ages into the 21st century :-)

The user has the option to import its plugin dependencies into the workspace, 
in which case this problem would not occur.

Closing as no action is planned from PDE's standpoint.
I'm surprised that this bug is being marked as WONTFIX.  If you look at the
screenshot that I sent with the bug, you'll notice that the override indicator
is displayed in the content outline but not the source editor.  Clearly there is
an inconsistency here.  If the outline knows the method is an override, why
can't the text editor?
&gt;The user has the option to import its plug-in dependencies into the workspace, 
&gt;in which case this problem would not occur.
That's what I do and it works fine (old fashioned guys don't live on the edge of
the 21st Century ;-)

I see the following simple solution to this problem to reduce the frustration of
users who run into this problem:

1) Since Java Core is not able to work with the given classpath (see comment 8)
it should generate an incomplete classpath problem marker (on the project) as it
does in other cases.

2) PDE warns the user when about setups like those described by this PR and
suggests to import the plug-ins as binary projects.

Fixing 1 and 2 shouldn't be that hard and I think would be good enough to close
this bug as fixed.


In order to really fix the problem Java Core could revisit the current notion of
a classpath entry and introduce something like invisible (or non-API) property
which tells to use the entry on the full build path to get the full Java Core
functionality but which children can't be referenced in code. However, my
opinion is that we do not want to this additional complexity.
Dani, I am not sure bells and whistles (eg. decorations/warnings) are the 
answer here.  The classpath IS complete.

The real issue is this:
&gt;If the outline knows the method is an override, why can't the text editor?

why the inconsistency?


&gt;The classpath IS complete.
In my opinion it is not complete: even though PDE does know about the
dependencies of org.eclipse.ui.workbench.texteditor, Java Core has no chance to
know this if it is not inside the workspace. However, I think that's a thing
that PDE Core and JDT Core have agree upon.

Outline's override indicators are still Java model based while the ruler code is
AST based: we do more and more stuff AST based (espacially when it comes to J2SE
5.0 support). So yes, we could (and probably sooner or later will) replace the
Java model based implementation and as a result even show less information to
the user in this bug's setup. And of course, as I pointed out in comment 6 all
other AST based stuff, e.g. mark occurrences and Ctrl+Shift+U are affected as well.


&gt;In my opinion it is not complete
To correct my previous comment: Wassim is right, the classpath of the project is
in fact correct but some items/projects listed therein are missing in the workspace.

So to reiterate...

The classpath is correct.  Anything more than that on the classpath will give 
the plugin direct visibility to code it is not supposed to have.  This must 
not happen.

Unfortunately in this case, this resulted in a busted type hierarchy.
So this becomes an issue with what's in the Java search scope (ie. what's in 
the workspace) rather than the correctness of the classpath.

However, this is all implementation details and the rationalization does not 
help the end user experience.

In the long term, one idea might be for JDT to provide two flavors of lib 
classpath entries: one which the plugin code will have visibility to (as is 
the case now), and another type which the plugin code will not directly see 
but is there to complete the classpath for other JDT purposes (e.g. name 
resolution, etc.)

Refer to my comments in bug 73957 for a more important scenario where such new 
support would be needed.

As for this bug report, I will move back to JDT/Text.
I suspect it will either:
1. be used to track and address the inconsistency between the outline and the 
editor - for better or for worse.  In this case, it will be worse of course as 
noted in comment 20.

OR 

2. be resolved as dup of bug 73957, since the resolution of said bug will make 
this problem go away.


*** This bug has been marked as a duplicate of 73957 ***</WithStack>
    <WithOutStack>Working with build id 200411170800.

Example reproduction:
1. Create a plugin project that depends on org.eclipse.ui.workbench.texteditor.
2. Open org.eclipse.ui.texteditor.AbstractTextEditor (use ctrl+shift+T).
3. Open/go to the outline view, and click on the init method.
4. Notice how the implement indicator shows next to the init method in the
outline view, but not in the source editor's vertical ruler.
Works for me using I200412011139 (tested with source and binary project).
Just tried with a clean install of latest integration build: 200412011139. 
Started with a brand new workspace.  This is not working for me.  Would you mind
trying again with a clean install+workspace?

BTW, don't confuse the folding widget with the implement indicator (I doubt that
you are, thought I'd mention it just in case :-)).
which JRE are you using?
Was using JDK 1.5.0.  Just tried chaning to 1.4.2_04.  Same result...
BTW, the VM used to launch eclipse is Sun's 1.5.0...
Created attachment 16306
screenshot that show's the problem

Just to prove I ain't crazy...
I don't think you're crazy ;-). The key is to have reproducible steps. If - for
example - I take a new drop and an empty workspace I don't have any line numbers
in the editor, however your picture does ;-) However, I am now able to reproduce
with the following steps with a fresh I200412011139 installed into an empty
directory using JRE 1.4.02:

1. start with empty workspace
2. File &gt; New Project
3. Select "Plug-in Project"
4. Enter "Test" as name
5. Press Finish (allow to switch perspective)
6. open plugin.xml and add required plug-in:
       &lt;import plugin="org.eclipse.ui.workbench.texteditor"/&gt;
7. save plugin.xml
8. open type AbstractTextEditor (using Ctrl+Shift+T)

==&gt; no override indicators.

I suspect a problem with the AST which provides this info. Search occurrences
and mark occurrences (once enabled via tool bar) does not work for most of the
elements either, e.g. if I select a type in the import section it (Ctrl+Shift+U
&gt; Identifier and marking occurrences) works fine but if I select a method or
parameter further down in the file it's not working. Ctrl+Shift+U &gt; Identifier
tells me that the Java element is unknown.

If I open another type, e.g. CaseAction then everything works as expected.
I've been walking through alot of eclipse platform/JDT code lately and am quite
often experiencing what you experienced within AbstractTextEditor.  Some of the
classes I open work fine (ie. show override indicators, let me browse into types
they are using, ctrl+U, etc), but others do not.  At one point the UI might be
behaving OK for a particlur file, and at another point it may not for that same
file.  Hopefully a fix for this bug will also fix most/all of the other issues...
The AST bindings cannot be created since classes in the org.eclipse.text cannot
be found. This is because this plugin is not listed in the Plug-in Dependencies
container.

Moving to PDE UI to investigate why this plugin was not added to the dependencies.
org.eclipse.ui.workbench.texteditor does not re-export org.eclipse.text, and 
that is why it is (and must not be) on the classpath of the plugin in question.

Moving back to JDT/Core for final resolution.
Jerome, the classpath is correct, so please resolve as you see fit.
To clarify, I meant to say that org.eclipse.text is NOT and must NOT be on the 
dev classpath of the plugin.
This bug proves otherwise: a plugin P that prereqs
org.eclipse.ui.workbench.texteditor needs org.eclipse.text in its classpath,
otherwise name resolution fails.
Wassim, are you saying that P should also prereq org.eclipse.text ? Or are you
suggesting that org.eclipse.ui.workbench.texteditor should reexport
org.eclipse.text so that it is visible to P ?
I am not suggesting either actually.

From a PDE and a runtime point of view, the plugin should not unnecessarily 
import org.eclipse.text, and org.eclipse.ui.workbench.texteditor is not in a 
position to re-export org.eclipse.jface.text(which in turn re-exports 
org.eclipse.text) to its clients.

The unfortunate incident is that although the dev classpath for the plugin is 
complete, some type hierarchies are not complete and thus JDT/Core is unable 
to do the name resolution it needs to do.  


Jerome, I don't think there is anything you can do here.
The AST contains the problems that would help the user to find out that the
classpath needs to be fixed. These problems could be shown in the UI (I'm not
sure how) when the AST is created.

Moving to JDT Text to comment or dispose.
It would be weird if the user selects PDE Tools &gt; Update Classpath... and later
gets informed by JDT Text that the classpath is incorrect, especially because
invalid classpath problems are normally reported as problems by JDT Core.

Sorry but I have to move the bug back to PDE UI who introduced a classpath
container who allows to work with stuff (i.e. projects) which is not in the
workspace. While doing so important classpath information which otherwise is
present gets lost, in this example the relationship from
org.eclipse.ui.workbench.texteditor project to org.eclipse.text.

Example:
1. import org.eclipse.text and org.eclipse.ui.workbench.texteditor as binary
   projects
2. perform steps 2 to 8
==&gt; works

So it's PDE's fault for introducing a classpath container that advanced self-
hosting from the dark ages into the 21st century :-)

The user has the option to import its plugin dependencies into the workspace, 
in which case this problem would not occur.

Closing as no action is planned from PDE's standpoint.
I'm surprised that this bug is being marked as WONTFIX.  If you look at the
screenshot that I sent with the bug, you'll notice that the override indicator
is displayed in the content outline but not the source editor.  Clearly there is
an inconsistency here.  If the outline knows the method is an override, why
can't the text editor?
&gt;The user has the option to import its plug-in dependencies into the workspace, 
&gt;in which case this problem would not occur.
That's what I do and it works fine (old fashioned guys don't live on the edge of
the 21st Century ;-)

I see the following simple solution to this problem to reduce the frustration of
users who run into this problem:

1) Since Java Core is not able to work with the given classpath (see comment 8)
it should generate an incomplete classpath problem marker (on the project) as it
does in other cases.

2) PDE warns the user when about setups like those described by this PR and
suggests to import the plug-ins as binary projects.

Fixing 1 and 2 shouldn't be that hard and I think would be good enough to close
this bug as fixed.


In order to really fix the problem Java Core could revisit the current notion of
a classpath entry and introduce something like invisible (or non-API) property
which tells to use the entry on the full build path to get the full Java Core
functionality but which children can't be referenced in code. However, my
opinion is that we do not want to this additional complexity.
Dani, I am not sure bells and whistles (eg. decorations/warnings) are the 
answer here.  The classpath IS complete.

The real issue is this:
&gt;If the outline knows the method is an override, why can't the text editor?

why the inconsistency?


&gt;The classpath IS complete.
In my opinion it is not complete: even though PDE does know about the
dependencies of org.eclipse.ui.workbench.texteditor, Java Core has no chance to
know this if it is not inside the workspace. However, I think that's a thing
that PDE Core and JDT Core have agree upon.

Outline's override indicators are still Java model based while the ruler code is
AST based: we do more and more stuff AST based (espacially when it comes to J2SE
5.0 support). So yes, we could (and probably sooner or later will) replace the
Java model based implementation and as a result even show less information to
the user in this bug's setup. And of course, as I pointed out in comment 6 all
other AST based stuff, e.g. mark occurrences and Ctrl+Shift+U are affected as well.


&gt;In my opinion it is not complete
To correct my previous comment: Wassim is right, the classpath of the project is
in fact correct but some items/projects listed therein are missing in the workspace.

So to reiterate...

The classpath is correct.  Anything more than that on the classpath will give 
the plugin direct visibility to code it is not supposed to have.  This must 
not happen.

Unfortunately in this case, this resulted in a busted type hierarchy.
So this becomes an issue with what's in the Java search scope (ie. what's in 
the workspace) rather than the correctness of the classpath.

However, this is all implementation details and the rationalization does not 
help the end user experience.

In the long term, one idea might be for JDT to provide two flavors of lib 
classpath entries: one which the plugin code will have visibility to (as is 
the case now), and another type which the plugin code will not directly see 
but is there to complete the classpath for other JDT purposes (e.g. name 
resolution, etc.)

Refer to my comments in bug 73957 for a more important scenario where such new 
support would be needed.

As for this bug report, I will move back to JDT/Text.
I suspect it will either:
1. be used to track and address the inconsistency between the outline and the 
editor - for better or for worse.  In this case, it will be worse of course as 
noted in comment 20.

OR 

2. be resolved as dup of bug 73957, since the resolution of said bug will make 
this problem go away.


*** This bug has been marked as a duplicate of 73957 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79967" />
    <CreationDate amount="2004-12-02 03:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE in WildcardBinding.signature with Mark Occurrences in Collections.class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211547">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature(WildcardBinding.java:220)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(MethodBinding.java:630)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:290)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.computeUniqueKey(ParameterizedMethodBinding.java:56)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java:286)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.dom.Bindings.equals(Bindings.java:60)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.search.OccurrencesFinder.match(OccurrencesFinder.java:224)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.search.OccurrencesFinder.visit(OccurrencesFinder.java:161)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:147)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:244)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="13">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="14">org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)</Frame>
          <Frame depth="15">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.PrefixExpression.accept0(PrefixExpression.java:261)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="19">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="20">org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:188)</Frame>
          <Frame depth="21">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="22">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="23">org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:228)</Frame>
          <Frame depth="24">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="26">org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)</Frame>
          <Frame depth="27">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="28">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="29">org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:228)</Frame>
          <Frame depth="30">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="31">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="32">org.eclipse.jdt.core.dom.LabeledStatement.accept0(LabeledStatement.java:166)</Frame>
          <Frame depth="33">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="34">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="35">org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)</Frame>
          <Frame depth="36">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="37">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="38">org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:189)</Frame>
          <Frame depth="39">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="40">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="41">org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)</Frame>
          <Frame depth="42">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="43">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)</Frame>
          <Frame depth="44">org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)</Frame>
          <Frame depth="45">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="46">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="47">org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:486)</Frame>
          <Frame depth="48">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="49">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)</Frame>
          <Frame depth="50">org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:291)</Frame>
          <Frame depth="51">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)</Frame>
          <Frame depth="52">org.eclipse.jdt.internal.ui.search.OccurrencesFinder.perform(OccurrencesFinder.java:81)</Frame>
          <Frame depth="53">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations(JavaEditor.java:2907)</Frame>
          <Frame depth="54">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$6.selectionChanged(JavaEditor.java:2936)</Frame>
          <Frame depth="55">org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)</Frame>
          <Frame depth="56">org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:142)</Frame>
          <Frame depth="57">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20041201-1139

Open type Collections from an 1.5 JDK. Select type name and enable Mark Occurrences.

Error 2004-12-02 09:38:08.547 An internal error occurred during: "Java AST
creation".
java.lang.NullPointerException
at
org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature(WildcardBinding.java:220)
at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(MethodBinding.java:630)
at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:290)
at
org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.computeUniqueKey(ParameterizedMethodBinding.java:56)
at org.eclipse.jdt.core.dom.MethodBinding.getKey(MethodBinding.java:286)
at org.eclipse.jdt.internal.corext.dom.Bindings.equals(Bindings.java:60)
at
org.eclipse.jdt.internal.ui.search.OccurrencesFinder.match(OccurrencesFinder.java:224)
at
org.eclipse.jdt.internal.ui.search.OccurrencesFinder.visit(OccurrencesFinder.java:161)
at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:147)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:244)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.PrefixExpression.accept0(PrefixExpression.java:261)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:188)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:228)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:228)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.LabeledStatement.accept0(LabeledStatement.java:166)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:189)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)
at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:486)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)
at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:291)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)
at
org.eclipse.jdt.internal.ui.search.OccurrencesFinder.perform(OccurrencesFinder.java:81)
at
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations(JavaEditor.java:2907)
at
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$6.selectionChanged(JavaEditor.java:2936)
at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
at
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:142)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Only the DOM is asking for WildcardBinding.signature().
It is indeed doomed in the case of unbound wildcard.
Made WildcardBinding#signature() answer the genericTypeSignature instead, but
this is likely an issue in DOM key computation which shouldn't perform on the
parameterized (generic) method, and rather use the original method (and record
type arguments separately).
Actually, made the signature for wildcards not answer any generic information
(bound or matching variable signature).
Fixed MethodBinding#computeUniqueKey() to use the original method for the signature.

Need a regression test.
Added regression test ASTConverter15Test#test0089()
Verified for 3.1 M4 using build I200412142000.</WithStack>
    <WithOutStack>I20041201-1139

Open type Collections from an 1.5 JDK. Select type name and enable Mark Occurrences.

Error 2004-12-02 09:38:08.547 An internal error occurred during: "Java AST
creation".

Only the DOM is asking for WildcardBinding.signature().
It is indeed doomed in the case of unbound wildcard.
Made WildcardBinding#signature() answer the genericTypeSignature instead, but
this is likely an issue in DOM key computation which shouldn't perform on the
parameterized (generic) method, and rather use the original method (and record
type arguments separately).
Actually, made the signature for wildcards not answer any generic information
(bound or matching variable signature).
Fixed MethodBinding#computeUniqueKey() to use the original method for the signature.

Need a regression test.
Added regression test ASTConverter15Test#test0089()
Verified for 3.1 M4 using build I200412142000.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79968" />
    <CreationDate amount="2004-12-02 04:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Change Sets] Progress info (italic) lost when clicking Show Change Set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. have many projects in your Synchronize view (incoming mode, change sets off)</Line>
          <Line>2. select those projects you're not interested</Line>
          <Line>3. update ==&gt; those projects are now italic indicating that they are processed</Line>
          <Line>4. now I want to look who changed stuff in the interesting projects and</Line>
          <Line>therefore I click on "Show Chanage Sets"</Line>
          <Line>==&gt; italic info gets lost and hence I don't see which incoming changes are from</Line>
          <Line>the interesting projects i.e. which ones aren't processed right now. Also</Line>
          <Line>switching back to not showing the change sets doesn't show which elements are</Line>
          <Line>currently being processed (italic font).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20041201

1. have many projects in your Synchronize view (incoming mode, change sets off)
2. select those projects you're not interested
3. update ==&gt; those projects are now italic indicating that they are processed
4. now I want to look who changed stuff in the interesting projects and 
   therefore I click on "Show Chanage Sets"
==&gt; italic info gets lost and hence I don't see which incoming changes are from
the interesting projects i.e. which ones aren't processed right now. Also
switching back to not showing the change sets doesn't show which elements are
currently being processed (italic font).

I'm marking this one as major because it gives me wrong state information about
my workspace.
Yeah, I don't think we re-apply busy states when we re-create sync nodes. This
may actually be hard to implement :)
I agree that it is bothersome...
We wont have time to address this in 3.1
This issue was fixed in the new model-based synchronizations</WithStack>
    <WithOutStack>I20041201

1. have many projects in your Synchronize view (incoming mode, change sets off)
2. select those projects you're not interested
3. update ==&gt; those projects are now italic indicating that they are processed
4. now I want to look who changed stuff in the interesting projects and 
   therefore I click on "Show Chanage Sets"
==&gt; italic info gets lost and hence I don't see which incoming changes are from
the interesting projects i.e. which ones aren't processed right now. Also
switching back to not showing the change sets doesn't show which elements are
currently being processed (italic font).

I'm marking this one as major because it gives me wrong state information about
my workspace.
Yeah, I don't think we re-apply busy states when we re-create sync nodes. This
may actually be hard to implement :)
I agree that it is bothersome...
We wont have time to address this in 3.1
This issue was fixed in the new model-based synchronizations</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79969" />
    <CreationDate amount="2004-12-02 04:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi-gdb" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Problem debugging multi-threaded embedded MIPS program with Eclipse CDT and Cygwin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="functiondef">
        <location start="2020" end="2084" />
        <code>#0 0x2ad00b84 in nanosleep () from /pub/mips-gnu/lib/libc.so.6
{</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2248" end="2318" />
        <code>#1 0x2ab4e638 in nanosleep () from /pub/mips-gnu/lib/libpthread.so.0
{</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2937" end="3097" />
        <code>[1,100,086,405,373] &amp;"{ create_sentinel_frame (...) -&gt; {level=-1,type=&lt;unknown 
type&gt;,unwind=0x822dd9\
4,pc=&lt;unknown&gt;,id={!stack,!code,!special},func=&lt;unknown&gt;}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3103" end="3252" />
        <code>[1,100,086,405,374] &amp;"{ get_prev_frame_1 (this_frame=-1) -&gt; 
{level=0,type=UNKNOWN_FRAME,unwind=&lt;unkn\
own&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3689" end="4021" />
        <code>[1,100,086,405,390] &amp;"{ get_prev_frame_1 (this_frame=0) { get_frame_id (fi=0) {
frame_register_unwin\
d (frame=-1,regnum=90(zero),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x168 
*bufferp=[00000000] }\n"
[1,100,086,405,434] &amp;"{ frame_func_unwind (fi=-1) -&gt; 0x2ad00b70 }\n"
[1,100,086,405,435] &amp;"-&gt; {stack=0x0,code=0x2ad00b70,!special} }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="4232" end="4425" />
        <code>[1,100,086,405,437] &amp;"{ frame_register_unwind (frame=0,regnum=127(pc),...) { 
frame_register_unwind (\
frame=-1,regnum=121(ra),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x1e4 *bufferp=
[2ab4aff8] }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="4590" end="4919" />
        <code>[1,100,086,405,439] &amp;"{ get_prev_frame_1 (this_frame=1) { get_frame_id (fi=1) {
frame_register_unwin\
d (frame=0,regnum=119(sp),...) -&gt; *optimizedp=0 *lvalp=0 *addrp=0x0 *bufferp=
[00000000] }\n"
[1,100,086,405,512] &amp;"{ frame_func_unwind (fi=0) -&gt; 0x2ab4adec }\n"
[1,100,086,405,512] &amp;"-&gt; {stack=0x278,code=0x2ab4adec,!special} }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="5657" end="5835" />
        <code>[1,100,086,405,874] &amp;"{ get_prev_frame_1 (this_frame=0) -&gt; 
{level=1,type=NORMAL_FRAME,unwind=0x81e46\
f4,pc=0x2ab4aff8,id={stack=0x278,code=0x2ab4adec,!special},func=0x2ab4adec}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="5851" end="5999" />
        <code>[1,100,086,405,875] &amp;"{ get_prev_frame_1 (this_frame=1) -&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unkno\
wn&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I am trying to cross-debug a multithreaded program running on an embedded MIPS 
5Kc using Eclipse GDB/MI (running on Windows 2000 and Cygwin) and gdbserver.

My environment is as follows:

Eclipse: 3.0.1
CDT: 2.0.2
gdb : 6.2.1, configured for cross-debug of mips target
gcc: 3.2.3, configured for cross-compilation of mips target
glibc: 2.2.5, built for mips target as part of cross-gcc build 


Now, regular (command line) gdb (i.e. outside Eclipse) works OK in my 
environment, with one small problem. When I try
to examine the stack (e.g. "backtrace"), I get something like the following:

(gdb) bt
#0 0x2ad00b84 in nanosleep () from /pub/mips-gnu/lib/libc.so.6
#1 0x2ab4e638 in nanosleep () from /pub/mips-gnu/lib/libpthread.so.0
Cannot access memory at address 0x2c

This is OK (I guess), apart from the "Cannot access memory at address 0x2c".
I have been told that GDB sometimes gets confused by glibc's syscall stubs, and 
that I don't need to worry about errors at the end of backtraces.

HOWEVER, it seems that this error causes the GDB/MI -stack-info-depth command 
to fail, as can be seen from the following trace (from Eclipse):

[1,100,086,148,682] (gdb)
[1,100,086,148,683] 440-stack-info-depth
[1,100,086,148,990] &amp;"Cannot access memory at address 0x2c\n"
[1,100,086,148,990] 440^error,msg="Cannot access memory at address 0x2c"
[1,100,086,148,991] (gdb)

This in turn prevents the Eclipse CDT debug session from working properly.
After -stack-info-depth fails, no -stack-list-frames gets issued, and the 
Eclipse debug session more or less hangs (e.g. impossible to single-step).

So, my question is, is there any way I can work around this problem ?

I have attached below more detailed traces of gdb "backtrace" and gdb/mi "-
stack-info-depth" after enabling the gdb debug frame flag.

Thanks in advance for any help !!

Yoni

Output from regular gdb "backtrace" command, after "set debug frame 1"
======================================================================
(gdb) set debug frame 1
(gdb) bt
#0 0x2ad00b84 in nanosleep () from /pub/mips-gnu/lib/libc.so.6
{ get_prev_frame_1 (this_frame=0) -&gt; 
{level=1,type=NORMAL_FRAME,unwind=0x81e46f4,pc=0x2ab4e638,id=
{stack=0x30,code=0x2ab4e5d8,!special},func=0x2ab4e5d8} // cached
#1 0x2ab4e638 in nanosleep () from /pub/mips-gnu/lib/libpthread.so.0
{ get_prev_frame_1 (this_frame=1) -&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unk
nown&gt;} // cached
{ frame_register_unwind (frame=1,regnum=127(pc),...) Cannot access memory at 
address 0x2c
(gdb) Trace of Eclipse GDB/MI -stack-info-depth command, after "set debug frame 
1"
============================================================================
[1,100,086,402,555] 444 set debug frame 1
[1,100,086,402,559] &amp;"set debug frame 1\n"
[1,100,086,402,560] 444^done
[1,100,086,402,560] (gdb)
[1,100,086,405,243] 445-thread-select 4
[1,100,086,405,251] &amp;"{ flush_cached_frames () }\n"
[1,100,086,405,373] &amp;"{ create_sentinel_frame (...) -&gt; {level=-1,type=&lt;unknown 
type&gt;,unwind=0x822dd9\
4,pc=&lt;unknown&gt;,id={!stack,!code,!special},func=&lt;unknown&gt;} }\n"
[1,100,086,405,374] &amp;"{ get_prev_frame_1 (this_frame=-1) -&gt; 
{level=0,type=UNKNOWN_FRAME,unwind=&lt;unkn\
own&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;} }\n"
[1,100,086,405,375] &amp;"{ frame_register_unwind (frame=-1,regnum=127(pc),...) -&gt; 
*optimizedp=0 *lvalp=\
2 *addrp=0x1fc *bufferp=[2ad00b84] }\n"
[1,100,086,405,376] &amp;"{ frame_pc_unwind (this_frame=-1) -&gt; 0x2ad00b84 }\n"
[1,100,086,405,376] 445^done,new-thread-id="4",frame=
{level="0",addr="0x2ad00b84",func="nanosleep",a\
rgs=[],from="/pub/mips-gnu/lib/libc.so.6"}
[1,100,086,405,377] (gdb)
[1,100,086,405,379] 446-stack-info-depth
[1,100,086,405,390] &amp;"{ get_prev_frame_1 (this_frame=0) { get_frame_id (fi=0) {
frame_register_unwin\
d (frame=-1,regnum=90(zero),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x168 
*bufferp=[00000000] }\n"
[1,100,086,405,434] &amp;"{ frame_func_unwind (fi=-1) -&gt; 0x2ad00b70 }\n"
[1,100,086,405,435] &amp;"-&gt; {stack=0x0,code=0x2ad00b70,!special} }\n"
[1,100,086,405,435] &amp;"{ frame_id_p (l={stack=0x0,code=0x2ad00b70,!special}) -&gt; 
1 }\n"
[1,100,086,405,436] &amp;"-&gt; 
{level=1,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func\
=&lt;unknown&gt;} }\n"
[1,100,086,405,437] &amp;"{ frame_register_unwind (frame=0,regnum=127(pc),...) { 
frame_register_unwind (\
frame=-1,regnum=121(ra),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x1e4 *bufferp=
[2ab4aff8] }\n"
[1,100,086,405,438] &amp;"-&gt; *optimizedp=0 *lvalp=2 *addrp=0x1e4 *bufferp=
[2ab4aff8] }\n"
[1,100,086,405,438] &amp;"{ frame_pc_unwind (this_frame=0) -&gt; 0x2ab4aff8 }\n"
[1,100,086,405,439] &amp;"{ get_prev_frame_1 (this_frame=1) { get_frame_id (fi=1) {
frame_register_unwin\
d (frame=0,regnum=119(sp),...) -&gt; *optimizedp=0 *lvalp=0 *addrp=0x0 *bufferp=
[00000000] }\n"
[1,100,086,405,512] &amp;"{ frame_func_unwind (fi=0) -&gt; 0x2ab4adec }\n"
[1,100,086,405,512] &amp;"-&gt; {stack=0x278,code=0x2ab4adec,!special} }\n"
[1,100,086,405,513] &amp;"{ frame_id_p (l={stack=0x278,code=0x2ab4adec,!special}) -
&gt; 1 }\n"
[1,100,086,405,514] &amp;"{ frame_id_inner (l={stack=0x278,code=0x2ab4adec,!
special},r={stack=0x0,code=0\
x2ad00b70,!special}) -&gt; 0 }\n"
[1,100,086,405,514] &amp;"{ frame_id_eq (l={stack=0x278,code=0x2ab4adec,!special},r=
{stack=0x0,code=0x2a\
d00b70,!special}) -&gt; 0 }\n"
[1,100,086,405,515] &amp;"-&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func\
=&lt;unknown&gt;} }\n"
[1,100,086,405,813] &amp;"{ frame_register_unwind (frame=1,regnum=127(pc),...) 
Cannot access memory at a\
ddress 0x240\n"
[1,100,086,405,813] 446^error,msg="Cannot access memory at address 0x240"
[1,100,086,405,814] (gdb)
[1,100,086,405,817] 446-stack-info-depth
[1,100,086,405,874] &amp;"{ get_prev_frame_1 (this_frame=0) -&gt; 
{level=1,type=NORMAL_FRAME,unwind=0x81e46\
f4,pc=0x2ab4aff8,id={stack=0x278,code=0x2ab4adec,!special},func=0x2ab4adec} // 
cached \n"
[1,100,086,405,875] &amp;"{ get_prev_frame_1 (this_frame=1) -&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unkno\
wn&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;} // cached \n"
[1,100,086,405,890] &amp;"{ frame_register_unwind (frame=1,regnum=127(pc),...) 
Cannot access memory at a\
ddress 0x240\n"
[1,100,086,405,891] 446^error,msg="Cannot access memory at address 0x240"
[1,100,086,405,891] (gdb)
Oyvind Harboe suggested that this might be related to the following PR:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=79484


I have upgraded to gdb and gdbserver versions 6.3.50, and things seem to be 
working alot better with respect to this problem.
I can now put a breakpoint via Eclipse CDT debug in a multi-threaded program 
running on an embedded target, and when the breakpoint is hit, I can walk the 
stack from the Eclipse GUI.
(In reply to comment #2)
&gt; I have upgraded to gdb and gdbserver versions 6.3.50, and things seem to be 
&gt; working alot better with respect to this problem.
&gt; I can now put a breakpoint via Eclipse CDT debug in a multi-threaded program 
&gt; running on an embedded target, and when the breakpoint is hit, I can walk the 
&gt; stack from the Eclipse GUI.

Great closing the PR</WithStack>
    <WithOutStack>I am trying to cross-debug a multithreaded program running on an embedded MIPS 
5Kc using Eclipse GDB/MI (running on Windows 2000 and Cygwin) and gdbserver.

My environment is as follows:

Eclipse: 3.0.1
CDT: 2.0.2
gdb : 6.2.1, configured for cross-debug of mips target
gcc: 3.2.3, configured for cross-compilation of mips target
glibc: 2.2.5, built for mips target as part of cross-gcc build 


Now, regular (command line) gdb (i.e. outside Eclipse) works OK in my 
environment, with one small problem. When I try
to examine the stack (e.g. "backtrace"), I get something like the following:

(gdb) bt
#0 0x2ad00b84 in nanosleep () from /pub/mips-gnu/lib/libc.so.6
#1 0x2ab4e638 in nanosleep () from /pub/mips-gnu/lib/libpthread.so.0
Cannot access memory at address 0x2c

This is OK (I guess), apart from the "Cannot access memory at address 0x2c".
I have been told that GDB sometimes gets confused by glibc's syscall stubs, and 
that I don't need to worry about errors at the end of backtraces.

HOWEVER, it seems that this error causes the GDB/MI -stack-info-depth command 
to fail, as can be seen from the following trace (from Eclipse):

[1,100,086,148,682] (gdb)
[1,100,086,148,683] 440-stack-info-depth
[1,100,086,148,990] &amp;"Cannot access memory at address 0x2c\n"
[1,100,086,148,990] 440^error,msg="Cannot access memory at address 0x2c"
[1,100,086,148,991] (gdb)

This in turn prevents the Eclipse CDT debug session from working properly.
After -stack-info-depth fails, no -stack-list-frames gets issued, and the 
Eclipse debug session more or less hangs (e.g. impossible to single-step).

So, my question is, is there any way I can work around this problem ?

I have attached below more detailed traces of gdb "backtrace" and gdb/mi "-
stack-info-depth" after enabling the gdb debug frame flag.

Thanks in advance for any help !!

Yoni

Output from regular gdb "backtrace" command, after "set debug frame 1"
======================================================================
(gdb) set debug frame 1
(gdb) bt
#0 0x2ad00b84 in nanosleep () from /pub/mips-gnu/lib/libc.so.6
{ get_prev_frame_1 (this_frame=0) -&gt; 
{level=1,type=NORMAL_FRAME,unwind=0x81e46f4,pc=0x2ab4e638,id=
{stack=0x30,code=0x2ab4e5d8,!special},func=0x2ab4e5d8} // cached
#1 0x2ab4e638 in nanosleep () from /pub/mips-gnu/lib/libpthread.so.0
{ get_prev_frame_1 (this_frame=1) -&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unk
nown&gt;} // cached
{ frame_register_unwind (frame=1,regnum=127(pc),...) Cannot access memory at 
address 0x2c
(gdb) Trace of Eclipse GDB/MI -stack-info-depth command, after "set debug frame 
1"
============================================================================
[1,100,086,402,555] 444 set debug frame 1
[1,100,086,402,559] &amp;"set debug frame 1\n"
[1,100,086,402,560] 444^done
[1,100,086,402,560] (gdb)
[1,100,086,405,243] 445-thread-select 4
[1,100,086,405,251] &amp;"{ flush_cached_frames () }\n"
[1,100,086,405,373] &amp;"{ create_sentinel_frame (...) -&gt; {level=-1,type=&lt;unknown 
type&gt;,unwind=0x822dd9\
4,pc=&lt;unknown&gt;,id={!stack,!code,!special},func=&lt;unknown&gt;} }\n"
[1,100,086,405,374] &amp;"{ get_prev_frame_1 (this_frame=-1) -&gt; 
{level=0,type=UNKNOWN_FRAME,unwind=&lt;unkn\
own&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;} }\n"
[1,100,086,405,375] &amp;"{ frame_register_unwind (frame=-1,regnum=127(pc),...) -&gt; 
*optimizedp=0 *lvalp=\
2 *addrp=0x1fc *bufferp=[2ad00b84] }\n"
[1,100,086,405,376] &amp;"{ frame_pc_unwind (this_frame=-1) -&gt; 0x2ad00b84 }\n"
[1,100,086,405,376] 445^done,new-thread-id="4",frame=
{level="0",addr="0x2ad00b84",func="nanosleep",a\
rgs=[],from="/pub/mips-gnu/lib/libc.so.6"}
[1,100,086,405,377] (gdb)
[1,100,086,405,379] 446-stack-info-depth
[1,100,086,405,390] &amp;"{ get_prev_frame_1 (this_frame=0) { get_frame_id (fi=0) {
frame_register_unwin\
d (frame=-1,regnum=90(zero),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x168 
*bufferp=[00000000] }\n"
[1,100,086,405,434] &amp;"{ frame_func_unwind (fi=-1) -&gt; 0x2ad00b70 }\n"
[1,100,086,405,435] &amp;"-&gt; {stack=0x0,code=0x2ad00b70,!special} }\n"
[1,100,086,405,435] &amp;"{ frame_id_p (l={stack=0x0,code=0x2ad00b70,!special}) -&gt; 
1 }\n"
[1,100,086,405,436] &amp;"-&gt; 
{level=1,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func\
=&lt;unknown&gt;} }\n"
[1,100,086,405,437] &amp;"{ frame_register_unwind (frame=0,regnum=127(pc),...) { 
frame_register_unwind (\
frame=-1,regnum=121(ra),...) -&gt; *optimizedp=0 *lvalp=2 *addrp=0x1e4 *bufferp=
[2ab4aff8] }\n"
[1,100,086,405,438] &amp;"-&gt; *optimizedp=0 *lvalp=2 *addrp=0x1e4 *bufferp=
[2ab4aff8] }\n"
[1,100,086,405,438] &amp;"{ frame_pc_unwind (this_frame=0) -&gt; 0x2ab4aff8 }\n"
[1,100,086,405,439] &amp;"{ get_prev_frame_1 (this_frame=1) { get_frame_id (fi=1) {
frame_register_unwin\
d (frame=0,regnum=119(sp),...) -&gt; *optimizedp=0 *lvalp=0 *addrp=0x0 *bufferp=
[00000000] }\n"
[1,100,086,405,512] &amp;"{ frame_func_unwind (fi=0) -&gt; 0x2ab4adec }\n"
[1,100,086,405,512] &amp;"-&gt; {stack=0x278,code=0x2ab4adec,!special} }\n"
[1,100,086,405,513] &amp;"{ frame_id_p (l={stack=0x278,code=0x2ab4adec,!special}) -
&gt; 1 }\n"
[1,100,086,405,514] &amp;"{ frame_id_inner (l={stack=0x278,code=0x2ab4adec,!
special},r={stack=0x0,code=0\
x2ad00b70,!special}) -&gt; 0 }\n"
[1,100,086,405,514] &amp;"{ frame_id_eq (l={stack=0x278,code=0x2ab4adec,!special},r=
{stack=0x0,code=0x2a\
d00b70,!special}) -&gt; 0 }\n"
[1,100,086,405,515] &amp;"-&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unknown&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func\
=&lt;unknown&gt;} }\n"
[1,100,086,405,813] &amp;"{ frame_register_unwind (frame=1,regnum=127(pc),...) 
Cannot access memory at a\
ddress 0x240\n"
[1,100,086,405,813] 446^error,msg="Cannot access memory at address 0x240"
[1,100,086,405,814] (gdb)
[1,100,086,405,817] 446-stack-info-depth
[1,100,086,405,874] &amp;"{ get_prev_frame_1 (this_frame=0) -&gt; 
{level=1,type=NORMAL_FRAME,unwind=0x81e46\
f4,pc=0x2ab4aff8,id={stack=0x278,code=0x2ab4adec,!special},func=0x2ab4adec} // 
cached \n"
[1,100,086,405,875] &amp;"{ get_prev_frame_1 (this_frame=1) -&gt; 
{level=2,type=UNKNOWN_FRAME,unwind=&lt;unkno\
wn&gt;,pc=&lt;unknown&gt;,id=&lt;unknown&gt;,func=&lt;unknown&gt;} // cached \n"
[1,100,086,405,890] &amp;"{ frame_register_unwind (frame=1,regnum=127(pc),...) 
Cannot access memory at a\
ddress 0x240\n"
[1,100,086,405,891] 446^error,msg="Cannot access memory at address 0x240"
[1,100,086,405,891] (gdb)
Oyvind Harboe suggested that this might be related to the following PR:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=79484


I have upgraded to gdb and gdbserver versions 6.3.50, and things seem to be 
working alot better with respect to this problem.
I can now put a breakpoint via Eclipse CDT debug in a multi-threaded program 
running on an embedded target, and when the breakpoint is hit, I can walk the 
stack from the Eclipse GUI.
(In reply to comment #2)
&gt; I have upgraded to gdb and gdbserver versions 6.3.50, and things seem to be 
&gt; working alot better with respect to this problem.
&gt; I can now put a breakpoint via Eclipse CDT debug in a multi-threaded program 
&gt; running on an embedded target, and when the breakpoint is hit, I can walk the 
&gt; stack from the Eclipse GUI.

Great closing the PR</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79970" />
    <CreationDate amount="2004-12-02 04:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ant build terminates unexpectedly on ibm jdk</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341211554">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: 10)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2697)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(CompiledCode))</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(InlinedCompiled Code))</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(CompiledCode))</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1500)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211554">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>10</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.custom.DefaultLineStyler.linesChanging(DefaultLineStyler.java:522)</Frame>
          <Frame depth="1">org.eclipse.swt.custom.DefaultLineStyler.textChanging(DefaultLineStyler.java:502)</Frame>
          <Frame depth="2">org.eclipse.swt.custom.StyledText.handleTextChanging(StyledText.java:5222)</Frame>
          <Frame depth="3">org.eclipse.swt.custom.StyledText$6.textChanging(StyledText.java:4707)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.console.ConsoleDocumentAdapter.documentAboutToBeChanged(ConsoleDocumentAdapter.java:295)</Frame>
          <Frame depth="5">org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java(CompiledCode))</Frame>
          <Frame depth="6">org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1025)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.console.ConsoleDocument.replace(ConsoleDocument.java:83)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.console.IOConsolePartitioner$1.run(IOConsolePartitioner.java:521)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(InlinedCompiled Code))</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(CompiledCode))</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(InlinedCompiled Code))</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(CompiledCode))</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1500)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)</Frame>
          <Frame depth="16">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="23">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>eclipse: 3.1M3
ibm jdk

When I run a simple ant script (copied at the end) it terminates unexpected
during ant's javac command. Log has following exception:

NOTE: 
-if I use sun jdk to start eclipse (-vm) all works fine

!ENTRY org.eclipse.ui 4 4 2004-12-02 14:32:32.07
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 2004-12-02 14:32:32.07
!MESSAGE Failed to execute runnable (java.lang.ArrayIndexOutOfBoundsException: 10)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: 10)
        at org.eclipse.swt.SWT.error(SWT.java:2697)
        at org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled
Code))
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Inlined
Compiled Code))
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled
Code))
        at
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1500)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
        at java.lang.reflect.Method.invoke(Method.java:386)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:704)
        at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.ui 4 4 2004-12-02 14:32:32.09
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 2004-12-02 14:32:32.09
!MESSAGE 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 10
        at
org.eclipse.swt.custom.DefaultLineStyler.linesChanging(DefaultLineStyler.java:522)
        at
org.eclipse.swt.custom.DefaultLineStyler.textChanging(DefaultLineStyler.java:502)
        at
org.eclipse.swt.custom.StyledText.handleTextChanging(StyledText.java:5222)
        at org.eclipse.swt.custom.StyledText$6.textChanging(StyledText.java:4707)
        at
org.eclipse.ui.internal.console.ConsoleDocumentAdapter.documentAboutToBeChanged(ConsoleDocumentAdapter.java:295)
        at
org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java(Compiled
Code))
        at
org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1025)
        at
org.eclipse.ui.internal.console.ConsoleDocument.replace(ConsoleDocument.java:83)
        at
org.eclipse.ui.internal.console.IOConsolePartitioner$1.run(IOConsolePartitioner.java:521)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Inlined
Compiled Code))
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled
Code))
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Inlined
Compiled Code))
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled
Code))
        at
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1500)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
        at java.lang.reflect.Method.invoke(Method.java:386)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:704)
        at org.eclipse.core.launcher.Main.main(Main.java:688)


-----------build.xml-------------
&lt;?xml version="1.0"?&gt;
&lt;project name="ejbJar" default="buildEjbJar"&gt;

	&lt;!-- ================================= 
          target: default              
         ================================= --&gt;
	&lt;target name="buildEjbJar" depends="depends" description="builds ejb-jar.jar"&gt;
		&lt;!-- compile bean files --&gt;
		&lt;javac destdir="${ejbModBuild}"&gt;
			&lt;classpath&gt;
				&lt;fileset dir="lib/compile" id="compileLib"&gt;
					&lt;include name="*.jar" /&gt;
				&lt;/fileset&gt;
			&lt;/classpath&gt;
			&lt;src path="${ejbMod-src}"&gt;
			&lt;/src&gt;
		&lt;/javac&gt;
		
		&lt;!-- copy meta-inf --&gt;
		&lt;copy todir="${ejbModBuild}/META-INF"&gt;
			&lt;fileset casesensitive="true" dir="${ejbMod}/meta-inf"&gt;&lt;/fileset&gt;
		&lt;/copy&gt;
		
		&lt;!-- create prmati specific application.xml in META-INf folder --&gt;
		&lt;!-- create pramati specific pramati-j2ee-server.xml --&gt;
		
		&lt;!-- create jar --&gt;
		&lt;jar jarfile="${build}/ejb-jar.jar" basedir="${ejbModBuild}" includes="**/*.*"/&gt;
	&lt;/target&gt;

	&lt;target name="init"&gt;
		&lt;property name="ejbMod" value="ejbModule" /&gt;
		&lt;property name="ejbMod-src" value="${ejbMod}/src" /&gt;

		&lt;property name="build" value="build" /&gt;
		&lt;property name="ejbModBuild" value="${build}/ejbMod" /&gt;

	&lt;/target&gt;
			
	&lt;!-- - - - - - - - - - - - - - - - - - 
          target: depends                      
         - - - - - - - - - - - - - - - - - --&gt;
	&lt;target name="depends" depends="init"&gt;
		&lt;mkdir dir="${build}" /&gt;
		&lt;mkdir dir="${ejbModBuild}" /&gt;
	&lt;/target&gt;

	&lt;target name="clean" depends="init"&gt;
		&lt;delete dir="${build}"&gt;&lt;/delete&gt;
	&lt;/target&gt;
&lt;/project&gt;
This is the same stack trace as reported in bug 12567. 
I am assuming that with the console rework this has been fixed?
There were a number of changes in the console to address similar problems. Haven't seen 
anything like this recently.
Marking as WORKSFORME. Please reopen if you continue to have problems with more recent integration 
builds or M4 when it's available.</WithStack>
    <WithOutStack>eclipse: 3.1M3
ibm jdk

When I run a simple ant script (copied at the end) it terminates unexpected
during ant's javac command. Log has following exception:

NOTE: 
-if I use sun jdk to start eclipse (-vm) all works fine

!ENTRY org.eclipse.ui 4 4 2004-12-02 14:32:32.07
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 2004-12-02 14:32:32.07
!MESSAGE Failed to execute runnable (java.lang.ArrayIndexOutOfBoundsException: 10)
!STACK 0

!ENTRY org.eclipse.ui 4 4 2004-12-02 14:32:32.09
!MESSAGE *** SWT nested exception

!ENTRY org.eclipse.ui 4 0 2004-12-02 14:32:32.09
!MESSAGE 10
!STACK 0



-----------build.xml-------------
&lt;?xml version="1.0"?&gt;
&lt;project name="ejbJar" default="buildEjbJar"&gt;

	&lt;!-- ================================= 
          target: default              
         ================================= --&gt;
	&lt;target name="buildEjbJar" depends="depends" description="builds ejb-jar.jar"&gt;
		&lt;!-- compile bean files --&gt;
		&lt;javac destdir="${ejbModBuild}"&gt;
			&lt;classpath&gt;
				&lt;fileset dir="lib/compile" id="compileLib"&gt;
					&lt;include name="*.jar" /&gt;
				&lt;/fileset&gt;
			&lt;/classpath&gt;
			&lt;src path="${ejbMod-src}"&gt;
			&lt;/src&gt;
		&lt;/javac&gt;
		
		&lt;!-- copy meta-inf --&gt;
		&lt;copy todir="${ejbModBuild}/META-INF"&gt;
			&lt;fileset casesensitive="true" dir="${ejbMod}/meta-inf"&gt;&lt;/fileset&gt;
		&lt;/copy&gt;
		
		&lt;!-- create prmati specific application.xml in META-INf folder --&gt;
		&lt;!-- create pramati specific pramati-j2ee-server.xml --&gt;
		
		&lt;!-- create jar --&gt;
		&lt;jar jarfile="${build}/ejb-jar.jar" basedir="${ejbModBuild}" includes="**/*.*"/&gt;
	&lt;/target&gt;

	&lt;target name="init"&gt;
		&lt;property name="ejbMod" value="ejbModule" /&gt;
		&lt;property name="ejbMod-src" value="${ejbMod}/src" /&gt;

		&lt;property name="build" value="build" /&gt;
		&lt;property name="ejbModBuild" value="${build}/ejbMod" /&gt;

	&lt;/target&gt;
			
	&lt;!-- - - - - - - - - - - - - - - - - - 
          target: depends                      
         - - - - - - - - - - - - - - - - - --&gt;
	&lt;target name="depends" depends="init"&gt;
		&lt;mkdir dir="${build}" /&gt;
		&lt;mkdir dir="${ejbModBuild}" /&gt;
	&lt;/target&gt;

	&lt;target name="clean" depends="init"&gt;
		&lt;delete dir="${build}"&gt;&lt;/delete&gt;
	&lt;/target&gt;
&lt;/project&gt;
This is the same stack trace as reported in bug 12567. 
I am assuming that with the console rework this has been fixed?
There were a number of changes in the console to address similar problems. Haven't seen 
anything like this recently.
Marking as WORKSFORME. Please reopen if you continue to have problems with more recent integration 
builds or M4 when it's available.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79971" />
    <CreationDate amount="2004-12-02 04:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] Down-arrow does not respond in synchronization compare</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Using eclipse on Fedore Core 3 with GTK double, click a file in the Synchronize
view in the Team Synchronization perspective.

When immediately trying to step down to the first change with the "Select Next
Change" button, nothing happens.'

First clicking in the "Java Source Compare" part solves the problem and
activates the "Select Next Change" button.

This error is not present on windows.
Move to Platform/CVS
This button is provided by compare. Do you see this strange behavior with other
buttons too? I assume that you mean that you press the button and nothing
happens until you explicitly give the source viewer focus? Is that right?
Your description of the problem is correct.  I did not test any other buttons.

When I restarted this morning, I could not reproduce the problem.  It seems it
does not happen anymore.  When I managed to reproduce it yesterday, it was only
on java source compares with structural changes.

Maybe it just happens after extended use of eclipse.  I will try to gather more
data.
The bug is still there in 3.1M4, but I have not yet found a pattern for
reproduction.  I will continue to investigate.</WithStack>
    <WithOutStack>Using eclipse on Fedore Core 3 with GTK double, click a file in the Synchronize
view in the Team Synchronization perspective.

When immediately trying to step down to the first change with the "Select Next
Change" button, nothing happens.'

First clicking in the "Java Source Compare" part solves the problem and
activates the "Select Next Change" button.

This error is not present on windows.
Move to Platform/CVS
This button is provided by compare. Do you see this strange behavior with other
buttons too? I assume that you mean that you press the button and nothing
happens until you explicitly give the source viewer focus? Is that right?
Your description of the problem is correct.  I did not test any other buttons.

When I restarted this morning, I could not reproduce the problem.  It seems it
does not happen anymore.  When I managed to reproduce it yesterday, it was only
on java source compares with structural changes.

Maybe it just happens after extended use of eclipse.  I will try to gather more
data.
The bug is still there in 3.1M4, but I have not yet found a pattern for
reproduction.  I will continue to investigate.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79972" />
    <CreationDate amount="2004-12-02 04:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Make it possible to refactor source code that is not part of a Eclipse CDT project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I'm working on projects that aren't and never will be CDT projects where
refactoring would be useful.

I think it is safe to assume that this is the case for lots of potential Eclipse
CDT users.


Øyvind
Refactoring relies on accurately parsing the source code. We can not do that
unless we have all the information that we currently get in the CDT project
settings. You can only get the benefits of most of the CDT core features if you
use CDT projects.
Can I appeal the decision to close this PR as invalid?

A feature request for the future?

The CDT debugger is growing support for files outside CDT projects.

I believe this to much more important for C than for Java.

Øyvind

Here is another PR that point towards CDT supporting C++ projects outside a CDT
project:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=29757

Øyvind

I guess my point is that we will not support refactoring for projects that are
not CDT project. It's going to be hard enough to get it working for CDT
projects, let alone finding some other mechanism to get the build information we
need to correctly parse.
I'll change it to WONTFIX. If someone wants to put a patch together to make it
work as you wish, then they can reopen this and attach the patch.
The bigger issue we should address is why you do not want these projects to be
imported into the CDT. Using standard make, you should be able to work with the
projects outside of Eclipse as well.
&gt;The bigger issue we should address is why you do not want these projects to be
&gt;imported into the CDT. Using standard make, you should be able to work with the
&gt;projects outside of Eclipse as well.

Its not my project.

I'm just working on it.

Hence my choice of tools can have no effect on the project.

There shouldn't be a way for my customer to tell that I used CDT, other than
that I work more quickly. E.g. the customer can tell if I used Emacs or Notepad.

automake + make are just two examples of how projects are built.

There is another that I'd like to apply this to that uses a proprietary
program(actually an IBM RExx application).

Øyvind</WithStack>
    <WithOutStack>I'm working on projects that aren't and never will be CDT projects where
refactoring would be useful.

I think it is safe to assume that this is the case for lots of potential Eclipse
CDT users.


Øyvind
Refactoring relies on accurately parsing the source code. We can not do that
unless we have all the information that we currently get in the CDT project
settings. You can only get the benefits of most of the CDT core features if you
use CDT projects.
Can I appeal the decision to close this PR as invalid?

A feature request for the future?

The CDT debugger is growing support for files outside CDT projects.

I believe this to much more important for C than for Java.

Øyvind

Here is another PR that point towards CDT supporting C++ projects outside a CDT
project:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=29757

Øyvind

I guess my point is that we will not support refactoring for projects that are
not CDT project. It's going to be hard enough to get it working for CDT
projects, let alone finding some other mechanism to get the build information we
need to correctly parse.
I'll change it to WONTFIX. If someone wants to put a patch together to make it
work as you wish, then they can reopen this and attach the patch.
The bigger issue we should address is why you do not want these projects to be
imported into the CDT. Using standard make, you should be able to work with the
projects outside of Eclipse as well.
&gt;The bigger issue we should address is why you do not want these projects to be
&gt;imported into the CDT. Using standard make, you should be able to work with the
&gt;projects outside of Eclipse as well.

Its not my project.

I'm just working on it.

Hence my choice of tools can have no effect on the project.

There shouldn't be a way for my customer to tell that I used CDT, other than
that I work more quickly. E.g. the customer can tell if I used Emacs or Notepad.

automake + make are just two examples of how projects are built.

There is another that I'd like to apply this to that uses a proprietary
program(actually an IBM RExx application).

Øyvind</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79973" />
    <CreationDate amount="2004-12-02 05:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[format] Single line getter / setter, grouping properties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="282" end="809" />
        <code>public class Test
{
    public String getProp() { return this.prop; }
    public void setProp(String prop) { this.prop = prop; }
    private String prop;

    public String getVal() { return this.val; }
    public void setVal(String val) { this.val = val; }
    private String val;

    public String getVal2() { return this.val2; }
    public void setVal2(String val2)
    {
        if (val2 != null)
        {
            this.val2 = val2;
        }
    }
    private String val2;

    public void someMethod()
    {
    }

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I'd be great to be able to set a pref for the code formatter that would allow 
getters/setters to be put on 1 line, and to group them with the method var.
This should only be done for 'simple' getters/setters.
The getter should be done first, for stuff like xdoclet..

For example:
public class Test
{
    public String getProp() { return this.prop; }
    public void setProp(String prop) { this.prop = prop; }
    private String prop;

    public String getVal() { return this.val; }
    public void setVal(String val) { this.val = val; }
    private String val;

    public String getVal2() { return this.val2; }
    public void setVal2(String val2)
    {
        if (val2 != null)
        {
            this.val2 = val2;
        }
    }
    private String val2;

    public void someMethod()
    {
    }

}
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I'd be great to be able to set a pref for the code formatter that would allow 
getters/setters to be put on 1 line, and to group them with the method var.
This should only be done for 'simple' getters/setters.
The getter should be done first, for stuff like xdoclet..

For example:
public class Test
{
    public String getProp() { return this.prop; }
    public void setProp(String prop) { this.prop = prop; }
    private String prop;

    public String getVal() { return this.val; }
    public void setVal(String val) { this.val = val; }
    private String val;

    public String getVal2() { return this.val2; }
    public void setVal2(String val2)
    {
        if (val2 != null)
        {
            this.val2 = val2;
        }
    }
    private String val2;

    public void someMethod()
    {
    }

}
Deferring post 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79974" />
    <CreationDate amount="2004-12-02 05:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] Wrong javadoc for TypeDeclarationStatement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- TypeDeclaration</Line>
          <Line>- EnumDeclaration</Line>
          <Line>- AnnotationTypeDeclaration</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>200411300800: The documentation states that a TypeDeclarationStatement in JLS3 
wraps the following nodes:
- TypeDeclaration
- EnumDeclaration
- AnnotationTypeDeclaration

The final draft of the language specification obtained at jcp.org however 
states the following rule:

BlockStatement:=LocalVariableDeclarationStatement|ClassDeclaration|Statement

Enums and Annotations are not allowed as local types.
Jim, can you handle this?
We might consider this a syntactically possible. so we need to find out if we
can allow this.
ClassDeclaration includes EnumDeclaration, according to JLS3 8.1. So the only 
ones that are not legal are interface and @interface. Syntactically, we should 
probably try to parse these but mark as malformed.

I'll update the spec.
Changed comment to read:

 * For JLS3, the kinds of type declarations grew to include enum declarations:
 * &lt;pre&gt;
 * TypeDeclarationStatement:
 *    TypeDeclaration
 *    EnumDeclaration
 * &lt;/pre&gt;
 * Although allowed at the AST, not all arrangements of AST nodes are 
meaningful;
 * in particular, only class and enum declarations are meaningful in the 
context of 
 * a block.

Verified in 200412140800</WithStack>
    <WithOutStack>200411300800: The documentation states that a TypeDeclarationStatement in JLS3 
wraps the following nodes:
- TypeDeclaration
- EnumDeclaration
- AnnotationTypeDeclaration

The final draft of the language specification obtained at jcp.org however 
states the following rule:

BlockStatement:=LocalVariableDeclarationStatement|ClassDeclaration|Statement

Enums and Annotations are not allowed as local types.
Jim, can you handle this?
We might consider this a syntactically possible. so we need to find out if we
can allow this.
ClassDeclaration includes EnumDeclaration, according to JLS3 8.1. So the only 
ones that are not legal are interface and @interface. Syntactically, we should 
probably try to parse these but mark as malformed.

I'll update the spec.
Changed comment to read:

 * For JLS3, the kinds of type declarations grew to include enum declarations:
 * &lt;pre&gt;
 * TypeDeclarationStatement:
 *    TypeDeclaration
 *    EnumDeclaration
 * &lt;/pre&gt;
 * Although allowed at the AST, not all arrangements of AST nodes are 
meaningful;
 * in particular, only class and enum declarations are meaningful in the 
context of 
 * a block.

Verified in 200412140800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79975" />
    <CreationDate amount="2004-12-02 05:08:00 -0500" />
    <DupId amount="73784" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search references in workspace for RuntimeException crashes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341211558">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(String.java:1768)         at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:109)         at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)         at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:924)         at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)         at org.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches(SearchBasicEngine.java:196)         at org.eclipse.jdt.internal.core.search.SearchBasicEngine.search(SearchBasicEngine.java:382)         at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:512)         at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:125)         at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:85)         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Searching for other types, including java.lang exceptions work. Marking 
RuntimeException in code however fails. This is what appears in the log: 
 
ENTRY org.eclipse.core.runtime 4 2 2004-12-02 10:53:05.620 
!MESSAGE An internal error occurred during: "Java Search". 
!STACK 0 
java.lang.StringIndexOutOfBoundsException: String index out of range: -1 
        at java.lang.String.substring(String.java:1768) 
        at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:109) 
        at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41) 
        at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:924) 
        at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94) 
        at 
org.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches(SearchBasicEngine.java:196) 
        at 
org.eclipse.jdt.internal.core.search.SearchBasicEngine.search(SearchBasicEngine.java:382) 
        at 
org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:512) 
        at 
org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:125) 
        at 
org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:85) 
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66) 
 
I'm using 3.1M3


*** This bug has been marked as a duplicate of 73784 ***</WithStack>
    <WithOutStack>Searching for other types, including java.lang exceptions work. Marking 
RuntimeException in code however fails. This is what appears in the log: 
 
ENTRY org.eclipse.core.runtime 4 2 2004-12-02 10:53:05.620 
!MESSAGE An internal error occurred during: "Java Search". 
!STACK 0 
 
 
I'm using 3.1M3


*** This bug has been marked as a duplicate of 73784 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79976" />
    <CreationDate amount="2004-12-02 05:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>RippleMethodFinder doesn't work with generics</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>See RippleMethodFinderTests.
Depends on bug 79990, bug 80264, bug 83083.
Also check bug 83818.
Works now, reactivated tests.
Start verifying...
Verified that tests are enabled.</WithStack>
    <WithOutStack>See RippleMethodFinderTests.
Depends on bug 79990, bug 80264, bug 83083.
Also check bug 83818.
Works now, reactivated tests.
Start verifying...
Verified that tests are enabled.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79977" />
    <CreationDate amount="2004-12-02 05:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NoClassDefFoundError: org/eclipse/jface/text/hyperlink/IHyperlinkController</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341211562">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/jface/text/hyperlink/
IHyperlinkController</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.preferences.JavaEditorColoringConfigurationBlock.createPreviewer(JavaEditorColoringConfigurationBlock.java:722)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.preferences.JavaEditorColoringConfigurationBlock.createSyntaxPage(JavaEditorColoringConfigurationBlock.java:652)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.preferences.JavaEditorColoringConfigurationBlock.createControl(JavaEditorColoringConfigurationBlock.java:382)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.preferences.AbstractConfigurationBlockPreferencePage.createContents(AbstractConfigurationBlockPreferencePage.java:76)</Frame>
          <Frame depth="4">org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:231)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.preferences.AbstractConfigurationBlockPreferencePage.createControl(AbstractConfigurationBlockPreferencePage.java:64)</Frame>
          <Frame depth="6">org.eclipse.jface.preference.PreferenceDialog$13.run(PreferenceDialog.java:1106)</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="9">org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1100)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.showPage(WorkbenchPreferenceDialog.java:424)</Frame>
          <Frame depth="11">org.eclipse.jface.preference.PreferenceDialog$9.selectionChanged(PreferenceDialog.java:594)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:636)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:634)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:905)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.StructuredViewer$5.widgetSelected(StructuredViewer.java:925)</Frame>
          <Frame depth="18">org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:231)</Frame>
          <Frame depth="19">org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:226)</Frame>
          <Frame depth="20">org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:392)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)</Frame>
          <Frame depth="25">org.eclipse.jface.window.Window.runEventLoop(Window.java:718)</Frame>
          <Frame depth="26">org.eclipse.jface.window.Window.open(Window.java:696)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:64)</Frame>
          <Frame depth="28">org.eclipse.jface.action.Action.runWithEvent(Action.java:989)</Frame>
          <Frame depth="29">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)</Frame>
          <Frame depth="30">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)</Frame>
          <Frame depth="31">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:419)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)</Frame>
          <Frame depth="39">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="41">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)</Frame>
          <Frame depth="42">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="44">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="46">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="47">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.run(Main.java:710)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.main(Main.java:694)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211562">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/jface/text/hyperlink/
IHyperlinkController</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.initializeEditor(JavaEditor.java:1594)</Frame>
          <Frame depth="1">org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.&lt;init&gt;(AbstractDecoratedTextEditor.java:199)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.&lt;init&gt;(JavaEditor.java:1577)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.&lt;init&gt;(CompilationUnitEditor.java:1159)</Frame>
          <Frame depth="4">sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</Frame>
          <Frame depth="5">sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)</Frame>
          <Frame depth="6">sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)</Frame>
          <Frame depth="7">java.lang.reflect.Constructor.newInstance(Constructor.java:494)</Frame>
          <Frame depth="8">java.lang.Class.newInstance0(Class.java:350)</Frame>
          <Frame depth="9">java.lang.Class.newInstance(Class.java:303)</Frame>
          <Frame depth="10">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:171)</Frame>
          <Frame depth="11">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:151)</Frame>
          <Frame depth="12">org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:138)</Frame>
          <Frame depth="13">org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:48)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:207)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:905)</Frame>
          <Frame depth="16">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="17">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:903)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:889)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:647)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:633)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2279)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2211)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2203)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2189)</Frame>
          <Frame depth="26">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2184)</Frame>
          <Frame depth="28">org.eclipse.ui.ide.IDE.openEditor(IDE.java:299)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:137)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:115)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:49)</Frame>
          <Frame depth="32">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:164)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. copying over an existing install is simply doomed to fail (that's not Eclipse</Line>
          <Line>specific): you might end up with duplicate code/contributions e.g. if code has</Line>
          <Line>been moved form component A to component B or a component has been split</Line>
          <Line>into several ones.</Line>
          <Line />
          <Line>2. the registry cache is not updated automatically to save startup time. whenever</Line>
          <Line>you change your installation manually (this includes adding plug-ins without</Line>
          <Line>using Install/Update) you have to refresh the cache - that's what -clean does</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The exception occurs on selecting some of Java preference pages on

Window-&gt;Preferences-&gt;Java-&gt;Compiler 
or
Window-&gt;Preferences-&gt;Java-&gt;Code Style
or
Window-&gt;Preferences-&gt;Workbench-&gt;Editors-&gt;Java
or
Window-&gt;Preferences-&gt;Workbench-&gt;Editors-&gt;Java
etc.

Error Dez 02, 2004 11:08:26.545 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
java.lang.NoClassDefFoundError: org/eclipse/jface/text/hyperlink/
IHyperlinkController
	at org.eclipse.jdt.internal.ui.preferences.
JavaEditorColoringConfigurationBlock.
createPreviewer(JavaEditorColoringConfigurationBlock.java:722)
	at org.eclipse.jdt.internal.ui.preferences.
JavaEditorColoringConfigurationBlock.
createSyntaxPage(JavaEditorColoringConfigurationBlock.java:652)
	at org.eclipse.jdt.internal.ui.preferences.
JavaEditorColoringConfigurationBlock.
createControl(JavaEditorColoringConfigurationBlock.java:382)
	at org.eclipse.jdt.internal.ui.preferences.
AbstractConfigurationBlockPreferencePage.
createContents(AbstractConfigurationBlockPreferencePage.java:76)
	at org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.
java:231)
	at org.eclipse.jdt.internal.ui.preferences.
AbstractConfigurationBlockPreferencePage.
createControl(AbstractConfigurationBlockPreferencePage.java:64)
	at org.eclipse.jface.preference.PreferenceDialog$13.run(PreferenceDialog.java:
1106)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.
java:1100)
	at org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.
showPage(WorkbenchPreferenceDialog.java:424)
	at org.eclipse.jface.preference.PreferenceDialog$9.
selectionChanged(PreferenceDialog.java:594)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:636)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.jface.viewers.StructuredViewer.
firePostSelectionChanged(StructuredViewer.java:634)
	at org.eclipse.jface.viewers.StructuredViewer.
handlePostSelect(StructuredViewer.java:905)
	at org.eclipse.jface.viewers.StructuredViewer$5.
widgetSelected(StructuredViewer.java:925)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.
java:231)
	at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:226)
	at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:392)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2780)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:718)
	at org.eclipse.jface.window.Window.open(Window.java:696)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.
java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:989)
	at org.eclipse.jface.action.ActionContributionItem.
handleWidgetSelection(ActionContributionItem.java:555)
	at org.eclipse.jface.action.ActionContributionItem.
access$2(ActionContributionItem.java:505)
	at org.eclipse.jface.action.ActionContributionItem$6.
handleEvent(ActionContributionItem.java:419)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1579)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:282)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.
java:220)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
	at sun.reflect.DelegatingMethodAccessorImpl.
invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:710)
	at org.eclipse.core.launcher.Main.main(Main.java:694)


Tested with :
eclipse.buildId=I200411050810
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
I cannot also open Java Editor cause of the same problem:

Error Dez 02, 2004 11:11:56.767 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
java.lang.NoClassDefFoundError: org/eclipse/jface/text/hyperlink/
IHyperlinkController
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.
initializeEditor(JavaEditor.java:1594)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.
&lt;init&gt;(AbstractDecoratedTextEditor.java:199)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.&lt;init&gt;(JavaEditor.java:
1577)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.
&lt;init&gt;(CompilationUnitEditor.java:1159)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.
newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.
newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at java.lang.Class.newInstance0(Class.java:350)
	at java.lang.Class.newInstance(Class.java:303)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:171)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:151)
	at org.eclipse.core.internal.registry.ConfigurationElement.
createExecutableExtension(ConfigurationElement.java:138)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.
createExecutableExtension(ConfigurationElementHandle.java:48)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.
java:207)
	at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:905)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.
java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.EditorManager.createPart(EditorManager.java:903)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:
889)
	at org.eclipse.ui.internal.EditorManager.
openEditorFromDescriptor(EditorManager.java:647)
	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:633)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.
java:2279)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:
2211)
	at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2203)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2189)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2184)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:299)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.
openInEditor(EditorUtility.java:137)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.
openInEditor(EditorUtility.java:115)
	at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:
49)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:164)


How did you install the build? Unzip over existing? If so, your doomed to fail.

However, it might still work but you must use -clean command line argument when
starting eclipse.exe.
It was a "clean" install but on top of existing workspace directory.
Now I have restore the old M3 installation and simply copied I200411050810 build 
over it. With -clean option I can run it now without problems.
What is the reason for this bug?
&gt;What is the reason for this bug?
This is not a bug. Two reasons:
1. copying over an existing install is simply doomed to fail (that's not Eclipse
   specific): you might end up with duplicate code/contributions e.g. if code has 
   been moved form component A to component B or a component has been split
   into several ones.

2. the registry cache is not updated automatically to save startup time. whenever
   you change your installation manually (this includes adding plug-ins without
   using Install/Update) you have to refresh the cache - that's what -clean does</WithStack>
    <WithOutStack>The exception occurs on selecting some of Java preference pages on

Window-&gt;Preferences-&gt;Java-&gt;Compiler 
or
Window-&gt;Preferences-&gt;Java-&gt;Code Style
or
Window-&gt;Preferences-&gt;Workbench-&gt;Editors-&gt;Java
or
Window-&gt;Preferences-&gt;Workbench-&gt;Editors-&gt;Java
etc.

Error Dez 02, 2004 11:08:26.545 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".


Tested with :
eclipse.buildId=I200411050810
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
I cannot also open Java Editor cause of the same problem:

Error Dez 02, 2004 11:11:56.767 Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".



How did you install the build? Unzip over existing? If so, your doomed to fail.

However, it might still work but you must use -clean command line argument when
starting eclipse.exe.
It was a "clean" install but on top of existing workspace directory.
Now I have restore the old M3 installation and simply copied I200411050810 build 
over it. With -clean option I can run it now without problems.
What is the reason for this bug?
&gt;What is the reason for this bug?
This is not a bug. Two reasons:
1. copying over an existing install is simply doomed to fail (that's not Eclipse
   specific): you might end up with duplicate code/contributions e.g. if code has 
   been moved form component A to component B or a component has been split
   into several ones.

2. the registry cache is not updated automatically to save startup time. whenever
   you change your installation manually (this includes adding plug-ins without
   using Install/Update) you have to refresh the cache - that's what -clean does</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79978" />
    <CreationDate amount="2004-12-02 05:12:00 -0500" />
    <DupId amount="73182" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Source Code Locations" preference page - can't add another lookup location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- open Preferences/Plug-in Development/Source Code Locations</Line>
          <Line>- add one lookup location. Works fine the first time.</Line>
          <Line>- click OK to close the Preferences dialog</Line>
          <Line>- open Preferences/Plug-in Development/Source Code Locations again</Line>
          <Line>- now when I click the Add button, nothing happens and I get the following</Line>
          <Line>error: org.eclipse.swt.SWTException: Widget is disposed (details included as an</Line>
          <Line>attachment)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Steps to reproduce:
- open Preferences/Plug-in Development/Source Code Locations
- add one lookup location. Works fine the first time.
- click OK to close the Preferences dialog
- open Preferences/Plug-in Development/Source Code Locations again
- now when I click the Add button, nothing happens and I get the following
error: org.eclipse.swt.SWTException: Widget is disposed (details included as an
attachment)

I have to restart Eclipse to be able to add another location. After adding one
the error is back though.

I am trying to add source from an extension, which is installed at a filesystem
location different from where Eclipse plugins are.


*** This bug has been marked as a duplicate of 73182 ***</WithStack>
    <WithOutStack>Steps to reproduce:
- open Preferences/Plug-in Development/Source Code Locations
- add one lookup location. Works fine the first time.
- click OK to close the Preferences dialog
- open Preferences/Plug-in Development/Source Code Locations again
- now when I click the Add button, nothing happens and I get the following
error: org.eclipse.swt.SWTException: Widget is disposed (details included as an
attachment)

I have to restart Eclipse to be able to add another location. After adding one
the error is back though.

I am trying to add source from an extension, which is installed at a filesystem
location different from where Eclipse plugins are.


*** This bug has been marked as a duplicate of 73182 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79979" />
    <CreationDate amount="2004-12-02 05:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="1.2.0 M1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing markers for declare parents</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The targets of other ITDs are indicated by gutter markers, but these are missing
for targets of declare parents
now fixed</WithStack>
    <WithOutStack>The targets of other ITDs are indicated by gutter markers, but these are missing
for targets of declare parents
now fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79980" />
    <CreationDate amount="2004-12-02 05:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Table widged doesn't paint header if the table is very wide</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="690" end="1483" />
        <code>public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Table table = new Table (shell, SWT.V_SCROLL | SWT.H_SCROLL | 
SWT.FULL_SELECTION);
	table.setLinesVisible(true);
	table.setHeaderVisible(true);
	int columns = 64;
	for (int i = 0; i &lt; columns; i++) {
		TableColumn column = new TableColumn (table, SWT.NONE);
		column.setText("Column " + i);
		column.setWidth (240);		
	}
	int items = 16;
	for (int i = 0; i &lt; items; i++) {
		TableItem item = new TableItem (table, SWT.NONE);
		for (int j = 0; j &lt; columns; j++) {
			item.setText(j, "Item " + i + ", " + j);
		}
	}
	table.setBounds(shell.getClientArea());
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();		
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>the table widged doesn't paint the table header if the table is very long!!!
Created attachment 16292
example table
Please, retest using the latest integration or nightly build.
I think this is a duplicate of Bug#69304, please reopen this problem report if 
I'm wrong.


*** This bug has been marked as a duplicate of 69304 ***
the bug allways occurs under win2000
FH to work with SN to resolve this.  If is it really a duplicate, then close 
as such.  If not, then assign the problem with SN and provide background 
information.
I can't reproduce this problem.
Could you please send some code (a simple snippet) to help up to reproduce the 
problem ?
Here is the code I was playing with:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Table table = new Table (shell, SWT.V_SCROLL | SWT.H_SCROLL | 
SWT.FULL_SELECTION);
	table.setLinesVisible(true);
	table.setHeaderVisible(true);
	int columns = 64;
	for (int i = 0; i &lt; columns; i++) {
		TableColumn column = new TableColumn (table, SWT.NONE);
		column.setText("Column " + i);
		column.setWidth (240);		
	}
	int items = 16;
	for (int i = 0; i &lt; items; i++) {
		TableItem item = new TableItem (table, SWT.NONE);
		for (int j = 0; j &lt; columns; j++) {
			item.setText(j, "Item " + i + ", " + j);
		}
	}
	table.setBounds(shell.getClientArea());
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();		
}
sorry for the long reply time, but was ill last week.

you snipped worked fine with this settings. but if you change the column count
upper 136, i've got the repaint-problem. 
please test the snipped with more columns and see what happens!
Any updates on this bug?  I tested with 3.1M7 and no labels were showned after 
Column 137.  
It is not the number of columns but the width of table header, as you scroll 
its width grow, once it hits the platform limit ((0x7FFF) it stop working.

Steve, do you have any idea how to fix this ?
Personally I think this a platform limitation and it can't be fixed.
I think this is a WONTFIX.  We have no control over how Windows implements the 
table header.
*** Bug 368928 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>the table widged doesn't paint the table header if the table is very long!!!
Created attachment 16292
example table
Please, retest using the latest integration or nightly build.
I think this is a duplicate of Bug#69304, please reopen this problem report if 
I'm wrong.


*** This bug has been marked as a duplicate of 69304 ***
the bug allways occurs under win2000
FH to work with SN to resolve this.  If is it really a duplicate, then close 
as such.  If not, then assign the problem with SN and provide background 
information.
I can't reproduce this problem.
Could you please send some code (a simple snippet) to help up to reproduce the 
problem ?
Here is the code I was playing with:

public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Table table = new Table (shell, SWT.V_SCROLL | SWT.H_SCROLL | 
SWT.FULL_SELECTION);
	table.setLinesVisible(true);
	table.setHeaderVisible(true);
	int columns = 64;
	for (int i = 0; i &lt; columns; i++) {
		TableColumn column = new TableColumn (table, SWT.NONE);
		column.setText("Column " + i);
		column.setWidth (240);		
	}
	int items = 16;
	for (int i = 0; i &lt; items; i++) {
		TableItem item = new TableItem (table, SWT.NONE);
		for (int j = 0; j &lt; columns; j++) {
			item.setText(j, "Item " + i + ", " + j);
		}
	}
	table.setBounds(shell.getClientArea());
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();		
}
sorry for the long reply time, but was ill last week.

you snipped worked fine with this settings. but if you change the column count
upper 136, i've got the repaint-problem. 
please test the snipped with more columns and see what happens!
Any updates on this bug?  I tested with 3.1M7 and no labels were showned after 
Column 137.  
It is not the number of columns but the width of table header, as you scroll 
its width grow, once it hits the platform limit ((0x7FFF) it stop working.

Steve, do you have any idea how to fix this ?
Personally I think this a platform limitation and it can't be fixed.
I think this is a WONTFIX.  We have no control over how Windows implements the 
table header.
*** Bug 368928 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79981" />
    <CreationDate amount="2004-12-02 05:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Forms] Tab order on Pref page with expandable items - first item skipped</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I open the Preference page Java &gt; Compiler &gt; Building. I expand the first item
and select with the mouse the tree item 'Building' on the left again. Repeatedly
using the tab key selects first the textfield 'Maximum number ...', then the
next expandable item etc. From there, I go back with Shift-Tab, which behaves
correctly (doesn't skip the first item).
Leif, which build are you using.
Aeks, sorry ... the last integration build, I200412011139.
I suspect that the problem is that the expandable composite does not really take
the focus. It just forwards it to it's children (default implementation of
Composite). That's either the Twistie (what makes sense, or the first control in
the body

Moving to [ui.forms]
Confirmed - the first item is skipped in forward tabbing, but not in backward. 
This is not related to the expansion state - it happens when the composite is 
collapsed as well.
*** Bug 94143 has been marked as a duplicate of this bug. ***
I cannot reproduce this on 3.4 RC3. Closing.</WithStack>
    <WithOutStack>I open the Preference page Java &gt; Compiler &gt; Building. I expand the first item
and select with the mouse the tree item 'Building' on the left again. Repeatedly
using the tab key selects first the textfield 'Maximum number ...', then the
next expandable item etc. From there, I go back with Shift-Tab, which behaves
correctly (doesn't skip the first item).
Leif, which build are you using.
Aeks, sorry ... the last integration build, I200412011139.
I suspect that the problem is that the expandable composite does not really take
the focus. It just forwards it to it's children (default implementation of
Composite). That's either the Twistie (what makes sense, or the first control in
the body

Moving to [ui.forms]
Confirmed - the first item is skipped in forward tabbing, but not in backward. 
This is not related to the expansion state - it happens when the composite is 
collapsed as well.
*** Bug 94143 has been marked as a duplicate of this bug. ***
I cannot reproduce this on 3.4 RC3. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79982" />
    <CreationDate amount="2004-12-02 05:51:00 -0500" />
    <DupId amount="108110" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Problems] Add filter: active workingset</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently, you can select (in the problem filter):
On working set:
 &lt;select&gt;

You should be able to select 'active workingset', so that when you change 
workingsets, the filter also changes.
Move to Platform/UI


*** This bug has been marked as a duplicate of 108110 ***</WithStack>
    <WithOutStack>Currently, you can select (in the problem filter):
On working set:
 &lt;select&gt;

You should be able to select 'active workingset', so that when you change 
workingsets, the filter also changes.
Move to Platform/UI


*** This bug has been marked as a duplicate of 108110 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79983" />
    <CreationDate amount="2004-12-02 05:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[5.0][syntax highlighting] Support type variables</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="168" end="186" />
        <code>class X&lt;T&gt; { }</code>
      </source_code>
      <source_code type="class">
        <location start="187" end="220" />
        <code>class Y&lt;Number&gt; extends X { }</code>
      </source_code>
      <source_code type="assignment">
        <location start="698" end="709" />
        <code>T t= null;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- color just the lowest level type parameters?</Line>
          <Line>- color all types withing &lt;&gt;</Line>
          <Line>- use a different shading depending on the nesting depth...?</Line>
          <Line>My original request was unclear. I don't want to highlight type parameters. I</Line>
          <Line>only want to highlight type variables (i.e. those SimpleNames that have a type</Line>
          <Line>binding that says isTypeVariable() == true).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Advanced syntax highlighting should support coloring type parameters in 1.5 code.

I just needed a while to understand what's wrong/unintended with these declarations:
    class X&lt;T&gt; { }
    class Y&lt;Number&gt; extends X { }

I guess with colored 'Number', I would easily have spotted my error.
Markus: References and declartions should be colored
Hm, you want all types used as type parameters colored? I see your point, but
wonder whether it's not going to be too colorful.

What we currently have is to color any non-concrete type refernences (e.g. 'T'
and 'E'), but not concrete bounds.

How do you color this:

&lt;T extends Comparable&lt;T&gt; &amp; Iterable&lt;? extends Number&gt;&gt; void multiList(List&lt;T&gt;
list) {
	T t= null;
}

- color just the lowest level type parameters?
- color all types withing &lt;&gt;
- use a different shading depending on the nesting depth...?
My original request was unclear. I don't want to highlight type parameters. I
only want to highlight type variables (i.e. those SimpleNames that have a type
binding that says isTypeVariable() == true).

The element category should be renamed to "Type variables".
In your example, all "T"s should be highligthed as "Type variables".

fixed &gt; 20050119
.</WithStack>
    <WithOutStack>Advanced syntax highlighting should support coloring type parameters in 1.5 code.

I just needed a while to understand what's wrong/unintended with these declarations:
    class X&lt;T&gt; { }
    class Y&lt;Number&gt; extends X { }

I guess with colored 'Number', I would easily have spotted my error.
Markus: References and declartions should be colored
Hm, you want all types used as type parameters colored? I see your point, but
wonder whether it's not going to be too colorful.

What we currently have is to color any non-concrete type refernences (e.g. 'T'
and 'E'), but not concrete bounds.

How do you color this:

&lt;T extends Comparable&lt;T&gt; &amp; Iterable&lt;? extends Number&gt;&gt; void multiList(List&lt;T&gt;
list) {
	T t= null;
}

- color just the lowest level type parameters?
- color all types withing &lt;&gt;
- use a different shading depending on the nesting depth...?
My original request was unclear. I don't want to highlight type parameters. I
only want to highlight type variables (i.e. those SimpleNames that have a type
binding that says isTypeVariable() == true).

The element category should be renamed to "Type variables".
In your example, all "T"s should be highligthed as "Type variables".

fixed &gt; 20050119
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79984" />
    <CreationDate amount="2004-12-02 05:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] PreferencePage should relayout dialog after creating contents</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Workbench-&gt;Editors-&gt;All Text Editors-&gt;Spelling (&gt;20041209)</Line>
          <Line>- Workbench-&gt;Editors-&gt;Java section Folding</Line>
          <Line>There is only one extension to each in the build, but switching from a different</Line>
          <Line>page to the Spelling page currently has the same effect like switching between</Line>
          <Line>spelling engines. The lower border is a bit cut off.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20041201 (-gtk, but probably the same on all platforms)

Some PreferencePages will look ok when the preference dialog is opened on them,
but not when navigated to them via the preference page tree. The reason for this
is that after createContents, no layout is triggered. 

While it is possible (and suggested by the javadoc) to extend doComputeSize and
probably do the relayouting inside, apparently noone actually does that. 

Couldn't PreferencePage be smart an relayout after creating the control?
Tom can you give me an example please? This is a bigger issue with the 
revamped preference dialog so this would be a nice use case for me to test.
In I20041201, have a look at the (depending on your preference page layout)
Workbench&gt;Editors&gt;Java&gt;Code Assist preference page. Note the width of the table
containing the various color options.

If the preference dialog is opened directly on the page, the layout is ok, i.e.
the table is wide enough.

If the dialog is opened on a different page, and you the navigate to it, the
table is too narrow. 

The problem can be fixed by adding a call to layout() in the end of
CodeAssistConfigurationBlock.createControl, or by causing a relayout somehow
else, e.g. by setting a font or so.
A related issue arises if extensions contribute part of a preference page and
the user can switch between extensions. On each switch the extension's
corresponding configuration block is shown. Because these blocks are lazy-loaded
the preference page cannot determine its minimum size beforehand and would need
a way to tell its container to resize the dialog like on a page flip.

There are currently (at least) two pages that allow extensions to contribute
configuration blocks:
- Workbench-&gt;Editors-&gt;All Text Editors-&gt;Spelling (&gt;20041209)
- Workbench-&gt;Editors-&gt;Java section Folding
There is only one extension to each in the build, but switching from a different
page to the Spelling page currently has the same effect like switching between
spelling engines. The lower border is a bit cut off.

I don't see this problem in I20070410-1043</WithStack>
    <WithOutStack>I20041201 (-gtk, but probably the same on all platforms)

Some PreferencePages will look ok when the preference dialog is opened on them,
but not when navigated to them via the preference page tree. The reason for this
is that after createContents, no layout is triggered. 

While it is possible (and suggested by the javadoc) to extend doComputeSize and
probably do the relayouting inside, apparently noone actually does that. 

Couldn't PreferencePage be smart an relayout after creating the control?
Tom can you give me an example please? This is a bigger issue with the 
revamped preference dialog so this would be a nice use case for me to test.
In I20041201, have a look at the (depending on your preference page layout)
Workbench&gt;Editors&gt;Java&gt;Code Assist preference page. Note the width of the table
containing the various color options.

If the preference dialog is opened directly on the page, the layout is ok, i.e.
the table is wide enough.

If the dialog is opened on a different page, and you the navigate to it, the
table is too narrow. 

The problem can be fixed by adding a call to layout() in the end of
CodeAssistConfigurationBlock.createControl, or by causing a relayout somehow
else, e.g. by setting a font or so.
A related issue arises if extensions contribute part of a preference page and
the user can switch between extensions. On each switch the extension's
corresponding configuration block is shown. Because these blocks are lazy-loaded
the preference page cannot determine its minimum size beforehand and would need
a way to tell its container to resize the dialog like on a page flip.

There are currently (at least) two pages that allow extensions to contribute
configuration blocks:
- Workbench-&gt;Editors-&gt;All Text Editors-&gt;Spelling (&gt;20041209)
- Workbench-&gt;Editors-&gt;Java section Folding
There is only one extension to each in the build, but switching from a different
page to the Spelling page currently has the same effect like switching between
spelling engines. The lower border is a bit cut off.

I don't see this problem in I20070410-1043</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79985" />
    <CreationDate amount="2004-12-02 06:00:00 -0500" />
    <DupId amount="33972" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[ErrorHandling] Add improved tools to track down out of memory errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I've got 1Gbyte of working space, but I get the error below during normal
operations from time to another.

Would it be possible to add some mechanism to put a bit more flesh on these
problem conditions such that they be tracked down more easily?


The latest case was when double clicking on a text file in the search view of
Eclipse 3.0.1.


Unhandled event loop exception
Reason:
Failed to execute runnable (java.lang.OutOfMemoryError)
*** SWT nested exception
Reason:
java.lang.OutOfMemoryError
Unhandled event loop exception


*** This bug has been marked as a duplicate of bug 33972 ***</WithStack>
    <WithOutStack>I've got 1Gbyte of working space, but I get the error below during normal
operations from time to another.

Would it be possible to add some mechanism to put a bit more flesh on these
problem conditions such that they be tracked down more easily?


The latest case was when double clicking on a text file in the search view of
Eclipse 3.0.1.


Unhandled event loop exception
Reason:
Failed to execute runnable (java.lang.OutOfMemoryError)
*** SWT nested exception
Reason:
java.lang.OutOfMemoryError
Unhandled event loop exception


*** This bug has been marked as a duplicate of bug 33972 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79986" />
    <CreationDate amount="2004-12-02 06:22:00 -0500" />
    <DupId amount="71701" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Notification of Eclipse shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>At present, when an editor (or any other part) is asked to close, it cannot tell
whether this is (a) the result of a specific user request, or (b) being closed
as part of a general shutdown. However, the desired behaviour of an editor can
be different for these cases. It would therefore be good to have an event
generated by the workbench corresponding to "system shutdown requested", which
an editor could listen to.
Can you elaborate on your scenario that requires different behaviour in these two cases?


*** This bug has been marked as a duplicate of 71701 ***</WithStack>
    <WithOutStack>At present, when an editor (or any other part) is asked to close, it cannot tell
whether this is (a) the result of a specific user request, or (b) being closed
as part of a general shutdown. However, the desired behaviour of an editor can
be different for these cases. It would therefore be good to have an event
generated by the workbench corresponding to "system shutdown requested", which
an editor could listen to.
Can you elaborate on your scenario that requires different behaviour in these two cases?


*** This bug has been marked as a duplicate of 71701 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79987" />
    <CreationDate amount="2004-12-02 06:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Export plugin jar to dir fails if destination path contains umlauts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>RCP project, doing

Export
  Deployable plug-ins and fragments
    Export Options
      Deploy as: a directory structure
    Destination
      E:\t*st

fails without error message if
  * = German umlaut, for example: ö, UTF-8 encoding C3 B6
and succeed with
  * = e

If umlauts in the destination path, the directory

  &lt;workspace&gt;\.metadata\.plugins\org.eclipse.pde.ui\temp

is not deleted after export. If this directory exist, no new jar file is copied.
So, the first try is ok and all following tries are faulty.

Workaround: delete the temp directory manually before export.
Fixed.</WithStack>
    <WithOutStack>RCP project, doing

Export
  Deployable plug-ins and fragments
    Export Options
      Deploy as: a directory structure
    Destination
      E:\t*st

fails without error message if
  * = German umlaut, for example: ö, UTF-8 encoding C3 B6
and succeed with
  * = e

If umlauts in the destination path, the directory

  &lt;workspace&gt;\.metadata\.plugins\org.eclipse.pde.ui\temp

is not deleted after export. If this directory exist, no new jar file is copied.
So, the first try is ok and all following tries are faulty.

Workaround: delete the temp directory manually before export.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79988" />
    <CreationDate amount="2004-12-02 06:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add Folder buttons don't work in app bundle exporter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>200412011139

On the second page of the application bundle exporter the Add Folder buttons have no effect.
Instead the open folder dialogs appear after pressing the "Add File" button and after dismissing the 
resulting open file dialog. So it seems that selection handlers for the Add Folder buttons are in fact 
registered woth the add file buttons.
fixed for N20041203</WithStack>
    <WithOutStack>200412011139

On the second page of the application bundle exporter the Add Folder buttons have no effect.
Instead the open folder dialogs appear after pressing the "Add File" button and after dismissing the 
resulting open file dialog. So it seems that selection handlers for the Add Folder buttons are in fact 
registered woth the add file buttons.
fixed for N20041203</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79989" />
    <CreationDate amount="2004-12-02 06:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Should show members of annotation types as public</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="71" end="84" />
        <code>int foo();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="85" end="98" />
        <code>int bar();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="212" end="225" />
        <code>int foo();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="226" end="239" />
        <code>int bar();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20041201

With the following annotation type:
public @interface X {  
   int foo();
   int bar();
}
the members foo() and bar() don't appear public, wherease with the following
interface:
public interface I {  
   int foo();
   int bar();
}
the methods foo() and bar() appear public.

JavaElementImageProvider#getMethodImageDescriptor(...) checks if the type is an
interface. It should also check if the type is an annotation type.
Martin, can we fix this for M4. If not still OK for M5.
fixed &gt; 20041203</WithStack>
    <WithOutStack>I20041201

With the following annotation type:
public @interface X {  
   int foo();
   int bar();
}
the members foo() and bar() don't appear public, wherease with the following
interface:
public interface I {  
   int foo();
   int bar();
}
the methods foo() and bar() appear public.

JavaElementImageProvider#getMethodImageDescriptor(...) checks if the type is an
interface. It should also check if the type is an annotation type.
Martin, can we fix this for M4. If not still OK for M5.
fixed &gt; 20041203</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79990" />
    <CreationDate amount="2004-12-02 06:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][search] Search for method declaration doesn't find method with instantiated type parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="102" end="184" />
        <code>class X&lt;T&gt; {
    public void method(Number num) {}
    public void other(T t) {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="185" end="287" />
        <code>class Y extends X&lt;Number&gt; {
    public void method(Number num) {}
    public void other(Number t) {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="1437" end="1477" />
        <code>class Super&lt;T&gt; {
	void methodT(T t) {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="1478" end="1563" />
        <code>class Sub&lt;X&gt; extends Super&lt;X&gt; {
	void methodT(X x) {} // overrides Super#methodT(T)
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) ignore syntax filter</Line>
          <Line>2) parse super classes and interfaces hierarchy on each possible match</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20041130-0800

Search for method declaration doesn't find method with instantiated type parameters:

class X&lt;T&gt; {
    public void method(Number num) {}
    public void other(T t) {}
}
class Y extends X&lt;Number&gt; {
    public void method(Number num) {}
    public void other(Number t) {}
}

Search for declarations of X#method(Number) gives 2 matches.
Search for declarations of X#other(T) gives only 1 match.

Is this the intended behavior? IMO, Y#other(Number) should also be found, since
it overrides X#other(T).
Support for generic/parameterized type in methods search is not currently
finalized (see bug 75642).
Even with bug 75642 fix, we could not do anything yet on this peculiar issue
without having any further information.

Currently, while locating method matches, there's an initial filter which
removes all possible matches found in indexes which do not have same selector
and parameters types name. In this case, other(Number) is removed because
parameter 'T' is different than 'Number'.
Unfortunately, we cannot remove as this is a low level filter. Without it,
locating would be polluted by many additional matches and this would have a
performance impact on search results.

I have to think a little bit more to figure out what could be possible solution
to address this issue...

Perhaps related to bug 80264?
*** Bug 83818 has been marked as a duplicate of this bug. ***
Here's a similar, but slightly different case:

class Super&lt;T&gt; {
	void methodT(T t) {}
}
class Sub&lt;X&gt; extends Super&lt;X&gt; {
	void methodT(X x) {} // overrides Super#methodT(T)
}

Note: this PR is case (2) of bug 81377.
Frederic - you could imagine find super method matches by walking super
hierarchies once you found a good match.
Tagged for M7 tentatively, but could be done during first release fixpass cycle.
Dirk said: "this bug is important for us since your new ripple method
implementation needs this bug fixed"
Finally syntax filter will be removed on parameter names as it concerns only a
limited number of matches (selector and number of arguments still should match
pattern).

Too risky for M7 without measuring impact on performances for potential fix...
=&gt; defer to RC1 (hopefully early)

Created attachment 21125
Patch to implement this fix

Testing performance of this patch for this specific method search
(java.lang.Object.equals(Object) on a workspace with only org.eclipse.jdt.core
project) shows that time spent in MethodLocator.matchOverriddenMethod is
negligible (ie. less than 5ms although whole search lasts ~26 seconds)
as it does not appear in hierarchy calls below MethodLocator.resolveLevel:
3.55% - 860 ms - ...search.matching.MatchLocator.reportMatching()
  3.27% - 790 ms - ...search.matching.MatchLocator.reportMatching()
  0.22% - 55 ms - ...search.matching.MethodLocator.resolveLevel()
    0.22% - 55 ms - ...search.matching.MethodLocator.resolveLevel()
      0.14% - 35 ms - ...search.matching.MethodLocator.resolveLevelAsSubtype()
      0.08% - 20 ms - ...search.matching.MethodLocator.matchMethod()
  0.02% - 5 ms - ...search.matching.MatchingNodeSet.addMatch()
Ooops, I'm really tired by the end of this milestone week...
Forgot time results in previous comment, I've made a reference search although
the fix is only active while searching declarations...:-(

As expected, when performing some specific string pattern search, we can observe
a decrease of performance. Typically for string method pattern "e*(Object)" on
org.eclipse.jdt.core project: without fix search lasts ~33s although it takes
~42s with the fix. This 27% of time over cost is spent while resolving some of
compilation units although it was never done before for this pattern...

However note that it's only the case for a limited kind of search: string method
pattern with type non qualified arguments...

For other kind of method declaration searches (typically thoses of two test
cases described in comment 0 and comment 5), time over cost is only due to
resolution in declaring type hierarchy to find if match may override generic
methods.

Performance tests I've done while searching for IMethod
"equals(java.lang.Object)" in project org.eclipse.jdt.core. show that there's no
noticeable time over cost for this extra resolution...

So, I'm now confident about this patch and will release it as soon as 3.1 M7
will be declared (ie.tomorrow).

philippe, do you agree with this fix even if it can decrease performance on
certain seldom kind of method search ?

I forgot to mention that this fix (ie. resolve + look at super classes and super
interfaces hierarchy) is only activated for 1.5 source level. That means all
previous search in 1.4 mode still works as before and does not get any time
penalty due to this fix.

This reduce a lot cases concerned by -27% performance results related in comment 11.
Created attachment 21157
Patch to implement this fix without time penalty

This is a new version for the fix which does not need to resolve with string
method pattern. With this patch, while creating pattern, we just look if method
type arguments is equals to one of declaring type type parameters.

If so, then set a specific flag to:
1) ignore syntax filter
2) parse super classes and interfaces hierarchy on each possible match

With this fix searching method declaration with "e*(Object)" pattern gives same
times than 3.1 M7.

All JDT/Core and JDT/UI tests pass with this fix
Fixed.

Second patch was released in HEAD.

[jdt-core internal]
Test cases added in JavaSearchBugsTests

Verified in I20050526-2000</WithStack>
    <WithOutStack>I20041130-0800

Search for method declaration doesn't find method with instantiated type parameters:

class X&lt;T&gt; {
    public void method(Number num) {}
    public void other(T t) {}
}
class Y extends X&lt;Number&gt; {
    public void method(Number num) {}
    public void other(Number t) {}
}

Search for declarations of X#method(Number) gives 2 matches.
Search for declarations of X#other(T) gives only 1 match.

Is this the intended behavior? IMO, Y#other(Number) should also be found, since
it overrides X#other(T).
Support for generic/parameterized type in methods search is not currently
finalized (see bug 75642).
Even with bug 75642 fix, we could not do anything yet on this peculiar issue
without having any further information.

Currently, while locating method matches, there's an initial filter which
removes all possible matches found in indexes which do not have same selector
and parameters types name. In this case, other(Number) is removed because
parameter 'T' is different than 'Number'.
Unfortunately, we cannot remove as this is a low level filter. Without it,
locating would be polluted by many additional matches and this would have a
performance impact on search results.

I have to think a little bit more to figure out what could be possible solution
to address this issue...

Perhaps related to bug 80264?
*** Bug 83818 has been marked as a duplicate of this bug. ***
Here's a similar, but slightly different case:

class Super&lt;T&gt; {
	void methodT(T t) {}
}
class Sub&lt;X&gt; extends Super&lt;X&gt; {
	void methodT(X x) {} // overrides Super#methodT(T)
}

Note: this PR is case (2) of bug 81377.
Frederic - you could imagine find super method matches by walking super
hierarchies once you found a good match.
Tagged for M7 tentatively, but could be done during first release fixpass cycle.
Dirk said: "this bug is important for us since your new ripple method
implementation needs this bug fixed"
Finally syntax filter will be removed on parameter names as it concerns only a
limited number of matches (selector and number of arguments still should match
pattern).

Too risky for M7 without measuring impact on performances for potential fix...
=&gt; defer to RC1 (hopefully early)

Created attachment 21125
Patch to implement this fix

Testing performance of this patch for this specific method search
(java.lang.Object.equals(Object) on a workspace with only org.eclipse.jdt.core
project) shows that time spent in MethodLocator.matchOverriddenMethod is
negligible (ie. less than 5ms although whole search lasts ~26 seconds)
as it does not appear in hierarchy calls below MethodLocator.resolveLevel:
3.55% - 860 ms - ...search.matching.MatchLocator.reportMatching()
  3.27% - 790 ms - ...search.matching.MatchLocator.reportMatching()
  0.22% - 55 ms - ...search.matching.MethodLocator.resolveLevel()
    0.22% - 55 ms - ...search.matching.MethodLocator.resolveLevel()
      0.14% - 35 ms - ...search.matching.MethodLocator.resolveLevelAsSubtype()
      0.08% - 20 ms - ...search.matching.MethodLocator.matchMethod()
  0.02% - 5 ms - ...search.matching.MatchingNodeSet.addMatch()
Ooops, I'm really tired by the end of this milestone week...
Forgot time results in previous comment, I've made a reference search although
the fix is only active while searching declarations...:-(

As expected, when performing some specific string pattern search, we can observe
a decrease of performance. Typically for string method pattern "e*(Object)" on
org.eclipse.jdt.core project: without fix search lasts ~33s although it takes
~42s with the fix. This 27% of time over cost is spent while resolving some of
compilation units although it was never done before for this pattern...

However note that it's only the case for a limited kind of search: string method
pattern with type non qualified arguments...

For other kind of method declaration searches (typically thoses of two test
cases described in comment 0 and comment 5), time over cost is only due to
resolution in declaring type hierarchy to find if match may override generic
methods.

Performance tests I've done while searching for IMethod
"equals(java.lang.Object)" in project org.eclipse.jdt.core. show that there's no
noticeable time over cost for this extra resolution...

So, I'm now confident about this patch and will release it as soon as 3.1 M7
will be declared (ie.tomorrow).

philippe, do you agree with this fix even if it can decrease performance on
certain seldom kind of method search ?

I forgot to mention that this fix (ie. resolve + look at super classes and super
interfaces hierarchy) is only activated for 1.5 source level. That means all
previous search in 1.4 mode still works as before and does not get any time
penalty due to this fix.

This reduce a lot cases concerned by -27% performance results related in comment 11.
Created attachment 21157
Patch to implement this fix without time penalty

This is a new version for the fix which does not need to resolve with string
method pattern. With this patch, while creating pattern, we just look if method
type arguments is equals to one of declaring type type parameters.

If so, then set a specific flag to:
1) ignore syntax filter
2) parse super classes and interfaces hierarchy on each possible match

With this fix searching method declaration with "e*(Object)" pattern gives same
times than 3.1 M7.

All JDT/Core and JDT/UI tests pass with this fix
Fixed.

Second patch was released in HEAD.

[jdt-core internal]
Test cases added in JavaSearchBugsTests

Verified in I20050526-2000</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79991" />
    <CreationDate amount="2004-12-02 06:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] 'File &gt; Save As' doesn't update navigation history</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>- open a file f.txt, then open a file x.txt</Line>
          <Line>- File &gt; Save As, enter y.txt, Save</Line>
          <Line>- File &gt; Close</Line>
          <Line>-&gt; new file y.txt does not appear in File &gt; 'Recently used files'</Line>
          <Line>-&gt; new file y.txt does not appear on Navigate &gt; Back</Line>
          <Line>As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009</Line>
          <Line>Remy is now responsible for watching the [EditorMgmt] component area.</Line>
          <Line>This no longer seems to be a problem with</Line>
          <Line>Version: Luna (4.4)</Line>
          <Line>Build id: I20140528-2000</Line>
          <Line>Thanks for verifying.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>'File &gt; Save As' doesn't update navigation history:
- open a file f.txt, then open a file x.txt
- File &gt; Save As, enter y.txt, Save
- File &gt; Close
-&gt; new file y.txt does not appear in File &gt; 'Recently used files'
-&gt; new file y.txt does not appear on Navigate &gt; Back
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
This no longer seems to be a problem with 
Version: Luna (4.4)
Build id: I20140528-2000
Thanks for verifying.

PW
(In reply to Markus Keller from comment #0)
&gt; -&gt; new file y.txt does not appear in File &gt; 'Recently used files'
&gt; -&gt; new file y.txt does not appear on Navigate &gt; Back

I can still reproduce these problems in I20140528-2000.
Thanks Wojtek.</WithStack>
    <WithOutStack>'File &gt; Save As' doesn't update navigation history:
- open a file f.txt, then open a file x.txt
- File &gt; Save As, enter y.txt, Save
- File &gt; Close
-&gt; new file y.txt does not appear in File &gt; 'Recently used files'
-&gt; new file y.txt does not appear on Navigate &gt; Back
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
This no longer seems to be a problem with 
Version: Luna (4.4)
Build id: I20140528-2000
Thanks for verifying.

PW
(In reply to Markus Keller from comment #0)
&gt; -&gt; new file y.txt does not appear in File &gt; 'Recently used files'
&gt; -&gt; new file y.txt does not appear on Navigate &gt; Back

I can still reproduce these problems in I20140528-2000.
Thanks Wojtek.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79992" />
    <CreationDate amount="2004-12-02 06:58:00 -0500" />
    <DupId amount="108792" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[projection] up/down navigation loses context when reconciler kicks in</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="457" end="663" />
        <code>class MyTest {
	public void test1() throws Exception {}
	public void test11() throws Exception {
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20041201-1139

Enable Folding (problem doesn't occur with folding off).

In the class below, set the caret to after "test11". Then press Backspace,
quickly followed by several Arrow_Down/Arrow_Up strokes (moving around in the
commented section) until the two test1() methods got their error squiggles.
Then, press Arrow_Up until the caret is on a line with test1()

Expected: caret is in column right after test1
Was: caret is positioned more to the left

class MyTest {
	public void test1() throws Exception {}
	public void test11() throws Exception {
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
	}
}
Not a Java-only problem; also occurs in the Ant editor.
&gt;Enable Folding (problem doesn't occur with folding off).
That's not what I see. I can also reproduce with folding off. Key is to have Mark Occurrences enabled.


*** This bug has been marked as a duplicate of bug 108792 ***</WithStack>
    <WithOutStack>I20041201-1139

Enable Folding (problem doesn't occur with folding off).

In the class below, set the caret to after "test11". Then press Backspace,
quickly followed by several Arrow_Down/Arrow_Up strokes (moving around in the
commented section) until the two test1() methods got their error squiggles.
Then, press Arrow_Up until the caret is on a line with test1()

Expected: caret is in column right after test1
Was: caret is positioned more to the left

class MyTest {
	public void test1() throws Exception {}
	public void test11() throws Exception {
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
//	  short
	    //lines
    //here
	}
}
Not a Java-only problem; also occurs in the Ant editor.
&gt;Enable Folding (problem doesn't occur with folding off).
That's not what I see. I can also reproduce with folding off. Key is to have Mark Occurrences enabled.


*** This bug has been marked as a duplicate of bug 108792 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79993" />
    <CreationDate amount="2004-12-02 07:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[key binding] Shortcut for QuickDiff Toggle (Ctrl+Shift+Q) doesn't work in JavaEditor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>200412011139

Shortcut for QuickDiff Toggle (Ctrl+Shift+Q) doesn't work in JavaEditor any
more. It still works in plain text editors.
Tom, could this be caused by the preference rework?
fixed &gt; ~20041208</WithStack>
    <WithOutStack>200412011139

Shortcut for QuickDiff Toggle (Ctrl+Shift+Q) doesn't work in JavaEditor any
more. It still works in plain text editors.
Tom, could this be caused by the preference rework?
fixed &gt; ~20041208</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79994" />
    <CreationDate amount="2004-12-02 07:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[extract method] add parameter if extracted out of inner class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="787" end="1066" />
        <code>public class SimpleDemonstration {
  private class InnerClass {
    private int thisVariableIsImportant = 0;
    public void doSomethingWithVariable() {
      // Mark the following line and select "Extract Method..."
      System.out.println(thisVariableIsImportant);
    }
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="1480" end="1664" />
        <code>class Outer{
   Object inner=new Object(){

      void foo(){
         invisible().hashCode(); // EXTRACT METHOD FOR THIS STATEMENT
      }

      String invisible(){return"";}
   };
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>If you extract some statements of an inner class that reference a variable only
available in the inner class and create the new method in the outer class, the
method will get no parameter which results in incorrect code.

As an example take the code at the end of this description. Select the line
after the comment and choose "Refactor"-&gt; "Extract Method...". Then enter some
name for the method and choose "Destination Type" as "SimpleDemonstration". Then
click "Ok".

I am aware that there are situations where you cannot refactor these kinds of
methods. This is escpecially the case if the variables of the inner class are
modified (The change of one variable could be refactored via the returntype). So
there should be at least a warning that this refactoring will cause problems.

public class SimpleDemonstration {
  private class InnerClass {
    private int thisVariableIsImportant = 0;
    public void doSomethingWithVariable() {
      // Mark the following line and select "Extract Method..."
      System.out.println(thisVariableIsImportant);
    }
  }
}
Created attachment 16289
Example
Move to JDT/UI
Fix would be to pass this as a variable to get access to the field since the extracted code could write to the field as well.
The problem isn't limited to inner field access.  It also occurs with inner method access.

Also, if the inner class is anonymous and the accessed inner member is invisible, then the destination picker shouldn't offer outer classes.  Eg:

class Outer{
   Object inner=new Object(){

      void foo(){
         invisible().hashCode(); // EXTRACT METHOD FOR THIS STATEMENT
      }

      String invisible(){return"";}
   };
}</WithStack>
    <WithOutStack>If you extract some statements of an inner class that reference a variable only
available in the inner class and create the new method in the outer class, the
method will get no parameter which results in incorrect code.

As an example take the code at the end of this description. Select the line
after the comment and choose "Refactor"-&gt; "Extract Method...". Then enter some
name for the method and choose "Destination Type" as "SimpleDemonstration". Then
click "Ok".

I am aware that there are situations where you cannot refactor these kinds of
methods. This is escpecially the case if the variables of the inner class are
modified (The change of one variable could be refactored via the returntype). So
there should be at least a warning that this refactoring will cause problems.

public class SimpleDemonstration {
  private class InnerClass {
    private int thisVariableIsImportant = 0;
    public void doSomethingWithVariable() {
      // Mark the following line and select "Extract Method..."
      System.out.println(thisVariableIsImportant);
    }
  }
}
Created attachment 16289
Example
Move to JDT/UI
Fix would be to pass this as a variable to get access to the field since the extracted code could write to the field as well.
The problem isn't limited to inner field access.  It also occurs with inner method access.

Also, if the inner class is anonymous and the accessed inner member is invisible, then the destination picker shouldn't offer outer classes.  Eg:

class Outer{
   Object inner=new Object(){

      void foo(){
         invisible().hashCode(); // EXTRACT METHOD FOR THIS STATEMENT
      }

      String invisible(){return"";}
   };
}</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79995" />
    <CreationDate amount="2004-12-02 07:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Chinese Problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>when you create a project whitch the directory of is Chinese,the problem will 
happen.if you open the project again and click the "C/C++ build" item,the 
property of the project break down.It often saiys,"the currently displayed 
page contains invalid values".Because the Chinese word in the .cdtbuild file 
have changed to the confusion code.And this problem will not happen in the JDT 
project.You can consult the build project of the JDT.This problem is not only 
Chinese problem.I think this is a encoding problem.Wish your reply.
The .cdtbuild file contains XML and is encoded in UTF-8 as of 2.1 (and the fix 
is back-ported to the 2.0 stream, but not in a released CDT yet). Could you 
please verify which version of the CDT you are using? Better yet, could you 
look in the &lt;workspace&gt;/.metadata directory and see if there is anything in 
the .log file? Finally, please post the contents of the .cdtbuild file in the 
report (just in case the problem is related to something else). 

Thanks.
Since I have not heard from you, I am going to mark this as invalid. Please 
verify the version of CDT you are using and if it is 2.1 or above, please 
reopen it and we will look into this.</WithStack>
    <WithOutStack>when you create a project whitch the directory of is Chinese,the problem will 
happen.if you open the project again and click the "C/C++ build" item,the 
property of the project break down.It often saiys,"the currently displayed 
page contains invalid values".Because the Chinese word in the .cdtbuild file 
have changed to the confusion code.And this problem will not happen in the JDT 
project.You can consult the build project of the JDT.This problem is not only 
Chinese problem.I think this is a encoding problem.Wish your reply.
The .cdtbuild file contains XML and is encoded in UTF-8 as of 2.1 (and the fix 
is back-ported to the 2.0 stream, but not in a released CDT yet). Could you 
please verify which version of the CDT you are using? Better yet, could you 
look in the &lt;workspace&gt;/.metadata directory and see if there is anything in 
the .log file? Finally, please post the contents of the .cdtbuild file in the 
report (just in case the problem is related to something else). 

Thanks.
Since I have not heard from you, I am going to mark this as invalid. Please 
verify the version of CDT you are using and if it is 2.1 or above, please 
reopen it and we will look into this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79996" />
    <CreationDate amount="2004-12-02 07:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>tooltip doesn't show "F2" for more tooltip in german translation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>when using javadoc tooltip (mouse over class or method) the last line or this
small tooltip should show something like "press F2 to show the complete
information".
instead the german tooltip shows "{0}'" instead of "F2" and the last part of the
text is ".., um zu fokussieren" ("..to focus") but it should say something like
"..., um weitere Informationen anzuzeigen."

more important is that the tooltip does not show "F2".
Created attachment 16291
tooltip does not show F2 (key to be pressed)
Is this Platform UI?
Looks like a bug in the translation. From where did you get it? We i.e. JDT Text
only provide the English translation.
Please provide the answers even though I closed this one. I will forward the
information to the correct team. Thanks.
tested with the latest integration build (dec 1st 2004) and the translation
files for 3.0.x from IBM (NLpack-eclipse-SDK-3.0.x-win32.zip): still happens.
Reopen to move to right owner
I have reproduced the problem on my machine.  I have also verified that the
problem does not occur in other locales, such as Japanese.  Therefore it must be
translation error.

Does anyone know the full path to the english file that the "press F2 to ..."
tooltip comes from?  I can update the German translation once I know what the
corresponding english file is.
There are several instance of this - don't know whether all or just one is
wrong. Here they are:

org.eclipse.ant.ui/Ant Editor/org/eclipse/ant/internal/ui/editor/text -
AntEditorTextMessages.properties

org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui -
DebugUIMessages.properties

org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover -
JavaHoverMessages.properties

Yep, it was the translation.

From the 3rd file in comment #8:

 org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover -
JavaHoverMessages.properties


JavaTextHover.makeStickyHint=Dr\u00FCcken Sie '{0}'', um zu fokussieren.


I'll update the German translation so all new builds will contain the fix.
Created attachment 16452
Screenshot showing the fix
Closing.</WithStack>
    <WithOutStack>when using javadoc tooltip (mouse over class or method) the last line or this
small tooltip should show something like "press F2 to show the complete
information".
instead the german tooltip shows "{0}'" instead of "F2" and the last part of the
text is ".., um zu fokussieren" ("..to focus") but it should say something like
"..., um weitere Informationen anzuzeigen."

more important is that the tooltip does not show "F2".
Created attachment 16291
tooltip does not show F2 (key to be pressed)
Is this Platform UI?
Looks like a bug in the translation. From where did you get it? We i.e. JDT Text
only provide the English translation.
Please provide the answers even though I closed this one. I will forward the
information to the correct team. Thanks.
tested with the latest integration build (dec 1st 2004) and the translation
files for 3.0.x from IBM (NLpack-eclipse-SDK-3.0.x-win32.zip): still happens.
Reopen to move to right owner
I have reproduced the problem on my machine.  I have also verified that the
problem does not occur in other locales, such as Japanese.  Therefore it must be
translation error.

Does anyone know the full path to the english file that the "press F2 to ..."
tooltip comes from?  I can update the German translation once I know what the
corresponding english file is.
There are several instance of this - don't know whether all or just one is
wrong. Here they are:

org.eclipse.ant.ui/Ant Editor/org/eclipse/ant/internal/ui/editor/text -
AntEditorTextMessages.properties

org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui -
DebugUIMessages.properties

org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover -
JavaHoverMessages.properties

Yep, it was the translation.

From the 3rd file in comment #8:

 org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover -
JavaHoverMessages.properties


JavaTextHover.makeStickyHint=Dr\u00FCcken Sie '{0}'', um zu fokussieren.


I'll update the German translation so all new builds will contain the fix.
Created attachment 16452
Screenshot showing the fix
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79997" />
    <CreationDate amount="2004-12-02 07:24:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Eclipse will not start with 2004-12-01 update from Equinox Layering project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="5">
      <Stacktrace timestamp="1437341211581">
        <Exception>org.osgi.framework.BundleException</Exception>
        <Reason>Exception in 
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start() of 
bundle org.eclipse.osgi.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:975)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:549)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:473)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:150)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:355)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:127)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="12">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="13">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341211581">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.internal.resolver.StateImpl.basicAddBundle(StateImpl.java:341)</Frame>
          <Frame depth="1">org.eclipse.osgi.internal.resolver.StateReader.readState(StateReader.java:72)</Frame>
          <Frame depth="2">org.eclipse.osgi.internal.resolver.StateReader.loadState(StateReader.java:440)</Frame>
          <Frame depth="3">org.eclipse.osgi.internal.resolver.StateReader.loadState(StateReader.java:450)</Frame>
          <Frame depth="4">org.eclipse.osgi.internal.resolver.StateObjectFactoryImpl.readSystemState(StateObjectFactoryImpl.java:178)</Frame>
          <Frame depth="5">org.eclipse.osgi.internal.resolver.StateManager.readSystemState(StateManager.java:64)</Frame>
          <Frame depth="6">org.eclipse.osgi.internal.resolver.StateManager.readSystemState(StateManager.java:104)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseAdaptor.createStateManager(EclipseAdaptor.java:132)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStart(DefaultAdaptor.java:819)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart(EclipseAdaptor.java:225)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start(SystemBundleActivator.java:61)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)</Frame>
          <Frame depth="12">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341211581">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.internal.resolver.StateImpl.basicAddBundle(StateImpl.java:341)</Frame>
          <Frame depth="1">org.eclipse.osgi.internal.resolver.StateReader.readState(StateReader.java:72)</Frame>
          <Frame depth="2">org.eclipse.osgi.internal.resolver.StateReader.loadState(StateReader.java:440)</Frame>
          <Frame depth="3">org.eclipse.osgi.internal.resolver.StateReader.loadState(StateReader.java:450)</Frame>
          <Frame depth="4">org.eclipse.osgi.internal.resolver.StateObjectFactoryImpl.readSystemState(StateObjectFactoryImpl.java:178)</Frame>
          <Frame depth="5">org.eclipse.osgi.internal.resolver.StateManager.readSystemState(StateManager.java:64)</Frame>
          <Frame depth="6">org.eclipse.osgi.internal.resolver.StateManager.readSystemState(StateManager.java:104)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseAdaptor.createStateManager(EclipseAdaptor.java:132)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStart(DefaultAdaptor.java:819)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart(EclipseAdaptor.java:225)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start(SystemBundleActivator.java:61)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:958)</Frame>
          <Frame depth="12">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="13">org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:954)</Frame>
          <Frame depth="14">org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:937)</Frame>
          <Frame depth="15">org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:549)</Frame>
          <Frame depth="16">org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:473)</Frame>
          <Frame depth="17">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)</Frame>
          <Frame depth="18">org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)</Frame>
          <Frame depth="19">org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:150)</Frame>
          <Frame depth="20">org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:355)</Frame>
          <Frame depth="21">org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:127)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211581">
        <Exception>java.lang.RuntimeException</Exception>
        <Reason>Exception in 
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start() of 
bundle org.eclipse.osgi.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:557)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:473)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:273)</Frame>
          <Frame depth="3">org.eclipse.osgi.framework.internal.core.StartLevelManager.launch(StartLevelManager.java:243)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.SystemBundle.resume(SystemBundle.java:150)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.Framework.launch(Framework.java:355)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:216)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:127)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="11">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341211581">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:138)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="3">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="4">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse crashes immediately with a log:
!SESSION 2004-12-02 12:15:04.518 ----------------------------------------------
-
eclipse.buildId=I200411050810
java.version=1.4.2_06
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY System Bundle 0 0 2004-12-02 12:15:04.518
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start() of 
bundle org.eclipse.osgi.
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:975)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:937)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles
(StartLevelManager.java:549)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL
(StartLevelManager.java:473)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel
(StartLevelManager.java:273)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.launch
(StartLevelManager.java:243)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.resume
(SystemBundle.java:150)
	at org.eclipse.osgi.framework.internal.core.Framework.launch
(Framework.java:355)
	at org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup
(EclipseStarter.java:216)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)
Caused by: java.lang.NullPointerException
	at org.eclipse.osgi.internal.resolver.StateImpl.basicAddBundle
(StateImpl.java:341)
	at org.eclipse.osgi.internal.resolver.StateReader.readState
(StateReader.java:72)
	at org.eclipse.osgi.internal.resolver.StateReader.loadState
(StateReader.java:440)
	at org.eclipse.osgi.internal.resolver.StateReader.loadState
(StateReader.java:450)
	at 
org.eclipse.osgi.internal.resolver.StateObjectFactoryImpl.readSystemState
(StateObjectFactoryImpl.java:178)
	at org.eclipse.osgi.internal.resolver.StateManager.readSystemState
(StateManager.java:64)
	at org.eclipse.osgi.internal.resolver.StateManager.readSystemState
(StateManager.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.createStateManager
(EclipseAdaptor.java:132)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStar
t(DefaultAdaptor.java:819)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart
(EclipseAdaptor.java:225)
	at org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start
(SystemBundleActivator.java:61)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run
(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:954)
	... 17 more
Root exception:
java.lang.NullPointerException
	at org.eclipse.osgi.internal.resolver.StateImpl.basicAddBundle
(StateImpl.java:341)
	at org.eclipse.osgi.internal.resolver.StateReader.readState
(StateReader.java:72)
	at org.eclipse.osgi.internal.resolver.StateReader.loadState
(StateReader.java:440)
	at org.eclipse.osgi.internal.resolver.StateReader.loadState
(StateReader.java:450)
	at 
org.eclipse.osgi.internal.resolver.StateObjectFactoryImpl.readSystemState
(StateObjectFactoryImpl.java:178)
	at org.eclipse.osgi.internal.resolver.StateManager.readSystemState
(StateManager.java:64)
	at org.eclipse.osgi.internal.resolver.StateManager.readSystemState
(StateManager.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.createStateManager
(EclipseAdaptor.java:132)
	at 
org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor.frameworkStar
t(DefaultAdaptor.java:819)
	at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStart
(EclipseAdaptor.java:225)
	at org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start
(SystemBundleActivator.java:61)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run
(BundleContextImpl.java:958)
	at java.security.AccessController.doPrivileged(Native Method)
	at 
org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator
(BundleContextImpl.java:954)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start
(BundleContextImpl.java:937)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles
(StartLevelManager.java:549)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL
(StartLevelManager.java:473)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel
(StartLevelManager.java:273)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.launch
(StartLevelManager.java:243)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.resume
(SystemBundle.java:150)
	at org.eclipse.osgi.framework.internal.core.Framework.launch
(Framework.java:355)
	at org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup
(EclipseStarter.java:216)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.osgi 2004-12-02 12:15:04.558
!MESSAGE Startup error
!STACK 1
java.lang.RuntimeException: Exception in 
org.eclipse.osgi.framework.internal.core.SystemBundleActivator.start() of 
bundle org.eclipse.osgi.
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles
(StartLevelManager.java:557)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL
(StartLevelManager.java:473)
	at 
org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel
(StartLevelManager.java:273)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.launch
(StartLevelManager.java:243)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.resume
(SystemBundle.java:150)
	at org.eclipse.osgi.framework.internal.core.Framework.launch
(Framework.java:355)
	at org.eclipse.osgi.framework.internal.core.OSGi.launch(OSGi.java:51)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup
(EclipseStarter.java:216)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)
!SESSION Thu Dec 02 12:15:04 GMT 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 Dec 02, 2004 12:15:04.568
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.NullPointerException
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)
I installed this update using the update site. A colleague installed the update
by manually downloading and did not see this problem.
Glyn started with the M3 build + the prior equinox build.  The new build must 
be installed on top of the I20041201 build.  I will look into why we get a NPE 
If startup succeeded the runtime will be in an inconsistent state because the 
equinox update site does not include all the other updates that are included 
in the I20041201 build. (no excuse for the NPE though :)

I added a note to the download site to try and make it clear that you must 
start with the I20041201 build.
The NPE is caused because the state cache format has changed since last 
equinox build but the cache version number was not incremented.  I will update 
the cache version number.
Fixed in HEAD.</WithStack>
    <WithOutStack>Eclipse crashes immediately with a log:
!SESSION 2004-12-02 12:15:04.518 ----------------------------------------------
-
eclipse.buildId=I200411050810
java.version=1.4.2_06
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY System Bundle 0 0 2004-12-02 12:15:04.518
!MESSAGE FrameworkEvent.ERROR
!STACK 0
	... 17 more
Root exception:

!ENTRY org.eclipse.osgi 2004-12-02 12:15:04.558
!MESSAGE Startup error
!STACK 1
!SESSION Thu Dec 02 12:15:04 GMT 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 Dec 02, 2004 12:15:04.568
!MESSAGE Exception launching the Eclipse Platform:
!STACK

I installed this update using the update site. A colleague installed the update
by manually downloading and did not see this problem.
Glyn started with the M3 build + the prior equinox build.  The new build must 
be installed on top of the I20041201 build.  I will look into why we get a NPE 
If startup succeeded the runtime will be in an inconsistent state because the 
equinox update site does not include all the other updates that are included 
in the I20041201 build. (no excuse for the NPE though :)

I added a note to the download site to try and make it clear that you must 
start with the I20041201 build.
The NPE is caused because the state cache format has changed since last 
equinox build but the cache version number was not incremented.  I will update 
the cache version number.
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79998" />
    <CreationDate amount="2004-12-02 07:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ant view enhancement : description of target</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the Ant View of the GUI :
I propose to add, after the name of the target, the description (the content of
the 'description' attribute in the ant file) of the target. This text can be in
italic style.
If you select the target, the description and the dependancies are displayed 
in the status line of the Eclipse window.
no current plans
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>In the Ant View of the GUI :
I propose to add, after the name of the target, the description (the content of
the 'description' attribute in the ant file) of the target. This text can be in
italic style.
If you select the target, the description and the dependancies are displayed 
in the status line of the Eclipse window.
no current plans
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="79999" />
    <CreationDate amount="2004-12-02 07:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.UML2" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Update javadoc for StereotypeOperation::createExtension</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The throw clause doesn't match the code
This is fixed in build I200412021147.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>The throw clause doesn't match the code
This is fixed in build I200412021147.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="80000" />
    <CreationDate amount="2004-12-02 07:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0.1" />
    <rep_platform amount="Sun" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[projection] Nested code should not be unfold if not needed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. paste the code from comment 1</Line>
          <Line>2. make line 18 empty</Line>
          <Line>3. start typing, e.g. 'f'</Line>
          <Line>==&gt; Java editor shows completely wrong part and folding structure is confused</Line>
          <Line>*** Bug 104814 has been marked as a duplicate of this bug. ***</Line>
          <Line>I have a prototype ready that looks pretty promising. The heuristic is to not update the folding structure as long as the caret line has an error.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>having grindingly folded all not-needed parts of the code typing a single wrong letter unfolds all code 
again! this drives me nuts.
even code not affected by typing unfolds.
write a little class with, say, two methods. fold them and type something wrong just before the closing 
brake of the class ... et voila.
btw: independently from the above -- "fold all" in the context-menu may be a lot more helpfull then 
"unfold all"
Created attachment 16293
example code, demonstrating bug

had everything foldable in main() folded, inserted in line 18 fc.setTitle() ...
everything unfolds!
There's already a feature request for the "Fold All" command

Folding depends on the AST which is not very stable when the code has errors.
Hence you get caught especially when typing brackets.

Another example in your attached code is to fold as you described and then
simply go to line 18.

When you say this is based on the AST and it gets "fragile," are you shugging 
and saying you can't make it any better? One way to address this is to make 
folding NOT so dependent on the AST. Java is syntactially simple enough to 
permit a scanner to do a good job of guessing and folding, without requiring 
correct Java throughout. Since this is a Java source code editor, by definition 
the source file will sometimes not contain valid Java, and will sometimes have 
unmatched braces and other junk. That shouldn't destroy the folding of 
structure elements that aren't nearby.

*** Bug 101757 has been marked as a duplicate of this bug. ***
*** Bug 105559 has been marked as a duplicate of this bug. ***
anybody working on this? using 3.1 now and after a little typing litterally _everything_ folded 
below the line i'm typing in gets unfolded! thus folding is nearly completely useless.
&gt;anybody working on this?
Not currently but as you can see it's targeted for 3.2.
Will investigate during RC2 whether there's a low risk fix for this.
Sorry, too risky to touch at this point.
It is even worse:
1. paste the code from comment 1
2. make line 18 empty
3. start typing, e.g. 'f'
==&gt; Java editor shows completely wrong part and folding structure is confused
*** Bug 104814 has been marked as a duplicate of this bug. ***
I have a prototype ready that looks pretty promising. The heuristic is to not update the folding structure as long as the caret line has an error.

At this point the code needs further testing. I plan to release it in about a week or two.


Fixed in HEAD.
Available in builds &gt;= I20061010-0800.
verifying...
verified in I20061031-0656</WithStack>
    <WithOutStack>having grindingly folded all not-needed parts of the code typing a single wrong letter unfolds all code 
again! this drives me nuts.
even code not affected by typing unfolds.
write a little class with, say, two methods. fold them and type something wrong just before the closing 
brake of the class ... et voila.
btw: independently from the above -- "fold all" in the context-menu may be a lot more helpfull then 
"unfold all"
Created attachment 16293
example code, demonstrating bug

had everything foldable in main() folded, inserted in line 18 fc.setTitle() ...
everything unfolds!
There's already a feature request for the "Fold All" command

Folding depends on the AST which is not very stable when the code has errors.
Hence you get caught especially when typing brackets.

Another example in your attached code is to fold as you described and then
simply go to line 18.

When you say this is based on the AST and it gets "fragile," are you shugging 
and saying you can't make it any better? One way to address this is to make 
folding NOT so dependent on the AST. Java is syntactially simple enough to 
permit a scanner to do a good job of guessing and folding, without requiring 
correct Java throughout. Since this is a Java source code editor, by definition 
the source file will sometimes not contain valid Java, and will sometimes have 
unmatched braces and other junk. That shouldn't destroy the folding of 
structure elements that aren't nearby.

*** Bug 101757 has been marked as a duplicate of this bug. ***
*** Bug 105559 has been marked as a duplicate of this bug. ***
anybody working on this? using 3.1 now and after a little typing litterally _everything_ folded 
below the line i'm typing in gets unfolded! thus folding is nearly completely useless.
&gt;anybody working on this?
Not currently but as you can see it's targeted for 3.2.
Will investigate during RC2 whether there's a low risk fix for this.
Sorry, too risky to touch at this point.
It is even worse:
1. paste the code from comment 1
2. make line 18 empty
3. start typing, e.g. 'f'
==&gt; Java editor shows completely wrong part and folding structure is confused
*** Bug 104814 has been marked as a duplicate of this bug. ***
I have a prototype ready that looks pretty promising. The heuristic is to not update the folding structure as long as the caret line has an error.

At this point the code needs further testing. I plan to release it in about a week or two.


Fixed in HEAD.
Available in builds &gt;= I20061010-0800.
verifying...
verified in I20061031-0656</WithOutStack>
  </Bug>
</infozilla-output>

