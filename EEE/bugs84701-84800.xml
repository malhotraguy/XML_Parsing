<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="84701" />
    <CreationDate amount="2005-02-08 10:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>(Mon) When trying to import an HTTP access log file and error occurs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="6">
      <Stacktrace timestamp="1437341232342">
        <Exception>org.eclipse.hyades.logging.parsers.LogParserException</Exception>
        <Reason>IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="5">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232342">
        <Exception>org.eclipse.hyades.logging.core.SerializationException</Exception>
        <Reason>javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:544)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:399)</Frame>
          <Frame depth="2">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:349)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:304)</Frame>
          <Frame depth="4">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232342">
        <Exception>javax.xml.transform.TransformerException</Exception>
        <Reason>java.io.IOException: Stream closed
!STACK 0
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="5">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232342">
        <Exception>org.eclipse.hyades.logging.core.SerializationException</Exception>
        <Reason>javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:544)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:399)</Frame>
          <Frame depth="2">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:349)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:304)</Frame>
          <Frame depth="4">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232342">
        <Exception>org.eclipse.hyades.logging.parsers.LogParserException</Exception>
        <Reason>IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="5">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232342">
        <Exception>org.eclipse.hyades.logging.core.SerializationException</Exception>
        <Reason>javax.xml.transform.TransformerException: java.io.IOException: Stream closed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:544)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:399)</Frame>
          <Frame depth="2">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:349)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:304)</Frame>
          <Frame depth="4">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="3698" end="3741" />
        <code>+ System.currentTimeMillis() + ".adapter");</code>
      </source_code>
      <source_code type="assignment">
        <location start="3934" end="4011" />
        <code>File dirpath = new File((String)(toOSStringMethod.invoke(iPathObject,null)));</code>
      </source_code>
      <source_code type="assignment">
        <location start="4012" end="4070" />
        <code>newFile = File.createTempFile("GLA", ".adapter", dirpath);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The following error occurs when trying to import an HTTP access log file.

!MESSAGE IWAT0027E Error importing the specified log file.
!STACK 0
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Embedded Exception follows:
org.eclipse.hyades.logging.core.SerializationException: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:544)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:399)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:349)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:304)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
!SUBENTRY 1 org.eclipse.hyades.log.ui 4 0 Feb 08, 2005 10:15:57.00
!MESSAGE IWAT0373E The adapter configuration file D:\hyades\testing\test0208
\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
!STACK 0
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Embedded Exception follows:
org.eclipse.hyades.logging.core.SerializationException: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:544)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:399)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:349)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:304)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
!SUBENTRY 1 org.eclipse.hyades.log.ui 4 0 Feb 08, 2005 10:15:57.00
!MESSAGE 
!STACK 0
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Embedded Exception follows:
org.eclipse.hyades.logging.core.SerializationException: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:544)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:399)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:349)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:304)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Created attachment 17753
HTTP access log file
*** Bug 84754 has been marked as a duplicate of this bug. ***
I believe these exceptions are caused by 
org.eclipse.hyades.logging.core.XmlUtility$JAXPXMLSerializer.serialize not 
being synchronized.  JAXPXMLSerializer.serialize uses a static transformer 
object so every log import job/thread uses the same transformer object to 
serialize the adapter configuration DOM to a file and sometimes the object gets 
corrupted.  This method should either be serialized or should use a new 
transformer object for each call.

I tested the fix of creating a new transformer object on every call and it 
worked.
(In reply to comment #3)

This fix does not resolve this defect.  However, the XmlUtility should be made 
thread safe (see defect #84826).
I found a problem in StaticParserWrapper.getNewConfigFile() where it creates 
the new adapter file.  The following code is used to create a temporary file 
name:

newFile = new File(((String)(toOSStringMethod.invoke(iPathObject,null))),"GLA" 
+ System.currentTimeMillis() + ".adapter");

This is not threadsafe because two thread could be calling the same code within 
the same millisecond and so could generate the same file name.

I will replace that line with the following:

File dirpath = new File((String)(toOSStringMethod.invoke(iPathObject,null)));
newFile = File.createTempFile("GLA", ".adapter", dirpath);

File.createTempFile guarantees that the file name will be unique when running 
within the same VM.

However, even with the above fix I experienced exceptions as documented in this 
defect.  I believe the fix for defect #84826 is still required so I'll make 
this defect dependent on 84826.
Committed to fix to Hyades and TPTP head CVS
verified in build 3.3 20050328_1223</WithStack>
    <WithOutStack>The following error occurs when trying to import an HTTP access log file.

!MESSAGE IWAT0027E Error importing the specified log file.
!STACK 0
Embedded Exception follows:
!SUBENTRY 1 org.eclipse.hyades.log.ui 4 0 Feb 08, 2005 10:15:57.00
!MESSAGE IWAT0373E The adapter configuration file D:\hyades\testing\test0208
\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
Embedded Exception follows:
org.eclipse.hyades.logging.core.SerializationException: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:544)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:399)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:349)
	at org.eclipse.hyades.logging.core.XmlUtility.serialize
(XmlUtility.java:304)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
!SUBENTRY 1 org.eclipse.hyades.log.ui 4 0 Feb 08, 2005 10:15:57.00
!MESSAGE 
!STACK 0
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\hyades\testing\test0208\eclipse\tests\workspace1
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107875756172.a
dapter cannot be saved due to the following reason: 
javax.xml.transform.TransformerException: java.io.IOException: Stream closed
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
	at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Embedded Exception follows:

Created attachment 17753
HTTP access log file
*** Bug 84754 has been marked as a duplicate of this bug. ***
I believe these exceptions are caused by 
org.eclipse.hyades.logging.core.XmlUtility$JAXPXMLSerializer.serialize not 
being synchronized.  JAXPXMLSerializer.serialize uses a static transformer 
object so every log import job/thread uses the same transformer object to 
serialize the adapter configuration DOM to a file and sometimes the object gets 
corrupted.  This method should either be serialized or should use a new 
transformer object for each call.

I tested the fix of creating a new transformer object on every call and it 
worked.
(In reply to comment #3)

This fix does not resolve this defect.  However, the XmlUtility should be made 
thread safe (see defect #84826).
I found a problem in StaticParserWrapper.getNewConfigFile() where it creates 
the new adapter file.  The following code is used to create a temporary file 
name:

newFile = new File(((String)(toOSStringMethod.invoke(iPathObject,null))),"GLA" 
+ System.currentTimeMillis() + ".adapter");

This is not threadsafe because two thread could be calling the same code within 
the same millisecond and so could generate the same file name.

I will replace that line with the following:

File dirpath = new File((String)(toOSStringMethod.invoke(iPathObject,null)));
newFile = File.createTempFile("GLA", ".adapter", dirpath);

File.createTempFile guarantees that the file name will be unique when running 
within the same VM.

However, even with the above fix I experienced exceptions as documented in this 
defect.  I believe the fix for defect #84826 is still required so I'll make 
this defect dependent on 84826.
Committed to fix to Hyades and TPTP head CVS
verified in build 3.3 20050328_1223</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84702" />
    <CreationDate amount="2005-02-08 10:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DynamicUI][RCP]AbstractUIPlugin.stop missing imageRegistry.dispose()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The image registry created by an abstract ui plugin should be disposed if the 
plugin is stopped.  Waiting for the Display to be disposed is not soon enough 
in a dynamic environment.
Fix in HEAD.  Low hanging fruit are the tastiest!
Verified by code inspection in I20070918-1300</WithStack>
    <WithOutStack>The image registry created by an abstract ui plugin should be disposed if the 
plugin is stopped.  Waiting for the Display to be disposed is not soon enough 
in a dynamic environment.
Fix in HEAD.  Low hanging fruit are the tastiest!
Verified by code inspection in I20070918-1300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84703" />
    <CreationDate amount="2005-02-08 11:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[C++ getReferences] qualified name segments should use parent's property</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="singlecomment">
        <location start="499" end="544" />
        <code>// example code taken from: C++ spec 3.8-5:</code>
      </source_code>
      <source_code type="functioncall">
        <location start="555" end="570" />
        <code>void mutate();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="575" end="603" />
        <code>struct D2 : B { void f(); };</code>
      </source_code>
      <source_code type="functiondef">
        <location start="605" end="733" />
        <code>void B::mutate() { // this shouldn't be a reference, but is found when 
getReferences is done on this IASTName
	new (this) D2;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="746" end="776" />
        <code>void* p = malloc(sizeof(D2));</code>
      </source_code>
      <source_code type="assignment">
        <location start="777" end="797" />
        <code>B* pb = new (p) D1;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>CPPASTQualifiedName#toCharArray returns the entire qualified name as a char[], 
but now getReferences uses a char[] comparison to determine if the IASTNames 
are the same or not.

getReferences on IASTName: mutate below seems to have different behaviour 
relative to how the names are resolved (starting with qualified name definition 
or not).  Regardless of how they are resolved the behaviour is incorrect now 
since CPPASTQualifiedName#toCharArray returns the qualified name of the 
definition.

// example code taken from: C++ spec 3.8-5:
struct B {
	void mutate();
};

struct D2 : B { void f(); };

void B::mutate() { // this shouldn't be a reference, but is found when 
getReferences is done on this IASTName
	new (this) D2;
}

void g() {
	void* p = malloc(sizeof(D2));
	B* pb = new (p) D1;
	pb-&gt;mutate(); // this reference is not picked up
}
qualified names should return the full name and not just the last segment.
When considering a segment of a qualified name for a reference, use the property
of the qualified name instead (cause of the incorrect reporting of the mutate
definition as a referece).

The second reference is correctly being picked up for me, could have been fixed
indirectly.

Note however, using "B * bp;" instead of "B* pb = new (p) D1;" doesn't work
because of bug 85049

fixed</WithStack>
    <WithOutStack>CPPASTQualifiedName#toCharArray returns the entire qualified name as a char[], 
but now getReferences uses a char[] comparison to determine if the IASTNames 
are the same or not.

getReferences on IASTName: mutate below seems to have different behaviour 
relative to how the names are resolved (starting with qualified name definition 
or not).  Regardless of how they are resolved the behaviour is incorrect now 
since CPPASTQualifiedName#toCharArray returns the qualified name of the 
definition.

// example code taken from: C++ spec 3.8-5:
struct B {
	void mutate();
};

struct D2 : B { void f(); };

void B::mutate() { // this shouldn't be a reference, but is found when 
getReferences is done on this IASTName
	new (this) D2;
}

void g() {
	void* p = malloc(sizeof(D2));
	B* pb = new (p) D1;
	pb-&gt;mutate(); // this reference is not picked up
}
qualified names should return the full name and not just the last segment.
When considering a segment of a qualified name for a reference, use the property
of the qualified name instead (cause of the incorrect reporting of the mutate
definition as a referece).

The second reference is correctly being picked up for me, could have been fixed
indirectly.

Note however, using "B * bp;" instead of "B* pb = new (p) D1;" doesn't work
because of bug 85049

fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84704" />
    <CreationDate amount="2005-02-08 11:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.0.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Import/Export] Export/import local history with project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Would like a way to export a project from the workspace, including it's local
history (from metadata). Of course, would also like to import a previously
exported project into a different workspace with the local history intact.

Basically, I'd like to enhance the current freedom of moving projects between
workspaces to avoid losing all their local history in the process.

Note that the export/import of local history is mentioned in the original
description of Bug 3101, but then seems not to be addressed further.
I'm not sure how much we might have to export to make the local history 
usable. DJ?
This is difficult because the local history obviously is stored as part of the
metadata area and not with the project itself. New API would be required to do this.

On the subject of metadata, there is also an outstanding request to export
markers with projects. (bug 21407)

Perhaps a separate tool (part of the Core tools?) could be written to address
these issues. 

Either way, we don't have the cycles to work on this in the near future.
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithStack>
    <WithOutStack>Would like a way to export a project from the workspace, including it's local
history (from metadata). Of course, would also like to import a previously
exported project into a different workspace with the local history intact.

Basically, I'd like to enhance the current freedom of moving projects between
workspaces to avoid losing all their local history in the process.

Note that the export/import of local history is mentioned in the original
description of Bug 3101, but then seems not to be addressed further.
I'm not sure how much we might have to export to make the local history 
usable. DJ?
This is difficult because the local history obviously is stored as part of the
metadata area and not with the project itself. New API would be required to do this.

On the subject of metadata, there is also an outstanding request to export
markers with projects. (bug 21407)

Perhaps a separate tool (part of the Core tools?) could be written to address
these issues. 

Either way, we don't have the cycles to work on this in the near future.
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84705" />
    <CreationDate amount="2005-02-08 11:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[C++ Bindings] operator definition has function call with invalid ProblemBinding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="singlecomment">
        <location start="175" end="219" />
        <code>// example code taken from C++ spec 3.8-7:</code>
      </source_code>
      <source_code type="functioncall">
        <location start="230" end="240" />
        <code>void f();</code>
      </source_code>
      <source_code type="assignment">
        <location start="241" end="273" />
        <code>const C&amp; operator=( const C&amp; );</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="319" end="429" />
        <code>if ( this != &amp;other ) {
		this-&gt;~C();
		new (this) C(other);
		f(); //welldefined but has a ProblemBinding
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The IASTName: f for the IASTFunctionCallExpression inside the definition of 
operator= has a ProblemBinding but should have been resolved to the IASTName: f 
inside struct C.

// example code taken from C++ spec 3.8-7:
struct C {
	void f();
	const C&amp; operator=( const C&amp; );
};

const C&amp; C::operator=( const C&amp; other)
{
	if ( this != &amp;other ) {
		this-&gt;~C();
		new (this) C(other);
		f(); //welldefined but has a ProblemBinding
	}
	return *this;
}
fixed</WithStack>
    <WithOutStack>The IASTName: f for the IASTFunctionCallExpression inside the definition of 
operator= has a ProblemBinding but should have been resolved to the IASTName: f 
inside struct C.

// example code taken from C++ spec 3.8-7:
struct C {
	void f();
	const C&amp; operator=( const C&amp; );
};

const C&amp; C::operator=( const C&amp; other)
{
	if ( this != &amp;other ) {
		this-&gt;~C();
		new (this) C(other);
		f(); //welldefined but has a ProblemBinding
	}
	return *this;
}
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84706" />
    <CreationDate amount="2005-02-08 11:15:00 -0500" />
    <DupId amount="107799" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[RCP] IPreferenceConstants.SHOW_MULTIPLE_EDITOR_TABS should be API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Could you add what plugin reads that preference? It's not org.eclipse.ui it seems?
Reassigning bugs in component areas that are changing ownership.
IPreferenceConstants seems to be gone. But there is a new IWorkbenchPreferenceConstants#SHOW_MULTIPLE_EDITOR_TABS which is the API requested here.


*** This bug has been marked as a duplicate of bug 107799 ***</WithStack>
    <WithOutStack>Could you add what plugin reads that preference? It's not org.eclipse.ui it seems?
Reassigning bugs in component areas that are changing ownership.
IPreferenceConstants seems to be gone. But there is a new IWorkbenchPreferenceConstants#SHOW_MULTIPLE_EDITOR_TABS which is the API requested here.


*** This bug has been marked as a duplicate of bug 107799 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84707" />
    <CreationDate amount="2005-02-08 11:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] search doesn't match with spaces.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="699" end="778" />
        <code>for (int i = 0;  i &lt; words.length; i++){
	if( match(words[i]))
		return true;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We now search based on word rather than whole phrase for the preference dialog.

But that has broken the case where the word that you type in the search dialog
contains a space. For instance: "code tem" doesn't match "Code Templates".
Fix is to add code to FilteredPreferenceDialog#createTreeViewer. 

The first block of code already exists and checks for a match by splitting the
search widget's text field based on space. 

The second block of code is new and basically says if we had a phrase with a
space in it, then try and do a match on the whole phrase. (which would match,
for instance, "code templates")

------------------

String[] words = node.getLabelText().split("\\W"); //$NON-NLS-1$
for (int i = 0;  i &lt; words.length; i++){
	if( match(words[i]))
		return true;
}
-&gt; // if the text contained spaces, we already tried matching on each individual
-&gt; // word but now try and match on the whole phrase.
-&gt; if (words.length &gt; 1 &amp;&amp; match(node.getLabelText())) 
-&gt; 	return true;

----------------

Re-assigning to Tod for review/release.
*** Bug 85513 has been marked as a duplicate of this bug. ***
*** Bug 85617 has been marked as a duplicate of this bug. ***
Fixed in build &gt;20050222
Verified in 20050330</WithStack>
    <WithOutStack>We now search based on word rather than whole phrase for the preference dialog.

But that has broken the case where the word that you type in the search dialog
contains a space. For instance: "code tem" doesn't match "Code Templates".
Fix is to add code to FilteredPreferenceDialog#createTreeViewer. 

The first block of code already exists and checks for a match by splitting the
search widget's text field based on space. 

The second block of code is new and basically says if we had a phrase with a
space in it, then try and do a match on the whole phrase. (which would match,
for instance, "code templates")

------------------

String[] words = node.getLabelText().split("\\W"); //$NON-NLS-1$
for (int i = 0;  i &lt; words.length; i++){
	if( match(words[i]))
		return true;
}
-&gt; // if the text contained spaces, we already tried matching on each individual
-&gt; // word but now try and match on the whole phrase.
-&gt; if (words.length &gt; 1 &amp;&amp; match(node.getLabelText())) 
-&gt; 	return true;

----------------

Re-assigning to Tod for review/release.
*** Bug 85513 has been marked as a duplicate of this bug. ***
*** Bug 85617 has been marked as a duplicate of this bug. ***
Fixed in build &gt;20050222
Verified in 20050330</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84708" />
    <CreationDate amount="2005-02-08 11:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>[perf] Enable Transactions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Currently VE performs many actions that needs to be done once in a
transaction...e.g., VE invalidates AWT components to get a new figure when a
property has changed.... but as we come up and set up many properties, we need
to invalidate/get Figure once.

There must be a generic manner to encompas/batch operations in a single
transaction and have before/after mechanism to spawn final runabbles like
The requirement for transactions from an API spec are:

1 - Have a way of introducing units of work to the system.  This could include 
the "loading model" or "reloading from source"

2 - Ability to delay a runnable to take place after another has completed.  
This could be "do this runnable after loading has finished".  If the unit of 
work isn't in progress the work can either be done immediately or else 
scheduled to be run after the next time the unit of work occurs

3 - Ability to ask for 2) to occur based on a given key.  Examples of this are 
the visual validate/invalidate chain where lots of calls are made by atomic 
code but only one is required.  This collapsing into a single runnable could 
be per BeanProxy, it could be per EditPart
Joe, is this one complete/released
Need to finish up with SWT transactions
The ModelChangeController has the support for transactions.  This is being 
used by JFC and SWT both successfully to reduce unnecessary things like 
repeated invalidate() requests on startup/model changes and also to give more 
control over when target VM SWT images are fetched.
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>Currently VE performs many actions that needs to be done once in a
transaction...e.g., VE invalidates AWT components to get a new figure when a
property has changed.... but as we come up and set up many properties, we need
to invalidate/get Figure once.

There must be a generic manner to encompas/batch operations in a single
transaction and have before/after mechanism to spawn final runabbles like
The requirement for transactions from an API spec are:

1 - Have a way of introducing units of work to the system.  This could include 
the "loading model" or "reloading from source"

2 - Ability to delay a runnable to take place after another has completed.  
This could be "do this runnable after loading has finished".  If the unit of 
work isn't in progress the work can either be done immediately or else 
scheduled to be run after the next time the unit of work occurs

3 - Ability to ask for 2) to occur based on a given key.  Examples of this are 
the visual validate/invalidate chain where lots of calls are made by atomic 
code but only one is required.  This collapsing into a single runnable could 
be per BeanProxy, it could be per EditPart
Joe, is this one complete/released
Need to finish up with SWT transactions
The ModelChangeController has the support for transactions.  This is being 
used by JFC and SWT both successfully to reduce unnecessary things like 
repeated invalidate() requests on startup/model changes and also to give more 
control over when target VM SWT images are fetched.
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84709" />
    <CreationDate amount="2005-02-08 11:25:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JSP editor leads to NPE in jface DeviceResourceManager.allocate()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using WTP 1.0 M2 on Eclipse I20050202, after opening the JSP editor on some .jsp
file, I get funny images in the vertical ruler on the left hand side of the
editor, and I get NPEs in the Error Log in
org.eclipse.jface.resource.DeviceResourceManager.allocate(). I first filed this
as bug 83711 for JFace, where it had been said that probably a null image
descriptor had been registered.
I suspect you are right. (and we did "fix" a place we were 
intentially using a non-existent image to "null out" another 
image). 

If you see in more recent builds, will you please re-open?
Thanks very much. 

I can verify that it works with Eclipse 3.1, WTP 0.7 RC1. 
moving verified bugs to closed.</WithStack>
    <WithOutStack>Using WTP 1.0 M2 on Eclipse I20050202, after opening the JSP editor on some .jsp
file, I get funny images in the vertical ruler on the left hand side of the
editor, and I get NPEs in the Error Log in
org.eclipse.jface.resource.DeviceResourceManager.allocate(). I first filed this
as bug 83711 for JFace, where it had been said that probably a null image
descriptor had been registered.
I suspect you are right. (and we did "fix" a place we were 
intentially using a non-existent image to "null out" another 
image). 

If you see in more recent builds, will you please re-open?
Thanks very much. 

I can verify that it works with Eclipse 3.1, WTP 0.7 RC1. 
moving verified bugs to closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84710" />
    <CreationDate amount="2005-02-08 11:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CPPImplicitMethod] doesn't have a proper implicitName</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="singlecomment">
        <location start="234" end="273" />
        <code>// example taken from C++ spec 3.8-8:</code>
      </source_code>
      <source_code type="class">
        <location start="273" end="332" />
        <code>class T { 
	T() {}; // should work with/without this here
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="345" end="351" />
        <code>~B();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The IASTName: T used to create a new object has a proper binding to the 
CPPImplicitMethod but it is not returned as a reference to the constructor 
because the CPPImplicitMethod's toCharArray() returns a char[0] (not set 
properly).

// example taken from C++ spec 3.8-8:
class T { 
	T() {}; // should work with/without this here
};
struct B {
	~B();
};
void h() {
	B b;
	new (&amp;b) T; // T not found as reference since the binding's name is ""
}
fixed</WithStack>
    <WithOutStack>The IASTName: T used to create a new object has a proper binding to the 
CPPImplicitMethod but it is not returned as a reference to the constructor 
because the CPPImplicitMethod's toCharArray() returns a char[0] (not set 
properly).

// example taken from C++ spec 3.8-8:
class T { 
	T() {}; // should work with/without this here
};
struct B {
	~B();
};
void h() {
	B b;
	new (&amp;b) T; // T not found as reference since the binding's name is ""
}
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84711" />
    <CreationDate amount="2005-02-08 11:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[WorkbenchParts] Workbench layout reset on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341232363">
        <Exception>org.eclipse.core.runtime.CoreException</Exception>
        <Reason>The classfile is not on the classpath</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:622)</Frame>
          <Frame depth="1">org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2284)</Frame>
          <Frame depth="2">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:344)</Frame>
          <Frame depth="3">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:289)</Frame>
          <Frame depth="4">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="6">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2026)</Frame>
          <Frame depth="8">org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2302)</Frame>
          <Frame depth="9">org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2329)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:821)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:900)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:884)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:1109)</Frame>
          <Frame depth="14">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:1079)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1071)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:1069)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1487)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:1478)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:329)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:126)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:266)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.PartStack.add(PartStack.java:384)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)</Frame>
          <Frame depth="35">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)</Frame>
          <Frame depth="44">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)</Frame>
          <Frame depth="48">org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Workbench.init(Workbench.java:928)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="52">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="54">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="55">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="56">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="57">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="58">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="60">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="61">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232363">
        <Exception>org.eclipse.jface.util.Assert$AssertionFailedException</Exception>
        <Reason>Assertion failed:</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.util.Assert.isTrue(Assert.java:180)</Frame>
          <Frame depth="1">org.eclipse.jface.util.Assert.isTrue(Assert.java:165)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.getTab(PresentablePartFolder.java:376)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:275)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.PartStack.add(PartStack.java:384)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)</Frame>
          <Frame depth="27">org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.init(Workbench.java:928)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="31">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="33">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="38">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="39">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="40">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. open a bunch of .class files from the project's JRE container</Line>
          <Line>2. make sure one is active</Line>
          <Line>3. close eclipse, then delete the JRE from the .classpath file in the project</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build i0208

When starting this build, I lost my workbench layout. Here is my log file.

Install location:
    file:/c:/eclipse/dev/i0208/eclipse/
Configuration file:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/config.ini loaded
Configuration location:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/
Configuration file:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/config.ini loaded
Framework located:
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/
Loading framework classpath from:
   
file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipse.properties
Framework classpath:
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
   
file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
Splash location:
    c:\eclipse\dev\i0208\eclipse\plugins\org.eclipse.platform_3.1.0\splash.bmp
runCommand:
   
&lt;C:\eclipse\dev\i0208\eclipse\eclipse.exe&gt;&lt;-name&gt;&lt;Eclipse&gt;&lt;-showsplash&gt;&lt;600&gt;&lt;c:\eclipse\dev\i0208\eclipse\plugins\org.eclipse.platform_3.1.0\splas
h.bmp&gt;
Debug options:
    file:/c:/eclipse/dev/i0208/eclipse/.options not found

osgi&gt; Time to load bundles: 200
Starting application: 6930
!SESSION 2005-02-08 11:39:41.171 -----------------------------------------------
eclipse.buildId=I20050208-0800
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040915 (JIT
enabled)
J9VM - 20040914_1123_lHdSMR
JIT  - r7_level20040912_1800
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -data
\eclipse\target\head\plugins\ -showlocation -consoleLog -console

!ENTRY org.eclipse.ui 4 4 2005-02-08 11:39:41.181
!MESSAGE Exception creating editor: The classfile is not on the classpath
Exception creating editor: The classfile is not on the classpath
Reason:

!ENTRY org.eclipse.ui 4 4 2005-02-08 11:39:41.181
!MESSAGE Exception creating editor: The classfile is not on the classpath
!STACK 1
org.eclipse.ui.PartInitException[995]: org.eclipse.core.runtime.CoreException:
The classfile is not on the classpath
        at
org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:622)
        at
org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2284)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:344)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:289)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2026)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2302)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2329)
        at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:821)
        at
org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:900)
        at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:884)
        at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:1109)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at
org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:1079)
        at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1071)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:1069)
        at
org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1487)
        at
org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:1478)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:329)
        at
org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:126)
        at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:266)
        at
org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
        at
org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)
        at
org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)
        at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)
        at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)
        at org.eclipse.ui.internal.PartStack.add(PartStack.java:384)
        at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)
        at
org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
        at
org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)
        at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)
        at
org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)
        at
org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)
        at
org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)
        at
org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)
        at org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)
        at org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)
        at
org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)
        at
org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)
        at org.eclipse.ui.internal.Workbench.init(Workbench.java:928)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
        at org.eclipse.core.launcher.Main.run(Main.java:817)
        at org.eclipse.core.launcher.Main.main(Main.java:801)
!SUBENTRY 1 org.eclipse.jdt.ui 4 995 2005-02-08 11:39:41.221
!MESSAGE The classfile is not on the classpath
!STACK 1
org.eclipse.core.runtime.CoreException: The classfile is not on the classpath
        at
org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:622)
        at
org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2284)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:344)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:289)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2026)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2302)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2329)
        at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:821)
        at
org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:900)
        at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:884)
        at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:1109)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at
org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:1079)
        at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1071)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:1069)
        at
org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1487)
        at
org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:1478)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:329)
        at
org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:126)
        at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:266)
        at
org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
        at
org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)
        at
org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)
        at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)
        at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)
        at org.eclipse.ui.internal.PartStack.add(PartStack.java:384)
        at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)
        at
org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
        at
org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)
        at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)
        at
org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)
        at
org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)
        at
org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)
        at
org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)
        at org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)
        at org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)
        at
org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)
        at
org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)
        at org.eclipse.ui.internal.Workbench.init(Workbench.java:928)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
        at org.eclipse.core.launcher.Main.run(Main.java:817)
        at org.eclipse.core.launcher.Main.main(Main.java:801)
!SUBENTRY 2 org.eclipse.jdt.ui 4 995 2005-02-08 11:39:41.221
!MESSAGE The classfile is not on the classpath
Exception creating editor: The classfile is not on the classpath

!ENTRY org.eclipse.ui.workbench 4 2 2005-02-08 11:39:41.261
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0
org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed:
        at org.eclipse.jface.util.Assert.isTrue(Assert.java:180)
        at org.eclipse.jface.util.Assert.isTrue(Assert.java:165)
        at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.getTab(PresentablePartFolder.java:376)
        at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:275)
        at
org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
        at
org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)
        at
org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)
        at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)
        at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)
        at org.eclipse.ui.internal.PartStack.add(PartStack.java:384)
        at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)
        at
org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
        at
org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)
        at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)
        at
org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)
        at
org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)
        at
org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)
        at
org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)
        at org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)
        at org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)
        at
org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)
        at
org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)
        at org.eclipse.ui.internal.Workbench.init(Workbench.java:928)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
        at org.eclipse.core.launcher.Main.run(Main.java:817)
        at org.eclipse.core.launcher.Main.main(Main.java:801)
It seems that the java editor is having issues but that shouldn't bring us down.
*** Bug 85861 has been marked as a duplicate of this bug. ***
Created attachment 18669
sample workspace that demonstrates the bug

I can reproduce this consistently with this workspace. I created it by:

1. open a bunch of .class files from the project's JRE container
2. make sure one is active
3. close eclipse, then delete the JRE from the .classpath file in the project

Starting Eclipse on the resulting workspace causes the problem every time.
fixed by the patch to 87468
Verified I20050401-1205.</WithStack>
    <WithOutStack>build i0208

When starting this build, I lost my workbench layout. Here is my log file.

Install location:
    file:/c:/eclipse/dev/i0208/eclipse/
Configuration file:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/config.ini loaded
Configuration location:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/
Configuration file:
    file:/c:/eclipse/dev/i0208/eclipse/configuration/config.ini loaded
Framework located:
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/
Loading framework classpath from:
   
file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipse.properties
Framework classpath:
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
    file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
   
file:/c:/eclipse/dev/i0208/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
Splash location:
    c:\eclipse\dev\i0208\eclipse\plugins\org.eclipse.platform_3.1.0\splash.bmp
runCommand:
   
&lt;C:\eclipse\dev\i0208\eclipse\eclipse.exe&gt;&lt;-name&gt;&lt;Eclipse&gt;&lt;-showsplash&gt;&lt;600&gt;&lt;c:\eclipse\dev\i0208\eclipse\plugins\org.eclipse.platform_3.1.0\splas
h.bmp&gt;
Debug options:
    file:/c:/eclipse/dev/i0208/eclipse/.options not found

osgi&gt; Time to load bundles: 200
Starting application: 6930
!SESSION 2005-02-08 11:39:41.171 -----------------------------------------------
eclipse.buildId=I20050208-0800
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040915 (JIT
enabled)
J9VM - 20040914_1123_lHdSMR
JIT  - r7_level20040912_1800
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -data
\eclipse\target\head\plugins\ -showlocation -consoleLog -console

!ENTRY org.eclipse.ui 4 4 2005-02-08 11:39:41.181
!MESSAGE Exception creating editor: The classfile is not on the classpath
Exception creating editor: The classfile is not on the classpath
Reason:

!ENTRY org.eclipse.ui 4 4 2005-02-08 11:39:41.181
!MESSAGE Exception creating editor: The classfile is not on the classpath
!STACK 1
org.eclipse.ui.PartInitException[995]: org.eclipse.core.runtime.CoreException:
The classfile is not on the classpath
        at
org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:622)
        at
org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2284)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:344)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:289)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2026)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2302)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2329)
        at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:821)
        at
org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:900)
        at org.eclipse.ui.internal.EditorManager.access$12(EditorManager.java:884)
        at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:1109)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at
org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:1079)
        at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:1071)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:1069)
        at
org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1487)
        at
org.eclipse.ui.internal.EditorManager$Editor.getPart(EditorManager.java:1478)
        at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:329)
        at
org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:126)
        at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.select(PresentablePartFolder.java:266)
        at
org.eclipse.ui.internal.presentations.newapi.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
        at
org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:381)
        at
org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1051)
        at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)
        at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)
        at org.eclipse.ui.internal.PartStack.add(PartStack.java:384)
        at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)
        at
org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
        at
org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)
        at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at
org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)
        at
org.eclipse.ui.internal.EditorManager.restoreEditorState(EditorManager.java:1748)
        at
org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1023)
        at
org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2535)
        at
org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1711)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1463)
        at org.eclipse.ui.internal.Workbench.access$11(Workbench.java:1419)
        at org.eclipse.ui.internal.Workbench$16.run(Workbench.java:1322)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1256)
        at
org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:171)
        at
org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:710)
        at org.eclipse.ui.internal.Workbench.init(Workbench.java:928)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1564)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
        at org.eclipse.core.launcher.Main.run(Main.java:817)
        at org.eclipse.core.launcher.Main.main(Main.java:801)
!SUBENTRY 1 org.eclipse.jdt.ui 4 995 2005-02-08 11:39:41.221
!MESSAGE The classfile is not on the classpath
!STACK 1
!SUBENTRY 2 org.eclipse.jdt.ui 4 995 2005-02-08 11:39:41.221
!MESSAGE The classfile is not on the classpath
Exception creating editor: The classfile is not on the classpath

!ENTRY org.eclipse.ui.workbench 4 2 2005-02-08 11:39:41.261
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0

It seems that the java editor is having issues but that shouldn't bring us down.
*** Bug 85861 has been marked as a duplicate of this bug. ***
Created attachment 18669
sample workspace that demonstrates the bug

I can reproduce this consistently with this workspace. I created it by:

1. open a bunch of .class files from the project's JRE container
2. make sure one is active
3. close eclipse, then delete the JRE from the .classpath file in the project

Starting Eclipse on the resulting workspace causes the problem every time.
fixed by the patch to 87468
Verified I20050401-1205.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84712" />
    <CreationDate amount="2005-02-08 11:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[GlobalActions] [RCP] Retargetable actions should register themselves with partservice</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>They should also do the proper cleanup in the dispose method.
Currently this is done in the action factory.  It would be better to do this in
RetargetAction itself.

Reassigning bugs in component areas that are changing ownership.</WithStack>
    <WithOutStack>They should also do the proper cleanup in the dispose method.
Currently this is done in the action factory.  It would be better to do this in
RetargetAction itself.

Reassigning bugs in component areas that are changing ownership.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84713" />
    <CreationDate amount="2005-02-08 11:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Import/Export] Project import searches all files takes too long</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- now choose a folder for another (large) workspace.</Line>
          <Line>- note that all files in that folder are searched to find projects.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: I20050202-0800

- File &gt; Import &gt; Existing Project into Workspace &gt; Browse

- now choose a folder for another (large) workspace.
- note that all files in that folder are searched to find projects.

- but since this is the root for a number of projects it would seem that it
should only search at the top level for projects and not go deep into the file
system


*** This bug has been marked as a duplicate of 81760 ***
Actually this is not a duplicate of bug 81760, my point is that once you do
choose a project it takes too long and should not have to search all files.
*** Bug 81738 has been marked as a duplicate of this bug. ***
(fix attached to bug 80835)
Fix released to HEAD.
Verified on 20040217-0100</WithStack>
    <WithOutStack>Build id: I20050202-0800

- File &gt; Import &gt; Existing Project into Workspace &gt; Browse

- now choose a folder for another (large) workspace.
- note that all files in that folder are searched to find projects.

- but since this is the root for a number of projects it would seem that it
should only search at the top level for projects and not go deep into the file
system


*** This bug has been marked as a duplicate of 81760 ***
Actually this is not a duplicate of bug 81760, my point is that once you do
choose a project it takes too long and should not have to search all files.
*** Bug 81738 has been marked as a duplicate of this bug. ***
(fix attached to bug 80835)
Fix released to HEAD.
Verified on 20040217-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84714" />
    <CreationDate amount="2005-02-08 12:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[About] Layout of About Eclipse Platform Features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In About Eclipse Platform Features dialog details panel shold have fized size.
Right now it is proportional and because of this there are lot of unused space
when dialog is resized.
Fixed.
Verified in I20050217-1602.</WithStack>
    <WithOutStack>In About Eclipse Platform Features dialog details panel shold have fized size.
Right now it is proportional and because of this there are lot of unused space
when dialog is resized.
Fixed.
Verified in I20050217-1602.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84715" />
    <CreationDate amount="2005-02-08 12:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS UI] CVS Commit dialog should store single lines in comment history</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20050202-0800:

The CVS commit dialog currently stores the entire content of the text field in 
the comment history. Often, this is not desired. We would rather want to have 
each line as a separate history entry.
Committers could then simply choose all applicable comments from the history 
one after the other, and the comments would automatically be appended to the 
existing ones.
This would allow for more reuse of commit comments.
What you say is true only because you use each line to describe a separate 
aspect of the commit. It is conceivable that others may use multiple lines. 

What you are asking for is related the concept of an activity (or Change Set) 
to which you can assign one or more lines of text. Then, when committing, you 
could pick which change sets where includes in the commit and have the comment 
built from that. Work was started in 3.1 on change sets for CVS but we did not 
have time to pursue it to the level you are requesting.</WithStack>
    <WithOutStack>I20050202-0800:

The CVS commit dialog currently stores the entire content of the text field in 
the comment history. Often, this is not desired. We would rather want to have 
each line as a separate history entry.
Committers could then simply choose all applicable comments from the history 
one after the other, and the comments would automatically be appended to the 
existing ones.
This would allow for more reuse of commit comments.
What you say is true only because you use each line to describe a separate 
aspect of the commit. It is conceivable that others may use multiple lines. 

What you are asking for is related the concept of an activity (or Change Set) 
to which you can assign one or more lines of text. Then, when committing, you 
could pick which change sets where includes in the commit and have the comment 
built from that. Work was started in 3.1 on change sets for CVS but we did not 
have time to pursue it to the level you are requesting.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84716" />
    <CreationDate amount="2005-02-08 12:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Provide an easier way to add JUnit tests [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I right clicked on my class, selected New &gt; Junit Test Case, and went through
the wizard. Later, I added a new method to my class. I want to do something as
easy as select the method name or the class in the editor or the package
explorer, right click, and select Source &gt; Generate new Junit test to make it
generate stub tests. If a method is selected, it would generate a test for that
method, otherwise it would show me a list of all the methods that don't already
have tests and let me generate several at once.

If it matters, after running the wizard I moved my test into a different source
directory (as recommended by the doc). I'm running 3.1M4.
Your focus for 3.1 is J2SE 5.0. Has very likely to wait until &gt; 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I right clicked on my class, selected New &gt; Junit Test Case, and went through
the wizard. Later, I added a new method to my class. I want to do something as
easy as select the method name or the class in the editor or the package
explorer, right click, and select Source &gt; Generate new Junit test to make it
generate stub tests. If a method is selected, it would generate a test for that
method, otherwise it would show me a list of all the methods that don't already
have tests and let me generate several at once.

If it matters, after running the wizard I moved my test into a different source
directory (as recommended by the doc). I'm running 3.1M4.
Your focus for 3.1 is J2SE 5.0. Has very likely to wait until &gt; 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84717" />
    <CreationDate amount="2005-02-08 12:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Typo in javadoc of Signature.C_GENERIC_END</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>'%gt;' should be replaced by '&amp;gt;'
Fixed and released in HEAD.
Update title
Verified in I20050215-2300</WithStack>
    <WithOutStack>'%gt;' should be replaced by '&amp;gt;'
Fixed and released in HEAD.
Update title
Verified in I20050215-2300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84718" />
    <CreationDate amount="2005-02-08 12:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[content assist] NPE during codeassist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232370">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.String.valueOf(String.java:1297)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.text.java.ResultCollector.internalAcceptMethod(ResultCollector.java:203)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.text.java.ResultCollector.accept(ResultCollector.java:690)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethods(CompletionEngine.java:1871)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:627)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:1205)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:119)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:287)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:280)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.internalComputeCompletionProposals(JavaCompletionProcessor.java:358)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionProposals(JavaCompletionProcessor.java:332)</Frame>
          <Frame depth="11">org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1470)</Frame>
          <Frame depth="12">org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:250)</Frame>
          <Frame depth="13">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:247)</Frame>
          <Frame depth="14">org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:206)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="16">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:201)</Frame>
          <Frame depth="17">org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1319)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:180)</Frame>
          <Frame depth="19">org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="21">org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80)</Frame>
          <Frame depth="22">org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)</Frame>
          <Frame depth="23">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:181)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.commands.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:73)</Frame>
          <Frame depth="25">org.eclipse.core.commands.Command.execute(Command.java:260)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:418)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:698)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:741)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:510)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:453)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:229)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.filterEvent(Display.java:782)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1181)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.windowProc(Display.java:3450)</Frame>
          <Frame depth="43">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="44">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1600)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2514)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="49">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="51">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="52">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="53">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="54">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="55">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="57">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="58">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="59">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="555" end="1987" />
        <code>private ContentType createContentType(IConfigurationElement contentTypeCE) {
		//TODO: need to ensure the config. element is valid
		String simpleId = contentTypeCE.getAttributeAsIs("id"); //$NON-NLS-1$
		byte priority = parsePriority(contentTypeCE.getAttributeAsIs("priority"));
//$NON-NLS-1$);
		String namespace = contentTypeCE.getDeclaringExtension().getNamespace();
		String name = contentTypeCE.getAttribute("name"); //$NON-NLS-1$
		String[] fileNames =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-names")); //$NON-NLS-1$
		String[] fileExtensions =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-extensions")); //$NON-NLS-1$
		String baseTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("base-type")); //$NON-NLS-1$
		String aliasTargetTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("alias-for")); //$NON-NLS-1$		
		String defaultCharset = contentTypeCE.getAttributeAsIs("default-charset");
//$NON-NLS-1$
		IConfigurationElement[] propertyCEs;
		Map defaultProperties = null;
		if ((propertyCEs = contentTypeCE.getChildren("property")).length &gt; 0) {
//$NON-NLS-1$
			defaultProperties = new HashMap();
			for (int i = 0; i &lt; propertyCEs.length; i++) {
				String defaultValue = propertyCEs.
			}
		}		
		return ContentType.createContentType(catalog, namespace, simpleId, name,
priority, fileExtensions, fileNames, baseTypeId, aliasTargetTypeId,
defaultCharset, contentTypeCE);
	}</code>
      </source_code>
      <source_code type="class">
        <location start="2617" end="2691" />
        <code>public class Main {
	public static void main(String[] args) {
		args.
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>i200502080800
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040917 (JIT
enabled)
J9VM - 20040916_0908_lHdSMR
JIT  - r7_level20040915_1801

Got the following NPE during code assist. 


!ENTRY org.eclipse.ui 4 4 2005-02-08 12:35:13.389
!MESSAGE The command for the key you pressed failed

!ENTRY org.eclipse.ui 4 0 2005-02-08 12:35:13.451
!MESSAGE The command for the key you pressed failed
!STACK 0
java.lang.NullPointerException
	at java.lang.String.valueOf(String.java:1297)
	at
org.eclipse.jdt.internal.ui.text.java.ResultCollector.internalAcceptMethod(ResultCollector.java:203)
	at
org.eclipse.jdt.internal.ui.text.java.ResultCollector.accept(ResultCollector.java:690)
	at
org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethods(CompletionEngine.java:1871)
	at
org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:627)
	at
org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:1205)
	at org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:119)
	at
org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:287)
	at
org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:280)
	at
org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.internalComputeCompletionProposals(JavaCompletionProcessor.java:358)
	at
org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionProposals(JavaCompletionProcessor.java:332)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1470)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:250)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:247)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:206)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:201)
	at
org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1319)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:180)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:181)
	at
org.eclipse.ui.internal.commands.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:73)
	at org.eclipse.core.commands.Command.execute(Command.java:260)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:418)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:698)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:741)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:510)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:453)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:229)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:782)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1181)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3450)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1600)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2514)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
	at org.eclipse.core.launcher.Main.run(Main.java:817)
	at org.eclipse.core.launcher.Main.main(Main.java:801)


I was editing org.eclipse.core.internal.content.ContentTypeBuilder (rev 1.11),
changing the existing createContentType method to be:

	private ContentType createContentType(IConfigurationElement contentTypeCE) {
		//TODO: need to ensure the config. element is valid
		String simpleId = contentTypeCE.getAttributeAsIs("id"); //$NON-NLS-1$
		byte priority = parsePriority(contentTypeCE.getAttributeAsIs("priority"));
//$NON-NLS-1$);
		String namespace = contentTypeCE.getDeclaringExtension().getNamespace();
		String name = contentTypeCE.getAttribute("name"); //$NON-NLS-1$
		String[] fileNames =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-names")); //$NON-NLS-1$
		String[] fileExtensions =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-extensions")); //$NON-NLS-1$
		String baseTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("base-type")); //$NON-NLS-1$
		String aliasTargetTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("alias-for")); //$NON-NLS-1$		
		String defaultCharset = contentTypeCE.getAttributeAsIs("default-charset");
//$NON-NLS-1$
		IConfigurationElement[] propertyCEs;
		Map defaultProperties = null;
		if ((propertyCEs = contentTypeCE.getChildren("property")).length &gt; 0) {
//$NON-NLS-1$
			defaultProperties = new HashMap();
			for (int i = 0; i &lt; propertyCEs.length; i++) {
				String defaultValue = propertyCEs.
			}
		}		
		return ContentType.createContentType(catalog, namespace, simpleId, name,
priority, fileExtensions, fileNames, baseTypeId, aliasTargetTypeId,
defaultCharset, contentTypeCE);
	}

Used organize imports to import some java.util types, typed the if/for block,
tried to trigger content assist after:

String defaultValue = propertyCEs.

But I got an error dialog like the one mentioned in bug 84657 (IAE, here it is a
NPE) and the log entries above in the log.

I tried agan after closing the editor and reopening it, after rebuilding, after
deleting the Java indexes, after restarting Eclipse, after changing the VM to
Sun 1.5, and I can still reproduce the problem.
Ok, this is easily reproducible. The problem is triggered by a user error:
trying to use code assist on an expression whose type is an array:

public class Main {
	public static void main(String[] args) {
		args.
	}
}

Not a user error - an array has all the java.lang.Object methods plus a public
clone method plus a field named "length"!

Already fixed today, but did not make it into the I-build, available &gt; 20050208
Agreed. Not that this matters, but what I actually tried to mean is that I found
this by accident, I was actually trying to get the members for the array
component type instead (but forgot to type the indexing part).
verified that code assist on an array works and returns all Object methods and
the 'length' field.</WithStack>
    <WithOutStack>i200502080800
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040917 (JIT
enabled)
J9VM - 20040916_0908_lHdSMR
JIT  - r7_level20040915_1801

Got the following NPE during code assist. 


!ENTRY org.eclipse.ui 4 4 2005-02-08 12:35:13.389
!MESSAGE The command for the key you pressed failed

!ENTRY org.eclipse.ui 4 0 2005-02-08 12:35:13.451
!MESSAGE The command for the key you pressed failed
!STACK 0



I was editing org.eclipse.core.internal.content.ContentTypeBuilder (rev 1.11),
changing the existing createContentType method to be:

	private ContentType createContentType(IConfigurationElement contentTypeCE) {
		//TODO: need to ensure the config. element is valid
		String simpleId = contentTypeCE.getAttributeAsIs("id"); //$NON-NLS-1$
		byte priority = parsePriority(contentTypeCE.getAttributeAsIs("priority"));
//$NON-NLS-1$);
		String namespace = contentTypeCE.getDeclaringExtension().getNamespace();
		String name = contentTypeCE.getAttribute("name"); //$NON-NLS-1$
		String[] fileNames =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-names")); //$NON-NLS-1$
		String[] fileExtensions =
Util.parseItems(contentTypeCE.getAttributeAsIs("file-extensions")); //$NON-NLS-1$
		String baseTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("base-type")); //$NON-NLS-1$
		String aliasTargetTypeId = getUniqueId(namespace,
contentTypeCE.getAttributeAsIs("alias-for")); //$NON-NLS-1$		
		String defaultCharset = contentTypeCE.getAttributeAsIs("default-charset");
//$NON-NLS-1$
		IConfigurationElement[] propertyCEs;
		Map defaultProperties = null;
		if ((propertyCEs = contentTypeCE.getChildren("property")).length &gt; 0) {
//$NON-NLS-1$
			defaultProperties = new HashMap();
			for (int i = 0; i &lt; propertyCEs.length; i++) {
				String defaultValue = propertyCEs.
			}
		}		
		return ContentType.createContentType(catalog, namespace, simpleId, name,
priority, fileExtensions, fileNames, baseTypeId, aliasTargetTypeId,
defaultCharset, contentTypeCE);
	}

Used organize imports to import some java.util types, typed the if/for block,
tried to trigger content assist after:

String defaultValue = propertyCEs.

But I got an error dialog like the one mentioned in bug 84657 (IAE, here it is a
NPE) and the log entries above in the log.

I tried agan after closing the editor and reopening it, after rebuilding, after
deleting the Java indexes, after restarting Eclipse, after changing the VM to
Sun 1.5, and I can still reproduce the problem.
Ok, this is easily reproducible. The problem is triggered by a user error:
trying to use code assist on an expression whose type is an array:

public class Main {
	public static void main(String[] args) {
		args.
	}
}

Not a user error - an array has all the java.lang.Object methods plus a public
clone method plus a field named "length"!

Already fixed today, but did not make it into the I-build, available &gt; 20050208
Agreed. Not that this matters, but what I actually tried to mean is that I found
this by accident, I was actually trying to get the members for the array
component type instead (but forgot to type the indexing part).
verified that code assist on an array works and returns all Object methods and
the 'length' field.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84719" />
    <CreationDate amount="2005-02-08 13:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>duplicate entries in org.eclipse.platform feature.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There are duplicate entries in the org.eclipse.platform feature.xml which
produces duplicate entries in the generated build.xml file for this feature.

Sorry if this is the wrong component, I just made a guess.
Created attachment 17756
removes duplicate entries in org.eclipse.platform feature.xml
Fixed in builds &gt; 20050210.</WithStack>
    <WithOutStack>There are duplicate entries in the org.eclipse.platform feature.xml which
produces duplicate entries in the generated build.xml file for this feature.

Sorry if this is the wrong component, I just made a guess.
Created attachment 17756
removes duplicate entries in org.eclipse.platform feature.xml
Fixed in builds &gt; 20050210.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84720" />
    <CreationDate amount="2005-02-08 13:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][assist] proposal ranking by return value should consider auto(un)boxing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="92" end="170" />
        <code>void method(List list) {
    Integer type= list.| 
    int primitive= list.|
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050202 (jdt-core from 20050207)

- invoke content assist in the following locations (|)

void method(List list) {
    Integer type= list.| 
    int primitive= list.|
}

expected: proposals are ranked about the same in both locations
actual: for the primitive, the List methods returning an int (indexOf, size,
hashCode) are ranked high. For the Integer, the methods returning void (add...)
are ranked the highest.

I would support ranking autoboxing-proposals a little lower than direct matches,
but autoboxing-proposals should still rank before the big mass (e.g. methods
with a void return type).
*** Bug 271295 has been marked as a duplicate of this bug. ***

Though the defect title mentions only return value, in many other
contexts also we should consider auto(un)boxing. For one example
see bug #271295
Created attachment 132897
Proposed patch

This fix does a compatibility check for the left hand and right hand side type and if found compatible, uses R_EXPECTED_TYPE as the relevance value. Test cases are part of the patch.
Comment on attachment 132897
Proposed patch

Autoboxing is a 1.5 features, so the compatibility check should be done only if compliance is at least 1.5.
Created attachment 133082
Latest patch

Instead of calling the LookupEnvironment.computeBoxingType method, modified the fix to use Scope.isBoxingCompatibleWith, which already handles the compiler compatibility checks.
Comment on attachment 133082
Latest patch

This patch is good.
Released for 3.5M7.
Verified for 3.5M7 using I20090427-1800.

I found a problem in relevance computation while verifying this bug. I entered bug 273991 for this problem.</WithStack>
    <WithOutStack>I20050202 (jdt-core from 20050207)

- invoke content assist in the following locations (|)

void method(List list) {
    Integer type= list.| 
    int primitive= list.|
}

expected: proposals are ranked about the same in both locations
actual: for the primitive, the List methods returning an int (indexOf, size,
hashCode) are ranked high. For the Integer, the methods returning void (add...)
are ranked the highest.

I would support ranking autoboxing-proposals a little lower than direct matches,
but autoboxing-proposals should still rank before the big mass (e.g. methods
with a void return type).
*** Bug 271295 has been marked as a duplicate of this bug. ***

Though the defect title mentions only return value, in many other
contexts also we should consider auto(un)boxing. For one example
see bug #271295
Created attachment 132897
Proposed patch

This fix does a compatibility check for the left hand and right hand side type and if found compatible, uses R_EXPECTED_TYPE as the relevance value. Test cases are part of the patch.
Comment on attachment 132897
Proposed patch

Autoboxing is a 1.5 features, so the compatibility check should be done only if compliance is at least 1.5.
Created attachment 133082
Latest patch

Instead of calling the LookupEnvironment.computeBoxingType method, modified the fix to use Scope.isBoxingCompatibleWith, which already handles the compiler compatibility checks.
Comment on attachment 133082
Latest patch

This patch is good.
Released for 3.5M7.
Verified for 3.5M7 using I20090427-1800.

I found a problem in relevance computation while verifying this bug. I entered bug 273991 for this problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84721" />
    <CreationDate amount="2005-02-08 13:37:00 -0500" />
    <DupId amount="43805" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[KeyBindings] preference page: Re-open keys preferences page does not remember last place</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be nice if re-opening the keys preference page would remember the last
edited command so that it would not be necessary to re-search for the command
you have been working with.  This is usefull as you sometimes iterate to find a
command you like etc...


*** This bug has been marked as a duplicate of 43805 ***</WithStack>
    <WithOutStack>It would be nice if re-opening the keys preference page would remember the last
edited command so that it would not be necessary to re-search for the command
you have been working with.  This is usefull as you sometimes iterate to find a
command you like etc...


*** This bug has been marked as a duplicate of 43805 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84722" />
    <CreationDate amount="2005-02-08 13:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Don't generate @Override annotations when implementing interface methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="185" end="197" />
        <code>void run();</code>
      </source_code>
      <source_code type="class">
        <location start="201" end="252" />
        <code>class X implements I {
	ru //&lt;- ContentAssistHere
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800

In the given example, use content assist to implement run() in X. The method
stub is created with an @Override annotation, which is wrong. See bug 82460.

interface I {
	void run();
}

class X implements I {
	ru //&lt;- ContentAssistHere
}
Fixed &gt; 20050209</WithStack>
    <WithOutStack>I20050208-0800

In the given example, use content assist to implement run() in X. The method
stub is created with an @Override annotation, which is wrong. See bug 82460.

interface I {
	void run();
}

class X implements I {
	ru //&lt;- ContentAssistHere
}
Fixed &gt; 20050209</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84723" />
    <CreationDate amount="2005-02-08 13:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unknown file type prompting and Add to Version Control</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The unknown file type prompting needs to be added to the Add to Version 
Control action
Fix released to HEAD
Verified</WithStack>
    <WithOutStack>The unknown file type prompting needs to be added to the Add to Version 
Control action
Fix released to HEAD
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84724" />
    <CreationDate amount="2005-02-08 13:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][search] fails to find call sites for varargs constructors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="286" end="401" />
        <code>public class Test {
    public void foo() {
        Cell c= new Cell("", ""); // calls Cell.Cell(String...)
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="402" end="452" />
        <code>class Cell {
    public Cell(String... args) { }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The search engine fails to find the call to the varargs constructor in the 
example below. Simply highlight the constructor's name and invoke "References" -
&gt; "Workspace" from the Java editor context menu; no occurrences will be found.
Bug manifests with integration build I2005-0202.

public class Test {
    public void foo() {
        Cell c= new Cell("", ""); // calls Cell.Cell(String...)
    }
}
class Cell {
    public Cell(String... args) { }
}


*** This bug has been marked as a duplicate of 84100 ***
Oops, that was too fast. This bug is not a dup of bug 84100.
This one is for vararg _constructors_ (the other one is for methods).
ConstructorLocator should not compare constructor arguments number when last one
is vararg...
Fixed.

Search engine now find constructors with varargs parameter references.

[jdt-core-internal]
Change done in ConstructorLocator#match(*, MatchingNodeSet) methods.
Test cases added in javaSearchBugsTests
Verified in I20050215-2300</WithStack>
    <WithOutStack>The search engine fails to find the call to the varargs constructor in the 
example below. Simply highlight the constructor's name and invoke "References" -
&gt; "Workspace" from the Java editor context menu; no occurrences will be found.
Bug manifests with integration build I2005-0202.

public class Test {
    public void foo() {
        Cell c= new Cell("", ""); // calls Cell.Cell(String...)
    }
}
class Cell {
    public Cell(String... args) { }
}


*** This bug has been marked as a duplicate of 84100 ***
Oops, that was too fast. This bug is not a dup of bug 84100.
This one is for vararg _constructors_ (the other one is for methods).
ConstructorLocator should not compare constructor arguments number when last one
is vararg...
Fixed.

Search engine now find constructors with varargs parameter references.

[jdt-core-internal]
Change done in ConstructorLocator#match(*, MatchingNodeSet) methods.
Test cases added in javaSearchBugsTests
Verified in I20050215-2300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84725" />
    <CreationDate amount="2005-02-08 13:54:00 -0500" />
    <DupId amount="113909" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Lookup of JRE system libraries in Java Build Path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently, every installed JRE getting a _custom_ name, so there is a good
chance that developers may assign a different names. The problem is that this
name is used in project's .classpath and if project is shared within the team it
is possible to get an inconsistent classpath.

It would be helpful to allow to choose JRE library not by name but by JRE
version, that can be captured when JRE is registered in the workspace.
Up to JRE container initializer
Currently a known limitation. Deferred for post 3.1 consideration.
This has been solved with execution environments in 3.2


*** This bug has been marked as a duplicate of 113909 ***</WithStack>
    <WithOutStack>Currently, every installed JRE getting a _custom_ name, so there is a good
chance that developers may assign a different names. The problem is that this
name is used in project's .classpath and if project is shared within the team it
is possible to get an inconsistent classpath.

It would be helpful to allow to choose JRE library not by name but by JRE
version, that can be captured when JRE is registered in the workspace.
Up to JRE container initializer
Currently a known limitation. Deferred for post 3.1 consideration.
This has been solved with execution environments in 3.2


*** This bug has been marked as a duplicate of 113909 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84726" />
    <CreationDate amount="2005-02-08 14:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JFace] CompositeImageDescriptor ignores aplha channel data</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The main problem is that PNG images with alpha data are painted by
CompositeImageDescriptor with a solid background.  
Additionally, the CompositeImageDescriptor can use alpha channel data in PNG
images to blend overlays into the base image.  This allows for less obnoxious
icon decorators.
Created attachment 17759
Patch based on 3.0.1 version of CompositeImageDescription
Created attachment 17760
Example of alpha-blended icon decorator.
Tod, is this still true?
No - this was fixed by Silenio in 3.3</WithStack>
    <WithOutStack>The main problem is that PNG images with alpha data are painted by
CompositeImageDescriptor with a solid background.  
Additionally, the CompositeImageDescriptor can use alpha channel data in PNG
images to blend overlays into the base image.  This allows for less obnoxious
icon decorators.
Created attachment 17759
Patch based on 3.0.1 version of CompositeImageDescription
Created attachment 17760
Example of alpha-blended icon decorator.
Tod, is this still true?
No - this was fixed by Silenio in 3.3</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84727" />
    <CreationDate amount="2005-02-08 14:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][search] String pattern search does not work with multiply nested types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="30" end="82" />
        <code>Set&lt;Set&lt;Runnable&gt;&gt; getXYZ(List&lt;Set&lt;Runnable&gt;&gt; arg);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20050208-0800

interface A {
	Set&lt;Set&lt;Runnable&gt;&gt; getXYZ(List&lt;Set&lt;Runnable&gt;&gt; arg);
}

- Select "getXYZ" and execute Search &gt; Declarations &gt; Workspace.

=&gt; The string pattern "getXYZ(List&lt;Set&lt;Runnable&gt;&gt;)" is not accepted:
SearchPattern.createPattern(String, int, int, int) returns null.
This is fixed with last integration build I20050222-0821 =&gt; close as WORKSFORME.
Test cases added in JavaSearchBugsTests...</WithStack>
    <WithOutStack>I20050208-0800

interface A {
	Set&lt;Set&lt;Runnable&gt;&gt; getXYZ(List&lt;Set&lt;Runnable&gt;&gt; arg);
}

- Select "getXYZ" and execute Search &gt; Declarations &gt; Workspace.

=&gt; The string pattern "getXYZ(List&lt;Set&lt;Runnable&gt;&gt;)" is not accepted:
SearchPattern.createPattern(String, int, int, int) returns null.
This is fixed with last integration build I20050222-0821 =&gt; close as WORKSFORME.
Test cases added in JavaSearchBugsTests...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84728" />
    <CreationDate amount="2005-02-08 14:21:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.jem" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[perf] JavaMethodJDOMAdaptor.addParameters triggers massive reads of JRE's src.zip</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="331" end="1247" />
        <code>protected void addParameters() {
  String[] parmNames = new String[0], parmTypeNames = getSourceMethod
().getParameterTypes();
  //FIXME dbk don't get parms by name, use arg0..n
//		try {
//			parmNames = getSourceMethod().getParameterNames();
//		} catch (JavaModelException npe) {
//			// name stays null and we carry on
//		}
  // Temp hack to work around a JavaModel bug, above call on a Binary method 
may return null
  if (parmNames == null || parmNames.length == 0) {
    parmNames = new String[parmTypeNames.length];
    for (int i = 0; i &lt; parmTypeNames.length; i++) {
        parmNames[i] = "arg" + i;//$NON-NLS-1$
    }
  }
  MethodImpl javaMethodTarget = (MethodImpl) getTarget();
  List params = javaMethodTarget.getParametersGen();
  for (int i = 0; i &lt; parmNames.length; i++) {
    params.add(createJavaParameter(javaMethodTarget, parmNames[i],
        typeNameFromSignature(parmTypeNames[i])));
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Megabytes of data from the JRE's src.zip file are read off disk in order to 
retrieve IMethod parameter names (below).  Commenting out the code below saves 
this I/O.

It may be possible to lazy init more of the JEM model; there looks to be a lot 
of potential savings in avoiding the JDT model cache (their code does this 
too).

protected void addParameters() {
  String[] parmNames = new String[0], parmTypeNames = getSourceMethod
().getParameterTypes();
  //FIXME dbk don't get parms by name, use arg0..n
//		try {
//			parmNames = getSourceMethod().getParameterNames();
//		} catch (JavaModelException npe) {
//			// name stays null and we carry on
//		}
  // Temp hack to work around a JavaModel bug, above call on a Binary method 
may return null
  if (parmNames == null || parmNames.length == 0) {
    parmNames = new String[parmTypeNames.length];
    for (int i = 0; i &lt; parmTypeNames.length; i++) {
        parmNames[i] = "arg" + i;//$NON-NLS-1$
    }
  }
  MethodImpl javaMethodTarget = (MethodImpl) getTarget();
  List params = javaMethodTarget.getParametersGen();
  for (int i = 0; i &lt; parmNames.length; i++) {
    params.add(createJavaParameter(javaMethodTarget, parmNames[i],
        typeNameFromSignature(parmTypeNames[i])));
  }
}
The parameter names will not be lazily initialized... so that only a call to
JavaParameter.getName()  will induce the source reflection.

VE makes use of Parameters mainly for type and cardinality not for names (which
will typically be used for code assist and code generation).

for scenario 4 (close project, open project, and bring up Admin)

about 14.8% improvement

Before
5.752 with 0.214 stdv

With Lazy name
4.897 with 0.238





Last comment ment to say that with this fix, the src. reflection for parameter
name will be done lazily when a JavaParamenter.getName() is called.  At this
point reflection for all the parameters of the Method will be done.
Almost a second faster, I'll take it!  Thanks Gili...
These were missed originally as being done for 1.1M1</WithStack>
    <WithOutStack>Megabytes of data from the JRE's src.zip file are read off disk in order to 
retrieve IMethod parameter names (below).  Commenting out the code below saves 
this I/O.

It may be possible to lazy init more of the JEM model; there looks to be a lot 
of potential savings in avoiding the JDT model cache (their code does this 
too).

protected void addParameters() {
  String[] parmNames = new String[0], parmTypeNames = getSourceMethod
().getParameterTypes();
  //FIXME dbk don't get parms by name, use arg0..n
//		try {
//			parmNames = getSourceMethod().getParameterNames();
//		} catch (JavaModelException npe) {
//			// name stays null and we carry on
//		}
  // Temp hack to work around a JavaModel bug, above call on a Binary method 
may return null
  if (parmNames == null || parmNames.length == 0) {
    parmNames = new String[parmTypeNames.length];
    for (int i = 0; i &lt; parmTypeNames.length; i++) {
        parmNames[i] = "arg" + i;//$NON-NLS-1$
    }
  }
  MethodImpl javaMethodTarget = (MethodImpl) getTarget();
  List params = javaMethodTarget.getParametersGen();
  for (int i = 0; i &lt; parmNames.length; i++) {
    params.add(createJavaParameter(javaMethodTarget, parmNames[i],
        typeNameFromSignature(parmTypeNames[i])));
  }
}
The parameter names will not be lazily initialized... so that only a call to
JavaParameter.getName()  will induce the source reflection.

VE makes use of Parameters mainly for type and cardinality not for names (which
will typically be used for code assist and code generation).

for scenario 4 (close project, open project, and bring up Admin)

about 14.8% improvement

Before
5.752 with 0.214 stdv

With Lazy name
4.897 with 0.238





Last comment ment to say that with this fix, the src. reflection for parameter
name will be done lazily when a JavaParamenter.getName() is called.  At this
point reflection for all the parameters of the Method will be done.
Almost a second faster, I'll take it!  Thanks Gili...
These were missed originally as being done for 1.1M1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84729" />
    <CreationDate amount="2005-02-08 14:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>[Contexts] events: ContextManagerEvents are no longer fired by the workbench context manager on enablement changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20050208

ContextManagerWrapper has replaced MutableContextManager.  You can still add
listeners to this manager but events are not fired when the enablement state of
contexts changed as was the case in MutableContextManager.
Is this critical for 3.1 M5?
I would say not.
Moving to M6.
I believe this is fixed.  Please re-open if this is still a problem.
Verified by visual inspection of the code.</WithStack>
    <WithOutStack>I20050208

ContextManagerWrapper has replaced MutableContextManager.  You can still add
listeners to this manager but events are not fired when the enablement state of
contexts changed as was the case in MutableContextManager.
Is this critical for 3.1 M5?
I would say not.
Moving to M6.
I believe this is fixed.  Please re-open if this is still a problem.
Verified by visual inspection of the code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84730" />
    <CreationDate amount="2005-02-08 14:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>(Plat) When detaching from an application and selecting terminate, the application terminates, however it shows "detached" in the UI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Launch Local Test Terminate 2</Line>
          <Line>2. Launch Remote Test Terminate 2</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When detaching from an application and selecting terminate, the application 
terminates, however it shows "detached" in the UI.

This bug was originally opened in defect 49939.  It appears to now work in the 
attach to application case, but not when launching an external application, or 
launching a local application.
Target to 3.3 but need to review if this can be fixed since this involve 
changing the attach protocol.
I saw it fail in the attach case aswell with build TPTP-4.0-200502171825.
Changing the severity from "normal" to "blocker" as per the PG's call this
morning where any defect that fails a test case should be marked "blocker". Also
changing the Target to "3.3 i2" to reflect that this must be fixed in 3.3
iteration 2.

This defect fails 
3.3 "TRACE UI Launch and Trace pd core"
   1. Launch Local Test Terminate 2
   2. Launch Remote Test Terminate 2

Also fails the test cases in 4.0 TRACE UI Launch and Trace pd core:
Attach Local Test Terminate 2
Attach Remote Test Terminate 2
Launch Local Test Terminate 2
Launch Remote Test Terminate 2

Fix checked in 2005/03/14 11:20am EST in both 3.3 and 4.0
- Send message to agent-&gt;prev_client when scrubbing process (util.c)

*** Bug 85992 has been marked as a duplicate of this bug. ***
Verified in build 33_20050328_1223.</WithStack>
    <WithOutStack>When detaching from an application and selecting terminate, the application 
terminates, however it shows "detached" in the UI.

This bug was originally opened in defect 49939.  It appears to now work in the 
attach to application case, but not when launching an external application, or 
launching a local application.
Target to 3.3 but need to review if this can be fixed since this involve 
changing the attach protocol.
I saw it fail in the attach case aswell with build TPTP-4.0-200502171825.
Changing the severity from "normal" to "blocker" as per the PG's call this
morning where any defect that fails a test case should be marked "blocker". Also
changing the Target to "3.3 i2" to reflect that this must be fixed in 3.3
iteration 2.

This defect fails 
3.3 "TRACE UI Launch and Trace pd core"
   1. Launch Local Test Terminate 2
   2. Launch Remote Test Terminate 2

Also fails the test cases in 4.0 TRACE UI Launch and Trace pd core:
Attach Local Test Terminate 2
Attach Remote Test Terminate 2
Launch Local Test Terminate 2
Launch Remote Test Terminate 2

Fix checked in 2005/03/14 11:20am EST in both 3.3 and 4.0
- Send message to agent-&gt;prev_client when scrubbing process (util.c)

*** Bug 85992 has been marked as a duplicate of this bug. ***
Verified in build 33_20050328_1223.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84731" />
    <CreationDate amount="2005-02-08 14:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[PropertiesView] Flicker when resizing columns</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232385">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">org.eclipse.swt.SWTException.&lt;init&gt;(SWTException.java:84)</Frame>
          <Frame depth="3">org.eclipse.swt.SWT.error(SWT.java:2839)</Frame>
          <Frame depth="4">org.eclipse.swt.SWT.error(SWT.java:2762)</Frame>
          <Frame depth="5">org.eclipse.swt.SWT.error(SWT.java:2733)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.error(Widget.java:393)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Control.getParent(Control.java)</Frame>
          <Frame depth="9">org.eclipse.ui.views.properties.PropertySheetViewer.updateColumnSizes(PropertySheetViewer.java)</Frame>
          <Frame depth="10">org.eclipse.ui.views.properties.PropertySheetViewer.access$0(PropertySheetViewer.java:228)</Frame>
          <Frame depth="11">org.eclipse.ui.views.properties.PropertySheetViewer$1.controlResized(PropertySheetViewer.java:223)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Control.WM_SIZE(Control.java)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="22">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="23">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="27">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="32">org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="38">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="42">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="47">org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="52">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="53">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="57">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Control.setBounds(Control.java)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:325)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:118)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layoutContent(PresentablePartFolder.java:131)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layout(PresentablePartFolder.java:401)</Frame>
          <Frame depth="67">org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.setBounds(PresentablePartFolder.java:256)</Frame>
          <Frame depth="68">org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.setBounds(TabbedStackPresentation.java:203)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:995)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.LayoutTree.doSetBounds(LayoutTree.java:543)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.LayoutPartSash.widgetSelected(LayoutPartSash.java:263)</Frame>
          <Frame depth="77">org.eclipse.ui.internal.LayoutPartSash.access$1(LayoutPartSash.java:246)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.LayoutPartSash$1.widgetSelected(LayoutPartSash.java:60)</Frame>
          <Frame depth="79">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="80">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="81">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="82">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="83">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="84">org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE(Sash.java:373)</Frame>
          <Frame depth="85">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="86">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="87">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="88">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java)</Frame>
          <Frame depth="89">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="90">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612)</Frame>
          <Frame depth="91">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578)</Frame>
          <Frame depth="92">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293)</Frame>
          <Frame depth="93">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="94">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="95">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)</Frame>
          <Frame depth="96">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333)</Frame>
          <Frame depth="97">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150)</Frame>
          <Frame depth="98">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="99">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="100">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="101">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="102">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="103">org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)</Frame>
          <Frame depth="104">org.eclipse.core.launcher.Main.basicRun(Main.java:260)</Frame>
          <Frame depth="105">org.eclipse.core.launcher.Main.run(Main.java:887)</Frame>
          <Frame depth="106">org.eclipse.core.launcher.Main.main(Main.java:871)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="21">
      <source_code type="functiondef">
        <location start="1538" end="1604" />
        <code>tree.getParent().addControlListener(new ControlAdapter() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1605" end="1712" />
        <code>public void controlResized(ControlEvent e) {
                updateColumnSizes();
            }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1714" end="2087" />
        <code>private void updateColumnSizes() {
        // the parent has not yet layed out the tree; force the tree's size to
be updated earlier
        tree.getParent().layout();
        
        int w = tree.getSize().x;
        TreeColumn[] columns = tree.getColumns();
        columns[0].setWidth(w * 40 / 100);
        columns[1].setWidth(w - columns[0].getWidth() - 4);
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2510" end="2547" />
        <code>private void updateColumnSizes() {</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2548" end="2627" />
        <code>// the parent has not yet layed out the tree; force the tree's size to</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2646" end="2680" />
        <code>tree.getParent().layout();</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="4783" end="4882" />
        <code>else if (key.equals(IPropertySheetPage.class))
    {
      return getPropertySheetPage();
    }</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="4944" end="5622" />
        <code>if (propertySheetPage == null)
    {
      propertySheetPage =
        new PropertySheetPage()
        {
          public void makeContributions(IMenuManager menuManager,
IToolBarManager toolBarManager, IStatusLineManager statusLineManager)
          {
            super.makeContributions(menuManager, toolBarManager, statusLineManager);
          }

          public void setActionBars(IActionBars actionBars)
          {
            super.setActionBars(actionBars);
            getActionBarContributor().shareGlobalActions(this, actionBars);
          }
        };
      propertySheetPage.setPropertySourceProvider(new
AdapterFactoryContentProvider(adapterFactory));
    }</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="5736" end="5817" />
        <code>if (propertySheetPage != null)
    {
      propertySheetPage.dispose();
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6531" end="6742" />
        <code>public void createControl(Composite parent) {
		disposed = false;
		pagebook = new PageBook(parent, SWT.NULL);
		defaultPage.createControl(pagebook);
		if (currentPage != null)
			setPageActive(currentPage);
	}</code>
      </source_code>
      <source_code type="assignment">
        <location start="7509" end="7559" />
        <code>Rectangle area = tree.getClientArea();</code>
      </source_code>
      <source_code type="assignment">
        <location start="7560" end="7613" />
        <code>TreeColumn[] columns = tree.getColumns();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="7614" end="7688" />
        <code>// Add this so that the width of the column is set initially</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="7688" end="7737" />
        <code>// but not every time it is resized.</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="7737" end="7947" />
        <code>if (columns[0].getWidth() == 0)
            {
               columns[0].setWidth( area.width * 40 / 100 );
               columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
            }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="8101" end="8507" />
        <code>ControlListener listener = new ControlAdapter() {
    public void controlResized(ControlEvent e ) {
         Rectangle area = tree.getClientArea();
         TreeColumn[] columns = tree.getColumns();
         columns[0].setWidth( area.width * 40 / 100 );
         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
         tree.removeControlListener(listener);
         listener = null;
    }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8509" end="8543" />
        <code>tree.addControlListener(listener);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="8642" end="9121" />
        <code>tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                }
            }
        }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="9564" end="9964" />
        <code>final ControlListener listener = new ControlAdapter() {
		    public void controlResized(ControlEvent e ) {
		         Rectangle area = tree.getClientArea();
		         TreeColumn[] columns = tree.getColumns();
		         columns[0].setWidth( area.width * 40 / 100 );
		         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
		         tree.removeControlListener(this);
		    }
		}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9966" end="10002" />
        <code>tree.addControlListener(listener);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="10064" end="10597" />
        <code>tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                    tree.removeControlListener(this);
                }
            }
        }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>- select a resource in the navigator or package explorer</Line>
          <Line>- open the Properties view</Line>
          <Line>- it shows some properties</Line>
          <Line>- move the column separator to the right</Line>
          <Line>- the window flickers like crazy, and the column resizing is reset</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="11">
        <Lines>
          <Line>- Properties view closed</Line>
          <Line>- open PDE schema editor on a schema file</Line>
          <Line>- double-click on an element or attribute</Line>
          <Line>- the Properties view appears, showing two columns and the appropriate properties</Line>
          <Line>(the schema editor provides its own property sheet page)</Line>
          <Line>- select a resource in the Navigator or Package Explorer</Line>
          <Line>(these do not provide their own property sheet page, just a property source)</Line>
          <Line>- the Properties view is blank</Line>
          <Line>- the columns are there, just both of width 0 -- they can still be dragged out</Line>
          <Line>- resizing the properties view partially fixes up the columns -- the left column</Line>
          <Line>can still be blank; clicking in the column header fixes it up.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20050202 + latest SWT and UI from head

- select a resource in the navigator or package explorer
- open the Properties view
- it shows some properties
- move the column separator to the right
- the window flickers like crazy, and the column resizing is reset

This is because PropertySheetViewer.addColumns hooks a resize listener, which
tries to maintain a 40%/60% split in the columns.
If we simply remove this, the columns have size 0.

Not sure why this wasn't a problem before (in fact, maybe it was, I haven't
checked yet).  But either way, this is a problem in the Properties view that
needs to be fixed.

Veronika, do you still have that snippet for maintaining column sizes properly?
Also, if you'd like to help out and fix this up, it would be much appreciated.
The problem is that the resize listener is on the Table and the Table will 
send a resize event as scrollbars appear/disappear.

The solution proposed a long time ago adds the resize listener to the parent 
of the table and can be found here:

http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclip
se/swt/snippets/Snippet77.java?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup

The reason TableLayout does not have this problem is because after the first 
resize, TableLayout no longer reszies the columns (it just does nothing).
I've released the following hack for now, but this does not handle the scroll
bars properly.  Plus it's probably evil to force a layout from within a resize.
 Will change to follow the snippet approach.


        tree.getParent().addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                updateColumnSizes();
            }

    private void updateColumnSizes() {
        // the parent has not yet layed out the tree; force the tree's size to
be updated earlier
        tree.getParent().layout();
        
        int w = tree.getSize().x;
        TreeColumn[] columns = tree.getColumns();
        columns[0].setWidth(w * 40 / 100);
        columns[1].setWidth(w - columns[0].getWidth() - 4);
    }

Looking at the code it's clear that you could never remove this listener, so the
fact that it's attached to the parent  requires that the parent not live longer
than this tree child.  Unfortunately that's no the case.  All EMF editors will
create one when opened, and dispose it when closed.  After that, any attempt to
resize the IDE, or turn to other perspectives, will execute the following
"dangling" listener code:

   private void updateColumnSizes() {
        // the parent has not yet layed out the tree; force the tree's size to
be updated earlier
        tree.getParent().layout();

This renders the IDE profoundly useless, because a widget disposed exception is
thrown during layout, resulting in trash layout.

!ENTRY org.eclipse.ui 4 4 2005-02-19 10:20:43.590
!MESSAGE Unhandled event loop exception
Unhandled event loop exception
Reason:
!ENTRY org.eclipse.ui 4 0 
2005-02-19 10:20:43.590
!MESSAGE Widget is disposed
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.swt.SWTException.&lt;init&gt;(SWTException.java:84)
	at org.eclipse.swt.SWT.error(SWT.java:2839)
	at org.eclipse.swt.SWT.error(SWT.java:2762)
	at org.eclipse.swt.SWT.error(SWT.java:2733)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:393)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java)
	at org.eclipse.swt.widgets.Control.getParent(Control.java)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.updateColumnSizes(PropertySheetViewer.java)
	at
org.eclipse.ui.views.properties.PropertySheetViewer.access$0(PropertySheetViewer.java:228)
	at
org.eclipse.ui.views.properties.PropertySheetViewer$1.controlResized(PropertySheetViewer.java:223)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Control.WM_SIZE(Control.java)
	at org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java)
	at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:325)
	at
org.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:118)
	at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layoutContent(PresentablePartFolder.java:131)
	at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layout(PresentablePartFolder.java:401)
	at
org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.setBounds(PresentablePartFolder.java:256)
	at
org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.setBounds(TabbedStackPresentation.java:203)
	at org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:995)
	at org.eclipse.ui.internal.LayoutTree.doSetBounds(LayoutTree.java:543)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)
	at org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)
	at org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)
	at org.eclipse.ui.internal.LayoutPartSash.widgetSelected(LayoutPartSash.java:263)
	at org.eclipse.ui.internal.LayoutPartSash.access$1(LayoutPartSash.java:246)
	at org.eclipse.ui.internal.LayoutPartSash$1.widgetSelected(LayoutPartSash.java:60)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE(Sash.java:373)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
	at org.eclipse.core.launcher.Main.run(Main.java:887)
	at org.eclipse.core.launcher.Main.main(Main.java:871)
Widget is disposed


Note that even if the listeners were to be disposed properly, one should still
be concerned that the multiple listeners will each take a turn telling the
parent to resize yet again...

This bugzilla looks as if the change won't happen until later, but they are
currently in M5, rendering M5 unusable for all users of EMF. Please consider
fixing this for M5.
Ed, I will roll back the change and have requested a rebuild for M5.

Can you please describe the lifecycle that causes this in the EMF editors?
Is it that the page is destroyed and recreated while the EMF editor is still
active?  Or is it simply when switching between editors when one of them is an
EMF editor?
The change above has other problems too:
- Properties view closed
- open PDE schema editor on a schema file
- double-click on an element or attribute
- the Properties view appears, showing two columns and the appropriate properties
  (the schema editor provides its own property sheet page)
- select a resource in the Navigator or Package Explorer
  (these do not provide their own property sheet page, just a property source)
- the Properties view is blank
- the columns are there, just both of width 0 -- they can still be dragged out
- resizing the properties view partially fixes up the columns -- the left column
can still be blank; clicking in the column header fixes it up.


Ed, are you sure the old version works for you?
There were other changes in the PropertySheetViewer, namely to use Tree with
columns rather than TableTree, that could cause potentially cause problems for
EMF.  Was it OK in the I20050125-0800 or I20050201-0800 builds?

Our editors create a property sheet page on demand like this:

  public Object getAdapter(Class key)
  {
...
    else if (key.equals(IPropertySheetPage.class))
    {
      return getPropertySheetPage();
    }
-----
  public IPropertySheetPage getPropertySheetPage()
  {
    if (propertySheetPage == null)
    {
      propertySheetPage =
        new PropertySheetPage()
        {
          public void makeContributions(IMenuManager menuManager,
IToolBarManager toolBarManager, IStatusLineManager statusLineManager)
          {
            super.makeContributions(menuManager, toolBarManager, statusLineManager);
          }

          public void setActionBars(IActionBars actionBars)
          {
            super.setActionBars(actionBars);
            getActionBarContributor().shareGlobalActions(this, actionBars);
          }
        };
      propertySheetPage.setPropertySourceProvider(new
AdapterFactoryContentProvider(adapterFactory));
    }

    return propertySheetPage;
  }

And dispose it when the editor is disposed.

  public void dispose()
  {
...
    if (propertySheetPage != null)
    {
      propertySheetPage.dispose();
    }

Thanks for fixing the problem!!
Ed, although you say that this afternoon's build fixes the problem, I was unable
to actually reproduce it in the earlier builds.  The PDE schema editor, for
example, uses its own subclass of PropertySheetPage, and does not override
createPartControl, so it's also using PropertySheetViewer.  But I can open a
schema editor, bring up the properties for it, close the editor, then resize the
Properties view, with no problem.  

Can you provide steps to reproduce the problem?
I just want to make sure I fully understand it, and have enough info to write a
regression test.

Ed sez:

The PDE functions differently because its PDEMultiPagePropertySheet creates a
control like this:

	public void createControl(Composite parent) {
		disposed = false;
		pagebook = new PageBook(parent, SWT.NULL);
		defaultPage.createControl(pagebook);
		if (currentPage != null)
			setPageActive(currentPage);
	}

So in this case the parent of the properties viewer is a PageBook control that
PDE manages, rather than directly the shared parent as in our case.

Maybe your design of listening to the parent would be okay if you actually
created a "dummy" parent to listen to rather than listening to the shared parent.
Decreasing severity as the blocking breakage for M5 was fixed in M5a.

*** Bug 87709 has been marked as a duplicate of this bug. ***
The following code makes this work the way I would like it to work.  It sets the
widths of the columns initially, but after that takes whatever widths the user
gives and doesn't interfere.

      tree.addControlListener( new ControlAdapter()
      {
         public void controlResized(
            ControlEvent e )
         {
            Rectangle area = tree.getClientArea();
            TreeColumn[] columns = tree.getColumns();

            // Add this so that the width of the column is set initially
            // but not every time it is resized.
            if (columns[0].getWidth() == 0)
            {
               columns[0].setWidth( area.width * 40 / 100 );
               columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
            }
         }
      } );
If you only want to size teh columns once, it would be better for performance 
to remove the listener after it has done its work:

ControlListener listener = new ControlAdapter() {
    public void controlResized(ControlEvent e ) {
         Rectangle area = tree.getClientArea();
         TreeColumn[] columns = tree.getColumns();
         columns[0].setWidth( area.width * 40 / 100 );
         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
         tree.removeControlListener(listener);
         listener = null;
    }
};
tree.addControlListener(listener);
*** Bug 86536 has been marked as a duplicate of this bug. ***
I've released the following change:
        tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                }
            }
        });

Veronika, the code pattern for removing a local listener from within the
listener does not work, since the listener var must be final, and must be
definitely assigned before any reference (there's an implicit reference in the
local class constructor to capture the value of listener).

Philippe, does this make sense?  

I've moved the listener to a field, to allow it to be removed once it's done its
job.

Why not rather writing it as:

		final ControlListener listener = new ControlAdapter() {
		    public void controlResized(ControlEvent e ) {
		         Rectangle area = tree.getClientArea();
		         TreeColumn[] columns = tree.getColumns();
		         columns[0].setWidth( area.width * 40 / 100 );
		         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
		         tree.removeControlListener(this);
		    }
		};
		tree.addControlListener(listener);
Cool, that works.  In fact, I don't even need the var then:

        tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                    tree.removeControlListener(this);
                }
            }
        });
Verified in I20050331-0800.</WithStack>
    <WithOutStack>build I20050202 + latest SWT and UI from head

- select a resource in the navigator or package explorer
- open the Properties view
- it shows some properties
- move the column separator to the right
- the window flickers like crazy, and the column resizing is reset

This is because PropertySheetViewer.addColumns hooks a resize listener, which
tries to maintain a 40%/60% split in the columns.
If we simply remove this, the columns have size 0.

Not sure why this wasn't a problem before (in fact, maybe it was, I haven't
checked yet).  But either way, this is a problem in the Properties view that
needs to be fixed.

Veronika, do you still have that snippet for maintaining column sizes properly?
Also, if you'd like to help out and fix this up, it would be much appreciated.
The problem is that the resize listener is on the Table and the Table will 
send a resize event as scrollbars appear/disappear.

The solution proposed a long time ago adds the resize listener to the parent 
of the table and can be found here:

http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclip
se/swt/snippets/Snippet77.java?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup

The reason TableLayout does not have this problem is because after the first 
resize, TableLayout no longer reszies the columns (it just does nothing).
I've released the following hack for now, but this does not handle the scroll
bars properly.  Plus it's probably evil to force a layout from within a resize.
 Will change to follow the snippet approach.


        tree.getParent().addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                updateColumnSizes();
            }

    private void updateColumnSizes() {
        // the parent has not yet layed out the tree; force the tree's size to
be updated earlier
        tree.getParent().layout();
        
        int w = tree.getSize().x;
        TreeColumn[] columns = tree.getColumns();
        columns[0].setWidth(w * 40 / 100);
        columns[1].setWidth(w - columns[0].getWidth() - 4);
    }

Looking at the code it's clear that you could never remove this listener, so the
fact that it's attached to the parent  requires that the parent not live longer
than this tree child.  Unfortunately that's no the case.  All EMF editors will
create one when opened, and dispose it when closed.  After that, any attempt to
resize the IDE, or turn to other perspectives, will execute the following
"dangling" listener code:

   private void updateColumnSizes() {
        // the parent has not yet layed out the tree; force the tree's size to
be updated earlier
        tree.getParent().layout();

This renders the IDE profoundly useless, because a widget disposed exception is
thrown during layout, resulting in trash layout.

!ENTRY org.eclipse.ui 4 4 2005-02-19 10:20:43.590
!MESSAGE Unhandled event loop exception
Unhandled event loop exception
Reason:
!ENTRY org.eclipse.ui 4 0 
2005-02-19 10:20:43.590
!MESSAGE Widget is disposed
!STACK 0

Widget is disposed


Note that even if the listeners were to be disposed properly, one should still
be concerned that the multiple listeners will each take a turn telling the
parent to resize yet again...

This bugzilla looks as if the change won't happen until later, but they are
currently in M5, rendering M5 unusable for all users of EMF. Please consider
fixing this for M5.
Ed, I will roll back the change and have requested a rebuild for M5.

Can you please describe the lifecycle that causes this in the EMF editors?
Is it that the page is destroyed and recreated while the EMF editor is still
active?  Or is it simply when switching between editors when one of them is an
EMF editor?
The change above has other problems too:
- Properties view closed
- open PDE schema editor on a schema file
- double-click on an element or attribute
- the Properties view appears, showing two columns and the appropriate properties
  (the schema editor provides its own property sheet page)
- select a resource in the Navigator or Package Explorer
  (these do not provide their own property sheet page, just a property source)
- the Properties view is blank
- the columns are there, just both of width 0 -- they can still be dragged out
- resizing the properties view partially fixes up the columns -- the left column
can still be blank; clicking in the column header fixes it up.


Ed, are you sure the old version works for you?
There were other changes in the PropertySheetViewer, namely to use Tree with
columns rather than TableTree, that could cause potentially cause problems for
EMF.  Was it OK in the I20050125-0800 or I20050201-0800 builds?

Our editors create a property sheet page on demand like this:

  public Object getAdapter(Class key)
  {
...
    else if (key.equals(IPropertySheetPage.class))
    {
      return getPropertySheetPage();
    }
-----
  public IPropertySheetPage getPropertySheetPage()
  {
    if (propertySheetPage == null)
    {
      propertySheetPage =
        new PropertySheetPage()
        {
          public void makeContributions(IMenuManager menuManager,
IToolBarManager toolBarManager, IStatusLineManager statusLineManager)
          {
            super.makeContributions(menuManager, toolBarManager, statusLineManager);
          }

          public void setActionBars(IActionBars actionBars)
          {
            super.setActionBars(actionBars);
            getActionBarContributor().shareGlobalActions(this, actionBars);
          }
        };
      propertySheetPage.setPropertySourceProvider(new
AdapterFactoryContentProvider(adapterFactory));
    }

    return propertySheetPage;
  }

And dispose it when the editor is disposed.

  public void dispose()
  {
...
    if (propertySheetPage != null)
    {
      propertySheetPage.dispose();
    }

Thanks for fixing the problem!!
Ed, although you say that this afternoon's build fixes the problem, I was unable
to actually reproduce it in the earlier builds.  The PDE schema editor, for
example, uses its own subclass of PropertySheetPage, and does not override
createPartControl, so it's also using PropertySheetViewer.  But I can open a
schema editor, bring up the properties for it, close the editor, then resize the
Properties view, with no problem.  

Can you provide steps to reproduce the problem?
I just want to make sure I fully understand it, and have enough info to write a
regression test.

Ed sez:

The PDE functions differently because its PDEMultiPagePropertySheet creates a
control like this:

	public void createControl(Composite parent) {
		disposed = false;
		pagebook = new PageBook(parent, SWT.NULL);
		defaultPage.createControl(pagebook);
		if (currentPage != null)
			setPageActive(currentPage);
	}

So in this case the parent of the properties viewer is a PageBook control that
PDE manages, rather than directly the shared parent as in our case.

Maybe your design of listening to the parent would be okay if you actually
created a "dummy" parent to listen to rather than listening to the shared parent.
Decreasing severity as the blocking breakage for M5 was fixed in M5a.

*** Bug 87709 has been marked as a duplicate of this bug. ***
The following code makes this work the way I would like it to work.  It sets the
widths of the columns initially, but after that takes whatever widths the user
gives and doesn't interfere.

      tree.addControlListener( new ControlAdapter()
      {
         public void controlResized(
            ControlEvent e )
         {
            Rectangle area = tree.getClientArea();
            TreeColumn[] columns = tree.getColumns();

            // Add this so that the width of the column is set initially
            // but not every time it is resized.
            if (columns[0].getWidth() == 0)
            {
               columns[0].setWidth( area.width * 40 / 100 );
               columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
            }
         }
      } );
If you only want to size teh columns once, it would be better for performance 
to remove the listener after it has done its work:

ControlListener listener = new ControlAdapter() {
    public void controlResized(ControlEvent e ) {
         Rectangle area = tree.getClientArea();
         TreeColumn[] columns = tree.getColumns();
         columns[0].setWidth( area.width * 40 / 100 );
         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
         tree.removeControlListener(listener);
         listener = null;
    }
};
tree.addControlListener(listener);
*** Bug 86536 has been marked as a duplicate of this bug. ***
I've released the following change:
        tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                }
            }
        });

Veronika, the code pattern for removing a local listener from within the
listener does not work, since the listener var must be final, and must be
definitely assigned before any reference (there's an implicit reference in the
local class constructor to capture the value of listener).

Philippe, does this make sense?  

I've moved the listener to a field, to allow it to be removed once it's done its
job.

Why not rather writing it as:

		final ControlListener listener = new ControlAdapter() {
		    public void controlResized(ControlEvent e ) {
		         Rectangle area = tree.getClientArea();
		         TreeColumn[] columns = tree.getColumns();
		         columns[0].setWidth( area.width * 40 / 100 );
		         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );
		         tree.removeControlListener(this);
		    }
		};
		tree.addControlListener(listener);
Cool, that works.  In fact, I don't even need the var then:

        tree.addControlListener(new ControlAdapter() {
            public void controlResized(ControlEvent e) {
                Rectangle area = tree.getClientArea();
                TreeColumn[] columns = tree.getColumns();
                if (area.width &gt; 0 &amp;&amp; columns[0].getWidth() == 0) {
                    columns[0].setWidth(area.width * 40 / 100);
                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);
                    tree.removeControlListener(this);
                }
            }
        });
Verified in I20050331-0800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84732" />
    <CreationDate amount="2005-02-08 15:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-doc" />
    <Version amount="2.0.3" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Incomplete Documentation  for a few features...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="22">
        <Lines>
          <Line>1) Concepts Section:</Line>
          <Line>-A few links are missing:</Line>
          <Line>-under Editing C/C++ Files, there is an entry "C++".  Should it be</Line>
          <Line>removed</Line>
          <Line>-under Navigation Aids,</Line>
          <Line>"Make Targets View"</Line>
          <Line>"Open Type"</Line>
          <Line>"Class Browser"</Line>
          <Line>"Hierarchy View"  (Spelling mistake in the docs)</Line>
          <Line>-under Debug,</Line>
          <Line>"Error Parsing"</Line>
          <Line>"Invoking Make"</Line>
          <Line />
          <Line>2) Tasks Section</Line>
          <Line>-no tasks for "Open Type"</Line>
          <Line>-no tasks for "Class Browser"</Line>
          <Line>-no tasks for "Hierarchy View"</Line>
          <Line />
          <Line>3) Reference Section</Line>
          <Line>-no reference for "Class Browser"</Line>
          <Line>-no reference for "Hierarchy View"</Line>
          <Line>This doc bug is ancient and may no longer be found/relevant to the current CDT 7.0 doc pages. If you still believe the bug is important, please file a new bug with updated information.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>CDT 2.0.3 200412161349

In the CDT Documentation (Help -&gt; Help Contents -&gt; C/C++ Development User 
Guide), there is a few missing areas:

1) Concepts Section:
    -A few links are missing:
         -under Editing C/C++ Files, there is an entry "C++".  Should it be 
removed
         -under Navigation Aids,
               "Make Targets View"
               "Open Type"
               "Class Browser"
               "Hierarchy View"  (Spelling mistake in the docs)
         -under Debug,
               "Error Parsing"
               "Invoking Make"

2) Tasks Section
         -no tasks for "Open Type"
         -no tasks for "Class Browser"
         -no tasks for "Hierarchy View"

3) Reference Section
         -no reference for "Class Browser"
         -no reference for "Hierarchy View"
This doc bug is ancient and may no longer be found/relevant to the current CDT 7.0 doc pages. If you still believe the bug is important, please file a new bug with updated information.</WithStack>
    <WithOutStack>CDT 2.0.3 200412161349

In the CDT Documentation (Help -&gt; Help Contents -&gt; C/C++ Development User 
Guide), there is a few missing areas:

1) Concepts Section:
    -A few links are missing:
         -under Editing C/C++ Files, there is an entry "C++".  Should it be 
removed
         -under Navigation Aids,
               "Make Targets View"
               "Open Type"
               "Class Browser"
               "Hierarchy View"  (Spelling mistake in the docs)
         -under Debug,
               "Error Parsing"
               "Invoking Make"

2) Tasks Section
         -no tasks for "Open Type"
         -no tasks for "Class Browser"
         -no tasks for "Hierarchy View"

3) Reference Section
         -no reference for "Class Browser"
         -no reference for "Hierarchy View"
This doc bug is ancient and may no longer be found/relevant to the current CDT 7.0 doc pages. If you still believe the bug is important, please file a new bug with updated information.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84733" />
    <CreationDate amount="2005-02-08 15:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TabFolder position change broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Open the control example</Line>
          <Line>2. Switch to the TabFolder pane</Line>
          <Line>3. Switch between SWT.TOP and SWT.BOTTOM</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Open the control example
2. Switch to the TabFolder pane
3. Switch between SWT.TOP and SWT.BOTTOM

When using the SWT.BOTTOM style, the contents disappear.
Was this introduced by recent changes to widget sizing or was it always there?
Reproducable on 3.1M3, so no, it was not caused by recent changes.
Fixed &gt; 20050211
Verified in I20050215-2300.</WithStack>
    <WithOutStack>1. Open the control example
2. Switch to the TabFolder pane
3. Switch between SWT.TOP and SWT.BOTTOM

When using the SWT.BOTTOM style, the contents disappear.
Was this introduced by recent changes to widget sizing or was it always there?
Reproducable on 3.1M3, so no, it was not caused by recent changes.
Fixed &gt; 20050211
Verified in I20050215-2300.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84734" />
    <CreationDate amount="2005-02-08 15:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Contributions] [RCP] widgets: Status line should support contributions independent from parts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="1226" end="1268" />
        <code>void fillStatusLine(IStatusLineManager);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It's currently only possible to add to the status line from editors, views, and
the application's action bar advisor.

It should be possible to add to the status line independently from views and
editors, and without having to hardwire the contribution into the advisor.

The way action sets can add to the menus and toolbars provides a good model.
In fact, piggy-backing on the action set mechanism would afford a fair bit of
flexibility, since action sets can be associated with perspectives and parts,
filtered by activities, etc.
*** Bug 47849 has been marked as a duplicate of this bug. ***
(The RCP tag is there because RCP apps tend to push on this more than the IDE
use cases, though bug 47849 is a good example from the IDE stack.)

I know improvements here are being considered under the new commands support, so
piggybacking on action sets may not be the best choice, but whatever we do, we
shold allow the same kind of flexibility as action sets have.

Is there a workaround at this point?
One workaround would be for the app to roll its own extension point, and manage
contributions from the workbench advisor.  
Classes on the extension point could implement something like:
interface IStatusLineContributor {
  void fillStatusLine(IStatusLineManager);
}

The advisor could create a SubActionBars for each contributor, which wrappers
the main action bars.  activate() / deactivate() on the SubActionBars instance
can then be used to show/hide the contributions depending on context.

This approach means that all contributing plugins will be activated eagerly
though, but that's probably necessary in the case of status line contributions.
 They're more likely to be creating interesting controls, rather than just
actions that that can be described declaratively then activated for real later.

Is this covered by bug 36968 ?
Moving Dougs bugs
Assigning to component owner
PW

This item has been fixed/superceded by the menu contribution mechanism - bug 154130

Menu contributions allow controls to be contributed to trim and the status line.
PW

The bug referenced in comment #9 (bug 154130) is not fixed and also not scheduled to be fixed.  You spoke with authority that work has been done to address this - was it simply the wrong bug number?
(In reply to comment #10)
&gt; The bug referenced in comment #9 (bug 154130) is not fixed and also not
&gt; scheduled to be fixed.  You spoke with authority that work has been done to
&gt; address this - was it simply the wrong bug number?

Sorry, Ian, that bug (despite some of the rambling and randmo patches) the plan item for the menu contribution work (I know, not obvious).  It includes the new menus API as well as the work done in the org.eclipse.ui.menus extension point.  It covers the work that would allow an arbitrary control to be added to the status line that would not be tied to a view or editor.

There is more information available at http://wiki.eclipse.org/Menu_Contributions

PW</WithStack>
    <WithOutStack>It's currently only possible to add to the status line from editors, views, and
the application's action bar advisor.

It should be possible to add to the status line independently from views and
editors, and without having to hardwire the contribution into the advisor.

The way action sets can add to the menus and toolbars provides a good model.
In fact, piggy-backing on the action set mechanism would afford a fair bit of
flexibility, since action sets can be associated with perspectives and parts,
filtered by activities, etc.
*** Bug 47849 has been marked as a duplicate of this bug. ***
(The RCP tag is there because RCP apps tend to push on this more than the IDE
use cases, though bug 47849 is a good example from the IDE stack.)

I know improvements here are being considered under the new commands support, so
piggybacking on action sets may not be the best choice, but whatever we do, we
shold allow the same kind of flexibility as action sets have.

Is there a workaround at this point?
One workaround would be for the app to roll its own extension point, and manage
contributions from the workbench advisor.  
Classes on the extension point could implement something like:
interface IStatusLineContributor {
  void fillStatusLine(IStatusLineManager);
}

The advisor could create a SubActionBars for each contributor, which wrappers
the main action bars.  activate() / deactivate() on the SubActionBars instance
can then be used to show/hide the contributions depending on context.

This approach means that all contributing plugins will be activated eagerly
though, but that's probably necessary in the case of status line contributions.
 They're more likely to be creating interesting controls, rather than just
actions that that can be described declaratively then activated for real later.

Is this covered by bug 36968 ?
Moving Dougs bugs
Assigning to component owner
PW

This item has been fixed/superceded by the menu contribution mechanism - bug 154130

Menu contributions allow controls to be contributed to trim and the status line.
PW

The bug referenced in comment #9 (bug 154130) is not fixed and also not scheduled to be fixed.  You spoke with authority that work has been done to address this - was it simply the wrong bug number?
(In reply to comment #10)
&gt; The bug referenced in comment #9 (bug 154130) is not fixed and also not
&gt; scheduled to be fixed.  You spoke with authority that work has been done to
&gt; address this - was it simply the wrong bug number?

Sorry, Ian, that bug (despite some of the rambling and randmo patches) the plan item for the menu contribution work (I know, not obvious).  It includes the new menus API as well as the work done in the org.eclipse.ui.menus extension point.  It covers the work that would allow an arbitrary control to be added to the status line that would not be tied to a view or editor.

There is more information available at http://wiki.eclipse.org/Menu_Contributions

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84735" />
    <CreationDate amount="2005-02-08 15:36:00 -0500" />
    <DupId amount="56964" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Comments popup during code-assist can be off the screen</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- open java a file and make sure the editor is all the way to the bottom of the</Line>
          <Line>screen</Line>
          <Line>- select a selection that provides code assist and where the list of completions</Line>
          <Line>are large and off the screen (or close), note that now the yellow popup showing</Line>
          <Line>the code comments is off the screen or mostly not readable.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build id: I20050202-0800

- open java a file and make sure the editor is all the way to the bottom of the
screen
- select a selection that provides code assist and where the list of completions
are large and off the screen (or close), note that now the yellow popup showing
the code comments is off the screen or mostly not readable.


*** This bug has been marked as a duplicate of 56964 ***</WithStack>
    <WithOutStack>Build id: I20050202-0800

- open java a file and make sure the editor is all the way to the bottom of the
screen
- select a selection that provides code assist and where the list of completions
are large and off the screen (or close), note that now the yellow popup showing
the code comments is off the screen or mostly not readable.


*** This bug has been marked as a duplicate of 56964 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84736" />
    <CreationDate amount="2005-02-08 15:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search engine erroneously reports "inaccurate" matches under JUnit plug-in test harness</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="singlecomment">
        <location start="405" end="480" />
        <code>// ======================================================================</code>
      </source_code>
      <source_code type="package">
        <location start="480" end="490" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="492" end="568" />
        <code>public class Annotation1 {
	public void foo() {
		Cell1 c= new Cell1();
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="596" end="644" />
        <code>class Cell1 {
	@Preliminary public Cell1() { }
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="645" end="724" />
        <code>// ==========================================================================</code>
      </source_code>
      <source_code type="functiondef">
        <location start="725" end="1346" />
        <code>SearchResultGroup[] findCallsTo(IMethod ctor, IJavaProject project) {
    RefactoringStatus status= new RefactoringStatus();
    SearchPattern pat= SearchPattern.createPattern(ctor,
                IJavaSearchConstants.REFERENCES,
                SearchUtils.GENERICS_AGNOSTIC_MATCH_RULE);
    final RefactoringSearchEngine2 engine= new RefactoringSearchEngine2(pat);

    engine.setFiltering(true, true);
    engine.setScope(createSearchScope(method, methodBinding, javaProject));
    engine.setStatus(status);
    engine.searchPattern(new NullProgressMonitor());

    return (SearchResultGroup[]) engine.getResults();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>For the program below, the refactoring Introduce Factory performs an exact 
search for references to the constructor Cell1() to find all call sites.

Under the JUnit plug-in test harness, the search engine produces results that 
are tagged "inaccurate". Under an ordinary run-time workbench, the results are 
tagged as "accurate".

The code that calls the search engine appears below the example program.

// ======================================================================
package p;

public class Annotation1 {
	public void foo() {
		Cell1 c= new Cell1();
	}
}
@interface Preliminary { }
class Cell1 {
	@Preliminary public Cell1() { }
}

// ==========================================================================

SearchResultGroup[] findCallsTo(IMethod ctor, IJavaProject project) {
    RefactoringStatus status= new RefactoringStatus();
    SearchPattern pat= SearchPattern.createPattern(ctor,
                IJavaSearchConstants.REFERENCES,
                SearchUtils.GENERICS_AGNOSTIC_MATCH_RULE);
    final RefactoringSearchEngine2 engine= new RefactoringSearchEngine2(pat);

    engine.setFiltering(true, true);
    engine.setScope(createSearchScope(method, methodBinding, javaProject));
    engine.setStatus(status);
    engine.searchPattern(new NullProgressMonitor());

    return (SearchResultGroup[]) engine.getResults();
}
Mea culpa. A typo in the testcase input source led to a mismatch between the CU 
name and the primary type name; hence the inaccurate results. There is no bug 
here. Sorry!
No problem. Closing.</WithStack>
    <WithOutStack>For the program below, the refactoring Introduce Factory performs an exact 
search for references to the constructor Cell1() to find all call sites.

Under the JUnit plug-in test harness, the search engine produces results that 
are tagged "inaccurate". Under an ordinary run-time workbench, the results are 
tagged as "accurate".

The code that calls the search engine appears below the example program.

// ======================================================================
package p;

public class Annotation1 {
	public void foo() {
		Cell1 c= new Cell1();
	}
}
@interface Preliminary { }
class Cell1 {
	@Preliminary public Cell1() { }
}

// ==========================================================================

SearchResultGroup[] findCallsTo(IMethod ctor, IJavaProject project) {
    RefactoringStatus status= new RefactoringStatus();
    SearchPattern pat= SearchPattern.createPattern(ctor,
                IJavaSearchConstants.REFERENCES,
                SearchUtils.GENERICS_AGNOSTIC_MATCH_RULE);
    final RefactoringSearchEngine2 engine= new RefactoringSearchEngine2(pat);

    engine.setFiltering(true, true);
    engine.setScope(createSearchScope(method, methodBinding, javaProject));
    engine.setStatus(status);
    engine.searchPattern(new NullProgressMonitor());

    return (SearchResultGroup[]) engine.getResults();
}
Mea culpa. A typo in the testcase input source led to a mismatch between the CU 
name and the primary type name; hence the inaccurate results. There is no bug 
here. Sorry!
No problem. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84737" />
    <CreationDate amount="2005-02-08 15:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>clicking Sash with DragDetect listener leaves cheese</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>- run the ControlExample, go to the Sash tab</Line>
          <Line>- turn on listening for DragDetect events</Line>
          <Line>- single-click the page's example horizontal sash (ie.- mouse down then up</Line>
          <Line>quickly, no drag), and you'll be left with a resize line on the Sash</Line>
          <Line>- if you do this without the DragDetect listener then the cheese is not left</Line>
          <Line>over</Line>
          <Line>Created attachment 17762</Line>
          <Line>cheese on the horizontal sash</Line>
          <Line>This is another reason to rework the mouse down framework and possibly do all</Line>
          <Line>the work of an emulated but non-portable widget in callWindowProc().  The</Line>
          <Line>super of Sash.WM_LBUTTONDOWN() either starts a drag or sends a fake mouse up</Line>
          <Line>that the sash doesn't know about after the call, hence cheese.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>- run the ControlExample, go to the Sash tab
- turn on listening for DragDetect events
- single-click the page's example horizontal sash (ie.- mouse down then up 
quickly, no drag), and you'll be left with a resize line on the Sash
- if you do this without the DragDetect listener then the cheese is not left 
over
Created attachment 17762
cheese on the horizontal sash
This is another reason to rework the mouse down framework and possibly do all 
the work of an emulated but non-portable widget in callWindowProc().  The 
super of Sash.WM_LBUTTONDOWN() either starts a drag or sends a fake mouse up 
that the sash doesn't know about after the call, hence cheese.</WithStack>
    <WithOutStack>- run the ControlExample, go to the Sash tab
- turn on listening for DragDetect events
- single-click the page's example horizontal sash (ie.- mouse down then up 
quickly, no drag), and you'll be left with a resize line on the Sash
- if you do this without the DragDetect listener then the cheese is not left 
over
Created attachment 17762
cheese on the horizontal sash
This is another reason to rework the mouse down framework and possibly do all 
the work of an emulated but non-portable widget in callWindowProc().  The 
super of Sash.WM_LBUTTONDOWN() either starts a drag or sends a fake mouse up 
that the sash doesn't know about after the call, hence cheese.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84738" />
    <CreationDate amount="2005-02-08 16:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Themes] Current theme preference should be made public</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Even though there is a setCurrentTheme() on ThemeManager, it could be good to 
make the theme preference public so people don't have to hard wire in their 
advisor the theme.
+1.  Exposing prefs as API, thereby allowing their defaults to be overridden via
the plugin_customization.ini mechanism, is more flexible than programmatic API.
E.g. different products on top of the same application can provide different
default values.

Is there anything more required than to move the constant to a public interface?
Unfortunately it's not that simple due to the fact that we store internal and
API prefs in different plug-in preference stores.  See bug 77369.
If you have any others thoughts for how to simplify this, please comment there.

I've done the following:

* moved the constant to IWorkbechPreferenceConstants
* moved initialization to the UI plugin
* changed references within WorkbenchThemeManager to use PrefUtils instead of
the WorkbenchPlugin preferences

The appearance preference page (which can set the theme) does not actually set
the preference.  It merely calls setTheme() on the theme manager and the manager
maintains preference state.


Verified in I20050330-0500</WithStack>
    <WithOutStack>Even though there is a setCurrentTheme() on ThemeManager, it could be good to 
make the theme preference public so people don't have to hard wire in their 
advisor the theme.
+1.  Exposing prefs as API, thereby allowing their defaults to be overridden via
the plugin_customization.ini mechanism, is more flexible than programmatic API.
E.g. different products on top of the same application can provide different
default values.

Is there anything more required than to move the constant to a public interface?
Unfortunately it's not that simple due to the fact that we store internal and
API prefs in different plug-in preference stores.  See bug 77369.
If you have any others thoughts for how to simplify this, please comment there.

I've done the following:

* moved the constant to IWorkbechPreferenceConstants
* moved initialization to the UI plugin
* changed references within WorkbenchThemeManager to use PrefUtils instead of
the WorkbenchPlugin preferences

The appearance preference page (which can set the theme) does not actually set
the preference.  It merely calls setTheme() on the theme manager and the manager
maintains preference state.


Verified in I20050330-0500</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84739" />
    <CreationDate amount="2005-02-08 16:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>uses an out_of_data example for workbench</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hi, open a eclipse workbench window, click Help--&gt; Help Contents--&gt; 
select "tips and tricks". In the "Quick Diff: ","Customizing the presentation 
of annotations " of contents table at right page, all discriptions for 
workbench uses the previous preference page table example, in which there's 
a "Workbench" item in stead of "General" .
(In reply to comment #0)
&gt; Hi, open a eclipse workbench window, click Help--&gt; Help Contents--&gt; 
&gt; select "tips and tricks". In the "Quick Diff: ","Customizing the presentation 
&gt; of annotations " of contents table at right page, all discriptions for 
&gt; workbench uses the previous preference page table example, in which there's 
&gt; a "Workbench" item in stead of "General" .

This doesn't seem to be a report of a problem with the ECF documentation, but
rather a problem with the Workbench User Guide Tips and Tricks.  Is that right?
 If this isn't specific to the ECF docs we need to forward onto the platform
documentation bug areas.  Please let me know.


Yes this is platform doc
This has been fixed.

Thanks,
AC</WithStack>
    <WithOutStack>Hi, open a eclipse workbench window, click Help--&gt; Help Contents--&gt; 
select "tips and tricks". In the "Quick Diff: ","Customizing the presentation 
of annotations " of contents table at right page, all discriptions for 
workbench uses the previous preference page table example, in which there's 
a "Workbench" item in stead of "General" .
(In reply to comment #0)
&gt; Hi, open a eclipse workbench window, click Help--&gt; Help Contents--&gt; 
&gt; select "tips and tricks". In the "Quick Diff: ","Customizing the presentation 
&gt; of annotations " of contents table at right page, all discriptions for 
&gt; workbench uses the previous preference page table example, in which there's 
&gt; a "Workbench" item in stead of "General" .

This doesn't seem to be a report of a problem with the ECF documentation, but
rather a problem with the Workbench User Guide Tips and Tricks.  Is that right?
 If this isn't specific to the ECF docs we need to forward onto the platform
documentation bug areas.  Please let me know.


Yes this is platform doc
This has been fixed.

Thanks,
AC</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84740" />
    <CreationDate amount="2005-02-08 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>crash on windows xp korean</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="1261" end="2167" />
        <code>public static void main(String[] args) {
	int hwnd = OS.CreateWindowEx (
			0,
			new TCHAR (0, "#32770", true),
			null,
			OS.WS_VISIBLE | OS.WS_OVERLAPPEDWINDOW,
			OS.CW_USEDEFAULT, 0, OS.CW_USEDEFAULT, 0,
			0,
			0,
			OS.GetModuleHandle (null),
			null);
	int hIMC = OS.ImmGetContext (hwnd);
	if (hIMC != 0) {
		RECT rect = new RECT ();
		OS.GetClientRect (hwnd, rect);
		COMPOSITIONFORM lpCompForm = new COMPOSITIONFORM ();
		lpCompForm.dwStyle = OS.CFS_RECT;
		lpCompForm.x = rect.right - 1;
		lpCompForm.y = rect.top;
		lpCompForm.left = rect.left;
		lpCompForm.right = rect.right;
		lpCompForm.top = rect.top;
		lpCompForm.bottom = rect.bottom;
		OS.ImmSetCompositionWindow (hIMC, lpCompForm);
		OS.ImmReleaseContext (hwnd, hIMC);
	}	
	OS.ShowWindow (hwnd, OS.SW_SHOW);	
	MSG msg = new MSG ();
	while (OS.GetMessage (msg, 0, 0, 0)) {
		OS.TranslateMessage (msg);
		OS.DispatchMessage (msg);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On a Windows XP Korean enable the option:
"Extend support of advanced text services to all programs"
Under Control Panel-&gt;Regional and Language Options-&gt;Languages-&gt;Details-
&gt;Advance.

Run Eclipse, open a editor (java editor or text editor), type a line long 
enough of korean characters causing the editor to scroll.
Eclipse crashes
Created attachment 17767
stacktrace
Brian: We don't have a fix for this bug.

SWT uses ImmSetCompositionWindow to set the position of the composition window 
and the client area. The position used is the current position of the caret 
and client area is the very client area of the window associated to the ime.

On Windows Korean, with Extend support of advanced text on, the call 
ImmSetCompositionWindow crashes the application when the diference of the 
position.x and clientArea.width is smaller than the width of the composition 
window.

Details:
-I found no API to determine if 'Extend support of advanced text' is on or off.
-I found no API to get the width of the composition window.
-Not setting the client area doesn't fix the problem.
-The expect behavior would be the IME manager to wrap the text in the 
composition window (but it crashes instead).
This simple "C" test case can be used to recreate the problem:

public static void main(String[] args) {
	int hwnd = OS.CreateWindowEx (
			0,
			new TCHAR (0, "#32770", true),
			null,
			OS.WS_VISIBLE | OS.WS_OVERLAPPEDWINDOW,
			OS.CW_USEDEFAULT, 0, OS.CW_USEDEFAULT, 0,
			0,
			0,
			OS.GetModuleHandle (null),
			null);
	int hIMC = OS.ImmGetContext (hwnd);
	if (hIMC != 0) {
		RECT rect = new RECT ();
		OS.GetClientRect (hwnd, rect);
		COMPOSITIONFORM lpCompForm = new COMPOSITIONFORM ();
		lpCompForm.dwStyle = OS.CFS_RECT;
		lpCompForm.x = rect.right - 1;
		lpCompForm.y = rect.top;
		lpCompForm.left = rect.left;
		lpCompForm.right = rect.right;
		lpCompForm.top = rect.top;
		lpCompForm.bottom = rect.bottom;
		OS.ImmSetCompositionWindow (hIMC, lpCompForm);
		OS.ImmReleaseContext (hwnd, hIMC);
	}	
	OS.ShowWindow (hwnd, OS.SW_SHOW);	
	MSG msg = new MSG ();
	while (OS.GetMessage (msg, 0, 0, 0)) {
		OS.TranslateMessage (msg);
		OS.DispatchMessage (msg);
	}
}

Run the snippet, turn the IME on, and type something.
I can't see how we can work around this other than ensuring that the IME 
doesn't intersect the client area which is why native applications don't 
crash.  That's a ton of changes for 3.0.x.

FH to investigate for 3.1.
*** Bug 39352 has been marked as a duplicate of this bug. ***
I released a workaround for this problem.
Setting the "Extend support of advanced text services to all programs"
flag  actually enables Text Services Framework on 'legacy applications or 
controls that are not aware of TSF'
See:
http://msdn.microsoft.com/library/en-us/tsf/tsf/new_features_in_tsf.asp
The workaround is disable (on korean windows xp) this feature calling 
ImmDisableTextFrameService for the current thread.

Brian, I'm closing this PR as Fixed 3.1 M7. Please, if you need Text Services 
Framework (input devices including keyboard, pen, and microphonework) working 
on WinXP Korean open another bug report.
Note: we change the fix to run only on windows xp and windows xp service pack 1. We verified that it works on windows xp service pack 2 without the fix.
see bug 164493 for more details.</WithStack>
    <WithOutStack>On a Windows XP Korean enable the option:
"Extend support of advanced text services to all programs"
Under Control Panel-&gt;Regional and Language Options-&gt;Languages-&gt;Details-
&gt;Advance.

Run Eclipse, open a editor (java editor or text editor), type a line long 
enough of korean characters causing the editor to scroll.
Eclipse crashes
Created attachment 17767
stacktrace
Brian: We don't have a fix for this bug.

SWT uses ImmSetCompositionWindow to set the position of the composition window 
and the client area. The position used is the current position of the caret 
and client area is the very client area of the window associated to the ime.

On Windows Korean, with Extend support of advanced text on, the call 
ImmSetCompositionWindow crashes the application when the diference of the 
position.x and clientArea.width is smaller than the width of the composition 
window.

Details:
-I found no API to determine if 'Extend support of advanced text' is on or off.
-I found no API to get the width of the composition window.
-Not setting the client area doesn't fix the problem.
-The expect behavior would be the IME manager to wrap the text in the 
composition window (but it crashes instead).
This simple "C" test case can be used to recreate the problem:

public static void main(String[] args) {
	int hwnd = OS.CreateWindowEx (
			0,
			new TCHAR (0, "#32770", true),
			null,
			OS.WS_VISIBLE | OS.WS_OVERLAPPEDWINDOW,
			OS.CW_USEDEFAULT, 0, OS.CW_USEDEFAULT, 0,
			0,
			0,
			OS.GetModuleHandle (null),
			null);
	int hIMC = OS.ImmGetContext (hwnd);
	if (hIMC != 0) {
		RECT rect = new RECT ();
		OS.GetClientRect (hwnd, rect);
		COMPOSITIONFORM lpCompForm = new COMPOSITIONFORM ();
		lpCompForm.dwStyle = OS.CFS_RECT;
		lpCompForm.x = rect.right - 1;
		lpCompForm.y = rect.top;
		lpCompForm.left = rect.left;
		lpCompForm.right = rect.right;
		lpCompForm.top = rect.top;
		lpCompForm.bottom = rect.bottom;
		OS.ImmSetCompositionWindow (hIMC, lpCompForm);
		OS.ImmReleaseContext (hwnd, hIMC);
	}	
	OS.ShowWindow (hwnd, OS.SW_SHOW);	
	MSG msg = new MSG ();
	while (OS.GetMessage (msg, 0, 0, 0)) {
		OS.TranslateMessage (msg);
		OS.DispatchMessage (msg);
	}
}

Run the snippet, turn the IME on, and type something.
I can't see how we can work around this other than ensuring that the IME 
doesn't intersect the client area which is why native applications don't 
crash.  That's a ton of changes for 3.0.x.

FH to investigate for 3.1.
*** Bug 39352 has been marked as a duplicate of this bug. ***
I released a workaround for this problem.
Setting the "Extend support of advanced text services to all programs"
flag  actually enables Text Services Framework on 'legacy applications or 
controls that are not aware of TSF'
See:
http://msdn.microsoft.com/library/en-us/tsf/tsf/new_features_in_tsf.asp
The workaround is disable (on korean windows xp) this feature calling 
ImmDisableTextFrameService for the current thread.

Brian, I'm closing this PR as Fixed 3.1 M7. Please, if you need Text Services 
Framework (input devices including keyboard, pen, and microphonework) working 
on WinXP Korean open another bug report.
Note: we change the fix to run only on windows xp and windows xp service pack 1. We verified that it works on windows xp service pack 2 without the fix.
see bug 164493 for more details.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84741" />
    <CreationDate amount="2005-02-08 16:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Eclipse Forms] Tab traversal broken with '&lt;control&gt;' tag</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When controls are added to FormText using the new &lt;control&gt; tag, tab traversal 
does not follow the traversable segments in the text. Instead, once it goes 
into the control, it returns to the parent of FormText, only to return back 
into it and continue after the control.
Fixed and released.</WithStack>
    <WithOutStack>When controls are added to FormText using the new &lt;control&gt; tag, tab traversal 
does not follow the traversable segments in the text. Instead, once it goes 
into the control, it returns to the parent of FormText, only to return back 
into it and continue after the control.
Fixed and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84742" />
    <CreationDate amount="2005-02-08 16:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Changing problem severity reporting does not change reporting in open editors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800

Changing the problem severity in the Ant editor used to trigger a reconcile of 
the open Ant editors to update the problem status.

This is no longer working.

As well we might not need to re-reconcile...could we just walk the problems 
and update their severity?
This problem would show up if you ever changed the preferences when no Ant 
Editors (AntModels) existed. The code relied on the model resetting a dummy 
pref value. Not the preference page always resets the pref value so when there 
are no models the change will be noticed the next time the user edits the 
prefs.

Fixed in AntEditorPreferencePage.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks. Build notes updated.</WithStack>
    <WithOutStack>I20050208-0800

Changing the problem severity in the Ant editor used to trigger a reconcile of 
the open Ant editors to update the problem status.

This is no longer working.

As well we might not need to re-reconcile...could we just walk the problems 
and update their severity?
This problem would show up if you ever changed the preferences when no Ant 
Editors (AntModels) existed. The code relied on the model resetting a dummy 
pref value. Not the preference page always resets the pref value so when there 
are no models the change will be noticed the next time the user edits the 
prefs.

Fixed in AntEditorPreferencePage.
Please verify Luc.
Verified.
Please update the build notes, Darin S.
Thanks. Build notes updated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84743" />
    <CreationDate amount="2005-02-08 16:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][compiler] Cast between two interfaces doesn't need to check compatibility of method return types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="58" end="71" />
        <code>int foo();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="88" end="104" />
        <code>String foo();</code>
      </source_code>
      <source_code type="class">
        <location start="109" end="303" />
        <code>public class X implements I {
   public int foo() {
 	return 0;
   }
   public static void main(String[] args) {
         I i = new X();
        J j = (J) i;
        System.out.println(j);
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In 1.5, the following code should compile:

interface I {
   int foo();
}
interface J {
   String foo();
}
 
public class X implements I {
   public int foo() {
 	return 0;
   }
   public static void main(String[] args) {
         I i = new X();
        J j = (J) i;
        System.out.println(j);
  }
}

It will throw a ClassCastException at runtime.

In 1.4, the code would have failed at compile time.
Same result with == and != operators.
Added GenericTypeTest#test498. Also tuned CastTest to add nuance based on
compliance level.

Fixed
Verified in I20050215-2300</WithStack>
    <WithOutStack>In 1.5, the following code should compile:

interface I {
   int foo();
}
interface J {
   String foo();
}
 
public class X implements I {
   public int foo() {
 	return 0;
   }
   public static void main(String[] args) {
         I i = new X();
        J j = (J) i;
        System.out.println(j);
  }
}

It will throw a ClassCastException at runtime.

In 1.4, the code would have failed at compile time.
Same result with == and != operators.
Added GenericTypeTest#test498. Also tuned CastTest to add nuance based on
compliance level.

Fixed
Verified in I20050215-2300</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84744" />
    <CreationDate amount="2005-02-08 17:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Restructure org.eclipse.platform.doc.user</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Our RCP application only requires two help topics from 
org.eclipse.platform.doc.user:  "Working with Cheat Sheets"  (ref-
cheatsheets.htm), and Help on the Preferences Dialog (ref-72.htm).

We are trying to keep the size of our RCP distribution down, and 
org.eclipse.platform.doc.user is 4.85MB and the corresponding NL fragment is 
6.21MB.

Would it be possible to refactor org.eclipse.platform.doc.user along 
functional area lines so that we wouldn't have to redistribute the full 11MB 
of these large files?
*** Bug 247453 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Our RCP application only requires two help topics from 
org.eclipse.platform.doc.user:  "Working with Cheat Sheets"  (ref-
cheatsheets.htm), and Help on the Preferences Dialog (ref-72.htm).

We are trying to keep the size of our RCP distribution down, and 
org.eclipse.platform.doc.user is 4.85MB and the corresponding NL fragment is 
6.21MB.

Would it be possible to refactor org.eclipse.platform.doc.user along 
functional area lines so that we wouldn't have to redistribute the full 11MB 
of these large files?
*** Bug 247453 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84745" />
    <CreationDate amount="2005-02-08 17:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Change title from "Eclipse Updates"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Our RCP application includes the update manager.  Most update manager dialog 
titles appear reasonably generic, but the message that appears when Automatic 
Updates notifies the user that a new update is available has the 
title "Eclipse Updates".  Can this be retitled to something without the 
word "Eclipse"?  Perhaps pick up the name of the primary feature?
Created attachment 17770
"Eclipse Updates" dialog box
fixed.
The dialog title is now "Automatic Updates".</WithStack>
    <WithOutStack>Our RCP application includes the update manager.  Most update manager dialog 
titles appear reasonably generic, but the message that appears when Automatic 
Updates notifies the user that a new update is available has the 
title "Eclipse Updates".  Can this be retitled to something without the 
word "Eclipse"?  Perhaps pick up the name of the primary feature?
Created attachment 17770
"Eclipse Updates" dialog box
fixed.
The dialog title is now "Automatic Updates".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84746" />
    <CreationDate amount="2005-02-08 17:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[1.5][API] Extract superclass and superinterfaces from generic type signature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The class jdt.core.Signature provides static methods to extract all information
contained in signatures, except the superclass and superinterfaces from a
generic type signature.
Jdt-debug could use this method(s).
Created attachment 17773
patch for org.eclipse.jdt.core.Signature

The patch adds 2 methods to Signature, one with a String as parameter, one with
a char[].
The implementation jumps over the type parameters part, and returns all the
following type signatures in an array.
Created attachment 18262
patch for org.eclipse.jdt.core.Signature

Fixed the patch.
It was returning an empty list if the generic signature didn't have type
parameters.
Can you live without these API for 3.1, and we will add them after ?
Deferring post 3.1 (API frozen)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The class jdt.core.Signature provides static methods to extract all information
contained in signatures, except the superclass and superinterfaces from a
generic type signature.
Jdt-debug could use this method(s).
Created attachment 17773
patch for org.eclipse.jdt.core.Signature

The patch adds 2 methods to Signature, one with a String as parameter, one with
a char[].
The implementation jumps over the type parameters part, and returns all the
following type signatures in an array.
Created attachment 18262
patch for org.eclipse.jdt.core.Signature

Fixed the patch.
It was returning an empty list if the generic signature didn't have type
parameters.
Can you live without these API for 3.1, and we will add them after ?
Deferring post 3.1 (API frozen)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84747" />
    <CreationDate amount="2005-02-08 18:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Widget is disposed error updating ProblemTableViewer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232398">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2839)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2762)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2733)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:393)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.getData(Widget.java:446)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.viewsupport.ProblemTableViewer.doUpdateItem(ProblemTableViewer.java:75)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.viewsupport.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:73)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.viewsupport.ResourceToItemsMapper.resourceChanged(ResourceToItemsMapper.java:67)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.viewsupport.ProblemTableViewer.handleLabelProviderChanged(ProblemTableViewer.java:123)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:74)</Frame>
          <Frame depth="11">org.eclipse.jdt.ui.ProblemsLabelDecorator.fireProblemsChanged(ProblemsLabelDecorator.java:357)</Frame>
          <Frame depth="12">org.eclipse.jdt.ui.ProblemsLabelDecorator.access$0(ProblemsLabelDecorator.java:352)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged(ProblemsLabelDecorator.java:332)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager$1.run(ProblemMarkerManager.java:176)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2855)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2519)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="22">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="24">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="25">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="29">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800
I had just done a refactoring that had moved a static method to another class. 
The refactoring had introduced errors in the moved methods as it referenced 
private static variables in the original location. I received the warning 
dialog about these errors but continued.
On the next save:

org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:2839)
	at org.eclipse.swt.SWT.error(SWT.java:2762)
	at org.eclipse.swt.SWT.error(SWT.java:2733)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:393)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)
	at org.eclipse.swt.widgets.Widget.getData(Widget.java:446)
	at 
org.eclipse.jdt.internal.ui.viewsupport.ProblemTableViewer.doUpdateItem
(ProblemTableViewer.java:75)
	at 
org.eclipse.jdt.internal.ui.viewsupport.ResourceToItemsMapper.updateItem
(ResourceToItemsMapper.java:73)
	at 
org.eclipse.jdt.internal.ui.viewsupport.ResourceToItemsMapper.resourceChanged
(ResourceToItemsMapper.java:67)
	at 
org.eclipse.jdt.internal.ui.viewsupport.ProblemTableViewer.handleLabelProviderC
hanged(ProblemTableViewer.java:123)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged
(ContentViewer.java:74)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.fireProblemsChanged
(ProblemsLabelDecorator.java:357)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.access$0
(ProblemsLabelDecorator.java:352)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged
(ProblemsLabelDecorator.java:332)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager$1.run
(ProblemMarkerManager.java:176)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2519)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:299)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:102)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:227)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:281)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
	at org.eclipse.core.launcher.Main.run(Main.java:817)
	at org.eclipse.core.launcher.Main.main(Main.java:801)
Martin, can you please investigate.
fixed &gt; 20050210
*** Bug 84909 has been marked as a duplicate of this bug. ***
*** Bug 84949 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I20050208-0800
I had just done a refactoring that had moved a static method to another class. 
The refactoring had introduced errors in the moved methods as it referenced 
private static variables in the original location. I received the warning 
dialog about these errors but continued.
On the next save:


Martin, can you please investigate.
fixed &gt; 20050210
*** Bug 84909 has been marked as a duplicate of this bug. ***
*** Bug 84949 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84748" />
    <CreationDate amount="2005-02-08 18:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException during creation of debug configuration for Jboss</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232401">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.updateServerConfigurations(HomeTab.java:328)</Frame>
          <Frame depth="1">org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.access$1(HomeTab.java:311)</Frame>
          <Frame depth="2">org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab$1.modifyText(HomeTab.java:138)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:187)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Text.setText(Text.java:1563)</Frame>
          <Frame depth="9">org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.updateHomedirFromConfig(HomeTab.java:286)</Frame>
          <Frame depth="10">org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.initializeFrom(HomeTab.java:219)</Frame>
          <Frame depth="11">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:86)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.displayInstanceTabs(LaunchConfigurationTabGroupViewer.java:540)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer$5.run(LaunchConfigurationTabGroupViewer.java:473)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:490)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:454)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:775)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog$2.selectionChanged(LaunchConfigurationsDialog.java:585)</Frame>
          <Frame depth="19">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="22">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="23">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1394)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1093)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:356)</Frame>
          <Frame depth="26">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationView.launchConfigurationRemoved(LaunchConfigurationView.java:284)</Frame>
          <Frame depth="27">org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.run(LaunchManager.java:1484)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="30">org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.notify(LaunchManager.java:1505)</Frame>
          <Frame depth="31">org.eclipse.debug.internal.core.LaunchManager.launchConfigurationDeleted(LaunchManager.java:736)</Frame>
          <Frame depth="32">org.eclipse.debug.internal.core.LaunchConfiguration.delete(LaunchConfiguration.java:317)</Frame>
          <Frame depth="33">org.eclipse.debug.internal.ui.launchConfigurations.DeleteLaunchConfigurationAction.performAction(DeleteLaunchConfigurationAction.java:65)</Frame>
          <Frame depth="34">org.eclipse.debug.internal.ui.launchConfigurations.AbstractLaunchConfigurationAction$1.run(AbstractLaunchConfigurationAction.java:103)</Frame>
          <Frame depth="35">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="36">org.eclipse.debug.internal.ui.launchConfigurations.AbstractLaunchConfigurationAction.run(AbstractLaunchConfigurationAction.java:106)</Frame>
          <Frame depth="37">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:166)</Frame>
          <Frame depth="38">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="39">org.eclipse.jface.action.ActionContributionItem.access$500(ActionContributionItem.java:47)</Frame>
          <Frame depth="40">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)</Frame>
          <Frame depth="45">org.eclipse.jface.window.Window.runEventLoop(Window.java:668)</Frame>
          <Frame depth="46">org.eclipse.jface.window.Window.open(Window.java:648)</Frame>
          <Frame depth="47">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:419)</Frame>
          <Frame depth="48">org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:381)</Frame>
          <Frame depth="49">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="50">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:385)</Frame>
          <Frame depth="51">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:327)</Frame>
          <Frame depth="52">org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:80)</Frame>
          <Frame depth="53">org.eclipse.jface.action.Action.runWithEvent(Action.java:881)</Frame>
          <Frame depth="54">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="55">org.eclipse.jface.action.ActionContributionItem.access$500(ActionContributionItem.java:47)</Frame>
          <Frame depth="56">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="64">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="66">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="67">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="69">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="71">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="72">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In the debug configuration dialog occures a dialog box:
“An error has occurred. See error log for more details” (Log file details at 
the bottom of this description). If I do not change the Name of the 
configuration the error occurs when I try to select it. The error immediately 
occurs, when I change the name of the configuration. I am using a gentoo box 
with amd64 and the standard emerged packages:
blackdown-jdk-1.4.2.01
Jboss-ide 1.4.1-e30
eclipse-3.0.1-r2 

!ENTRY org.eclipse.core.runtime 4 2 Feb 08, 2005 23:26:49.608
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NullPointerException
	at 
org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.updateServerConfigurati
ons(HomeTab.java:328)
	at org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.access$1
(HomeTab.java:311)
	at org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab$1.modifyText
(HomeTab.java:138)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:187)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Text.setText(Text.java:1563)
	at 
org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.updateHomedirFromConfig
(HomeTab.java:286)
	at 
org.jboss.ide.eclipse.launcher.ui.configuration.HomeTab.initializeFrom
(HomeTab.java:219)
	at 
org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom
(AbstractLaunchConfigurationTabGroup.java:86)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupV
iewer.displayInstanceTabs(LaunchConfigurationTabGroupViewer.java:540)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupV
iewer$5.run(LaunchConfigurationTabGroupViewer.java:473)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupV
iewer.inputChanged(LaunchConfigurationTabGroupViewer.java:490)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupV
iewer.setInput(LaunchConfigurationTabGroupViewer.java:454)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.h
andleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:775)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog$2
.selectionChanged(LaunchConfigurationsDialog.java:585)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:157)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1394)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1093)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:356)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationView.laun
chConfigurationRemoved(LaunchConfigurationView.java:284)
	at 
org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.run
(LaunchManager.java:1484)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at 
org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.notify
(LaunchManager.java:1505)
	at 
org.eclipse.debug.internal.core.LaunchManager.launchConfigurationDeleted
(LaunchManager.java:736)
	at org.eclipse.debug.internal.core.LaunchConfiguration.delete
(LaunchConfiguration.java:317)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.DeleteLaunchConfigurationAct
ion.performAction(DeleteLaunchConfigurationAction.java:65)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.AbstractLaunchConfigurationA
ction$1.run(AbstractLaunchConfigurationAction.java:103)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.AbstractLaunchConfigurationA
ction.run(AbstractLaunchConfigurationAction.java:106)
	at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent
(BaseSelectionListenerAction.java:166)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:915)
	at org.eclipse.jface.action.ActionContributionItem.access$500
(ActionContributionItem.java:47)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(ActionContributionItem.java:785)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)
	at org.eclipse.jface.window.Window.open(Window.java:648)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.o
pen(LaunchConfigurationsDialog.java:419)
	at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:381)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at 
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup
(DebugUITools.java:385)
	at 
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup
(DebugUITools.java:327)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run
(OpenLaunchDialogAction.java:80)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:915)
	at org.eclipse.jface.action.ActionContributionItem.access$500
(ActionContributionItem.java:47)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(ActionContributionItem.java:785)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:96)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)
The NPE is coming from an jboss class. Suggest you file the bug where you got your jboss plugin.</WithStack>
    <WithOutStack>In the debug configuration dialog occures a dialog box:
“An error has occurred. See error log for more details” (Log file details at 
the bottom of this description). If I do not change the Name of the 
configuration the error occurs when I try to select it. The error immediately 
occurs, when I change the name of the configuration. I am using a gentoo box 
with amd64 and the standard emerged packages:
blackdown-jdk-1.4.2.01
Jboss-ide 1.4.1-e30
eclipse-3.0.1-r2 

!ENTRY org.eclipse.core.runtime 4 2 Feb 08, 2005 23:26:49.608
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0

The NPE is coming from an jboss class. Suggest you file the bug where you got your jboss plugin.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84749" />
    <CreationDate amount="2005-02-08 18:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Parser2] C++ :  isConst not set on function declarator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="0" end="28" />
        <code>class A { void f() const; };</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>class A { void f() const; };
void A::f() const { }

The function declarator on the function definition does not have isConst() == true.
Applied to head.</WithStack>
    <WithOutStack>class A { void f() const; };
void A::f() const { }

The function declarator on the function definition does not have isConst() == true.
Applied to head.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84750" />
    <CreationDate amount="2005-02-08 18:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[perf] BinaryMethod.getParameterNames does not follow IMethod API contract</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>- Fix the spec to say that the attached source is used, and provide another</Line>
          <Line>method (e.g. getRawParameterNames()) that return the invented named for binary</Line>
          <Line>methods</Line>
          <Line>- Fix the implementation, and provide another method (e.g.</Line>
          <Line>getSourceParameterNames()) that return the names from the attached source</Line>
          <Line>Given the APIs docs., we will vote for the first option, as to not break those</Line>
          <Line>that are relying on the current implementation.</Line>
          <Line>We now calling this in a lazy manner, for which time we will always want the</Line>
          <Line>src. name.</Line>
          <Line>Jérôme,</Line>
          <Line>Now that bug 110173 is fixed, it would be possible to get the parameter names</Line>
          <Line>from the attached javadoc.</Line>
          <Line>I will attach a patch for this.</Line>
          <Line>Created attachment 29699</Line>
          <Line>Proposed patch for parameter names from attached javadoc</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>See bug 84728.

The IMethod.getParameterNames API documentation says, "Returns the names of 
parameters in this method. For binary types, these names are invented 
as 'arg'+i, where i starts at 1 (even if source is associated with the 
binary)."

The last part is not true (see 
org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames). The JVE uses 
this API to retrieve parameter names and the invocations associated with the 
rt.jar reads in 23.6M of data out of src.zip and costs us a considerable 
performance hit. Note that the src.zip file itself is only 11.8M, so 
apparently the JDT is reading it multiple times.
Note: The above data was collected with FileMon, available at 
http://www.sysinternals.com/ntw2k/source/filemon.shtml.  It is a very easy to 
use utility for capturing I/O events.
I see 2 ways to solve this problem:
- Fix the spec to say that the attached source is used, and provide another
method (e.g. getRawParameterNames()) that return the invented named for binary
methods
- Fix the implementation, and provide another method (e.g.
getSourceParameterNames()) that return the names from the attached source
Given the APIs docs., we will vote for the first option, as to not break those
that are relying on the current implementation.
We now calling this in a lazy manner, for which time we will always want the
src. name.
Jérôme,
Now that bug 110173 is fixed, it would be possible to get the parameter names
from the attached javadoc.
I will attach a patch for this.
Created attachment 29699
Proposed patch for parameter names from attached javadoc

Now we simply need to add the getRawParameterNames() throws JavaModelException
method and this PR can be closed.
Once this is done, let me know. I have some regression tests that could be
enabled in the AttachedJavadocTests suite.
Created attachment 29719
Proposed patch for parameter names from attached javadoc

I changed the API to reflect the fact that the naming starts at arg0 and not
arg1, when no name can be retrieved. This is the actual behavior.
Applied patch (thanks Olivier) and added IMethod#getRawParameterNames().
Added tests ClassFileTests#testParameterNames01/02 and testRawParameterNames01/02.
Verified for 3.2 M4 using build I20051212-0010</WithStack>
    <WithOutStack>See bug 84728.

The IMethod.getParameterNames API documentation says, "Returns the names of 
parameters in this method. For binary types, these names are invented 
as 'arg'+i, where i starts at 1 (even if source is associated with the 
binary)."

The last part is not true (see 
org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames). The JVE uses 
this API to retrieve parameter names and the invocations associated with the 
rt.jar reads in 23.6M of data out of src.zip and costs us a considerable 
performance hit. Note that the src.zip file itself is only 11.8M, so 
apparently the JDT is reading it multiple times.
Note: The above data was collected with FileMon, available at 
http://www.sysinternals.com/ntw2k/source/filemon.shtml.  It is a very easy to 
use utility for capturing I/O events.
I see 2 ways to solve this problem:
- Fix the spec to say that the attached source is used, and provide another
method (e.g. getRawParameterNames()) that return the invented named for binary
methods
- Fix the implementation, and provide another method (e.g.
getSourceParameterNames()) that return the names from the attached source
Given the APIs docs., we will vote for the first option, as to not break those
that are relying on the current implementation.
We now calling this in a lazy manner, for which time we will always want the
src. name.
Jérôme,
Now that bug 110173 is fixed, it would be possible to get the parameter names
from the attached javadoc.
I will attach a patch for this.
Created attachment 29699
Proposed patch for parameter names from attached javadoc

Now we simply need to add the getRawParameterNames() throws JavaModelException
method and this PR can be closed.
Once this is done, let me know. I have some regression tests that could be
enabled in the AttachedJavadocTests suite.
Created attachment 29719
Proposed patch for parameter names from attached javadoc

I changed the API to reflect the fact that the naming starts at arg0 and not
arg1, when no name can be retrieved. This is the actual behavior.
Applied patch (thanks Olivier) and added IMethod#getRawParameterNames().
Added tests ClassFileTests#testParameterNames01/02 and testRawParameterNames01/02.
Verified for 3.2 M4 using build I20051212-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84751" />
    <CreationDate amount="2005-02-08 18:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Adapt console hyperlinks to use TextViewer Hyperlink support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>TextViewer now supports hyperlinks through IHyperlinkDetector and IHyperlinkPresenter. Should 
investigate using this support in the console plugin.
The TextViewer's HyperlinkManager does not bother to detect hyperlinks unless the viewer's text 
widget has focus. This is undesirable for the console where we'd like to detect hyperlinks all the time so 
that stack traces can be followed easily (ie single click, instead of click to activate console view, then 
click to follow the hyperlink).
text's hyperlink does not support linkEntered() and linkExited(). We would still need to listen to mouse 
events to support.
not going to make it for M5.
Does not have all the features we need.</WithStack>
    <WithOutStack>TextViewer now supports hyperlinks through IHyperlinkDetector and IHyperlinkPresenter. Should 
investigate using this support in the console plugin.
The TextViewer's HyperlinkManager does not bother to detect hyperlinks unless the viewer's text 
widget has focus. This is undesirable for the console where we'd like to detect hyperlinks all the time so 
that stack traces can be followed easily (ie single click, instead of click to activate console view, then 
click to follow the hyperlink).
text's hyperlink does not support linkEntered() and linkExited(). We would still need to listen to mouse 
events to support.
not going to make it for M5.
Does not have all the features we need.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84752" />
    <CreationDate amount="2005-02-08 19:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>CastCastException in SynchronizeViewWorkbenchPart</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="128" end="203" />
        <code>/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="204" end="385" />
        <code>public boolean equals(Object obj) {
		return (obj instanceof SynchronizeViewWorkbenchPart) &amp;&amp;
		participant.equals(((SynchronizeViewWorkbenchPart)participant).getParticipant());
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>equals() will result in a ClassCastException; 

	private ISynchronizeParticipant participant;
	private IWorkbenchPartSite site;
	
	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	public boolean equals(Object obj) {
		return (obj instanceof SynchronizeViewWorkbenchPart) &amp;&amp;
		participant.equals(((SynchronizeViewWorkbenchPart)participant).getParticipant());
	}

It would seem that a fix is a simple matter of casting obj instead of
participant, since the instanceof check in on obj.
Fix released to HEAD</WithStack>
    <WithOutStack>equals() will result in a ClassCastException; 

	private ISynchronizeParticipant participant;
	private IWorkbenchPartSite site;
	
	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	public boolean equals(Object obj) {
		return (obj instanceof SynchronizeViewWorkbenchPart) &amp;&amp;
		participant.equals(((SynchronizeViewWorkbenchPart)participant).getParticipant());
	}

It would seem that a fix is a simple matter of casting obj instead of
participant, since the instanceof check in on obj.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84753" />
    <CreationDate amount="2005-02-08 20:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Intro] Intro should define its own URL scheme and not use http URLs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Intro triggers actions using http URLs on which it needs to do special 
treatments (I doubt they are being interpreted as is by the browser :-).
Moreover those URLs are invalid http URLs.

In doing that intro sets a bad precedent (since it is recommended to use those 
and they are some way APIs), whereas a new URL scheme should have been created.
Pascal,
why do you say intro urls "are invalid http URLs". They are valid http urls. 
bogus host, but a valid url. 
The reason we did not create our own scheme is because a browser may/maynot 
generate a "navigate" event when a user clicks on a link in an http page. If 
it is a custom url, the browser may decide to ignore it and not generate the 
event. 

Chris,
how does IE handle this? If I created a new "intro://runAction" schema would I 
still get navigation call backs from a LocationListerener? 





The mac ignores these links. That's why Intro currently have to use http:// 
even if they don't use the Browser for the Welcome page on the Mac at the 
moment.
These links are implementation details. They should not be part of any form of 
API.
correction Chris, these urls *are* indeed apis. End users of intro use these 
urls to run intro predefined actions and to interact with the workbench. 

Are you saying that IE on win32 does generate a navigate event for a custom 
URL? I thought it did not? would 
&lt;a href="javascript:alert('an alert box')"&gt;JavaScript url test&lt;/a&gt; 
be detected by the location listener?

Even if windows works, we need a generic design. We cant use custom urls on 
win32 and http:// urls on Mac. 


Here is the history of the suggestion to use http:// for 'action' links.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=47266#c4

http:// is the most solid and portable solution at the moment.

I was just wondering if it would have been better to not make the actual 
http:// API but rather give an API such as:

getAction(Type.OPEN_WELCOME) // return http://org.eclipse.welcome/welcome in 
current build / may change in the future

So that the scheme can be changed in the future for any reason. But since it's 
already API, never mind this note.
again, correction Chris :-), the url is used as as "api" in an HTML page, as 
the value for anchor href attributes, so how can we use a method call? 
The http://org.eclipse.ui.intro/runAction?arg.. is used as a string in an xml 
markup file or a static html page, so the user has not access to code! 

Pascal,
any thoughts on the original defect? 
if not, Im closing this defect. 

 
I just thought the same way no plugin needs to hardcode the location of the 
eclipse launcher or the workspace because Core provides API to get them, Intro 
might have made the actual http:// URL an implementation detail and provide 
API when plugins need to get at them. So that if we need one day to change 
that scheme, we just need to change all the xml files, html generators inside 
the Intro plugin and nobody else is broken. (i'm not asking for a change, just 
curious on how it's used).
Chris,
you're driving me nutts! :-) 
In an html page, you can put  
&lt;a href="http://org.eclipse.ui.intro/runAction..."&gt;run some Eclipse code&lt;/a&gt; 

you display this HTMl file in intro, and because of the location listener we 
have, we intercept the url and understand it. 

Now tell me how a user or us use APIs for this? How can I use apis to write an 
html page ! :)

  
That shows that having a draft of your article would have been good :-)
I'll read your article :-)
throwing white towel and closing defect.  :)</WithStack>
    <WithOutStack>Intro triggers actions using http URLs on which it needs to do special 
treatments (I doubt they are being interpreted as is by the browser :-).
Moreover those URLs are invalid http URLs.

In doing that intro sets a bad precedent (since it is recommended to use those 
and they are some way APIs), whereas a new URL scheme should have been created.
Pascal,
why do you say intro urls "are invalid http URLs". They are valid http urls. 
bogus host, but a valid url. 
The reason we did not create our own scheme is because a browser may/maynot 
generate a "navigate" event when a user clicks on a link in an http page. If 
it is a custom url, the browser may decide to ignore it and not generate the 
event. 

Chris,
how does IE handle this? If I created a new "intro://runAction" schema would I 
still get navigation call backs from a LocationListerener? 





The mac ignores these links. That's why Intro currently have to use http:// 
even if they don't use the Browser for the Welcome page on the Mac at the 
moment.
These links are implementation details. They should not be part of any form of 
API.
correction Chris, these urls *are* indeed apis. End users of intro use these 
urls to run intro predefined actions and to interact with the workbench. 

Are you saying that IE on win32 does generate a navigate event for a custom 
URL? I thought it did not? would 
&lt;a href="javascript:alert('an alert box')"&gt;JavaScript url test&lt;/a&gt; 
be detected by the location listener?

Even if windows works, we need a generic design. We cant use custom urls on 
win32 and http:// urls on Mac. 


Here is the history of the suggestion to use http:// for 'action' links.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=47266#c4

http:// is the most solid and portable solution at the moment.

I was just wondering if it would have been better to not make the actual 
http:// API but rather give an API such as:

getAction(Type.OPEN_WELCOME) // return http://org.eclipse.welcome/welcome in 
current build / may change in the future

So that the scheme can be changed in the future for any reason. But since it's 
already API, never mind this note.
again, correction Chris :-), the url is used as as "api" in an HTML page, as 
the value for anchor href attributes, so how can we use a method call? 
The http://org.eclipse.ui.intro/runAction?arg.. is used as a string in an xml 
markup file or a static html page, so the user has not access to code! 

Pascal,
any thoughts on the original defect? 
if not, Im closing this defect. 

 
I just thought the same way no plugin needs to hardcode the location of the 
eclipse launcher or the workspace because Core provides API to get them, Intro 
might have made the actual http:// URL an implementation detail and provide 
API when plugins need to get at them. So that if we need one day to change 
that scheme, we just need to change all the xml files, html generators inside 
the Intro plugin and nobody else is broken. (i'm not asking for a change, just 
curious on how it's used).
Chris,
you're driving me nutts! :-) 
In an html page, you can put  
&lt;a href="http://org.eclipse.ui.intro/runAction..."&gt;run some Eclipse code&lt;/a&gt; 

you display this HTMl file in intro, and because of the location listener we 
have, we intercept the url and understand it. 

Now tell me how a user or us use APIs for this? How can I use apis to write an 
html page ! :)

  
That shows that having a draft of your article would have been good :-)
I'll read your article :-)
throwing white towel and closing defect.  :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84754" />
    <CreationDate amount="2005-02-08 21:31:00 -0500" />
    <DupId amount="84701" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(MON) Exception when importing log files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341232407">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason>Here is the stack trace:
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\Hyades_20050207_1022\eclipse\workspace2
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107915064552.a
dapter cannot be saved due to the following reason: 
java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="5">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232407">
        <Exception>org.eclipse.hyades.logging.core.SerializationException</Exception>
        <Reason>java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:544)</Frame>
          <Frame depth="1">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:399)</Frame>
          <Frame depth="2">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:349)</Frame>
          <Frame depth="3">org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:304)</Frame>
          <Frame depth="4">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile(StaticParserWrapper.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput(StaticParserWrapper.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing(LocalLogParserLoader.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.runOnLocalHost(ImportLogWizard.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run(ImportLogWizard.java)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The following exception occurrs sometimes when importing log files with using 
the new job import feature:
IWAT0373E The adapter configuration file D:\Hyades_20050207_1022
\eclipse\workspace2
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107915064552.a
dapter cannot be saved due to the following reason: 
java.lang.NullPointerException

Here is the stack trace:
org.eclipse.hyades.logging.parsers.LogParserException: IWAT0373E The adapter 
configuration file D:\Hyades_20050207_1022\eclipse\workspace2
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107915064552.a
dapter cannot be saved due to the following reason: 
java.lang.NullPointerException
at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
at org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
at org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Embedded Exception follows:
org.eclipse.hyades.logging.core.SerializationException: 
java.lang.NullPointerException
at org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:544)
at org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:399)
at org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:349)
at org.eclipse.hyades.logging.core.XmlUtility.serialize(XmlUtility.java:304)
at 
org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.getNewConfigFile
(StaticParserWrapper.java)
at org.eclipse.hyades.logging.adapter.config.StaticParserWrapper.setUserInput
(StaticParserWrapper.java)
at org.eclipse.hyades.log.ui.internal.wizards.LocalLogParserLoader.startParsing
(LocalLogParserLoader.java)
at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
OnLocalHost(ImportLogWizard.java)
at 
org.eclipse.hyades.log.ui.internal.wizards.ImportLogWizard$LocalLogImportJob.run
(ImportLogWizard.java)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
I believe this problem is a duplicate of 84701.

*** This bug has been marked as a duplicate of 84701 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since the originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The following exception occurrs sometimes when importing log files with using 
the new job import feature:
IWAT0373E The adapter configuration file D:\Hyades_20050207_1022
\eclipse\workspace2
\.metadata\.plugins\org.eclipse.hyades.logging.adapter.config\GLA1107915064552.a
dapter cannot be saved due to the following reason: 
Embedded Exception follows:

I believe this problem is a duplicate of 84701.

*** This bug has been marked as a duplicate of 84701 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since the originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84755" />
    <CreationDate amount="2005-02-08 21:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot open filenames with 8-bit characters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, the FileDialog widget on GTK+ passes the resulting filename to
Converter.mbcsToWcs to convert it from UTF8 to UTF16.  However, filenames on
UNIX systems are not always encoded in UTF8.  The fix is to first use
g_filename_to_utf8 to convert the filename to UTF8, and then convert the
resulting string to UTF16.

For testing this problem, I used the second .tar.gz file posted to bug 84578. 
This file uses the ISO-8859-1 encoding, and to get g_filename_to_utf8 to work,
you must first set the environment variable G_FILENAME_ENCODING to "ISO-8859-1".
Created attachment 17774
Patch

This patch uses g_filename_to_utf8 in the single-file case, and works for the
example I gave.
Fixed &gt; 20050209.  The committed patch fixes both the single and multi open
case.  Note that the code to use g_filename_to_utf8 was already there for the
old file chooser dialog.
Verified that we seem to be doing the right thing in the file dialog.  I am
having troubles at home though because Java can't seem to deal with using
ISO-8859-1 with this file.  It works fine on my Red Hat machine though, as it
seems that it uses UTF-8 for everything, including filenames.

I verified this bug on I20050215-2300.</WithStack>
    <WithOutStack>Currently, the FileDialog widget on GTK+ passes the resulting filename to
Converter.mbcsToWcs to convert it from UTF8 to UTF16.  However, filenames on
UNIX systems are not always encoded in UTF8.  The fix is to first use
g_filename_to_utf8 to convert the filename to UTF8, and then convert the
resulting string to UTF16.

For testing this problem, I used the second .tar.gz file posted to bug 84578. 
This file uses the ISO-8859-1 encoding, and to get g_filename_to_utf8 to work,
you must first set the environment variable G_FILENAME_ENCODING to "ISO-8859-1".
Created attachment 17774
Patch

This patch uses g_filename_to_utf8 in the single-file case, and works for the
example I gave.
Fixed &gt; 20050209.  The committed patch fixes both the single and multi open
case.  Note that the code to use g_filename_to_utf8 was already there for the
old file chooser dialog.
Verified that we seem to be doing the right thing in the file dialog.  I am
having troubles at home though because Java can't seem to deal with using
ISO-8859-1 with this file.  It works fine on my Red Hat machine though, as it
seems that it uses UTF-8 for everything, including filenames.

I verified this bug on I20050215-2300.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84756" />
    <CreationDate amount="2005-02-08 22:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Import/Export] tar import/export does not support pax extensions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The tar import/export functionality does not support the posix 1003.1 'pax'
extensions.  This is necessary for creating tar files including long file names
with leading paths longer than 155 characters.
bug 90963 is related.
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithStack>
    <WithOutStack>The tar import/export functionality does not support the posix 1003.1 'pax'
extensions.  This is necessary for creating tar files including long file names
with leading paths longer than 155 characters.
bug 90963 is related.
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84757" />
    <CreationDate amount="2005-02-08 23:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE when opening plugin editor in new window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232413">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.text.rules.FastPartitioner.initialize(FastPartitioner.java:163)</Frame>
          <Frame depth="1">org.eclipse.jface.text.rules.FastPartitioner.checkInitialization(FastPartitioner.java:151)</Frame>
          <Frame depth="2">org.eclipse.jface.text.rules.FastPartitioner.computePartitioning(FastPartitioner.java:616)</Frame>
          <Frame depth="3">org.eclipse.jface.text.AbstractDocument.computePartitioning(AbstractDocument.java:1229)</Frame>
          <Frame depth="4">org.eclipse.jface.text.TextUtilities.computePartitioning(TextUtilities.java:423)</Frame>
          <Frame depth="5">org.eclipse.jface.text.presentation.PresentationReconciler.createPresentation(PresentationReconciler.java:443)</Frame>
          <Frame depth="6">org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:560)</Frame>
          <Frame depth="7">org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:558)</Frame>
          <Frame depth="8">org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.documentPartitioningChanged(PresentationReconciler.java:138)</Frame>
          <Frame depth="9">org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.documentPartitioningChanged(PresentationReconciler.java:152)</Frame>
          <Frame depth="10">org.eclipse.jface.text.AbstractDocument.fireDocumentPartitioningChanged(AbstractDocument.java:556)</Frame>
          <Frame depth="11">org.eclipse.jface.text.AbstractDocument.setDocumentPartitioner(AbstractDocument.java:1334)</Frame>
          <Frame depth="12">org.eclipse.jface.text.AbstractDocument.setDocumentPartitioner(AbstractDocument.java:250)</Frame>
          <Frame depth="13">org.eclipse.pde.internal.ui.editor.context.XMLDocumentSetupParticpant.setup(XMLDocumentSetupParticpant.java:13)</Frame>
          <Frame depth="14">org.eclipse.ui.editors.text.ForwardingDocumentProvider.connect(ForwardingDocumentProvider.java:118)</Frame>
          <Frame depth="15">org.eclipse.pde.internal.ui.editor.context.InputContext.create(InputContext.java:137)</Frame>
          <Frame depth="16">org.eclipse.pde.internal.ui.editor.plugin.PluginInputContext.&lt;init&gt;(PluginInputContext.java:33)</Frame>
          <Frame depth="17">org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor.createResourceContexts(ManifestEditor.java:65)</Frame>
          <Frame depth="18">org.eclipse.pde.internal.ui.editor.PDEFormEditor.createInputContexts(PDEFormEditor.java:176)</Frame>
          <Frame depth="19">org.eclipse.pde.internal.ui.editor.PDEFormEditor.createPages(PDEFormEditor.java:220)</Frame>
          <Frame depth="20">org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:227)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PartPane$2.run(PartPane.java:148)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.PartPane.doCreateChildControl(PartPane.java:144)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:349)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:218)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1043)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.PartStack.add(PartStack.java:384)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorAreaHelper.openEditor(EditorAreaHelper.java:281)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)</Frame>
          <Frame depth="35">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:779)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:902)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:653)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:639)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2305)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2237)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:2229)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2215)</Frame>
          <Frame depth="44">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2210)</Frame>
          <Frame depth="46">org.eclipse.ui.ide.IDE.openEditor(IDE.java:299)</Frame>
          <Frame depth="47">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:231)</Frame>
          <Frame depth="48">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:124)</Frame>
          <Frame depth="49">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:49)</Frame>
          <Frame depth="50">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:164)</Frame>
          <Frame depth="51">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:150)</Frame>
          <Frame depth="52">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:212)</Frame>
          <Frame depth="53">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="54">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:300)</Frame>
          <Frame depth="55">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:796)</Frame>
          <Frame depth="56">org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:659)</Frame>
          <Frame depth="57">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1058)</Frame>
          <Frame depth="58">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="59">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:657)</Frame>
          <Frame depth="60">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:876)</Frame>
          <Frame depth="61">org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:975)</Frame>
          <Frame depth="62">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:243)</Frame>
          <Frame depth="63">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:238)</Frame>
          <Frame depth="64">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:277)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2878)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2516)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)</Frame>
          <Frame depth="71">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="72">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="74">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="75">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="76">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="77">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="78">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="79">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="80">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="81">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="82">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="402" end="627" />
        <code>public void setup(IDocument document) {
    IDocumentPartitioner partitioner = createDocumentPartitioner();
    if (partitioner != null) {
	document.setDocumentPartitioner(partitioner);
	partitioner.connect(document);
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Create a hello world plugin and open its plugin.xml in the manifest editor.</Line>
          <Line>2. Window &gt; New Window.</Line>
          <Line>3. Try to open the same plugin.xml in the new window.</Line>
          <Line>You get the following NPE:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I-20050208

1. Create a hello world plugin and open its plugin.xml in the manifest editor.
2. Window &gt; New Window.
3. Try to open the same plugin.xml in the new window. 
You get the following NPE:

Error 2005-02-08 23:14:21.981 Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
java.lang.NullPointerException
at org.eclipse.jface.text.rules.FastPartitioner.initialize
(FastPartitioner.java:163)
at org.eclipse.jface.text.rules.FastPartitioner.checkInitialization
(FastPartitioner.java:151)
at org.eclipse.jface.text.rules.FastPartitioner.computePartitioning
(FastPartitioner.java:616)
at org.eclipse.jface.text.AbstractDocument.computePartitioning
(AbstractDocument.java:1229)
at org.eclipse.jface.text.TextUtilities.computePartitioning
(TextUtilities.java:423)
at 
org.eclipse.jface.text.presentation.PresentationReconciler.createPresentation
(PresentationReconciler.java:443)
at org.eclipse.jface.text.presentation.PresentationReconciler.processDamage
(PresentationReconciler.java:560)
at org.eclipse.jface.text.presentation.PresentationReconciler.access$3
(PresentationReconciler.java:558)
at 
org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.doc
umentPartitioningChanged(PresentationReconciler.java:138)
at 
org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.doc
umentPartitioningChanged(PresentationReconciler.java:152)
at org.eclipse.jface.text.AbstractDocument.fireDocumentPartitioningChanged
(AbstractDocument.java:556)
at org.eclipse.jface.text.AbstractDocument.setDocumentPartitioner
(AbstractDocument.java:1334)
at org.eclipse.jface.text.AbstractDocument.setDocumentPartitioner
(AbstractDocument.java:250)
at org.eclipse.pde.internal.ui.editor.context.XMLDocumentSetupParticpant.setup
(XMLDocumentSetupParticpant.java:13)
at org.eclipse.ui.editors.text.ForwardingDocumentProvider.connect
(ForwardingDocumentProvider.java:118)
at org.eclipse.pde.internal.ui.editor.context.InputContext.create
(InputContext.java:137)
at org.eclipse.pde.internal.ui.editor.plugin.PluginInputContext.&lt;init&gt;
(PluginInputContext.java:33)
at 
org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor.createResourceContexts
(ManifestEditor.java:65)
at org.eclipse.pde.internal.ui.editor.PDEFormEditor.createInputContexts
(PDEFormEditor.java:176)
at org.eclipse.pde.internal.ui.editor.PDEFormEditor.createPages
(PDEFormEditor.java:220)
at org.eclipse.ui.part.MultiPageEditorPart.createPartControl
(MultiPageEditorPart.java:227)
at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:148)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1058)
at org.eclipse.core.runtime.Platform.run(Platform.java:757)
at org.eclipse.ui.internal.PartPane.doCreateChildControl(PartPane.java:144)
at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:349)
at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:218)
at org.eclipse.ui.internal.PartStack.refreshPresentationSelection
(PartStack.java:1043)
at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1009)
at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1200)
at org.eclipse.ui.internal.PartStack.add(PartStack.java:384)
at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)
at org.eclipse.ui.internal.EditorSashContainer.addEditor
(EditorSashContainer.java:63)
at org.eclipse.ui.internal.EditorAreaHelper.openEditor
(EditorAreaHelper.java:281)
at org.eclipse.ui.internal.EditorManager$4.run(EditorManager.java:793)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.EditorManager.createEditorTab
(EditorManager.java:779)
at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:902)
at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor
(EditorManager.java:653)
at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:639)
at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched
(WorkbenchPage.java:2305)
at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2237)
at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:2229)
at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2215)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2210)
at org.eclipse.ui.ide.IDE.openEditor(IDE.java:299)
at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:231)
at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:124)
at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open
(OpenActionUtil.java:49)
at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:164)
at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:150)
at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:212)
at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:188)
at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen
(PackageExplorerActionGroup.java:300)
at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open
(PackageExplorerPart.java:796)
at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:659)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1058)
at org.eclipse.core.runtime.Platform.run(Platform.java:757)
at org.eclipse.jface.viewers.StructuredViewer.fireOpen
(StructuredViewer.java:657)
at org.eclipse.jface.viewers.StructuredViewer.handleOpen
(StructuredViewer.java:876)
at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen
(StructuredViewer.java:975)
at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:243)
at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:238)
at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:277)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2878)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2516)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:227)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
at org.eclipse.core.launcher.Main.run(Main.java:817)
at org.eclipse.core.launcher.Main.main(Main.java:801)
In the setup() method of my document setup participant, the code looked as 
follows:

public void setup(IDocument document) {
    IDocumentPartitioner partitioner = createDocumentPartitioner();
    if (partitioner != null) {
	document.setDocumentPartitioner(partitioner);
	partitioner.connect(document);
    }
}

Since the NPE was coming from an fDocument being null in the FastPartitioner 
code, I reversed the two statemens in the 'if' block below, and the problem 
went away and everything is fine now.

Dani/Tom P Eicher, I'm not sure why the order of statements above worked fine 
in window1, but caused an NPE in window2.


Both should work: the difference is that setDocumentPartitioner sends out events
and hence during creation you normally have this sequence:
setDocumentPartitioner
connect
do not send the event (it will be sent out later anyways).

This looks like a bug in your implementation: it seems as if you try to either
create a second document and/or partitioner for the already existing document.
If you open the second editor there should be no call to either connect() or
setDocumentPartitioner(). I strongly suggest to investigate this.</WithStack>
    <WithOutStack>Build: I-20050208

1. Create a hello world plugin and open its plugin.xml in the manifest editor.
2. Window &gt; New Window.
3. Try to open the same plugin.xml in the new window. 
You get the following NPE:

Error 2005-02-08 23:14:21.981 Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".

In the setup() method of my document setup participant, the code looked as 
follows:

public void setup(IDocument document) {
    IDocumentPartitioner partitioner = createDocumentPartitioner();
    if (partitioner != null) {
	document.setDocumentPartitioner(partitioner);
	partitioner.connect(document);
    }
}

Since the NPE was coming from an fDocument being null in the FastPartitioner 
code, I reversed the two statemens in the 'if' block below, and the problem 
went away and everything is fine now.

Dani/Tom P Eicher, I'm not sure why the order of statements above worked fine 
in window1, but caused an NPE in window2.


Both should work: the difference is that setDocumentPartitioner sends out events
and hence during creation you normally have this sequence:
setDocumentPartitioner
connect
do not send the event (it will be sent out later anyways).

This looks like a bug in your implementation: it seems as if you try to either
create a second document and/or partitioner for the already existing document.
If you open the second editor there should be no call to either connect() or
setDocumentPartitioner(). I strongly suggest to investigate this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84758" />
    <CreationDate amount="2005-02-08 23:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[README] Migration to 3.1 / known issues</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Placeholder bug for documenting all the changes resulting from moving to 3.1 
from 3.0

Builder migration: results in changes to .project and associated .launch file 
for Ant builds. See bug 82405.
Backward compatibility of builders once the triggers are specified moving 
forward (and backwards).
Short comings in Ant namespace support
Cannot set to use a logger when debugging Ant buildfiles

Will not get console output for same JRE builds if you set a logger.
Readme updated as required.
Verified.</WithStack>
    <WithOutStack>Placeholder bug for documenting all the changes resulting from moving to 3.1 
from 3.0

Builder migration: results in changes to .project and associated .launch file 
for Ant builds. See bug 82405.
Backward compatibility of builders once the triggers are specified moving 
forward (and backwards).
Short comings in Ant namespace support
Cannot set to use a logger when debugging Ant buildfiles

Will not get console output for same JRE builds if you set a logger.
Readme updated as required.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84759" />
    <CreationDate amount="2005-02-09 04:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Return type of functions which returns enum instance is incorrect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="203" end="220" />
        <code>/* TEST CASE */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="331" end="398" />
        <code>enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>For the following C program, I'm unable to get the return type of 
function "getColor" as "enum COLOR", but instead "COLOR" is returned when I 
used ASTUtil.getDeclarationType(function.getReturnType()).


/* TEST CASE */
-------------------------------------------------------------------------------
enum COLOR {
      RED=1
};
 
enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}
-------------------------------------------------------------------------------

Any comments ?.

Thanks in advance.

Dharma
*** Bug 84760 has been marked as a duplicate of this bug. ***
This is fixed w/the DOM AST Parser.
I have added a JUnit test for regression purposes.</WithStack>
    <WithOutStack>For the following C program, I'm unable to get the return type of 
function "getColor" as "enum COLOR", but instead "COLOR" is returned when I 
used ASTUtil.getDeclarationType(function.getReturnType()).


/* TEST CASE */
-------------------------------------------------------------------------------
enum COLOR {
      RED=1
};
 
enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}
-------------------------------------------------------------------------------

Any comments ?.

Thanks in advance.

Dharma
*** Bug 84760 has been marked as a duplicate of this bug. ***
This is fixed w/the DOM AST Parser.
I have added a JUnit test for regression purposes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84760" />
    <CreationDate amount="2005-02-09 04:54:00 -0500" />
    <DupId amount="84759" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Return type of functions which returns enum instance is incorrect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="203" end="220" />
        <code>/* TEST CASE */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="331" end="398" />
        <code>enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>For the following C program, I'm unable to get the return type of 
function "getColor" as "enum COLOR", but instead "COLOR" is returned when I 
used ASTUtil.getDeclarationType(function.getReturnType()).


/* TEST CASE */
-------------------------------------------------------------------------------
enum COLOR {
      RED=1
};
 
enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}
-------------------------------------------------------------------------------

Any comments ?.

Thanks in advance.

Dharma


*** This bug has been marked as a duplicate of 84759 ***</WithStack>
    <WithOutStack>For the following C program, I'm unable to get the return type of 
function "getColor" as "enum COLOR", but instead "COLOR" is returned when I 
used ASTUtil.getDeclarationType(function.getReturnType()).


/* TEST CASE */
-------------------------------------------------------------------------------
enum COLOR {
      RED=1
};
 
enum COLOR getColor() {
	
      enum COLOR ret;
      return ret;
}
-------------------------------------------------------------------------------

Any comments ?.

Thanks in advance.

Dharma


*** This bug has been marked as a duplicate of 84759 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84761" />
    <CreationDate amount="2005-02-09 05:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>After upgrading to I20050208-0800 I can't launch my target workspace anymore</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341232417">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.io.File.&lt;init&gt;(File.java:277)</Frame>
          <Frame depth="1">org.eclipse.osgi.framework.adaptor.core.AbstractBundleData.getBaseFile(AbstractBundleData.java:528)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.adaptor.core.AbstractBundleData.createBaseBundleFile(AbstractBundleData.java:517)</Frame>
          <Frame depth="3">org.eclipse.core.runtime.adaptor.EclipseBundleData.initializeExistingBundle(EclipseBundleData.java:83)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.adaptor.EclipseAdaptor.getInstalledBundles(EclipseAdaptor.java:480)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.Framework.initialize(Framework.java:165)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.Framework.&lt;init&gt;(Framework.java:96)</Frame>
          <Frame depth="7">org.eclipse.osgi.framework.internal.core.OSGi.createFramework(OSGi.java:90)</Frame>
          <Frame depth="8">org.eclipse.osgi.framework.internal.core.OSGi.&lt;init&gt;(OSGi.java:31)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:222)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="12">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="13">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232417">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:140)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="2">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="3">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="4">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- previous build was I20050202-0800</Line>
          <Line>- I install a new build at the same location, but not over it. I frist</Line>
          <Line>delete the old Eclipse install</Line>
          <Line>- I have all prerequisite plug-ins needed to develop jdt/ui in my workspace</Line>
          <Line>as binary imported plug-ins.</Line>
          <Line>I suspect this happened because the format of the saved state (.bundledata</Line>
          <Line>and .state) has changed since last I-Build.  We attempt to read the old</Line>
          <Line>version of the .bundledata but there is a bug and this causes the old format</Line>
          <Line>to be read incorrectly and can cause fileName to be set to null which would</Line>
          <Line>cause the NPE in AbstractBundleData.getBaseFile().</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I get the following exception in the log

!SESSION 2005-02-09 10:58:42.598 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Framework arguments:  -application org.eclipse.ui.ide.workbench -pdelaunch
-showLocation
Command-line arguments:  -application org.eclipse.ui.ide.workbench -data
C:\tmp\workspaces\test-case-working-set -dev
file:C:/home/dbaeumer/devel/workspaces/eclipse/Head/.metadata/.plugins/org.eclipse.pde.core/Verification/dev.properties
-pdelaunch -os win32 -ws win32 -arch x86 -nl de_CH -showLocation

!ENTRY org.eclipse.osgi 2005-02-09 10:58:42.598
!MESSAGE Startup error
!STACK 1
java.lang.NullPointerException
	at java.io.File.&lt;init&gt;(File.java:277)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractBundleData.getBaseFile(AbstractBundleData.java:528)
	at
org.eclipse.osgi.framework.adaptor.core.AbstractBundleData.createBaseBundleFile(AbstractBundleData.java:517)
	at
org.eclipse.core.runtime.adaptor.EclipseBundleData.initializeExistingBundle(EclipseBundleData.java:83)
	at
org.eclipse.core.runtime.adaptor.EclipseAdaptor.getInstalledBundles(EclipseAdaptor.java:480)
	at
org.eclipse.osgi.framework.internal.core.Framework.initialize(Framework.java:165)
	at org.eclipse.osgi.framework.internal.core.Framework.&lt;init&gt;(Framework.java:96)
	at org.eclipse.osgi.framework.internal.core.OSGi.createFramework(OSGi.java:90)
	at org.eclipse.osgi.framework.internal.core.OSGi.&lt;init&gt;(OSGi.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:222)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
	at org.eclipse.core.launcher.Main.run(Main.java:817)
	at org.eclipse.core.launcher.Main.main(Main.java:801)
!SESSION Wed Feb 09 10:58:47 CET 2005 ------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Feb 09, 2005 10:58:47.53
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.NullPointerException
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
	at org.eclipse.core.launcher.Main.run(Main.java:817)
	at org.eclipse.core.launcher.Main.main(Main.java:801)
Setting to major since I can't find a way to workaround this.
If you clear the configuration directory does the problem go away?  You can 
specify to clear the configuration directory by using Run... and looking at 
the Configurations for you Eclipse Application.  Select the Configuration tab 
and check the Clear the configuration area before launching.  Then launch your 
target workspace again.
I'm having a hard time reproducing this.  Can you tell me what build you were 
using before I20050208-0800.  Also what plugins are in your workspace?  Did 
you extract the new build into a new directory or did you remove the old build 
and extract the build into the location where you had the old build 
installed?  Or did you extract the build over a previous install?
Clearing the configuration directory helped. Good tip !

My setup looks as follows:

- previous build was I20050202-0800
- I install a new build at the same location, but not over it. I frist 
  delete the old Eclipse install
- I have all prerequisite plug-ins needed to develop jdt/ui in my workspace
  as binary imported plug-ins.
I suspect this happened because the format of the saved state (.bundledata 
and .state) has changed since last I-Build.  We attempt to read the old 
version of the .bundledata but there is a bug and this causes the old format 
to be read incorrectly and can cause fileName to be set to null which would 
cause the NPE in AbstractBundleData.getBaseFile().

The workaround is to clear the configuration which forces the framework data 
to be saved in the new format.  You only have to clear the configuration area 
once and then everything should work fine.  Be sure to uncheck the clear 
configuration checkbox after you have successfully launched once.
A fix has been released to correctly read older versions of .bundledata.</WithStack>
    <WithOutStack>I get the following exception in the log

!SESSION 2005-02-09 10:58:42.598 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Framework arguments:  -application org.eclipse.ui.ide.workbench -pdelaunch
-showLocation
Command-line arguments:  -application org.eclipse.ui.ide.workbench -data
C:\tmp\workspaces\test-case-working-set -dev
file:C:/home/dbaeumer/devel/workspaces/eclipse/Head/.metadata/.plugins/org.eclipse.pde.core/Verification/dev.properties
-pdelaunch -os win32 -ws win32 -arch x86 -nl de_CH -showLocation

!ENTRY org.eclipse.osgi 2005-02-09 10:58:42.598
!MESSAGE Startup error
!STACK 1
!SESSION Wed Feb 09 10:58:47 CET 2005 ------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Feb 09, 2005 10:58:47.53
!MESSAGE Exception launching the Eclipse Platform:
!STACK

Setting to major since I can't find a way to workaround this.
If you clear the configuration directory does the problem go away?  You can 
specify to clear the configuration directory by using Run... and looking at 
the Configurations for you Eclipse Application.  Select the Configuration tab 
and check the Clear the configuration area before launching.  Then launch your 
target workspace again.
I'm having a hard time reproducing this.  Can you tell me what build you were 
using before I20050208-0800.  Also what plugins are in your workspace?  Did 
you extract the new build into a new directory or did you remove the old build 
and extract the build into the location where you had the old build 
installed?  Or did you extract the build over a previous install?
Clearing the configuration directory helped. Good tip !

My setup looks as follows:

- previous build was I20050202-0800
- I install a new build at the same location, but not over it. I frist 
  delete the old Eclipse install
- I have all prerequisite plug-ins needed to develop jdt/ui in my workspace
  as binary imported plug-ins.
I suspect this happened because the format of the saved state (.bundledata 
and .state) has changed since last I-Build.  We attempt to read the old 
version of the .bundledata but there is a bug and this causes the old format 
to be read incorrectly and can cause fileName to be set to null which would 
cause the NPE in AbstractBundleData.getBaseFile().

The workaround is to clear the configuration which forces the framework data 
to be saved in the new format.  You only have to clear the configuration area 
once and then everything should work fine.  Be sure to uncheck the clear 
configuration checkbox after you have successfully launched once.
A fix has been released to correctly read older versions of .bundledata.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84762" />
    <CreationDate amount="2005-02-09 05:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE at some point after restoring a file from CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>At some point after I restored a file from CVS, I got an NPE(in log I'll attach) 

Also the C/C++ Projects navigator no longer shows the correct files. Will attach
picture.

I don't know if this should be reported in two different PRs.

Øyvind
Created attachment 17778
Shows NPE
Created attachment 17779
Shows that the C/C++ projects navigator and Resource navigator are out of sync
CPP-Extensions isn't a valid component any more.
Sounds like two bugs to me, although with the same cause. I'll let you take care
of the split.

This bug is too old for me to remember any details and I don't remember the 
last time seing these problems.

Should this PR contain information that can be put to effective use with 
minimal effort, fine. Otherwise feel free to close PR.

Øyvind

I don't know how the bug got in this in-between components state. I'm fine 
with closing it so I'll assign it to the CDT inbox and let them decide if they 
want to close it or not.
Closing.</WithStack>
    <WithOutStack>At some point after I restored a file from CVS, I got an NPE(in log I'll attach) 

Also the C/C++ Projects navigator no longer shows the correct files. Will attach
picture.

I don't know if this should be reported in two different PRs.

Øyvind
Created attachment 17778
Shows NPE
Created attachment 17779
Shows that the C/C++ projects navigator and Resource navigator are out of sync
CPP-Extensions isn't a valid component any more.
Sounds like two bugs to me, although with the same cause. I'll let you take care
of the split.

This bug is too old for me to remember any details and I don't remember the 
last time seing these problems.

Should this PR contain information that can be put to effective use with 
minimal effort, fine. Otherwise feel free to close PR.

Øyvind

I don't know how the bug got in this in-between components state. I'm fine 
with closing it so I'll assign it to the CDT inbox and let them decide if they 
want to close it or not.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84763" />
    <CreationDate amount="2005-02-09 05:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Variables view comes to front  when switching editors with an active debug session</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- new workspace, new java project with a class with a main method</Line>
          <Line>- set a breakpoint in the main method and debug</Line>
          <Line>- open classes Object and Integer</Line>
          <Line>- stack the Outline view on top of the Variables view</Line>
          <Line>- switch editors with Ctrl+F6 (switch between Object and Integer)</Line>
          <Line>=&gt; Variables view moves to top.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800

In my Debug view, I have the Variables view and the Outline view stacked in one
tab group. I launch a runtime eclipse in debug mode without hitting any breakpoint.

When I now switch to another editor, the Variables view comes in front and hides
the Outline view. This was not the case in the last I-build and is rather
inconvenient.

A workaround is to disable view management in the Debug view's view menu.
Can't reproduce. Can you provide more detailed steps?
Hmm, I was wrong: you have to hit a breakpoint to see the problem

Steps in I20050209-0800:
- new workspace, new java project with a class with a main method
- set a breakpoint in the main method and debug
- open classes Object and Integer
- stack the Outline view on top of the Variables view
- switch editors with Ctrl+F6 (switch between Object and Integer)
=&gt; Variables view moves to top.

The problem seems to be that the Variables view comes to front whenever the
workbench window loses focus. The Variables view also comes to front when using
Open Type... (Ctrl+Shift+T).
Okay. I can reproduce now thanks.
By the way: you don't have to hang suspended in a breakpoint to see the
variables view coming to front. Today, I had this several times while debugging
a runtime workbench, but without having any thread suspended.
You don't have to use ctrl+f6 to reproduce this bug. Opening any window (for
example, Preferences), seems to reproduce the problem.

Doug, our code in this area hasn't changed in a long time. I went back and
tested this case on 3.0 and this problem doesn't appear there. After a bit of
debugging, I see that the views are opening/closing because contexts are being
turned on and off when the new windows are opened. Is this just a bug or has the
API/behavior been intentionally changed from 3.0 to 3.1?
The problem was that the new binding manager was altering the context manager's
internal data structures, and so corrupting the "previousContextIds" set.  The
problem is fixed in HEAD, and a test case has been added covering this scenario.

Please let me know if you see anymore problems related to debugging view activation.
Verified in I20050215-2300 on Solaris 8, CDE, Motif</WithStack>
    <WithOutStack>I20050208-0800

In my Debug view, I have the Variables view and the Outline view stacked in one
tab group. I launch a runtime eclipse in debug mode without hitting any breakpoint.

When I now switch to another editor, the Variables view comes in front and hides
the Outline view. This was not the case in the last I-build and is rather
inconvenient.

A workaround is to disable view management in the Debug view's view menu.
Can't reproduce. Can you provide more detailed steps?
Hmm, I was wrong: you have to hit a breakpoint to see the problem

Steps in I20050209-0800:
- new workspace, new java project with a class with a main method
- set a breakpoint in the main method and debug
- open classes Object and Integer
- stack the Outline view on top of the Variables view
- switch editors with Ctrl+F6 (switch between Object and Integer)
=&gt; Variables view moves to top.

The problem seems to be that the Variables view comes to front whenever the
workbench window loses focus. The Variables view also comes to front when using
Open Type... (Ctrl+Shift+T).
Okay. I can reproduce now thanks.
By the way: you don't have to hang suspended in a breakpoint to see the
variables view coming to front. Today, I had this several times while debugging
a runtime workbench, but without having any thread suspended.
You don't have to use ctrl+f6 to reproduce this bug. Opening any window (for
example, Preferences), seems to reproduce the problem.

Doug, our code in this area hasn't changed in a long time. I went back and
tested this case on 3.0 and this problem doesn't appear there. After a bit of
debugging, I see that the views are opening/closing because contexts are being
turned on and off when the new windows are opened. Is this just a bug or has the
API/behavior been intentionally changed from 3.0 to 3.1?
The problem was that the new binding manager was altering the context manager's
internal data structures, and so corrupting the "previousContextIds" set.  The
problem is fixed in HEAD, and a test case has been added covering this scenario.

Please let me know if you see anymore problems related to debugging view activation.
Verified in I20050215-2300 on Solaris 8, CDE, Motif</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84764" />
    <CreationDate amount="2005-02-09 05:49:00 -0500" />
    <DupId amount="81825" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException with Annotations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232421">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(Annotation.java:204)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(ASTNode.java:398)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:388)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1014)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1063)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:280)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:651)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:443)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:708)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:563)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:494)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:165)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:142)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="5">
      <source_code type="import">
        <location start="557" end="588" />
        <code>import java.lang.annotation.*;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="665" end="699" />
        <code>String name() default "Example";</code>
      </source_code>
      <source_code type="functioncall">
        <location start="700" end="715" />
        <code>int number();</code>
      </source_code>
      <source_code type="import">
        <location start="740" end="771" />
        <code>import java.lang.annotation.*;</code>
      </source_code>
      <source_code type="class">
        <location start="773" end="1150" />
        <code>public class AnnotatedClass {

  @Deprecated
  public void oldMethod () {}

  @ExampleAnnotation (number = 1)
  public void simpleAnnotated() {}

  @ExampleAnnotation (name="Example 2", number = 2)
  public void namedAnnotated() {}

  @ExampleAnnotation (number = 3, name="Example 3")
  public void switchedOrderAnnotated() {}

  public static void main(String[] args) {

  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It appears that if the parameters in an annotation are not listed by name in the order they were declared 
an exception is thrown.  See the "switchedOrderAnnotation" method below.  If I switch the parameters 
back into the order that they were declared in the annotation interface, the error stops occurring.  As 
far as I can tell, there is no rule that says the annotation parameters have to be in order since they are 
listed by name and you can provide defaults.  Additional info:  I'm running 3.1M4 on OS X.4 with Java 
1.5.0.

ExampleAnnotation.java:

import java.lang.annotation.*;

@Retention (RetentionPolicy.RUNTIME)
public @interface ExampleAnnotation {
  String name() default "Example";
  int number();
}

AnnotatedClass.java:

import java.lang.annotation.*;

public class AnnotatedClass {

  @Deprecated
  public void oldMethod () {}

  @ExampleAnnotation (number = 1)
  public void simpleAnnotated() {}

  @ExampleAnnotation (name="Example 2", number = 2)
  public void namedAnnotated() {}

  @ExampleAnnotation (number = 3, name="Example 3")
  public void switchedOrderAnnotated() {}

  public static void main(String[] args) {

  }
}

Error Info:

Error 2005-02-09 05:23:49.361 An internal error occurred during: "Java AST creation".
java.lang.NullPointerException
at org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(Annotation.java:204)
at org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(ASTNode.java:398)
at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve
(AbstractMethodDeclaration.java:388)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1014)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1063)
at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve
(CompilationUnitDeclaration.java:280)
at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:651)
at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:443)
at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:708)
at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)
at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:563)
at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:494)
at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager
$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:165)
at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run
(SelectionListenerWithASTManager.java:142)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Dup

*** This bug has been marked as a duplicate of 81825 ***
Fix got released after 3.1M4. Any integration build since M4 would contain it.</WithStack>
    <WithOutStack>It appears that if the parameters in an annotation are not listed by name in the order they were declared 
an exception is thrown.  See the "switchedOrderAnnotation" method below.  If I switch the parameters 
back into the order that they were declared in the annotation interface, the error stops occurring.  As 
far as I can tell, there is no rule that says the annotation parameters have to be in order since they are 
listed by name and you can provide defaults.  Additional info:  I'm running 3.1M4 on OS X.4 with Java 
1.5.0.

ExampleAnnotation.java:

import java.lang.annotation.*;

@Retention (RetentionPolicy.RUNTIME)
public @interface ExampleAnnotation {
  String name() default "Example";
  int number();
}

AnnotatedClass.java:

import java.lang.annotation.*;

public class AnnotatedClass {

  @Deprecated
  public void oldMethod () {}

  @ExampleAnnotation (number = 1)
  public void simpleAnnotated() {}

  @ExampleAnnotation (name="Example 2", number = 2)
  public void namedAnnotated() {}

  @ExampleAnnotation (number = 3, name="Example 3")
  public void switchedOrderAnnotated() {}

  public static void main(String[] args) {

  }
}

Error Info:

Error 2005-02-09 05:23:49.361 An internal error occurred during: "Java AST creation".

Dup

*** This bug has been marked as a duplicate of 81825 ***
Fix got released after 3.1M4. Any integration build since M4 would contain it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84765" />
    <CreationDate amount="2005-02-09 05:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>StackOverflow in setText</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="185" end="246" />
        <code>- the line that fails is: OS.SetWindowText (handle, buffer);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- multiline</Line>
          <Line>- length &lt; Os limit</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have a problem when I use the setText() method of the Text.class. When I set a
text very large this method send a StackOverflow error. This text is:
 - multiline
 - length &lt; Os limit
 - the line that fails is: OS.SetWindowText (handle, buffer);
Can you provide a snippet that shows the problem or at least tell us how large 
the string is?
(In reply to comment #1)
&gt; Can you provide a snippet that shows the problem or at least tell us how large 
&gt; the string is?

I solved the problen it was my text-validator. Thanks and sorry.

I solved the problem. It was my fault. Sorry</WithStack>
    <WithOutStack>I have a problem when I use the setText() method of the Text.class. When I set a
text very large this method send a StackOverflow error. This text is:
 - multiline
 - length &lt; Os limit
 - the line that fails is: OS.SetWindowText (handle, buffer);
Can you provide a snippet that shows the problem or at least tell us how large 
the string is?
(In reply to comment #1)
&gt; Can you provide a snippet that shows the problem or at least tell us how large 
&gt; the string is?

I solved the problen it was my text-validator. Thanks and sorry.

I solved the problem. It was my fault. Sorry</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84766" />
    <CreationDate amount="2005-02-09 06:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Moving a class doesn't work for a new package [refactoring] [move]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I'm in the Package Explorer and create a new package, I can see the package
in the tree. However, when I try to move a class there (right-click,
Refactor..., Move...), the package is invisible.
Could not reproduce issue on I20050202-0800
Should the error persist, reopen the bug</WithStack>
    <WithOutStack>When I'm in the Package Explorer and create a new package, I can see the package
in the tree. However, when I try to move a class there (right-click,
Refactor..., Move...), the package is invisible.
Could not reproduce issue on I20050202-0800
Should the error persist, reopen the bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84767" />
    <CreationDate amount="2005-02-09 06:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Plugin Export Wizard fails for 1.5 Plugins when Running Eclipse using a 1.4.2 VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Running Eclipse (3.1M4 and Stream 08.02.05) using java.exe from a 1.4.2 JDK I 
was unable to export a plugin that is using an 5.0 vm compliance setting. The 
following error is shown from the PDE Export window:

Errors occured during the operation. A zip file containing the build logs has 
been generated and placed at ...

The zip contains a single file called %PluginName%.jar.bin.log which says:

Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
level '1.5' or better is required

The failed export resulted in an empty jar which contained a 1.4.2 manifest, 
which seems to point at the use of the wrong jar.executable.

Starting eclipse.exe with a 1.5 VM in the path resolved the issue. 

The plugin had no other build problems.
*** Bug 84768 has been marked as a duplicate of this bug. ***
Wassim, in the export wizard, I can't find a way to indicate the type of source.
Am I missing something?

PDE retrieves the javacTarget and javacSource as specified in the JDT/Core 
global preferences.
The type of source can be specified using

Target Environment -&gt; Target Platform -&gt; Environment and JRE -&gt; Target JRE.

It is just strange that the export fails when everything else works fine.
I was not referring to the target JRE preference.

I was referring to the settings on the Java &gt; Compiler preference page..
To comment 3: note that you can have different compiler settings for each project.

I understand that each project can have different compiler settings.  however, 
the plugin export wizard allows you to export plugins en masse and we only 
have a chance to set the javacSource and javacTarget attributes once at the 
outset of the operation.

That is why using the global settings seemed the safest thing to do.

I think it's best to expose the compliance level in the wizard itself and have 
the user choose.
*** Bug 96409 has been marked as a duplicate of this bug. ***

&gt; Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
&gt; level '1.5' or better is required

I see the very same on M7 and Rc1 with only a JDK5 installed.
I think the export wizard should ask each plugin for its settings when
doing a mass export.

The feature/plugin/product export wizards now expose compiler compliance 
settings, which will apply to all plugins built during the export operation.
verified in 3.1RC2
Still have problems when exporting from RC2 with Target JRE set to 1.5 in Java 
preference page. I also have Java 1.4.2 and 1.3.1 installed.
When exporting in export wizard i select 5.0 for source and class files 
compatibility.</WithStack>
    <WithOutStack>Running Eclipse (3.1M4 and Stream 08.02.05) using java.exe from a 1.4.2 JDK I 
was unable to export a plugin that is using an 5.0 vm compliance setting. The 
following error is shown from the PDE Export window:

Errors occured during the operation. A zip file containing the build logs has 
been generated and placed at ...

The zip contains a single file called %PluginName%.jar.bin.log which says:

Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
level '1.5' or better is required

The failed export resulted in an empty jar which contained a 1.4.2 manifest, 
which seems to point at the use of the wrong jar.executable.

Starting eclipse.exe with a 1.5 VM in the path resolved the issue. 

The plugin had no other build problems.
*** Bug 84768 has been marked as a duplicate of this bug. ***
Wassim, in the export wizard, I can't find a way to indicate the type of source.
Am I missing something?

PDE retrieves the javacTarget and javacSource as specified in the JDT/Core 
global preferences.
The type of source can be specified using

Target Environment -&gt; Target Platform -&gt; Environment and JRE -&gt; Target JRE.

It is just strange that the export fails when everything else works fine.
I was not referring to the target JRE preference.

I was referring to the settings on the Java &gt; Compiler preference page..
To comment 3: note that you can have different compiler settings for each project.

I understand that each project can have different compiler settings.  however, 
the plugin export wizard allows you to export plugins en masse and we only 
have a chance to set the javacSource and javacTarget attributes once at the 
outset of the operation.

That is why using the global settings seemed the safest thing to do.

I think it's best to expose the compliance level in the wizard itself and have 
the user choose.
*** Bug 96409 has been marked as a duplicate of this bug. ***

&gt; Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
&gt; level '1.5' or better is required

I see the very same on M7 and Rc1 with only a JDK5 installed.
I think the export wizard should ask each plugin for its settings when
doing a mass export.

The feature/plugin/product export wizards now expose compiler compliance 
settings, which will apply to all plugins built during the export operation.
verified in 3.1RC2
Still have problems when exporting from RC2 with Target JRE set to 1.5 in Java 
preference page. I also have Java 1.4.2 and 1.3.1 installed.
When exporting in export wizard i select 5.0 for source and class files 
compatibility.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84768" />
    <CreationDate amount="2005-02-09 06:18:00 -0500" />
    <DupId amount="84767" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Plugin Export Wizard fails for 1.5 Plugins when Running Eclipse using a 1.4.2 VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Running Eclipse (3.1M4 and Stream 08.02.05) using java.exe from a 1.4.2 JDK I 
was unable to export a plugin that is using an 5.0 vm compliance setting. The 
following error is shown from the PDE Export window:

Errors occured during the operation. A zip file containing the build logs has 
been generated and placed at ...

The zip contains a single file called %PluginName%.jar.bin.log which says:

Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
level '1.5' or better is required

The failed export resulted in an empty jar which contained a 1.4.2 manifest, 
which seems to point at the use of the wrong jar.executable.

Starting eclipse.exe with a 1.5 VM in the path resolved the issue. 

The plugin had no other build problems.


*** This bug has been marked as a duplicate of 84767 ***</WithStack>
    <WithOutStack>Running Eclipse (3.1M4 and Stream 08.02.05) using java.exe from a 1.4.2 JDK I 
was unable to export a plugin that is using an 5.0 vm compliance setting. The 
following error is shown from the PDE Export window:

Errors occured during the operation. A zip file containing the build logs has 
been generated and placed at ...

The zip contains a single file called %PluginName%.jar.bin.log which says:

Compliance level '1.4' is incompatible with source level '1.5'. A compliance 
level '1.5' or better is required

The failed export resulted in an empty jar which contained a 1.4.2 manifest, 
which seems to point at the use of the wrong jar.executable.

Starting eclipse.exe with a 1.5 VM in the path resolved the issue. 

The plugin had no other build problems.


*** This bug has been marked as a duplicate of 84767 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84769" />
    <CreationDate amount="2005-02-09 06:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[syntax highlighting] Syntax coloring for type names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Lots of things can be given different colours in the syntax colouring, but type
names can't as far as I can see. They can be given a non-default colour using
"others", but nothing particular for *just* type names. I would imagine this
should be relatively easy to implement.

What would be harder to implement, but possibly very useful, would be the
ability to colour type names differently based on where the type is defined - eg
one colour for JRE system libraries, one colour for extra jar files, one colour
for other projects, and a final colour for "this" project. Call me a dreamer :)
This has been added.
Verified using I20051031-2000
As of M3, the syntax for the type preceding a static method is not properly colored.
This bug is marked as fixed and as far as I can see it is working. If you think otherwise please file a new bug with steps to reproduce the problem you're seeing.</WithStack>
    <WithOutStack>Lots of things can be given different colours in the syntax colouring, but type
names can't as far as I can see. They can be given a non-default colour using
"others", but nothing particular for *just* type names. I would imagine this
should be relatively easy to implement.

What would be harder to implement, but possibly very useful, would be the
ability to colour type names differently based on where the type is defined - eg
one colour for JRE system libraries, one colour for extra jar files, one colour
for other projects, and a final colour for "this" project. Call me a dreamer :)
This has been added.
Verified using I20051031-2000
As of M3, the syntax for the type preceding a static method is not properly colored.
This bug is marked as fixed and as far as I can see it is working. If you think otherwise please file a new bug with steps to reproduce the problem you're seeing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84770" />
    <CreationDate amount="2005-02-09 06:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Formatter fails in specific case (.class in code)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="77" end="197" />
        <code>public class FormatterTest {
  void doTest(
      ) {
     System.out.println("(" + 
         Object.class + ")");
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. Make a new class in default package:</Line>
          <Line>-----BEGIN-----</Line>
          <Line />
          <Line>-----END-----</Line>
          <Line />
          <Line>2. Try to format it by Ctrl+Shift+F  - nothing happens</Line>
          <Line />
          <Line>3. Now change the 'Object.class' to 'Object.class.toString()'</Line>
          <Line>(You can also delete the last ' + ")"'</Line>
          <Line />
          <Line>4. Try to format it by Ctrl+Shift+F  - everything is ok</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Steps to reproduce:

1. Make a new class in default package:
-----BEGIN-----
public class FormatterTest {
  void doTest(
      ) {
     System.out.println("(" + 
         Object.class + ")");
  }
}
-----END-----

2. Try to format it by Ctrl+Shift+F  - nothing happens

3. Now change the 'Object.class' to 'Object.class.toString()'
(You can also delete the last ' + ")"'

4. Try to format it by Ctrl+Shift+F  - everything is ok



It seems that formatter crashes, when it has some string operatation (like + ) 
after the keyword class
NotE: there's a separate PR that the editor should not fail silenty (bug 70037).
Reproduced.
I am investigating.
Fixed and released in HEAD.
Regression test added in FormatterRegressionTests.test543.
Thanks for the nice test case.
Verified with 3.1 M5 candidate (I20040215-2300)
*** Bug 66452 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Steps to reproduce:

1. Make a new class in default package:
-----BEGIN-----
public class FormatterTest {
  void doTest(
      ) {
     System.out.println("(" + 
         Object.class + ")");
  }
}
-----END-----

2. Try to format it by Ctrl+Shift+F  - nothing happens

3. Now change the 'Object.class' to 'Object.class.toString()'
(You can also delete the last ' + ")"'

4. Try to format it by Ctrl+Shift+F  - everything is ok



It seems that formatter crashes, when it has some string operatation (like + ) 
after the keyword class
NotE: there's a separate PR that the editor should not fail silenty (bug 70037).
Reproduced.
I am investigating.
Fixed and released in HEAD.
Regression test added in FormatterRegressionTests.test543.
Thanks for the nice test case.
Verified with 3.1 M5 candidate (I20040215-2300)
*** Bug 66452 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84771" />
    <CreationDate amount="2005-02-09 08:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[projection] allow to set background color for caption line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20050208-0800

Could be set on Annotations preference page
Deferred.
What is a caption line? Is that the line that shows up when you hover over the + icon?
Caption is what's left when collapsing the text. Currently this is a single line.</WithStack>
    <WithOutStack>I20050208-0800

Could be set on Annotations preference page
Deferred.
What is a caption line? Is that the line that shows up when you hover over the + icon?
Caption is what's left when collapsing the text. Currently this is a single line.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84772" />
    <CreationDate amount="2005-02-09 08:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-other" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>hi</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>what
bye.</WithStack>
    <WithOutStack>what
bye.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84773" />
    <CreationDate amount="2005-02-09 08:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>[launcher] icon not being used in error window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>To reproduce on windows
rename the org.eclipse.osgi_3.1.0 to be _org.eclipse.osgi_3.1.0
start eclipse --&gt; you get an error indicating that something is in the log.
Do "Alt-tab" and notice that the icon is incorrect.
Could you consider that for M7?
Raising priority.
Verified. Probably always worked that way.

Checking if we can set the icon of the top window to the one from the exe.
fixed v&gt;20050408

Top window now set with the icon executable.</WithStack>
    <WithOutStack>To reproduce on windows
rename the org.eclipse.osgi_3.1.0 to be _org.eclipse.osgi_3.1.0
start eclipse --&gt; you get an error indicating that something is in the log.
Do "Alt-tab" and notice that the icon is incorrect.
Could you consider that for M7?
Raising priority.
Verified. Probably always worked that way.

Checking if we can set the icon of the top window to the one from the exe.
fixed v&gt;20050408

Top window now set with the icon executable.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84774" />
    <CreationDate amount="2005-02-09 08:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Plat) Check-in manual test case execution history files from Hyades v3.3 (i1) test pass.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Check-in manual test case execution history files from Hyades v3.3 (i1) test 
pass.
Completed.
Closing.</WithStack>
    <WithOutStack>Check-in manual test case execution history files from Hyades v3.3 (i1) test 
pass.
Completed.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84775" />
    <CreationDate amount="2005-02-09 09:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Import/Export] FileSystemStructureProvider should have filters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>We should refactor FileSystemStructureProvider so that we can apply filters
easily without subclasses.
There is no plan to work on this</WithStack>
    <WithOutStack>We should refactor FileSystemStructureProvider so that we can apply filters
easily without subclasses.
There is no plan to work on this</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84776" />
    <CreationDate amount="2005-02-09 09:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Some modifier + mouse wheel could change text font size</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="2144" end="2190" />
        <code>- Shift/Ctrl + Scroll_Wheel (example in GIMP);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2191" end="2232" />
        <code>- Scroll Widget (example in LibreOffice);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I work on a laptop where occasionally the textsize of a given window in Eclipse
is inconveniently big or small.  In IE and Firefox I can use Ctrl-Mousewheel to
change the text size interactively, and it would be nice if Eclipse could do the
same.
Ctrl+MouseWheel now jumps page-wise in text editors (in HEAD).
*** Bug 185667 has been marked as a duplicate of this bug. ***
*** Bug 125404 has been marked as a duplicate of this bug. ***
*** Bug 192391 has been marked as a duplicate of this bug. ***
Bug 297577 is a duplicate of this one.

I'll try to come up with a patch for this.

IMHO the M1+Mousewheel and M1+NUMPAD_PLUS / M1+NUMPAD_MINUS text size changing is pretty well-known nowadays, especially because of Firefox. Any opinions about if Ctrl+MouseWheel should "scroll faster" or "zoom" by default in Eclipse?

IMHO there should be general-purpose "Zoom In" / "Zoom Out" commands in Platform/UI for this that are handled by text editors by changing the font size. I'll investigate existing Zoom commands in existing editors like GEF or BIRT.
*** Bug 297577 has been marked as a duplicate of this bug. ***
&gt;Any opinions
&gt;about if Ctrl+MouseWheel should "scroll faster" or "zoom" by default in
&gt;Eclipse?
Scroll faster (this is already implemented - try it out ;-)

&gt;IMHO there should be general-purpose "Zoom In" / "Zoom Out" commands in
&gt;Platform/UI for this that are handled by text editors by changing the font
&gt;size.
Agree. Can you please file a bug report against Platform UI and mark this one depending on your new bug? Thanks.
This was reported 6 years ago, but it appears to not be fixed yet.... anyone able to work on this?

I'm working on Eclipse in Mac and this functionality is still missing... there is an independent plugin to add a keyboard shortcut, but even that only seems to be for Windows....
(In reply to comment #8)
&gt; This was reported 6 years ago, but it appears to not be fixed yet.... anyone
&gt; able to work on this?

No, nothing has been done in this area.
*** Bug 369091 has been marked as a duplicate of this bug. ***
Bug 369091 suggests different ways to control the zoom factor:

"It could be created by use:
- Shift/Ctrl + Scroll_Wheel (example in GIMP);
- Scroll Widget (example in LibreOffice);
- Some key press (example - Ctrl+Shift+'+' Ctrl+Shift+'-')..."
See also bug 396949.
*** Bug 421929 has been marked as a duplicate of this bug. ***
*** Bug 426328 has been marked as a duplicate of this bug. ***
+100, any update?
Voted! Any chance to get this?</WithStack>
    <WithOutStack>I work on a laptop where occasionally the textsize of a given window in Eclipse
is inconveniently big or small.  In IE and Firefox I can use Ctrl-Mousewheel to
change the text size interactively, and it would be nice if Eclipse could do the
same.
Ctrl+MouseWheel now jumps page-wise in text editors (in HEAD).
*** Bug 185667 has been marked as a duplicate of this bug. ***
*** Bug 125404 has been marked as a duplicate of this bug. ***
*** Bug 192391 has been marked as a duplicate of this bug. ***
Bug 297577 is a duplicate of this one.

I'll try to come up with a patch for this.

IMHO the M1+Mousewheel and M1+NUMPAD_PLUS / M1+NUMPAD_MINUS text size changing is pretty well-known nowadays, especially because of Firefox. Any opinions about if Ctrl+MouseWheel should "scroll faster" or "zoom" by default in Eclipse?

IMHO there should be general-purpose "Zoom In" / "Zoom Out" commands in Platform/UI for this that are handled by text editors by changing the font size. I'll investigate existing Zoom commands in existing editors like GEF or BIRT.
*** Bug 297577 has been marked as a duplicate of this bug. ***
&gt;Any opinions
&gt;about if Ctrl+MouseWheel should "scroll faster" or "zoom" by default in
&gt;Eclipse?
Scroll faster (this is already implemented - try it out ;-)

&gt;IMHO there should be general-purpose "Zoom In" / "Zoom Out" commands in
&gt;Platform/UI for this that are handled by text editors by changing the font
&gt;size.
Agree. Can you please file a bug report against Platform UI and mark this one depending on your new bug? Thanks.
This was reported 6 years ago, but it appears to not be fixed yet.... anyone able to work on this?

I'm working on Eclipse in Mac and this functionality is still missing... there is an independent plugin to add a keyboard shortcut, but even that only seems to be for Windows....
(In reply to comment #8)
&gt; This was reported 6 years ago, but it appears to not be fixed yet.... anyone
&gt; able to work on this?

No, nothing has been done in this area.
*** Bug 369091 has been marked as a duplicate of this bug. ***
Bug 369091 suggests different ways to control the zoom factor:

"It could be created by use:
- Shift/Ctrl + Scroll_Wheel (example in GIMP);
- Scroll Widget (example in LibreOffice);
- Some key press (example - Ctrl+Shift+'+' Ctrl+Shift+'-')..."
See also bug 396949.
*** Bug 421929 has been marked as a duplicate of this bug. ***
*** Bug 426328 has been marked as a duplicate of this bug. ***
+100, any update?
Voted! Any chance to get this?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84777" />
    <CreationDate amount="2005-02-09 09:13:00 -0500" />
    <DupId amount="43277" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[reorg] provide move secondary top level type to new file refactoring [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="88" end="104" />
        <code>class X {
....
}</code>
      </source_code>
      <source_code type="class">
        <location start="105" end="121" />
        <code>class Y {
....
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have a file that contains multiple class (NOT inner classes) i.e the file
looks like:
class X {
....
}
class Y {
....
}

I expand the file in the package explorer, select one of the classes,
right-click, select refactor-&gt;move, and select a package as the destination.

I get a "selected element cannot be the destination" error. 

What I expected to be able to do is to move the class from being inside a file
to being a class with it's own file.
I changed the title to reflect your request.
Note: this is essentially a variant of the existing refactoring 
"Move member type to new file".
*** Bug 97438 has been marked as a duplicate of this bug. ***
*** Bug 106008 has been marked as a duplicate of this bug. ***
Reopening for 3.2.
Tobias, something we should look at for 3.2. I wouldn't introduce a new menu
entry for this. Instead we should "reuse" the Move member ... and change its
name. May be: "Move Type to new File".


*** This bug has been marked as a duplicate of bug 43277 ***</WithStack>
    <WithOutStack>I have a file that contains multiple class (NOT inner classes) i.e the file
looks like:
class X {
....
}
class Y {
....
}

I expand the file in the package explorer, select one of the classes,
right-click, select refactor-&gt;move, and select a package as the destination.

I get a "selected element cannot be the destination" error. 

What I expected to be able to do is to move the class from being inside a file
to being a class with it's own file.
I changed the title to reflect your request.
Note: this is essentially a variant of the existing refactoring 
"Move member type to new file".
*** Bug 97438 has been marked as a duplicate of this bug. ***
*** Bug 106008 has been marked as a duplicate of this bug. ***
Reopening for 3.2.
Tobias, something we should look at for 3.2. I wouldn't introduce a new menu
entry for this. Instead we should "reuse" the Move member ... and change its
name. May be: "Move Type to new File".


*** This bug has been marked as a duplicate of bug 43277 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84778" />
    <CreationDate amount="2005-02-09 09:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>NaiveASTFlattener should add spaces around extendedOperands in InfixExpression</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800

NaiveASTFlattener should add spaces around the operators for extendedOperands in
InfixExpression.

Example:
ASTNode#toString() on InfixExpression "1 + 2 + ++i" is flattened as "1 + 2+++i".
Fixed and released in HEAD.
Regression test added in ASTConverterTestAST3_2.test0598.
Verified with 3.1 M5 candidate (I20040215-2300)</WithStack>
    <WithOutStack>I20050208-0800

NaiveASTFlattener should add spaces around the operators for extendedOperands in
InfixExpression.

Example:
ASTNode#toString() on InfixExpression "1 + 2 + ++i" is flattened as "1 + 2+++i".
Fixed and released in HEAD.
Regression test added in ASTConverterTestAST3_2.test0598.
Verified with 3.1 M5 candidate (I20040215-2300)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84779" />
    <CreationDate amount="2005-02-09 09:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dependency extent not as useful as it could be</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I asked to compute dependency extent for one of the plug-ins, I got a 
list of types I depend on in the required plug-in. However, I could not find a 
way to find classes in the source plug-in that reference this type. A more 
useful search result would be a tree where each type is a parent node and each 
file where the hit occurs is a child of that node. That way, I could 
immediately inspect each particular use of the type.

If this is actually available and I didn't see it, then this defect should 
be 'Dependency extent not as clear as it could be'.
This functionality is not available as a single action in a dependency view.
The referenced objects (classes and extension points) show up in the search 
view.
To see the references you would need to right click each result and search for 
references within a scope of a plug-in that was the input to the dependencies 
view.
PDE could perform this action for you, but doing this automatically would 
require running another search for each referenced object (slow).  I am not 
sure if Java search engine allows a search query that will return both classes 
making references in the scope of one project to another project and classes 
from the second project referenced in the first.  More investigation is needed.
When we display the results of the Compute Dependency Extent search, we 
actually know where each class is referenced in your plugin.

I tried showing it in a tree (as it would be ideal).  However I was 
unsuccessful in rendering the tree correctly (especially when you have 
multiple hits in one file) since I would need all the logic and providers that 
the internal JDT/Search has for the regular Java search (which, in essence, 
this is).  I would need to copy all of what they have.

At minimum, we should restore the old functionality where you righ-click on an 
entry and you get a context menu item that will launch a search in the 
source/libs of your plugin project for that selected type.

I talked to my friend Martin about that, and he said that it could be done by 
programmatically creating a working set and setting this working set to be the 
scope of the search.
I have not had time to do that yet.
all the old functionality has been restored for M6.</WithStack>
    <WithOutStack>When I asked to compute dependency extent for one of the plug-ins, I got a 
list of types I depend on in the required plug-in. However, I could not find a 
way to find classes in the source plug-in that reference this type. A more 
useful search result would be a tree where each type is a parent node and each 
file where the hit occurs is a child of that node. That way, I could 
immediately inspect each particular use of the type.

If this is actually available and I didn't see it, then this defect should 
be 'Dependency extent not as clear as it could be'.
This functionality is not available as a single action in a dependency view.
The referenced objects (classes and extension points) show up in the search 
view.
To see the references you would need to right click each result and search for 
references within a scope of a plug-in that was the input to the dependencies 
view.
PDE could perform this action for you, but doing this automatically would 
require running another search for each referenced object (slow).  I am not 
sure if Java search engine allows a search query that will return both classes 
making references in the scope of one project to another project and classes 
from the second project referenced in the first.  More investigation is needed.
When we display the results of the Compute Dependency Extent search, we 
actually know where each class is referenced in your plugin.

I tried showing it in a tree (as it would be ideal).  However I was 
unsuccessful in rendering the tree correctly (especially when you have 
multiple hits in one file) since I would need all the logic and providers that 
the internal JDT/Search has for the regular Java search (which, in essence, 
this is).  I would need to copy all of what they have.

At minimum, we should restore the old functionality where you righ-click on an 
entry and you get a context menu item that will launch a search in the 
source/libs of your plugin project for that selected type.

I talked to my friend Martin about that, and he said that it could be done by 
programmatically creating a working set and setting this working set to be the 
scope of the search.
I have not had time to do that yet.
all the old functionality has been restored for M6.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84780" />
    <CreationDate amount="2005-02-09 10:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.UML2" />
    <component amount="Core" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>eIsSet for Operation::type causes proxy resolution</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Calling eIsSet(EStructuralFeature) for feature TypedElement::type on a 
operation causes proxy resolution for the TypedElement::type feature of the 
(single) return result (if present).
This is fixed in build M200502101233.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Calling eIsSet(EStructuralFeature) for feature TypedElement::type on a 
operation causes proxy resolution for the TypedElement::type feature of the 
(single) return result (if present).
This is fixed in build M200502101233.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84781" />
    <CreationDate amount="2005-02-09 10:09:00 -0500" />
    <DupId amount="80518" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Hyades execution failed if RAC is stopped and started after the UI.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341232433">
        <Exception>org.eclipse.core.runtime.CoreException</Exception>
        <Reason>org.eclipse.core.runtime.CoreException: IWAT4039E The Test Execution Harness 
reported the following problems: null
org.eclipse.hyades.test.ui.launch.delegates.AbstractLaunchConfigurationDelegate.
launch(AbstractLaunchConfigurationDelegate.java)
org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:569)
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:788)
org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:955)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)


Log from .metadata
==================
org.eclipse.hyades.execution.invocation.RemoteInvocationException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.execution.local.SessionImpl.invokeRemote(SessionImpl.java)</Frame>
          <Frame depth="1">org.eclipse.hyades.execution.local.SessionStub.invokeRemote(SessionStub.java)</Frame>
          <Frame depth="2">org.eclipse.hyades.execution.local.ExecutionComponentFactoryImpl.delegateRemoteCall(ExecutionComponentFactoryImpl.java)</Frame>
          <Frame depth="3">org.eclipse.hyades.execution.local.EclipseExecutionComponentFactoryImpl.addExecutionComponent(EclipseExecutionComponentFactoryImpl.java)</Frame>
          <Frame depth="4">org.eclipse.hyades.execution.harness.TestExecutionHarness.initializeRegisteredExecutionComponents(TestExecutionHarness.java)</Frame>
          <Frame depth="5">org.eclipse.hyades.execution.harness.TestExecutionHarness.launchTest(TestExecutionHarness.java)</Frame>
          <Frame depth="6">org.eclipse.hyades.execution.harness.TestExecutionHarness.launchTest(TestExecutionHarness.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.test.ui.launch.delegates.BasicTestLaunchConfigurationDelegate.invokeTestExecutionHarness(BasicTestLaunchConfigurationDelegate.java)</Frame>
          <Frame depth="8">org.eclipse.hyades.test.ui.launch.delegates.AbstractLaunchConfigurationDelegate.launch(AbstractLaunchConfigurationDelegate.java)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:569)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:788)</Frame>
          <Frame depth="11">org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:955)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341232433">
        <Exception>org.eclipse.hyades.internal.execution.local.control.InactiveAgentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.hyades.internal.execution.local.control.AgentImpl.invokeCustomCommand(AgentImpl.java)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you stop RAC and start again while hyades (eclipse) UI is running, Further 
execution (run) of test cases is not possible.

Steps to reproduce:
       Start Eclipse/hyades test
       Start RAC
       Stop RAC (Press CTRL +C to stop it)
       Start RAC again.
       Run a junit test

Here is the log details: (Both from screen and .metadata at bottom)

Message shown on UI
==================
IWAT4039E The Test Execution Harness reported the following problems: 
org.eclipse.core.runtime.CoreException
org.eclipse.core.runtime.CoreException: IWAT4039E The Test Execution Harness 
reported the following problems: null
org.eclipse.hyades.test.ui.launch.delegates.AbstractLaunchConfigurationDelegate.
launch(AbstractLaunchConfigurationDelegate.java)
org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:569)
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:788)
org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:955)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)


Log from .metadata
==================
org.eclipse.hyades.execution.invocation.RemoteInvocationException
	at org.eclipse.hyades.execution.local.SessionImpl.invokeRemote
(SessionImpl.java)
	at org.eclipse.hyades.execution.local.SessionStub.invokeRemote
(SessionStub.java)
	at 
org.eclipse.hyades.execution.local.ExecutionComponentFactoryImpl.delegateRemoteC
all(ExecutionComponentFactoryImpl.java)
	at 
org.eclipse.hyades.execution.local.EclipseExecutionComponentFactoryImpl.addExecu
tionComponent(EclipseExecutionComponentFactoryImpl.java)
	at 
org.eclipse.hyades.execution.harness.TestExecutionHarness.initializeRegisteredEx
ecutionComponents(TestExecutionHarness.java)
	at org.eclipse.hyades.execution.harness.TestExecutionHarness.launchTest
(TestExecutionHarness.java)
	at org.eclipse.hyades.execution.harness.TestExecutionHarness.launchTest
(TestExecutionHarness.java)
	at 
org.eclipse.hyades.test.ui.launch.delegates.BasicTestLaunchConfigurationDelegate
.invokeTestExecutionHarness(BasicTestLaunchConfigurationDelegate.java)
	at 
org.eclipse.hyades.test.ui.launch.delegates.AbstractLaunchConfigurationDelegate.
launch(AbstractLaunchConfigurationDelegate.java)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:569)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:788)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run
(DebugUIPlugin.java:955)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
Caused by: 
org.eclipse.hyades.internal.execution.local.control.InactiveAgentException
	at 
org.eclipse.hyades.internal.execution.local.control.AgentImpl.invokeCustomComman
d(AgentImpl.java)
	... 13 more

!ENTRY org.eclipse.hyades.test.ui 4 0 Feb 09, 2005 10:00:42.938
!MESSAGE IWAT4039E The Test Execution Harness reported the following problems: 
org.eclipse.core.runtime.CoreException
!STACK 1
org.eclipse.core.runtime.CoreException: IWAT4039E The Test Execution Harness 
reported the following problems: null
	at 
org.eclipse.hyades.test.ui.launch.delegates.AbstractLaunchConfigurationDelegate.
launch(AbstractLaunchConfigurationDelegate.java)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:569)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:788)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run
(DebugUIPlugin.java:955)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
!SUBENTRY 1 org.eclipse.hyades.test.ui 4 0 Feb 09, 2005 10:00:42.938
!MESSAGE IWAT4039E The Test Execution Harness reported the following problems: 
null
This is a duplicate of a defect that has been fixed in the 3.3 stream.

Thanks,
--Joe

*** This bug has been marked as a duplicate of 80518 ***
setting target based on last change date, please adjust if not correct
setting target based on last change date, please adjust if not correct
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>If you stop RAC and start again while hyades (eclipse) UI is running, Further 
execution (run) of test cases is not possible.

Steps to reproduce:
       Start Eclipse/hyades test
       Start RAC
       Stop RAC (Press CTRL +C to stop it)
       Start RAC again.
       Run a junit test

Here is the log details: (Both from screen and .metadata at bottom)

Message shown on UI
==================
IWAT4039E The Test Execution Harness reported the following problems: 
Caused by: 

!SUBENTRY 1 org.eclipse.hyades.test.ui 4 0 Feb 09, 2005 10:00:42.938
!MESSAGE IWAT4039E The Test Execution Harness reported the following problems: 
null
This is a duplicate of a defect that has been fixed in the 3.3 stream.

Thanks,
--Joe

*** This bug has been marked as a duplicate of 80518 ***
setting target based on last change date, please adjust if not correct
setting target based on last change date, please adjust if not correct
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84782" />
    <CreationDate amount="2005-02-09 10:13:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP ServerTools" />
    <component amount="wst.server" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Server Project Property Page does not respond correctly to "Apply"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Create a web project</Line>
          <Line>2. Right click on the project, open the Properties</Line>
          <Line>3. Go to the Server page and select another Server Runtime</Line>
          <Line>4. Hit Apply. You should see the Server Runtime update under the project (as it</Line>
          <Line>should).</Line>
          <Line>5. Hit OKay to close the properties dialog. The Server Runtime is reverted to</Line>
          <Line>the last value.</Line>
          <Line>I've tried several times to reproduce this, with different apps and runtime</Line>
          <Line>targets, and can't reproduce. I've also looked through the code and can't spot</Line>
          <Line>any way this could happen. If you can still reproduce, please give specific</Line>
          <Line>instructions on your app and the steps you took. Thanks.</Line>
          <Line>OK</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Create a web project
2. Right click on the project, open the Properties
3. Go to the Server page and select another Server Runtime
4. Hit Apply. You should see the Server Runtime update under the project (as it
should).
5. Hit OKay to close the properties dialog. The Server Runtime is reverted to
the last value.
I've tried several times to reproduce this, with different apps and runtime
targets, and can't reproduce. I've also looked through the code and can't spot
any way this could happen. If you can still reproduce, please give specific
instructions on your app and the steps you took. Thanks.
OK</WithStack>
    <WithOutStack>1. Create a web project
2. Right click on the project, open the Properties
3. Go to the Server page and select another Server Runtime
4. Hit Apply. You should see the Server Runtime update under the project (as it
should).
5. Hit OKay to close the properties dialog. The Server Runtime is reverted to
the last value.
I've tried several times to reproduce this, with different apps and runtime
targets, and can't reproduce. I've also looked through the code and can't spot
any way this could happen. If you can still reproduce, please give specific
instructions on your app and the steps you took. Thanks.
OK</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84783" />
    <CreationDate amount="2005-02-09 10:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Directory dialog does not deal with non-UTF8 filenames</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Bug 84755 fixed a problem with FileDialog on non-UTF8 filenames, but did not fix
the same problem in DirectoryDialog.
Fixed &gt; 20050209
Verified on I20050215-2300.</WithStack>
    <WithOutStack>Bug 84755 fixed a problem with FileDialog on non-UTF8 filenames, but did not fix
the same problem in DirectoryDialog.
Fixed &gt; 20050209
Verified on I20050215-2300.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84784" />
    <CreationDate amount="2005-02-09 10:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>'Edit &gt; Change Encoding...' does not change encoding, only presentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208-0800

'Edit &gt; Change Encoding...' does not change the file's encoding as the name
would suggest. Instead, it sets the encoding that eclipse assumes the file to have.

To better reflect the fact that the file's bits are not changed, the command
could be called 'Set Encoding...'.
makes sense</WithStack>
    <WithOutStack>I20050208-0800

'Edit &gt; Change Encoding...' does not change the file's encoding as the name
would suggest. Instead, it sets the encoding that eclipse assumes the file to have.

To better reflect the fact that the file's bits are not changed, the command
could be called 'Set Encoding...'.
makes sense</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84785" />
    <CreationDate amount="2005-02-09 10:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Mon) when exporting a symptom DB in XML format WAS 4.x, then re-importing it I lost information</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Create a symptom database with a couple of Symptoms, Solutions, Directives and 
export the symptom DB, with XML format WAS 4.x.

When I re-imported this symptom DB, I lost information that was in the symptom 
database.
Could you be more specific, what exactly is lost, can you provide an example? 
The V4 and V5 SDB DTD's do not match, we do a mapping from V5 to V4 attributes 
and vice versa.
Perhaps it is not a bug, and I've misinterpreted the mapping.  Because some 
mapping is done, some information may be discarded.  However, when I have some 
symptom DB with two solutions, one is gone when the symptom database is 
imported.  I will attach two screenshots.
Created attachment 17790
This is the symptom database that I exported to file, in XML format WAS 4.x.
Created attachment 17791
17790: This is the symptom database that I imported from the file.
Viewing the two screenshots, we may lose the Symptom DB name and have "match" 
text displayed as a part of the mapping process.  However, we lose Solution_2 
when we import.
Does solution two have any match pattern?
Solution 2 is associated with the same symptom, so there is no different match 
pattern associated.  Does this suggest that we just take the first symptom 
directive pair for each pattern?
Sorry, I wanted to know if the second solution has any description not match 
pattern.
The solution did have a description.  The directive in the screenshot, that was 
imported contains the following description.  This suggests that all the 
solutions, descriptions, directives remaining go into the directive.

sol1_desc
Directive_1
dir1_desc
Solution_2
sol2_desc
What happens is the description of solution 1 + directive1 + solution2 are 
appended to an &lt;symptominfov&gt; element in the V4 format. When we import we use 
the first line of the &lt;symptominfov&gt;  element to create the solution and the 
rest to create the directive, so in fact no information is lost. Perhaps the 
mapping is not quite the best, we could create for each solution a 
&lt;symptominfov&gt; element.
Fixed. Now each solution+corresponding directives will be generated in a 
separate &lt;symptominfov&gt; element.
verified</WithStack>
    <WithOutStack>Create a symptom database with a couple of Symptoms, Solutions, Directives and 
export the symptom DB, with XML format WAS 4.x.

When I re-imported this symptom DB, I lost information that was in the symptom 
database.
Could you be more specific, what exactly is lost, can you provide an example? 
The V4 and V5 SDB DTD's do not match, we do a mapping from V5 to V4 attributes 
and vice versa.
Perhaps it is not a bug, and I've misinterpreted the mapping.  Because some 
mapping is done, some information may be discarded.  However, when I have some 
symptom DB with two solutions, one is gone when the symptom database is 
imported.  I will attach two screenshots.
Created attachment 17790
This is the symptom database that I exported to file, in XML format WAS 4.x.
Created attachment 17791
17790: This is the symptom database that I imported from the file.
Viewing the two screenshots, we may lose the Symptom DB name and have "match" 
text displayed as a part of the mapping process.  However, we lose Solution_2 
when we import.
Does solution two have any match pattern?
Solution 2 is associated with the same symptom, so there is no different match 
pattern associated.  Does this suggest that we just take the first symptom 
directive pair for each pattern?
Sorry, I wanted to know if the second solution has any description not match 
pattern.
The solution did have a description.  The directive in the screenshot, that was 
imported contains the following description.  This suggests that all the 
solutions, descriptions, directives remaining go into the directive.

sol1_desc
Directive_1
dir1_desc
Solution_2
sol2_desc
What happens is the description of solution 1 + directive1 + solution2 are 
appended to an &lt;symptominfov&gt; element in the V4 format. When we import we use 
the first line of the &lt;symptominfov&gt;  element to create the solution and the 
rest to create the directive, so in fact no information is lost. Perhaps the 
mapping is not quite the best, we could create for each solution a 
&lt;symptominfov&gt; element.
Fixed. Now each solution+corresponding directives will be generated in a 
separate &lt;symptominfov&gt; element.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84786" />
    <CreationDate amount="2005-02-09 10:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="minor" />
    <Summery>Run in background preference lost</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="26">
        <Lines>
          <Line>(e.g. Text split, RCP).  It's a fundamental restriction due to the fact that</Line>
          <Line>preferences settings are tightly tied to a particular plugin.</Line>
          <Line />
          <Line>Does the Core team have any suggested best practices for migrating prefs between</Line>
          <Line>plugins?</Line>
          <Line />
          <Line>The only suggestion I can make is to look for the preference in the old node if</Line>
          <Line>it is not explicitly defined in the new node.  Then if it is found in the old</Line>
          <Line>node, copy the value to the new node.  Or, the first time the preferences are</Line>
          <Line>accessed in the new plugin, copy *all* the migrated values from the old node.</Line>
          <Line>This won't help in the case where the user upgrades to a new release and then</Line>
          <Line>later imports preferences from a previous release.</Line>
          <Line />
          <Line>Both approaches are a bit clunky, but that's the only solution I can think of in</Line>
          <Line>the case where a preference must be migrated to a different plugin.</Line>
          <Line>How about the following:</Line>
          <Line>- move all prefs to org.eclipse.ui</Line>
          <Line>- move all initialization in WorkbenchPreferenceInitializer to</Line>
          <Line>UIPreferenceInitializer</Line>
          <Line>- provide a proxying IPreferenceStore via PrefUtil.getPreferenceStore()</Line>
          <Line>- this will do the migration John describes *on each access*</Line>
          <Line>- may also hook a listener to migrate changes if they're made on</Line>
          <Line>o.e.ui.workbench's store (e.g. due to import)</Line>
          <Line>- change both IWorkbench.getPreferenceStore() and</Line>
          <Line>PlatformUI.getPreferenceStore(), UIPlugin.getPreferenceStore(), and</Line>
          <Line>WorkbenchPlugin's getPreferenceStore() to return this one</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- move all prefs to org.eclipse.ui</Line>
          <Line>- move all initialization in WorkbenchPreferenceInitializer to</Line>
          <Line>UIPreferenceInitializer</Line>
          <Line>- provide a proxying IPreferenceStore via PrefUtil.getPreferenceStore()</Line>
          <Line>- this will do the migration John describes *on each access*</Line>
          <Line>- may also hook a listener to migrate changes if they're made on</Line>
          <Line>o.e.ui.workbench's store (e.g. due to import)</Line>
          <Line>- change both IWorkbench.getPreferenceStore() and</Line>
          <Line>PlatformUI.getPreferenceStore(), UIPlugin.getPreferenceStore(), and</Line>
          <Line>WorkbenchPlugin's getPreferenceStore() to return this one</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build: I20050209

I have the "Always run in background" preference turned on.  When I started this
new build, the preference value was lost (set to false).  All other preferences
seem to be fine, but CCing DJ in case of a general preference problem.
This is because it was moved at Nick and Jean-Michels request.

Nick either we reverse the change or we need to do some compatibility thing.
This is a general issue when moving prefs from internal to API, since they move
from org.eclipse.ui.workbench's pref store to org.eclipse.ui's.
It would be onerous to have to provide a migration path for every such change.
One option would be for us to switch back to keeping both internal and API prefs
in org.eclipse.ui's pref store, and providing a one-time migration of any
settings in org.eclipse.ui.workbench to org.eclipse.ui.

The problem is actually more general, since plug-ins can be refactored over time
(e.g. Text split, RCP).  It's a fundamental restriction due to the fact that
preferences settings are tightly tied to a particular plugin.

Does the Core team have any suggested best practices for migrating prefs between
plugins?

The only suggestion I can make is to look for the preference in the old node if
it is not explicitly defined in the new node.  Then if it is found in the old
node, copy the value to the new node.  Or, the first time the preferences are
accessed in the new plugin, copy *all* the migrated values from the old node. 
This won't help in the case where the user upgrades to a new release and then
later imports preferences from a previous release.

Both approaches are a bit clunky, but that's the only solution I can think of in
the case where a preference must be migrated to a different plugin.
How about the following:
- move all prefs to org.eclipse.ui
- move all initialization in WorkbenchPreferenceInitializer to
UIPreferenceInitializer
- provide a proxying IPreferenceStore via PrefUtil.getPreferenceStore()
  - this will do the migration John describes *on each access*
  - may also hook a listener to migrate changes if they're made on
o.e.ui.workbench's store (e.g. due to import)
- change both IWorkbench.getPreferenceStore() and
PlatformUI.getPreferenceStore(), UIPlugin.getPreferenceStore(), and
WorkbenchPlugin's getPreferenceStore() to return this one

We have rolled back out of this change
Tod, I'm not sure I understand your comment 5 correctly. Does that mean that the
bug has been fixed (i.e. the PR was not invalid) and the preference will not be
reset in future builds?
It means I rolled back the change that caused the problem.</WithStack>
    <WithOutStack>Build: I20050209

I have the "Always run in background" preference turned on.  When I started this
new build, the preference value was lost (set to false).  All other preferences
seem to be fine, but CCing DJ in case of a general preference problem.
This is because it was moved at Nick and Jean-Michels request.

Nick either we reverse the change or we need to do some compatibility thing.
This is a general issue when moving prefs from internal to API, since they move
from org.eclipse.ui.workbench's pref store to org.eclipse.ui's.
It would be onerous to have to provide a migration path for every such change.
One option would be for us to switch back to keeping both internal and API prefs
in org.eclipse.ui's pref store, and providing a one-time migration of any
settings in org.eclipse.ui.workbench to org.eclipse.ui.

The problem is actually more general, since plug-ins can be refactored over time
(e.g. Text split, RCP).  It's a fundamental restriction due to the fact that
preferences settings are tightly tied to a particular plugin.

Does the Core team have any suggested best practices for migrating prefs between
plugins?

The only suggestion I can make is to look for the preference in the old node if
it is not explicitly defined in the new node.  Then if it is found in the old
node, copy the value to the new node.  Or, the first time the preferences are
accessed in the new plugin, copy *all* the migrated values from the old node. 
This won't help in the case where the user upgrades to a new release and then
later imports preferences from a previous release.

Both approaches are a bit clunky, but that's the only solution I can think of in
the case where a preference must be migrated to a different plugin.
How about the following:
- move all prefs to org.eclipse.ui
- move all initialization in WorkbenchPreferenceInitializer to
UIPreferenceInitializer
- provide a proxying IPreferenceStore via PrefUtil.getPreferenceStore()
  - this will do the migration John describes *on each access*
  - may also hook a listener to migrate changes if they're made on
o.e.ui.workbench's store (e.g. due to import)
- change both IWorkbench.getPreferenceStore() and
PlatformUI.getPreferenceStore(), UIPlugin.getPreferenceStore(), and
WorkbenchPlugin's getPreferenceStore() to return this one

We have rolled back out of this change
Tod, I'm not sure I understand your comment 5 correctly. Does that mean that the
bug has been fixed (i.e. the PR was not invalid) and the preference will not be
reset in future builds?
It means I rolled back the change that caused the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84787" />
    <CreationDate amount="2005-02-09 10:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Preferences] the preferencePage extension point does not support IExecutableExtension</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We're checking for the class attribute in PreferencePageRegistry reader and if
it's null we're discarding the extension.  IExecutableExtension allows for
omission of the attribute in favour of a nested "class" element. 
PreferencePages which attempt to utilize this feature are being tossed.  This
likely affects other workbench components that check to ensure a class attribute.

I need this addressed for my activities work.  I'll fix it up.
Fix in HEAD.  All registry readers now check for both the class attribute and
sub-elements.
Verified in  I20050215-2300 using the following plugin.
Created attachment 17986
Plugin to verify the fix

The preference page will have the word "message" in it, as passed from the
IExecutableExtension XML</WithStack>
    <WithOutStack>We're checking for the class attribute in PreferencePageRegistry reader and if
it's null we're discarding the extension.  IExecutableExtension allows for
omission of the attribute in favour of a nested "class" element. 
PreferencePages which attempt to utilize this feature are being tossed.  This
likely affects other workbench components that check to ensure a class attribute.

I need this addressed for my activities work.  I'll fix it up.
Fix in HEAD.  All registry readers now check for both the class attribute and
sub-elements.
Verified in  I20050215-2300 using the following plugin.
Created attachment 17986
Plugin to verify the fix

The preference page will have the word "message" in it, as passed from the
IExecutableExtension XML</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84788" />
    <CreationDate amount="2005-02-09 10:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Plat) SAXParseException when calling RemoteComponentSkeleton.deregister0()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232441">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>Document root element is missing.</Reason>
        <Frames>
          <Frame depth="0">org.apache.crimson.parser.Parser2.fatal(Parser2.java:3376)</Frame>
          <Frame depth="1">org.apache.crimson.parser.Parser2.fatal(Parser2.java:3364)</Frame>
          <Frame depth="2">org.apache.crimson.parser.Parser2.parseInternal(Parser2.java:668)</Frame>
          <Frame depth="3">org.apache.crimson.parser.Parser2.parse(Parser2.java:337)</Frame>
          <Frame depth="4">org.apache.crimson.parser.XMLReaderImpl.parse(XMLReaderImpl.java:448)</Frame>
          <Frame depth="5">javax.xml.parsers.SAXParser.parse(SAXParser.java:345)</Frame>
          <Frame depth="6">org.eclipse.hyades.loaders.util.SAXFragmentHandler.parse(SAXFragmentHandler.java)</Frame>
          <Frame depth="7">org.eclipse.hyades.loaders.util.SAXFragmentHandler$1.run(SAXFragmentHandler.java)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="2157" end="2224" />
        <code>LoadersUtils.log("&gt;&gt;&gt;\n"+LoadersUtils.makeString(buffer,0,length));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2225" end="2259" />
        <code>LoadersUtils.log(new Throwable());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2260" end="2284" />
        <code>LoadersUtils.log("&lt;&lt;&lt;");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I'm using the RemoteComponentSkeleton to send tracing data (locally) to the
workbench. When my agent calls RCS.deregister() or RCS.finalize() it produces
following exception in the Workbench:

org.xml.sax.SAXParseException: Document root element is missing.
	at org.apache.crimson.parser.Parser2.fatal(Parser2.java:3376)
	at org.apache.crimson.parser.Parser2.fatal(Parser2.java:3364)
	at org.apache.crimson.parser.Parser2.parseInternal(Parser2.java:668)
	at org.apache.crimson.parser.Parser2.parse(Parser2.java:337)
	at org.apache.crimson.parser.XMLReaderImpl.parse(XMLReaderImpl.java:448)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:345)
	at
org.eclipse.hyades.loaders.util.SAXFragmentHandler.parse(SAXFragmentHandler.java)
	at
org.eclipse.hyades.loaders.util.SAXFragmentHandler$1.run(SAXFragmentHandler.java)



Sorry, but i'm in a hurry, so if you have any questions, please ask me.

Holger
Holger, would you please provide the trace data you are collecting.  I am
wondering if the data is valid with respect to Trace XML format.
Another suggestion is to try using Xerces XML parser instead.  It seems from the
exception that you used the Crimson XML parser.  See if the error still occurs
after the switch to Xerces.  Please let us know.
Holger,

Are you sending the &lt;TRACE&gt; element as the first event ? 
If you send trace event they have to be encapsulated in a &lt;TRACE&gt;&lt;/TRACE&gt; root
element.
Do you get any data in the model, is there any event handled correctly or it
fails on the first one ?
Created attachment 17950
A log file with messages send by two processes generating the described exception in xml parser.

The message log for question #1.
Comment on attachment 17950
A log file with messages send by two processes generating the described exception in xml parser.

As the log file shows, i do not send a &lt;TRACE&gt; fragment. I don't know, if the
RemoteComponentSkelton JNI-Implementatin does!?
I don't know how to change the parser used by the hyades plug-in.
You are right, only in import profile file case you need to have &lt;TRACE&gt; as the
root event. For live profiling and logging agents and also for import log files
case we send the root element (&lt;TRACE&gt;, &lt;CommonBaseEvents&gt;) from the wizard or
XMLTraceDataProcessor.

If I understand correctly you have a logging agent that sends trace events, I'm
not sure how do you connect to the logging agent, are you using the profile
attach lauch configuration, can you provide more info in this area ?







Yes, i'm using the dialog "profile.. --&gt; attach java process" to connect to the
agent.

Please could you provide a simple testcase that we can debug and see where the
actual problem is ?

Basically I want to see what is the call stack when XMLLoader.loadEvent() is
hit, so please add the following lines:

LoadersUtils.log("&gt;&gt;&gt;\n"+LoadersUtils.makeString(buffer,0,length));
LoadersUtils.log(new Throwable());
LoadersUtils.log("&lt;&lt;&lt;");

at the top of XMLLoader.loadEvent(byte[] buffer, int length, boolean
loadToModel) method and attach the Console output.

Assigning to a valid iteration
All defects should be addressed in the 3.3 timeframe
Created attachment 19935
Example application, which produces this error.

Hi,

sorry about my late reply.
I attached an example, which produces this error.
Just run it, 
attach to java process for profiling, 
activate monitoring
and wait 5 seconds.

I hope this will help you.

Holger
Holger,

I tried with the latest code from TPTP 3.3 and your testcase seems to work fine.

If this happens only in Hyades 3.2, currently we don't have any vehicle to
checkin any fix in 3.2 (3.3 is the fix pack for 3.2) so please upgrade to the
Hyades 3.3 (TPPT 3.3) or TPTP 4.0.

I will tag this as worksforme, as it actually works in 3.3.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>I'm using the RemoteComponentSkeleton to send tracing data (locally) to the
workbench. When my agent calls RCS.deregister() or RCS.finalize() it produces
following exception in the Workbench:





Sorry, but i'm in a hurry, so if you have any questions, please ask me.

Holger
Holger, would you please provide the trace data you are collecting.  I am
wondering if the data is valid with respect to Trace XML format.
Another suggestion is to try using Xerces XML parser instead.  It seems from the
exception that you used the Crimson XML parser.  See if the error still occurs
after the switch to Xerces.  Please let us know.
Holger,

Are you sending the &lt;TRACE&gt; element as the first event ? 
If you send trace event they have to be encapsulated in a &lt;TRACE&gt;&lt;/TRACE&gt; root
element.
Do you get any data in the model, is there any event handled correctly or it
fails on the first one ?
Created attachment 17950
A log file with messages send by two processes generating the described exception in xml parser.

The message log for question #1.
Comment on attachment 17950
A log file with messages send by two processes generating the described exception in xml parser.

As the log file shows, i do not send a &lt;TRACE&gt; fragment. I don't know, if the
RemoteComponentSkelton JNI-Implementatin does!?
I don't know how to change the parser used by the hyades plug-in.
You are right, only in import profile file case you need to have &lt;TRACE&gt; as the
root event. For live profiling and logging agents and also for import log files
case we send the root element (&lt;TRACE&gt;, &lt;CommonBaseEvents&gt;) from the wizard or
XMLTraceDataProcessor.

If I understand correctly you have a logging agent that sends trace events, I'm
not sure how do you connect to the logging agent, are you using the profile
attach lauch configuration, can you provide more info in this area ?







Yes, i'm using the dialog "profile.. --&gt; attach java process" to connect to the
agent.

Please could you provide a simple testcase that we can debug and see where the
actual problem is ?

Basically I want to see what is the call stack when XMLLoader.loadEvent() is
hit, so please add the following lines:

LoadersUtils.log("&gt;&gt;&gt;\n"+LoadersUtils.makeString(buffer,0,length));
LoadersUtils.log(new Throwable());
LoadersUtils.log("&lt;&lt;&lt;");

at the top of XMLLoader.loadEvent(byte[] buffer, int length, boolean
loadToModel) method and attach the Console output.

Assigning to a valid iteration
All defects should be addressed in the 3.3 timeframe
Created attachment 19935
Example application, which produces this error.

Hi,

sorry about my late reply.
I attached an example, which produces this error.
Just run it, 
attach to java process for profiling, 
activate monitoring
and wait 5 seconds.

I hope this will help you.

Holger
Holger,

I tried with the latest code from TPTP 3.3 and your testcase seems to work fine.

If this happens only in Hyades 3.2, currently we don't have any vehicle to
checkin any fix in 3.2 (3.3 is the fix pack for 3.2) so please upgrade to the
Hyades 3.3 (TPPT 3.3) or TPTP 4.0.

I will tag this as worksforme, as it actually works in 3.3.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84789" />
    <CreationDate amount="2005-02-09 10:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default preferences are not loaded</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="assignment">
        <location start="112" end="188" />
        <code>private Preferences m_prefs = MyPlugin.getDefault().getPluginPreferences();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="304" end="466" />
        <code>public boolean getBoolean(String name) {
  return getPluginPreferences().getBoolean(name, getDefaultPreferences
().getBoolean(name, BOOLEAN_DEFAULT_DEFAULT));
 }</code>
      </source_code>
      <source_code type="assignment">
        <location start="705" end="773" />
        <code>IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="774" end="800" />
        <code>setPreferenceStore(store);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1005" end="1242" />
        <code>protected void doLoad() {
        Text text = getTextControl();
        if (text != null) {
            int value = getPreferenceStore().getInt(getPreferenceName());
            text.setText("" + value);//$NON-NLS-1$
        }

    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1291" end="1531" />
        <code>public int getInt(String name) {
  String value = internalGet(name);
  if (value == null)
   return INT_DEFAULT_DEFAULT;
  try {
   return Integer.parseInt(value);
  } catch (NumberFormatException e) {
   return INT_DEFAULT_DEFAULT;
  }
 }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1574" end="1706" />
        <code>private String internalGet(String key) {
  return Platform.getPreferencesService().get(key, null,
    getPreferenceNodes(true));
 }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1919" end="1977" />
        <code>new DefaultScope().getNode(""com.ibm.tivoli.management"");</code>
      </source_code>
      <source_code type="assignment">
        <location start="2856" end="2924" />
        <code>IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3049" end="3343" />
        <code>public IPreferenceStore getPreferenceStore() {
        // Create the preference store lazily.
        if (preferenceStore == null) {
            preferenceStore = new ScopedPreferenceStore(new InstanceScope
(),getBundle().getSymbolicName());

        }
        return preferenceStore;
    }</code>
      </source_code>
      <source_code type="assignment">
        <location start="3653" end="3730" />
        <code>IPreferenceStore store = JlogPlugin.getDefault().getPreferenceStore();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="2">
        <Lines>
          <Line>(A) "com.ibm.log.eclipse"</Line>
          <Line>(B) "com.ibm.tivoli.management"</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>(A) "com.ibm.log.eclipse"</Line>
          <Line>(B) "com.ibm.tivoli.management"</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="15">
        <Lines>
          <Line>A. When the preference page owned by plug-in B is displayed, the preference</Line>
          <Line>initializer for plug-in B is not run.  I think it is because this preference</Line>
          <Line>page is a FieldEditorPreferencePage, using a ScopedPreferenceStore (a</Line>
          <Line>PreferenceStore object), and the methods like getInt/getBoolean do not behave</Line>
          <Line>in the same way as those in PreferenceForwarder (a Preferences object).  In my</Line>
          <Line>original problem description, you can see that the</Line>
          <Line>PreferenceForwarder.getBoolean method calls getDefaultPreferences.getBoolean</Line>
          <Line>which, IIRC, eventually causes the preference initializer to run.  In my</Line>
          <Line>debugging, I did not see any equivalent when the equivalent</Line>
          <Line>ScopedPreferenceStore methods were called to load the FieldEditors with their</Line>
          <Line>preference values.</Line>
          <Line>The code for PreferenceForwarder is almost identical to the code for</Line>
          <Line>ScopedPreferenceStore. I believe the difference is that you are saying:</Line>
          <Line />
          <Line>B.getDefault().getPluginPreferences() &lt;- runs B's activator</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I have an AbstractPreferenceInitializer which is not being called.  

I have one PreferencePage that contains:

 private Preferences m_prefs = MyPlugin.getDefault().getPluginPreferences();

m_prefs then holds a PreferenceForwarder.  This PreferencePage eventually calls 
PreferenceForwarder.getBoolean:

 public boolean getBoolean(String name) {
  return getPluginPreferences().getBoolean(name, getDefaultPreferences
().getBoolean(name, BOOLEAN_DEFAULT_DEFAULT));
 }

The getDefaultPreferences call is what causes the AbstractPreferenceInitializer 
I wrote to be invoked.  All is well with this PreferencePage.

The problem child is a class that extends FieldEditorPreferencePage.  This 
class contains:

IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();
setPreferenceStore(store);

In this case, store is a ScopedPreferenceStore.  This class instantiates 
several FieldEditors that load a value in to the field using the doLoad 
method.  For example, the IntegerFieldEditor contains:

    protected void doLoad() {
        Text text = getTextControl();
        if (text != null) {
            int value = getPreferenceStore().getInt(getPreferenceName());
            text.setText("" + value);//$NON-NLS-1$
        }

    }

The call here to ScopedPreferenceStore.getInt

 public int getInt(String name) {
  String value = internalGet(name);
  if (value == null)
   return INT_DEFAULT_DEFAULT;
  try {
   return Integer.parseInt(value);
  } catch (NumberFormatException e) {
   return INT_DEFAULT_DEFAULT;
  }
 }

and the subsequent call to internalGet:

 private String internalGet(String key) {
  return Platform.getPreferencesService().get(key, null,
    getPreferenceNodes(true));
 }

do not force my AbstractPreferenceInitializer to be called -- I presume because 
the default properties are not accessed.  I think this is a bug in 
ScopedPreferenceStore.

I can bypass this problem by adding:

new DefaultScope().getNode(""com.ibm.tivoli.management"");

to the FieldEditorPreferencePage to force the initialization of default 
preference, but this is a hack.
I'm not sure I understand the bug. Why do you want your preference initializer
(which is used to set the default preferences) when your default preferences
aren't being accessed?

I do want the default preferences loaded.  When the field editors load their 
data, they pick up default-default values.  This behavior is different in 
Eclipse 3.1 than it was with 3.0, where the default preferences were loaded.
Are you creating your ScopedPreferenceStore with "com.ibm.tivoli.management" as
the qualifier? The call to ScopedPreferenceStore#getPreferenceNodes(true) should
do exactly what you want and load the defaults.

Please attach a sample plug-in illustrate your problem.
No, the ScopedPreferenceStore is returned from this line of code shown in the 
problem report:

IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();

I didn't create it with any qualifier.  I know it is a ScopedPreferenceStore 
only because I debugged through the getter:

    public IPreferenceStore getPreferenceStore() {
        // Create the preference store lazily.
        if (preferenceStore == null) {
            preferenceStore = new ScopedPreferenceStore(new InstanceScope
(),getBundle().getSymbolicName());

        }
        return preferenceStore;
    }

If you really need a sample plugin, I'll put it together, but it will take me a 
bit of time.
Is the plug-in id of MyPlugin "com.ibm.tivoli.management"?
Yes, but that is not the full story.  The plugin TWEPlugin, with 
id "com.ibm.tivoli.management" owns the FieldEditorPreferencePage that makes 
the call:

       IPreferenceStore store = JlogPlugin.getDefault().getPreferenceStore();

This JLogPlugin has id "com.ibm.log.eclipse".
Is this a correct summary?

There are 2 plug-ins: 
(A) "com.ibm.log.eclipse"
(B) "com.ibm.tivoli.management"

A and B both have preference initializers.

In plug-in A you have a field editor backed by the preference store for plug-in
B. When accessing values in plug-in B, the preference initializer for B is run
but not the initializer for plug-in A.

Does that sound right?
Actually...

There are 2 plug-ins: 
(A) "com.ibm.log.eclipse"
(B) "com.ibm.tivoli.management"

Only B has a preference initializer.

Plug-in B has a field editor backed by the preference store for plug-in
A. When the preference page owned by plug-in B is displayed, the preference 
initializer for plug-in B is not run.  I think it is because this preference 
page is a FieldEditorPreferencePage, using a ScopedPreferenceStore (a 
PreferenceStore object), and the methods like getInt/getBoolean do not behave 
in the same way as those in PreferenceForwarder (a Preferences object).  In my 
original problem description, you can see that the 
PreferenceForwarder.getBoolean method calls getDefaultPreferences.getBoolean 
which, IIRC, eventually causes the preference initializer to run.  In my 
debugging, I did not see any equivalent when the equivalent 
ScopedPreferenceStore methods were called to load the FieldEditors with their 
preference values.
The code for PreferenceForwarder is almost identical to the code for
ScopedPreferenceStore. I believe the difference is that you are saying:

B.getDefault().getPluginPreferences() &lt;- runs B's activator

(in B's field editor)
A.getPreferenceStore() &lt;- runs A's activator

In the second case you haven't accessed the default preferences for B so that's
why the initializer isn't run. When you call "new DefaultScope().getNode(B);"
that accesses B's default prefs and then runs the initializer.

I'm sorry but I still don't see the case where you are trying to get the default
preferences for plug-in B but the initializer hasn't run. Or perhaps you are
trying to set default values for plug-in A in plug-in B's initializer? If this
is the case, that would explain the behaviour you are seeing. 
Well, it is definitely the case that the PreferencePage of plug-in B is trying 
to display values from the preferences of plug-in A -- and the initializer of 
plug-in B is written to set the default values for the plug-in A preferences.  

I think I can solve this by moving the initializer to plug-in A.  A quick test 
shows that it will run even if the "A" preferences are referenced from plug-in 
B.

Feel free to close this bug -- and thank you VERY MUCH for your prompt help!
No problem. In general one shouldn't initialize preferences for another plug-in
from within their initializer.

Closing.</WithStack>
    <WithOutStack>I have an AbstractPreferenceInitializer which is not being called.  

I have one PreferencePage that contains:

 private Preferences m_prefs = MyPlugin.getDefault().getPluginPreferences();

m_prefs then holds a PreferenceForwarder.  This PreferencePage eventually calls 
PreferenceForwarder.getBoolean:

 public boolean getBoolean(String name) {
  return getPluginPreferences().getBoolean(name, getDefaultPreferences
().getBoolean(name, BOOLEAN_DEFAULT_DEFAULT));
 }

The getDefaultPreferences call is what causes the AbstractPreferenceInitializer 
I wrote to be invoked.  All is well with this PreferencePage.

The problem child is a class that extends FieldEditorPreferencePage.  This 
class contains:

IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();
setPreferenceStore(store);

In this case, store is a ScopedPreferenceStore.  This class instantiates 
several FieldEditors that load a value in to the field using the doLoad 
method.  For example, the IntegerFieldEditor contains:

    protected void doLoad() {
        Text text = getTextControl();
        if (text != null) {
            int value = getPreferenceStore().getInt(getPreferenceName());
            text.setText("" + value);//$NON-NLS-1$
        }

    }

The call here to ScopedPreferenceStore.getInt

 public int getInt(String name) {
  String value = internalGet(name);
  if (value == null)
   return INT_DEFAULT_DEFAULT;
  try {
   return Integer.parseInt(value);
  } catch (NumberFormatException e) {
   return INT_DEFAULT_DEFAULT;
  }
 }

and the subsequent call to internalGet:

 private String internalGet(String key) {
  return Platform.getPreferencesService().get(key, null,
    getPreferenceNodes(true));
 }

do not force my AbstractPreferenceInitializer to be called -- I presume because 
the default properties are not accessed.  I think this is a bug in 
ScopedPreferenceStore.

I can bypass this problem by adding:

new DefaultScope().getNode(""com.ibm.tivoli.management"");

to the FieldEditorPreferencePage to force the initialization of default 
preference, but this is a hack.
I'm not sure I understand the bug. Why do you want your preference initializer
(which is used to set the default preferences) when your default preferences
aren't being accessed?

I do want the default preferences loaded.  When the field editors load their 
data, they pick up default-default values.  This behavior is different in 
Eclipse 3.1 than it was with 3.0, where the default preferences were loaded.
Are you creating your ScopedPreferenceStore with "com.ibm.tivoli.management" as
the qualifier? The call to ScopedPreferenceStore#getPreferenceNodes(true) should
do exactly what you want and load the defaults.

Please attach a sample plug-in illustrate your problem.
No, the ScopedPreferenceStore is returned from this line of code shown in the 
problem report:

IPreferenceStore store = MyPlugin.getDefault().getPreferenceStore();

I didn't create it with any qualifier.  I know it is a ScopedPreferenceStore 
only because I debugged through the getter:

    public IPreferenceStore getPreferenceStore() {
        // Create the preference store lazily.
        if (preferenceStore == null) {
            preferenceStore = new ScopedPreferenceStore(new InstanceScope
(),getBundle().getSymbolicName());

        }
        return preferenceStore;
    }

If you really need a sample plugin, I'll put it together, but it will take me a 
bit of time.
Is the plug-in id of MyPlugin "com.ibm.tivoli.management"?
Yes, but that is not the full story.  The plugin TWEPlugin, with 
id "com.ibm.tivoli.management" owns the FieldEditorPreferencePage that makes 
the call:

       IPreferenceStore store = JlogPlugin.getDefault().getPreferenceStore();

This JLogPlugin has id "com.ibm.log.eclipse".
Is this a correct summary?

There are 2 plug-ins: 
(A) "com.ibm.log.eclipse"
(B) "com.ibm.tivoli.management"

A and B both have preference initializers.

In plug-in A you have a field editor backed by the preference store for plug-in
B. When accessing values in plug-in B, the preference initializer for B is run
but not the initializer for plug-in A.

Does that sound right?
Actually...

There are 2 plug-ins: 
(A) "com.ibm.log.eclipse"
(B) "com.ibm.tivoli.management"

Only B has a preference initializer.

Plug-in B has a field editor backed by the preference store for plug-in
A. When the preference page owned by plug-in B is displayed, the preference 
initializer for plug-in B is not run.  I think it is because this preference 
page is a FieldEditorPreferencePage, using a ScopedPreferenceStore (a 
PreferenceStore object), and the methods like getInt/getBoolean do not behave 
in the same way as those in PreferenceForwarder (a Preferences object).  In my 
original problem description, you can see that the 
PreferenceForwarder.getBoolean method calls getDefaultPreferences.getBoolean 
which, IIRC, eventually causes the preference initializer to run.  In my 
debugging, I did not see any equivalent when the equivalent 
ScopedPreferenceStore methods were called to load the FieldEditors with their 
preference values.
The code for PreferenceForwarder is almost identical to the code for
ScopedPreferenceStore. I believe the difference is that you are saying:

B.getDefault().getPluginPreferences() &lt;- runs B's activator

(in B's field editor)
A.getPreferenceStore() &lt;- runs A's activator

In the second case you haven't accessed the default preferences for B so that's
why the initializer isn't run. When you call "new DefaultScope().getNode(B);"
that accesses B's default prefs and then runs the initializer.

I'm sorry but I still don't see the case where you are trying to get the default
preferences for plug-in B but the initializer hasn't run. Or perhaps you are
trying to set default values for plug-in A in plug-in B's initializer? If this
is the case, that would explain the behaviour you are seeing. 
Well, it is definitely the case that the PreferencePage of plug-in B is trying 
to display values from the preferences of plug-in A -- and the initializer of 
plug-in B is written to set the default values for the plug-in A preferences.  

I think I can solve this by moving the initializer to plug-in A.  A quick test 
shows that it will run even if the "A" preferences are referenced from plug-in 
B.

Feel free to close this bug -- and thank you VERY MUCH for your prompt help!
No problem. In general one shouldn't initialize preferences for another plug-in
from within their initializer.

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84790" />
    <CreationDate amount="2005-02-09 10:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Execution.CommonRunner" />
    <Version amount="4.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Extensibility, Usability]  Parameter passing between execution components (Executable Object Adapters) and common runner is haphazard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="singlecomment">
        <location start="444" end="458" />
        <code>//$NON-NLS-2$</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="619" end="706" />
        <code>// If we're running something other than a test suite, pass in the name of the</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="706" end="739" />
        <code>// test method we should call</code>
      </source_code>
      <source_code type="multicomment">
        <location start="950" end="975" />
        <code>/* Create our agent */</code>
      </source_code>
      <source_code type="assignment">
        <location start="976" end="1059" />
        <code>agent = new RemoteComponentSkeleton("Executor$" + args[args.length-1], "tester");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The set of commandline parameters that can be passed as parameters into java a
runner by the JavaProcessExecutableObjectAdapter can vary depending on variables
of test that is being launched as shown here:

			String jvmArgs = ""; //$NON-NLS-1$
			
			if ( DEBUG )
				jvmArgs += "-Xdebug
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8005 "; //$NON-NLS-1$
			
			jvmArgs += "-Dhyades.loadtest.nusers=" + nusers + " "; //$NON-NLS-1$
//$NON-NLS-2$
			jvmArgs += "org.eclipse.hyades.test.java.runner.HyadesJUnitRunner
"+testClass+" "; //$NON-NLS-1$ //$NON-NLS-2$
			jvmArgs += testID+" "+nusers; //$NON-NLS-1$
			
			// If we're running something other than a test suite, pass in the name of the 
			// test method we should call
			if ( !(rootResource instanceof ITestSuite))
				jvmArgs += " "+theImplementor.getLocation(); //$NON-NLS-1$


The constructor for HyadesRunner makes an assumption about the last parameter
passed as shown here

		/* Create our agent */
		agent = new RemoteComponentSkeleton("Executor$" + args[args.length-1], "tester");

We don't have any guidance for people implementing their own executable object
adapters for what to pass in to their runner (but since their runner should
extend HyadesRunner, they need to know about this assumption.)  Perhaps we could
use named parameters to address this, although we'll need to concern ourselves
with backward compatibility.
target to 4.2.

This code has been completed by Ken Sandler for some time now but will be held
off until TPTP 4.2 to integrate.

Fixed.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>The set of commandline parameters that can be passed as parameters into java a
runner by the JavaProcessExecutableObjectAdapter can vary depending on variables
of test that is being launched as shown here:

			String jvmArgs = ""; //$NON-NLS-1$
			
			if ( DEBUG )
				jvmArgs += "-Xdebug
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8005 "; //$NON-NLS-1$
			
			jvmArgs += "-Dhyades.loadtest.nusers=" + nusers + " "; //$NON-NLS-1$
//$NON-NLS-2$
			jvmArgs += "org.eclipse.hyades.test.java.runner.HyadesJUnitRunner
"+testClass+" "; //$NON-NLS-1$ //$NON-NLS-2$
			jvmArgs += testID+" "+nusers; //$NON-NLS-1$
			
			// If we're running something other than a test suite, pass in the name of the 
			// test method we should call
			if ( !(rootResource instanceof ITestSuite))
				jvmArgs += " "+theImplementor.getLocation(); //$NON-NLS-1$


The constructor for HyadesRunner makes an assumption about the last parameter
passed as shown here

		/* Create our agent */
		agent = new RemoteComponentSkeleton("Executor$" + args[args.length-1], "tester");

We don't have any guidance for people implementing their own executable object
adapters for what to pass in to their runner (but since their runner should
extend HyadesRunner, they need to know about this assumption.)  Perhaps we could
use named parameters to address this, although we'll need to concern ourselves
with backward compatibility.
target to 4.2.

This code has been completed by Ken Sandler for some time now but will be held
off until TPTP 4.2 to integrate.

Fixed.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84791" />
    <CreationDate amount="2005-02-09 11:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][compiler] eclipse doesn't allow types to be derived from annotation types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The JLS3 states on page 272:

A consequence of the fact that an annotation type cannot explicitly declare a
superclass or superinterface is that a subclass or subinterface of an annotation
type is never itself an annotation type. Similarly, annotation.Annotation is not
itself an annotation type.

Attached is a file containing examples of an interface extending an annotation
type and a class implementing an annotation type. javac compiles this file
without error.

I'm using eclipse:
Version: 3.1.0
Build id: I20050202-0800
Created attachment 17787
Testcase
Indeed we are a bit to strict.
Added AnnotationTest#test110.
Fixed in latest; we now tolerate annotation types where we allow super interfaces.
Verified in I20050214</WithStack>
    <WithOutStack>The JLS3 states on page 272:

A consequence of the fact that an annotation type cannot explicitly declare a
superclass or superinterface is that a subclass or subinterface of an annotation
type is never itself an annotation type. Similarly, annotation.Annotation is not
itself an annotation type.

Attached is a file containing examples of an interface extending an annotation
type and a class implementing an annotation type. javac compiles this file
without error.

I'm using eclipse:
Version: 3.1.0
Build id: I20050202-0800
Created attachment 17787
Testcase
Indeed we are a bit to strict.
Added AnnotationTest#test110.
Fixed in latest; we now tolerate annotation types where we allow super interfaces.
Verified in I20050214</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84792" />
    <CreationDate amount="2005-02-09 11:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default editor should open after Plugin Project Creation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>After creating a Plugin Project, the PDE Manifest Editor pops up.  After 
creating a Plugin Project, the PDE should open the Manifest/plugin, except 
with the default editor for those files.
Created attachment 17799
Patch to HEAD to open default editor upon Project Creation

patch for the 1 line fix for the bug.
The problem here is that when we are programmatically opening the manifest 
file, we explicitly pass in the editor id of PDE's manifest editor.
Therefore, even if the plugin.xml file had been associated with a different 
default editor, it would still open in PDE's editor.

If we want the manifest file to open in the default editor (as specified in 
the preferences), we should call IDE.openEditor(IWorkbenchPage, IFile, 
boolean) as per the patch.

Change is trivial.  Risk is virtually non-existent.
A fix has been released in the 3.0.2 and 3.1 streams.</WithStack>
    <WithOutStack>After creating a Plugin Project, the PDE Manifest Editor pops up.  After 
creating a Plugin Project, the PDE should open the Manifest/plugin, except 
with the default editor for those files.
Created attachment 17799
Patch to HEAD to open default editor upon Project Creation

patch for the 1 line fix for the bug.
The problem here is that when we are programmatically opening the manifest 
file, we explicitly pass in the editor id of PDE's manifest editor.
Therefore, even if the plugin.xml file had been associated with a different 
default editor, it would still open in PDE's editor.

If we want the manifest file to open in the default editor (as specified in 
the preferences), we should call IDE.openEditor(IWorkbenchPage, IFile, 
boolean) as per the patch.

Change is trivial.  Risk is virtually non-existent.
A fix has been released in the 3.0.2 and 3.1 streams.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84793" />
    <CreationDate amount="2005-02-09 11:23:00 -0500" />
    <DupId amount="80089" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Annotations layering: 'Debug Call Stack' should not hide 'Occurrences'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050208-0800

The annotation rendering of 'Debug Call Stack' and 'Debug Current Instruction
Pointer' interferes with the one for 'Occurrences'. Currently, the 'Debug Call
Stack' has such a high priority, that it hides all 'Occurrences' annotations
that are on the current line iff both annotations are configured to highlight
their range by changing the bg color.

Ideally, the 'Debug Call Stack' highlight would be rendered behind all other
annotations, since it spans the whole line and is therefore easily spottable in
most cases. On the other hand, the 'Debug Call Stack' icon in the annotation
ruler should always be on top, since it is rather important. I guess the
rendering levels should be separated for icon and text.
While this is true for drawing the background in the editor it might not be true
for the icons in the vertical ruler.

*** This bug has been marked as a duplicate of 80089 ***</WithStack>
    <WithOutStack>I20050208-0800

The annotation rendering of 'Debug Call Stack' and 'Debug Current Instruction
Pointer' interferes with the one for 'Occurrences'. Currently, the 'Debug Call
Stack' has such a high priority, that it hides all 'Occurrences' annotations
that are on the current line iff both annotations are configured to highlight
their range by changing the bg color.

Ideally, the 'Debug Call Stack' highlight would be rendered behind all other
annotations, since it spans the whole line and is therefore easily spottable in
most cases. On the other hand, the 'Debug Call Stack' icon in the annotation
ruler should always be on top, since it is rather important. I guess the
rendering levels should be separated for icon and text.
While this is true for drawing the background in the editor it might not be true
for the icons in the vertical ruler.

*** This bug has been marked as a duplicate of 80089 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84794" />
    <CreationDate amount="2005-02-09 11:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Empty error dialog after code assist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341232450">
        <Exception>org.eclipse.jface.text.BadLocationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:142)</Frame>
          <Frame depth="1">org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:156)</Frame>
          <Frame depth="2">org.eclipse.jface.text.link.LinkedModeModel.enforceDisjoint(LinkedModeModel.java:300)</Frame>
          <Frame depth="3">org.eclipse.jface.text.link.LinkedModeModel.addGroup(LinkedModeModel.java:411)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.text.java.ExperimentalProposal.apply(ExperimentalProposal.java:85)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.apply(JavaCompletionProposal.java:568)</Frame>
          <Frame depth="6">org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:420)</Frame>
          <Frame depth="7">org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposalWithMask(CompletionProposalPopup.java:367)</Frame>
          <Frame depth="8">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$19(CompletionProposalPopup.java:363)</Frame>
          <Frame depth="9">org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:328)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:96)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2878)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2516)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)</Frame>
          <Frame depth="18">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)</Frame>
          <Frame depth="23">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:261)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:817)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:801)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="233" end="365" />
        <code>public class A {
  private int addNewInsertEdit(int currPos, String str, IDocument document, int
importsEnd) {
    document.se
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20050208

- Enable 'fill arguments...', disable 'guess filled...'

In the following class (that has IDocument on its class path) use code assist to
complete 'se' to 'search'. Empty error dialog pops up. Log contains a stack trace 

public class A {
  private int addNewInsertEdit(int currPos, String str, IDocument document, int
importsEnd) {
    document.se
  }
}

org.eclipse.jface.text.BadLocationException
	at
org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:142)
	at
org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:156)
	at
org.eclipse.jface.text.link.LinkedModeModel.enforceDisjoint(LinkedModeModel.java:300)
	at org.eclipse.jface.text.link.LinkedModeModel.addGroup(LinkedModeModel.java:411)
	at
org.eclipse.jdt.internal.ui.text.java.ExperimentalProposal.apply(ExperimentalProposal.java:85)
	at
org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.apply(JavaCompletionProposal.java:568)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:420)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposalWithMask(CompletionProposalPopup.java:367)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$19(CompletionProposalPopup.java:363)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:328)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2878)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2516)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1622)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1588)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:299)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:227)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:281)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:261)
	at org.eclipse.core.launcher.Main.run(Main.java:817)
	at org.eclipse.core.launcher.Main.main(Main.java:801)
Tom, please investigate.
fixed &gt; 20050209</WithStack>
    <WithOutStack>I20050208

- Enable 'fill arguments...', disable 'guess filled...'

In the following class (that has IDocument on its class path) use code assist to
complete 'se' to 'search'. Empty error dialog pops up. Log contains a stack trace 

public class A {
  private int addNewInsertEdit(int currPos, String str, IDocument document, int
importsEnd) {
    document.se
  }
}


Tom, please investigate.
fixed &gt; 20050209</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84795" />
    <CreationDate amount="2005-02-09 11:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing NLS string</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>ProcessConsoleManager.getColorProvider references an nls string that does not 
exist
Fixed in ProcessConsoleManager. An internal error does not need to be NLS'd.
Please verify, Darin (S).
verified</WithStack>
    <WithOutStack>ProcessConsoleManager.getColorProvider references an nls string that does not 
exist
Fixed in ProcessConsoleManager. An internal error does not need to be NLS'd.
Please verify, Darin (S).
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84796" />
    <CreationDate amount="2005-02-09 11:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The "Process Information" property page is empty.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The "Command line" field of the "Process Information" property page should 
contain the command line attributes of the process. The "ATTR_CMDLINE" 
attribute of IProcess should be set during the launching.
Deferred.
Reassigning to the pool.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithStack>
    <WithOutStack>The "Command line" field of the "Process Information" property page should 
contain the command line attributes of the process. The "ATTR_CMDLINE" 
attribute of IProcess should be set during the launching.
Deferred.
Reassigning to the pool.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84797" />
    <CreationDate amount="2005-02-09 11:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[content assist] Content assist repeats "new" for anonymous class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="16" end="97" />
        <code>class XXX {
	public static final Runnable CONST= new Run//&lt;-Content Assist here
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="148" end="236" />
        <code>public static final Runnable CONST= new new Runnable() {

		public void run() {

		}
	}</code>
      </source_code>
      <source_code type="class">
        <location start="326" end="407" />
        <code>class XXX {
	public static final Runnable CONST= new run//&lt;-Content Assist here
}</code>
      </source_code>
      <source_code type="class">
        <location start="491" end="536" />
        <code>class XXX {
	new Run//&lt;-Content Assist here
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20050208-0800

class XXX {
	public static final Runnable CONST= new Run//&lt;-Content Assist here
}

The inserted code is this (one "new" too much):

	public static final Runnable CONST= new new Runnable() {

		public void run() {

		}
	}
Can't reproduce. More steps?
Sorry, the class XXX must look like this ("Run" -&gt; "run"):

class XXX {
	public static final Runnable CONST= new run//&lt;-Content Assist here
}

In addition, "Insert single proposals automatically" must be enabled.
same with:

class XXX {
	new Run//&lt;-Content Assist here
}

Works inside method boddies.
This got fixed a while ago.</WithStack>
    <WithOutStack>I20050208-0800

class XXX {
	public static final Runnable CONST= new Run//&lt;-Content Assist here
}

The inserted code is this (one "new" too much):

	public static final Runnable CONST= new new Runnable() {

		public void run() {

		}
	}
Can't reproduce. More steps?
Sorry, the class XXX must look like this ("Run" -&gt; "run"):

class XXX {
	public static final Runnable CONST= new run//&lt;-Content Assist here
}

In addition, "Insert single proposals automatically" must be enabled.
same with:

class XXX {
	new Run//&lt;-Content Assist here
}

Works inside method boddies.
This got fixed a while ago.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84798" />
    <CreationDate amount="2005-02-09 11:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>InvalidTypeException as Expression is evaluated.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="74" end="523" />
        <code>public class Test {

    public static void main(String[] args) throws Exception {
        DocumentBuilder db = DocumentBuilderFactory.newInstance()
            .newDocumentBuilder();
        Document doc = db.parse(new File(args[0]));
        System.out.println(serialize(doc));              // &lt;-- Set breakpoint.
    }

    public static String serialize(Document element)
            throws TransformerException {
        return "Test!";
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Create the following class</Line>
          <Line />
          <Line />
          <Line />
          <Line>2. Set a breakpoint at the marked line and start a debug session. (Please</Line>
          <Line>provide an XML document of choice.)</Line>
          <Line>3. As the breakpoint is hit, evaluate in the display view "serialize(doc)" and</Line>
          <Line>notice the error message:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This happens with the last Milestone (M4):
1. Create the following class

public class Test {

    public static void main(String[] args) throws Exception {
        DocumentBuilder db = DocumentBuilderFactory.newInstance()
            .newDocumentBuilder();
        Document doc = db.parse(new File(args[0]));
        System.out.println(serialize(doc));              // &lt;-- Set breakpoint.
    }

    public static String serialize(Document element)
            throws TransformerException {
        return "Test!";
    }
}

2. Set a breakpoint at the marked line and start a debug session. (Please
provide an XML document of choice.)
3. As the breakpoint is hit, evaluate in the display view "serialize(doc)" and
notice the error message:

serialize(doc)
	Evaluation failed. Reason(s):
		com.sun.jdi.InvalidTypeException: Type of the value not compatible with the
expected type. occurred invoking method.

This behaviour is similar to that as described in the description of bug 34816,
the solution may also be similar.
Fixed.
We were not correctly checking that the arguments are compatible with the method
signature. We were not looking at all the interface implemented by an argument,
only the interfaces it directly implements.

ValueImpl - call allInterfaces() instead of interfaces()
Please verify, Darin S.
Verified.</WithStack>
    <WithOutStack>This happens with the last Milestone (M4):
1. Create the following class

public class Test {

    public static void main(String[] args) throws Exception {
        DocumentBuilder db = DocumentBuilderFactory.newInstance()
            .newDocumentBuilder();
        Document doc = db.parse(new File(args[0]));
        System.out.println(serialize(doc));              // &lt;-- Set breakpoint.
    }

    public static String serialize(Document element)
            throws TransformerException {
        return "Test!";
    }
}

2. Set a breakpoint at the marked line and start a debug session. (Please
provide an XML document of choice.)
3. As the breakpoint is hit, evaluate in the display view "serialize(doc)" and
notice the error message:

serialize(doc)
	Evaluation failed. Reason(s):
		com.sun.jdi.InvalidTypeException: Type of the value not compatible with the
expected type. occurred invoking method.

This behaviour is similar to that as described in the description of bug 34816,
the solution may also be similar.
Fixed.
We were not correctly checking that the arguments are compatible with the method
signature. We were not looking at all the interface implemented by an argument,
only the interfaces it directly implements.

ValueImpl - call allInterfaces() instead of interfaces()
Please verify, Darin S.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84799" />
    <CreationDate amount="2005-02-09 12:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Implement Memory View and renderings with new rendering APIs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Implement Memory View and renderings with new memory rendering APIs.

Summary of changes:
* Replaced memoryRenderingTypes extension point with memoryRenderings extension 
point.
* Revised IMemoryRenderingManager
* Created IMemoryRenderingBindingProvider
* Memory View implements IMemoryViewSite
* Rendering view panes implement IMemoryRenderingContainer
* Created a generic MemoryViewTab to host any type of rendering.
* IMemoryRendering is revised and is now responsible for actually rendering a 
memory block and creating the controls to display a memory block.
* Created AbstractMemoryRendering - an abstract implementation to 
IMemoryRendering.
* Created AbstractTableRendering - an abstract implementation to display a 
memory block in a table.
* Create AbstractTextRendering - an abstract implementation for rendering a 
memory block in different code pages.
* Migrated existing renderings to use new interfaces and abstract classes
* IMemoryBlockViewSynchronizer is replaced by 
IMemoryRenderingSynchronizationService.  Implemented a synchronization service 
in the memory view.
* Added a global preference for padded strings.  Removed #getPaddedString in 
IMemoryBlockExtensionRetrieval.
* Replaced IMemoryBlockModelPresentation with IMemoryBlockTablePresentation.
Created attachment 17792
Patch to org.eclipse.debug.core
Created attachment 17793
Patch to org.eclipse.debug.ui
Applied patch. Updated accesses to deprecated Help support. 
Marking as verified. Will file new bugs as required.</WithStack>
    <WithOutStack>Implement Memory View and renderings with new memory rendering APIs.

Summary of changes:
* Replaced memoryRenderingTypes extension point with memoryRenderings extension 
point.
* Revised IMemoryRenderingManager
* Created IMemoryRenderingBindingProvider
* Memory View implements IMemoryViewSite
* Rendering view panes implement IMemoryRenderingContainer
* Created a generic MemoryViewTab to host any type of rendering.
* IMemoryRendering is revised and is now responsible for actually rendering a 
memory block and creating the controls to display a memory block.
* Created AbstractMemoryRendering - an abstract implementation to 
IMemoryRendering.
* Created AbstractTableRendering - an abstract implementation to display a 
memory block in a table.
* Create AbstractTextRendering - an abstract implementation for rendering a 
memory block in different code pages.
* Migrated existing renderings to use new interfaces and abstract classes
* IMemoryBlockViewSynchronizer is replaced by 
IMemoryRenderingSynchronizationService.  Implemented a synchronization service 
in the memory view.
* Added a global preference for padded strings.  Removed #getPaddedString in 
IMemoryBlockExtensionRetrieval.
* Replaced IMemoryBlockModelPresentation with IMemoryBlockTablePresentation.
Created attachment 17792
Patch to org.eclipse.debug.core
Created attachment 17793
Patch to org.eclipse.debug.ui
Applied patch. Updated accesses to deprecated Help support. 
Marking as verified. Will file new bugs as required.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="84800" />
    <CreationDate amount="2005-02-09 12:15:00 -0500" />
    <DupId amount="15941" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[WorkingSets] import project should allow adding it to the working set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>At the moment when you import an existing project or for that matter create a
new project there is no option to automatically add it to your current working
set. Such an option would be very valuable.
Also essentially a dup of bug 15941.


*** This bug has been marked as a duplicate of bug 15941 ***</WithStack>
    <WithOutStack>At the moment when you import an existing project or for that matter create a
new project there is no option to automatically add it to your current working
set. Such an option would be very valuable.
Also essentially a dup of bug 15941.


*** This bug has been marked as a duplicate of bug 15941 ***</WithOutStack>
  </Bug>
</infozilla-output>

