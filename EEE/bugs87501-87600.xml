<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="87501" />
    <CreationDate amount="2005-03-09 10:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Switching a Shell to RowLayout generates Warning</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>3.1m5a releases

Create a new SWT Frame.  Change the frame from default null layout to RowLayout.
 A warning is generated in the error log:

IWAV0155E Introspection failed on class "org.eclipse.swt.layout.RowLayout." msg="."
Created attachment 18582
SWT RowLayout Warning Log

Attached is a log of the warning.
Note: Replace SWT Frame in above comments with Shell
needs to be fixed for stable build this week
The keys for the resource set lookup in RowLayoutBeanInfo are incorrect for
marginWidth, marginHeight, marginTop, marginBottom, marginRight, and marginLeft.

Fixed and released to HEAD (VE 1.1).
Verified with VE Nightly Build N20050310</WithStack>
    <WithOutStack>3.1m5a releases

Create a new SWT Frame.  Change the frame from default null layout to RowLayout.
 A warning is generated in the error log:

IWAV0155E Introspection failed on class "org.eclipse.swt.layout.RowLayout." msg="."
Created attachment 18582
SWT RowLayout Warning Log

Attached is a log of the warning.
Note: Replace SWT Frame in above comments with Shell
needs to be fixed for stable build this week
The keys for the resource set lookup in RowLayoutBeanInfo are incorrect for
marginWidth, marginHeight, marginTop, marginBottom, marginRight, and marginLeft.

Fixed and released to HEAD (VE 1.1).
Verified with VE Nightly Build N20050310</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87502" />
    <CreationDate amount="2005-03-09 10:08:00 -0500" />
    <DupId amount="80089" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Breakpoint icon hidden (overlayed) by other icons in left margin column</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The presence of a breakpoint (as indicated by the round dot icon in the left 
column strip/bar) is often obscured by additional icons such as the assist 
balloon, the yellow right arrow indicating the result of a search, etc.

This makes it very difficult to visually tell whether a breakpoint exists for 
the given line.

I would recommend a solution whereby the icons are staggered at a 45-degree 
slant from top-left to bottom-right with each icon displayed a few pixels down 
and to the right relative to the previous icon associated with the same line. 
At least this will allow a much easier visual detection of an icon.
see also bug 80512, comment 1

*** This bug has been marked as a duplicate of 80089 ***</WithStack>
    <WithOutStack>The presence of a breakpoint (as indicated by the round dot icon in the left 
column strip/bar) is often obscured by additional icons such as the assist 
balloon, the yellow right arrow indicating the result of a search, etc.

This makes it very difficult to visually tell whether a breakpoint exists for 
the given line.

I would recommend a solution whereby the icons are staggered at a 45-degree 
slant from top-left to bottom-right with each icon displayed a few pixels down 
and to the right relative to the previous icon associated with the same line. 
At least this will allow a much easier visual detection of an icon.
see also bug 80512, comment 1

*** This bug has been marked as a duplicate of 80089 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87503" />
    <CreationDate amount="2005-03-09 10:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>implement OSX opengl binding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Created attachment 19578
Initial implementation of org.eclipse.swt.opengl.carbon plugin

Adapted from org.eclipse.swt.opengl.gtk and org.eclipse.swt.opengl.win32
Created attachment 19579
Initial carbon support for org.eclipse.swt.opengl

OSX Port Notes
Change JAVA_HOME to /Library/Java/Home
from /bluebird/teamswt/swt-builddir/ive/bin

Not sure the best way to install/run it.
I had the install script (build.sh) copy it to my hardcoded VM library
location.

This doesn't completely work yet.  I will elaborate in a bug report.

Only changes outside of the carbon folder are to gl.h and glu.h.
The include paths to gl.h are a little different in OSX (in &lt;OpenGL\gl.h&gt;
versus &lt;gl.h&gt;.
I just submitted two patches to get this up and running.  However, this is not
complete -- it's just an initial spike.

All of the OpenGL calls (from the platform-independent part of the library) are
hooked in and appear to work.  The org.eclipse.swt.opengl.examples now builds
and runs in OSX.  [My system is a PowerBook G4 (NV 5200Go) with OSX 10.3.]

The bad news... the GLContext doesn't really work properly.  It currently has
the same interface as the other platforms GLContext.  However, it is painted
behind the controls and isn't updated properly.  

If you do care to see it in action, fire up the example SWT program and make the
window bigger.  In some of demos, you can see some OpenGL drawing in the lower
left corner.

My main problem is properly hooking up the SWT Drawable's internal data
(CGContext) to the Apple OpenGL context (AGLContext).  I have a query out on the
mac-opengl list about this
(http://lists.apple.com/archives/mac-opengl/2005/Apr/msg00023.html).

Other notes
===========
In the patch, I had to set JAVA_HOME to /Library/Java/Home, from
/bluebird/teamswt/swt-builddir/ive/bin

I'm not sure the best way to install/run it.  I had the install script copy it
to my hardcoded VM library location.

All of the changes are isolated to carbon-specific directories, except for the
library files gl.h and glu.h.  This is because Apple uses different paths to
these files.

Font support hasn't started yet.
It still needs cleanup and beautification.

Evan, thanks for the submission!  We're at a stage right now where we're 
concentrating on swt issues that affect eclipse, so I can't look at your 
attachments right now, but I will once there are cycles available.

Thanks for the submission.  Your code helped me get started.  I hacked up my own
AGL binding and have it working pretty well, but of coursethere are still some
issues.  :)

Note that you don't need CGGLContextCreate, AFAICT that's only if you want to
use CoreGraphics calls to draw to an OpenGL surface (cool! but not portable). 
There's also an aglEnable flag you need to set to change the position of the
context.  I'm about to commit my implementation now, but I'm also changing the
API a bit so I'd like to check in all of the platforms at once.
I have released a first cut at an OpenGL binding for OS X to HEAD.</WithStack>
    <WithOutStack>Created attachment 19578
Initial implementation of org.eclipse.swt.opengl.carbon plugin

Adapted from org.eclipse.swt.opengl.gtk and org.eclipse.swt.opengl.win32
Created attachment 19579
Initial carbon support for org.eclipse.swt.opengl

OSX Port Notes
Change JAVA_HOME to /Library/Java/Home
from /bluebird/teamswt/swt-builddir/ive/bin

Not sure the best way to install/run it.
I had the install script (build.sh) copy it to my hardcoded VM library
location.

This doesn't completely work yet.  I will elaborate in a bug report.

Only changes outside of the carbon folder are to gl.h and glu.h.
The include paths to gl.h are a little different in OSX (in &lt;OpenGL\gl.h&gt;
versus &lt;gl.h&gt;.
I just submitted two patches to get this up and running.  However, this is not
complete -- it's just an initial spike.

All of the OpenGL calls (from the platform-independent part of the library) are
hooked in and appear to work.  The org.eclipse.swt.opengl.examples now builds
and runs in OSX.  [My system is a PowerBook G4 (NV 5200Go) with OSX 10.3.]

The bad news... the GLContext doesn't really work properly.  It currently has
the same interface as the other platforms GLContext.  However, it is painted
behind the controls and isn't updated properly.  

If you do care to see it in action, fire up the example SWT program and make the
window bigger.  In some of demos, you can see some OpenGL drawing in the lower
left corner.

My main problem is properly hooking up the SWT Drawable's internal data
(CGContext) to the Apple OpenGL context (AGLContext).  I have a query out on the
mac-opengl list about this
(http://lists.apple.com/archives/mac-opengl/2005/Apr/msg00023.html).

Other notes
===========
In the patch, I had to set JAVA_HOME to /Library/Java/Home, from
/bluebird/teamswt/swt-builddir/ive/bin

I'm not sure the best way to install/run it.  I had the install script copy it
to my hardcoded VM library location.

All of the changes are isolated to carbon-specific directories, except for the
library files gl.h and glu.h.  This is because Apple uses different paths to
these files.

Font support hasn't started yet.
It still needs cleanup and beautification.

Evan, thanks for the submission!  We're at a stage right now where we're 
concentrating on swt issues that affect eclipse, so I can't look at your 
attachments right now, but I will once there are cycles available.

Thanks for the submission.  Your code helped me get started.  I hacked up my own
AGL binding and have it working pretty well, but of coursethere are still some
issues.  :)

Note that you don't need CGGLContextCreate, AFAICT that's only if you want to
use CoreGraphics calls to draw to an OpenGL surface (cool! but not portable). 
There's also an aglEnable flag you need to set to change the position of the
context.  I'm about to commit my implementation now, but I'm also changing the
API a bit so I'd like to check in all of the platforms at once.
I have released a first cut at an OpenGL binding for OS X to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87504" />
    <CreationDate amount="2005-03-09 10:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Log size limits and rotating logs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="3115" end="3286" />
        <code>if (message != null) {
    File file = getFile();
    if ((file != null) &amp;&amp; (file.length() &gt; SOME_LIMIT)) {
        rotateLog();
    }
    writer.write(message);
    ...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="5">
      <Enumeration lines="4">
        <Lines>
          <Line>1. the most recent log must remain named '.log'.</Line>
          <Line />
          <Line>2. The import function in the log view expects a .log extension, so for the</Line>
          <Line>backups to be able to be imported, they have to be named *.bak.log</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- use a property to specify a max log size (eclipse.log.max ?)</Line>
          <Line>- before opening the log file, check the size of the file</Line>
          <Line>- if the file size is greater that the eclipse.log.max then move the log file</Line>
          <Line>to &lt;logfilename&gt;.bak. Since this is java, we will have to copy the file and</Line>
          <Line>delete the original.</Line>
          <Line>- if eclipse.log.max=0 then there is no max and we never rotate to a bak file</Line>
          <Line>- only keep one bak file (maybe this could be configurable)</Line>
          <Line>- should default the value to something that is generally acceptable for the</Line>
          <Line>desktop SDK. (i.e. 5 megs, 10 megs ?)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- do we re-write the SESSION header in the new log?</Line>
          <Line>- do/should we somehow note that the entries are continued from the backup</Line>
          <Line>re comment 16:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- We should write the SESSION header to the new log</Line>
          <Line>- there should probably be some indication that this SESSION is a continuation</Line>
          <Line>from the backup log.  Any suggestions on how to do that?</Line>
          <Line>An entry saying "this is a continuation of log file &lt;backup log file location&gt;"?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- the value in the property are expected to be strings</Line>
          <Line>- the code has been formated</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I just had a problem with Eclipse stopping to work correctly because of a full 
hard disk. As it turned out, Eclipse's .log file became &gt; 2 GB over the time.

It would be nice if Eclipse would monitor the .log file's size and warn the 
user if it becomes bigger than some (configurable?) disk size, perhaps with the 
option of deleting/trimming it. Checking it once per startup might suffice.
The size check is interesting.
A complementary approach might be to have a rotating log (I think there is
another bug about that but I can't find it).
Marking as "helpwanted" since this is a pretty standalone item that could be
investigated by the community.
See bug 14223 comment 8, and bug 22765. 

Personally, I like the idea of warning the user when the log reaches a certain
limit and offer to delete it/part of it.
On embedded RCP apps it will probably make sense to limit the size of the log 
and never allow it to grow past a certain size.  Some scenarios (maybe most) 
would not want to warn the user, but rather just keep the file a reasonable 
size without user intervention.
A rotating log would be OK, too; I don't really need that warning...
I think the warning only makes sense for a certain set of users (most likely IDE
developers), but that would not work in RCP use cases.

Personnaly I would go for the rotating log without warning, where the max size
can be defined by a property.
Allowing the .log file to grow without bound is actually dangerous.  This
affects the stability of Eclipse, and other applications on the system.

I would argue that this is a bug (not an enhancement), and that a default limit
should be put in place.
Phil don't you have some code for this kind of problem?
This problem is on the eRCP to-do list. I have not addressed the problem yet.
The eRCP team will start looking into this.
Do you think you'll have a chance to solve that before we ship 3.1?
 
I discussed this with Phil.  We should be able to use a solution that does not 
impact the EclipseLog code too much and is acceptable for Eclipse 3.1 M7.  
Here is the strategy we came up with.

- use a property to specify a max log size (eclipse.log.max ?)
- before opening the log file, check the size of the file
- if the file size is greater that the eclipse.log.max then move the log file 
to &lt;logfilename&gt;.bak. Since this is java, we will have to copy the file and 
delete the original.
- if eclipse.log.max=0 then there is no max and we never rotate to a bak file
- only keep one bak file (maybe this could be configurable)
- should default the value to something that is generally acceptable for the 
desktop SDK. (i.e. 5 megs, 10 megs ?)

This fix will be isolated to the EclipseLog class.
"Since this is java, we will have to copy the file and 
delete the original."

Tom, could you clarify on why File.rename() is not appropriate? 
opps, you are right Rafael.  I don't know what I was thinking ...
File#renameTo(File) should work fine.
Ideally, this should also be able to handle the case where the log file is
filling up while Eclipse is running.  Perhaps in the method write(String), there
could be a line:

if (message != null) {
    File file = getFile();
    if ((file != null) &amp;&amp; (file.length() &gt; SOME_LIMIT)) {
        rotateLog();
    }
    writer.write(message);
    ...
}
Douglas, you are correct.  That is intention of this solution.  The log file 
is opened and closed for each log entry.  We would do the size check each time 
before opening the log file to write to it.  If a particular log entry is 
large then a log file may overstep the bounds of the max, but on the next log 
entry we would move the log to the .bak file.
If the log file could be moved to the backup with each entry...

- do we re-write the SESSION header in the new log?
- do/should we somehow note that the entries are continued from the backup
re comment 16:

- We should write the SESSION header to the new log
- there should probably be some indication that this SESSION is a continuation 
from the backup log.  Any suggestions on how to do that?
An entry saying "this is a continuation of log file &lt;backup log file location&gt;"?


Wassim, any thoughts since you are the log-parsing guy?
Long log files have been a concern for PDE for some time now.

What we have done since 3.0 is that we arbitrarily set s magic number to be 1M
If the log file is &gt; 1 M, we only read the last 1M.  This works well for us.

Prior to doing that, the log view was bringing the workbench to its knees when 
trying to read 250M files.

I was thinking more along the lines of how the Error Log view would behave if
the workspace log was spread across multiple files. Should the user know/care
about this?

In most cases when you get lots of exception its the first one that is important
because it will cause the trickle-down effect on other problems.

I'm just worried about the max size being set too low (by the user) and then us
receiving log files with only the last half of the stacks.

Another thing we used to have was a rolling log file. So you said you wanted 5
files of max length 1meg each and it logged that way and spill-over went to the
next one. (similar to the regular .bak suggestion but you'd just have 5 .bak files)

Or maybe I'm just thinking too much for a Friday...
Only when we first read the log upon startup is when PDE actually deals with 
the .log file directly.  That is the time when we read as much/little as we 
want.  After that, we register a log listener and log events to the view on 
our own.

So if you want to break up the log into multiple files or whatever, PDE could 
read the latest one (based on timestamp?) I suppose as a starting point and 
then it's business as usual
actually, as long as the most recent log is named '.log', PDE will have to do 
nothing special, which is great.

If people want to see individual older logs, they could use the import 
function in the log view.
This is Julian Chen, and I'm working on the log file size limitation function.
According to all comments up to now, the following is my summary and proposal.
Please let me know if you think anything is not ok.

There will be two new defined system properties.
"eclipse.log.size.max"   : The max size of log file.
	Data Type: Integer
	Default value when no assigned: 1000(KB)
	if (value==0) then it means no size limitation
	if (value&lt;10) then set value as 10(KB)
	(I think too small log size is not appropriate.)

"eclipse.log.backup.max" : The max amount of backup log file to keep.
	Data type: Integer
	Default value when no assigned: 1
	Value's min is '1' (at least one backup)

When the log() method is called to write log to file, it'll check current log 
file size. If the size oversteps the max value, then the log file will be 
renamed to &lt;log_file_name&gt;.&lt;index&gt;."bak"
For example,
	The first  backup log file name will be &lt;log_file_name&gt;.0.bak
	The second backup log file name will be &lt;log_file_name&gt;.1.bak
	The third  backup log file name will be &lt;log_file_name&gt;.2.bak
if the index is greater than the max ammount of backup logs, then it is reset 
to '0' and the oldest one will be overwritten.

New log file will be created and new SESSION header and the following String 
will be written in the file header.
	"This is a continuation of log file "+ &lt;previous file name&gt;
(Will it have any impact on log-parsing ?)

The log view only cares about two things:
1. the most recent log must remain named '.log'.

2. The import function in the log view expects a .log extension, so for the 
backups to be able to be imported, they have to be named *.bak.log

Following is an example of a session header. You are thinking of putting that
message along with the other info (below the header?), correct?

!SESSION 2005-04-19 15:31:16.357 -----------------------------------------------
eclipse.buildId=I20050414-1107
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -keyring c:\Documents and Settings\rchaves\.keyring
-showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -keyring c:\Documents and
Settings\rchaves\.keyring -consolelog -console -showlocation -debug
Do we require multiple log file backups for the workbench logs?  Would keeping
at most one single backup be sufficient as more data can be kept by increasing
the max size?  

I think for the configuration/[timestamp].log files, we should keep an
adjustable number of past log files as these will always be one log file per
session.
I'm going to change the backup log filename as
	The first  backup log file name will be &lt;log_file_basename&gt;.bak_0.log
	The second backup log file name will be &lt;log_file_basename&gt;.bak_1.log
	The third  backup log file name will be &lt;log_file_basename&gt;.bak_2.log

And, the new log header will look like

!SESSION 2005-04-28 23:12:46.904 ----------------------------------------------
-
eclipse.buildId=unknown
java.version=1.4.2_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=zh_TW
Framework arguments:  -application org.eclipse.ercp.example.ercpHello.ercpHello
Command-line arguments:  -application 
org.eclipse.ercp.example.ercpHello.ercpHello -console

This is a continuation of log file 
e:\eRCP\image\configuration\1114701137982.bak_0.log

!ENTRY org.eclipse.osgi 2005-04-28 23:12:46.904
!MESSAGE ...

Then it should be easier for log view to read the data.

Created attachment 20595
Patch to EclipseLog.java

This patch provides the configurable limitation of log file size.
I started the review of the patch.
The patch has been released in HEAD.
I changed the following things:
- the value in the property are expected to be strings
- the code has been formated

I kept the return value of checkLogFileSize() even though the value is never used.
What was the intent here.

Instead of keeping the same behavior than in 3.0 (one big unique log file), I
deliberatly chose to enable the support and create a new file whenever the
current file is bigger than 1M.

If you think this can be a problem let me know.
I updated to code to protect the callers (using doPriveledge) when security is 
enabled.  Otherwise SecurityExceptions could be thrown while accessing the 
system properties.
Updating title to accurately reflect what was done.
(In reply to comment #31)
&gt; The patch has been released in HEAD.
&gt; I changed the following things:
&gt; - the value in the property are expected to be strings
&gt; - the code has been formated
&gt; I kept the return value of checkLogFileSize() even though the value is never 
used.
&gt; What was the intent here.

    It's not used now, just a info to tell caller if it failed to backup log 
file.

&gt; Instead of keeping the same behavior than in 3.0 (one big unique log file), I
&gt; deliberatly chose to enable the support and create a new file whenever the
&gt; current file is bigger than 1M.

    Not sure if I understand it. This patch enables this support by default, 
right ?

It is just that I hesitated to turn on this support by default, but I finally
did it.
I'd like to see these options in the preferences, maybe along with the PDE options for the log (only show current session, sort by .. etc.).
Any plan on doing so?
Thanks :)
HH</WithStack>
    <WithOutStack>I just had a problem with Eclipse stopping to work correctly because of a full 
hard disk. As it turned out, Eclipse's .log file became &gt; 2 GB over the time.

It would be nice if Eclipse would monitor the .log file's size and warn the 
user if it becomes bigger than some (configurable?) disk size, perhaps with the 
option of deleting/trimming it. Checking it once per startup might suffice.
The size check is interesting.
A complementary approach might be to have a rotating log (I think there is
another bug about that but I can't find it).
Marking as "helpwanted" since this is a pretty standalone item that could be
investigated by the community.
See bug 14223 comment 8, and bug 22765. 

Personally, I like the idea of warning the user when the log reaches a certain
limit and offer to delete it/part of it.
On embedded RCP apps it will probably make sense to limit the size of the log 
and never allow it to grow past a certain size.  Some scenarios (maybe most) 
would not want to warn the user, but rather just keep the file a reasonable 
size without user intervention.
A rotating log would be OK, too; I don't really need that warning...
I think the warning only makes sense for a certain set of users (most likely IDE
developers), but that would not work in RCP use cases.

Personnaly I would go for the rotating log without warning, where the max size
can be defined by a property.
Allowing the .log file to grow without bound is actually dangerous.  This
affects the stability of Eclipse, and other applications on the system.

I would argue that this is a bug (not an enhancement), and that a default limit
should be put in place.
Phil don't you have some code for this kind of problem?
This problem is on the eRCP to-do list. I have not addressed the problem yet.
The eRCP team will start looking into this.
Do you think you'll have a chance to solve that before we ship 3.1?
 
I discussed this with Phil.  We should be able to use a solution that does not 
impact the EclipseLog code too much and is acceptable for Eclipse 3.1 M7.  
Here is the strategy we came up with.

- use a property to specify a max log size (eclipse.log.max ?)
- before opening the log file, check the size of the file
- if the file size is greater that the eclipse.log.max then move the log file 
to &lt;logfilename&gt;.bak. Since this is java, we will have to copy the file and 
delete the original.
- if eclipse.log.max=0 then there is no max and we never rotate to a bak file
- only keep one bak file (maybe this could be configurable)
- should default the value to something that is generally acceptable for the 
desktop SDK. (i.e. 5 megs, 10 megs ?)

This fix will be isolated to the EclipseLog class.
"Since this is java, we will have to copy the file and 
delete the original."

Tom, could you clarify on why File.rename() is not appropriate? 
opps, you are right Rafael.  I don't know what I was thinking ...
File#renameTo(File) should work fine.
Ideally, this should also be able to handle the case where the log file is
filling up while Eclipse is running.  Perhaps in the method write(String), there
could be a line:

if (message != null) {
    File file = getFile();
    if ((file != null) &amp;&amp; (file.length() &gt; SOME_LIMIT)) {
        rotateLog();
    }
    writer.write(message);
    ...
}
Douglas, you are correct.  That is intention of this solution.  The log file 
is opened and closed for each log entry.  We would do the size check each time 
before opening the log file to write to it.  If a particular log entry is 
large then a log file may overstep the bounds of the max, but on the next log 
entry we would move the log to the .bak file.
If the log file could be moved to the backup with each entry...

- do we re-write the SESSION header in the new log?
- do/should we somehow note that the entries are continued from the backup
re comment 16:

- We should write the SESSION header to the new log
- there should probably be some indication that this SESSION is a continuation 
from the backup log.  Any suggestions on how to do that?
An entry saying "this is a continuation of log file &lt;backup log file location&gt;"?


Wassim, any thoughts since you are the log-parsing guy?
Long log files have been a concern for PDE for some time now.

What we have done since 3.0 is that we arbitrarily set s magic number to be 1M
If the log file is &gt; 1 M, we only read the last 1M.  This works well for us.

Prior to doing that, the log view was bringing the workbench to its knees when 
trying to read 250M files.

I was thinking more along the lines of how the Error Log view would behave if
the workspace log was spread across multiple files. Should the user know/care
about this?

In most cases when you get lots of exception its the first one that is important
because it will cause the trickle-down effect on other problems.

I'm just worried about the max size being set too low (by the user) and then us
receiving log files with only the last half of the stacks.

Another thing we used to have was a rolling log file. So you said you wanted 5
files of max length 1meg each and it logged that way and spill-over went to the
next one. (similar to the regular .bak suggestion but you'd just have 5 .bak files)

Or maybe I'm just thinking too much for a Friday...
Only when we first read the log upon startup is when PDE actually deals with 
the .log file directly.  That is the time when we read as much/little as we 
want.  After that, we register a log listener and log events to the view on 
our own.

So if you want to break up the log into multiple files or whatever, PDE could 
read the latest one (based on timestamp?) I suppose as a starting point and 
then it's business as usual
actually, as long as the most recent log is named '.log', PDE will have to do 
nothing special, which is great.

If people want to see individual older logs, they could use the import 
function in the log view.
This is Julian Chen, and I'm working on the log file size limitation function.
According to all comments up to now, the following is my summary and proposal.
Please let me know if you think anything is not ok.

There will be two new defined system properties.
"eclipse.log.size.max"   : The max size of log file.
	Data Type: Integer
	Default value when no assigned: 1000(KB)
	if (value==0) then it means no size limitation
	if (value&lt;10) then set value as 10(KB)
	(I think too small log size is not appropriate.)

"eclipse.log.backup.max" : The max amount of backup log file to keep.
	Data type: Integer
	Default value when no assigned: 1
	Value's min is '1' (at least one backup)

When the log() method is called to write log to file, it'll check current log 
file size. If the size oversteps the max value, then the log file will be 
renamed to &lt;log_file_name&gt;.&lt;index&gt;."bak"
For example,
	The first  backup log file name will be &lt;log_file_name&gt;.0.bak
	The second backup log file name will be &lt;log_file_name&gt;.1.bak
	The third  backup log file name will be &lt;log_file_name&gt;.2.bak
if the index is greater than the max ammount of backup logs, then it is reset 
to '0' and the oldest one will be overwritten.

New log file will be created and new SESSION header and the following String 
will be written in the file header.
	"This is a continuation of log file "+ &lt;previous file name&gt;
(Will it have any impact on log-parsing ?)

The log view only cares about two things:
1. the most recent log must remain named '.log'.

2. The import function in the log view expects a .log extension, so for the 
backups to be able to be imported, they have to be named *.bak.log

Following is an example of a session header. You are thinking of putting that
message along with the other info (below the header?), correct?

!SESSION 2005-04-19 15:31:16.357 -----------------------------------------------
eclipse.buildId=I20050414-1107
java.version=1.5.0
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -keyring c:\Documents and Settings\rchaves\.keyring
-showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -keyring c:\Documents and
Settings\rchaves\.keyring -consolelog -console -showlocation -debug
Do we require multiple log file backups for the workbench logs?  Would keeping
at most one single backup be sufficient as more data can be kept by increasing
the max size?  

I think for the configuration/[timestamp].log files, we should keep an
adjustable number of past log files as these will always be one log file per
session.
I'm going to change the backup log filename as
	The first  backup log file name will be &lt;log_file_basename&gt;.bak_0.log
	The second backup log file name will be &lt;log_file_basename&gt;.bak_1.log
	The third  backup log file name will be &lt;log_file_basename&gt;.bak_2.log

And, the new log header will look like

!SESSION 2005-04-28 23:12:46.904 ----------------------------------------------
-
eclipse.buildId=unknown
java.version=1.4.2_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=zh_TW
Framework arguments:  -application org.eclipse.ercp.example.ercpHello.ercpHello
Command-line arguments:  -application 
org.eclipse.ercp.example.ercpHello.ercpHello -console

This is a continuation of log file 
e:\eRCP\image\configuration\1114701137982.bak_0.log

!ENTRY org.eclipse.osgi 2005-04-28 23:12:46.904
!MESSAGE ...

Then it should be easier for log view to read the data.

Created attachment 20595
Patch to EclipseLog.java

This patch provides the configurable limitation of log file size.
I started the review of the patch.
The patch has been released in HEAD.
I changed the following things:
- the value in the property are expected to be strings
- the code has been formated

I kept the return value of checkLogFileSize() even though the value is never used.
What was the intent here.

Instead of keeping the same behavior than in 3.0 (one big unique log file), I
deliberatly chose to enable the support and create a new file whenever the
current file is bigger than 1M.

If you think this can be a problem let me know.
I updated to code to protect the callers (using doPriveledge) when security is 
enabled.  Otherwise SecurityExceptions could be thrown while accessing the 
system properties.
Updating title to accurately reflect what was done.
(In reply to comment #31)
&gt; The patch has been released in HEAD.
&gt; I changed the following things:
&gt; - the value in the property are expected to be strings
&gt; - the code has been formated
&gt; I kept the return value of checkLogFileSize() even though the value is never 
used.
&gt; What was the intent here.

    It's not used now, just a info to tell caller if it failed to backup log 
file.

&gt; Instead of keeping the same behavior than in 3.0 (one big unique log file), I
&gt; deliberatly chose to enable the support and create a new file whenever the
&gt; current file is bigger than 1M.

    Not sure if I understand it. This patch enables this support by default, 
right ?

It is just that I hesitated to turn on this support by default, but I finally
did it.
I'd like to see these options in the preferences, maybe along with the PDE options for the log (only show current session, sort by .. etc.).
Any plan on doing so?
Thanks :)
HH</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87505" />
    <CreationDate amount="2005-03-09 10:28:00 -0500" />
    <DupId amount="19945" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] TVT3.1 #30 - Date format entry should be localized</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On the menu bar from the main Workbench panel, click Window &gt; Open Perspective &gt;
Other

Select CVS Repository Exploring and click OK

Click Add CVS Repository 

Put tvt in the necessary fields

Click Finish. Click yes on Unable to validate message

Right click on  &gt; New &gt; Date Tag


The date format is always Month/Day/Year.  This is an incorrect format for most
countries, as some use Year/Month/Day or Day/Month/Year, etc...

See screenshot.
Created attachment 18584
Hungarian Screenshot
If this were to be solved, I think it would best be solved in a place that was 
reusable by others. Assigning to UI (although SWT may be a more appropriate 
place).
Michael are you using java API or are you rolling your own? i.e.
java.util.getDate().toString()
Michael tells me they are doing thier own. As we do not use date settings in the
workbench currently we have no plans for providing a reusable component at this
time.
*** Bug 106089 has been marked as a duplicate of this bug. ***
Copying Steve since the logical place for a Date widget may be SWT. Do you 
have any thoughts on this Steve?
There have been requests for a date widget in the past but it has been low 
priority.
This will not be addressed in the 3.1.1 stream.
The month, day and year combos will always be in the same position no matter 
what the locale so the label is never incorrect.  This defect appears to be a 
duplicate of bug 19945 which is a feature request that will hopefully be 
addressed in 3.2, due to popular demand.


*** This bug has been marked as a duplicate of 19945 ***</WithStack>
    <WithOutStack>On the menu bar from the main Workbench panel, click Window &gt; Open Perspective &gt;
Other

Select CVS Repository Exploring and click OK

Click Add CVS Repository 

Put tvt in the necessary fields

Click Finish. Click yes on Unable to validate message

Right click on  &gt; New &gt; Date Tag


The date format is always Month/Day/Year.  This is an incorrect format for most
countries, as some use Year/Month/Day or Day/Month/Year, etc...

See screenshot.
Created attachment 18584
Hungarian Screenshot
If this were to be solved, I think it would best be solved in a place that was 
reusable by others. Assigning to UI (although SWT may be a more appropriate 
place).
Michael are you using java API or are you rolling your own? i.e.
java.util.getDate().toString()
Michael tells me they are doing thier own. As we do not use date settings in the
workbench currently we have no plans for providing a reusable component at this
time.
*** Bug 106089 has been marked as a duplicate of this bug. ***
Copying Steve since the logical place for a Date widget may be SWT. Do you 
have any thoughts on this Steve?
There have been requests for a date widget in the past but it has been low 
priority.
This will not be addressed in the 3.1.1 stream.
The month, day and year combos will always be in the same position no matter 
what the locale so the label is never incorrect.  This defect appears to be a 
duplicate of bug 19945 which is a feature request that will hopefully be 
addressed in 3.2, due to popular demand.


*** This bug has been marked as a duplicate of 19945 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87506" />
    <CreationDate amount="2005-03-09 10:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>ExceptionInInitializerError while running UiTestSuite</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242225">
        <Exception>java.util.MissingResourceException</Exception>
        <Reason>Can't find bundle for base name
org.eclipse.ui.views.navigator.messages, locale en_US</Reason>
        <Frames>
          <Frame depth="0">java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:837)</Frame>
          <Frame depth="1">java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:806)</Frame>
          <Frame depth="2">java.util.ResourceBundle.getBundle(ResourceBundle.java:550)</Frame>
          <Frame depth="3">org.eclipse.ui.tests.dialogs.ResourceNavigatorMessagesCopy.&lt;clinit&gt;(ResourceNavigatorMessagesCopy.java:28)</Frame>
          <Frame depth="4">org.eclipse.ui.tests.dialogs.UIDialogsAuto.&lt;clinit&gt;(UIDialogsAuto.java:44)</Frame>
          <Frame depth="5">java.lang.Class.forName0(Native Method)</Frame>
          <Frame depth="6">java.lang.Class.forName(Class.java:164)</Frame>
          <Frame depth="7">org.eclipse.ui.tests.dialogs.UIAutomatedSuite.&lt;init&gt;(UIAutomatedSuite.java:35)</Frame>
          <Frame depth="8">org.eclipse.ui.tests.UiTestSuite.&lt;init&gt;(UiTestSuite.java:57)</Frame>
          <Frame depth="9">org.eclipse.ui.tests.UiTestSuite.suite(UiTestSuite.java:50)</Frame>
          <Frame depth="10">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="11">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="12">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="13">java.lang.reflect.Method.invoke(Method.java:582)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest(RemoteTestRunner.java:401)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:441)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:342)</Frame>
          <Frame depth="17">org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:36)</Frame>
          <Frame depth="18">org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:110)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2754)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2474)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)</Frame>
          <Frame depth="26">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="28">org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:39)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:582)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:260)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:887)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:871)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050308-1510

There is an error while running the UiTestSuite.  It happens because
UIDialogsAuto cannot complete its static initialization properly.  I'm not sure
why this is happening, but I think it might be related to the recent resource
bundle work.


java.util.MissingResourceException: Can't find bundle for base name
org.eclipse.ui.views.navigator.messages, locale en_US
	at java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:837)
	at java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:806)
	at java.util.ResourceBundle.getBundle(ResourceBundle.java:550)
	at
org.eclipse.ui.tests.dialogs.ResourceNavigatorMessagesCopy.&lt;clinit&gt;(ResourceNavigatorMessagesCopy.java:28)
	at org.eclipse.ui.tests.dialogs.UIDialogsAuto.&lt;clinit&gt;(UIDialogsAuto.java:44)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:164)
	at org.eclipse.ui.tests.dialogs.UIAutomatedSuite.&lt;init&gt;(UIAutomatedSuite.java:35)
	at org.eclipse.ui.tests.UiTestSuite.&lt;init&gt;(UiTestSuite.java:57)
	at org.eclipse.ui.tests.UiTestSuite.suite(UiTestSuite.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest(RemoteTestRunner.java:401)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:441)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:342)
	at
org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:36)
	at
org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:110)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2754)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2474)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:39)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:582)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
	at org.eclipse.core.launcher.Main.run(Main.java:887)
	at org.eclipse.core.launcher.Main.main(Main.java:871)
Fixed in build &gt;20050310
Verified in 20050330</WithStack>
    <WithOutStack>I20050308-1510

There is an error while running the UiTestSuite.  It happens because
UIDialogsAuto cannot complete its static initialization properly.  I'm not sure
why this is happening, but I think it might be related to the recent resource
bundle work.



Fixed in build &gt;20050310
Verified in 20050330</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87507" />
    <CreationDate amount="2005-03-09 10:42:00 -0500" />
    <DupId amount="87515" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Drop a SWT TableColumn onto a Table throws NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Also fails to generate code but shows up in the Beans viewer and Graph viewer.
See attached .log for stack trace.
Created attachment 18597
.log containing stack trace info
disregard.... created two bugs by mistake

*** This bug has been marked as a duplicate of 87515 ***
closing</WithStack>
    <WithOutStack>Also fails to generate code but shows up in the Beans viewer and Graph viewer.
See attached .log for stack trace.
Created attachment 18597
.log containing stack trace info
disregard.... created two bugs by mistake

*** This bug has been marked as a duplicate of 87515 ***
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87508" />
    <CreationDate amount="2005-03-09 10:42:00 -0500" />
    <DupId amount="87572" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Dropping a Composite into a Composite throws Exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.1m5a releases

Create a new SWT Shell.  Place a composite on the shell and size it so you can
see it.  Place a second composite inside of the first. An exception is thrown in
org.eclipse.ve.java.core.  An error log is attached.
Created attachment 18586
Composite into Composite Error Log
This is a problem with the source translator processing things bottom up when 
the GUI is being manipulated

*** This bug has been marked as a duplicate of 87572 ***
Verified in VE Nightly Build N20050310</WithStack>
    <WithOutStack>3.1m5a releases

Create a new SWT Shell.  Place a composite on the shell and size it so you can
see it.  Place a second composite inside of the first. An exception is thrown in
org.eclipse.ve.java.core.  An error log is attached.
Created attachment 18586
Composite into Composite Error Log
This is a problem with the source translator processing things bottom up when 
the GUI is being manipulated

*** This bug has been marked as a duplicate of 87572 ***
Verified in VE Nightly Build N20050310</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87509" />
    <CreationDate amount="2005-03-09 10:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Release Engineering" />
    <component amount="TPTP.Web" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Enhance "What's New" section</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>An enhancement to "What's New" section of the TPTP website home page has been
suggested, to make it more immediately obvious to website visitors. One
suggestion is that the yellow "New" icon that can be found on other Eclipse.org
web pages (e.g. http://download.eclipse.org/tools/emf/scripts/home.php) is used.
Dan, you can mark this bug fixed. See: http://www.eclipse.org/tptp/
Melanie, the gif I used is a little different from the one you pointed to, but
it still stands out, and it means we don't have to add it every time someone
adds a new "What's New" link. Let me know what you think, and if you hate it, we
can change it. :)
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>An enhancement to "What's New" section of the TPTP website home page has been
suggested, to make it more immediately obvious to website visitors. One
suggestion is that the yellow "New" icon that can be found on other Eclipse.org
web pages (e.g. http://download.eclipse.org/tools/emf/scripts/home.php) is used.
Dan, you can mark this bug fixed. See: http://www.eclipse.org/tptp/
Melanie, the gif I used is a little different from the one you pointed to, but
it still stands out, and it means we don't have to add it every time someone
adds a new "What's New" link. Let me know what you think, and if you hate it, we
can change it. :)
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87510" />
    <CreationDate amount="2005-03-09 10:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Release Engineering" />
    <component amount="TPTP.Web" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Addition of links to press releases</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Links to the following TPTP-related member company press releases should be
added to the TPTP website's press room, with additional temporary links on the
What's New section of the home page:

OC Systems URL link: http://www.ocsystems.com/pr030105.html
CA URL link: http://www3.ca.com/press/PressRelease.aspx?CID=67146
Fixes submitted
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Links to the following TPTP-related member company press releases should be
added to the TPTP website's press room, with additional temporary links on the
What's New section of the home page:

OC Systems URL link: http://www.ocsystems.com/pr030105.html
CA URL link: http://www3.ca.com/press/PressRelease.aspx?CID=67146
Fixes submitted
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87511" />
    <CreationDate amount="2005-03-09 11:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java serialization execution can not be removed from the debug view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>(1) The "serial launcher" could register an IProcess with the launch which</Line>
          <Line>would allow it to show as "terminated" and be removed by the user. In this</Line>
          <Line>case, you should read from the IProcess's IStreamsProxy rather than the</Line>
          <Line>java.lang.Process directly. Note, in this case, the user would also see the</Line>
          <Line>console output.</Line>
          <Line />
          <Line>(2) We would need to new add suppot the debug platform to allow a launch to be</Line>
          <Line>unregistered/hidden from the debug view.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- why do we need to run a VM?</Line>
          <Line>- why can't that be done in a background job?</Line>
          <Line>Pascal, I'm confused - who's launching a VM to create a serial ID? Is this</Line>
          <Line>really a debug issue?</Line>
          <Line>I entered against Debug because the visible part of the pb was that I was stuck</Line>
          <Line>with an undeletable entry in the debug view. However it seems that the process</Line>
          <Line>is created by JDT UI as part of the quickfix to generate serial IDs for classes.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The generation of the serial ID runs a VM. This process appears in the debug 
view, however the process is complete the entry is not removed from the debug 
view nor can it be removed manually.

Side questions:
- why do we need to run a VM?
- why can't that be done in a background job?
Pascal, I'm confused - who's launching a VM to create a serial ID? Is this 
really a debug issue?
I entered against Debug because the visible part of the pb was that I was stuck
with an undeletable entry in the debug view. However it seems that the process
is created by JDT UI as part of the quickfix to generate serial IDs for classes.

I was using build I20050308-0835.
I locked up in an infinite loop when attempting to generate a serial ID, which 
is noted by bug 87569.

2XMFULLTHDDUMP Full thread dump J9SE VM (J2RE 1.4.2 IBM J9 2.2 Windows XP x86-
32 build 20040916_0908_lHdSMR, native threads):
3XMTHREADINFO      "main" (TID:0x0009C600, sys_thread_t:0x000359FC, state:CW, 
native ID:0x00000CA0) prio=6
4XESTACKTRACE          at java/lang/Throwable.printStackTrace
(Throwable.java:248)
4XESTACKTRACE          at 
org/eclipse/core/runtime/CoreException.printStackTrace(CoreException.java:94)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.getStackTrace(EclipseLog.java:316)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.writeStack(EclipseLog.java:372)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.writeLog
(EclipseLog.java:337)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.log
(EclipseLog.java:208)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/PlatformLogWriter.logging
(PlatformLogWriter.java:35)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform$1.run
(InternalPlatform.java:831)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.run
(InternalPlatform.java:1015)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.log
(InternalPlatform.java:834)
4XESTACKTRACE          at org/eclipse/core/internal/runtime/Log.log
(Log.java:56)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:497)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:506)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImageKey
(DefaultLabelProvider.java:133)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:57)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
With the fix to 87569, this is still a problem. The launch does not add 
targets/processes and thus does not register as terminated, and cannot be 
removed. 

Ideally, the launch would not appear at all (it is intended to be private).
Tobias, there are two possible solutions to this bug:

(1) The "serial launcher" could register an IProcess with the launch which 
would allow it to show as "terminated" and be removed by the user. In this 
case, you should read from the IProcess's IStreamsProxy rather than the 
java.lang.Process directly. Note, in this case, the user would also see the 
console output.

(2) We would need to new add suppot the debug platform to allow a launch to be 
unregistered/hidden from the debug view.

Which is the better solution for you?
(2) is definitely the better solution. Showing output on the console during a 
quickfix is not an option. It would be good to introduce a "private" attribute 
for launches similar to the already existing one for launch configurations.
Ah. We already have support for this :-) See bug 67439.

The SerialVersionHashProposal should use the alternate 
ILaunchConfiguration.launch(...) method to specify that the launch should not 
be registered.
(NOTE, you need the latest debug code from HEAD to avoid the infinite loop 
problem in bug 87569).
Fixed &gt; 20050316</WithStack>
    <WithOutStack>The generation of the serial ID runs a VM. This process appears in the debug 
view, however the process is complete the entry is not removed from the debug 
view nor can it be removed manually.

Side questions:
- why do we need to run a VM?
- why can't that be done in a background job?
Pascal, I'm confused - who's launching a VM to create a serial ID? Is this 
really a debug issue?
I entered against Debug because the visible part of the pb was that I was stuck
with an undeletable entry in the debug view. However it seems that the process
is created by JDT UI as part of the quickfix to generate serial IDs for classes.

I was using build I20050308-0835.
I locked up in an infinite loop when attempting to generate a serial ID, which 
is noted by bug 87569.

2XMFULLTHDDUMP Full thread dump J9SE VM (J2RE 1.4.2 IBM J9 2.2 Windows XP x86-
32 build 20040916_0908_lHdSMR, native threads):
3XMTHREADINFO      "main" (TID:0x0009C600, sys_thread_t:0x000359FC, state:CW, 
native ID:0x00000CA0) prio=6
4XESTACKTRACE          at java/lang/Throwable.printStackTrace
(Throwable.java:248)
4XESTACKTRACE          at 
org/eclipse/core/runtime/CoreException.printStackTrace(CoreException.java:94)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.getStackTrace(EclipseLog.java:316)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.writeStack(EclipseLog.java:372)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.writeLog
(EclipseLog.java:337)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.log
(EclipseLog.java:208)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/PlatformLogWriter.logging
(PlatformLogWriter.java:35)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform$1.run
(InternalPlatform.java:831)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.run
(InternalPlatform.java:1015)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.log
(InternalPlatform.java:834)
4XESTACKTRACE          at org/eclipse/core/internal/runtime/Log.log
(Log.java:56)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:497)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:506)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImageKey
(DefaultLabelProvider.java:133)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:57)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
With the fix to 87569, this is still a problem. The launch does not add 
targets/processes and thus does not register as terminated, and cannot be 
removed. 

Ideally, the launch would not appear at all (it is intended to be private).
Tobias, there are two possible solutions to this bug:

(1) The "serial launcher" could register an IProcess with the launch which 
would allow it to show as "terminated" and be removed by the user. In this 
case, you should read from the IProcess's IStreamsProxy rather than the 
java.lang.Process directly. Note, in this case, the user would also see the 
console output.

(2) We would need to new add suppot the debug platform to allow a launch to be 
unregistered/hidden from the debug view.

Which is the better solution for you?
(2) is definitely the better solution. Showing output on the console during a 
quickfix is not an option. It would be good to introduce a "private" attribute 
for launches similar to the already existing one for launch configurations.
Ah. We already have support for this :-) See bug 67439.

The SerialVersionHashProposal should use the alternate 
ILaunchConfiguration.launch(...) method to specify that the launch should not 
be registered.
(NOTE, you need the latest debug code from HEAD to avoid the infinite loop 
problem in bug 87569).
Fixed &gt; 20050316</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87512" />
    <CreationDate amount="2005-03-09 11:04:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The Eclipse API scanner is running against component.xml files generated using M2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, the Eclipse API scanner is running against component.xml files that 
were generated using M2. As a result, the API reports may miss a class or 
two... if there are new packages/plugins since M2. Until teams are maintaining 
their own component.xml files, the only way to keep things up to date is to re-
gen these component.xml files in every build (based on the default Eclipse 
naming convention).
Created attachment 18601
Apply this patch to /home/webtools/org.eclipse.wtp.releng
Created attachment 18616
Apply this patch to /home/webtools/org.eclipse.wtp.releng
fixed in 20050313
closing bug</WithStack>
    <WithOutStack>Currently, the Eclipse API scanner is running against component.xml files that 
were generated using M2. As a result, the API reports may miss a class or 
two... if there are new packages/plugins since M2. Until teams are maintaining 
their own component.xml files, the only way to keep things up to date is to re-
gen these component.xml files in every build (based on the default Eclipse 
naming convention).
Created attachment 18601
Apply this patch to /home/webtools/org.eclipse.wtp.releng
Created attachment 18616
Apply this patch to /home/webtools/org.eclipse.wtp.releng
fixed in 20050313
closing bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87513" />
    <CreationDate amount="2005-03-09 11:08:00 -0500" />
    <DupId amount="97902" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE trying to get the generic signature of an unresolved method binding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Start an empty workspace.  Don't change the default options.</Line>
          <Line>2) Set the JDK to be a 1.5.0 JDK</Line>
          <Line>3) Create a java project that is using this JDK</Line>
          <Line>4) Open type java.util.Collections.</Line>
          <Line>5) Go to the method:</Line>
          <Line>public static &lt;T&gt; T min(Collection&lt;? extends T&gt; coll, Comparator&lt;? super T&gt;</Line>
          <Line>comp) {</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using latest, I got the following error:

Exception in thread "Text Viewer Hover Presenter" java.lang.NullPointerException
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature(MethodBinding.java:339)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:293)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:282)
	at
org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey(TypeVariableBinding.java:177)
	at
org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.computeUniqueKey(WildcardBinding.java:267)
	at
org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeUniqueKey(ParameterizedTypeBinding.java:139)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(SelectionEngine.java:859)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:731)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:140)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:152)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:141)
	at
org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getHoverInfo(AbstractJavaEditorTextHover.java:108)
	at
org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo(BestMatchHover.java:102)
	at
org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo(JavaEditorTextHoverProxy.java:69)
	at
org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:160)


Steps to reproduce:
1) Start an empty workspace.  Don't change the default options.
2) Set the JDK to be a 1.5.0 JDK
3) Create a java project that is using this JDK
4) Open type java.util.Collections.
5) Go to the method:
    public static &lt;T&gt; T min(Collection&lt;? extends T&gt; coll, Comparator&lt;? super T&gt;
comp) {

And put the mouse on top of Comparator. You should get the stack trace.
Debugging the code it seems that the method binding is not resolved yet.

The problem seems to be in the code assist SelectionEngine class.
*** Bug 87516 has been marked as a duplicate of this bug. ***
*** Bug 89528 has been marked as a duplicate of this bug. ***
Jerome - is this still happening in latest?
Verified this is fixed in HEAD.

*** This bug has been marked as a duplicate of 97902 ***</WithStack>
    <WithOutStack>Using latest, I got the following error:

Exception in thread "Text Viewer Hover Presenter" java.lang.NullPointerException
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature(MethodBinding.java:339)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:293)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:282)
	at
org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey(TypeVariableBinding.java:177)
	at
org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.computeUniqueKey(WildcardBinding.java:267)
	at
org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeUniqueKey(ParameterizedTypeBinding.java:139)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(SelectionEngine.java:859)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:731)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:140)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:152)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:141)
	at
org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getHoverInfo(AbstractJavaEditorTextHover.java:108)
	at
org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo(BestMatchHover.java:102)
	at
org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo(JavaEditorTextHoverProxy.java:69)
	at
org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:160)


Steps to reproduce:
1) Start an empty workspace.  Don't change the default options.
2) Set the JDK to be a 1.5.0 JDK
3) Create a java project that is using this JDK
4) Open type java.util.Collections.
5) Go to the method:
    public static &lt;T&gt; T min(Collection&lt;? extends T&gt; coll, Comparator&lt;? super T&gt;
comp) {

And put the mouse on top of Comparator. You should get the stack trace.
Debugging the code it seems that the method binding is not resolved yet.

The problem seems to be in the code assist SelectionEngine class.
*** Bug 87516 has been marked as a duplicate of this bug. ***
*** Bug 89528 has been marked as a duplicate of this bug. ***
Jerome - is this still happening in latest?
Verified this is fixed in HEAD.

*** This bug has been marked as a duplicate of 97902 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87514" />
    <CreationDate amount="2005-03-09 11:11:00 -0500" />
    <DupId amount="88023" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[5.0][navigation] Selecting method in outline does not update editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050308-1510

Create a JDK 5 Project
Open the Collections class via Ctrl-Shift-T

There are a few (3) items in the Outline view when selected will not move the
selection in the editor.  For example, select the first binarySearch which
matches public static &lt;T&gt;
    int binarySearch(List&lt;? extends Comparable&lt;? super T&gt;&gt; list, T key)

The selection remains where it is.
The JDT Core model comes from the class files and does not match 1:1 to the source.


*** This bug has been marked as a duplicate of 88023 ***</WithStack>
    <WithOutStack>I20050308-1510

Create a JDK 5 Project
Open the Collections class via Ctrl-Shift-T

There are a few (3) items in the Outline view when selected will not move the
selection in the editor.  For example, select the first binarySearch which
matches public static &lt;T&gt;
    int binarySearch(List&lt;? extends Comparable&lt;? super T&gt;&gt; list, T key)

The selection remains where it is.
The JDT Core model comes from the class files and does not match 1:1 to the source.


*** This bug has been marked as a duplicate of 88023 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87515" />
    <CreationDate amount="2005-03-09 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Drop a SWT TableColumn onto a Table throws NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>This doesn't fail every time but often enough.
Create a SWT app with Shell.
Drop a Table onto the Shell.
Drop a TableColumn onto the Table in either the Beans view or Graph view.
NPE is thrown, Editparts show up in both views but code is not generated.
Attached is the .log with stack trace
Created attachment 18588
.log containing stack trace info
*** Bug 87507 has been marked as a duplicate of this bug. ***
This is a more global problem and occurs just dropping a button into a
composite. But only occurs after you have closed the editor and reopened it for
editing. The method adapters weren't being restored when coming from the model
cache.

Gili fixed and released to HEAD (VE 1.1).
Verified in VE Nightly Build N20050310
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>This doesn't fail every time but often enough.
Create a SWT app with Shell.
Drop a Table onto the Shell.
Drop a TableColumn onto the Table in either the Beans view or Graph view.
NPE is thrown, Editparts show up in both views but code is not generated.
Attached is the .log with stack trace
Created attachment 18588
.log containing stack trace info
*** Bug 87507 has been marked as a duplicate of this bug. ***
This is a more global problem and occurs just dropping a button into a
composite. But only occurs after you have closed the editor and reopened it for
editing. The method adapters weren't being restored when coming from the model
cache.

Gili fixed and released to HEAD (VE 1.1).
Verified in VE Nightly Build N20050310
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87516" />
    <CreationDate amount="2005-03-09 11:19:00 -0500" />
    <DupId amount="87513" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in MethodBinding.genericSignature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242240">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature(MethodBinding.java:339)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:293)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:282)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey(TypeVariableBinding.java:177)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.computeUniqueKey(WildcardBinding.java:267)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeUniqueKey(ParameterizedTypeBinding.java:139)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(SelectionEngine.java:859)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:731)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:140)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:152)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:141)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getHoverInfo(AbstractJavaEditorTextHover.java:108)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo(BestMatchHover.java:102)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo(JavaEditorTextHoverProxy.java:69)</Frame>
          <Frame depth="14">org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:160)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050308-1510

Create a JDK 5 Project
Open the Collections class via Ctrl-Shift-T
Select the first sort method in the Outline view
Highlight/Select List, the type, in the editor.  This problem also occurs if you
select Collection or Comparator elsewhere in the editor.

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.genericSignature(MethodBinding.java:339)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:293)
	at
org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:282)
	at
org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.computeUniqueKey(TypeVariableBinding.java:177)
	at
org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.computeUniqueKey(WildcardBinding.java:267)
	at
org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.computeUniqueKey(ParameterizedTypeBinding.java:139)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(SelectionEngine.java:859)
	at
org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:731)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:140)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:152)
	at org.eclipse.jdt.internal.core.ClassFile.codeSelect(ClassFile.java:141)
	at
org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getHoverInfo(AbstractJavaEditorTextHover.java:108)
	at
org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo(BestMatchHover.java:102)
	at
org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo(JavaEditorTextHoverProxy.java:69)
	at
org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:160)


*** This bug has been marked as a duplicate of 87513 ***</WithStack>
    <WithOutStack>I20050308-1510

Create a JDK 5 Project
Open the Collections class via Ctrl-Shift-T
Select the first sort method in the Outline view
Highlight/Select List, the type, in the editor.  This problem also occurs if you
select Collection or Comparator elsewhere in the editor.




*** This bug has been marked as a duplicate of 87513 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87517" />
    <CreationDate amount="2005-03-09 11:34:00 -0500" />
    <DupId amount="40678" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Team-&gt;Restore from Repository does not find all files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Team-&gt;Restore From Repository only lists files that are in the Attic, and misses
dead files that are in the directory itself.  Remember, the Attic is only used
when a file has a dead state in the trunk (HEAD).  So, a file that exists in
HEAD and is deleted in a branch will not appear in the Attic (but a file created
in a branch will, regardless of whether or not it is dead.)


*** This bug has been marked as a duplicate of 40678 ***</WithStack>
    <WithOutStack>Team-&gt;Restore From Repository only lists files that are in the Attic, and misses
dead files that are in the directory itself.  Remember, the Attic is only used
when a file has a dead state in the trunk (HEAD).  So, a file that exists in
HEAD and is deleted in a branch will not appear in the Attic (but a file created
in a branch will, regardless of whether or not it is dead.)


*** This bug has been marked as a duplicate of 40678 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87518" />
    <CreationDate amount="2005-03-09 11:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error log should contain system properties</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the .log file, we write down the build id and the command line args. 
However, since we are using a large number of properties to configure eclipse, 
the information captured here are not enough.
I propose that the .log now contains the values of all the eclipse.* properties 
as well as the osgi.* ones.
We should strive for not being overly verbose here and ending up making log
files even harder to read than they already are. Need to take into account that
that information is only interesting to ourselves, but everybody will have to
see it.
Maybe it should be optional and we could have a switch to enable it? 
Won't fix.</WithStack>
    <WithOutStack>In the .log file, we write down the build id and the command line args. 
However, since we are using a large number of properties to configure eclipse, 
the information captured here are not enough.
I propose that the .log now contains the values of all the eclipse.* properties 
as well as the osgi.* ones.
We should strive for not being overly verbose here and ending up making log
files even harder to read than they already are. Need to take into account that
that information is only interesting to ourselves, but everybody will have to
see it.
Maybe it should be optional and we could have a switch to enable it? 
Won't fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87519" />
    <CreationDate amount="2005-03-09 11:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SAXParseException exceptions thrown when open the Help Contents</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341242249">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>The reference to entity "version" must end with 
the ';' delimiter.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)</Frame>
          <Frame depth="1">org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)</Frame>
          <Frame depth="2">org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)</Frame>
          <Frame depth="3">org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)</Frame>
          <Frame depth="4">org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)</Frame>
          <Frame depth="5">org.apache.xerces.impl.XMLScanner.scanAttributeValue(Unknown Source)</Frame>
          <Frame depth="6">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)</Frame>
          <Frame depth="7">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)</Frame>
          <Frame depth="8">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)</Frame>
          <Frame depth="9">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)</Frame>
          <Frame depth="10">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="11">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="12">org.apache.xerces.parsers.XMLParser.parse(Unknown Source)</Frame>
          <Frame depth="13">org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</Frame>
          <Frame depth="14">javax.xml.parsers.SAXParser.parse(Unknown Source)</Frame>
          <Frame depth="15">org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)</Frame>
          <Frame depth="16">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.help.internal.toc.TocFile.build(Unknown Source)</Frame>
          <Frame depth="18">org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)</Frame>
          <Frame depth="19">org.eclipse.help.internal.toc.TocManager.build(Unknown Source)</Frame>
          <Frame depth="20">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="21">org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)</Frame>
          <Frame depth="22">org.eclipse.help.HelpSystem.getTocs(Unknown Source)</Frame>
          <Frame depth="23">org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown Source)</Frame>
          <Frame depth="24">org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown Source)</Frame>
          <Frame depth="25">org.eclipse.ui.help.WorkbenchHelp.displayHelp(WorkbenchHelp.java:210)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.actions.HelpContentsAction$1.run(HelpContentsAction.java:78)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.actions.HelpContentsAction.run(HelpContentsAction.java:76)</Frame>
          <Frame depth="29">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown Source)</Frame>
          <Frame depth="31">org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)</Frame>
          <Frame depth="32">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(Unknown Source)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="40">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="48">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="49">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341242249">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>The reference to entity "version" must end with 
the ';' delimiter.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</Frame>
          <Frame depth="1">javax.xml.parsers.SAXParser.parse(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)</Frame>
          <Frame depth="3">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown Source)</Frame>
          <Frame depth="4">org.eclipse.help.internal.toc.TocFile.build(Unknown Source)</Frame>
          <Frame depth="5">org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)</Frame>
          <Frame depth="6">org.eclipse.help.internal.toc.TocManager.build(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="8">org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)</Frame>
          <Frame depth="9">org.eclipse.help.HelpSystem.getTocs(Unknown Source)</Frame>
          <Frame depth="10">org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown Source)</Frame>
          <Frame depth="11">org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown Source)</Frame>
          <Frame depth="12">org.eclipse.ui.help.WorkbenchHelp.displayHelp(WorkbenchHelp.java:210)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.actions.HelpContentsAction$1.run(HelpContentsAction.java:78)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.actions.HelpContentsAction.run(HelpContentsAction.java:76)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown Source)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(Unknown Source)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="27">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341242249">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>The reference to entity "version" must end with 
the ';' delimiter.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)</Frame>
          <Frame depth="1">org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)</Frame>
          <Frame depth="2">org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)</Frame>
          <Frame depth="3">org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)</Frame>
          <Frame depth="4">org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)</Frame>
          <Frame depth="5">org.apache.xerces.impl.XMLScanner.scanAttributeValue(Unknown Source)</Frame>
          <Frame depth="6">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)</Frame>
          <Frame depth="7">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)</Frame>
          <Frame depth="8">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)</Frame>
          <Frame depth="9">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)</Frame>
          <Frame depth="10">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="11">org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</Frame>
          <Frame depth="12">org.apache.xerces.parsers.XMLParser.parse(Unknown Source)</Frame>
          <Frame depth="13">org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</Frame>
          <Frame depth="14">javax.xml.parsers.SAXParser.parse(Unknown Source)</Frame>
          <Frame depth="15">org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)</Frame>
          <Frame depth="16">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.help.internal.toc.TocFile.build(Unknown Source)</Frame>
          <Frame depth="18">org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)</Frame>
          <Frame depth="19">org.eclipse.help.internal.toc.TocManager.build(Unknown Source)</Frame>
          <Frame depth="20">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="21">org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)</Frame>
          <Frame depth="22">org.eclipse.help.HelpSystem.getTocs(Unknown Source)</Frame>
          <Frame depth="23">org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown Source)</Frame>
          <Frame depth="24">org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown Source)</Frame>
          <Frame depth="25">org.eclipse.ui.help.WorkbenchHelp.displayHelp(WorkbenchHelp.java:210)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.actions.HelpContentsAction$1.run(HelpContentsAction.java:78)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.actions.HelpContentsAction.run(HelpContentsAction.java:76)</Frame>
          <Frame depth="29">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown Source)</Frame>
          <Frame depth="31">org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)</Frame>
          <Frame depth="32">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(Unknown Source)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="40">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)</Frame>
          <Frame depth="42">org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="48">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="49">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341242249">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>The reference to entity "version" must end with 
the ';' delimiter.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</Frame>
          <Frame depth="1">javax.xml.parsers.SAXParser.parse(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)</Frame>
          <Frame depth="3">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown Source)</Frame>
          <Frame depth="4">org.eclipse.help.internal.toc.TocFile.build(Unknown Source)</Frame>
          <Frame depth="5">org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)</Frame>
          <Frame depth="6">org.eclipse.help.internal.toc.TocManager.build(Unknown Source)</Frame>
          <Frame depth="7">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="8">org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)</Frame>
          <Frame depth="9">org.eclipse.help.HelpSystem.getTocs(Unknown Source)</Frame>
          <Frame depth="10">org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown Source)</Frame>
          <Frame depth="11">org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown Source)</Frame>
          <Frame depth="12">org.eclipse.ui.help.WorkbenchHelp.displayHelp(WorkbenchHelp.java:210)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.actions.HelpContentsAction$1.run(HelpContentsAction.java:78)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.actions.HelpContentsAction.run(HelpContentsAction.java:76)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Unknown Source)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown Source)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.access$2(Unknown Source)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem$7.handleEvent(Unknown Source)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="27">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown Source)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. In the Eclipse menu bar, click 'Windows -&gt; Preferences'</Line>
          <Line>2. In the preference windows, in the left pane, choose 'Workbench -&gt;</Line>
          <Line>Capabilities'</Line>
          <Line>3. In the right pane, check 'Eclipse Developer', click OK to close the</Line>
          <Line>preference window.</Line>
          <Line>4. Open the error log view by clicking 'Window -&gt; Show view -&gt; Other...' and</Line>
          <Line>in the window follows choose 'PDE Runtime -&gt; Error Log', click OK</Line>
          <Line>5. Open the help content page by clicking 'Help -&gt; Help Contents'</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- 4 SAXParseException thrown and left unhandled.</Line>
          <Line>- Help contents page appeared.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Steps to reproduce (running IBM Rational Software Architect) - running Eclipse 
3.0.2.  This is a regression from previous Eclipse releases:

1. In the Eclipse menu bar, click 'Windows -&gt; Preferences'
2. In the preference windows, in the left pane, choose 'Workbench -&gt; 
Capabilities'
3. In the right pane, check 'Eclipse Developer', click OK to close the 
preference window.
4. Open the error log view by clicking 'Window -&gt; Show view -&gt; Other...' and 
in the window follows choose 'PDE Runtime -&gt; Error Log', click OK
5. Open the help content page by clicking 'Help -&gt; Help Contents'

Expected result:
- no un-caught exeption displayed in the error log view

Actual result:
- 4 SAXParseException thrown and left unhandled. 
- Help contents page appeared.

Here is the stachtrace:

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:11.904
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///org.eclipse.emf.doc/toc.xml at line: 21, column: 113.
The reference to entity "version" must end with the ';' delimiter.
!STACK 0
org.xml.sax.SAXParseException: The reference to entity "version" must end with 
the ';' delimiter.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException
(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown 
Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.scanAttributeValue(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute
(Unknown Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown 
Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher
.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument
(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown 
Source)
	at org.eclipse.help.internal.toc.TocFile.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)
	at org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)
	at org.eclipse.help.HelpSystem.getTocs(Unknown Source)
	at org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown 
Source)
	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown 
Source)
	at org.eclipse.ui.help.WorkbenchHelp.displayHelp
(WorkbenchHelp.java:210)
	at org.eclipse.ui.internal.actions.HelpContentsAction$1.run
(HelpContentsAction.java:78)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.actions.HelpContentsAction.run
(HelpContentsAction.java:76)
	at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown 
Source)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.155
!MESSAGE Error loading Table of Contents file /org.eclipse.emf.doc/toc.xml.
!STACK 0
org.xml.sax.SAXParseException: The reference to entity "version" must end with 
the ';' delimiter.
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown 
Source)
	at org.eclipse.help.internal.toc.TocFile.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)
	at org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)
	at org.eclipse.help.HelpSystem.getTocs(Unknown Source)
	at org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown 
Source)
	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown 
Source)
	at org.eclipse.ui.help.WorkbenchHelp.displayHelp
(WorkbenchHelp.java:210)
	at org.eclipse.ui.internal.actions.HelpContentsAction$1.run
(HelpContentsAction.java:78)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.actions.HelpContentsAction.run
(HelpContentsAction.java:76)
	at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown 
Source)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.215
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///org.eclipse.emf.ecore.sdo.doc/toc.xml at line: 13, column: 113.
The reference to entity "version" must end with the ';' delimiter.
!STACK 0
org.xml.sax.SAXParseException: The reference to entity "version" must end with 
the ';' delimiter.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException
(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown 
Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.scanAttributeValue(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute
(Unknown Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown 
Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher
.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument
(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown 
Source)
	at org.eclipse.help.internal.toc.TocFile.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)
	at org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)
	at org.eclipse.help.HelpSystem.getTocs(Unknown Source)
	at org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown 
Source)
	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown 
Source)
	at org.eclipse.ui.help.WorkbenchHelp.displayHelp
(WorkbenchHelp.java:210)
	at org.eclipse.ui.internal.actions.HelpContentsAction$1.run
(HelpContentsAction.java:78)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.actions.HelpContentsAction.run
(HelpContentsAction.java:76)
	at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown 
Source)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.265
!MESSAGE Error loading Table of Contents 
file /org.eclipse.emf.ecore.sdo.doc/toc.xml.
!STACK 0
org.xml.sax.SAXParseException: The reference to entity "version" must end with 
the ';' delimiter.
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown 
Source)
	at org.eclipse.help.internal.toc.TocFile.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)
	at org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)
	at org.eclipse.help.HelpSystem.getTocs(Unknown Source)
	at org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown 
Source)
	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown 
Source)
	at org.eclipse.ui.help.WorkbenchHelp.displayHelp
(WorkbenchHelp.java:210)
	at org.eclipse.ui.internal.actions.HelpContentsAction$1.run
(HelpContentsAction.java:78)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.actions.HelpContentsAction.run
(HelpContentsAction.java:76)
	at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown 
Source)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)
The exceptions are handled, but are reported.
The contributed files are incorrect.</WithStack>
    <WithOutStack>Steps to reproduce (running IBM Rational Software Architect) - running Eclipse 
3.0.2.  This is a regression from previous Eclipse releases:

1. In the Eclipse menu bar, click 'Windows -&gt; Preferences'
2. In the preference windows, in the left pane, choose 'Workbench -&gt; 
Capabilities'
3. In the right pane, check 'Eclipse Developer', click OK to close the 
preference window.
4. Open the error log view by clicking 'Window -&gt; Show view -&gt; Other...' and 
in the window follows choose 'PDE Runtime -&gt; Error Log', click OK
5. Open the help content page by clicking 'Help -&gt; Help Contents'

Expected result:
- no un-caught exeption displayed in the error log view

Actual result:
- 4 SAXParseException thrown and left unhandled. 
- Help contents page appeared.

Here is the stachtrace:

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:11.904
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///org.eclipse.emf.doc/toc.xml at line: 21, column: 113.
The reference to entity "version" must end with the ';' delimiter.
!STACK 0

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.155
!MESSAGE Error loading Table of Contents file /org.eclipse.emf.doc/toc.xml.
!STACK 0

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.215
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///org.eclipse.emf.ecore.sdo.doc/toc.xml at line: 13, column: 113.
The reference to entity "version" must end with the ';' delimiter.
!STACK 0
org.xml.sax.SAXParseException: The reference to entity "version" must end with 
the ';' delimiter.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException
(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown 
Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.scanAttributeValue(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute
(Unknown Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown 
Source)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher
.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument
(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocFileParser.parse(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile(Unknown 
Source)
	at org.eclipse.help.internal.toc.TocFile.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocBuilder.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.build(Unknown Source)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(Unknown Source)
	at org.eclipse.help.internal.HelpPlugin.getTocManager(Unknown Source)
	at org.eclipse.help.HelpSystem.getTocs(Unknown Source)
	at org.eclipse.help.internal.base.HelpDisplay.displayHelp(Unknown 
Source)
	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelp(Unknown 
Source)
	at org.eclipse.ui.help.WorkbenchHelp.displayHelp
(WorkbenchHelp.java:210)
	at org.eclipse.ui.internal.actions.HelpContentsAction$1.run
(HelpContentsAction.java:78)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:69)
	at org.eclipse.ui.internal.actions.HelpContentsAction.run
(HelpContentsAction.java:76)
	at org.eclipse.jface.action.Action.runWithEvent(Unknown Source)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem.access$2(Unknown 
Source)
	at org.eclipse.jface.action.ActionContributionItem$7.handleEvent
(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(Unknown Source)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(Unknown 
Source)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

!ENTRY org.eclipse.help 4 0 Mar 08, 2005 22:58:12.265
!MESSAGE Error loading Table of Contents 
file /org.eclipse.emf.ecore.sdo.doc/toc.xml.
!STACK 0

The exceptions are handled, but are reported.
The contributed files are incorrect.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87520" />
    <CreationDate amount="2005-03-09 11:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[breakpoints] cannot just resume after exception breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="969" end="1338" />
        <code>public class One {
	
	public static void main(String[] args) {
		try {
			new One().foo();
		} catch (Exception e) {
		} finally {
			System.out.println("main");
		}
	}
	
	public void foo() {
		try {
			bar();
		} finally {
			System.out.println("foo");
		}
		
	}
	
	public void bar() {
		baz();
	}
	
	public void baz() {
		throw new NullPointerException("boom");
	}

}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="7780" end="8161" />
        <code>protected void paintComponent(Graphics g) {
        if (ui != null) {
            Graphics scratchGraphics = (g == null) ? null : g.create();
            try {
                ui.update(scratchGraphics, this);
            }
            finally {
                scratchGraphics.dispose();
            } &lt;------------------------------------- debugger stops here
        }
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.1M5a
after an exception  breakpoint is hit, I stare at the code for a while and then
press 'resume'.
I expect: program continues running
I see:    program resumes and then stops at the exit of a finally block in which
(dynamically, so can be a few frames up the stack) the exception happened.

quite annoying to have to hit resume like 10 times to get the debugger to really
resume
Needs investigation. May be a VM limitation.
Deferred.

Do you have a test case for this? Playing with a few examples, I only get 
things to suspend on throw statements (not on catch statements, unless they re-
throw).
hmm, I remember seeing this all the time. I have not used exception breakpoints
for a  whiile precisely because of that reason (was a real pain to have to press
result many times). 
Please ping when you reopen this. Or I will ping when I have a test case. 
In the following case, If I have a breakpoint for NPE in caught locations, its 
stops in the finally block.

public class One {
	
	public static void main(String[] args) {
		try {
			new One().foo();
		} catch (Exception e) {
		} finally {
			System.out.println("main");
		}
	}
	
	public void foo() {
		try {
			bar();
		} finally {
			System.out.println("foo");
		}
		
	}
	
	public void bar() {
		baz();
	}
	
	public void baz() {
		throw new NullPointerException("boom");
	}

}
Happens on Sun and IBM (&amp;J9) VMs.
and it's not supposed to, right? (sorry if this is obvious but i'm unsure as to
the semantics of 'caught locations')
It's not obvious to me why this happens (except that the VM is sending us an 
event telling us to suspend). I don't think it should happen.
I have the same on the NPE exception breakpoint with this stack:

Thread [AWT-EventQueue-0] (Suspended (exception NullPointerException))
	Result.formatElementTypes(ISearchVector, FastNumberMap) line: 273
	OptimizationPanel.renderVector(ISearchVector) line: 1307
	OptimizationPanel$MyListElementRenderer.
getListCellRendererComponent(JList, Object, int, boolean, boolean) line: 1345
	BasicListUI.paintCell(Graphics, int, Rectangle, ListCellRenderer, 
ListModel, ListSelectionModel, int) line: 186
	BasicListUI.paint(Graphics, JComponent) line: 287
	BasicListUI(ComponentUI).update(Graphics, JComponent) line: 142
	JList(JComponent).paintComponent(Graphics) line: 740
	JList(JComponent).paint(Graphics) line: 1003
	JViewport(JComponent).paintChildren(Graphics) line: 840
	JViewport(JComponent).paint(Graphics) line: 1012
	JViewport.paint(Graphics) line: 728
	JScrollPane(JComponent).paintChildren(Graphics) line: 840
	JScrollPane(JComponent).paint(Graphics) line: 1012
	JPanel(JComponent).paintChildren(Graphics) line: 840
	JPanel(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	OptimizationPanel(JComponent).paintChildren(Graphics) line: 840
	OptimizationPanel(JComponent).paint(Graphics) line: 1012
	JLayeredPane(JComponent).paintChildren(Graphics) line: 840
	JLayeredPane(JComponent).paint(Graphics) line: 1012
	JLayeredPane.paint(Graphics) line: 559
	JRootPane(JComponent).paintChildren(Graphics) line: 840
	JRootPane(JComponent).paintWithOffscreenBuffer(JComponent, Graphics, int, 
int, int, int, Image) line: 4937
	JRootPane(JComponent).paintDoubleBuffered(JComponent, Component, Graphics, 
int, int, int, int) line: 4883
	JRootPane(JComponent).paint(Graphics) line: 993
	GraphicsCallback$PaintCallback.run(Component, Graphics) line: 21
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runOneComponent(Component, Rectangle, Graphics, Shape, int) line: 60
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runComponents(Component[], Graphics, int) line: 97
	AppFrame(Container).paint(Graphics) line: 1709
	RepaintArea.paintComponent(Component, Graphics) line: 248
	RepaintArea.paint(Object, boolean) line: 224
	WFramePeer(WComponentPeer).handleEvent(AWTEvent) line: 254
	AppFrame(Component).dispatchEventImpl(AWTEvent) line: 4031
	AppFrame(Container).dispatchEventImpl(AWTEvent) line: 2024
	AppFrame(Window).dispatchEventImpl(AWTEvent) line: 1774
	AppFrame(Component).dispatchEvent(AWTEvent) line: 3803
	EventQueue.dispatchEvent(AWTEvent) line: 463
	EventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242
	EventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) 
line: 163
	EventDispatchThread.pumpEvents(int, Conditional) line: 157
	EventDispatchThread.pumpEvents(Conditional) line: 149
	EventDispatchThread.run() line: 110


After hitting "resume", debugger stops again with this stack:


Thread [AWT-EventQueue-0] (Suspended (exception NullPointerException))
	JList(JComponent).paintComponent(Graphics) line: 744
	JList(JComponent).paint(Graphics) line: 1003
	JViewport(JComponent).paintChildren(Graphics) line: 840
	JViewport(JComponent).paint(Graphics) line: 1012
	JViewport.paint(Graphics) line: 728
	JScrollPane(JComponent).paintChildren(Graphics) line: 840
	JScrollPane(JComponent).paint(Graphics) line: 1012
	JPanel(JComponent).paintChildren(Graphics) line: 840
	JPanel(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	OptimizationPanel(JComponent).paintChildren(Graphics) line: 840
	OptimizationPanel(JComponent).paint(Graphics) line: 1012
	JLayeredPane(JComponent).paintChildren(Graphics) line: 840
	JLayeredPane(JComponent).paint(Graphics) line: 1012
	JLayeredPane.paint(Graphics) line: 559
	JRootPane(JComponent).paintChildren(Graphics) line: 840
	JRootPane(JComponent).paintWithOffscreenBuffer(JComponent, Graphics, int, 
int, int, int, Image) line: 4937
	JRootPane(JComponent).paintDoubleBuffered(JComponent, Component, Graphics, 
int, int, int, int) line: 4883
	JRootPane(JComponent).paint(Graphics) line: 993
	GraphicsCallback$PaintCallback.run(Component, Graphics) line: 21
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runOneComponent(Component, Rectangle, Graphics, Shape, int) line: 60
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runComponents(Component[], Graphics, int) line: 97
	AppFrame(Container).paint(Graphics) line: 1709
	RepaintArea.paintComponent(Component, Graphics) line: 248
	RepaintArea.paint(Object, boolean) line: 224
	WFramePeer(WComponentPeer).handleEvent(AWTEvent) line: 254
	AppFrame(Component).dispatchEventImpl(AWTEvent) line: 4031
	AppFrame(Container).dispatchEventImpl(AWTEvent) line: 2024
	AppFrame(Window).dispatchEventImpl(AWTEvent) line: 1774
	AppFrame(Component).dispatchEvent(AWTEvent) line: 3803
	EventQueue.dispatchEvent(AWTEvent) line: 463
	EventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242
	EventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) 
line: 163
	EventDispatchThread.pumpEvents(int, Conditional) line: 157
	EventDispatchThread.pumpEvents(Conditional) line: 149
	EventDispatchThread.run() line: 110

And the debugger is in the line:

    protected void paintComponent(Graphics g) {
        if (ui != null) {
            Graphics scratchGraphics = (g == null) ? null : g.create();
            try {
                ui.update(scratchGraphics, this);
            }
            finally {
                scratchGraphics.dispose();
            } &lt;------------------------------------- debugger stops here
        }
    }

I can reproduce it always in the same debug session, and also with the test case 
of Darin.

I use Sun 1.4.2_08 and 1.5.0_3 JDK for Windows, with both Eclipse 3.0.2 and 3.1.
0, Build id: I20050527-1300.
I have no errors in log, nothing seems to be wrong, except this "resume" bug.
Why is this bug in "resolved later" state? It could be easily reproduced.
The "later" state indicates the fix is deferred for post 3.1 consideration. I 
don't believe there is an easy fix, as the VM is telling the debugger that is 
has suspended.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>3.1M5a
after an exception  breakpoint is hit, I stare at the code for a while and then
press 'resume'.
I expect: program continues running
I see:    program resumes and then stops at the exit of a finally block in which
(dynamically, so can be a few frames up the stack) the exception happened.

quite annoying to have to hit resume like 10 times to get the debugger to really
resume
Needs investigation. May be a VM limitation.
Deferred.

Do you have a test case for this? Playing with a few examples, I only get 
things to suspend on throw statements (not on catch statements, unless they re-
throw).
hmm, I remember seeing this all the time. I have not used exception breakpoints
for a  whiile precisely because of that reason (was a real pain to have to press
result many times). 
Please ping when you reopen this. Or I will ping when I have a test case. 
In the following case, If I have a breakpoint for NPE in caught locations, its 
stops in the finally block.

public class One {
	
	public static void main(String[] args) {
		try {
			new One().foo();
		} catch (Exception e) {
		} finally {
			System.out.println("main");
		}
	}
	
	public void foo() {
		try {
			bar();
		} finally {
			System.out.println("foo");
		}
		
	}
	
	public void bar() {
		baz();
	}
	
	public void baz() {
		throw new NullPointerException("boom");
	}

}
Happens on Sun and IBM (&amp;J9) VMs.
and it's not supposed to, right? (sorry if this is obvious but i'm unsure as to
the semantics of 'caught locations')
It's not obvious to me why this happens (except that the VM is sending us an 
event telling us to suspend). I don't think it should happen.
I have the same on the NPE exception breakpoint with this stack:

Thread [AWT-EventQueue-0] (Suspended (exception NullPointerException))
	Result.formatElementTypes(ISearchVector, FastNumberMap) line: 273
	OptimizationPanel.renderVector(ISearchVector) line: 1307
	OptimizationPanel$MyListElementRenderer.
getListCellRendererComponent(JList, Object, int, boolean, boolean) line: 1345
	BasicListUI.paintCell(Graphics, int, Rectangle, ListCellRenderer, 
ListModel, ListSelectionModel, int) line: 186
	BasicListUI.paint(Graphics, JComponent) line: 287
	BasicListUI(ComponentUI).update(Graphics, JComponent) line: 142
	JList(JComponent).paintComponent(Graphics) line: 740
	JList(JComponent).paint(Graphics) line: 1003
	JViewport(JComponent).paintChildren(Graphics) line: 840
	JViewport(JComponent).paint(Graphics) line: 1012
	JViewport.paint(Graphics) line: 728
	JScrollPane(JComponent).paintChildren(Graphics) line: 840
	JScrollPane(JComponent).paint(Graphics) line: 1012
	JPanel(JComponent).paintChildren(Graphics) line: 840
	JPanel(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	OptimizationPanel(JComponent).paintChildren(Graphics) line: 840
	OptimizationPanel(JComponent).paint(Graphics) line: 1012
	JLayeredPane(JComponent).paintChildren(Graphics) line: 840
	JLayeredPane(JComponent).paint(Graphics) line: 1012
	JLayeredPane.paint(Graphics) line: 559
	JRootPane(JComponent).paintChildren(Graphics) line: 840
	JRootPane(JComponent).paintWithOffscreenBuffer(JComponent, Graphics, int, 
int, int, int, Image) line: 4937
	JRootPane(JComponent).paintDoubleBuffered(JComponent, Component, Graphics, 
int, int, int, int) line: 4883
	JRootPane(JComponent).paint(Graphics) line: 993
	GraphicsCallback$PaintCallback.run(Component, Graphics) line: 21
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runOneComponent(Component, Rectangle, Graphics, Shape, int) line: 60
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runComponents(Component[], Graphics, int) line: 97
	AppFrame(Container).paint(Graphics) line: 1709
	RepaintArea.paintComponent(Component, Graphics) line: 248
	RepaintArea.paint(Object, boolean) line: 224
	WFramePeer(WComponentPeer).handleEvent(AWTEvent) line: 254
	AppFrame(Component).dispatchEventImpl(AWTEvent) line: 4031
	AppFrame(Container).dispatchEventImpl(AWTEvent) line: 2024
	AppFrame(Window).dispatchEventImpl(AWTEvent) line: 1774
	AppFrame(Component).dispatchEvent(AWTEvent) line: 3803
	EventQueue.dispatchEvent(AWTEvent) line: 463
	EventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242
	EventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) 
line: 163
	EventDispatchThread.pumpEvents(int, Conditional) line: 157
	EventDispatchThread.pumpEvents(Conditional) line: 149
	EventDispatchThread.run() line: 110


After hitting "resume", debugger stops again with this stack:


Thread [AWT-EventQueue-0] (Suspended (exception NullPointerException))
	JList(JComponent).paintComponent(Graphics) line: 744
	JList(JComponent).paint(Graphics) line: 1003
	JViewport(JComponent).paintChildren(Graphics) line: 840
	JViewport(JComponent).paint(Graphics) line: 1012
	JViewport.paint(Graphics) line: 728
	JScrollPane(JComponent).paintChildren(Graphics) line: 840
	JScrollPane(JComponent).paint(Graphics) line: 1012
	JPanel(JComponent).paintChildren(Graphics) line: 840
	JPanel(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	JSplitPane(JComponent).paintChildren(Graphics) line: 840
	JSplitPane.paintChildren(Graphics) line: 1021
	JSplitPane(JComponent).paint(Graphics) line: 1012
	JTabbedPane(JComponent).paintChildren(Graphics) line: 840
	JTabbedPane(JComponent).paint(Graphics) line: 1012
	OptimizationPanel(JComponent).paintChildren(Graphics) line: 840
	OptimizationPanel(JComponent).paint(Graphics) line: 1012
	JLayeredPane(JComponent).paintChildren(Graphics) line: 840
	JLayeredPane(JComponent).paint(Graphics) line: 1012
	JLayeredPane.paint(Graphics) line: 559
	JRootPane(JComponent).paintChildren(Graphics) line: 840
	JRootPane(JComponent).paintWithOffscreenBuffer(JComponent, Graphics, int, 
int, int, int, Image) line: 4937
	JRootPane(JComponent).paintDoubleBuffered(JComponent, Component, Graphics, 
int, int, int, int) line: 4883
	JRootPane(JComponent).paint(Graphics) line: 993
	GraphicsCallback$PaintCallback.run(Component, Graphics) line: 21
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runOneComponent(Component, Rectangle, Graphics, Shape, int) line: 60
	GraphicsCallback$PaintCallback(SunGraphicsCallback).
runComponents(Component[], Graphics, int) line: 97
	AppFrame(Container).paint(Graphics) line: 1709
	RepaintArea.paintComponent(Component, Graphics) line: 248
	RepaintArea.paint(Object, boolean) line: 224
	WFramePeer(WComponentPeer).handleEvent(AWTEvent) line: 254
	AppFrame(Component).dispatchEventImpl(AWTEvent) line: 4031
	AppFrame(Container).dispatchEventImpl(AWTEvent) line: 2024
	AppFrame(Window).dispatchEventImpl(AWTEvent) line: 1774
	AppFrame(Component).dispatchEvent(AWTEvent) line: 3803
	EventQueue.dispatchEvent(AWTEvent) line: 463
	EventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242
	EventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) 
line: 163
	EventDispatchThread.pumpEvents(int, Conditional) line: 157
	EventDispatchThread.pumpEvents(Conditional) line: 149
	EventDispatchThread.run() line: 110

And the debugger is in the line:

    protected void paintComponent(Graphics g) {
        if (ui != null) {
            Graphics scratchGraphics = (g == null) ? null : g.create();
            try {
                ui.update(scratchGraphics, this);
            }
            finally {
                scratchGraphics.dispose();
            } &lt;------------------------------------- debugger stops here
        }
    }

I can reproduce it always in the same debug session, and also with the test case 
of Darin.

I use Sun 1.4.2_08 and 1.5.0_3 JDK for Windows, with both Eclipse 3.0.2 and 3.1.
0, Build id: I20050527-1300.
I have no errors in log, nothing seems to be wrong, except this "resume" bug.
Why is this bug in "resolved later" state? It could be easily reproduced.
The "later" state indicates the fix is deferred for post 3.1 consideration. I 
don't believe there is an easy fix, as the VM is telling the debugger that is 
has suspended.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87521" />
    <CreationDate amount="2005-03-09 12:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[quick fix] Automate "remove unneccesary cast" operation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Please add a feature to automatically remove all unnecessary casts in an entire
project.  Sometimes there are thousands of them and it takes a long time to do
each on individually.
Move to JDT/UI
Moreover, this goes back to applying a quickfix over some working set.
See bug for the details 23889.

Postpone &gt; 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Please add a feature to automatically remove all unnecessary casts in an entire
project.  Sometimes there are thousands of them and it takes a long time to do
each on individually.
Move to JDT/UI
Moreover, this goes back to applying a quickfix over some working set.
See bug for the details 23889.

Postpone &gt; 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87522" />
    <CreationDate amount="2005-03-09 12:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[quick fix] remove assignment without sideeffects can have side effects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="170" end="189" />
        <code>d = new MyDialog();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="414" end="429" />
        <code>new MyDialog();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When eclipse reports an unused variable and offers to remove the variable and
all assignments without side effects, it can have side effects.   For instance

MyDialog d;
d = new MyDialog();

In this case it would remove the constructor "new MyDialog()".  However the
constructor could be doing something useful, such as displaying itself.  Thus
removing it will have side effects.  If it just changed it to this:

new MyDialog();

it would not have side effects.
Quickfix lives in JDT/UI
*** Bug 89369 has been marked as a duplicate of this bug. ***
*** Bug 100268 has been marked as a duplicate of this bug. ***
*** Bug 104482 has been marked as a duplicate of this bug. ***
*** Bug 102976 has been marked as a duplicate of this bug. ***
*** Bug 112612 has been marked as a duplicate of this bug. ***
*** Bug 165797 has been marked as a duplicate of this bug. ***
Created attachment 61430
Does not remove Initializer

Initializers are not removed if they are method invocations or constructors. Single line statements are split up to preserve correct order of initialization. Fields are always removed.
Created attachment 61522
Added old way as alternative if applicable

Proposes 2 quickfixes if situation is ambigous. The remove initializer is first because it is most common.
Created attachment 61576
Different approach

There are always 2 choices. First do everything without side-effect, second remove all assignments completly.
Created attachment 61685
Slight modifications

Some internal responsibility cleanup
patch released &gt; 20070327</WithStack>
    <WithOutStack>When eclipse reports an unused variable and offers to remove the variable and
all assignments without side effects, it can have side effects.   For instance

MyDialog d;
d = new MyDialog();

In this case it would remove the constructor "new MyDialog()".  However the
constructor could be doing something useful, such as displaying itself.  Thus
removing it will have side effects.  If it just changed it to this:

new MyDialog();

it would not have side effects.
Quickfix lives in JDT/UI
*** Bug 89369 has been marked as a duplicate of this bug. ***
*** Bug 100268 has been marked as a duplicate of this bug. ***
*** Bug 104482 has been marked as a duplicate of this bug. ***
*** Bug 102976 has been marked as a duplicate of this bug. ***
*** Bug 112612 has been marked as a duplicate of this bug. ***
*** Bug 165797 has been marked as a duplicate of this bug. ***
Created attachment 61430
Does not remove Initializer

Initializers are not removed if they are method invocations or constructors. Single line statements are split up to preserve correct order of initialization. Fields are always removed.
Created attachment 61522
Added old way as alternative if applicable

Proposes 2 quickfixes if situation is ambigous. The remove initializer is first because it is most common.
Created attachment 61576
Different approach

There are always 2 choices. First do everything without side-effect, second remove all assignments completly.
Created attachment 61685
Slight modifications

Some internal responsibility cleanup
patch released &gt; 20070327</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87523" />
    <CreationDate amount="2005-03-09 12:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>automate "Organize Imports"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>It would be very nice to have a feature that runs the "Organize Imports" command
on every file in a project.  Doing this manually can take a long time when there
are many files.
That's implement. Select the project and do Source-&gt;Organize Import.</WithStack>
    <WithOutStack>It would be very nice to have a feature that runs the "Organize Imports" command
on every file in a project.  Doing this manually can take a long time when there
are many files.
That's implement. Select the project and do Source-&gt;Organize Import.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87524" />
    <CreationDate amount="2005-03-09 12:12:00 -0500" />
    <DupId amount="87896" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>custom URLs not supported in osgi.debug</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>i200503081510

The profiling support causes the debug options to be processed right away at the
first line of EclipseStarter#run (see stack trace below). At this point in time,
the framework URL stream handler factory has not been installed yet, so custom
URLs such as those using the "platform:" protocol are not supported, but we
currently rely on that (extracted from config.ini):

# The default debug options file.  This file turns on performance tracing by
default.
# This should be disabled for milestone and release builds
osgi.debug=platform:/base/plugins/org.eclipse.core.runtime/performance.options

However this does not work.

Thread [main] (Suspended (breakpoint at line 106 in DebugOptions))
	DebugOptions.loadOptions() line: 106
	DebugOptions.&lt;init&gt;() line: 68
	DebugOptions.getDefault() line: 28
	Profile.initProps() line: 95
	Profile.&lt;clinit&gt;() line: 78
	EclipseStarter.run(String[], Runnable) line: 143
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.invokeFramework(String[], URL[]) line: 268
	Main.basicRun(String[]) line: 260
	Main.run(String[]) line: 887
	Main.main(String[]) line: 871
That's the typical bootstrap problem.
John noticed this problem and was planning to put the file in root of eclipse,
and set the osgi.debug to be the empty string in the config.ini.
*** Bug 87711 has been marked as a duplicate of this bug. ***
Agreed that there is a bug here but the usecase is bad as well.  The options 
files stashed in various plugins should be there as templates not for use 
directly.  If you want to have a standard options file perhaps it shoud be put 
in the root (or in the config dir) of the install or on a website somewhere.
The .options file is now in the root of the install, so this is no longer
needed.  It was only intended as a temporary measure anyway.

*** This bug has been marked as a duplicate of 87896 ***</WithStack>
    <WithOutStack>i200503081510

The profiling support causes the debug options to be processed right away at the
first line of EclipseStarter#run (see stack trace below). At this point in time,
the framework URL stream handler factory has not been installed yet, so custom
URLs such as those using the "platform:" protocol are not supported, but we
currently rely on that (extracted from config.ini):

# The default debug options file.  This file turns on performance tracing by
default.
# This should be disabled for milestone and release builds
osgi.debug=platform:/base/plugins/org.eclipse.core.runtime/performance.options

However this does not work.

Thread [main] (Suspended (breakpoint at line 106 in DebugOptions))
	DebugOptions.loadOptions() line: 106
	DebugOptions.&lt;init&gt;() line: 68
	DebugOptions.getDefault() line: 28
	Profile.initProps() line: 95
	Profile.&lt;clinit&gt;() line: 78
	EclipseStarter.run(String[], Runnable) line: 143
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available
[native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.invokeFramework(String[], URL[]) line: 268
	Main.basicRun(String[]) line: 260
	Main.run(String[]) line: 887
	Main.main(String[]) line: 871
That's the typical bootstrap problem.
John noticed this problem and was planning to put the file in root of eclipse,
and set the osgi.debug to be the empty string in the config.ini.
*** Bug 87711 has been marked as a duplicate of this bug. ***
Agreed that there is a bug here but the usecase is bad as well.  The options 
files stashed in various plugins should be there as templates not for use 
directly.  If you want to have a standard options file perhaps it shoud be put 
in the root (or in the config dir) of the install or on a website somewhere.
The .options file is now in the root of the install, so this is no longer
needed.  It was only intended as a temporary measure anyway.

*** This bug has been marked as a duplicate of 87896 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87525" />
    <CreationDate amount="2005-03-09 12:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>privilege error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="17">
      <source_code type="class">
        <location start="0" end="142" />
        <code>public class Test {
	final static private int constant = 1;

	public static void main(String[] args) {
		T();
	}
	
	public static void T(){}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="196" end="325" />
        <code>call(public void Test.T()){
		switch(1){
		   case Test.constant:
		   	  System.out.println("hello");
		   default:
		 
		}
	}</code>
      </source_code>
      <source_code type="class">
        <location start="760" end="932" />
        <code>class A {

  // only happens when the below line is non-static, or private static
  final int c = 1;

  void a() {
    switch(1){
      case c: // this is fine
    }
  }

}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="947" end="1098" />
        <code>before(A anA):execution(* a()) &amp;&amp; this(anA){   
      switch(1){
        case anA.c: // "case expressions must be constant expressions"
      }
    }</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1102" end="1118" />
        <code>// hypothesis:</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1118" end="1177" />
        <code>// problem is that 'get' methods are made so that aspect B</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1177" end="1214" />
        <code>// can get the value of things in A.</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1214" end="1245" />
        <code>// but this doesn't work here,</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1245" end="1312" />
        <code>// because the 'get' method doesn't count as a constant expression</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1312" end="1349" />
        <code>// (it could have side effects, etc)</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1349" end="1352" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1352" end="1374" />
        <code>// possible solution:</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1374" end="1426" />
        <code>// if the thing in class A is a constant expression</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1426" end="1480" />
        <code>// make a 'get' constant expression for it instead...</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1480" end="1509" />
        <code>// like "final int getC = c"</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1509" end="1551" />
        <code>// instead of "final int getC(){return c}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2204" end="2316" />
        <code>before(): call(public void Test.T()){
    if (1==Test.constant) {
      System.out.println("hello");
    }
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>public class Test {
	final static private int constant = 1;

	public static void main(String[] args) {
		T();
	}
	
	public static void T(){}
}


public privileged aspect TestAspect {
	
	before():
		call(public void Test.T()){
		switch(1){
		   case Test.constant:
		   	  System.out.println("hello");
		   default:
		 
		}
	}
}

When compiling the above code, I will get "case expression must be constant 
expressions" error at the case statement of the switch block. The aspect class 
is already declared as privileged, so it should be able to access the static 
private field, constant, of the Test class


Dapeng Gao
I suspect it's due to generated accessor methods. Passing over to AspectJ
component as it's a language issue.
for investigation in aj5m3...
class A {

  // only happens when the below line is non-static, or private static
  final int c = 1;

  void a() {
    switch(1){
      case c: // this is fine
    }
  }

}


aspect B {

  before(A anA):execution(* a()) &amp;&amp; this(anA){   
      switch(1){
        case anA.c: // "case expressions must be constant expressions"
      }
    }

}

// hypothesis:
// problem is that 'get' methods are made so that aspect B
// can get the value of things in A.
// but this doesn't work here,
// because the 'get' method doesn't count as a constant expression
// (it could have side effects, etc)
//
// possible solution:
// if the thing in class A is a constant expression
// make a 'get' constant expression for it instead...
// like "final int getC = c"
// instead of "final int getC(){return c}
not going to get to this for M3
The discussion in the bug is correct.  In order for the non-public field to be
accessible to the advice in the aspect, we have to create an accessor method. 
(That's how privileged works).  We do not hack the visibility of the field so
that the aspect can see it.

References to the non-public field from outside of the type are converted to
references to the accessor method.  This is invalid in a switch statement so you
get the compile error.

It is not a trivial piece of work to modify the accessor infrastructure to
behave differently for final fields - and given the workaround is:

privileged aspect TestAspect {
  before(): call(public void Test.T()){
    if (1==Test.constant) {
      System.out.println("hello");
    }
  }
}

I'm proposing we dont do this for 1.5.0 (this problem has existed since
AspectJ1.2 and earlier, its not new).  For 1.5 I could possibly put out a better
error message for this situation.
new message added that is a little more intuitive.  moving this bug out of 1.5.0 now...</WithStack>
    <WithOutStack>public class Test {
	final static private int constant = 1;

	public static void main(String[] args) {
		T();
	}
	
	public static void T(){}
}


public privileged aspect TestAspect {
	
	before():
		call(public void Test.T()){
		switch(1){
		   case Test.constant:
		   	  System.out.println("hello");
		   default:
		 
		}
	}
}

When compiling the above code, I will get "case expression must be constant 
expressions" error at the case statement of the switch block. The aspect class 
is already declared as privileged, so it should be able to access the static 
private field, constant, of the Test class


Dapeng Gao
I suspect it's due to generated accessor methods. Passing over to AspectJ
component as it's a language issue.
for investigation in aj5m3...
class A {

  // only happens when the below line is non-static, or private static
  final int c = 1;

  void a() {
    switch(1){
      case c: // this is fine
    }
  }

}


aspect B {

  before(A anA):execution(* a()) &amp;&amp; this(anA){   
      switch(1){
        case anA.c: // "case expressions must be constant expressions"
      }
    }

}

// hypothesis:
// problem is that 'get' methods are made so that aspect B
// can get the value of things in A.
// but this doesn't work here,
// because the 'get' method doesn't count as a constant expression
// (it could have side effects, etc)
//
// possible solution:
// if the thing in class A is a constant expression
// make a 'get' constant expression for it instead...
// like "final int getC = c"
// instead of "final int getC(){return c}
not going to get to this for M3
The discussion in the bug is correct.  In order for the non-public field to be
accessible to the advice in the aspect, we have to create an accessor method. 
(That's how privileged works).  We do not hack the visibility of the field so
that the aspect can see it.

References to the non-public field from outside of the type are converted to
references to the accessor method.  This is invalid in a switch statement so you
get the compile error.

It is not a trivial piece of work to modify the accessor infrastructure to
behave differently for final fields - and given the workaround is:

privileged aspect TestAspect {
  before(): call(public void Test.T()){
    if (1==Test.constant) {
      System.out.println("hello");
    }
  }
}

I'm proposing we dont do this for 1.5.0 (this problem has existed since
AspectJ1.2 and earlier, its not new).  For 1.5 I could possibly put out a better
error message for this situation.
new message added that is a little more intuitive.  moving this bug out of 1.5.0 now...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87526" />
    <CreationDate amount="2005-03-09 12:26:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Remove Web service's dependency on Apache SOAP</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Remove Web service's dependency on Apache SOAP.
Created attachment 18590
Apply this patch to org.eclipse.jst.ws.explorer
Created attachment 18591
Apply this patch to org.eclipse.wst.ws.wsil
Created attachment 18592
Apply this patch to org.eclipse.wst.ws.parser
Committing Jeffrey's 3 pathces from 03/09.
Changing to assign state.
fixed in HEAD.
closing bug.</WithStack>
    <WithOutStack>Remove Web service's dependency on Apache SOAP.
Created attachment 18590
Apply this patch to org.eclipse.jst.ws.explorer
Created attachment 18591
Apply this patch to org.eclipse.wst.ws.wsil
Created attachment 18592
Apply this patch to org.eclipse.wst.ws.parser
Committing Jeffrey's 3 pathces from 03/09.
Changing to assign state.
fixed in HEAD.
closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87527" />
    <CreationDate amount="2005-03-09 12:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>manifest conversion fails silently</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>i200503081510

When trying to create a bundle manifest from an existing plug-in manifest, if
the plug-in converter fails and throws an exception, it will be swallowed by PDE
and no warning will be presented to the user, although the action will not
accomplish anything.
fixed.

Note that the option to create the manifest.mf file has now moved to the 
Overview page of the editor.  DJ, you may want to update the instructions on 
the core home page.

Also, Rafael, at the risk of breaking your heart, the Plug-in Activation 
section (ie. Eclipse-Autostart) has been removed from the editor due to lack 
of real estate and the fact that the subtlety of its meaning was being 
misinterpreted by users almost 100% of the time.  They took it to mean that 
their plugin would be activated upon startup.  
I don't forget this type of stuff, beware.&lt;g&gt;

Since tweaking that setting will not be as trivial as before, I opened bug 89261
so the converter computes a better default value depending on whether a bundle
is singleton or not.</WithStack>
    <WithOutStack>i200503081510

When trying to create a bundle manifest from an existing plug-in manifest, if
the plug-in converter fails and throws an exception, it will be swallowed by PDE
and no warning will be presented to the user, although the action will not
accomplish anything.
fixed.

Note that the option to create the manifest.mf file has now moved to the 
Overview page of the editor.  DJ, you may want to update the instructions on 
the core home page.

Also, Rafael, at the risk of breaking your heart, the Plug-in Activation 
section (ie. Eclipse-Autostart) has been removed from the editor due to lack 
of real estate and the fact that the subtlety of its meaning was being 
misinterpreted by users almost 100% of the time.  They took it to mean that 
their plugin would be activated upon startup.  
I don't forget this type of stuff, beware.&lt;g&gt;

Since tweaking that setting will not be as trivial as before, I opened bug 89261
so the converter computes a better default value depending on whether a bundle
is singleton or not.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87528" />
    <CreationDate amount="2005-03-09 12:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Release Engineering" />
    <component amount="TPTP.Web" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>EclipseCon 2005 web page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>The suggestion is to establish a separate web page to store information
regarding TPTP project participation at EclipseCon 2005, including presentations
from the technical sessions, project sprint and BoF, tutorials, posters plus any
other event-related material. 

PDF versions of these documents should be made available for download from the
EclipseCon 2005 web page, however, the original powerpoint versions should also
be stored in CVS.
New links have been added.
Page is posted on the web. Please let me know if the link location should be
changed, or if there should be additional text on the page.

Home page --&gt; Documentation --&gt; eclipse con presentations.
Re-opening bug - additional changes need to be made to the EclipseCon page &amp;
linking to the page.
Discussed the removal of the EclipseCon 2005 logo from the TPTP home page and
the creation of a new Events link from the "What's TPTP?" section. 

This new Events page will contain only the EclipseCon presentation materials,
until such times as the project, or project members, participate in other events
(such as EclipseWorld, CA World, Linux World etc.).

A link to the new Events page should also be made available from the Press Room
page.
This request looks like it should be cleared. If not it should be targeted to i3
Melanie Woods has agreed to moving this Web feature to i4.
Returning this enhancement as "WONTFIX" because the new "Eclipse World"
conference is coming up at the end of this month, and we can't create the
EclipseCon 2005 page in the next two weeks. Please open a new bugzilla for any
future "Events" page and provide a detailed list of what content should be on
the page.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The suggestion is to establish a separate web page to store information
regarding TPTP project participation at EclipseCon 2005, including presentations
from the technical sessions, project sprint and BoF, tutorials, posters plus any
other event-related material. 

PDF versions of these documents should be made available for download from the
EclipseCon 2005 web page, however, the original powerpoint versions should also
be stored in CVS.
New links have been added.
Page is posted on the web. Please let me know if the link location should be
changed, or if there should be additional text on the page.

Home page --&gt; Documentation --&gt; eclipse con presentations.
Re-opening bug - additional changes need to be made to the EclipseCon page &amp;
linking to the page.
Discussed the removal of the EclipseCon 2005 logo from the TPTP home page and
the creation of a new Events link from the "What's TPTP?" section. 

This new Events page will contain only the EclipseCon presentation materials,
until such times as the project, or project members, participate in other events
(such as EclipseWorld, CA World, Linux World etc.).

A link to the new Events page should also be made available from the Press Room
page.
This request looks like it should be cleared. If not it should be targeted to i3
Melanie Woods has agreed to moving this Web feature to i4.
Returning this enhancement as "WONTFIX" because the new "Eclipse World"
conference is coming up at the end of this month, and we can't create the
EclipseCon 2005 page in the next two weeks. Please open a new bugzilla for any
future "Events" page and provide a detailed list of what content should be on
the page.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87529" />
    <CreationDate amount="2005-03-09 12:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need to set the archive format on a per config basis</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When the final archive is created by pde build, its format is hardcoded in pde
build which is not very flexible.
See bug #82568.

This has been fixed in HEAD.
In the build.properties of a builder indicates, set the property
 archivesFormat

to be the following
 &lt;os&gt;,&lt;ws&gt;,&lt;arch&gt; - &lt;format&gt;

For example
 win32, win32, x86 - zip &amp; linux, gtk, x86 - folder

Format supports:
 zip, antZip, folder. 
 tar, antTar are also supported but not in all modes


*** Bug 71639 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>When the final archive is created by pde build, its format is hardcoded in pde
build which is not very flexible.
See bug #82568.

This has been fixed in HEAD.
In the build.properties of a builder indicates, set the property
 archivesFormat

to be the following
 &lt;os&gt;,&lt;ws&gt;,&lt;arch&gt; - &lt;format&gt;

For example
 win32, win32, x86 - zip &amp; linux, gtk, x86 - folder

Format supports:
 zip, antZip, folder. 
 tar, antTar are also supported but not in all modes


*** Bug 71639 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87530" />
    <CreationDate amount="2005-03-09 12:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[itds] introduction of final method on interface won't prevent child overwritting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="0" end="159" />
        <code>public class Test {

	public static void main(String[] args) {
		Test t = new Test();
		t.M();
	}
	
	public void M(){
	   System.out.println("in child");	
	}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="235" end="313" />
        <code>public final void TestInterface.M(){
	   System.out.println("in parent");	
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>public class Test {

	public static void main(String[] args) {
		Test t = new Test();
		t.M();
	}
	
	public void M(){
	   System.out.println("in child");	
	}
}

public privileged aspect AspectTest {
	public interface TestInterface{}
	
	public final void TestInterface.M(){
	   System.out.println("in parent");	
	}
	
	declare parents: Test implements TestInterface;

}

The Method M is declared in both Test class and TestInterface interface, but 
the introduction on TestInterface specifies the Method M is final, so M can't 
be overwritten by child class. However, when I run this program, I found the 
Method M of Test class is executed. It means the child overwrites the final 
method.


Dapeng Gao
Another language issue...
for investigation in aj5m3...
phew. I thought this would be a small job. It's taken me 2 days to fix this in a
manner I'm happy with (the issue ran quite deep). In addition to catching the
overriding of a final method situation, we will also now detect other violations
in overriding such as a changed return type that may have gone unnoticed before.

I was unsure of the semantics to implement at first. The ITD on the interface is
a default implementation to be used if none is present in the topmost
implementors. Hence you could argue that if the type Test defines M, that's ok
(it doesn't get the default method). If Test does not define M, it gets the
default (final) implementation, and then no-one would be allowed to override
that.... However, this just didn't seem to be as useful as the more intuitive
semantics that a final default implementation must be used. So that's what I've
gone for and the program below will now behave as you expected it to.</WithStack>
    <WithOutStack>public class Test {

	public static void main(String[] args) {
		Test t = new Test();
		t.M();
	}
	
	public void M(){
	   System.out.println("in child");	
	}
}

public privileged aspect AspectTest {
	public interface TestInterface{}
	
	public final void TestInterface.M(){
	   System.out.println("in parent");	
	}
	
	declare parents: Test implements TestInterface;

}

The Method M is declared in both Test class and TestInterface interface, but 
the introduction on TestInterface specifies the Method M is final, so M can't 
be overwritten by child class. However, when I run this program, I found the 
Method M of Test class is executed. It means the child overwrites the final 
method.


Dapeng Gao
Another language issue...
for investigation in aj5m3...
phew. I thought this would be a small job. It's taken me 2 days to fix this in a
manner I'm happy with (the issue ran quite deep). In addition to catching the
overriding of a final method situation, we will also now detect other violations
in overriding such as a changed return type that may have gone unnoticed before.

I was unsure of the semantics to implement at first. The ITD on the interface is
a default implementation to be used if none is present in the topmost
implementors. Hence you could argue that if the type Test defines M, that's ok
(it doesn't get the default method). If Test does not define M, it gets the
default (final) implementation, and then no-one would be allowed to override
that.... However, this just didn't seem to be as useful as the more intuitive
semantics that a final default implementation must be used. So that's what I've
gone for and the program below will now behave as you expected it to.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87531" />
    <CreationDate amount="2005-03-09 12:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>[browser] crash on Linux Motif with 1.7</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="31">
        <Lines>
          <Line>- locked &lt;0xaf851480&gt; (a java.lang.Class)</Line>
          <Line>at org.eclipse.swt.browser.Browser$1.run(Browser.java:232)</Line>
          <Line>at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Line>
          <Line>at</Line>
          <Line>org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)</Line>
          <Line>- locked &lt;0xab6c8de0&gt; (a org.eclipse.swt.widgets.RunnableLock)</Line>
          <Line>at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2916)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2645)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at</Line>
          <Line>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at</Line>
          <Line>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:704)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:688)</Line>
          <Line>Can't reproduce anymore. Not sure if that was caused by having LD_LIBRARY_PATH</Line>
          <Line>pointing to Mozilla 1.4 and MOZILLA_FIVE_HOME pointing to Mozilla 1.7.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse 3.0.2 RC2
RH EL3 Mozilla 1.7 GTK2 from Mozilla XFT

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.
 
 
Current Java thread:
        at org.eclipse.swt.internal.gtk.GTK.gtk_main_iteration(Native Method)
        - locked &lt;0xaf851480&gt; (a java.lang.Class)
        at org.eclipse.swt.browser.Browser$1.run(Browser.java:232)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
        - locked &lt;0xab6c8de0&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2916)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2645)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:704)
        at org.eclipse.core.launcher.Main.main(Main.java:688)
Can't reproduce anymore. Not sure if that was caused by having LD_LIBRARY_PATH 
pointing to Mozilla 1.4 and MOZILLA_FIVE_HOME pointing to Mozilla 1.7.</WithStack>
    <WithOutStack>Eclipse 3.0.2 RC2
RH EL3 Mozilla 1.7 GTK2 from Mozilla XFT

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.
 
 
Current Java thread:
        at org.eclipse.swt.internal.gtk.GTK.gtk_main_iteration(Native Method)
        - locked &lt;0xaf851480&gt; (a java.lang.Class)
        at org.eclipse.swt.browser.Browser$1.run(Browser.java:232)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)
        - locked &lt;0xab6c8de0&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2916)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2645)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
        at org.eclipse.core.launcher.Main.run(Main.java:704)
        at org.eclipse.core.launcher.Main.main(Main.java:688)
Can't reproduce anymore. Not sure if that was caused by having LD_LIBRARY_PATH 
pointing to Mozilla 1.4 and MOZILLA_FIVE_HOME pointing to Mozilla 1.7.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87532" />
    <CreationDate amount="2005-03-09 13:18:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.servlet" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>Can't remove libraries from WEB-INF/lib</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Create a new Web project.</Line>
          <Line>2. Drag a drop libraries into WEB-INF/lib. The libraries appear in your project</Line>
          <Line>and on your build path.</Line>
          <Line>3. Right click on the libraries and select "remove from build path"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>1. Create a new Web project.
2. Drag a drop libraries into WEB-INF/lib. The libraries appear in your project
and on your build path.
3. Right click on the libraries and select "remove from build path"

The libraries disappear for a second but then re-appear. I imagine this has
something to do with 84216, but I am not certain. The only way to remove the
libraries appears to be to delete them from the underlying file system.
Jar files in the lib folder on on the classpath during runtime therefore they
should also be on the dev time classpath for consistency.
I don't know that I agree with this, but it is what it is. It seems like if you can't remove libraries from the build path this way, you should not be given the option.
closing</WithStack>
    <WithOutStack>1. Create a new Web project.
2. Drag a drop libraries into WEB-INF/lib. The libraries appear in your project
and on your build path.
3. Right click on the libraries and select "remove from build path"

The libraries disappear for a second but then re-appear. I imagine this has
something to do with 84216, but I am not certain. The only way to remove the
libraries appears to be to delete them from the underlying file system.
Jar files in the lib folder on on the classpath during runtime therefore they
should also be on the dev time classpath for consistency.
I don't know that I agree with this, but it is what it is. It seems like if you can't remove libraries from the build path this way, you should not be given the option.
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87533" />
    <CreationDate amount="2005-03-09 13:33:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.sse" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>auto indent does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>M3

auto indent should be part of the smart edit function in the source editor
the base provides an autoedit stragety for automatically indenting the new 
line you create after hitting enter on the previous line.  the new line will 
automatically be indented as much as the previous line.  the source editor 
does not include this autoindent, and it should.
actually, using M4+ this seems to be working fine to me.
Changed Version field given new release numbering.

since i was the one who said it was working again, i'll just close.</WithStack>
    <WithOutStack>M3

auto indent should be part of the smart edit function in the source editor
the base provides an autoedit stragety for automatically indenting the new 
line you create after hitting enter on the previous line.  the new line will 
automatically be indented as much as the previous line.  the source editor 
does not include this autoindent, and it should.
actually, using M4+ this seems to be working fine to me.
Changed Version field given new release numbering.

since i was the one who said it was working again, i'll just close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87534" />
    <CreationDate amount="2005-03-09 13:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT3.1 #33 - SWT Browser View cannot be found</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>On the menu bar from the main Workbench panel, click Window &gt; Show View &gt; Other 
 
Expand all the available items and Select SWT Browser and click OK


We cannot find the SWT Browser view, is this a function that is no longer in the
product?
Created attachment 18595
screenshot #1
No this rather looks like Mozilla was not successfully embedded on your 
machine.

David: are you reporting this for Linux GTK only?
If so, which Linux distribution are you on? It looks like a supported version 
of Mozilla was not detected. Which Eclipse build are you using?

The SWT FAQ details the requirements for Linux here.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#browserlinux
I'm sorry, the screenshot is what we want to see.  Please see the steps to
reproduce in the original description.

We are using RHEL 3, but I have reproduced on Win2000.

See both screenshots.
Created attachment 18657
Windows screenshot

Where is the SWT Browser view?
Created attachment 18658
Linux screenshot

Where is the SWT Browser?
Oh I see. This plugin is not part of the SDK. It is part of the "Example Plug-
ins".

Go to the regular Eclipse download page. e.g for M5a:
http://fullmoon.ottawa.ibm.com/eclipse/downloads/drops/S-3.1M5a-
200502191500/index.php

Scroll down till the "Example Plug-ins" section. Download the "All Other 
Platforms" version. Follow the instructions from the download page.

Start Eclipse. The SWT example views should now be accessible - and the 
Browser view in particular.

Let me know if you need more details


That explains it.  Thank you</WithStack>
    <WithOutStack>On the menu bar from the main Workbench panel, click Window &gt; Show View &gt; Other 
 
Expand all the available items and Select SWT Browser and click OK


We cannot find the SWT Browser view, is this a function that is no longer in the
product?
Created attachment 18595
screenshot #1
No this rather looks like Mozilla was not successfully embedded on your 
machine.

David: are you reporting this for Linux GTK only?
If so, which Linux distribution are you on? It looks like a supported version 
of Mozilla was not detected. Which Eclipse build are you using?

The SWT FAQ details the requirements for Linux here.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#browserlinux
I'm sorry, the screenshot is what we want to see.  Please see the steps to
reproduce in the original description.

We are using RHEL 3, but I have reproduced on Win2000.

See both screenshots.
Created attachment 18657
Windows screenshot

Where is the SWT Browser view?
Created attachment 18658
Linux screenshot

Where is the SWT Browser?
Oh I see. This plugin is not part of the SDK. It is part of the "Example Plug-
ins".

Go to the regular Eclipse download page. e.g for M5a:
http://fullmoon.ottawa.ibm.com/eclipse/downloads/drops/S-3.1M5a-
200502191500/index.php

Scroll down till the "Example Plug-ins" section. Download the "All Other 
Platforms" version. Follow the instructions from the download page.

Start Eclipse. The SWT example views should now be accessible - and the 
Browser view in particular.

Let me know if you need more details


That explains it.  Thank you</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87535" />
    <CreationDate amount="2005-03-09 13:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NullPointerException  from managedBuilder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242272">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.managedbuilder.internal.scannerconfig.DefaultGnuWinScannerInfoCollector.contributeToScannerConfig(DefaultGnuWinScannerInfoCollector.java:38)</Frame>
          <Frame depth="1">org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser.shutdown(GCCSpecsConsoleParser.java:95)</Frame>
          <Frame depth="2">org.eclipse.cdt.make.internal.core.scannerconfig.ConsoleOutputSniffer.closeConsoleOutputStream(ConsoleOutputSniffer.java:165)</Frame>
          <Frame depth="3">org.eclipse.cdt.make.internal.core.scannerconfig.ConsoleOutputSniffer$ConsoleOutputStream.close(ConsoleOutputSniffer.java:77)</Frame>
          <Frame depth="4">org.eclipse.cdt.internal.core.ProcessClosure$ReaderThread.close(ProcessClosure.java:92)</Frame>
          <Frame depth="5">org.eclipse.cdt.internal.core.ProcessClosure.isAlive(ProcessClosure.java:187)</Frame>
          <Frame depth="6">org.eclipse.cdt.core.CommandLauncher.waitAndRead(CommandLauncher.java:139)</Frame>
          <Frame depth="7">org.eclipse.cdt.make.internal.core.scannerconfig.DefaultExternalScannerInfoProvider.invokeProvider(DefaultExternalScannerInfoProvider.java:119)</Frame>
          <Frame depth="8">org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryContainer$1.run(ManagedBuildCPathEntryContainer.java:184)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="11">org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryContainer.calculateEntriesDynamically(ManagedBuildCPathEntryContainer.java:193)</Frame>
          <Frame depth="12">org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryContainer.getPathEntries(ManagedBuildCPathEntryContainer.java:218)</Frame>
          <Frame depth="13">org.eclipse.cdt.internal.core.model.PathEntryManager.getResolvedPathEntries(PathEntryManager.java:175)</Frame>
          <Frame depth="14">org.eclipse.cdt.internal.core.model.PathEntryManager.getResolvedPathEntries(PathEntryManager.java:159)</Frame>
          <Frame depth="15">org.eclipse.cdt.core.model.CoreModel.getResolvedPathEntries(CoreModel.java:724)</Frame>
          <Frame depth="16">org.eclipse.cdt.internal.core.model.CProject.getResolvedPathEntries(CProject.java:400)</Frame>
          <Frame depth="17">org.eclipse.cdt.internal.core.model.CProject.computeSourceRoots(CProject.java:595)</Frame>
          <Frame depth="18">org.eclipse.cdt.internal.core.model.CProject.computeSourceRoots(CProject.java:610)</Frame>
          <Frame depth="19">org.eclipse.cdt.internal.core.model.CProject.buildStructure(CProject.java:582)</Frame>
          <Frame depth="20">org.eclipse.cdt.internal.core.model.Openable.generateInfos(Openable.java:291)</Frame>
          <Frame depth="21">org.eclipse.cdt.internal.core.model.CElement.openWhenClosed(CElement.java:403)</Frame>
          <Frame depth="22">org.eclipse.cdt.internal.core.model.CElement.getElementInfo(CElement.java:285)</Frame>
          <Frame depth="23">org.eclipse.cdt.internal.core.model.CElement.getElementInfo(CElement.java:275)</Frame>
          <Frame depth="24">org.eclipse.cdt.internal.core.model.CElement.exists(CElement.java:90)</Frame>
          <Frame depth="25">org.eclipse.cdt.internal.core.model.CProject.exists(CProject.java:660)</Frame>
          <Frame depth="26">org.eclipse.cdt.internal.ui.util.ResourceToItemsMapper.getCorrespondingResource(ResourceToItemsMapper.java:187)</Frame>
          <Frame depth="27">org.eclipse.cdt.internal.ui.util.ResourceToItemsMapper.addToMap(ResourceToItemsMapper.java:110)</Frame>
          <Frame depth="28">org.eclipse.cdt.internal.ui.util.ProblemTreeViewer.mapElement(ProblemTreeViewer.java:66)</Frame>
          <Frame depth="29">org.eclipse.jface.viewers.StructuredViewer.associate(StructuredViewer.java:260)</Frame>
          <Frame depth="30">org.eclipse.jface.viewers.AbstractTreeViewer.associate(AbstractTreeViewer.java:294)</Frame>
          <Frame depth="31">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:457)</Frame>
          <Frame depth="32">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:128)</Frame>
          <Frame depth="33">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="34">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1374)</Frame>
          <Frame depth="36">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:381)</Frame>
          <Frame depth="37">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:361)</Frame>
          <Frame depth="38">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="39">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:342)</Frame>
          <Frame depth="40">org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:787)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:862)</Frame>
          <Frame depth="42">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:777)</Frame>
          <Frame depth="43">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="44">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1059)</Frame>
          <Frame depth="45">org.eclipse.cdt.internal.ui.cview.CView.createPartControl(CView.java:520)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.PartPane$2.run(PartPane.java:137)</Frame>
          <Frame depth="47">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="48">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:133)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:135)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:205)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:119)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:349)</Frame>
          <Frame depth="54">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="55">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:273)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:530)</Frame>
          <Frame depth="58">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:528)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.ViewFactory$ViewReference.getPart(ViewFactory.java:102)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.ViewFactory$ViewReference.getView(ViewFactory.java:166)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2550)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1372)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="69">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)</Frame>
          <Frame depth="70">org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:167)</Frame>
          <Frame depth="71">org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:652)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.Workbench.init(Workbench.java:819)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="75">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="77">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="78">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="79">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="81">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="82">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="83">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="86">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>-  I haven't seen this NPE and I do most of my work on Windows.</Line>
          <Line>-  We don't have a reproducer (right?).</Line>
          <Line>-  The source file with the NPE hasn't changed since June 2.</Line>
          <Line>-  Looking at the code, it seems that an NPE would occur if the</Line>
          <Line>CygpathTranslator (from ...make.internal.core.scannerconfig.util)</Line>
          <Line>returns null.</Line>
          <Line>-  I guess the code could check for null, but I have no idea whether we</Line>
          <Line>should ever get a null - that is, will a problem occur later if we</Line>
          <Line>prevent the NPE from happening here?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>CDT 2.1.1:I200503071047  on Eclipse  Latest Release 3.0.1

Initially found this when I created managed make C/C++ project, but it seems 
unreproduceable after played around eclipse settings.

*********************************

Error Mar 09, 2005 10:13:02.46 Error
java.lang.NullPointerException
at 
org.eclipse.cdt.managedbuilder.internal.scannerconfig.DefaultGnuWinScannerInfoC
ollector.contributeToScannerConfig(DefaultGnuWinScannerInfoCollector.java:38)
at 
org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser.shut
down(GCCSpecsConsoleParser.java:95)
at 
org.eclipse.cdt.make.internal.core.scannerconfig.ConsoleOutputSniffer.closeCons
oleOutputStream(ConsoleOutputSniffer.java:165)
at 
org.eclipse.cdt.make.internal.core.scannerconfig.ConsoleOutputSniffer$ConsoleOu
tputStream.close(ConsoleOutputSniffer.java:77)
at org.eclipse.cdt.internal.core.ProcessClosure$ReaderThread.close
(ProcessClosure.java:92)
at org.eclipse.cdt.internal.core.ProcessClosure.isAlive
(ProcessClosure.java:187)
at org.eclipse.cdt.core.CommandLauncher.waitAndRead(CommandLauncher.java:139)
at 
org.eclipse.cdt.make.internal.core.scannerconfig.DefaultExternalScannerInfoProv
ider.invokeProvider(DefaultExternalScannerInfoProvider.java:119)
at 
org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryCon
tainer$1.run(ManagedBuildCPathEntryContainer.java:184)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
at org.eclipse.core.runtime.Platform.run(Platform.java:747)
at 
org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryCon
tainer.calculateEntriesDynamically(ManagedBuildCPathEntryContainer.java:193)
at 
org.eclipse.cdt.managedbuilder.internal.scannerconfig.ManagedBuildCPathEntryCon
tainer.getPathEntries(ManagedBuildCPathEntryContainer.java:218)
at org.eclipse.cdt.internal.core.model.PathEntryManager.getResolvedPathEntries
(PathEntryManager.java:175)
at org.eclipse.cdt.internal.core.model.PathEntryManager.getResolvedPathEntries
(PathEntryManager.java:159)
at org.eclipse.cdt.core.model.CoreModel.getResolvedPathEntries
(CoreModel.java:724)
at org.eclipse.cdt.internal.core.model.CProject.getResolvedPathEntries
(CProject.java:400)
at org.eclipse.cdt.internal.core.model.CProject.computeSourceRoots
(CProject.java:595)
at org.eclipse.cdt.internal.core.model.CProject.computeSourceRoots
(CProject.java:610)
at org.eclipse.cdt.internal.core.model.CProject.buildStructure
(CProject.java:582)
at org.eclipse.cdt.internal.core.model.Openable.generateInfos
(Openable.java:291)
at org.eclipse.cdt.internal.core.model.CElement.openWhenClosed
(CElement.java:403)
at org.eclipse.cdt.internal.core.model.CElement.getElementInfo
(CElement.java:285)
at org.eclipse.cdt.internal.core.model.CElement.getElementInfo
(CElement.java:275)
at org.eclipse.cdt.internal.core.model.CElement.exists(CElement.java:90)
at org.eclipse.cdt.internal.core.model.CProject.exists(CProject.java:660)
at 
org.eclipse.cdt.internal.ui.util.ResourceToItemsMapper.getCorrespondingResource
(ResourceToItemsMapper.java:187)
at org.eclipse.cdt.internal.ui.util.ResourceToItemsMapper.addToMap
(ResourceToItemsMapper.java:110)
at org.eclipse.cdt.internal.ui.util.ProblemTreeViewer.mapElement
(ProblemTreeViewer.java:66)
at org.eclipse.jface.viewers.StructuredViewer.associate
(StructuredViewer.java:260)
at org.eclipse.jface.viewers.AbstractTreeViewer.associate
(AbstractTreeViewer.java:294)
at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:457)
at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:128)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
at org.eclipse.core.runtime.Platform.run(Platform.java:747)
at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1374)
at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:381)
at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:361)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:342)
at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:787)
at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:862)
at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:777)
at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:1059)
at org.eclipse.cdt.internal.ui.cview.CView.createPartControl(CView.java:520)
at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:137)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
at org.eclipse.core.runtime.Platform.run(Platform.java:747)
at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:133)
at org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:135)
at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:205)
at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:119)
at org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:349)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
at org.eclipse.core.runtime.Platform.run(Platform.java:747)
at org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:273)
at org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:530)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:528)
at org.eclipse.ui.internal.ViewFactory$ViewReference.getPart
(ViewFactory.java:102)
at org.eclipse.ui.internal.ViewFactory$ViewReference.getView
(ViewFactory.java:166)
at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2550)
at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1372)
at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1224)
at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1185)
at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1096)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:616)
at org.eclipse.core.runtime.Platform.run(Platform.java:747)
at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1029)
at org.eclipse.ui.internal.WorkbenchConfigurer.restoreState
(WorkbenchConfigurer.java:167)
at org.eclipse.ui.application.WorkbenchAdvisor.openWindows
(WorkbenchAdvisor.java:652)
at org.eclipse.ui.internal.Workbench.init(Workbench.java:819)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:335)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
at org.eclipse.core.launcher.Main.run(Main.java:704)
at org.eclipse.core.launcher.Main.main(Main.java:688)
Here are some observations for later:

-  I haven't seen this NPE and I do most of my work on Windows.
-  We don't have a reproducer (right?).
-  The source file with the NPE hasn't changed since June 2.
-  Looking at the code, it seems that an NPE would occur if the
CygpathTranslator (from ...make.internal.core.scannerconfig.util)
returns null.  
-  I guess the code could check for null, but I have no idea whether we
should ever get a null - that is, will a problem occur later if we
prevent the NPE from happening here?

I'm going to close this for now since it's not reproducible and it's opened against an old release.  Please reopen if the problem persists.</WithStack>
    <WithOutStack>CDT 2.1.1:I200503071047  on Eclipse  Latest Release 3.0.1

Initially found this when I created managed make C/C++ project, but it seems 
unreproduceable after played around eclipse settings.

*********************************

Error Mar 09, 2005 10:13:02.46 Error

Here are some observations for later:

-  I haven't seen this NPE and I do most of my work on Windows.
-  We don't have a reproducer (right?).
-  The source file with the NPE hasn't changed since June 2.
-  Looking at the code, it seems that an NPE would occur if the
CygpathTranslator (from ...make.internal.core.scannerconfig.util)
returns null.  
-  I guess the code could check for null, but I have no idea whether we
should ever get a null - that is, will a problem occur later if we
prevent the NPE from happening here?

I'm going to close this for now since it's not reproducible and it's opened against an old release.  Please reopen if the problem persists.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87536" />
    <CreationDate amount="2005-03-09 13:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="WTP Datatools" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SQL Scrapbook cursor jumps to top of file after saving SQL file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>If I open a .sql file, this brings up the SQL Scrapbook editor. If I then make 
a modification to that file and save it using either ctrl-S or the toolbar 
button, the cursor jumps to the top of the file. This is disorienting when 
modifying a file containing hundreds of lines.
Changed Version field given new release numbering.

Works in M5 6/23/05 IBuild
Verified and close.</WithStack>
    <WithOutStack>If I open a .sql file, this brings up the SQL Scrapbook editor. If I then make 
a modification to that file and save it using either ctrl-S or the toolbar 
button, the cursor jumps to the top of the file. This is disorienting when 
modifying a file containing hundreds of lines.
Changed Version field given new release numbering.

Works in M5 6/23/05 IBuild
Verified and close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87537" />
    <CreationDate amount="2005-03-09 13:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[clean up] [code style] Remove/Add () {} proposed implementation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="2371" end="2382" />
        <code>foo();</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2386" end="2408" />
        <code>if (b) {
     foo();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>See in attach patch with first version of code style transformations.
Currently it supports only "{}" and "()" changes: keep, add, remove.
  Preferences implementation (and may be also rest of code :-)) is awful, I
don't have much experience with so flexible preference pages.
Created attachment 18596
Patch with code style transformations
Martin, I am not sure whether this is quick fix or editor functionality.
Patch is partial implementation of this idea:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=85401#c4
not for 3.1
reopen
Benno, as an inspiration only, maybe you can use part of the patches, but that's
not important.

Konstantin, we are working on a 'beautifier' action, that would work on multiple
files to do semantic formattings.
As I can see, this request was marked as "clean Up". Does this means that such
code style transformation will be accessible only using "Clean Up" wizard? I
would like to have separate action for fast applying all (configured) "clean up"
changes for current compilation unit.
You can apply all configured clean ups on the visible cu in an editor by
pressing Alt-Shift-S, U, Finish. I think this is pretty fast.
Created attachment 29782
Separate plugin for style changes

I upload this plugin as temporary solution for users that need such code
transformations and we all wait better solution from Benno. :-)
To comment 9 - thank you, the plugin is *very* useful. I can't count how much 
times I have missed such feature in Eclipse. Btw, the key sequence is "Ctrl-
Shift-Y" and not "Alt-Shift-S, U" as in comment 8 - was it intentional?
Alt-Shift-S, U is "Clean up" wizard invocation. My plugin was implemented for
late milestone of 3.1, so there was no "Clean up". Plus I need easy shortcut, as
Ctrl-Shift-F for "Format" or Ctrl-Shift-O for "Organize imports".
To #8:
No, it is not fast. In fact, It is slow. Compare it to Ctrl+Shift+O or
Ctrl+Shift+F. I am used to hitting these both pretty often.
Created attachment 30224
Rebuild AST

In case of a conflict (overlapping text edits) a new AST is created with the
changes applied from previous multi fixes.
Created attachment 30225
NLSUtil workingcopy fix

This fix changes NLSUtil such that it works with working copies correctly.
Created attachment 30226
Convert body to block

This adds the clean up:
Convert single statement in control statement body to block

i.e.
if (b)
     foo();
-&gt;
if (b) {
     foo();
}

You need to apply patch: 30224: Rebuild AST and 30225: NLSUtil workingcopy fix
first otherwise the tests will fail.
See Bug 117295 for light clean up.
patches released &gt; 20051122
*** Bug 79065 has been marked as a duplicate of this bug. ***
For 3.2M5 remove unnecessary {} clean up has been implemented.

I try to look into add/remove () for M6
fixed &gt; I20060216-2000

Added 'Add/Remove paranoiac paranthesis clean up'</WithStack>
    <WithOutStack>See in attach patch with first version of code style transformations.
Currently it supports only "{}" and "()" changes: keep, add, remove.
  Preferences implementation (and may be also rest of code :-)) is awful, I
don't have much experience with so flexible preference pages.
Created attachment 18596
Patch with code style transformations
Martin, I am not sure whether this is quick fix or editor functionality.
Patch is partial implementation of this idea:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=85401#c4
not for 3.1
reopen
Benno, as an inspiration only, maybe you can use part of the patches, but that's
not important.

Konstantin, we are working on a 'beautifier' action, that would work on multiple
files to do semantic formattings.
As I can see, this request was marked as "clean Up". Does this means that such
code style transformation will be accessible only using "Clean Up" wizard? I
would like to have separate action for fast applying all (configured) "clean up"
changes for current compilation unit.
You can apply all configured clean ups on the visible cu in an editor by
pressing Alt-Shift-S, U, Finish. I think this is pretty fast.
Created attachment 29782
Separate plugin for style changes

I upload this plugin as temporary solution for users that need such code
transformations and we all wait better solution from Benno. :-)
To comment 9 - thank you, the plugin is *very* useful. I can't count how much 
times I have missed such feature in Eclipse. Btw, the key sequence is "Ctrl-
Shift-Y" and not "Alt-Shift-S, U" as in comment 8 - was it intentional?
Alt-Shift-S, U is "Clean up" wizard invocation. My plugin was implemented for
late milestone of 3.1, so there was no "Clean up". Plus I need easy shortcut, as
Ctrl-Shift-F for "Format" or Ctrl-Shift-O for "Organize imports".
To #8:
No, it is not fast. In fact, It is slow. Compare it to Ctrl+Shift+O or
Ctrl+Shift+F. I am used to hitting these both pretty often.
Created attachment 30224
Rebuild AST

In case of a conflict (overlapping text edits) a new AST is created with the
changes applied from previous multi fixes.
Created attachment 30225
NLSUtil workingcopy fix

This fix changes NLSUtil such that it works with working copies correctly.
Created attachment 30226
Convert body to block

This adds the clean up:
Convert single statement in control statement body to block

i.e.
if (b)
     foo();
-&gt;
if (b) {
     foo();
}

You need to apply patch: 30224: Rebuild AST and 30225: NLSUtil workingcopy fix
first otherwise the tests will fail.
See Bug 117295 for light clean up.
patches released &gt; 20051122
*** Bug 79065 has been marked as a duplicate of this bug. ***
For 3.2M5 remove unnecessary {} clean up has been implemented.

I try to look into add/remove () for M6
fixed &gt; I20060216-2000

Added 'Add/Remove paranoiac paranthesis clean up'</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87538" />
    <CreationDate amount="2005-03-09 13:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>expires=  [nothing] not recognized as cookie expires cue</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Hyades is interpreting "expires=" as if there were no expiration rather than 
this being a cue to expire the cookie. IE takes that as a cue to expire the 
cookie. It would probably be wise to follow suit even though the original 
Netscape cookie spec did not list this as a way to do things.
  This should probably also be put into TPTP.
  This was fixed in 3.3 Hyades and 4.0 TPTP, by checking for expires=[nothing] 
and deleting the matching cookie if one was found.
  This is appropriate for the current iteration as of the time this was 
resolved.
   Works.</WithStack>
    <WithOutStack>Hyades is interpreting "expires=" as if there were no expiration rather than 
this being a cue to expire the cookie. IE takes that as a cue to expire the 
cookie. It would probably be wise to follow suit even though the original 
Netscape cookie spec did not list this as a way to do things.
  This should probably also be put into TPTP.
  This was fixed in 3.3 Hyades and 4.0 TPTP, by checking for expires=[nothing] 
and deleting the matching cookie if one was found.
  This is appropriate for the current iteration as of the time this was 
resolved.
   Works.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87539" />
    <CreationDate amount="2005-03-09 13:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ITypeHierarchy.getAllSupertypes() does not return java.lang.Object for java.awt.GraphicsCallback$PrintAllCallback</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="110" end="730" />
        <code>public void check(String className) throws Exception {
        // getJavaProject() simply gets any java project with rt.jar on
        // classpath
        final IType currentType = getJavaProject().findType(className);
        final IType[] superTypes = currentType.newSupertypeHierarchy(null)
                .getAllSupertypes(currentType);
        for (int i = 0; i &lt; superTypes.length; i++) {
            IType type = superTypes[i];
            if (type.getFullyQualifiedName().equals("java.lang.Object"))
                return;
        }
        fail("Object is not a super type of '" + className + "'");
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="732" end="891" />
        <code>public void testEclipse() throws Exception {
        check("java.awt.GraphicsCallback");
        check("java.awt.GraphicsCallback$PrintAllCallback");
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>To see the problem, run this piece of JUnit plugin test code.  You will have 
to implement getJavaProject():

    public void check(String className) throws Exception {
        // getJavaProject() simply gets any java project with rt.jar on
        // classpath
        final IType currentType = getJavaProject().findType(className);
        final IType[] superTypes = currentType.newSupertypeHierarchy(null)
                .getAllSupertypes(currentType);
        for (int i = 0; i &lt; superTypes.length; i++) {
            IType type = superTypes[i];
            if (type.getFullyQualifiedName().equals("java.lang.Object"))
                return;
        }
        fail("Object is not a super type of '" + className + "'");
    }

    public void testEclipse() throws Exception {
        check("java.awt.GraphicsCallback");
        check("java.awt.GraphicsCallback$PrintAllCallback");
    }
Cannot reproduce. Please reopen if you have specific steps.</WithStack>
    <WithOutStack>To see the problem, run this piece of JUnit plugin test code.  You will have 
to implement getJavaProject():

    public void check(String className) throws Exception {
        // getJavaProject() simply gets any java project with rt.jar on
        // classpath
        final IType currentType = getJavaProject().findType(className);
        final IType[] superTypes = currentType.newSupertypeHierarchy(null)
                .getAllSupertypes(currentType);
        for (int i = 0; i &lt; superTypes.length; i++) {
            IType type = superTypes[i];
            if (type.getFullyQualifiedName().equals("java.lang.Object"))
                return;
        }
        fail("Object is not a super type of '" + className + "'");
    }

    public void testEclipse() throws Exception {
        check("java.awt.GraphicsCallback");
        check("java.awt.GraphicsCallback$PrintAllCallback");
    }
Cannot reproduce. Please reopen if you have specific steps.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87540" />
    <CreationDate amount="2005-03-09 13:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TabFolder tabs look strange when SWT.BOTTOM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Running ControlExample with the manifest. TabFolder tab. Select SWT.BOTTOM. The 
tabs draw on the bottom, but I was expecting the orange strip would be under 
the text and not above it. You should just check if this is the correct drawing.
I think this is just the way Windows XP is but Grant, can you please have 
another look at this.  Maybe Christophe has some ideas about it too since he 
has looked at the Windows XP theme stuff quite a bit.
MSDN says:

  "TCS_BOTTOM

    Version 4.70. Tabs appear at the bottom of the control. [...]
    This style is not supported if you use ComCtl32.dll version 6."
can you fix this in 3.2?
I don't think this is likely for 3.2.x since it's not a crash or major functional defect.

Moving report to triage, see http://www.eclipse.org/swt/triage.php
for more info about swt bug handling.
Are there any chance you work on this the next time?
I've taken another look, but I still don't see a "supported" way to do this.  I think the only thing that could be done would be to not honour the SWT.BOTTOM style on win32, so that these tabs would draw at the top but would be visually correct.</WithStack>
    <WithOutStack>Running ControlExample with the manifest. TabFolder tab. Select SWT.BOTTOM. The 
tabs draw on the bottom, but I was expecting the orange strip would be under 
the text and not above it. You should just check if this is the correct drawing.
I think this is just the way Windows XP is but Grant, can you please have 
another look at this.  Maybe Christophe has some ideas about it too since he 
has looked at the Windows XP theme stuff quite a bit.
MSDN says:

  "TCS_BOTTOM

    Version 4.70. Tabs appear at the bottom of the control. [...]
    This style is not supported if you use ComCtl32.dll version 6."
can you fix this in 3.2?
I don't think this is likely for 3.2.x since it's not a crash or major functional defect.

Moving report to triage, see http://www.eclipse.org/swt/triage.php
for more info about swt bug handling.
Are there any chance you work on this the next time?
I've taken another look, but I still don't see a "supported" way to do this.  I think the only thing that could be done would be to not honour the SWT.BOTTOM style on win32, so that these tabs would draw at the top but would be visually correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87541" />
    <CreationDate amount="2005-03-09 14:00:00 -0500" />
    <DupId amount="88867" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[DetachedViews] Errors with detached views</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341242282">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2850)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2773)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2744)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:393)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Shell.addShellListener(Shell.java:375)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.ShellPool.allocateShell(ShellPool.java:97)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.DetachedWindow.create(DetachedWindow.java:82)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PerspectiveHelper.addPart(PerspectiveHelper.java:297)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1703)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:873)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:856)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.WorkbenchPage$14.run(WorkbenchPage.java:3068)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:3065)</Frame>
          <Frame depth="15">org.eclipse.search2.internal.ui.InternalSearchUI.activateSearchView(InternalSearchUI.java:266)</Frame>
          <Frame depth="16">org.eclipse.search.ui.NewSearchUI.activateSearchResultView(NewSearchUI.java:40)</Frame>
          <Frame depth="17">org.eclipse.jdt.ui.actions.FindAction.performNewSearch(FindAction.java:285)</Frame>
          <Frame depth="18">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:276)</Frame>
          <Frame depth="19">org.eclipse.jdt.ui.actions.FindReferencesAction.run(FindReferencesAction.java:89)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:221)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:212)</Frame>
          <Frame depth="22">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)</Frame>
          <Frame depth="23">org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)</Frame>
          <Frame depth="24">org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:215)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:225)</Frame>
          <Frame depth="26">org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:182)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.commands.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:107)</Frame>
          <Frame depth="28">org.eclipse.core.commands.Command.execute(Command.java:298)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:412)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:691)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:734)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:504)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:447)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:220)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.filterEvent(Display.java:777)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1181)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:2367)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2327)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)</Frame>
          <Frame depth="48">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1623)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)</Frame>
          <Frame depth="54">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="56">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)</Frame>
          <Frame depth="58">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="60">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="61">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="62">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="63">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.basicRun(Main.java:260)</Frame>
          <Frame depth="66">org.eclipse.core.launcher.Main.run(Main.java:887)</Frame>
          <Frame depth="67">org.eclipse.core.launcher.Main.main(Main.java:871)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341242282">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.DetachedWindow.saveState(DetachedWindow.java:255)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.PerspectiveHelper.saveState(PerspectiveHelper.java:1274)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.Perspective.saveState(Perspective.java:1459)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.Perspective.saveState(Perspective.java:1293)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchPage.saveState(WorkbenchPage.java:2682)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WorkbenchWindow.saveState(WorkbenchWindow.java:2109)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.saveState(Workbench.java:1539)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.recordWorkbenchState(Workbench.java:1287)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.access$3(Workbench.java:1284)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench$9.run(Workbench.java:490)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:757)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:488)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.access$6(Workbench.java:452)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:636)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.close(Workbench.java:634)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.close(Workbench.java:609)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:537)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:521)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:622)</Frame>
          <Frame depth="21">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:620)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:719)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window$3.shellClosed(Window.java:666)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Decorations.closeWidget(Decorations.java:256)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1568)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Control.windowProc(Control.java:3026)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="36">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1618)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:403)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Control.windowProc(Control.java:3109)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)</Frame>
          <Frame depth="41">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="42">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1618)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:403)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Control.windowProc(Control.java:3109)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)</Frame>
          <Frame depth="47">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="48">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1623)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)</Frame>
          <Frame depth="53">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="55">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)</Frame>
          <Frame depth="56">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)</Frame>
          <Frame depth="58">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="59">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="60">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="61">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="62">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)</Frame>
          <Frame depth="64">org.eclipse.core.launcher.Main.basicRun(Main.java:260)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.run(Main.java:887)</Frame>
          <Frame depth="66">org.eclipse.core.launcher.Main.main(Main.java:871)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am getting exceptions and errors when using detached views in this build.

I have my perspective set up such that the Search View is a detached view and
opens whenever I do a search. I tried to search for references in the workspace
(view was closed) and I got a "Widget is disposed" dialog. I searched again and
it opened a new Search View in the default location. (docked, not detached)

Later I tried to shut down Eclipse (after detaching the view and setting it up
again like I had it and then closing it) and I got a dialog saying that an error
occurred and did I really want to exit. 

This is my error log, with both stack traces.

Install location:
    file:/c:/eclipse/dev/i0308-2/eclipse/
Configuration file:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/config.ini loaded
Configuration location:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/
Configuration file:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/config.ini loaded
Framework located:
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/
Framework classpath:
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
   
file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
Splash location:
    c:\eclipse\dev\i0308-2\eclipse\plugins\org.eclipse.platform_3.1.0\splash.bmp
runCommand:
   
&lt;C:\eclipse\dev\i0308-2\eclipse\eclipse.exe&gt;&lt;-name&gt;&lt;Eclipse&gt;&lt;-showsplash&gt;&lt;600&gt;&lt;c:\eclipse\dev\i0308-2\eclipse\plugins\org.eclipse.platform_3.1.0\s
plash.bmp&gt;
Debug options:
   
file:/c:/eclipse/dev/i0308-2/eclipse/platform:/base/plugins/org.eclipse.core.runtime/performance.options
not found

osgi&gt; Time to load bundles: 40
Starting application: 3165
!SESSION 2005-03-09 10:51:23.930 -----------------------------------------------
eclipse.buildId=I20050308-1510
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040915 (JIT
enabled)
J9VM - 20040914_1123_lHdSMR
JIT  - r7_level20040912_1800
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -data
\eclipse\target\head\plugins\ -showlocation -consoleLog -console

!ENTRY org.eclipse.ui 4 4 2005-03-09 10:51:23.940
!MESSAGE Warnings while parsing the key bindings from the
'org.eclipse.ui.commands' extension point.
Warnings while parsing the key bindings from the 'org.eclipse.ui.commands'
extension point.
Reason:

!ENTRY org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Warnings while parsing the key bindings from the
'org.eclipse.ui.commands' extension point.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.RepositoriesView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.HistoryView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.EditorsView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.AnnotateView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.970
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.ui', 'org.eclipse.team.ui.synchronizeAll'.
Warnings while parsing the key bindings from the 'org.eclipse.ui.commands'
extension point.

!ENTRY org.eclipse.ui 4 4 2005-03-09 13:07:14.229
!MESSAGE The command for the key you pressed failed
The command for the key you pressed failed
Reason:

!ENTRY org.eclipse.ui 4 0 2005-03-09 13:07:14.259
!MESSAGE Widget is disposed
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
        at org.eclipse.swt.SWT.error(SWT.java:2850)
        at org.eclipse.swt.SWT.error(SWT.java:2773)
        at org.eclipse.swt.SWT.error(SWT.java:2744)
        at org.eclipse.swt.widgets.Widget.error(Widget.java:393)
        at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)
        at org.eclipse.swt.widgets.Shell.addShellListener(Shell.java:375)
        at org.eclipse.ui.internal.ShellPool.allocateShell(ShellPool.java:97)
        at org.eclipse.ui.internal.DetachedWindow.create(DetachedWindow.java:82)
        at
org.eclipse.ui.internal.PerspectiveHelper.addPart(PerspectiveHelper.java:297)
        at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1703)
        at
org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:873)
        at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:856)
        at org.eclipse.ui.internal.WorkbenchPage$14.run(WorkbenchPage.java:3068)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:3065)
        at
org.eclipse.search2.internal.ui.InternalSearchUI.activateSearchView(InternalSearchUI.java:266)
        at
org.eclipse.search.ui.NewSearchUI.activateSearchResultView(NewSearchUI.java:40)
        at
org.eclipse.jdt.ui.actions.FindAction.performNewSearch(FindAction.java:285)
        at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:276)
        at
org.eclipse.jdt.ui.actions.FindReferencesAction.run(FindReferencesAction.java:89)
        at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:221)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:212)
        at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)
        at
org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:215)
        at
org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:225)
        at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:182)
        at
org.eclipse.ui.internal.commands.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:107)
        at org.eclipse.core.commands.Command.execute(Command.java:298)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:412)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:691)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:734)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:504)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:447)
        at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:220)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:777)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875)
        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1181)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121)
        at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:2367)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024)
        at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2327)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1623)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
        at org.eclipse.core.launcher.Main.run(Main.java:887)
        at org.eclipse.core.launcher.Main.main(Main.java:871)
Widget is disposed

!ENTRY org.eclipse.ui.workbench 4 2 2005-03-09 13:55:42.952
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.ui.internal.DetachedWindow.saveState(DetachedWindow.java:255)
        at
org.eclipse.ui.internal.PerspectiveHelper.saveState(PerspectiveHelper.java:1274)
        at org.eclipse.ui.internal.Perspective.saveState(Perspective.java:1459)
        at org.eclipse.ui.internal.Perspective.saveState(Perspective.java:1293)
        at org.eclipse.ui.internal.WorkbenchPage.saveState(WorkbenchPage.java:2682)
        at
org.eclipse.ui.internal.WorkbenchWindow.saveState(WorkbenchWindow.java:2109)
        at org.eclipse.ui.internal.Workbench.saveState(Workbench.java:1539)
        at
org.eclipse.ui.internal.Workbench.recordWorkbenchState(Workbench.java:1287)
        at org.eclipse.ui.internal.Workbench.access$3(Workbench.java:1284)
        at org.eclipse.ui.internal.Workbench$9.run(Workbench.java:490)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)
        at org.eclipse.core.runtime.Platform.run(Platform.java:757)
        at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:488)
        at org.eclipse.ui.internal.Workbench.access$6(Workbench.java:452)
        at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:636)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at org.eclipse.ui.internal.Workbench.close(Workbench.java:634)
        at org.eclipse.ui.internal.Workbench.close(Workbench.java:609)
        at
org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:537)
        at
org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:521)
        at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:622)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
        at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:620)
        at org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:719)
        at org.eclipse.jface.window.Window$3.shellClosed(Window.java:666)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851)
        at org.eclipse.swt.widgets.Decorations.closeWidget(Decorations.java:256)
        at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1568)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3026)
        at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)
        at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1618)
        at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:403)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3109)
        at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)
        at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1618)
        at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:403)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3109)
        at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1623)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
        at java.lang.reflect.Method.invoke(Method.java:391)
        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
        at org.eclipse.core.launcher.Main.run(Main.java:887)
        at org.eclipse.core.launcher.Main.main(Main.java:871)
Note that I get the second error (the NPE) every time I try and exit the workbench.
I've committed a fix for the NPE.

Still need to investigate the WDE.


*** This bug has been marked as a duplicate of 88867 ***</WithStack>
    <WithOutStack>I am getting exceptions and errors when using detached views in this build.

I have my perspective set up such that the Search View is a detached view and
opens whenever I do a search. I tried to search for references in the workspace
(view was closed) and I got a "Widget is disposed" dialog. I searched again and
it opened a new Search View in the default location. (docked, not detached)

Later I tried to shut down Eclipse (after detaching the view and setting it up
again like I had it and then closing it) and I got a dialog saying that an error
occurred and did I really want to exit. 

This is my error log, with both stack traces.

Install location:
    file:/c:/eclipse/dev/i0308-2/eclipse/
Configuration file:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/config.ini loaded
Configuration location:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/
Configuration file:
    file:/c:/eclipse/dev/i0308-2/eclipse/configuration/config.ini loaded
Framework located:
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/
Framework classpath:
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/core.jar
    file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/console.jar
   
file:/c:/eclipse/dev/i0308-2/eclipse/plugins/org.eclipse.osgi_3.1.0/eclipseAdaptor.jar
Splash location:
    c:\eclipse\dev\i0308-2\eclipse\plugins\org.eclipse.platform_3.1.0\splash.bmp
runCommand:
   
&lt;C:\eclipse\dev\i0308-2\eclipse\eclipse.exe&gt;&lt;-name&gt;&lt;Eclipse&gt;&lt;-showsplash&gt;&lt;600&gt;&lt;c:\eclipse\dev\i0308-2\eclipse\plugins\org.eclipse.platform_3.1.0\s
plash.bmp&gt;
Debug options:
   
file:/c:/eclipse/dev/i0308-2/eclipse/platform:/base/plugins/org.eclipse.core.runtime/performance.options
not found

osgi&gt; Time to load bundles: 40
Starting application: 3165
!SESSION 2005-03-09 10:51:23.930 -----------------------------------------------
eclipse.buildId=I20050308-1510
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040915 (JIT
enabled)
J9VM - 20040914_1123_lHdSMR
JIT  - r7_level20040912_1800
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -data
\eclipse\target\head\plugins\ -showlocation -consoleLog -console

!ENTRY org.eclipse.ui 4 4 2005-03-09 10:51:23.940
!MESSAGE Warnings while parsing the key bindings from the
'org.eclipse.ui.commands' extension point.
Warnings while parsing the key bindings from the 'org.eclipse.ui.commands'
extension point.
Reason:

!ENTRY org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Warnings while parsing the key bindings from the
'org.eclipse.ui.commands' extension point.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.RepositoriesView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.HistoryView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.EditorsView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.960
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.cvs.ui', 'org.eclipse.team.ccvs.ui.AnnotateView'.
!SUBENTRY 1 org.eclipse.ui 2 0 2005-03-09 10:51:23.970
!MESSAGE Defining a key binding with no key sequence has no effect:
'org.eclipse.team.ui', 'org.eclipse.team.ui.synchronizeAll'.
Warnings while parsing the key bindings from the 'org.eclipse.ui.commands'
extension point.

!ENTRY org.eclipse.ui 4 4 2005-03-09 13:07:14.229
!MESSAGE The command for the key you pressed failed
The command for the key you pressed failed
Reason:

!ENTRY org.eclipse.ui 4 0 2005-03-09 13:07:14.259
!MESSAGE Widget is disposed
!STACK 0
Widget is disposed

!ENTRY org.eclipse.ui.workbench 4 2 2005-03-09 13:55:42.952
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0

Note that I get the second error (the NPE) every time I try and exit the workbench.
I've committed a fix for the NPE.

Still need to investigate the WDE.


*** This bug has been marked as a duplicate of 88867 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87542" />
    <CreationDate amount="2005-03-09 14:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>stack overflow error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Used CDT 2.1.1:I200503071047  on Eclipse  Latest Release 3.0.1

An error dialog pops up when I add external include path
(cygdrive/c/user/include) for the project "shell" attached. The error log is 
generated as attahced.
Created attachment 18599
error log
Created attachment 18600
project shell
tossing back into the pool
The Browsing Perspective, which caused the problem has gone away.
*** Bug 93095 has been marked as a duplicate of this bug. ***
*** Bug 93681 has been marked as a duplicate of this bug. ***
*** Bug 104673 has been marked as a duplicate of this bug. ***
*** Bug 93096 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Used CDT 2.1.1:I200503071047  on Eclipse  Latest Release 3.0.1

An error dialog pops up when I add external include path
(cygdrive/c/user/include) for the project "shell" attached. The error log is 
generated as attahced.
Created attachment 18599
error log
Created attachment 18600
project shell
tossing back into the pool
The Browsing Perspective, which caused the problem has gone away.
*** Bug 93095 has been marked as a duplicate of this bug. ***
*** Bug 93681 has been marked as a duplicate of this bug. ***
*** Bug 104673 has been marked as a duplicate of this bug. ***
*** Bug 93096 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87543" />
    <CreationDate amount="2005-03-09 14:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AntBreakpoint hover info not updated with changes to linenumber</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Create an Ant breakpoint on line 13 of an Ant buildfile
Modifiy the builder by deleting a line before line 13
Save.

The hover information for the Ant breakpoint still incorrectly indicates that 
the breakpoint is on line 13 when it is really on line 12.

The breakpoint is hit during debugging so appears to be a presentation problem
We should see if we can come up with a general solution for all breakpoints so 
that each debugger does not have re-implement this functionlity
Changes to:
AntModel: to add/remove the AntModelCore to be a breakpoint listener if there 
are active AntModels
AntModelCore: on breakpoint change, update the linenumbers of all Ant 
breakpoints that have changed.
Please verify Jared.
Verified.</WithStack>
    <WithOutStack>Create an Ant breakpoint on line 13 of an Ant buildfile
Modifiy the builder by deleting a line before line 13
Save.

The hover information for the Ant breakpoint still incorrectly indicates that 
the breakpoint is on line 13 when it is really on line 12.

The breakpoint is hit during debugging so appears to be a presentation problem
We should see if we can come up with a general solution for all breakpoints so 
that each debugger does not have re-implement this functionlity
Changes to:
AntModel: to add/remove the AntModelCore to be a breakpoint listener if there 
are active AntModels
AntModelCore: on breakpoint change, update the linenumbers of all Ant 
breakpoints that have changed.
Please verify Jared.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87544" />
    <CreationDate amount="2005-03-09 14:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add List.ShowItem() similar to Table.ShowItem()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Use a Table instead and use Table.showItem(TableItem).

List has setTopIndex which allows you to scroll, however, it is not exactly 
what you are looking for.  Enter a feature request for List.showItem(int).

"sck" &lt;Sri_Know@hotmail.com&gt; wrote in message 
news:d0lhqa$8of$1@www.eclipse.org...
&gt; Hello Mighty,
&gt; I tried it, and with this approach the added text is getting high lighted
&gt; besides scrolling down to this location..Is there a way to get this effect
&gt; without high-lighting it...
&gt; This question might be silly...;-) and there could be some simple work
&gt; around for it..
&gt;
&gt; Interestingly, there is List.getFocusIndex() and there is no
&gt; List.setFocusIndex().
&gt;
&gt; thanks,
&gt; Sridhar
&gt;
&gt; "Mighty M" &lt;fn2o-mycl@spamex.com&gt; wrote in message
&gt; news:d0lftu$13c$1@www.eclipse.org...
&gt;&gt; Did you try setting the selection?
&gt;&gt;
&gt;&gt; "sck" &lt;Sri_Know@hotmail.com&gt; wrote in message
&gt;&gt; news:d0lfg3$v3b$1@www.eclipse.org...
&gt;&gt; &gt; Hello All,
&gt;&gt; &gt; I have a List control to which the application keeps on adding strings
&gt; in
&gt;&gt; &gt; the order received. This works fine..But, I want the List contol to
&gt; scroll
&gt;&gt; &gt; to the newly string whenever the string is added...How can I do this
&gt; with
&gt;&gt; &gt; List Control...
&gt;&gt; &gt; thanks,
&gt;&gt; &gt; sck
&gt;&gt; &gt;
&gt;&gt; &gt;
&gt;&gt;
&gt;&gt;
&gt;
&gt;
Could you use List.showSelection() instead, providing that the item is 
selected?
Closing due to lack of activity.  No idea whether showSelection() could be used.</WithStack>
    <WithOutStack>Use a Table instead and use Table.showItem(TableItem).

List has setTopIndex which allows you to scroll, however, it is not exactly 
what you are looking for.  Enter a feature request for List.showItem(int).

"sck" &lt;Sri_Know@hotmail.com&gt; wrote in message 
news:d0lhqa$8of$1@www.eclipse.org...
&gt; Hello Mighty,
&gt; I tried it, and with this approach the added text is getting high lighted
&gt; besides scrolling down to this location..Is there a way to get this effect
&gt; without high-lighting it...
&gt; This question might be silly...;-) and there could be some simple work
&gt; around for it..
&gt;
&gt; Interestingly, there is List.getFocusIndex() and there is no
&gt; List.setFocusIndex().
&gt;
&gt; thanks,
&gt; Sridhar
&gt;
&gt; "Mighty M" &lt;fn2o-mycl@spamex.com&gt; wrote in message
&gt; news:d0lftu$13c$1@www.eclipse.org...
&gt;&gt; Did you try setting the selection?
&gt;&gt;
&gt;&gt; "sck" &lt;Sri_Know@hotmail.com&gt; wrote in message
&gt;&gt; news:d0lfg3$v3b$1@www.eclipse.org...
&gt;&gt; &gt; Hello All,
&gt;&gt; &gt; I have a List control to which the application keeps on adding strings
&gt; in
&gt;&gt; &gt; the order received. This works fine..But, I want the List contol to
&gt; scroll
&gt;&gt; &gt; to the newly string whenever the string is added...How can I do this
&gt; with
&gt;&gt; &gt; List Control...
&gt;&gt; &gt; thanks,
&gt;&gt; &gt; sck
&gt;&gt; &gt;
&gt;&gt; &gt;
&gt;&gt;
&gt;&gt;
&gt;
&gt;
Could you use List.showSelection() instead, providing that the item is 
selected?
Closing due to lack of activity.  No idea whether showSelection() could be used.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87545" />
    <CreationDate amount="2005-03-09 14:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Enhanced Option for compiler warnings/errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Would it be possible to enhance the "Field declaration hides another field or
variable" compiler warning/error option with the sub-option "Include private
fields from super classes"?  This would greatly aid when normalizing class
structures (ie/ when migrating common functionality/properties to super classes).
Interesting suggestion. Will defer for now.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Would it be possible to enhance the "Field declaration hides another field or
variable" compiler warning/error option with the sub-option "Include private
fields from super classes"?  This would greatly aid when normalizing class
structures (ie/ when migrating common functionality/properties to super classes).
Interesting suggestion. Will defer for now.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87546" />
    <CreationDate amount="2005-03-09 14:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Obsolete  debug MI settings in Preference  need to be removed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Automatically refesh registers option and Automatically refresh shared 
libraries option under Preference-&gt;C/C++-&gt;Debug-&gt; GDB MI need to be removed.
Fixed in the HEAD. 
James, please, verify.</WithStack>
    <WithOutStack>The Automatically refesh registers option and Automatically refresh shared 
libraries option under Preference-&gt;C/C++-&gt;Debug-&gt; GDB MI need to be removed.
Fixed in the HEAD. 
James, please, verify.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87547" />
    <CreationDate amount="2005-03-09 14:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist] Code assist unusable: SWTException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242286">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2850)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2773)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2744)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:393)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Control.internal_new_GC(Control.java:1100)</Frame>
          <Frame depth="6">org.eclipse.swt.graphics.GC.&lt;init&gt;(GC.java:127)</Frame>
          <Frame depth="7">org.eclipse.swt.graphics.GC.&lt;init&gt;(GC.java:94)</Frame>
          <Frame depth="8">org.eclipse.jface.text.AbstractInformationControlManager.computeSizeConstraints(AbstractInformationControlManager.java:519)</Frame>
          <Frame depth="9">org.eclipse.jface.text.contentassist.AdditionalInfoController.computeSizeConstraints(AdditionalInfoController.java:244)</Frame>
          <Frame depth="10">org.eclipse.jface.text.AbstractInformationControlManager.computeSizeConstraints(AbstractInformationControlManager.java:541)</Frame>
          <Frame depth="11">org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:830)</Frame>
          <Frame depth="12">org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:813)</Frame>
          <Frame depth="13">org.eclipse.jface.text.AbstractInformationControlManager.setInformation(AbstractInformationControlManager.java:284)</Frame>
          <Frame depth="14">org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformation(AdditionalInfoController.java:236)</Frame>
          <Frame depth="15">org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:797)</Frame>
          <Frame depth="16">org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:787)</Frame>
          <Frame depth="17">org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run(AdditionalInfoController.java:173)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2871)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2530)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="32">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.basicRun(Main.java:260)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.run(Main.java:887)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.main(Main.java:871)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20050308-1510
WinXP

Attempting to code assist is futile on this build.
The code assist popup window disappears without the chance to choose a 
proposal.

Log is full of:
org.eclipse.swt.SWTException: Widget is disposed
at org.eclipse.swt.SWT.error(SWT.java:2850)
at org.eclipse.swt.SWT.error(SWT.java:2773)
at org.eclipse.swt.SWT.error(SWT.java:2744)
at org.eclipse.swt.widgets.Widget.error(Widget.java:393)
at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:295)
at org.eclipse.swt.widgets.Control.internal_new_GC(Control.java:1100)
at org.eclipse.swt.graphics.GC.&lt;init&gt;(GC.java:127)
at org.eclipse.swt.graphics.GC.&lt;init&gt;(GC.java:94)
at 
org.eclipse.jface.text.AbstractInformationControlManager.computeSizeConstraints
(AbstractInformationControlManager.java:519)
at 
org.eclipse.jface.text.contentassist.AdditionalInfoController.computeSizeConstr
aints(AdditionalInfoController.java:244)
at 
org.eclipse.jface.text.AbstractInformationControlManager.computeSizeConstraints
(AbstractInformationControlManager.java:541)
at 
org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformatio
nControl(AbstractInformationControlManager.java:830)
at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation
(AbstractInformationControlManager.java:813)
at org.eclipse.jface.text.AbstractInformationControlManager.setInformation
(AbstractInformationControlManager.java:284)
at 
org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformatio
n(AdditionalInfoController.java:236)
at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation
(AbstractInformationControlManager.java:797)
at org.eclipse.jface.text.AbstractInformationControlManager.showInformation
(AbstractInformationControlManager.java:787)
at org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run
(AdditionalInfoController.java:173)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2871)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2530)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1514)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1478)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:297)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:228)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
at org.eclipse.core.launcher.Main.run(Main.java:887)
at org.eclipse.core.launcher.Main.main(Main.java:871)
Works for me in CU editor and code assist in Find/Replace dialog (WinXP and
Linux-GTK).

Please provide more detailed steps.

Did you install some tool or mouse driver on your box recently which might
affect focus behavior?
might be related to bug 87681
Darin, do you still see this? Any additional info?
No additional info. Only occurred on one machine. It was focus "changing"
related but I have no idea what caused it.</WithStack>
    <WithOutStack>I20050308-1510
WinXP

Attempting to code assist is futile on this build.
The code assist popup window disappears without the chance to choose a 
proposal.

Log is full of:

Works for me in CU editor and code assist in Find/Replace dialog (WinXP and
Linux-GTK).

Please provide more detailed steps.

Did you install some tool or mouse driver on your box recently which might
affect focus behavior?
might be related to bug 87681
Darin, do you still see this? Any additional info?
No additional info. Only occurred on one machine. It was focus "changing"
related but I have no idea what caused it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87548" />
    <CreationDate amount="2005-03-09 14:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DOM AST] IASTName interface lacks methods to determine if name is a declaration, a definition or a reference</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be really nice to have a way to query an IASTName instance if it is a
declaration, a definition or a reference. Without it clients will have to query
name's parent(s) and figure out what the name represents. Instead of clients
doing this, the information should be provided by the AST service.
Moving to M6.
Fix applied to HEAD.
This will get picked up in tomorrows M5 build candidate.  
Give it a try, the impl is mostly complete.  Pls raise bugs as they come up.
Thanks</WithStack>
    <WithOutStack>It would be really nice to have a way to query an IASTName instance if it is a
declaration, a definition or a reference. Without it clients will have to query
name's parent(s) and figure out what the name represents. Instead of clients
doing this, the information should be provided by the AST service.
Moving to M6.
Fix applied to HEAD.
This will get picked up in tomorrows M5 build candidate.  
Give it a try, the impl is mostly complete.  Pls raise bugs as they come up.
Thanks</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87549" />
    <CreationDate amount="2005-03-09 14:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Manifest Editor] Editor remains dirty after save</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>- create new plug-in project</Line>
          <Line>- check "create OSGi manifest file</Line>
          <Line>- hit OK</Line>
          <Line>- plug-in manifest editor opens</Line>
          <Line>- click on the "Build Configuration" link in the Deploying section of the</Line>
          <Line>Overview page</Line>
          <Line>- check the Custom Build checkbox</Line>
          <Line>- note that the editor is dirty</Line>
          <Line>- uncheck the checkbox</Line>
          <Line>- note that the editor is still dirty</Line>
          <Line>- go to the Runtime page</Line>
          <Line>- select the radio for "Do not activate this plug-in"</Line>
          <Line>- note the editor is dirty</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 3.0.1 RC2

- create new plug-in project
- check "create OSGi manifest file
- hit OK
- plug-in manifest editor opens
- click on the "Build Configuration" link in the Deploying section of the
Overview page
- check the Custom Build checkbox
- note that the editor is dirty
- uncheck the checkbox
- note that the editor is still dirty
- go to the Runtime page
- select the radio for "Do not activate this plug-in"
- note the editor is dirty

Now hit Ctrl+S to save.

Note that nothing happens. The editor remains dirty and if you try and close it,
it prompts you to save.

Nothing in my log file.
File -&gt; Save doesn't work either.
the problem exists in 3.0, 3.0.x and still in 3.1.

It is very specific to a scenario where we make the build editor dirty (check 
the checkbox) and then reverse it (uncheck it), ie. when we have a pending 
text operation in the build editor that is removed.

Considering the rarity of this scenario and the fact that saving is possible 
when the red x is clicked, it is not critical for 3.0.2.
We are dealing with a very sensitive area in the editor code here.
*** Bug 90097 has been marked as a duplicate of this bug. ***
*** Bug 93978 has been marked as a duplicate of this bug. ***
*** Bug 107701 has been marked as a duplicate of this bug. ***
Can this be considered for 3.3?
*** Bug 165462 has been marked as a duplicate of this bug. ***
*** Bug 175371 has been marked as a duplicate of this bug. ***
*** Bug 180108 has been marked as a duplicate of this bug. ***
*** Bug 173054 has been marked as a duplicate of this bug. ***
Mike, can you please address this one as we kick off Manifest Editor Theme Week (April 10-13)?
Fixed. Patch released to HEAD.

Target:  3.3 M7
Patch:   patch_87549_2007-04-10_14-13.txt

The problem was that various user editor actions yielded text edit operations 
that cancelled each other out.  This prevented the need to flush the underlying 
plug-in XML files input context and correctly clear the editor's dirty state; 
since, the model was already synchronized.

Verified this fix using all the different scenarios listed in this bug report
as duplicates.  Also verified this fix for a great number of other 
scenarios that could easily put the editor in a perpetual dirty state due to
this bug.
Thanks Mike.  A great way to kick off Manifest Editor Theme week.</WithStack>
    <WithOutStack>build 3.0.1 RC2

- create new plug-in project
- check "create OSGi manifest file
- hit OK
- plug-in manifest editor opens
- click on the "Build Configuration" link in the Deploying section of the
Overview page
- check the Custom Build checkbox
- note that the editor is dirty
- uncheck the checkbox
- note that the editor is still dirty
- go to the Runtime page
- select the radio for "Do not activate this plug-in"
- note the editor is dirty

Now hit Ctrl+S to save.

Note that nothing happens. The editor remains dirty and if you try and close it,
it prompts you to save.

Nothing in my log file.
File -&gt; Save doesn't work either.
the problem exists in 3.0, 3.0.x and still in 3.1.

It is very specific to a scenario where we make the build editor dirty (check 
the checkbox) and then reverse it (uncheck it), ie. when we have a pending 
text operation in the build editor that is removed.

Considering the rarity of this scenario and the fact that saving is possible 
when the red x is clicked, it is not critical for 3.0.2.
We are dealing with a very sensitive area in the editor code here.
*** Bug 90097 has been marked as a duplicate of this bug. ***
*** Bug 93978 has been marked as a duplicate of this bug. ***
*** Bug 107701 has been marked as a duplicate of this bug. ***
Can this be considered for 3.3?
*** Bug 165462 has been marked as a duplicate of this bug. ***
*** Bug 175371 has been marked as a duplicate of this bug. ***
*** Bug 180108 has been marked as a duplicate of this bug. ***
*** Bug 173054 has been marked as a duplicate of this bug. ***
Mike, can you please address this one as we kick off Manifest Editor Theme Week (April 10-13)?
Fixed. Patch released to HEAD.

Target:  3.3 M7
Patch:   patch_87549_2007-04-10_14-13.txt

The problem was that various user editor actions yielded text edit operations 
that cancelled each other out.  This prevented the need to flush the underlying 
plug-in XML files input context and correctly clear the editor's dirty state; 
since, the model was already synchronized.

Verified this fix using all the different scenarios listed in this bug report
as duplicates.  Also verified this fix for a great number of other 
scenarios that could easily put the editor in a perpetual dirty state due to
this bug.
Thanks Mike.  A great way to kick off Manifest Editor Theme week.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87550" />
    <CreationDate amount="2005-03-09 14:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] [compiler] The method in the type is not applicable for the arguments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="import">
        <location start="84" end="111" />
        <code>import java.util.ArrayList;</code>
      </source_code>
      <source_code type="import">
        <location start="112" end="140" />
        <code>import java.util.Collection;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="257" end="353" />
        <code>public final void thing(U arg) {
   // thing is underlined below
   Class1.thing(this, arg);
 }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="356" end="449" />
        <code>public static final &lt;X,Y&gt; void thing
   (Collection&lt;? extends Intf1&lt;X,Y&gt;&gt; arg1, Y arg2) {
 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Version: 3.1.0
Build id: I20050308-0835

Given the code below: 
*******************
import java.util.ArrayList;
import java.util.Collection;

interface Intf1&lt;P,Q&gt; {}

class Class1&lt;T,U,V extends Class1&lt;T,U,V&gt;&gt;
 extends ArrayList&lt;V&gt;
 implements Intf1&lt;T,U&gt; {

 public final void thing(U arg) {
   // thing is underlined below
   Class1.thing(this, arg);
 }
	
 public static final &lt;X,Y&gt; void thing
   (Collection&lt;? extends Intf1&lt;X,Y&gt;&gt; arg1, Y arg2) {
 }
}
	
*******************

Javac does not complain.

Eclipse complains with the statement:
The method thing(Object) in the type Class1 is not applicable for the arguments
(Class1&lt;T,U,V&gt;, U)
Added GenericTypeTest#test562-564.
Problem comes from '? extends Intf1&lt;X,Y&gt;' not tagged as holding type variables,
and thus optimizing out some of the type inference.

Fixed
Verified on build I20050527-0010.</WithStack>
    <WithOutStack>Version: 3.1.0
Build id: I20050308-0835

Given the code below: 
*******************
import java.util.ArrayList;
import java.util.Collection;

interface Intf1&lt;P,Q&gt; {}

class Class1&lt;T,U,V extends Class1&lt;T,U,V&gt;&gt;
 extends ArrayList&lt;V&gt;
 implements Intf1&lt;T,U&gt; {

 public final void thing(U arg) {
   // thing is underlined below
   Class1.thing(this, arg);
 }
	
 public static final &lt;X,Y&gt; void thing
   (Collection&lt;? extends Intf1&lt;X,Y&gt;&gt; arg1, Y arg2) {
 }
}
	
*******************

Javac does not complain.

Eclipse complains with the statement:
The method thing(Object) in the type Class1 is not applicable for the arguments
(Class1&lt;T,U,V&gt;, U)
Added GenericTypeTest#test562-564.
Problem comes from '? extends Intf1&lt;X,Y&gt;' not tagged as holding type variables,
and thus optimizing out some of the type inference.

Fixed
Verified on build I20050527-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87551" />
    <CreationDate amount="2005-03-09 14:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[quick fix] Enhancement Request: Invert boolean field or variable refactoring</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="480" end="521" />
        <code>void callsFooBar() {
    fooBar(false);
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="523" end="642" />
        <code>void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="717" end="805" />
        <code>void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="807" end="1149" />
        <code>void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have inherited code that has boolean variable and field names like dontConnect which means dont 
allow connections.  Then you will see references in the code that say if (!dontConnect).  It's akward to 
think about and more akward to talk with someone about.

I'd like a refactor implementation that would invert the sense of the boolean and rename it.  It should 
work on simple variables, fields, and parameters.

An example for a parameter Invert Boolean refactor:

before:

void callsFooBar() {
    fooBar(false);
}

void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}

after invert boolean refactoring fooBar parameter dontBaz -&gt; allowBaz):

void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}

void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}
Move to JDT/UI
*** Bug 87552 has been marked as a duplicate of this bug. ***
No for 3.1.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I have inherited code that has boolean variable and field names like dontConnect which means dont 
allow connections.  Then you will see references in the code that say if (!dontConnect).  It's akward to 
think about and more akward to talk with someone about.

I'd like a refactor implementation that would invert the sense of the boolean and rename it.  It should 
work on simple variables, fields, and parameters.

An example for a parameter Invert Boolean refactor:

before:

void callsFooBar() {
    fooBar(false);
}

void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}

after invert boolean refactoring fooBar parameter dontBaz -&gt; allowBaz):

void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}

void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}
Move to JDT/UI
*** Bug 87552 has been marked as a duplicate of this bug. ***
No for 3.1.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87552" />
    <CreationDate amount="2005-03-09 14:41:00 -0500" />
    <DupId amount="87551" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Enhancement Request: Invert boolean field or variable refactoring</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="480" end="521" />
        <code>void callsFooBar() {
    fooBar(false);
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="523" end="642" />
        <code>void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="717" end="805" />
        <code>void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="807" end="1149" />
        <code>void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have inherited code that has boolean variable and field names like dontConnect which means dont 
allow connections.  Then you will see references in the code that say if (!dontConnect).  It's akward to 
think about and more akward to talk with someone about.

I'd like a refactor implementation that would invert the sense of the boolean and rename it.  It should 
work on simple variables, fields, and parameters.

An example for a parameter Invert Boolean refactor:

before:

void callsFooBar() {
    fooBar(false);
}

void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}

after invert boolean refactoring fooBar parameter dontBaz -&gt; allowBaz):

void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}

void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}


*** This bug has been marked as a duplicate of 87551 ***</WithStack>
    <WithOutStack>I have inherited code that has boolean variable and field names like dontConnect which means dont 
allow connections.  Then you will see references in the code that say if (!dontConnect).  It's akward to 
think about and more akward to talk with someone about.

I'd like a refactor implementation that would invert the sense of the boolean and rename it.  It should 
work on simple variables, fields, and parameters.

An example for a parameter Invert Boolean refactor:

before:

void callsFooBar() {
    fooBar(false);
}

void fooBar(boolean dontBaz) {
    fieldBaz = !dontBaz;
    froBar(dontBaz);
    dontBaz = true;
    froBar(dontBaz);
}

after invert boolean refactoring fooBar parameter dontBaz -&gt; allowBaz):

void callsFooBar(boolean dontBaz) {
    fooBar(!dontBaz);     // notice inverted param
}

void fooBar(boolean allowBaz) {   // renamed parameter
    fieldBaz = allowBaz;                // inverted and renamed
    froBar(!allowBaz);                     // inverted and renamed
    allowBaz = false;                     // renamed and inverted rvalue for assignment
    froBar(!allowBaz);                     // inverted and renamed
}


*** This bug has been marked as a duplicate of 87551 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87553" />
    <CreationDate amount="2005-03-09 14:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No navigation from ant antfile attribute</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>&lt;ant antfile="debugEcho.xml"&gt;&lt;/ant&gt;

No navigation is provided for the debugEcho.xml reference
Fixed.
Created AntAntNode to represent the Ant task in the buildfile
AntModel: uses new node and moved the label code to the new class
Please verify Kevin.
verified</WithStack>
    <WithOutStack>&lt;ant antfile="debugEcho.xml"&gt;&lt;/ant&gt;

No navigation is provided for the debugEcho.xml reference
Fixed.
Created AntAntNode to represent the Ant task in the buildfile
AntModel: uses new node and moved the label code to the new class
Please verify Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87554" />
    <CreationDate amount="2005-03-09 14:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need bounding rectangle for a Path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Paths are going to be pretty inefficient if you don't know how large they 
are.  You would have to repaint the entire control any time a path is 
updated/erased/added.
SQ - Mais um :-).
Fixed &gt; 20050322.

Note that the API signature might still change. Right now it takes a float 
array the represents a rectangle. We might need a new rectangle class that 
store floats...
I would settle for the smallest integer Rectangle which contains the path.</WithStack>
    <WithOutStack>Paths are going to be pretty inefficient if you don't know how large they 
are.  You would have to repaint the entire control any time a path is 
updated/erased/added.
SQ - Mais um :-).
Fixed &gt; 20050322.

Note that the API signature might still change. Right now it takes a float 
array the represents a rectangle. We might need a new rectangle class that 
store floats...
I would settle for the smallest integer Rectangle which contains the path.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87555" />
    <CreationDate amount="2005-03-09 15:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.UI" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>profile option to auto collect object reference before agent/process terminate</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Based on user feedback from EclipseCon2005:
Currently in latest TPTP4.0, user needs to manually call via button/context to
collect object reference. However, there is no way for user to make a object
reference collection right before an agent terminate, or before a process complete. 
User are looking for option to either automatically enable object reference
collection in each 'refresh' or before a process is terminated.
Not a valid scenario to support. Collecting object reference for memory leak
before a JVM terminated is not a valid scnario
close feature
update target to track bug closing activity</WithStack>
    <WithOutStack>Based on user feedback from EclipseCon2005:
Currently in latest TPTP4.0, user needs to manually call via button/context to
collect object reference. However, there is no way for user to make a object
reference collection right before an agent terminate, or before a process complete. 
User are looking for option to either automatically enable object reference
collection in each 'refresh' or before a process is terminated.
Not a valid scenario to support. Collecting object reference for memory leak
before a JVM terminated is not a valid scnario
close feature
update target to track bug closing activity</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87556" />
    <CreationDate amount="2005-03-09 15:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Post-mortem debug fails silently if core file is inaccessible.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In post-mortem debugging, if the specified core file is not accessible, no error
message is displayed and a gdb process is left running.
Created attachment 18605
New message strings.
Created attachment 18606
CoreFileLaunchDelegate.java patch
Created attachment 18607
CoreFilePrompter.java patch
Applied.
assigning
done</WithStack>
    <WithOutStack>In post-mortem debugging, if the specified core file is not accessible, no error
message is displayed and a gdb process is left running.
Created attachment 18605
New message strings.
Created attachment 18606
CoreFileLaunchDelegate.java patch
Created attachment 18607
CoreFilePrompter.java patch
Applied.
assigning
done</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87557" />
    <CreationDate amount="2005-03-09 15:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Editor fails to open - throws NPEs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="660" end="681" />
        <code>initializeViewers();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I'm not what causes this but it happens quite often, randomly, just opening the
editor. Doesn't seem to matter whether it's Swing or SWT app.
Attached is the stack trace
Created attachment 18604
.log containing stack trace info
The problem is a race condition that occurs when setup is not complete which is
running in the background but the model root exists although the target vm is
not completely there yet. So the initviewers is trying to execute when the model
root is in a not ready state cause the bean instantiation failure.

Fixed this by adding the following check in createGraphicalViewer
  if (setupJob != null &amp;&amp; setupJob.getState() == Job.NONE)
	initializeViewers();

Released to HEAD (VE 1.1)
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>I'm not what causes this but it happens quite often, randomly, just opening the
editor. Doesn't seem to matter whether it's Swing or SWT app.
Attached is the stack trace
Created attachment 18604
.log containing stack trace info
The problem is a race condition that occurs when setup is not complete which is
running in the background but the model root exists although the target vm is
not completely there yet. So the initviewers is trying to execute when the model
root is in a not ready state cause the bean instantiation failure.

Fixed this by adding the following check in createGraphicalViewer
  if (setupJob != null &amp;&amp; setupJob.getState() == Job.NONE)
	initializeViewers();

Released to HEAD (VE 1.1)
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87558" />
    <CreationDate amount="2005-03-09 15:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DOM AST] IASTName interface lacks a method to get a fully qualified name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="94" end="135" />
        <code>public String[] getFullyQualifiedName();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="136" end="187" />
        <code>public char[][] getFullyQualifiedNameCharArrays();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>IASTName interface lacks methods that were present in old
IASTQualifiedNameElement interface:
	public String[] getFullyQualifiedName();
	public char[][] getFullyQualifiedNameCharArrays();
This kind of interface needs to go on the binding, not on the IASTName
Lies!
This will fail for namespace aliases and the like!
hmmm.. yes, so on IASTName, but it would still need to resolve the binding to
get the scope segements of the name
Thinking about this I like it better on the IBinding.

I think we need to create new kind of delegation/shadow Binding type for
namespace aliases and using declarations.  This would allow these things that
are kind of the same binding but not really to distinguish themselves as necessary.
Done.
See ICPPBinding#getQualifiedName &amp; getQualifiedNameCharArray
and 
ICPPBinding#isGloballyQualified

complications with using declarations and namespace aliases were resolved with
new ICPPUsingDeclaration and ICPPNamespaceAlias bindings</WithStack>
    <WithOutStack>IASTName interface lacks methods that were present in old
IASTQualifiedNameElement interface:
	public String[] getFullyQualifiedName();
	public char[][] getFullyQualifiedNameCharArrays();
This kind of interface needs to go on the binding, not on the IASTName
Lies!
This will fail for namespace aliases and the like!
hmmm.. yes, so on IASTName, but it would still need to resolve the binding to
get the scope segements of the name
Thinking about this I like it better on the IBinding.

I think we need to create new kind of delegation/shadow Binding type for
namespace aliases and using declarations.  This would allow these things that
are kind of the same binding but not really to distinguish themselves as necessary.
Done.
See ICPPBinding#getQualifiedName &amp; getQualifiedNameCharArray
and 
ICPPBinding#isGloballyQualified

complications with using declarations and namespace aliases were resolved with
new ICPPUsingDeclaration and ICPPNamespaceAlias bindings</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87559" />
    <CreationDate amount="2005-03-09 15:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in TableItem.getText using control example</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242296">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.swt.widgets.TableItem.getText(TableItem.java:527)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.TableItem.getText(TableItem.java:502)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Item.getNameText(Item.java:119)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.toString(Widget.java:1147)</Frame>
          <Frame depth="4">java.lang.String.valueOf(String.java:2177)</Frame>
          <Frame depth="5">java.lang.StringBuffer.append(StringBuffer.java:361)</Frame>
          <Frame depth="6">org.eclipse.swt.events.TypedEvent.toString(TypedEvent.java:96)</Frame>
          <Frame depth="7">org.eclipse.swt.examples.controlexample.Tab.log(Tab.java:738)</Frame>
          <Frame depth="8">org.eclipse.swt.examples.controlexample.Tab$21.handleEvent(Tab.java:711)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="1396" end="1447" />
        <code>toString += new DisposeEvent (event).toString ();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1448" end="1693" />
        <code>} catch (Exception e) {
		String string = event.widget.getClass ().getName ();
		int index = string.lastIndexOf ('.');
		if (index != -1) string = string.substring (index + 1, 
string.length ());
		toString += "DisposeEvent{" + string + "}";
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2244" end="2535" />
        <code>String getNameText () {
	String result = "";
	MenuItem [] items = getItems ();
	int length = items.length;
	if (length &gt; 0) {
		for (int i=0; i&lt;length-1; i++) {
			result = result + items [i].getNameText() + ", ";
		}
		result = result + items [length-1].getNameText ();
	}
	return result;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Run the control example as a view</Line>
          <Line>2. Switch to the Table tab</Line>
          <Line>3. Turn on columns</Line>
          <Line>4. Turn on the listeners</Line>
          <Line>5. Close eclipse</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M200502161722

!ENTRY org.eclipse.ui 4 0 Mar 09, 2005 16:00:44.319
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
        at org.eclipse.swt.widgets.TableItem.getText(TableItem.java:527)
        at org.eclipse.swt.widgets.TableItem.getText(TableItem.java:502)
        at org.eclipse.swt.widgets.Item.getNameText(Item.java:119)
        at org.eclipse.swt.widgets.Widget.toString(Widget.java:1147)
        at java.lang.String.valueOf(String.java:2177)
        at java.lang.StringBuffer.append(StringBuffer.java:361)
        at org.eclipse.swt.events.TypedEvent.toString(TypedEvent.java:96)
        at org.eclipse.swt.examples.controlexample.Tab.log(Tab.java:738)
        at org.eclipse.swt.examples.controlexample.Tab$21.handleEvent(Tab.java:711)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)


Full log attached.
Created attachment 18608
log
What are the steps to recreate?
Billy, is this a serious problem in 3.0.1?  What did you do to make it happen?
To make it happen, you can do the following:

  1. Run the control example as a view
  2. Switch to the Table tab
  3. Turn on columns
  4. Turn on the listeners
  5. Close eclipse

What is happening is that the control example is asking for the text of an item
in the item's dispose listener.  This requires some information from the
columns, but the columns have already been disposed.

This is really a case of bug 4416 (and therefore I do not think we need to fix
for 3.0.2), but protecting against this particular NPE is  not hard: Veronika
points out that we could dispose the columns after the items (which seems to
make more sense anyway).  SN?
Veronika, is the NPE gone?  If so close the bug (I know the deeper dispose 
issue is still outstanding).
Fixed for 3.1.

Also note, the ControlExample has changed so that the logging of the dispose 
event catches exceptions - I think this is a mistake.  We should fix the 
problem of the widgets that are badly disposed before the dispose event is 
processed instead.  Catching the exception just masks the problem.

See Tab.log(event):

case SWT.Dispose: {
	try {
		toString += new DisposeEvent (event).toString ();
	} catch (Exception e) {
		String string = event.widget.getClass ().getName ();
		int index = string.lastIndexOf ('.');
		if (index != -1) string = string.substring (index + 1, 
string.length ());
		toString += "DisposeEvent{" + string + "}";
	}
	break;
}
CAR, please change this back or at least print a warning.
I added the check because when I added MenuTab, there was an exception in 
Menu.toString() when the little menu shell was closed. This is because the 
MenuItems are all disposed first (and set to null in the Menu's items array), 
and then the Menu gets a dispose event and it is asked to print itself... and 
it tries to print its items...

Looking into it further, perhaps it makes more sense to change getNameText() 
in Menu to protect against this case. Currently, the code is:

String getNameText () {
	String result = "";
	MenuItem [] items = getItems ();
	int length = items.length;
	if (length &gt; 0) {
		for (int i=0; i&lt;length-1; i++) {
			result = result + items [i].getNameText() + ", ";
		}
		result = result + items [length-1].getNameText ();
	}
	return result;
}


Note that items [i] are null, so there should be a null check for the lines 
with items [i] and items [length-1]. Agree?
I think the null check in Menu.getNameText makes sense.
Added null checks to Menu.getNameText so that Menu does not NPE when toString 
is called in dispose.

Reverted Tab.log back to previous behavior, i.e. it no longer catches 
Exception - it just assumes that the toString is ok.

Marking this bug fixed.</WithStack>
    <WithOutStack>M200502161722

!ENTRY org.eclipse.ui 4 0 Mar 09, 2005 16:00:44.319
!MESSAGE java.lang.NullPointerException
!STACK 0



Full log attached.
Created attachment 18608
log
What are the steps to recreate?
Billy, is this a serious problem in 3.0.1?  What did you do to make it happen?
To make it happen, you can do the following:

  1. Run the control example as a view
  2. Switch to the Table tab
  3. Turn on columns
  4. Turn on the listeners
  5. Close eclipse

What is happening is that the control example is asking for the text of an item
in the item's dispose listener.  This requires some information from the
columns, but the columns have already been disposed.

This is really a case of bug 4416 (and therefore I do not think we need to fix
for 3.0.2), but protecting against this particular NPE is  not hard: Veronika
points out that we could dispose the columns after the items (which seems to
make more sense anyway).  SN?
Veronika, is the NPE gone?  If so close the bug (I know the deeper dispose 
issue is still outstanding).
Fixed for 3.1.

Also note, the ControlExample has changed so that the logging of the dispose 
event catches exceptions - I think this is a mistake.  We should fix the 
problem of the widgets that are badly disposed before the dispose event is 
processed instead.  Catching the exception just masks the problem.

See Tab.log(event):

case SWT.Dispose: {
	try {
		toString += new DisposeEvent (event).toString ();
	} catch (Exception e) {
		String string = event.widget.getClass ().getName ();
		int index = string.lastIndexOf ('.');
		if (index != -1) string = string.substring (index + 1, 
string.length ());
		toString += "DisposeEvent{" + string + "}";
	}
	break;
}
CAR, please change this back or at least print a warning.
I added the check because when I added MenuTab, there was an exception in 
Menu.toString() when the little menu shell was closed. This is because the 
MenuItems are all disposed first (and set to null in the Menu's items array), 
and then the Menu gets a dispose event and it is asked to print itself... and 
it tries to print its items...

Looking into it further, perhaps it makes more sense to change getNameText() 
in Menu to protect against this case. Currently, the code is:

String getNameText () {
	String result = "";
	MenuItem [] items = getItems ();
	int length = items.length;
	if (length &gt; 0) {
		for (int i=0; i&lt;length-1; i++) {
			result = result + items [i].getNameText() + ", ";
		}
		result = result + items [length-1].getNameText ();
	}
	return result;
}


Note that items [i] are null, so there should be a null check for the lines 
with items [i] and items [length-1]. Agree?
I think the null check in Menu.getNameText makes sense.
Added null checks to Menu.getNameText so that Menu does not NPE when toString 
is called in dispose.

Reverted Tab.log back to previous behavior, i.e. it no longer catches 
Exception - it just assumes that the toString is ok.

Marking this bug fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87560" />
    <CreationDate amount="2005-03-09 15:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>out of sync message could be presented in the console</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Eclipse 3.0.1

When developing with a JRE that supports hot code replace and something 
goes "wrong" with the code replace we get a message in the Debug view 
indicating that the program you're running may be out of sync with the source 
code you just edited.

I usually do a lot of HCR and I find myself going too often to the Debug 
perspective just to check if it is out of sync. Most of the time I have the 
console in my Java perspective and it would be great if this "out of sync" 
message could also be indicated in that console sub-title area.
if you have the preference 'Show error when obsolete methods remain after hot
code replace' set in window&gt;preferences&gt;Java&gt;Debug, you should get an info
dialog every time HCR fails.
Deferred
Do not intend to add console message.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Eclipse 3.0.1

When developing with a JRE that supports hot code replace and something 
goes "wrong" with the code replace we get a message in the Debug view 
indicating that the program you're running may be out of sync with the source 
code you just edited.

I usually do a lot of HCR and I find myself going too often to the Debug 
perspective just to check if it is out of sync. Most of the time I have the 
console in my Java perspective and it would be great if this "out of sync" 
message could also be indicated in that console sub-title area.
if you have the preference 'Show error when obsolete methods remain after hot
code replace' set in window&gt;preferences&gt;Java&gt;Debug, you should get an info
dialog every time HCR fails.
Deferred
Do not intend to add console message.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87561" />
    <CreationDate amount="2005-03-09 15:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Shouldn't prompt to export an empty log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>- open the Error Log View</Line>
          <Line>- note that it is empty</Line>
          <Line>- click on the Export Log icon</Line>
          <Line>- it shows you a file prompt</Line>
          <Line>- select a file and hit OK</Line>
          <Line>- nothing is exported</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- the icon to be greyed when the log is empty</Line>
          <Line>- pressing the icon resulting in a dialog saying that there is nothing to export</Line>
          <Line>Fixed and released to head :)</Line>
          <Line>well, look who's kicking back with defects on Easter Sunday :-)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 3.0.2 RC2

- open the Error Log View
- note that it is empty
- click on the Export Log icon
- it shows you a file prompt
- select a file and hit OK
- nothing is exported

I would expect either:
- the icon to be greyed when the log is empty
- pressing the icon resulting in a dialog saying that there is nothing to export
Fixed and released to head :)
well, look who's kicking back with defects on Easter Sunday :-)</WithStack>
    <WithOutStack>build 3.0.2 RC2

- open the Error Log View
- note that it is empty
- click on the Export Log icon
- it shows you a file prompt
- select a file and hit OK
- nothing is exported

I would expect either:
- the icon to be greyed when the log is empty
- pressing the icon resulting in a dialog saying that there is nothing to export
Fixed and released to head :)
well, look who's kicking back with defects on Easter Sunday :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87562" />
    <CreationDate amount="2005-03-09 15:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>PDE could generate jnlp file from product description</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Support for JNLP has been added in M5. It generates a JNLP files mapping
existing features.
It we want to be really slick, we need to be able to generate the main JNLP file
from the information available in the product description.
could you attach a sample?
Created attachment 18628
sample jnlp file

this is a sample top-level jnlp file.  It points to another jnlp which is
directly generated from a feature (and which happens to then point to still
more jnlp files).  The information here is really an aggregate of config.ini
and launcher.ini information.

We (Pascal or I) should be able to create a generator for you to use.
I was trying to get community involvement here.
Even if we do it, the code would have to leave in PDE UI/Core since the product
model is there.
No one has shown any interest in working on this.  Closing as WONTFIX.</WithStack>
    <WithOutStack>Support for JNLP has been added in M5. It generates a JNLP files mapping
existing features.
It we want to be really slick, we need to be able to generate the main JNLP file
from the information available in the product description.
could you attach a sample?
Created attachment 18628
sample jnlp file

this is a sample top-level jnlp file.  It points to another jnlp which is
directly generated from a feature (and which happens to then point to still
more jnlp files).  The information here is really an aggregate of config.ini
and launcher.ini information.

We (Pascal or I) should be able to create a generator for you to use.
I was trying to get community involvement here.
Even if we do it, the code would have to leave in PDE UI/Core since the product
model is there.
No one has shown any interest in working on this.  Closing as WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87563" />
    <CreationDate amount="2005-03-09 16:01:00 -0500" />
    <DupId amount="85233" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>plugin.properties file cached on inner eclipse launches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When trying to modifiy the contents of my plugin.properties file in between
launches of a runtime workspace I found that the contents of that file were
being cached somewhere and could not be reset unless I specified the -clean
option on the command line.  It seems like -clean should be the default for
runtime workspace.
Unfortunately that does not scale for large products because -clean will also
delete the manifests.
For further discussion see the duplicate.

*** This bug has been marked as a duplicate of 85233 ***
When you say it does not scale, we are talking about the phase where you are
debugging your code and the application NOT the phase where you are running it.
 I suppose even a type of builder that listened to changes to plugin.properties
and plugin.xml files in the workbench could force the -clean only when needed.

I will take a look at bug 85233
The scaling point comes to play when you have large targets (e.g., 1000+ 
plugins).  Cleaning on launch can then take several minutes as the launched 
runtime has to regenerate all the manifests and reload the registry.  The move 
to using manifest.mf in all plugins will help this tremendously but of course 
the improvement is proportional to the number of plugins in the target that are 
converted.</WithStack>
    <WithOutStack>When trying to modifiy the contents of my plugin.properties file in between
launches of a runtime workspace I found that the contents of that file were
being cached somewhere and could not be reset unless I specified the -clean
option on the command line.  It seems like -clean should be the default for
runtime workspace.
Unfortunately that does not scale for large products because -clean will also
delete the manifests.
For further discussion see the duplicate.

*** This bug has been marked as a duplicate of 85233 ***
When you say it does not scale, we are talking about the phase where you are
debugging your code and the application NOT the phase where you are running it.
 I suppose even a type of builder that listened to changes to plugin.properties
and plugin.xml files in the workbench could force the -clean only when needed.

I will take a look at bug 85233
The scaling point comes to play when you have large targets (e.g., 1000+ 
plugins).  Cleaning on launch can then take several minutes as the launched 
runtime has to regenerate all the manifests and reload the registry.  The move 
to using manifest.mf in all plugins will help this tremendously but of course 
the improvement is proportional to the number of plugins in the target that are 
converted.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87564" />
    <CreationDate amount="2005-03-09 16:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Splash needs updated dates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When testing 3.0.2 RC2 I noticed that the splash screen had the copyright dates
as 2000, 2005.

Starting build i0308-1510 shows me a splash with dates 2000, 2004. They should
be updated as well.
Adding Jim to cc
Linda,  Would you be able to provide us with an updated Eclipse 3.1 splace 
screen?
yes will prepare, aiming for next week.
I think this bug can be closed.
Closing as FIXED since this has been done a long time ago.</WithStack>
    <WithOutStack>When testing 3.0.2 RC2 I noticed that the splash screen had the copyright dates
as 2000, 2005.

Starting build i0308-1510 shows me a splash with dates 2000, 2004. They should
be updated as well.
Adding Jim to cc
Linda,  Would you be able to provide us with an updated Eclipse 3.1 splace 
screen?
yes will prepare, aiming for next week.
I think this bug can be closed.
Closing as FIXED since this has been done a long time ago.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87565" />
    <CreationDate amount="2005-03-09 16:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][annot] Code assist doesn't work for initializer of annotation members</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="12">
      <source_code type="import">
        <location start="65" end="106" />
        <code>import java.lang.annotation.ElementType;</code>
      </source_code>
      <source_code type="import">
        <location start="107" end="145" />
        <code>import java.lang.annotation.Retention;</code>
      </source_code>
      <source_code type="import">
        <location start="146" end="190" />
        <code>import java.lang.annotation.RetentionPolicy;</code>
      </source_code>
      <source_code type="import">
        <location start="191" end="226" />
        <code>import java.lang.annotation.Target;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="381" end="391" />
        <code>int id();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="392" end="424" />
        <code>Class c() default Object.class;</code>
      </source_code>
      <source_code type="import">
        <location start="448" end="488" />
        <code>import java.lang.annotation.ElementType;</code>
      </source_code>
      <source_code type="import">
        <location start="489" end="527" />
        <code>import java.lang.annotation.Retention;</code>
      </source_code>
      <source_code type="import">
        <location start="528" end="572" />
        <code>import java.lang.annotation.RetentionPolicy;</code>
      </source_code>
      <source_code type="import">
        <location start="573" end="608" />
        <code>import java.lang.annotation.Target;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="705" end="715" />
        <code>int id();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="716" end="748" />
        <code>Class c() default Object.class;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using latest, try to use code assist at the different locations:

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(value=RetentionPolicy.SOURCE)
@Target({&lt;code assist here&gt; El&lt;code assist here&gt;ementType.TYPE,
ElementType.PACKAGE})
public @interface Annot {
	int id();
	Class c() default Object.class;
}

Also when you have:
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(value=RetentionPolicy.SOURCE)
@Target(&lt;code assist here&gt;)
public @interface Annot {
	int id();
	Class c() default Object.class;
}

give only value, then after adding a '=', there is no more completions.

I would expect to be able to code assist on type names inside a member pair value.
*** Bug 105689 has been marked as a duplicate of this bug. ***
I'm just voting for this issue running into similar problem of content assist not working when doing something like:

@Target({ElementType.PARAMETER, ElementType.FIELD})

Content assis works fine when completing ElementType.PARAMETER but no more content assist after the comma for ElementType.FIELD.

Mike
I do not reproduce the problem with build I20080409-1425.
The problem is fixed in a previous build.

I close this bug as WORKSFORME.
Verified for 3.4 M7 - this issue was fixed in a previous build.</WithStack>
    <WithOutStack>Using latest, try to use code assist at the different locations:

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(value=RetentionPolicy.SOURCE)
@Target({&lt;code assist here&gt; El&lt;code assist here&gt;ementType.TYPE,
ElementType.PACKAGE})
public @interface Annot {
	int id();
	Class c() default Object.class;
}

Also when you have:
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(value=RetentionPolicy.SOURCE)
@Target(&lt;code assist here&gt;)
public @interface Annot {
	int id();
	Class c() default Object.class;
}

give only value, then after adding a '=', there is no more completions.

I would expect to be able to code assist on type names inside a member pair value.
*** Bug 105689 has been marked as a duplicate of this bug. ***
I'm just voting for this issue running into similar problem of content assist not working when doing something like:

@Target({ElementType.PARAMETER, ElementType.FIELD})

Content assis works fine when completing ElementType.PARAMETER but no more content assist after the comma for ElementType.FIELD.

Mike
I do not reproduce the problem with build I20080409-1425.
The problem is fixed in a previous build.

I close this bug as WORKSFORME.
Verified for 3.4 M7 - this issue was fixed in a previous build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87566" />
    <CreationDate amount="2005-03-09 16:18:00 -0500" />
    <DupId amount="77928" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The platform crashes if I try to open CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="92">
        <Lines>
          <Line>- locked &lt;0x48baccb0&gt; (a java.lang.Class)</Line>
          <Line>at org.eclipse.swt.widgets.Display.eventProc(Display.java:879)</Line>
          <Line>at org.eclipse.swt.internal.gtk.OS.gtk_adjustment_value_changed(Native Method)</Line>
          <Line>- locked &lt;0x48baccb0&gt; (a java.lang.Class)</Line>
          <Line>at org.eclipse.swt.widgets.ScrollBar.setValues(ScrollBar.java:653)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.setScrollBars(StyledText.java:7022)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:5116)</Line>
          <Line>at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4753)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)</Line>
          <Line>at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)</Line>
          <Line>at org.eclipse.swt.widgets.Canvas.setBounds(Canvas.java:240)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)</Line>
          <Line>at org.eclipse.swt.custom.SashForm.layout(SashForm.java:278)</Line>
          <Line>at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)</Line>
          <Line>at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)</Line>
          <Line>at org.eclipse.swt.custom.SashForm.layout(SashForm.java:296)</Line>
          <Line>at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)</Line>
          <Line>at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)</Line>
          <Line>at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)</Line>
          <Line>at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)</Line>
          <Line>at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)</Line>
          <Line>at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)</Line>
          <Line>at org.eclipse.swt.widgets.Control.setBounds(Control.java:433)</Line>
          <Line>at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:290)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:115)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.presentations.DefaultPartPresentation.layout(DefaultPartPresentation.java:723)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.presentations.DefaultPartPresentation.setBounds(DefaultPartPresentation.java:1166)</Line>
          <Line>at org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:907)</Line>
          <Line>at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:190)</Line>
          <Line>at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)</Line>
          <Line>at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)</Line>
          <Line>at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:296)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.PartSashContainer.resizeSashes(PartSashContainer.java:646)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:439)</Line>
          <Line>at org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:155)</Line>
          <Line>at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:722)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2775)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:744)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:729)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2918)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2916)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.ChangeToPerspectiveMenu.run(ChangeToPerspectiveMenu.java:87)</Line>
          <Line>at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:303)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.actions.PerspectiveMenu$3.widgetSelected(PerspectiveMenu.java:119)</Line>
          <Line>at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)</Line>
          <Line>at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Line>
          <Line>at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Line>
          <Line>at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at</Line>
          <Line>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:183)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:644)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:628)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Here is the log:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x4DA9F172
Function=XSetTile+0x12
Library=/usr/X11R6/lib/libX11.so.6

Current Java thread:
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
	- locked &lt;0x48baccb0&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:879)
	at org.eclipse.swt.internal.gtk.OS.gtk_adjustment_value_changed(Native Method)
	- locked &lt;0x48baccb0&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.ScrollBar.setValues(ScrollBar.java:653)
	at org.eclipse.swt.custom.StyledText.setScrollBars(StyledText.java:7022)
	at org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:5116)
	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4753)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Canvas.setBounds(Canvas.java:240)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.custom.SashForm.layout(SashForm.java:278)
	at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.custom.SashForm.layout(SashForm.java:296)
	at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:433)
	at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:290)
	at
org.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:115)
	at
org.eclipse.ui.internal.presentations.DefaultPartPresentation.layout(DefaultPartPresentation.java:723)
	at
org.eclipse.ui.internal.presentations.DefaultPartPresentation.setBounds(DefaultPartPresentation.java:1166)
	at org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:907)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:190)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:296)
	at
org.eclipse.ui.internal.PartSashContainer.resizeSashes(PartSashContainer.java:646)
	at
org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:439)
	at org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:155)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:722)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2775)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:744)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:729)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2916)
	at
org.eclipse.ui.internal.ChangeToPerspectiveMenu.run(ChangeToPerspectiveMenu.java:87)
	at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:303)
	at
org.eclipse.ui.actions.PerspectiveMenu$3.widgetSelected(PerspectiveMenu.java:119)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
08048000-08056000 r-xp 00000000 03:06 44167     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/bin/java
08056000-08059000 rwxp 0000d000 03:06 44167     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/bin/java
40000000-40016000 r-xp 00000000 03:06 7973       /lib/ld-2.3.3.so
40016000-40018000 rwxp 00015000 03:06 7973       /lib/ld-2.3.3.so
4002d000-4003b000 r-xp 00000000 03:06 8001       /lib/tls/libpthread.so.0
4003b000-4003d000 rwxp 0000d000 03:06 8001       /lib/tls/libpthread.so.0
4003f000-40041000 r-xp 00000000 03:06 7982       /lib/libdl.so.2
40041000-40043000 rwxp 00001000 03:06 7982       /lib/libdl.so.2
40043000-40152000 r-xp 00000000 03:06 7999       /lib/tls/libc.so.6
40152000-40153000 ---p 0010f000 03:06 7999       /lib/tls/libc.so.6
40153000-40154000 r-xp 0010f000 03:06 7999       /lib/tls/libc.so.6
40154000-40157000 rwxp 00110000 03:06 7999       /lib/tls/libc.so.6
4015a000-40556000 r-xp 00000000 03:06 44282     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/client/libjvm.so
40556000-40571000 rwxp 003fb000 03:06 44282     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/client/libjvm.so
40583000-4058b000 r-xp 00000000 03:06 44307     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/native_threads/libhpi.so
4058b000-4058c000 rwxp 00007000 03:06 44307     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/native_threads/libhpi.so
40597000-405a9000 r-xp 00000000 03:06 7985       /lib/libnsl.so.1
405a9000-405ab000 rwxp 00011000 03:06 7985       /lib/libnsl.so.1
405ad000-405ce000 r-xp 00000000 03:06 8000       /lib/tls/libm.so.6
405ce000-405d0000 rwxp 00020000 03:06 8000       /lib/tls/libm.so.6
405d0000-40605000 r-xs 00000000 03:06 114086     /var/run/nscd/passwd
40605000-40609000 rwxs 00000000 03:06 117856     /tmp/hsperfdata_alygilani/17573
40609000-40619000 r-xp 00000000 03:06 44304     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libverify.so
40619000-4061b000 rwxp 0000f000 03:06 44304     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libverify.so
4061b000-4063b000 r-xp 00000000 03:06 44292     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libjava.so
4063b000-4063d000 rwxp 0001f000 03:06 44292     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libjava.so
4063d000-40651000 r-xp 00000000 03:06 44305     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libzip.so
40651000-40654000 rwxp 00013000 03:06 44305     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libzip.so
40654000-41ff8000 r-xs 00000000 03:06 44357     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/rt.jar
42042000-42058000 r-xs 00000000 03:06 44362     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/sunrsasign.jar
42058000-42135000 r-xs 00000000 03:06 44326     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/jsse.jar
42135000-42146000 r-xs 00000000 03:06 44325     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/jce.jar
42146000-4269f000 r-xs 00000000 03:06 44216     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/charsets.jar
4c953000-4c986000 r-xp 00000000 03:06 11694      /usr/lib/locale/en_US.utf8/LC_CTYPE
4c986000-4c98c000 r-xs 00000000 03:06 9064       /usr/lib/gconv/gconv-modules.cache
4cb90000-4cb93000 r-xs 00000000 03:06 44226     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/dnsns.jar
4cb93000-4cbaf000 r-xs 00000000 03:06 44229     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/sunjce_provider.jar
4cbaf000-4cbbc000 r-xs 00000000 03:06 44227     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/ldapsec.jar
4cbbc000-4cc78000 r-xs 00000000 03:06 44228     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/localedata.jar
4cc78000-4cc7d000 r-xs 00000000 03:06 117853     /home/alygilani/eclipse/startup.jar
4ccfe000-4cd36000 r-xs 00000000 03:06 114488    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/core.jar
4cd36000-4cd3e000 r-xs 00000000 03:06 114489    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/console.jar
4cd3e000-4cd4a000 r-xs 00000000 03:06 114487    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/osgi.jar
4cd4a000-4cd60000 r-xs 00000000 03:06 114491    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/resolver.jar
4cd60000-4cd76000 r-xs 00000000 03:06 114492    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/defaultAdaptor.jar
4cd76000-4cd95000 r-xs 00000000 03:06 114490    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/eclipseAdaptor.jar
4ce97000-4cea7000 r-xp 00000000 03:06 44301     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnet.so
4cea7000-4cea8000 rwxp 0000f000 03:06 44301     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnet.so
4cea8000-4cea9000 r-xs 00000000 03:06 116890    
/home/alygilani/eclipse/plugins/org.eclipse.ui_3.0.0/ui.jar
4cf2c000-4cf83000 r-xs 00000000 03:06 114650    
/home/alygilani/eclipse/plugins/org.eclipse.core.runtime_3.0.0/runtime.jar
4cf83000-4cf89000 r-xp 00000000 03:06 44302     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnio.so
4cf89000-4cf8a000 rwxp 00005000 03:06 44302     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnio.so
4cf8a000-4cf9e000 r-xs 00000000 03:06 117769    
/home/alygilani/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
4cf9e000-4d0ec000 r-xs 00000000 03:06 115644    
/home/alygilani/eclipse/plugins/org.eclipse.ui.ide_3.0.0/ide.jar
4d0ec000-4d101000 r-xs 00000000 03:06 115200    
/home/alygilani/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
4d101000-4d102000 r-xs 00000000 03:06 117765    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar
4d102000-4d115000 r-xs 00000000 03:06 115164    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt-mozilla.jar
4d115000-4d122000 r-xs 00000000 03:06 115163    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt-pi.jar
4d122000-4d200000 r-xs 00000000 03:06 115165    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt.jar
4d300000-4d533000 r-xs 00000000 03:06 115195    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench_3.0.0/workbench.jar
4d533000-4d5b1000 r-xs 00000000 03:06 116050    
/home/alygilani/eclipse/plugins/org.eclipse.jface_3.0.0/jface.jar
4d5b1000-4d5e7000 r-xp 00000000 03:06 115170    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-pi-gtk-3062.so
4d5e7000-4d5e9000 rwxp 00035000 03:06 115170    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-pi-gtk-3062.so
4d5e9000-4d5ea000 r-xp 00000000 03:06 9751      
/usr/lib/locale/en_US.utf8/LC_IDENTIFICATION
4d5ea000-4d5eb000 r-xp 00000000 03:06 11470     
/usr/lib/locale/en_US.utf8/LC_MEASUREMENT
4d5eb000-4d5ec000 r-xp 00000000 03:06 9755      
/usr/lib/locale/en_US.utf8/LC_TELEPHONE
4d5ec000-4d5ed000 r-xp 00000000 03:06 9750      
/usr/lib/locale/en_US.utf8/LC_ADDRESS
4d5ed000-4d5ee000 r-xp 00000000 03:06 9754       /usr/lib/locale/en_US.utf8/LC_NAME
4d5ee000-4d5ef000 r-xp 00000000 03:06 11504      /usr/lib/locale/en_US.utf8/LC_PAPER
4d5ef000-4d5f0000 r-xp 00000000 03:06 11660     
/usr/lib/locale/en_US.utf8/LC_MESSAGES/SYS_LC_MESSAGES
4d5f0000-4d5f1000 r-xp 00000000 03:06 9753      
/usr/lib/locale/en_US.utf8/LC_MONETARY
4d5f1000-4d5f3000 r-xp 00000000 03:06 22190     
/opt/gnome/lib/pango/1.4.0/modules/pango-basic-fc.so
4d5f3000-4d5f4000 rwxp 00001000 03:06 22190     
/opt/gnome/lib/pango/1.4.0/modules/pango-basic-fc.so
4d5fd000-4d8b7000 r-xp 00000000 03:06 42146     
/opt/gnome/lib/libgtk-x11-2.0.so.0.400.9
4d8b7000-4d8c0000 rwxp 002ba000 03:06 42146     
/opt/gnome/lib/libgtk-x11-2.0.so.0.400.9
4d8c3000-4d92d000 r-xp 00000000 03:06 42140     
/opt/gnome/lib/libgdk-x11-2.0.so.0.400.9
4d92d000-4d932000 rwxp 00069000 03:06 42140     
/opt/gnome/lib/libgdk-x11-2.0.so.0.400.9
4d932000-4d94b000 r-xp 00000000 03:06 12301     
/opt/gnome/lib/libatk-1.0.so.0.600.0
4d94b000-4d94d000 rwxp 00018000 03:06 12301     
/opt/gnome/lib/libatk-1.0.so.0.600.0
4d94d000-4d961000 r-xp 00000000 03:06 42142     
/opt/gnome/lib/libgdk_pixbuf-2.0.so.0.400.9
4d961000-4d962000 rwxp 00013000 03:06 42142     
/opt/gnome/lib/libgdk_pixbuf-2.0.so.0.400.9
4d962000-4d966000 r-xp 00000000 03:06 22185     
/opt/gnome/lib/libpangoxft-1.0.so.0.400.1
4d966000-4d967000 rwxp 00003000 03:06 22185     
/opt/gnome/lib/libpangoxft-1.0.so.0.400.1
4d967000-4d971000 r-xp 00000000 03:06 22183     
/opt/gnome/lib/libpangox-1.0.so.0.400.1
4d971000-4d972000 rwxp 0000a000 03:06 22183     
/opt/gnome/lib/libpangox-1.0.so.0.400.1
4d972000-4d9a1000 r-xp 00000000 03:06 22179     
/opt/gnome/lib/libpango-1.0.so.0.400.1
4d9a1000-4d9a6000 rwxp 0002e000 03:06 22179     
/opt/gnome/lib/libpango-1.0.so.0.400.1
4d9a6000-4d9de000 r-xp 00000000 03:06 8151      
/opt/gnome/lib/libgobject-2.0.so.0.400.6
4d9de000-4d9e0000 rwxp 00037000 03:06 8151      
/opt/gnome/lib/libgobject-2.0.so.0.400.6
4d9e0000-4d9e3000 r-xp 00000000 03:06 8149      
/opt/gnome/lib/libgmodule-2.0.so.0.400.6
4d9e3000-4d9e4000 rwxp 00002000 03:06 8149      
/opt/gnome/lib/libgmodule-2.0.so.0.400.6
4d9e4000-4d9e7000 r-xp 00000000 03:06 8153      
/opt/gnome/lib/libgthread-2.0.so.0.400.6
4d9e7000-4d9e8000 rwxp 00003000 03:06 8153      
/opt/gnome/lib/libgthread-2.0.so.0.400.6
4d9e8000-4da66000 r-xp 00000000 03:06 8147      
/opt/gnome/lib/libglib-2.0.so.0.400.6
4da66000-4da67000 rwxp 0007e000 03:06 8147      
/opt/gnome/lib/libglib-2.0.so.0.400.6
4da67000-4da6c000 r-xp 00000000 03:06 12771      /usr/X11R6/lib/libXtst.so.6.1
4da6c000-4da6d000 rwxp 00004000 03:06 12771      /usr/X11R6/lib/libXtst.so.6.1
4da6d000-4db65000 r-xp 00000000 03:06 12729      /usr/X11R6/lib/libX11.so.6.2
4db65000-4db69000 rwxp 000f7000 03:06 12729      /usr/X11R6/lib/libX11.so.6.2
4db69000-4db6c000 r-xp 00000000 03:06 12764      /usr/X11R6/lib/libXrandr.so.2.0
4db6c000-4db6d000 rwxp 00002000 03:06 12764      /usr/X11R6/lib/libXrandr.so.2.0
4db6d000-4db74000 r-xp 00000000 03:06 12753      /usr/X11R6/lib/libXi.so.6.0
4db74000-4db75000 rwxp 00006000 03:06 12753      /usr/X11R6/lib/libXi.so.6.0
4db75000-4db87000 r-xp 00000000 03:06 12751      /usr/X11R6/lib/libXft.so.2.1.2
4db87000-4db88000 rwxp 00011000 03:06 12751      /usr/X11R6/lib/libXft.so.2.1.2
4db88000-4dbf0000 r-xp 00000000 03:06 8767       /usr/lib/libfreetype.so.6.3.7
4dbf0000-4dbf7000 rwxp 00068000 03:06 8767       /usr/lib/libfreetype.so.6.3.7
4dbf7000-4dc1c000 r-xp 00000000 03:06 12100      /usr/lib/libfontconfig.so.1.0.4
4dc1c000-4dc20000 rwxp 00025000 03:06 12100      /usr/lib/libfontconfig.so.1.0.4
4dc21000-4dc29000 r-xp 00000000 03:06 12740      /usr/X11R6/lib/libXcursor.so.1.0.2
4dc29000-4dc2a000 rwxp 00007000 03:06 12740      /usr/X11R6/lib/libXcursor.so.1.0.2
4dc2a000-4dc31000 r-xp 00000000 03:06 12766      /usr/X11R6/lib/libXrender.so.1.2.2
4dc31000-4dc32000 rwxp 00006000 03:06 12766      /usr/X11R6/lib/libXrender.so.1.2.2
4dc32000-4dc3f000 r-xp 00000000 03:06 12744      /usr/X11R6/lib/libXext.so.6.4
4dc3f000-4dc40000 rwxp 0000d000 03:06 12744      /usr/X11R6/lib/libXext.so.6.4
4dc40000-4dc64000 r-xp 00000000 03:06 22181     
/opt/gnome/lib/libpangoft2-1.0.so.0.400.1
4dc64000-4dc65000 rwxp 00024000 03:06 22181     
/opt/gnome/lib/libpangoft2-1.0.so.0.400.1
4dc65000-4dc82000 r-xp 00000000 03:06 11907      /usr/lib/libexpat.so.0.5.0
4dc82000-4dc84000 rwxp 0001d000 03:06 11907      /usr/lib/libexpat.so.0.5.0
4dc84000-4dd5c000 r-xp 00000000 03:06 11695     
/usr/lib/locale/en_US.utf8/LC_COLLATE
4dd5c000-4dd5d000 r-xp 00000000 03:06 9756       /usr/lib/locale/en_US.utf8/LC_TIME
4dd5d000-4dd5e000 r-xp 00000000 03:06 11671     
/usr/lib/locale/en_US.utf8/LC_NUMERIC
4dd5e000-4dd5f000 r-xp 00000000 03:06 12637     
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
4dd5f000-4dd60000 rwxp 00000000 03:06 12637     
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
4dd60000-4dd61000 r-xp 00000000 03:06 9013       /usr/lib/gconv/ISO8859-1.so
4dd61000-4dd63000 rwxp 00000000 03:06 9013       /usr/lib/gconv/ISO8859-1.so
4dd63000-4dd89000 r-xp 00000000 03:06 115169    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-gtk-3062.so
4dd89000-4dd8b000 rwxp 00026000 03:06 115169    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-gtk-3062.so
4dd8b000-4dda5000 r-xp 00000000 03:06 64803     
/opt/gnome/lib/gtk-2.0/2.4.0/engines/libqtengine.so
4dda5000-4dda6000 rwxp 0001a000 03:06 64803     
/opt/gnome/lib/gtk-2.0/2.4.0/engines/libqtengine.so
4dda6000-4e460000 r-xp 00000000 03:06 18319      /usr/lib/qt3/lib/libqt-mt.so.3.3.3
4e460000-4e4a1000 rwxp 006ba000 03:06 18319      /usr/lib/qt3/lib/libqt-mt.so.3.3.3
4e4b8000-4e4e5000 r-xp 00000000 03:06 12269      /usr/lib/libpng.so.3.1.2.6
4e4e5000-4e4e6000 rwxp 0002d000 03:06 12269      /usr/lib/libpng.so.3.1.2.6
4e4e6000-4e4f6000 r-xp 00000000 03:06 11926      /lib/libz.so.1.2.1
4e4f6000-4e4f7000 rwxp 0000f000 03:06 11926      /lib/libz.so.1.2.1
4e4f7000-4e4fe000 r-xp 00000000 03:06 12726      /usr/X11R6/lib/libSM.so.6.0
4e4fe000-4e4ff000 rwxp 00007000 03:06 12726      /usr/X11R6/lib/libSM.so.6.0
4e4ff000-4e514000 r-xp 00000000 03:06 12724      /usr/X11R6/lib/libICE.so.6.3
4e514000-4e515000 rwxp 00014000 03:06 12724      /usr/X11R6/lib/libICE.so.6.3
4e517000-4e5ca000 r-xp 00000000 03:06 12375      /usr/lib/libstdc++.so.5.0.7
4e5ca000-4e5cf000 rwxp 000b3000 03:06 12375      /usr/lib/libstdc++.so.5.0.7
4e5d4000-4e5db000 r-xp 00000000 03:06 11807      /lib/libgcc_s.so.1
4e5db000-4e5dc000 rwxp 00006000 03:06 11807      /lib/libgcc_s.so.1
4e5dc000-4e646000 r-xp 00000000 03:06 38880     
/usr/lib/qt3/plugins/styles/thinkeramik.so
4e646000-4e649000 rwxp 00069000 03:06 38880     
/usr/lib/qt3/plugins/styles/thinkeramik.so
4e649000-4e657000 r-xp 00000000 03:06 45054     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-Roman.ttf
4e657000-4e687000 rwxs 00000000 00:06 30408712   /SYSV00000000 (deleted)
4e687000-4e725000 r-xs 00000000 03:06 116537    
/home/alygilani/eclipse/plugins/org.eclipse.core.resources_3.0.0/resources.jar
4e725000-4e735000 r-xs 00000000 03:06 115971    
/home/alygilani/eclipse/plugins/org.eclipse.help_3.0.0/help.jar
4e7b6000-4e7bd000 r-xp 00000000 03:06 115172    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-atk-gtk-3062.so
4e7bd000-4e7be000 rwxp 00007000 03:06 115172    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-atk-gtk-3062.so
4e83f000-4e84d000 r-xs 00000000 03:06 115215    
/home/alygilani/eclipse/plugins/org.eclipse.ui.views_3.0.0/views.jar
4e84e000-4e868000 r-xs 00000000 03:06 115762    
/home/alygilani/eclipse/plugins/org.eclipse.ui.externaltools_3.0.0/externaltools.jar
4e868000-4e948000 r-xs 00000000 03:06 114500    
/home/alygilani/eclipse/plugins/org.eclipse.debug.ui_3.0.0/dtui.jar
4e948000-4e980000 r-xs 00000000 03:06 116531    
/home/alygilani/eclipse/plugins/org.eclipse.debug.core_3.0.0/dtcore.jar
4e980000-4e98d000 r-xs 00000000 03:06 115638    
/home/alygilani/eclipse/plugins/org.eclipse.core.expressions_3.0.0/expressions.jar
4ea8f000-4ea95000 r-xs 00000000 03:06 114477    
/home/alygilani/eclipse/plugins/org.eclipse.update.scheduler_3.0.0/scheduler.jar
4eb16000-4eb40000 r-xs 00000000 03:06 117148    
/home/alygilani/eclipse/plugins/org.eclipse.text_3.0.0/text.jar
4eb40000-4ebd7000 r-xs 00000000 03:06 115982    
/home/alygilani/eclipse/plugins/org.eclipse.jface.text_3.0.0/jfacetext.jar
4ebd7000-4ebe6000 r-xp 00000000 03:06 45053     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-Oblique.ttf
4ebe6000-4ec12000 r-xs 00000000 03:06 117667    
/home/alygilani/eclipse/plugins/org.eclipse.team.core_3.0.0/team.jar
4ec12000-4ec21000 r-xp 00000000 03:06 45052     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-BoldOblique.ttf
4ec54000-4ed4b000 r-xs 00000000 03:06 117064    
/home/alygilani/eclipse/plugins/org.eclipse.team.cvs.ui_3.0.0/teamcvsui.jar
4ed4b000-4edbc000 r-xs 00000000 03:06 117371    
/home/alygilani/eclipse/plugins/org.eclipse.team.cvs.core_3.0.0/cvs.jar
4edbc000-4ee2d000 r-xs 00000000 03:06 117422    
/home/alygilani/eclipse/plugins/org.eclipse.team.ui_3.0.0/teamui.jar
4ee2d000-4ee8e000 r-xs 00000000 03:06 115988    
/home/alygilani/eclipse/plugins/org.eclipse.compare_3.0.0/compare.jar
4ee8e000-4ee9c000 r-xs 00000000 03:06 116820    
/home/alygilani/eclipse/plugins/org.eclipse.ui.console_3.0.0/console.jar
4ee9c000-4eefc000 rwxs 00000000 00:06 37027846   /SYSV00000000 (deleted)
4eefc000-4eeff000 r-xp 00000000 03:06 22189     
/opt/gnome/lib/pango/1.4.0/modules/pango-arabic-fc.so
4eeff000-4ef00000 rwxp 00002000 03:06 22189     
/opt/gnome/lib/pango/1.4.0/modules/pango-arabic-fc.so
4ef00000-4ef02000 r-xp 00000000 03:06 22192     
/opt/gnome/lib/pango/1.4.0/modules/pango-hangul-fc.so
4ef02000-4ef03000 rwxp 00001000 03:06 22192     
/opt/gnome/lib/pango/1.4.0/modules/pango-hangul-fc.so
4ef03000-4f009000 r-xp 00000000 03:06 57895     
/usr/X11R6/lib/X11/fonts/uni/newunifont.pcf.gz
4f25b000-4f26c000 r-xp 00000000 03:06 43901     
/usr/share/ghostscript/fonts/n019003l.pfb
4f31e000-4f336000 r-xp 00000000 03:06 43934     
/usr/share/ghostscript/fonts/n022003l.pfb
4f37d000-4f3da000 r-xs 00000000 03:06 117673    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench.texteditor_3.0.0/texteditor.jar
4f562000-4f5e7000 r-xp 00000000 03:06 73961     
/usr/X11R6/lib/X11/fonts/misc/f12.pcf.gz

Heap at VM Abort:
Heap
 def new generation   total 832K, used 707K [0x44750000, 0x44830000, 0x44c30000)
  eden space 768K,  90% used [0x44750000, 0x447fd178, 0x44810000)
  from space 64K,  23% used [0x44810000, 0x44813bf8, 0x44820000)
  to   space 64K,   0% used [0x44820000, 0x44820000, 0x44830000)
 tenured generation   total 10048K, used 6423K [0x44c30000, 0x45600000, 0x48750000)
   the space 10048K,  63% used [0x44c30000, 0x45275c60, 0x45275e00, 0x45600000)
 compacting perm gen  total 13312K, used 13066K [0x48750000, 0x49450000, 0x4c750000)
   the space 13312K,  98% used [0x48750000, 0x49412870, 0x49412a00, 0x49450000)

Local Time = Wed Mar  9 16:11:28 2005
Elapsed Time = 40
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#
Looks to be happening in SWT. Moving
This is caused by a bug in the gtk-qt theme engine.  Please switch theme engines
and re-open if this bug still occurs.

*** This bug has been marked as a duplicate of 77928 ***</WithStack>
    <WithOutStack>Here is the log:


An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x4DA9F172
Function=XSetTile+0x12
Library=/usr/X11R6/lib/libX11.so.6

Current Java thread:
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)
	- locked &lt;0x48baccb0&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:879)
	at org.eclipse.swt.internal.gtk.OS.gtk_adjustment_value_changed(Native Method)
	- locked &lt;0x48baccb0&gt; (a java.lang.Class)
	at org.eclipse.swt.widgets.ScrollBar.setValues(ScrollBar.java:653)
	at org.eclipse.swt.custom.StyledText.setScrollBars(StyledText.java:7022)
	at org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:5116)
	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4753)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Canvas.setBounds(Canvas.java:240)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.custom.SashForm.layout(SashForm.java:278)
	at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.custom.SashForm.layout(SashForm.java:296)
	at org.eclipse.swt.custom.SashForm$1.handleEvent(SashForm.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:959)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:538)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:693)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:148)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:694)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:461)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:433)
	at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:290)
	at
org.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:115)
	at
org.eclipse.ui.internal.presentations.DefaultPartPresentation.layout(DefaultPartPresentation.java:723)
	at
org.eclipse.ui.internal.presentations.DefaultPartPresentation.setBounds(DefaultPartPresentation.java:1166)
	at org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:907)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:190)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:373)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:296)
	at
org.eclipse.ui.internal.PartSashContainer.resizeSashes(PartSashContainer.java:646)
	at
org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:439)
	at org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:155)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:722)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2775)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:744)
	at org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:729)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2918)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2916)
	at
org.eclipse.ui.internal.ChangeToPerspectiveMenu.run(ChangeToPerspectiveMenu.java:87)
	at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:303)
	at
org.eclipse.ui.actions.PerspectiveMenu$3.widgetSelected(PerspectiveMenu.java:119)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:954)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2595)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2298)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:183)
	at org.eclipse.core.launcher.Main.run(Main.java:644)
	at org.eclipse.core.launcher.Main.main(Main.java:628)

Dynamic libraries:
08048000-08056000 r-xp 00000000 03:06 44167     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/bin/java
08056000-08059000 rwxp 0000d000 03:06 44167     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/bin/java
40000000-40016000 r-xp 00000000 03:06 7973       /lib/ld-2.3.3.so
40016000-40018000 rwxp 00015000 03:06 7973       /lib/ld-2.3.3.so
4002d000-4003b000 r-xp 00000000 03:06 8001       /lib/tls/libpthread.so.0
4003b000-4003d000 rwxp 0000d000 03:06 8001       /lib/tls/libpthread.so.0
4003f000-40041000 r-xp 00000000 03:06 7982       /lib/libdl.so.2
40041000-40043000 rwxp 00001000 03:06 7982       /lib/libdl.so.2
40043000-40152000 r-xp 00000000 03:06 7999       /lib/tls/libc.so.6
40152000-40153000 ---p 0010f000 03:06 7999       /lib/tls/libc.so.6
40153000-40154000 r-xp 0010f000 03:06 7999       /lib/tls/libc.so.6
40154000-40157000 rwxp 00110000 03:06 7999       /lib/tls/libc.so.6
4015a000-40556000 r-xp 00000000 03:06 44282     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/client/libjvm.so
40556000-40571000 rwxp 003fb000 03:06 44282     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/client/libjvm.so
40583000-4058b000 r-xp 00000000 03:06 44307     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/native_threads/libhpi.so
4058b000-4058c000 rwxp 00007000 03:06 44307     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/native_threads/libhpi.so
40597000-405a9000 r-xp 00000000 03:06 7985       /lib/libnsl.so.1
405a9000-405ab000 rwxp 00011000 03:06 7985       /lib/libnsl.so.1
405ad000-405ce000 r-xp 00000000 03:06 8000       /lib/tls/libm.so.6
405ce000-405d0000 rwxp 00020000 03:06 8000       /lib/tls/libm.so.6
405d0000-40605000 r-xs 00000000 03:06 114086     /var/run/nscd/passwd
40605000-40609000 rwxs 00000000 03:06 117856     /tmp/hsperfdata_alygilani/17573
40609000-40619000 r-xp 00000000 03:06 44304     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libverify.so
40619000-4061b000 rwxp 0000f000 03:06 44304     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libverify.so
4061b000-4063b000 r-xp 00000000 03:06 44292     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libjava.so
4063b000-4063d000 rwxp 0001f000 03:06 44292     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libjava.so
4063d000-40651000 r-xp 00000000 03:06 44305     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libzip.so
40651000-40654000 rwxp 00013000 03:06 44305     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libzip.so
40654000-41ff8000 r-xs 00000000 03:06 44357     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/rt.jar
42042000-42058000 r-xs 00000000 03:06 44362     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/sunrsasign.jar
42058000-42135000 r-xs 00000000 03:06 44326     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/jsse.jar
42135000-42146000 r-xs 00000000 03:06 44325     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/jce.jar
42146000-4269f000 r-xs 00000000 03:06 44216     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/charsets.jar
4c953000-4c986000 r-xp 00000000 03:06 11694      /usr/lib/locale/en_US.utf8/LC_CTYPE
4c986000-4c98c000 r-xs 00000000 03:06 9064       /usr/lib/gconv/gconv-modules.cache
4cb90000-4cb93000 r-xs 00000000 03:06 44226     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/dnsns.jar
4cb93000-4cbaf000 r-xs 00000000 03:06 44229     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/sunjce_provider.jar
4cbaf000-4cbbc000 r-xs 00000000 03:06 44227     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/ldapsec.jar
4cbbc000-4cc78000 r-xs 00000000 03:06 44228     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/ext/localedata.jar
4cc78000-4cc7d000 r-xs 00000000 03:06 117853     /home/alygilani/eclipse/startup.jar
4ccfe000-4cd36000 r-xs 00000000 03:06 114488    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/core.jar
4cd36000-4cd3e000 r-xs 00000000 03:06 114489    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/console.jar
4cd3e000-4cd4a000 r-xs 00000000 03:06 114487    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/osgi.jar
4cd4a000-4cd60000 r-xs 00000000 03:06 114491    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/resolver.jar
4cd60000-4cd76000 r-xs 00000000 03:06 114492    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/defaultAdaptor.jar
4cd76000-4cd95000 r-xs 00000000 03:06 114490    
/home/alygilani/eclipse/plugins/org.eclipse.osgi_3.0.0/eclipseAdaptor.jar
4ce97000-4cea7000 r-xp 00000000 03:06 44301     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnet.so
4cea7000-4cea8000 rwxp 0000f000 03:06 44301     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnet.so
4cea8000-4cea9000 r-xs 00000000 03:06 116890    
/home/alygilani/eclipse/plugins/org.eclipse.ui_3.0.0/ui.jar
4cf2c000-4cf83000 r-xs 00000000 03:06 114650    
/home/alygilani/eclipse/plugins/org.eclipse.core.runtime_3.0.0/runtime.jar
4cf83000-4cf89000 r-xp 00000000 03:06 44302     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnio.so
4cf89000-4cf8a000 rwxp 00005000 03:06 44302     
/usr/lib/jvm/java-1.4.2-sun-1.4.2.05/jre/lib/i386/libnio.so
4cf8a000-4cf9e000 r-xs 00000000 03:06 117769    
/home/alygilani/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar
4cf9e000-4d0ec000 r-xs 00000000 03:06 115644    
/home/alygilani/eclipse/plugins/org.eclipse.ui.ide_3.0.0/ide.jar
4d0ec000-4d101000 r-xs 00000000 03:06 115200    
/home/alygilani/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar
4d101000-4d102000 r-xs 00000000 03:06 117765    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar
4d102000-4d115000 r-xs 00000000 03:06 115164    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt-mozilla.jar
4d115000-4d122000 r-xs 00000000 03:06 115163    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt-pi.jar
4d122000-4d200000 r-xs 00000000 03:06 115165    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk/swt.jar
4d300000-4d533000 r-xs 00000000 03:06 115195    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench_3.0.0/workbench.jar
4d533000-4d5b1000 r-xs 00000000 03:06 116050    
/home/alygilani/eclipse/plugins/org.eclipse.jface_3.0.0/jface.jar
4d5b1000-4d5e7000 r-xp 00000000 03:06 115170    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-pi-gtk-3062.so
4d5e7000-4d5e9000 rwxp 00035000 03:06 115170    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-pi-gtk-3062.so
4d5e9000-4d5ea000 r-xp 00000000 03:06 9751      
/usr/lib/locale/en_US.utf8/LC_IDENTIFICATION
4d5ea000-4d5eb000 r-xp 00000000 03:06 11470     
/usr/lib/locale/en_US.utf8/LC_MEASUREMENT
4d5eb000-4d5ec000 r-xp 00000000 03:06 9755      
/usr/lib/locale/en_US.utf8/LC_TELEPHONE
4d5ec000-4d5ed000 r-xp 00000000 03:06 9750      
/usr/lib/locale/en_US.utf8/LC_ADDRESS
4d5ed000-4d5ee000 r-xp 00000000 03:06 9754       /usr/lib/locale/en_US.utf8/LC_NAME
4d5ee000-4d5ef000 r-xp 00000000 03:06 11504      /usr/lib/locale/en_US.utf8/LC_PAPER
4d5ef000-4d5f0000 r-xp 00000000 03:06 11660     
/usr/lib/locale/en_US.utf8/LC_MESSAGES/SYS_LC_MESSAGES
4d5f0000-4d5f1000 r-xp 00000000 03:06 9753      
/usr/lib/locale/en_US.utf8/LC_MONETARY
4d5f1000-4d5f3000 r-xp 00000000 03:06 22190     
/opt/gnome/lib/pango/1.4.0/modules/pango-basic-fc.so
4d5f3000-4d5f4000 rwxp 00001000 03:06 22190     
/opt/gnome/lib/pango/1.4.0/modules/pango-basic-fc.so
4d5fd000-4d8b7000 r-xp 00000000 03:06 42146     
/opt/gnome/lib/libgtk-x11-2.0.so.0.400.9
4d8b7000-4d8c0000 rwxp 002ba000 03:06 42146     
/opt/gnome/lib/libgtk-x11-2.0.so.0.400.9
4d8c3000-4d92d000 r-xp 00000000 03:06 42140     
/opt/gnome/lib/libgdk-x11-2.0.so.0.400.9
4d92d000-4d932000 rwxp 00069000 03:06 42140     
/opt/gnome/lib/libgdk-x11-2.0.so.0.400.9
4d932000-4d94b000 r-xp 00000000 03:06 12301     
/opt/gnome/lib/libatk-1.0.so.0.600.0
4d94b000-4d94d000 rwxp 00018000 03:06 12301     
/opt/gnome/lib/libatk-1.0.so.0.600.0
4d94d000-4d961000 r-xp 00000000 03:06 42142     
/opt/gnome/lib/libgdk_pixbuf-2.0.so.0.400.9
4d961000-4d962000 rwxp 00013000 03:06 42142     
/opt/gnome/lib/libgdk_pixbuf-2.0.so.0.400.9
4d962000-4d966000 r-xp 00000000 03:06 22185     
/opt/gnome/lib/libpangoxft-1.0.so.0.400.1
4d966000-4d967000 rwxp 00003000 03:06 22185     
/opt/gnome/lib/libpangoxft-1.0.so.0.400.1
4d967000-4d971000 r-xp 00000000 03:06 22183     
/opt/gnome/lib/libpangox-1.0.so.0.400.1
4d971000-4d972000 rwxp 0000a000 03:06 22183     
/opt/gnome/lib/libpangox-1.0.so.0.400.1
4d972000-4d9a1000 r-xp 00000000 03:06 22179     
/opt/gnome/lib/libpango-1.0.so.0.400.1
4d9a1000-4d9a6000 rwxp 0002e000 03:06 22179     
/opt/gnome/lib/libpango-1.0.so.0.400.1
4d9a6000-4d9de000 r-xp 00000000 03:06 8151      
/opt/gnome/lib/libgobject-2.0.so.0.400.6
4d9de000-4d9e0000 rwxp 00037000 03:06 8151      
/opt/gnome/lib/libgobject-2.0.so.0.400.6
4d9e0000-4d9e3000 r-xp 00000000 03:06 8149      
/opt/gnome/lib/libgmodule-2.0.so.0.400.6
4d9e3000-4d9e4000 rwxp 00002000 03:06 8149      
/opt/gnome/lib/libgmodule-2.0.so.0.400.6
4d9e4000-4d9e7000 r-xp 00000000 03:06 8153      
/opt/gnome/lib/libgthread-2.0.so.0.400.6
4d9e7000-4d9e8000 rwxp 00003000 03:06 8153      
/opt/gnome/lib/libgthread-2.0.so.0.400.6
4d9e8000-4da66000 r-xp 00000000 03:06 8147      
/opt/gnome/lib/libglib-2.0.so.0.400.6
4da66000-4da67000 rwxp 0007e000 03:06 8147      
/opt/gnome/lib/libglib-2.0.so.0.400.6
4da67000-4da6c000 r-xp 00000000 03:06 12771      /usr/X11R6/lib/libXtst.so.6.1
4da6c000-4da6d000 rwxp 00004000 03:06 12771      /usr/X11R6/lib/libXtst.so.6.1
4da6d000-4db65000 r-xp 00000000 03:06 12729      /usr/X11R6/lib/libX11.so.6.2
4db65000-4db69000 rwxp 000f7000 03:06 12729      /usr/X11R6/lib/libX11.so.6.2
4db69000-4db6c000 r-xp 00000000 03:06 12764      /usr/X11R6/lib/libXrandr.so.2.0
4db6c000-4db6d000 rwxp 00002000 03:06 12764      /usr/X11R6/lib/libXrandr.so.2.0
4db6d000-4db74000 r-xp 00000000 03:06 12753      /usr/X11R6/lib/libXi.so.6.0
4db74000-4db75000 rwxp 00006000 03:06 12753      /usr/X11R6/lib/libXi.so.6.0
4db75000-4db87000 r-xp 00000000 03:06 12751      /usr/X11R6/lib/libXft.so.2.1.2
4db87000-4db88000 rwxp 00011000 03:06 12751      /usr/X11R6/lib/libXft.so.2.1.2
4db88000-4dbf0000 r-xp 00000000 03:06 8767       /usr/lib/libfreetype.so.6.3.7
4dbf0000-4dbf7000 rwxp 00068000 03:06 8767       /usr/lib/libfreetype.so.6.3.7
4dbf7000-4dc1c000 r-xp 00000000 03:06 12100      /usr/lib/libfontconfig.so.1.0.4
4dc1c000-4dc20000 rwxp 00025000 03:06 12100      /usr/lib/libfontconfig.so.1.0.4
4dc21000-4dc29000 r-xp 00000000 03:06 12740      /usr/X11R6/lib/libXcursor.so.1.0.2
4dc29000-4dc2a000 rwxp 00007000 03:06 12740      /usr/X11R6/lib/libXcursor.so.1.0.2
4dc2a000-4dc31000 r-xp 00000000 03:06 12766      /usr/X11R6/lib/libXrender.so.1.2.2
4dc31000-4dc32000 rwxp 00006000 03:06 12766      /usr/X11R6/lib/libXrender.so.1.2.2
4dc32000-4dc3f000 r-xp 00000000 03:06 12744      /usr/X11R6/lib/libXext.so.6.4
4dc3f000-4dc40000 rwxp 0000d000 03:06 12744      /usr/X11R6/lib/libXext.so.6.4
4dc40000-4dc64000 r-xp 00000000 03:06 22181     
/opt/gnome/lib/libpangoft2-1.0.so.0.400.1
4dc64000-4dc65000 rwxp 00024000 03:06 22181     
/opt/gnome/lib/libpangoft2-1.0.so.0.400.1
4dc65000-4dc82000 r-xp 00000000 03:06 11907      /usr/lib/libexpat.so.0.5.0
4dc82000-4dc84000 rwxp 0001d000 03:06 11907      /usr/lib/libexpat.so.0.5.0
4dc84000-4dd5c000 r-xp 00000000 03:06 11695     
/usr/lib/locale/en_US.utf8/LC_COLLATE
4dd5c000-4dd5d000 r-xp 00000000 03:06 9756       /usr/lib/locale/en_US.utf8/LC_TIME
4dd5d000-4dd5e000 r-xp 00000000 03:06 11671     
/usr/lib/locale/en_US.utf8/LC_NUMERIC
4dd5e000-4dd5f000 r-xp 00000000 03:06 12637     
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
4dd5f000-4dd60000 rwxp 00000000 03:06 12637     
/usr/X11R6/lib/X11/locale/lib/common/xlcUTF8Load.so.2
4dd60000-4dd61000 r-xp 00000000 03:06 9013       /usr/lib/gconv/ISO8859-1.so
4dd61000-4dd63000 rwxp 00000000 03:06 9013       /usr/lib/gconv/ISO8859-1.so
4dd63000-4dd89000 r-xp 00000000 03:06 115169    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-gtk-3062.so
4dd89000-4dd8b000 rwxp 00026000 03:06 115169    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-gtk-3062.so
4dd8b000-4dda5000 r-xp 00000000 03:06 64803     
/opt/gnome/lib/gtk-2.0/2.4.0/engines/libqtengine.so
4dda5000-4dda6000 rwxp 0001a000 03:06 64803     
/opt/gnome/lib/gtk-2.0/2.4.0/engines/libqtengine.so
4dda6000-4e460000 r-xp 00000000 03:06 18319      /usr/lib/qt3/lib/libqt-mt.so.3.3.3
4e460000-4e4a1000 rwxp 006ba000 03:06 18319      /usr/lib/qt3/lib/libqt-mt.so.3.3.3
4e4b8000-4e4e5000 r-xp 00000000 03:06 12269      /usr/lib/libpng.so.3.1.2.6
4e4e5000-4e4e6000 rwxp 0002d000 03:06 12269      /usr/lib/libpng.so.3.1.2.6
4e4e6000-4e4f6000 r-xp 00000000 03:06 11926      /lib/libz.so.1.2.1
4e4f6000-4e4f7000 rwxp 0000f000 03:06 11926      /lib/libz.so.1.2.1
4e4f7000-4e4fe000 r-xp 00000000 03:06 12726      /usr/X11R6/lib/libSM.so.6.0
4e4fe000-4e4ff000 rwxp 00007000 03:06 12726      /usr/X11R6/lib/libSM.so.6.0
4e4ff000-4e514000 r-xp 00000000 03:06 12724      /usr/X11R6/lib/libICE.so.6.3
4e514000-4e515000 rwxp 00014000 03:06 12724      /usr/X11R6/lib/libICE.so.6.3
4e517000-4e5ca000 r-xp 00000000 03:06 12375      /usr/lib/libstdc++.so.5.0.7
4e5ca000-4e5cf000 rwxp 000b3000 03:06 12375      /usr/lib/libstdc++.so.5.0.7
4e5d4000-4e5db000 r-xp 00000000 03:06 11807      /lib/libgcc_s.so.1
4e5db000-4e5dc000 rwxp 00006000 03:06 11807      /lib/libgcc_s.so.1
4e5dc000-4e646000 r-xp 00000000 03:06 38880     
/usr/lib/qt3/plugins/styles/thinkeramik.so
4e646000-4e649000 rwxp 00069000 03:06 38880     
/usr/lib/qt3/plugins/styles/thinkeramik.so
4e649000-4e657000 r-xp 00000000 03:06 45054     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-Roman.ttf
4e657000-4e687000 rwxs 00000000 00:06 30408712   /SYSV00000000 (deleted)
4e687000-4e725000 r-xs 00000000 03:06 116537    
/home/alygilani/eclipse/plugins/org.eclipse.core.resources_3.0.0/resources.jar
4e725000-4e735000 r-xs 00000000 03:06 115971    
/home/alygilani/eclipse/plugins/org.eclipse.help_3.0.0/help.jar
4e7b6000-4e7bd000 r-xp 00000000 03:06 115172    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-atk-gtk-3062.so
4e7bd000-4e7be000 rwxp 00007000 03:06 115172    
/home/alygilani/eclipse/plugins/org.eclipse.swt.gtk_3.0.0/os/linux/x86/libswt-atk-gtk-3062.so
4e83f000-4e84d000 r-xs 00000000 03:06 115215    
/home/alygilani/eclipse/plugins/org.eclipse.ui.views_3.0.0/views.jar
4e84e000-4e868000 r-xs 00000000 03:06 115762    
/home/alygilani/eclipse/plugins/org.eclipse.ui.externaltools_3.0.0/externaltools.jar
4e868000-4e948000 r-xs 00000000 03:06 114500    
/home/alygilani/eclipse/plugins/org.eclipse.debug.ui_3.0.0/dtui.jar
4e948000-4e980000 r-xs 00000000 03:06 116531    
/home/alygilani/eclipse/plugins/org.eclipse.debug.core_3.0.0/dtcore.jar
4e980000-4e98d000 r-xs 00000000 03:06 115638    
/home/alygilani/eclipse/plugins/org.eclipse.core.expressions_3.0.0/expressions.jar
4ea8f000-4ea95000 r-xs 00000000 03:06 114477    
/home/alygilani/eclipse/plugins/org.eclipse.update.scheduler_3.0.0/scheduler.jar
4eb16000-4eb40000 r-xs 00000000 03:06 117148    
/home/alygilani/eclipse/plugins/org.eclipse.text_3.0.0/text.jar
4eb40000-4ebd7000 r-xs 00000000 03:06 115982    
/home/alygilani/eclipse/plugins/org.eclipse.jface.text_3.0.0/jfacetext.jar
4ebd7000-4ebe6000 r-xp 00000000 03:06 45053     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-Oblique.ttf
4ebe6000-4ec12000 r-xs 00000000 03:06 117667    
/home/alygilani/eclipse/plugins/org.eclipse.team.core_3.0.0/team.jar
4ec12000-4ec21000 r-xp 00000000 03:06 45052     
/usr/X11R6/lib/X11/fonts/truetype/SUSESans-BoldOblique.ttf
4ec54000-4ed4b000 r-xs 00000000 03:06 117064    
/home/alygilani/eclipse/plugins/org.eclipse.team.cvs.ui_3.0.0/teamcvsui.jar
4ed4b000-4edbc000 r-xs 00000000 03:06 117371    
/home/alygilani/eclipse/plugins/org.eclipse.team.cvs.core_3.0.0/cvs.jar
4edbc000-4ee2d000 r-xs 00000000 03:06 117422    
/home/alygilani/eclipse/plugins/org.eclipse.team.ui_3.0.0/teamui.jar
4ee2d000-4ee8e000 r-xs 00000000 03:06 115988    
/home/alygilani/eclipse/plugins/org.eclipse.compare_3.0.0/compare.jar
4ee8e000-4ee9c000 r-xs 00000000 03:06 116820    
/home/alygilani/eclipse/plugins/org.eclipse.ui.console_3.0.0/console.jar
4ee9c000-4eefc000 rwxs 00000000 00:06 37027846   /SYSV00000000 (deleted)
4eefc000-4eeff000 r-xp 00000000 03:06 22189     
/opt/gnome/lib/pango/1.4.0/modules/pango-arabic-fc.so
4eeff000-4ef00000 rwxp 00002000 03:06 22189     
/opt/gnome/lib/pango/1.4.0/modules/pango-arabic-fc.so
4ef00000-4ef02000 r-xp 00000000 03:06 22192     
/opt/gnome/lib/pango/1.4.0/modules/pango-hangul-fc.so
4ef02000-4ef03000 rwxp 00001000 03:06 22192     
/opt/gnome/lib/pango/1.4.0/modules/pango-hangul-fc.so
4ef03000-4f009000 r-xp 00000000 03:06 57895     
/usr/X11R6/lib/X11/fonts/uni/newunifont.pcf.gz
4f25b000-4f26c000 r-xp 00000000 03:06 43901     
/usr/share/ghostscript/fonts/n019003l.pfb
4f31e000-4f336000 r-xp 00000000 03:06 43934     
/usr/share/ghostscript/fonts/n022003l.pfb
4f37d000-4f3da000 r-xs 00000000 03:06 117673    
/home/alygilani/eclipse/plugins/org.eclipse.ui.workbench.texteditor_3.0.0/texteditor.jar
4f562000-4f5e7000 r-xp 00000000 03:06 73961     
/usr/X11R6/lib/X11/fonts/misc/f12.pcf.gz

Heap at VM Abort:
Heap
 def new generation   total 832K, used 707K [0x44750000, 0x44830000, 0x44c30000)
  eden space 768K,  90% used [0x44750000, 0x447fd178, 0x44810000)
  from space 64K,  23% used [0x44810000, 0x44813bf8, 0x44820000)
  to   space 64K,   0% used [0x44820000, 0x44820000, 0x44830000)
 tenured generation   total 10048K, used 6423K [0x44c30000, 0x45600000, 0x48750000)
   the space 10048K,  63% used [0x44c30000, 0x45275c60, 0x45275e00, 0x45600000)
 compacting perm gen  total 13312K, used 13066K [0x48750000, 0x49450000, 0x4c750000)
   the space 13312K,  98% used [0x48750000, 0x49412870, 0x49412a00, 0x49450000)

Local Time = Wed Mar  9 16:11:28 2005
Elapsed Time = 40
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2_05-b04 mixed mode)
#
Looks to be happening in SWT. Moving
This is caused by a bug in the gtk-qt theme engine.  Please switch theme engines
and re-open if this bug still occurs.

*** This bug has been marked as a duplicate of 77928 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87567" />
    <CreationDate amount="2005-03-09 16:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Non-externalized string quick fix does not work when triggered by keyboard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="117" end="204" />
        <code>public class Main {
	String bug;	
	public void m1() {
		String bug; 
		bug = "10";
	}
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="518" end="582" />
        <code>This works for me if the cursor is somewhere on line bug = "10";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>i200503081510

Non-externalized string quick fix does not work when triggered by keyboard.

For the following code:

public class Main {
	String bug;	
	public void m1() {
		String bug; 
		bug = "10";
	}
}

The local variable declaration has a warning (local var never read), and the
string literal used in the assignment right below it has another warning (should
be followed by //$NON-NLS-1$).

Using Ctrl-1 I can fix the first warning, but not the second one. I have to use
the mouse to click on the warning marker.
This works for me if the cursor is somewhere on line bug = "10";

Please reopend if I am missing something.
Never mind. I got CDT installed as well (forgot that,  sorry), and it seems CDT
interferes with Java documents (see bug 81555, for instance).</WithStack>
    <WithOutStack>i200503081510

Non-externalized string quick fix does not work when triggered by keyboard.

For the following code:

public class Main {
	String bug;	
	public void m1() {
		String bug; 
		bug = "10";
	}
}

The local variable declaration has a warning (local var never read), and the
string literal used in the assignment right below it has another warning (should
be followed by //$NON-NLS-1$).

Using Ctrl-1 I can fix the first warning, but not the second one. I have to use
the mouse to click on the warning marker.
This works for me if the cursor is somewhere on line bug = "10";

Please reopend if I am missing something.
Never mind. I got CDT installed as well (forgot that,  sorry), and it seems CDT
interferes with Java documents (see bug 81555, for instance).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87568" />
    <CreationDate amount="2005-03-09 16:37:00 -0500" />
    <DupId amount="69289" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CME in AnnotationModel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242329">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.HashMap$HashIterator.nextEntry(HashMap.java:930)</Frame>
          <Frame depth="1">java.util.HashMap$KeyIterator.next(HashMap.java:966)</Frame>
          <Frame depth="2">org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java:552)</Frame>
          <Frame depth="3">org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java:530)</Frame>
          <Frame depth="4">org.eclipse.jface.text.source.projection.ProjectionSummary.removeSummaries(ProjectionSummary.java:193)</Frame>
          <Frame depth="5">org.eclipse.jface.text.source.projection.ProjectionSummary.internalUpdateSummaries(ProjectionSummary.java:166)</Frame>
          <Frame depth="6">org.eclipse.jface.text.source.projection.ProjectionSummary.access$3(ProjectionSummary.java:148)</Frame>
          <Frame depth="7">org.eclipse.jface.text.source.projection.ProjectionSummary$Summarizer.run(ProjectionSummary.java:70)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050308-1510

java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:930)
        at java.util.HashMap$KeyIterator.next(HashMap.java:966)
        at org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(A
nnotationModel.java:552)
        at org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(A
nnotationModel.java:530)
        at org.eclipse.jface.text.source.projection.ProjectionSummary.removeSumm
aries(ProjectionSummary.java:193)
        at org.eclipse.jface.text.source.projection.ProjectionSummary.internalUp
dateSummaries(ProjectionSummary.java:166)
        at org.eclipse.jface.text.source.projection.ProjectionSummary.access$3(P
rojectionSummary.java:148)
        at org.eclipse.jface.text.source.projection.ProjectionSummary$Summarizer
.run(ProjectionSummary.java:70)
Anything seen in the UI?
Which editor was open?

*** This bug has been marked as a duplicate of 69289 ***</WithStack>
    <WithOutStack>I20050308-1510


Anything seen in the UI?
Which editor was open?

*** This bug has been marked as a duplicate of 69289 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87569" />
    <CreationDate amount="2005-03-09 16:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Infinte loop obtaining image when switching to Debug Perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050308-1510

Create a Java Project using Java 5 (not sure it matters)
Create a class which implements java.io.Serializable
Use the "Add generated serial version ID" quickfix
Switch to the Debug perspective

3XMTHREADINFO      "main" (TID:0x02A08A00, sys_thread_t:0x000356F4, state:CW,
native ID:0x000009F4) prio=6
4XESTACKTRACE          at java/lang/Throwable.printStackTrace(Throwable.java:241)
4XESTACKTRACE          at
org/eclipse/core/runtime/CoreException.printStackTrace(CoreException.java:94)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.getStackTrace(EclipseLog.java:316)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.writeStack(EclipseLog.java:372)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.writeLog(EclipseLog.java:337)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.log(EclipseLog.java:208)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/PlatformLogWriter.logging(PlatformLogWriter.java:35)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform$1.run(InternalPlatform.java:831)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.log(InternalPlatform.java:834)
4XESTACKTRACE          at org/eclipse/core/internal/runtime/Log.log(Log.java:56)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DebugUIPlugin.log(DebugUIPlugin.java:497)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DebugUIPlugin.log(DebugUIPlugin.java:506)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImageKey(DefaultLabelProvider.java:133)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:57)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
...
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/DebugViewInterimLabelProvider.getImage(DebugViewInterimLabelProvider.java:62)
4XESTACKTRACE          at
org/eclipse/jface/viewers/DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:82)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/RemoteTreeViewer.doUpdateItem(RemoteTreeViewer.java:448)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:86)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:490)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:352)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.updateItem(StructuredViewer.java:1655)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1621)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1109)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1086)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1047)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1034)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer$7.run(StructuredViewer.java:1172)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.preservingSelection(StructuredViewer.java:1109)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.refresh(StructuredViewer.java:1170)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/LaunchViewer.refresh(LaunchViewer.java:80)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.refresh(StructuredViewer.java:1129)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandler.refresh(AbstractDebugEventHandler.java:255)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandler.viewBecomesVisible(AbstractDebugEventHandler.java:348)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandlerView.becomesVisible(AbstractDebugEventHandlerView.java:69)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/LaunchView.becomesVisible(LaunchView.java:1061)
4XESTACKTRACE          at
org/eclipse/debug/ui/AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:162)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2$7.run(PartListenerList2.java:168)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2.fireEvent(PartListenerList2.java:54)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2.firePartVisible(PartListenerList2.java:166)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage$1.propertyChange(WorkbenchPage.java:179)
4XESTACKTRACE          at
org/eclipse/ui/internal/LayoutPart.setVisible(LayoutPart.java:305)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartPane.setVisible(PartPane.java:331)
4XESTACKTRACE          at
org/eclipse/ui/internal/ViewPane.setVisible(ViewPane.java:614)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/PresentablePart.setVisible(PresentablePart.java:126)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/PresentablePartFolder.select(PresentablePartFolder.java:266)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/TabbedStackPresentation.selectPart(TabbedStackPresentation.java:391)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.refreshPresentationSelection(PartStack.java:1051)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.createControl(PartStack.java:536)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.createControl(PartStack.java:473)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartSashContainer.createControl(PartSashContainer.java:485)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveHelper.activate(PerspectiveHelper.java:230)
4XESTACKTRACE          at
org/eclipse/ui/internal/Perspective.onActivate(Perspective.java:773)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.setPerspective(WorkbenchPage.java:2829)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.busySetPerspective(WorkbenchPage.java:845)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.access$10(WorkbenchPage.java:830)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage$13.run(WorkbenchPage.java:2980)
4XESTACKTRACE          at
org/eclipse/swt/custom/BusyIndicator.showWhile(BusyIndicator.java:69)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.setPerspective(WorkbenchPage.java:2978)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:109)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarManager$1.widgetSelected(PerspectiveBarManager.java:145)
4XESTACKTRACE          at
org/eclipse/swt/widgets/TypedListener.handleEvent(TypedListener.java:89)
4XESTACKTRACE          at
org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:82)
4XESTACKTRACE          at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:842)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:2894)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:2527)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarManager.handleChevron(PerspectiveBarManager.java:161)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveSwitcher$9.widgetSelected(PerspectiveSwitcher.java:766)
4XESTACKTRACE          at
org/eclipse/swt/widgets/TypedListener.handleEvent(TypedListener.java:89)
4XESTACKTRACE          at
org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:82)
4XESTACKTRACE          at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:842)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:2894)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:2527)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.runEventLoop(Workbench.java:1514)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.runUI(Workbench.java:1478)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.createAndRunWorkbench(Workbench.java:297)
4XESTACKTRACE          at
org/eclipse/ui/PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
4XESTACKTRACE          at
org/eclipse/ui/internal/ide/IDEApplication.run(IDEApplication.java:103)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/PlatformActivator$1.run(PlatformActivator.java:228)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:338)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:151)
4XESTACKTRACE          at sun/reflect/NativeMethodAccessorImpl.invoke0(Native
Method)
4XESTACKTRACE          at
sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
4XESTACKTRACE          at
sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
4XESTACKTRACE          at
sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
4XESTACKTRACE          at java/lang/reflect/Method.invoke(Method.java:391)
4XESTACKTRACE          at
org/eclipse/core/launcher/Main.invokeFramework(Main.java:268)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.basicRun(Main.java:260)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.run(Main.java:887)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.main(Main.java:871)
Fixed in DefaultLabelProvider. The launch config type for computing the serial 
ID did not contribute an image, and caused the infinite loop.

The fix is to shortcut the image lookup for the case of a launch with no 
contributed image.
Please verify, Kevin.
We should look at the bigger problem. The adatper consults the helper which 
consults the adapter. The same problem could happen elsewhere.
On second look, this fix will have to do. The pattern is this:

* the adapter asks the debug element helper for an image
* the helper asks the delegting model presentation for an image
* if there is no image, we return the default image
* the default image consults the adapter (loop)

However, this is required as views that do not use a workbench label provider 
(i.e. use the standard debug model presentation) should still consult the 
adapter.

Will need to address on a case by case basis if other problems arise.
Please verify, Kevin.
verified
*** Bug 86189 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I20050308-1510

Create a Java Project using Java 5 (not sure it matters)
Create a class which implements java.io.Serializable
Use the "Add generated serial version ID" quickfix
Switch to the Debug perspective

3XMTHREADINFO      "main" (TID:0x02A08A00, sys_thread_t:0x000356F4, state:CW,
native ID:0x000009F4) prio=6
4XESTACKTRACE          at java/lang/Throwable.printStackTrace(Throwable.java:241)
4XESTACKTRACE          at
org/eclipse/core/runtime/CoreException.printStackTrace(CoreException.java:94)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.getStackTrace(EclipseLog.java:316)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.writeStack(EclipseLog.java:372)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.writeLog(EclipseLog.java:337)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseLog.log(EclipseLog.java:208)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/PlatformLogWriter.logging(PlatformLogWriter.java:35)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform$1.run(InternalPlatform.java:831)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.log(InternalPlatform.java:834)
4XESTACKTRACE          at org/eclipse/core/internal/runtime/Log.log(Log.java:56)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DebugUIPlugin.log(DebugUIPlugin.java:497)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DebugUIPlugin.log(DebugUIPlugin.java:506)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImageKey(DefaultLabelProvider.java:133)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:57)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
...
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)
4XESTACKTRACE          at
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage(DefaultLabelProvider.java:61)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/DebugViewInterimLabelProvider.getImage(DebugViewInterimLabelProvider.java:62)
4XESTACKTRACE          at
org/eclipse/jface/viewers/DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:82)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/RemoteTreeViewer.doUpdateItem(RemoteTreeViewer.java:448)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:86)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:490)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:352)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.updateItem(StructuredViewer.java:1655)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1621)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1109)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1086)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1047)
4XESTACKTRACE          at
org/eclipse/jface/viewers/AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1034)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer$7.run(StructuredViewer.java:1172)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.preservingSelection(StructuredViewer.java:1109)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.refresh(StructuredViewer.java:1170)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/LaunchViewer.refresh(LaunchViewer.java:80)
4XESTACKTRACE          at
org/eclipse/jface/viewers/StructuredViewer.refresh(StructuredViewer.java:1129)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandler.refresh(AbstractDebugEventHandler.java:255)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandler.viewBecomesVisible(AbstractDebugEventHandler.java:348)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/AbstractDebugEventHandlerView.becomesVisible(AbstractDebugEventHandlerView.java:69)
4XESTACKTRACE          at
org/eclipse/debug/internal/ui/views/launch/LaunchView.becomesVisible(LaunchView.java:1061)
4XESTACKTRACE          at
org/eclipse/debug/ui/AbstractDebugView$DebugViewPartListener.partVisible(AbstractDebugView.java:162)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2$7.run(PartListenerList2.java:168)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1015)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:757)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2.fireEvent(PartListenerList2.java:54)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartListenerList2.firePartVisible(PartListenerList2.java:166)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage$1.propertyChange(WorkbenchPage.java:179)
4XESTACKTRACE          at
org/eclipse/ui/internal/LayoutPart.setVisible(LayoutPart.java:305)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartPane.setVisible(PartPane.java:331)
4XESTACKTRACE          at
org/eclipse/ui/internal/ViewPane.setVisible(ViewPane.java:614)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/PresentablePart.setVisible(PresentablePart.java:126)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/PresentablePartFolder.select(PresentablePartFolder.java:266)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
4XESTACKTRACE          at
org/eclipse/ui/internal/presentations/newapi/TabbedStackPresentation.selectPart(TabbedStackPresentation.java:391)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.refreshPresentationSelection(PartStack.java:1051)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.createControl(PartStack.java:536)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartStack.createControl(PartStack.java:473)
4XESTACKTRACE          at
org/eclipse/ui/internal/PartSashContainer.createControl(PartSashContainer.java:485)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveHelper.activate(PerspectiveHelper.java:230)
4XESTACKTRACE          at
org/eclipse/ui/internal/Perspective.onActivate(Perspective.java:773)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.setPerspective(WorkbenchPage.java:2829)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.busySetPerspective(WorkbenchPage.java:845)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.access$10(WorkbenchPage.java:830)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage$13.run(WorkbenchPage.java:2980)
4XESTACKTRACE          at
org/eclipse/swt/custom/BusyIndicator.showWhile(BusyIndicator.java:69)
4XESTACKTRACE          at
org/eclipse/ui/internal/WorkbenchPage.setPerspective(WorkbenchPage.java:2978)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarContributionItem.select(PerspectiveBarContributionItem.java:109)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarManager$1.widgetSelected(PerspectiveBarManager.java:145)
4XESTACKTRACE          at
org/eclipse/swt/widgets/TypedListener.handleEvent(TypedListener.java:89)
4XESTACKTRACE          at
org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:82)
4XESTACKTRACE          at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:842)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:2894)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:2527)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveBarManager.handleChevron(PerspectiveBarManager.java:161)
4XESTACKTRACE          at
org/eclipse/ui/internal/PerspectiveSwitcher$9.widgetSelected(PerspectiveSwitcher.java:766)
4XESTACKTRACE          at
org/eclipse/swt/widgets/TypedListener.handleEvent(TypedListener.java:89)
4XESTACKTRACE          at
org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:82)
4XESTACKTRACE          at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:842)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:2894)
4XESTACKTRACE          at
org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:2527)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.runEventLoop(Workbench.java:1514)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.runUI(Workbench.java:1478)
4XESTACKTRACE          at
org/eclipse/ui/internal/Workbench.createAndRunWorkbench(Workbench.java:297)
4XESTACKTRACE          at
org/eclipse/ui/PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
4XESTACKTRACE          at
org/eclipse/ui/internal/ide/IDEApplication.run(IDEApplication.java:103)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/PlatformActivator$1.run(PlatformActivator.java:228)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:338)
4XESTACKTRACE          at
org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:151)
4XESTACKTRACE          at sun/reflect/NativeMethodAccessorImpl.invoke0(Native
Method)
4XESTACKTRACE          at
sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
4XESTACKTRACE          at
sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
4XESTACKTRACE          at
sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
4XESTACKTRACE          at java/lang/reflect/Method.invoke(Method.java:391)
4XESTACKTRACE          at
org/eclipse/core/launcher/Main.invokeFramework(Main.java:268)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.basicRun(Main.java:260)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.run(Main.java:887)
4XESTACKTRACE          at org/eclipse/core/launcher/Main.main(Main.java:871)
Fixed in DefaultLabelProvider. The launch config type for computing the serial 
ID did not contribute an image, and caused the infinite loop.

The fix is to shortcut the image lookup for the case of a launch with no 
contributed image.
Please verify, Kevin.
We should look at the bigger problem. The adatper consults the helper which 
consults the adapter. The same problem could happen elsewhere.
On second look, this fix will have to do. The pattern is this:

* the adapter asks the debug element helper for an image
* the helper asks the delegting model presentation for an image
* if there is no image, we return the default image
* the default image consults the adapter (loop)

However, this is required as views that do not use a workbench label provider 
(i.e. use the standard debug model presentation) should still consult the 
adapter.

Will need to address on a case by case basis if other problems arise.
Please verify, Kevin.
verified
*** Bug 86189 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87570" />
    <CreationDate amount="2005-03-09 16:50:00 -0500" />
    <DupId amount="86167" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5] weird code assist in package-info.java</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="assignment">
        <location start="149" end="174" />
        <code>@Annot(id = 4) package p;</code>
      </source_code>
      <source_code type="class">
        <location start="176" end="215" />
        <code>class Z extends &lt;code assist here&gt; {

}</code>
      </source_code>
      <source_code type="assignment">
        <location start="509" end="580" />
        <code>if (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue;</code>
      </source_code>
      <source_code type="assignment">
        <location start="589" end="660" />
        <code>if (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1) apply the patch from bug 86167.</Line>
          <Line>2) create a package-info.java file in a package p;</Line>
          <Line>3) Type the following without &lt;code assist here&gt;.</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>4) Code assist where specified.</Line>
          <Line>5) package-info is inserted. I have no idea where it is coming from. The fake</Line>
          <Line>interface declaration package-info has been removed from the search or the indexer.</Line>
          <Line>I think the problem comes from the fact that I need to exclude this fake type</Line>
          <Line>binding.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In latest,

1) apply the patch from bug 86167.
2) create a package-info.java file in a package p;
3) Type the following without &lt;code assist here&gt;.

@Annot(id = 4) package p;

class Z extends &lt;code assist here&gt; {

}
4) Code assist where specified.
5) package-info is inserted. I have no idea where it is coming from. The fake
interface declaration package-info has been removed from the search or the indexer.
I think the problem comes from the fact that I need to exclude this fake type
binding.

Inserting:
if (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue;

after:
if (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue;

solved the problem.
Closing as duplicate of bug 86167, because this fix should be released as a fix
for 86167. It is part of the support for the package-info file.

*** This bug has been marked as a duplicate of 86167 ***</WithStack>
    <WithOutStack>In latest,

1) apply the patch from bug 86167.
2) create a package-info.java file in a package p;
3) Type the following without &lt;code assist here&gt;.

@Annot(id = 4) package p;

class Z extends &lt;code assist here&gt; {

}
4) Code assist where specified.
5) package-info is inserted. I have no idea where it is coming from. The fake
interface declaration package-info has been removed from the search or the indexer.
I think the problem comes from the fact that I need to exclude this fake type
binding.

Inserting:
if (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue;

after:
if (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue;

solved the problem.
Closing as duplicate of bug 86167, because this fix should be released as a fix
for 86167. It is part of the support for the package-info file.

*** This bug has been marked as a duplicate of 86167 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87571" />
    <CreationDate amount="2005-03-09 16:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Run As SWT Application" doesn't work on Motif</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242343">
        <Exception>java.lang.UnsatisfiedLinkError</Exception>
        <Reason>no swt-win32-3128 in java.library.path</Reason>
        <Frames>
          <Frame depth="0">java.lang.ClassLoader.loadLibrary(Unknown Source)</Frame>
          <Frame depth="1">java.lang.Runtime.loadLibrary0(Unknown Source)</Frame>
          <Frame depth="2">java.lang.System.loadLibrary(Unknown Source)</Frame>
          <Frame depth="3">org.eclipse.swt.internal.Library.loadLibrary(Library.java:123)</Frame>
          <Frame depth="4">org.eclipse.swt.internal.win32.OS.&lt;clinit&gt;(OS.java:18)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Display.&lt;clinit&gt;(Display.java:125)</Frame>
          <Frame depth="6">test.swt.SwtTest.main(SwtTest.java:10)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build: 3.1M5a 
 
I get the following stack trace when I try to run an SWT program. 
 
Exception in thread "main" java.lang.UnsatisfiedLinkError: /home/sonia/
Documents/Eclipse3.1M5aMotif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/os/
linux/x86/libswt-motif-3123.so: libXm.so.2: cannot open shared object file: No 
such file or directory 
	at java.lang.ClassLoader$NativeLibrary.load(Native Method) 
	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1586) 
	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1511) 
	at java.lang.Runtime.loadLibrary0(Runtime.java:788) 
	at java.lang.System.loadLibrary(System.java:834) 
	at org.eclipse.swt.internal.Library.loadLibrary(Library.java:123) 
	at org.eclipse.swt.internal.motif.OS.&lt;clinit&gt;(OS.java:18) 
	at org.eclipse.swt.graphics.Device.&lt;clinit&gt;(Device.java:107) 
	at TrimTest.main(TrimTest.java:7)
Who provides the SWT launch?
PDE...
Chris, any idea why this would happen?
I have a similar problem since Eclipse 3.1M6. I created and successfully
compiled an example SWT class and tried to run it as "SWT Application":

java.lang.UnsatisfiedLinkError: no swt-win32-3128 in java.library.path
	at java.lang.ClassLoader.loadLibrary(Unknown Source)
	at java.lang.Runtime.loadLibrary0(Unknown Source)
	at java.lang.System.loadLibrary(Unknown Source)
	at org.eclipse.swt.internal.Library.loadLibrary(Library.java:123)
	at org.eclipse.swt.internal.win32.OS.&lt;clinit&gt;(OS.java:18)
	at org.eclipse.swt.widgets.Display.&lt;clinit&gt;(Display.java:125)
	at test.swt.SwtTest.main(SwtTest.java:10)
Exception in thread "main"

The problem mentioned in comment #4 seems to be a bug in Eclipse 3.1M6 on
Windows XP and Mac OS X (not tested on Linux). On Eclipse 3.1M5 on WinXP the
"Run as SWT Application" action worked fine.
In response to comment 3: I don't think we've seen this (M5A motif problem). 
CC'ing Grant on this.

Regarding M6 specific problems: this is bug 88669
Pratik, do you get a similar error if you try to start eclipse from a directory 
other than the one with eclipse's executable (eg.- try "./eclipse/eclipse &amp;")?  

I suspect that your problem would go away if you set your LD_LIBRARY_PATH to 
eclipse's root directory before running eclipse.  Can you try this too?

./eclipse/eclipse didn't work becuase it couldn't find libXm.so.2.  Once I set 
the LD_LIBRARY_PATH, everything worked fine.  

So, is this still a bug?  Or are we expected to set the LD_LIBRARY_PATH each 
time?

The LD_LIBRARY_PATH needs to be set, see 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#usingLesstif .  You obviously don't have lesstif installed on 
your machine, but the problem is the same, that the shipped OpenMotif libraries 
can't be found by the swt library.  So there's nothing for PDE to do here.

thanks Grant.  closing.</WithStack>
    <WithOutStack>Build: 3.1M5a 
 
I get the following stack trace when I try to run an SWT program. 
 
Exception in thread "main" java.lang.UnsatisfiedLinkError: /home/sonia/
Documents/Eclipse3.1M5aMotif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/os/
linux/x86/libswt-motif-3123.so: libXm.so.2: cannot open shared object file: No 
such file or directory 
	at java.lang.ClassLoader$NativeLibrary.load(Native Method) 
	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1586) 
	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1511) 
	at java.lang.Runtime.loadLibrary0(Runtime.java:788) 
	at java.lang.System.loadLibrary(System.java:834) 
	at org.eclipse.swt.internal.Library.loadLibrary(Library.java:123) 
	at org.eclipse.swt.internal.motif.OS.&lt;clinit&gt;(OS.java:18) 
	at org.eclipse.swt.graphics.Device.&lt;clinit&gt;(Device.java:107) 
	at TrimTest.main(TrimTest.java:7)
Who provides the SWT launch?
PDE...
Chris, any idea why this would happen?
I have a similar problem since Eclipse 3.1M6. I created and successfully
compiled an example SWT class and tried to run it as "SWT Application":


Exception in thread "main"

The problem mentioned in comment #4 seems to be a bug in Eclipse 3.1M6 on
Windows XP and Mac OS X (not tested on Linux). On Eclipse 3.1M5 on WinXP the
"Run as SWT Application" action worked fine.
In response to comment 3: I don't think we've seen this (M5A motif problem). 
CC'ing Grant on this.

Regarding M6 specific problems: this is bug 88669
Pratik, do you get a similar error if you try to start eclipse from a directory 
other than the one with eclipse's executable (eg.- try "./eclipse/eclipse &amp;")?  

I suspect that your problem would go away if you set your LD_LIBRARY_PATH to 
eclipse's root directory before running eclipse.  Can you try this too?

./eclipse/eclipse didn't work becuase it couldn't find libXm.so.2.  Once I set 
the LD_LIBRARY_PATH, everything worked fine.  

So, is this still a bug?  Or are we expected to set the LD_LIBRARY_PATH each 
time?

The LD_LIBRARY_PATH needs to be set, see 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#usingLesstif .  You obviously don't have lesstif installed on 
your machine, but the problem is the same, that the shipped OpenMotif libraries 
can't be found by the swt library.  So there's nothing for PDE to do here.

thanks Grant.  closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87572" />
    <CreationDate amount="2005-03-09 16:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Snippet update kicking in during top down updates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Create a new Shell file and drop a Composite. This for some reason triggers a
snippet update process. I think this is happening because changes in the model
are not being done via the ModelChangeController, and becuase of which the
document listeners are still listening to the changes from the UI.
With Rich's help releasing class
org.eclipse.ve.internal.cde.core.ModelChangeController. 
The problem was that a boolean test was coded wrongly and hence the document
listeners were not being removed before changes were being made to the source.
Now snippet updates dont happen when UI changes are being made.
*** Bug 87508 has been marked as a duplicate of this bug. ***
Verified in VE Nightly Build N20050310
Verified in VE 1.1M1 testpass. closing.</WithStack>
    <WithOutStack>Create a new Shell file and drop a Composite. This for some reason triggers a
snippet update process. I think this is happening because changes in the model
are not being done via the ModelChangeController, and becuase of which the
document listeners are still listening to the changes from the UI.
With Rich's help releasing class
org.eclipse.ve.internal.cde.core.ModelChangeController. 
The problem was that a boolean test was coded wrongly and hence the document
listeners were not being removed before changes were being made to the source.
Now snippet updates dont happen when UI changes are being made.
*** Bug 87508 has been marked as a duplicate of this bug. ***
Verified in VE Nightly Build N20050310
Verified in VE 1.1M1 testpass. closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87573" />
    <CreationDate amount="2005-03-09 16:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT3.1 #34 - Readme View is missing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Note:  assigned to UI, but not sure

On the menu bar from the main Workbench panel, click Window &gt; Customize Perspective
Select Shortcuts Tab 
Select Show View  under Submenus
Select Readme in Shortcut Categories

Readme is missing, has this been removed from the product?
Created attachment 18610
Screenshot with Readme View
Created attachment 18612
Hungarian Screenshot with No readme view
Readme is an example view from the examples plugins.
thanks</WithStack>
    <WithOutStack>Note:  assigned to UI, but not sure

On the menu bar from the main Workbench panel, click Window &gt; Customize Perspective
Select Shortcuts Tab 
Select Show View  under Submenus
Select Readme in Shortcut Categories

Readme is missing, has this been removed from the product?
Created attachment 18610
Screenshot with Readme View
Created attachment 18612
Hungarian Screenshot with No readme view
Readme is an example view from the examples plugins.
thanks</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87574" />
    <CreationDate amount="2005-03-09 17:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The jarsigner call is only executed when the jarup target is being called</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In pde.build, the assembler / packager is responsible to sign jars.
This is being done as part of the jarup target. 

The fact that the signing is part of the jaring step is problematic since pde 
can not sign existing jars (jaring seems to do nothing then it is being asked 
to jar a jar).
Interesting.  It is unclear what should happne here.  If I have jars in my 
target and they are signed by someone, do I want to sign them again as myself?  
Another option here is to assume/require that the jars in the target are signed 
by someone and just copy them wholesale.
I think here there are two issues:
1 - do we want to re-sign something that has already been signed
2 - sign an existing jar

The second issue needs to be fixed otherwise JNLP export (which requires
signing) will not be able to sign jars from the target.
alternatively we can provide a way of signing random jars.  Users would then 
point at their target and say "sign it" rather than signing and resigning every 
time they build.  seems more efficient.
This will have to adressed in 3.1 time frame otherwise people doing JNLP app
will have to sign their jars manually.
Jeff what do you think?
Ideally we can offer to sign them even if they come from the target.  This is 
ok for 3.1 polish but certainly we can ship without it.  Agree?
agreed
Fixed in HEAD.</WithStack>
    <WithOutStack>In pde.build, the assembler / packager is responsible to sign jars.
This is being done as part of the jarup target. 

The fact that the signing is part of the jaring step is problematic since pde 
can not sign existing jars (jaring seems to do nothing then it is being asked 
to jar a jar).
Interesting.  It is unclear what should happne here.  If I have jars in my 
target and they are signed by someone, do I want to sign them again as myself?  
Another option here is to assume/require that the jars in the target are signed 
by someone and just copy them wholesale.
I think here there are two issues:
1 - do we want to re-sign something that has already been signed
2 - sign an existing jar

The second issue needs to be fixed otherwise JNLP export (which requires
signing) will not be able to sign jars from the target.
alternatively we can provide a way of signing random jars.  Users would then 
point at their target and say "sign it" rather than signing and resigning every 
time they build.  seems more efficient.
This will have to adressed in 3.1 time frame otherwise people doing JNLP app
will have to sign their jars manually.
Jeff what do you think?
Ideally we can offer to sign them even if they come from the target.  This is 
ok for 3.1 polish but certainly we can ship without it.  Agree?
agreed
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87575" />
    <CreationDate amount="2005-03-09 17:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ensure that plugins with . and another jar on the classpath work properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The support to build plugins with . on the classpath is working.
However we need to ensure that a plugin which would have . and a jar on its 
classpath can be built successfully.
Verified. I tried on org.eclipse.core.resources.
Marking as fixed</WithStack>
    <WithOutStack>The support to build plugins with . on the classpath is working.
However we need to ensure that a plugin which would have . and a jar on its 
classpath can be built successfully.
Verified. I tried on org.eclipse.core.resources.
Marking as fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87576" />
    <CreationDate amount="2005-03-09 17:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Cannot change style value of toolItem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>eclipse3.1m5a + latest nightly VE build

Create a new shell.  Add a toolbar to the shell.  Add a toolItem (.check,
.radio, etc).  Try to change the style value from PUSH to CHECK or RADIO. 
Changes are reflected in code, but not in property sheet.  No errors thrown.
This bug is no longer present in Nightly Build N20050310.  Must have been a
duplicate of something else that was fixed.
Verified in VE Nightly Build N20050310</WithStack>
    <WithOutStack>eclipse3.1m5a + latest nightly VE build

Create a new shell.  Add a toolbar to the shell.  Add a toolItem (.check,
.radio, etc).  Try to change the style value from PUSH to CHECK or RADIO. 
Changes are reflected in code, but not in property sheet.  No errors thrown.
This bug is no longer present in Nightly Build N20050310.  Must have been a
duplicate of something else that was fixed.
Verified in VE Nightly Build N20050310</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87577" />
    <CreationDate amount="2005-03-09 17:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GC.drawImage() with rescaling does not optimize clipped draws</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="12">
      <source_code type="functiondef">
        <location start="2137" end="2176" />
        <code>public void paintCanvas(PaintEvent e) {</code>
      </source_code>
      <source_code type="assignment">
        <location start="2177" end="2191" />
        <code>GC gc = e.gc;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2192" end="2231" />
        <code>Rectangle clipping = gc.getClipping();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2232" end="2304" />
        <code>int width = image.getBounds().width, height = image.getBounds().height;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2305" end="2342" />
        <code>for (int i = 0; i &lt; numTiles; i++) {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2343" end="2381" />
        <code>for (int j = 0; j &lt; numTiles; j++) {</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2521" end="2579" />
        <code>(int)(height*scale));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2580" end="2622" />
        <code>if(!cur.intersects(clipping)) continue;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6137" end="7505" />
        <code>public static void main (String [] args) {
  Display display = new Display ();
  Shell shell = new Shell (display);
  shell.setLayout(new FillLayout());
  Button b = new Button(shell, SWT.PUSH);
  b.setText("Draw image 10 times");
  final Canvas c = new Canvas(shell, SWT.NO_BACKGROUND);		
  String imageFilename = "c:\\testimage.jpg";
  //String imageFilename = "/tmp/testimage.jpg";
  final Image image = new Image(display, imageFilename);
  final int width = image.getBounds().width;
  final int height = image.getBounds().height;
  b.addListener(SWT.Selection, new Listener() {
    float scale = 2.0f;
    public void handleEvent(Event event) {
      GC gc = new GC(c);
      long before = System.currentTimeMillis();
      for(int i = 0; i &lt; 10; i++) { 
        gc.drawImage(image, 0, 0, width, height, 0,0, (int)(width*scale),
                     (int)(height*scale));
      }
      long after = System.currentTimeMillis();
      double average = ((double) (after - before)) / 10.0;
      System.out.println(average+" ms (average)");
    }
  });
  c.addListener(SWT.Paint, new Listener() {
    public void handleEvent(Event event) {
      event.gc.fillRectangle(event.gc.getClipping());
    }
  });
  shell.setSize(1024, 768);
  shell.open ();
  while (!shell.isDisposed ()) {
    if (!display.readAndDispatch ()) display.sleep ();
  }
  display.dispose ();		
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="8690" end="8732" />
        <code>public void handleEvent(Event event) {</code>
      </source_code>
      <source_code type="assignment">
        <location start="8733" end="8759" />
        <code>GC gc = new GC(c);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8760" end="8804" />
        <code>gc.setClipping(0, 0, width, height);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1) It doesn't appear that Windows _always_ takes &lt;1 milliseconds to render the</Line>
          <Line>image, but most of the time it does.  There are some cases I've seen where, with</Line>
          <Line>Billy's optimization in place, the milliseconds that are reported are 10.</Line>
          <Line>Still, 75% of the time it is less than 1 (printed as 0).</Line>
          <Line />
          <Line>2) To really see the scrolling-repaint performance issue I mentioned in my</Line>
          <Line>previous comment, it is important that the window be as large as possible (fully</Line>
          <Line>maximized it is most obvious.)</Line>
          <Line>Re-reading my previous comment, I realize now that I probably didn't clearly</Line>
          <Line>explain what I meant by "cheese" or regions containing old pixels as repaints</Line>
          <Line>happen during a scroll.  Please permit me to try once more.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When GTK has to rescale an image in a call to GC.drawImage(image, srcRect,
destRect) where srcRect != destRect, the performance is an order of magnitude
worse than on Windows.

I have attached a snippet and an image file to demonstrate. (The snippet expects
an image file as input.)

Typical output I see when running this snippet on comparable machines (dual
processor 1.7 Ghz Linux desktop with 2 GB RAM, Windows 2.1 Ghz single processor
laptop with 2 GB RAM), I get the following output printed to console when I
compare System.currentTimeMillis() before and after the drawImage() invocation:
Linux: 10 ms on average, varying between 8 and 12
Windows: &lt; 1 ms on average, and I always saw 0 ms on console, indicating that
the rendering performance is faster than the accuracy of the clock time returned
by currentTimeMillis() on Windows (which is impressive).

I ran my tests with Eclipse 3.1M4 on both platforms.
Created attachment 18614
SWT snippet demonstrating rescale performance difference between Windows and Linux/GTK
Created attachment 18615
Image file for snippet (required as command-line-arg input)
I'll give it a try ...
Incidentally, I just tried this on Linux/GTK with Eclipse 3.1 M5A and got pretty
similar performance, although the average milliseconds I print out before/after
drawImage() dropped from 10 to about 7.  So someone may have shaved a couple of
milliseconds from the rendering performance recently. 

You are drawing all 1600 images every paint.  This is causing a lot of extra
work to be done on both Windows and Linux, although much worse on Linux.

On Windows, you can scale images using a single StretchBlt() call.  This seems
to take into account the current clipping rectangle.  If the image is not
visible, no work is done, and I think this is why most of the calls are taking
almost 0 time.  On Linux, SWT scales the image using GdkPixbuf and then draws it
to the screen.  The drawing is cheaper if it is not visible, but the scaling
always costs a lot of time.

Try this modification to your paintCanvas() call to first check to make sure
that the current image is actually in the damaged area:

public void paintCanvas(PaintEvent e) {
	GC gc = e.gc;
	Rectangle clipping = gc.getClipping();
	int width = image.getBounds().width, height = image.getBounds().height;
	for (int i = 0; i &lt; numTiles; i++) {
		for (int j = 0; j &lt; numTiles; j++) {
			Rectangle cur = new Rectangle((int)(i * width * scale),
                                     (int)(j*height*scale), (int)(width*scale),
                                     (int)(height*scale));
			if(!cur.intersects(clipping)) continue;
I tried your enhancement, and it does cut down on the number of paints.
However, what I was trying to demonstrate in my snippet (perhaps a bit too
melodramatically) is that invoking drawImage() on GTK that requires a rescale is
something we need to see sped up.  Even though we're doing just 2 or 3
drawImage() invocations whenever I move the scroll bar in this example to expose
a new area, it takes 10+ milliseconds where on Windows it's less than 1.  On GTK
when I run my example with your optimization in place and I smoothly drag the
thumb of the scroll bars, I can see a lot of repaints happening slowly, leaving
a trail of "cheese" if you want to call it that, or regions of the Canvas that
contain old pixels during the scroll that I don't see when I'm running it on
Windows, even without your optimization.

I'm not sure if I can provide any additional help on this...what we're asking
for is basically if there's anything you can do in the SWT implementation
(perhaps using the advanced graphic capability) to speed up this rendering to do
so, or if the problem is in GTK to pursue the issue with the GTK developers.

Thanks very much for your help on this!
Two additional comments I should add:
1) It doesn't appear that Windows _always_ takes &lt;1 milliseconds to render the
image, but most of the time it does.  There are some cases I've seen where, with
Billy's optimization in place, the milliseconds that are reported are 10. 
Still, 75% of the time it is less than 1 (printed as 0).

2) To really see the scrolling-repaint performance issue I mentioned in my
previous comment, it is important that the window be as large as possible (fully
maximized it is most obvious.)
Re-reading my previous comment, I realize now that I probably didn't clearly
explain what I meant by "cheese" or regions containing old pixels as repaints
happen during a scroll.  Please permit me to try once more.

I run the example snippet (with your optimization added) on Linux and make the
view the full size of the screen.  When I drag a scrollbar thumb along, it
exposes new regions of the Canvas to be painted.  As I continue dragging in a
smooth motion, I often see these new regions containing the old pixels that were
there before the most recent scroll bar move event.  Shortly after I release the
thumb, the Canvas does finish repainting entirely.  It is during the scrollbar
movement that newly-exposed regions of the Canvas have old pixels that are still
visible (I presume that haven't been repainted yet and the old pixels are still
hanging about).

This may seem like a trifle, but it makes the difference for my application
between a view that renders smoothly as you scroll it (as it already does on
Windows) and one that doesn't (GTK).
I see the same "cheese" on both Windows and Linux.  It is not smooth in either
case for me.  What video card are you using on the Windows machine?  I believe
the effect you are seeing may be due to hardware acceleration.

The following application is a small and crude benchmark for drawImage() that
attempts to ignore the effects of scrolling and clipping.  On my Windows
machine, the average time it reports is about 22 milliseconds.  On Linux, it
reports an average of 13 milliseconds.  Both machines are 2.53 GHz P4s with 1GB
of RAM and an Intel i845 video adapter.

My understanding is that StretchBlt is accelerated by many drivers on Windows. 
If this is the case in your situation, it may explain why your example works so
well on your machine, but not on mine.

public static void main (String [] args) {
  Display display = new Display ();
  Shell shell = new Shell (display);
  shell.setLayout(new FillLayout());
  Button b = new Button(shell, SWT.PUSH);
  b.setText("Draw image 10 times");
  final Canvas c = new Canvas(shell, SWT.NO_BACKGROUND);		
  String imageFilename = "c:\\testimage.jpg";
  //String imageFilename = "/tmp/testimage.jpg";
  final Image image = new Image(display, imageFilename);
  final int width = image.getBounds().width;
  final int height = image.getBounds().height;
  b.addListener(SWT.Selection, new Listener() {
    float scale = 2.0f;
    public void handleEvent(Event event) {
      GC gc = new GC(c);
      long before = System.currentTimeMillis();
      for(int i = 0; i &lt; 10; i++) { 
        gc.drawImage(image, 0, 0, width, height, 0,0, (int)(width*scale),
                     (int)(height*scale));
      }
      long after = System.currentTimeMillis();
      double average = ((double) (after - before)) / 10.0;
      System.out.println(average+" ms (average)");
    }
  });
  c.addListener(SWT.Paint, new Listener() {
    public void handleEvent(Event event) {
      event.gc.fillRectangle(event.gc.getClipping());
    }
  });
  shell.setSize(1024, 768);
  shell.open ();
  while (!shell.isDisposed ()) {
    if (!display.readAndDispatch ()) display.sleep ();
  }
  display.dispose ();		
}
On my Windows machine I am running an ATI mobility Radeon 9700 (a brand new
laptop), and on the Linux workstation I'm running an NVidia Quadro FX 2000
(about a year old, but still better than average).  I'm not sure what an Intel
i845 can do.  It seems that the kind of hardware acceleration you mean should be
supported by my NVidia card, but perhaps isn't being taken advantage of in GTK?

Should I run your benchmark on my machines and report the results?
Please run the benchmark and post the results to confirm.
For the benchmark that renders an image at 2*scale 10 times and computes the
average time:

I see between 7 and 10 with a median around 8 on Linux.
I see between 3 and 5 with a median around 3 on Windows.
These numbers seem more reasonable.  The performance difference is not enough to
conclude that hardware acceleration is used by Windows, but I suspect it is
(also because of the large difference between your results and mine).

The benchmark reports 3-5 ms while before you saw many zeros.  I believe the
efficiency here is entirely due to clipping.  In the benchmark, try adding a
call to set the clipping so you're only drawing a quarter of the scaled image:

    public void handleEvent(Event event) {
        GC gc = new GC(c);
        gc.setClipping(0, 0, width, height);

On my Windows machine, this sped up the benchmark a lot (down to 7 ms), while
the speedup under Linux was much smaller (down to 10 ms).

So, I think we are left with two differences:

1. Clipping

Image scaling on Windows is efficient: it will only scale what will be drawn to
the screen.  Applications can be more efficient on Linux by performing clipping
themselves: in your paint event handler, you can change your calls to
drawImage() to only scale what you require by tweaking the source and
destination rectangles.  I am not convinced that this optimization belongs in
SWT, as for many applications computing the clipping and scaling offsets would
be too expensive to be worth it.

2. Hardware acceleration

On some Windows machines (but not all), scaling is cheap because it is done in
hardware.  Unfortunately, the core X protocol has no scaling operations.  While
a transformation API does now exist in the RENDER extension, my understanding is
that video card drivers under Linux do not yet support this part of RENDER. 
However, even if it were in software, if it took into account the clipping it
may be faster anyway.  This may be worth investigating.  Using OpenGL is a
better way to find hardware acceleration features under Linux, but not always
appropriate.

  (On this topic, see:
     http://www.xfree86.org/pipermail/forum/2003-March/002463.html
   and the following few replies by Mark Vojkovich and Keith Packard)
My numbers agree with your as far as trends.  On Windows, the number reported is
2 to 3 on average (a big improvement) and on Linux the number went down about 1
ms (from about 8 to about 7).

Your comments are interesting about both the clipping strategy and the hardware
acceleration possibilities.

As it happens, we've moved from implementing the image rendering widget in our
application from straightforward SWT programming to using Draw2D to render a
large image by breaking it up into a set of smaller images (which each become
ImageFigure objects in Draw2D).  In our tests after we've done this, we see
similar "cheese" during scrolling as you've seen by running the original
example.  AFAIK the Draw2D implementation doesn't take advantage of GC clipping,
although it possibly could.  Do you think that is a possibility?  

Would it be helpful for me to write a followup snippet using Draw2D that
demonstrates this same behavior?  I was originally planning to do so and file it
as a separate bug with the intent to investigate performance enhancements. 
Originally I thought that the place to focus on optimization would be at the SWT
layer, but based on your feedback I'm second-guessing my assumptions...maybe
it's time to apply what we've learned now in the Draw2D implementation.  Please
advise.
Regarding hardware acceleration, I should stress again that I see the same
cheese on both Windows and Linux.  It may be worth investigating higher-level
optimizations such as caching the scaled image rather than scaling on every
paint.  It is clear that not all implementations of StretchBlt on Windows have
the same performance characteristics.  Search google for "StretchBlt
performance" to see some other opinions on this issue.  I tend to think the best
place to make the decision of strategy is in the application.  Scaling an icon
when zooming into a diagram and panning around a massively tiled image have two
very different performance needs :)

That said, feel free to file a bug with the draw2d folks to get their opinion. 
I don't know anything about draw2d so I can't comment on what optimizations
would be appropriate at that layer.

Honestly, I think the clipping issue is arguably a bug in SWT (or GTK+), and
changes we make in the implementation may make it go away (like using RENDER). 
I would like to keep this bug open to track the issue.  However, while being
smarter about how much work you ask the operating system to do may be
unnecessary, it is not wrong.  If it makes your particular application faster on
Linux without sacrificing interactivity on Windows, then why not?
Changing severity and summary based on the investigation.  Post 3.1 we can
investigate how to avoid the work of scaling images if they are outside of the
clipping region.
Fixed &gt; 20050901.

We use Xrender (if available) now to scale and draw images.</WithStack>
    <WithOutStack>When GTK has to rescale an image in a call to GC.drawImage(image, srcRect,
destRect) where srcRect != destRect, the performance is an order of magnitude
worse than on Windows.

I have attached a snippet and an image file to demonstrate. (The snippet expects
an image file as input.)

Typical output I see when running this snippet on comparable machines (dual
processor 1.7 Ghz Linux desktop with 2 GB RAM, Windows 2.1 Ghz single processor
laptop with 2 GB RAM), I get the following output printed to console when I
compare System.currentTimeMillis() before and after the drawImage() invocation:
Linux: 10 ms on average, varying between 8 and 12
Windows: &lt; 1 ms on average, and I always saw 0 ms on console, indicating that
the rendering performance is faster than the accuracy of the clock time returned
by currentTimeMillis() on Windows (which is impressive).

I ran my tests with Eclipse 3.1M4 on both platforms.
Created attachment 18614
SWT snippet demonstrating rescale performance difference between Windows and Linux/GTK
Created attachment 18615
Image file for snippet (required as command-line-arg input)
I'll give it a try ...
Incidentally, I just tried this on Linux/GTK with Eclipse 3.1 M5A and got pretty
similar performance, although the average milliseconds I print out before/after
drawImage() dropped from 10 to about 7.  So someone may have shaved a couple of
milliseconds from the rendering performance recently. 

You are drawing all 1600 images every paint.  This is causing a lot of extra
work to be done on both Windows and Linux, although much worse on Linux.

On Windows, you can scale images using a single StretchBlt() call.  This seems
to take into account the current clipping rectangle.  If the image is not
visible, no work is done, and I think this is why most of the calls are taking
almost 0 time.  On Linux, SWT scales the image using GdkPixbuf and then draws it
to the screen.  The drawing is cheaper if it is not visible, but the scaling
always costs a lot of time.

Try this modification to your paintCanvas() call to first check to make sure
that the current image is actually in the damaged area:

public void paintCanvas(PaintEvent e) {
	GC gc = e.gc;
	Rectangle clipping = gc.getClipping();
	int width = image.getBounds().width, height = image.getBounds().height;
	for (int i = 0; i &lt; numTiles; i++) {
		for (int j = 0; j &lt; numTiles; j++) {
			Rectangle cur = new Rectangle((int)(i * width * scale),
                                     (int)(j*height*scale), (int)(width*scale),
                                     (int)(height*scale));
			if(!cur.intersects(clipping)) continue;
I tried your enhancement, and it does cut down on the number of paints.
However, what I was trying to demonstrate in my snippet (perhaps a bit too
melodramatically) is that invoking drawImage() on GTK that requires a rescale is
something we need to see sped up.  Even though we're doing just 2 or 3
drawImage() invocations whenever I move the scroll bar in this example to expose
a new area, it takes 10+ milliseconds where on Windows it's less than 1.  On GTK
when I run my example with your optimization in place and I smoothly drag the
thumb of the scroll bars, I can see a lot of repaints happening slowly, leaving
a trail of "cheese" if you want to call it that, or regions of the Canvas that
contain old pixels during the scroll that I don't see when I'm running it on
Windows, even without your optimization.

I'm not sure if I can provide any additional help on this...what we're asking
for is basically if there's anything you can do in the SWT implementation
(perhaps using the advanced graphic capability) to speed up this rendering to do
so, or if the problem is in GTK to pursue the issue with the GTK developers.

Thanks very much for your help on this!
Two additional comments I should add:
1) It doesn't appear that Windows _always_ takes &lt;1 milliseconds to render the
image, but most of the time it does.  There are some cases I've seen where, with
Billy's optimization in place, the milliseconds that are reported are 10. 
Still, 75% of the time it is less than 1 (printed as 0).

2) To really see the scrolling-repaint performance issue I mentioned in my
previous comment, it is important that the window be as large as possible (fully
maximized it is most obvious.)
Re-reading my previous comment, I realize now that I probably didn't clearly
explain what I meant by "cheese" or regions containing old pixels as repaints
happen during a scroll.  Please permit me to try once more.

I run the example snippet (with your optimization added) on Linux and make the
view the full size of the screen.  When I drag a scrollbar thumb along, it
exposes new regions of the Canvas to be painted.  As I continue dragging in a
smooth motion, I often see these new regions containing the old pixels that were
there before the most recent scroll bar move event.  Shortly after I release the
thumb, the Canvas does finish repainting entirely.  It is during the scrollbar
movement that newly-exposed regions of the Canvas have old pixels that are still
visible (I presume that haven't been repainted yet and the old pixels are still
hanging about).

This may seem like a trifle, but it makes the difference for my application
between a view that renders smoothly as you scroll it (as it already does on
Windows) and one that doesn't (GTK).
I see the same "cheese" on both Windows and Linux.  It is not smooth in either
case for me.  What video card are you using on the Windows machine?  I believe
the effect you are seeing may be due to hardware acceleration.

The following application is a small and crude benchmark for drawImage() that
attempts to ignore the effects of scrolling and clipping.  On my Windows
machine, the average time it reports is about 22 milliseconds.  On Linux, it
reports an average of 13 milliseconds.  Both machines are 2.53 GHz P4s with 1GB
of RAM and an Intel i845 video adapter.

My understanding is that StretchBlt is accelerated by many drivers on Windows. 
If this is the case in your situation, it may explain why your example works so
well on your machine, but not on mine.

public static void main (String [] args) {
  Display display = new Display ();
  Shell shell = new Shell (display);
  shell.setLayout(new FillLayout());
  Button b = new Button(shell, SWT.PUSH);
  b.setText("Draw image 10 times");
  final Canvas c = new Canvas(shell, SWT.NO_BACKGROUND);		
  String imageFilename = "c:\\testimage.jpg";
  //String imageFilename = "/tmp/testimage.jpg";
  final Image image = new Image(display, imageFilename);
  final int width = image.getBounds().width;
  final int height = image.getBounds().height;
  b.addListener(SWT.Selection, new Listener() {
    float scale = 2.0f;
    public void handleEvent(Event event) {
      GC gc = new GC(c);
      long before = System.currentTimeMillis();
      for(int i = 0; i &lt; 10; i++) { 
        gc.drawImage(image, 0, 0, width, height, 0,0, (int)(width*scale),
                     (int)(height*scale));
      }
      long after = System.currentTimeMillis();
      double average = ((double) (after - before)) / 10.0;
      System.out.println(average+" ms (average)");
    }
  });
  c.addListener(SWT.Paint, new Listener() {
    public void handleEvent(Event event) {
      event.gc.fillRectangle(event.gc.getClipping());
    }
  });
  shell.setSize(1024, 768);
  shell.open ();
  while (!shell.isDisposed ()) {
    if (!display.readAndDispatch ()) display.sleep ();
  }
  display.dispose ();		
}
On my Windows machine I am running an ATI mobility Radeon 9700 (a brand new
laptop), and on the Linux workstation I'm running an NVidia Quadro FX 2000
(about a year old, but still better than average).  I'm not sure what an Intel
i845 can do.  It seems that the kind of hardware acceleration you mean should be
supported by my NVidia card, but perhaps isn't being taken advantage of in GTK?

Should I run your benchmark on my machines and report the results?
Please run the benchmark and post the results to confirm.
For the benchmark that renders an image at 2*scale 10 times and computes the
average time:

I see between 7 and 10 with a median around 8 on Linux.
I see between 3 and 5 with a median around 3 on Windows.
These numbers seem more reasonable.  The performance difference is not enough to
conclude that hardware acceleration is used by Windows, but I suspect it is
(also because of the large difference between your results and mine).

The benchmark reports 3-5 ms while before you saw many zeros.  I believe the
efficiency here is entirely due to clipping.  In the benchmark, try adding a
call to set the clipping so you're only drawing a quarter of the scaled image:

    public void handleEvent(Event event) {
        GC gc = new GC(c);
        gc.setClipping(0, 0, width, height);

On my Windows machine, this sped up the benchmark a lot (down to 7 ms), while
the speedup under Linux was much smaller (down to 10 ms).

So, I think we are left with two differences:

1. Clipping

Image scaling on Windows is efficient: it will only scale what will be drawn to
the screen.  Applications can be more efficient on Linux by performing clipping
themselves: in your paint event handler, you can change your calls to
drawImage() to only scale what you require by tweaking the source and
destination rectangles.  I am not convinced that this optimization belongs in
SWT, as for many applications computing the clipping and scaling offsets would
be too expensive to be worth it.

2. Hardware acceleration

On some Windows machines (but not all), scaling is cheap because it is done in
hardware.  Unfortunately, the core X protocol has no scaling operations.  While
a transformation API does now exist in the RENDER extension, my understanding is
that video card drivers under Linux do not yet support this part of RENDER. 
However, even if it were in software, if it took into account the clipping it
may be faster anyway.  This may be worth investigating.  Using OpenGL is a
better way to find hardware acceleration features under Linux, but not always
appropriate.

  (On this topic, see:
     http://www.xfree86.org/pipermail/forum/2003-March/002463.html
   and the following few replies by Mark Vojkovich and Keith Packard)
My numbers agree with your as far as trends.  On Windows, the number reported is
2 to 3 on average (a big improvement) and on Linux the number went down about 1
ms (from about 8 to about 7).

Your comments are interesting about both the clipping strategy and the hardware
acceleration possibilities.

As it happens, we've moved from implementing the image rendering widget in our
application from straightforward SWT programming to using Draw2D to render a
large image by breaking it up into a set of smaller images (which each become
ImageFigure objects in Draw2D).  In our tests after we've done this, we see
similar "cheese" during scrolling as you've seen by running the original
example.  AFAIK the Draw2D implementation doesn't take advantage of GC clipping,
although it possibly could.  Do you think that is a possibility?  

Would it be helpful for me to write a followup snippet using Draw2D that
demonstrates this same behavior?  I was originally planning to do so and file it
as a separate bug with the intent to investigate performance enhancements. 
Originally I thought that the place to focus on optimization would be at the SWT
layer, but based on your feedback I'm second-guessing my assumptions...maybe
it's time to apply what we've learned now in the Draw2D implementation.  Please
advise.
Regarding hardware acceleration, I should stress again that I see the same
cheese on both Windows and Linux.  It may be worth investigating higher-level
optimizations such as caching the scaled image rather than scaling on every
paint.  It is clear that not all implementations of StretchBlt on Windows have
the same performance characteristics.  Search google for "StretchBlt
performance" to see some other opinions on this issue.  I tend to think the best
place to make the decision of strategy is in the application.  Scaling an icon
when zooming into a diagram and panning around a massively tiled image have two
very different performance needs :)

That said, feel free to file a bug with the draw2d folks to get their opinion. 
I don't know anything about draw2d so I can't comment on what optimizations
would be appropriate at that layer.

Honestly, I think the clipping issue is arguably a bug in SWT (or GTK+), and
changes we make in the implementation may make it go away (like using RENDER). 
I would like to keep this bug open to track the issue.  However, while being
smarter about how much work you ask the operating system to do may be
unnecessary, it is not wrong.  If it makes your particular application faster on
Linux without sacrificing interactivity on Windows, then why not?
Changing severity and summary based on the investigation.  Post 3.1 we can
investigate how to avoid the work of scaling images if they are outside of the
clipping region.
Fixed &gt; 20050901.

We use Xrender (if available) now to scale and draw images.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87578" />
    <CreationDate amount="2005-03-09 17:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT3.1 #38 - RUS mnemonics only work in main window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Start Eclipse with Russian langpack and switch to Russian keyboard layout.</Line>
          <Line>Try mnemonics for the main menu (Alt+&amp;#1060;, Alt+&amp;#1055;, Alt+&amp;#1053;, Alt+&amp;#1047;, Alt+&amp;#1054;, Alt+&amp;#1057;).</Line>
          <Line>Should work fine.</Line>
          <Line />
          <Line>2) Open any other window like Project creation wizard or Preferences window</Line>
          <Line>(Window &gt; Preferences).</Line>
          <Line>Try mnemonics for the window controls. Don't work.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Note:  assigned to UI but not sure

Russian mnemonics only work in the main window menu and submenus.

To reproduce:
1) Start Eclipse with Russian langpack and switch to Russian keyboard layout.
Try mnemonics for the main menu (Alt+&amp;#1060;, Alt+&amp;#1055;, Alt+&amp;#1053;, Alt+&amp;#1047;, Alt+&amp;#1054;, Alt+&amp;#1057;).
Should work fine.

2) Open any other window like Project creation wizard or Preferences window
(Window &gt; Preferences).
Try mnemonics for the window controls. Don't work. 


You can find the language pack with Russian here:
ftp://rtpgsa.raleigh.ibm.com/projects/w/wswb/anonymous/out/Group2_testing/Language_Packs/
whoops... those are special Russian characters that are showing up as #1055, etc...
This appears to be working on Windows 2000.  So this maybe a gtk problem.
Okay, you've marked the OS as "All".  Do you know this truly "All", or are you
just fibbing?  :)

If it isn't all, can you please provide more information?  Operating system,
widget tool kit, window manager and the versions of each.

This is on a RHEL 3 machine, using Eclipse build 3.0.2 (build id: 200502161722).
SWT: This is platform-specific mnemonic behaviour.  Key bindings do not actively
interfere with mnemonics.  Please let us know if there is anything we can do.
Felipe, Can you please investigate?
Also, in response to Doug's comment #3, we are using the Gnome desktop environment.

How would I find out the widget tool kit information?
If you're on RHEL3 it's GTK+ 2.2.4 (you can tell by running 'rpm -qa | grep gtk').

If you're changing the keyboard layout via the GNOME keyboard layout changer, it
may be that it is still using the english keyboard layout for mnemonics:

  http://bugzilla.gnome.org/show_bug.cgi?id=162726
Are the accelerators working ?
With keyboard on Russian mode does Ctrl+S saves the file, Ctrl+F opens the 
find replace dialog, etc? 

I think this is a duplicate of bug 61190.
"With keyboard on Russian mode does Ctrl+S saves the file, Ctrl+F opens the 
find replace dialog, etc? "

Yes

And the GTK level is 2.2.4
The problem is in Widget#setKeyState(), see comment 5 in bug 61190.
Removing the check "if (keyEvent.length &gt; 1) return false;" fixes the problem.
Fixed in HEAD &gt; 20050311

Correction on comment #10...

  You have to switch to the English keyboard layout to use Ctrl+S to save and
Ctrl+F to find, etc...  In the Russian mode, these perform other operations...</WithStack>
    <WithOutStack>Note:  assigned to UI but not sure

Russian mnemonics only work in the main window menu and submenus.

To reproduce:
1) Start Eclipse with Russian langpack and switch to Russian keyboard layout.
Try mnemonics for the main menu (Alt+&amp;#1060;, Alt+&amp;#1055;, Alt+&amp;#1053;, Alt+&amp;#1047;, Alt+&amp;#1054;, Alt+&amp;#1057;).
Should work fine.

2) Open any other window like Project creation wizard or Preferences window
(Window &gt; Preferences).
Try mnemonics for the window controls. Don't work. 


You can find the language pack with Russian here:
ftp://rtpgsa.raleigh.ibm.com/projects/w/wswb/anonymous/out/Group2_testing/Language_Packs/
whoops... those are special Russian characters that are showing up as #1055, etc...
This appears to be working on Windows 2000.  So this maybe a gtk problem.
Okay, you've marked the OS as "All".  Do you know this truly "All", or are you
just fibbing?  :)

If it isn't all, can you please provide more information?  Operating system,
widget tool kit, window manager and the versions of each.

This is on a RHEL 3 machine, using Eclipse build 3.0.2 (build id: 200502161722).
SWT: This is platform-specific mnemonic behaviour.  Key bindings do not actively
interfere with mnemonics.  Please let us know if there is anything we can do.
Felipe, Can you please investigate?
Also, in response to Doug's comment #3, we are using the Gnome desktop environment.

How would I find out the widget tool kit information?
If you're on RHEL3 it's GTK+ 2.2.4 (you can tell by running 'rpm -qa | grep gtk').

If you're changing the keyboard layout via the GNOME keyboard layout changer, it
may be that it is still using the english keyboard layout for mnemonics:

  http://bugzilla.gnome.org/show_bug.cgi?id=162726
Are the accelerators working ?
With keyboard on Russian mode does Ctrl+S saves the file, Ctrl+F opens the 
find replace dialog, etc? 

I think this is a duplicate of bug 61190.
"With keyboard on Russian mode does Ctrl+S saves the file, Ctrl+F opens the 
find replace dialog, etc? "

Yes

And the GTK level is 2.2.4
The problem is in Widget#setKeyState(), see comment 5 in bug 61190.
Removing the check "if (keyEvent.length &gt; 1) return false;" fixes the problem.
Fixed in HEAD &gt; 20050311

Correction on comment #10...

  You have to switch to the English keyboard layout to use Ctrl+S to save and
Ctrl+F to find, etc...  In the Russian mode, these perform other operations...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87579" />
    <CreationDate amount="2005-03-09 17:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Opening a PDE Editor causes two reconciliation thread to be started</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>If you open a pde editor, you will notice that two jface.reconciler threads are 
actually running. I'm wondering why we have two.
one for each source page (build.properties and plugin.xml)
closing...</WithStack>
    <WithOutStack>If you open a pde editor, you will notice that two jface.reconciler threads are 
actually running. I'm wondering why we have two.
one for each source page (build.properties and plugin.xml)
closing...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87580" />
    <CreationDate amount="2005-03-09 17:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JFace] Questions about reconciliation threads</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1) why not use jobs</Line>
          <Line>See John's answer. In addition: have more control over those threads, better see</Line>
          <Line>when/what they are running. I've filed bug 98063 to investigate switching to</Line>
          <Line>jobs for 3.2.</Line>
          <Line />
          <Line>2) why run more than (just the active one)</Line>
          <Line>More important than what John mentioned is that clients (most prominent being</Line>
          <Line>refactoring) do lots of changes via the document edited by the open editors. If</Line>
          <Line>we would not run the reconcilers of those editors, your active editor wouldn't</Line>
          <Line>get notified e.g. about errors being added or fixed due to changes in other</Line>
          <Line>documents.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Do we always have as many reconciliation thread running as we have editors open?
If so, why do they always need to be running? Can't they be stopped / suspended 
when the editor is not visible?

Going a step further why could not they be jobs? I know that Jface is and want 
to stay independent of runtime, but it is possible to detect either scenarios 
and act differently.
The reason the reconciler doesn't use jobs is the aversion to increasing
dependency between JFace and runtime.  I suspect the answer to why they are not
destroyed when idle is that it was just simpler to attach the reconciler thread
lifecycle to the document lifecycle.  Since these threads are sleeping when the
document is not being modified, they don't have a big performance cost.
Destroying/recreating threads as editors change focus would not have good
performance either.

I suggest forwarding to text component for a more detailed answer.
Just FYI ... we in SSE (in WTP) have moved away from reconciler thread, in favor
of jobs. Primarily because it seemed cleaner and more "the Eclipse way" but also
partially because for some reason, at least the way we were using it, the
activiities on the reconciler thread sometimes suspend activity on the Dispaly
thread. It was unclear if that was a fundamental problem or just a quirk of
implementation or our particular use of it. Again, this is just FYI. 
Basically two requests/questions in this PR:

1) why not use jobs
See John's answer. In addition: have more control over those threads, better see
when/what they are running. I've filed bug 98063 to investigate switching to
jobs for 3.2.

2) why run more than (just the active one)
More important than what John mentioned is that clients (most prominent being
refactoring) do lots of changes via the document edited by the open editors. If
we would not run the reconcilers of those editors, your active editor wouldn't
get notified e.g. about errors being added or fixed due to changes in other
documents.</WithStack>
    <WithOutStack>Do we always have as many reconciliation thread running as we have editors open?
If so, why do they always need to be running? Can't they be stopped / suspended 
when the editor is not visible?

Going a step further why could not they be jobs? I know that Jface is and want 
to stay independent of runtime, but it is possible to detect either scenarios 
and act differently.
The reason the reconciler doesn't use jobs is the aversion to increasing
dependency between JFace and runtime.  I suspect the answer to why they are not
destroyed when idle is that it was just simpler to attach the reconciler thread
lifecycle to the document lifecycle.  Since these threads are sleeping when the
document is not being modified, they don't have a big performance cost.
Destroying/recreating threads as editors change focus would not have good
performance either.

I suggest forwarding to text component for a more detailed answer.
Just FYI ... we in SSE (in WTP) have moved away from reconciler thread, in favor
of jobs. Primarily because it seemed cleaner and more "the Eclipse way" but also
partially because for some reason, at least the way we were using it, the
activiities on the reconciler thread sometimes suspend activity on the Dispaly
thread. It was unclear if that was a fundamental problem or just a quirk of
implementation or our particular use of it. Again, this is just FYI. 
Basically two requests/questions in this PR:

1) why not use jobs
See John's answer. In addition: have more control over those threads, better see
when/what they are running. I've filed bug 98063 to investigate switching to
jobs for 3.2.

2) why run more than (just the active one)
More important than what John mentioned is that clients (most prominent being
refactoring) do lots of changes via the document edited by the open editors. If
we would not run the reconcilers of those editors, your active editor wouldn't
get notified e.g. about errors being added or fixed due to changes in other
documents.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87581" />
    <CreationDate amount="2005-03-09 17:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>PDE features still show 3.0.1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- Open Help&gt;Update&gt;Managed Configuration</Line>
          <Line>- Inspect features under Eclipse project SDK 3.0.2</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- Eclipse PDE Plug-in Developer Resources</Line>
          <Line>- Eclipse Plug-in Development Environment</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 3.0.2 RC2:

- Open Help&gt;Update&gt;Managed Configuration
- Inspect features under Eclipse project SDK 3.0.2

Features:
 - Eclipse PDE Plug-in Developer Resources
 - Eclipse Plug-in Development Environment 

still show version 3.0.1. I know we have contributed new code for 3.0.2, so 
this has to be fixed.
Similarly, PDE plug-ins still show '3.0.1' even though we contributed code in 
3.0.2.
Plug-ins 'org.eclipse.pde.core' and 'org.eclipse.pde.ui' were modified and 
need to be incremented to 3.0.2. Thanks to a cool PDE Build process, 
references to these plug-ins in PDE feature will be picked up by the build 
automatically.
Fixed.</WithStack>
    <WithOutStack>Build 3.0.2 RC2:

- Open Help&gt;Update&gt;Managed Configuration
- Inspect features under Eclipse project SDK 3.0.2

Features:
 - Eclipse PDE Plug-in Developer Resources
 - Eclipse Plug-in Development Environment 

still show version 3.0.1. I know we have contributed new code for 3.0.2, so 
this has to be fixed.
Similarly, PDE plug-ins still show '3.0.1' even though we contributed code in 
3.0.2.
Plug-ins 'org.eclipse.pde.core' and 'org.eclipse.pde.ui' were modified and 
need to be incremented to 3.0.2. Thanks to a cool PDE Build process, 
references to these plug-ins in PDE feature will be picked up by the build 
automatically.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87582" />
    <CreationDate amount="2005-03-09 17:31:00 -0500" />
    <DupId amount="75051" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Class Cast Exception on shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341242358">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org/eclipse/ui/internal/EditorActionBars
incompatible with org/eclipse/ui/internal/ViewActionBars</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.ViewFactory.destroyView(ViewFactory.java:411)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.ViewFactory.releaseView(ViewFactory.java:498)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.Perspective.dispose(Perspective.java:221)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1230)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:572)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:1007)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:467)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:448)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:539)</Frame>
          <Frame depth="9">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:537)</Frame>
          <Frame depth="11">org.eclipse.jface.window.WindowManager.close(WindowManager.java:101)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench$10.run(Workbench.java:461)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:747)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:458)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.access$8(Workbench.java:400)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:572)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.close(Workbench.java:570)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.close(Workbench.java:546)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:464)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:448)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:539)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:537)</Frame>
          <Frame depth="26">org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:593)</Frame>
          <Frame depth="27">org.eclipse.jface.window.Window$2.shellClosed(Window.java:544)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1448)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Control.windowProc(Control.java:2972)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="38">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1468)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:398)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Control.windowProc(Control.java:3050)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="43">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="44">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1468)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:398)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Control.windowProc(Control.java:3050)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1473)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)</Frame>
          <Frame depth="55">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="57">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="58">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)</Frame>
          <Frame depth="59">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)</Frame>
          <Frame depth="60">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="61">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="62">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="63">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="64">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="65">org.eclipse.core.launcher.Main.basicRun(Main.java:185)</Frame>
          <Frame depth="66">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="67">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On workbench shutdown I keep getting the following exception which also is
displaying an error dialog box every time I shutdown.

!SESSION Mar 09, 2005 17:27:07.380 ---------------------------------------------
eclipse.buildId=unknown
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040917 (JIT
enabled)
J9VM - 20040916_0908_lHdSMR
JIT  - r7_level20040915_1801
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application org.eclipse.ui.ide.workbench -pdelaunch

!ENTRY org.eclipse.core.runtime 4 2 Mar 09, 2005 17:27:07.380
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0
java.lang.ClassCastException: org/eclipse/ui/internal/EditorActionBars
incompatible with org/eclipse/ui/internal/ViewActionBars
	at org.eclipse.ui.internal.ViewFactory.destroyView(ViewFactory.java:411)
	at org.eclipse.ui.internal.ViewFactory.releaseView(ViewFactory.java:498)
	at org.eclipse.ui.internal.Perspective.dispose(Perspective.java:221)
	at org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:1230)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:572)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:1007)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:467)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:448)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:539)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:537)
	at org.eclipse.jface.window.WindowManager.close(WindowManager.java:101)
	at org.eclipse.ui.internal.Workbench$10.run(Workbench.java:461)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)
	at org.eclipse.core.runtime.Platform.run(Platform.java:747)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:458)
	at org.eclipse.ui.internal.Workbench.access$8(Workbench.java:400)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:572)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:570)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:546)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:464)
	at org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:448)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:539)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:537)
	at org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:593)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:544)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:158)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1448)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2972)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1468)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:398)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3050)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1468)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:398)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3050)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1391)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1473)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2429)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)


*** This bug has been marked as a duplicate of 75051 ***</WithStack>
    <WithOutStack>On workbench shutdown I keep getting the following exception which also is
displaying an error dialog box every time I shutdown.

!SESSION Mar 09, 2005 17:27:07.380 ---------------------------------------------
eclipse.buildId=unknown
java.fullversion=J2RE 1.4.2 IBM J9 2.2 Windows XP x86-32 j9n142-20040917 (JIT
enabled)
J9VM - 20040916_0908_lHdSMR
JIT  - r7_level20040915_1801
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application org.eclipse.ui.ide.workbench -pdelaunch

!ENTRY org.eclipse.core.runtime 4 2 Mar 09, 2005 17:27:07.380
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.runtime".
!STACK 0



*** This bug has been marked as a duplicate of 75051 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87583" />
    <CreationDate amount="2005-03-09 17:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] Showing progress on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="2169" end="2302" />
        <code>/**
     * &lt;p&gt; Stores whether or not to show progress while starting the workbench
     * &lt;/p&gt;
     * 
     * @since 3.1
     */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- The title of the dialog is now "XYZ Starting", (XYZ=Eclipse Platform in the</Line>
          <Line>SDK case)</Line>
          <Line>- The dialog shows the "about image" to the left of the progress bar (or above</Line>
          <Line>it if the image is too large)</Line>
          <Line>Patch applied with the following tweaks:</Line>
          <Line>- handle case where IProduct.getName() returns null</Line>
          <Line>- return created container rather than given parent from createContents</Line>
          <Line>- if no about image, don't hide the default progress monitor icon</Line>
          <Line>- list of images removed in favour of single image field (mainly to simplify the</Line>
          <Line>previous item)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse carefully restores every views and editors on startup.
This offers a nice user experience, however this unfortunately makes eclipse 
very long to start since it has to restore all the views, editors, etc. causing 
many plug-ins to be activated (that probably in the UI thread).

As part of the performance work, it may worth trying to restore the workbench 
context in the background, such that the workbench is displayed as fast as 
possible to the end user. This has the advantage that if a plug-in takes a day 
to startup you are not stuck waiting.

Note that even if this will not necessarily gives clear improvements (probably 
no numbers will change) it will help the user experience in perceiving the 
startup as faster.

CC'ing Nick since I submitted him the idea before.
Michael has been looking into this too.
We need to either get a splash screen with feedback, or switch to the workbench window as soon as 
possible, and use that window to display the feedback (status line messages?). Currently, on the Mac, I 
can sometimes sit there with a static splash screen for more than a minute. Any reasonable user would 
assume that the application had crashed in that time.
Created attachment 21220
does not repaint properly
Created attachment 21301
proposed patch
The patch is now ready to be applied and tested on the other platforms. A 
preferences setting for turning off the progress dialog is still missing.

I have created bug 95667 to track SWT's progress on the Display#update issue.

These are the issues we found while investigating the problem of not running 
the event loop while restoring the workbench: bug 95658, bug 95659, bug 95660
Created attachment 21367
updated the patch a bit
Nick is wondering if this is an issue for Lotus.
This seems to have caused bug 95879.
Created attachment 21471
adds Preference, fixes: 95879 SWT Exception on startup
Created attachment 21472
patch for org.eclipse.platform, adds preference
Jim, in adding this polish item, we require one new API preference so that apps
can enable/disable this feature of showing progress while starting the workbench. 

Please approve:

    
IWorkbenchPreferenceConstants

    /**
     * &lt;p&gt; Stores whether or not to show progress while starting the workbench
     * &lt;/p&gt;
     * 
     * @since 3.1
     */
    public static final String SHOW_PROGRESS_ON_STARTUP =
"SHOW_PROGRESS_ON_STARTUP"; //$NON-NLS-1$

approved

doc nit: remove "&lt;p&gt;" and "&lt;/p&gt;" tags (they're never needed for 1st para), and 
add a trailing ".".
I like having the progress being reported, this is great. However because of its
appearance, I always think the platform is shutting down and that something went
wrong.
Could not we create a special progress dialog that would display the splash
screen and the progress below it. A nice example of such a thing is available in
azureus.
I wouldn't mind if there was a slightly more interesting message on the current dialog, but I *like* the 
symmetry between the startup and shutdown dialogs.

In any case, I don't believe we want to have the old splash screen go down, then a new one come up that 
looks like it (with progress) then it go down, and then the workbench come up. This would look cheesy.
The title of the progress dialog should at least indicate starting up vs.
shutting down.

Created attachment 21536
Adds progress for first-time startup.
Created attachment 21537
Patch for showing progress on the first startup, too (after review with Nick)
There is a related bug that requests that progress be shown on a splash screen.
Bug 78719
Last patch committed.
Created attachment 21782
polish patch

This patch changes the following:
- The title of the dialog is now "XYZ Starting", (XYZ=Eclipse Platform in the
SDK case)
- The dialog shows the "about image" to the left of the progress bar (or above
it if the image is too large)
Patch applied with the following tweaks:
- handle case where IProduct.getName() returns null
- return created container rather than given parent from createContents
- if no about image, don't hide the default progress monitor icon
- list of images removed in favour of single image field (mainly to simplify the
previous item)

Changed the title to reflect what we did.
Tested on Windows, Linux, and Mac. Marking as fixed.
Created attachment 21840
patch for different look
Created attachment 21874
StartupProgressMonitorDialog for experimenting on Linux and Mac
Created attachment 21884
updated experimental code
I have entered bug 97035 - [Workbench] Show startup progress under splash - 
and copied the last version of the experimental code over to the new bug.
See also this bug, to be fixed at the earliest convenient opportunity:
bug 97039 [Workbench] Remove trim from StartupProgressMonitorDialog  
Verified in I20050527-0900.</WithStack>
    <WithOutStack>Eclipse carefully restores every views and editors on startup.
This offers a nice user experience, however this unfortunately makes eclipse 
very long to start since it has to restore all the views, editors, etc. causing 
many plug-ins to be activated (that probably in the UI thread).

As part of the performance work, it may worth trying to restore the workbench 
context in the background, such that the workbench is displayed as fast as 
possible to the end user. This has the advantage that if a plug-in takes a day 
to startup you are not stuck waiting.

Note that even if this will not necessarily gives clear improvements (probably 
no numbers will change) it will help the user experience in perceiving the 
startup as faster.

CC'ing Nick since I submitted him the idea before.
Michael has been looking into this too.
We need to either get a splash screen with feedback, or switch to the workbench window as soon as 
possible, and use that window to display the feedback (status line messages?). Currently, on the Mac, I 
can sometimes sit there with a static splash screen for more than a minute. Any reasonable user would 
assume that the application had crashed in that time.
Created attachment 21220
does not repaint properly
Created attachment 21301
proposed patch
The patch is now ready to be applied and tested on the other platforms. A 
preferences setting for turning off the progress dialog is still missing.

I have created bug 95667 to track SWT's progress on the Display#update issue.

These are the issues we found while investigating the problem of not running 
the event loop while restoring the workbench: bug 95658, bug 95659, bug 95660
Created attachment 21367
updated the patch a bit
Nick is wondering if this is an issue for Lotus.
This seems to have caused bug 95879.
Created attachment 21471
adds Preference, fixes: 95879 SWT Exception on startup
Created attachment 21472
patch for org.eclipse.platform, adds preference
Jim, in adding this polish item, we require one new API preference so that apps
can enable/disable this feature of showing progress while starting the workbench. 

Please approve:

    
IWorkbenchPreferenceConstants

    /**
     * &lt;p&gt; Stores whether or not to show progress while starting the workbench
     * &lt;/p&gt;
     * 
     * @since 3.1
     */
    public static final String SHOW_PROGRESS_ON_STARTUP =
"SHOW_PROGRESS_ON_STARTUP"; //$NON-NLS-1$

approved

doc nit: remove "&lt;p&gt;" and "&lt;/p&gt;" tags (they're never needed for 1st para), and 
add a trailing ".".
I like having the progress being reported, this is great. However because of its
appearance, I always think the platform is shutting down and that something went
wrong.
Could not we create a special progress dialog that would display the splash
screen and the progress below it. A nice example of such a thing is available in
azureus.
I wouldn't mind if there was a slightly more interesting message on the current dialog, but I *like* the 
symmetry between the startup and shutdown dialogs.

In any case, I don't believe we want to have the old splash screen go down, then a new one come up that 
looks like it (with progress) then it go down, and then the workbench come up. This would look cheesy.
The title of the progress dialog should at least indicate starting up vs.
shutting down.

Created attachment 21536
Adds progress for first-time startup.
Created attachment 21537
Patch for showing progress on the first startup, too (after review with Nick)
There is a related bug that requests that progress be shown on a splash screen.
Bug 78719
Last patch committed.
Created attachment 21782
polish patch

This patch changes the following:
- The title of the dialog is now "XYZ Starting", (XYZ=Eclipse Platform in the
SDK case)
- The dialog shows the "about image" to the left of the progress bar (or above
it if the image is too large)
Patch applied with the following tweaks:
- handle case where IProduct.getName() returns null
- return created container rather than given parent from createContents
- if no about image, don't hide the default progress monitor icon
- list of images removed in favour of single image field (mainly to simplify the
previous item)

Changed the title to reflect what we did.
Tested on Windows, Linux, and Mac. Marking as fixed.
Created attachment 21840
patch for different look
Created attachment 21874
StartupProgressMonitorDialog for experimenting on Linux and Mac
Created attachment 21884
updated experimental code
I have entered bug 97035 - [Workbench] Show startup progress under splash - 
and copied the last version of the experimental code over to the new bug.
See also this bug, to be fixed at the earliest convenient opportunity:
bug 97039 [Workbench] Remove trim from StartupProgressMonitorDialog  
Verified in I20050527-0900.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87584" />
    <CreationDate amount="2005-03-09 17:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Remove ImageLoader dependency in Test_org_eclipse_swt_graphics_Image and Test_org_eclipse_swt_graphics_ImageData</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Image and ImageData tests use ImageLoader to load test data. Changing this
to use the ImageData constructor directly will simplify the code and remove the
dependency on the ImageLoader class. This is related to bug 68867.
Released fix to HEAD</WithStack>
    <WithOutStack>The Image and ImageData tests use ImageLoader to load test data. Changing this
to use the ImageData constructor directly will simplify the code and remove the
dependency on the ImageLoader class. This is related to bug 68867.
Released fix to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87585" />
    <CreationDate amount="2005-03-09 17:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Restore preferred size action in null layout</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="package">
        <location start="628" end="641" />
        <code>package test;</code>
      </source_code>
      <source_code type="import">
        <location start="642" end="664" />
        <code>import javax.swing.*;</code>
      </source_code>
      <source_code type="import">
        <location start="665" end="691" />
        <code>import javax.swing.JPanel;</code>
      </source_code>
      <source_code type="class">
        <location start="693" end="1241" />
        <code>public class TestBean extends JPanel {
    JComponent component;

    public TestBean() {
        component = new JButton("button");
        add(component);
    }

    public void setButton(boolean isButton) {
        if (isButton) {
            component = new JButton("button");
        } else {
            component = new JCheckBox("a very long checkBox");
        }
        removeAll();
        add(component);
        revalidate();
        repaint();
    }

    public boolean isButton() {
        return component instanceof JButton;
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. panel w. null layout</Line>
          <Line>2. custom bean is added to the panel, the current preferred size of the custom</Line>
          <Line>bean is used.</Line>
          <Line>3. modify a property in the custom bean, so the bean component's preferred</Line>
          <Line>size s modified</Line>
          <Line>4. the new size is not used in the panel (although this would be the case</Line>
          <Line>runtime, if the properties were set before the bean was added to the panel)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>scenario:
1. panel w. null layout
2. custom bean is added to the panel, the current preferred size of the custom 
bean is used.
3. modify a property in the custom bean, so the bean component's preferred 
size s modified
4. the new size is not used in the panel (although this would be the case 
runtime, if the properties were set before the bean was added to the panel)

desired functionality:
at design time, changing preferred size of a custom bean should make ve redraw 
the component in null layout context, assuming that these property changes are 
made before the bean is added to the panel.

test code, the custom bean:
package test;

import javax.swing.*;
import javax.swing.JPanel;

public class TestBean extends JPanel {
    JComponent component;

    public TestBean() {
        component = new JButton("button");
        add(component);
    }

    public void setButton(boolean isButton) {
        if (isButton) {
            component = new JButton("button");
        } else {
            component = new JCheckBox("a very long checkBox");
        }
        removeAll();
        add(component);
        revalidate();
        repaint();
    }

    public boolean isButton() {
        return component instanceof JButton;
    }
}

Comments from ve-forum:
Jeff Myers:
You are correct, I misunderstood your inital question, thinking you were 
referring to the runtime behavior vs. the design time behavior.  The VE 
does not automatically set the size of components to the preferred size 
on null layout after the initial drop.  I don't think there's a good way 
to determine when this would occur automatically, and I'm not sure that 
this behavior would be the best in all situations (especially if you've 
explicitly resized the component yourself, then have it snap back to 
preferred size unexpectedly).  However it wouldn't be a bad idea to be 
able to have an action to reset the size to the preferred, that would be 
user driven.  In fact, this would be a good addition to the customize 
layout page for the null layout.  If you open a feature request in 
bugzilla, I'll take a look at implementing it.

Thanks,

  - Jeff

Rich Kulp:
Actually there is a way to do it now, it is a little cumbersome. Set the 
width and height to -1 and this causes it to recompute the width/height 
to be the preferred size. It sets it to that new size.

A button could be added to customize layout for null layout to do this 
under the covers.

-- 
Thanks,
Rich Kulp
I've implemented this feature as an action on the Null layout's Component layout
customization page.  This was accomplished by following Rich's suggestion of
setting the component size to -1,-1.

This should show up in the VE 1.1 M1 build. Thanks for the feature suggestion.
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>scenario:
1. panel w. null layout
2. custom bean is added to the panel, the current preferred size of the custom 
bean is used.
3. modify a property in the custom bean, so the bean component's preferred 
size s modified
4. the new size is not used in the panel (although this would be the case 
runtime, if the properties were set before the bean was added to the panel)

desired functionality:
at design time, changing preferred size of a custom bean should make ve redraw 
the component in null layout context, assuming that these property changes are 
made before the bean is added to the panel.

test code, the custom bean:
package test;

import javax.swing.*;
import javax.swing.JPanel;

public class TestBean extends JPanel {
    JComponent component;

    public TestBean() {
        component = new JButton("button");
        add(component);
    }

    public void setButton(boolean isButton) {
        if (isButton) {
            component = new JButton("button");
        } else {
            component = new JCheckBox("a very long checkBox");
        }
        removeAll();
        add(component);
        revalidate();
        repaint();
    }

    public boolean isButton() {
        return component instanceof JButton;
    }
}

Comments from ve-forum:
Jeff Myers:
You are correct, I misunderstood your inital question, thinking you were 
referring to the runtime behavior vs. the design time behavior.  The VE 
does not automatically set the size of components to the preferred size 
on null layout after the initial drop.  I don't think there's a good way 
to determine when this would occur automatically, and I'm not sure that 
this behavior would be the best in all situations (especially if you've 
explicitly resized the component yourself, then have it snap back to 
preferred size unexpectedly).  However it wouldn't be a bad idea to be 
able to have an action to reset the size to the preferred, that would be 
user driven.  In fact, this would be a good addition to the customize 
layout page for the null layout.  If you open a feature request in 
bugzilla, I'll take a look at implementing it.

Thanks,

  - Jeff

Rich Kulp:
Actually there is a way to do it now, it is a little cumbersome. Set the 
width and height to -1 and this causes it to recompute the width/height 
to be the preferred size. It sets it to that new size.

A button could be added to customize layout for null layout to do this 
under the covers.

-- 
Thanks,
Rich Kulp
I've implemented this feature as an action on the Null layout's Component layout
customization page.  This was accomplished by following Rich's suggestion of
setting the component size to -1,-1.

This should show up in the VE 1.1 M1 build. Thanks for the feature suggestion.
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87586" />
    <CreationDate amount="2005-03-09 17:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>View closure doesn't pay attention to perspectives</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Debug to a breakpoint with view management turned on in the Java perspective.</Line>
          <Line>Debug-related views (Variables, Breakpoints, etc.) are automatically opened.</Line>
          <Line>2. Switch to the Debug perspective and terminate the launch.</Line>
          <Line>3. The views that were opened (Variables, Breakpoints, etc.) are automatically</Line>
          <Line>closed despite the fact that they weren't automatically opened in the Debug</Line>
          <Line>perspective (they are already open by default).</Line>
          <Line>Hi Jared -</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When the LaunchViewContextManager is deciding which views it needs to close, it
just looks at what views it has opened. It doesn't consider which perspectives a
view was opened in.

This can cause us to close more views than we really should.

For example:
1. Debug to a breakpoint with view management turned on in the Java perspective.
Debug-related views (Variables, Breakpoints, etc.) are automatically opened.
2. Switch to the Debug perspective and terminate the launch.
3. The views that were opened (Variables, Breakpoints, etc.) are automatically
closed despite the fact that they weren't automatically opened in the Debug
perspective (they are already open by default).
Hi Jared -

I am looking at this bug... and I have a question about why the context 
listener needs to perists openedViewIds.  The openedViewIds is used to keep 
track of views that are opened by context enablement.  Are you trying to cover 
the case when there are context-enabled views opened when the workbench shuts 
down and when the workbench is restarted, you will know to close those views as 
a context goes away?

Also, looking at how openedViewIds and viewIdsToNotOpen are saved in the 
preference.  When they are saved, they use the following attributes:
LaunchViewContextListener.PREF_VIEWS_TO_NOT_OPEN
LaunchViewContextListener.PREF_OPENED_VIEWS

However, when these two lists are loaded, the loading uses the following 
attributes:
ATTR_OPENED_VIEWS
ATTR_VIEWS_TO_NOT_OPEN

So, when the the preferences are loaded, those two lists are always empty.  I 
am not sure why the saving and loading are using different attribute names.

Thanks for your help.

Samantha
Yikes. Yes, we should be persisting those lists so that our non-disruptive
approach (opening/closing of views shouldn't conflict with user actions) is
maintained across sessions. It looks like this is just totally busted so the
view management has been ruder than intended. :-/
Created attachment 21279
patch to org.eclipse.debug.ui

* openedViewIds is now a hashmap instead of a global list of view ids.
Perspective id is the key to the hashmap.  ArrayList of view ids is the value
of the hashmap.
* When views are automatically opened or closed, LaunchViewContextListener
finds the array list from the hashmap using the current perspective id.  The
view ids will then be added/removed from the array list.
* Load and Save opened-views and views-to-not-open with the correct preference
names.
* Added code to save and load the new hashmap
* Aslo included fix for Bug 94357.  Please refer to that bug for details on the
fix.
Darin -
Please apply patch.  Thanks...
Samantha
There is a related problem:

* Debug to a breakpoint in the Java perspective (auto open views, don't switch 
perspective automatically)
* The BPs and Var views open
* Switch to debug perspective
* terminate launch
* Switch back to Java Perspective
&gt; the BP and Var views are still open, but shuold be closed 
Samantha, can we close views we opened in other perspectives?
Bug 57841
Looks like we have no API to close views from other perspective.
Also looked at using DebugUIPlugin.getActiveWorkbenchWindow().getPages(); to 
get all the perspectives and then close the views.  But calling this method 
only returns the current perspective.

If you switch back to the Java Perspective and relaunch, the views will be 
closed when the debug session is terminated.
Comment #5 is a dup of Bug 57842. I opened this bug report solely for the test
case described, because we can handle that case without any new API.
OK. Unfortunate bug. We could track perspectives etc., and manage this 
ourselves, but I'd prefer to wait for the fix to bug 57841. Will track with 
bug 57842.
This bug is worse than bug 57841 and the fix isn't dependant on any other bugs.
Bug 57841 describes a problem where we leave views open that we shouldn't; this
is just a potential inconvenience. This bug is that we end up wrongly closing
views that are critical to debugging; "losing" the Breakpoints view is
potentially a much bigger problem for the user.
I agree, I meant that we will fix this bug, and track 57482.
Applid patch (with minor cosmetic changes). Samantha, I think we should use a 
set in the hashtable (for keeping track of which views are open). It may 
perform better than lists (avoids linear searches). Please provide incremental 
patch.
Created attachment 21298
patch2 to org.eclipse.debug.ui

* Use Hashset instead of ArrayList
* Moved updating of openedViewIds out of the loop to reduce number of updates.
Applied patch with minor changes (removed some unrequired #contains(..) tests 
and replacing the sets back into the hashmap, as they are the same object 
being manipulated).
Please verify my changes, Samantha.
Verified.</WithStack>
    <WithOutStack>When the LaunchViewContextManager is deciding which views it needs to close, it
just looks at what views it has opened. It doesn't consider which perspectives a
view was opened in.

This can cause us to close more views than we really should.

For example:
1. Debug to a breakpoint with view management turned on in the Java perspective.
Debug-related views (Variables, Breakpoints, etc.) are automatically opened.
2. Switch to the Debug perspective and terminate the launch.
3. The views that were opened (Variables, Breakpoints, etc.) are automatically
closed despite the fact that they weren't automatically opened in the Debug
perspective (they are already open by default).
Hi Jared -

I am looking at this bug... and I have a question about why the context 
listener needs to perists openedViewIds.  The openedViewIds is used to keep 
track of views that are opened by context enablement.  Are you trying to cover 
the case when there are context-enabled views opened when the workbench shuts 
down and when the workbench is restarted, you will know to close those views as 
a context goes away?

Also, looking at how openedViewIds and viewIdsToNotOpen are saved in the 
preference.  When they are saved, they use the following attributes:
LaunchViewContextListener.PREF_VIEWS_TO_NOT_OPEN
LaunchViewContextListener.PREF_OPENED_VIEWS

However, when these two lists are loaded, the loading uses the following 
attributes:
ATTR_OPENED_VIEWS
ATTR_VIEWS_TO_NOT_OPEN

So, when the the preferences are loaded, those two lists are always empty.  I 
am not sure why the saving and loading are using different attribute names.

Thanks for your help.

Samantha
Yikes. Yes, we should be persisting those lists so that our non-disruptive
approach (opening/closing of views shouldn't conflict with user actions) is
maintained across sessions. It looks like this is just totally busted so the
view management has been ruder than intended. :-/
Created attachment 21279
patch to org.eclipse.debug.ui

* openedViewIds is now a hashmap instead of a global list of view ids.
Perspective id is the key to the hashmap.  ArrayList of view ids is the value
of the hashmap.
* When views are automatically opened or closed, LaunchViewContextListener
finds the array list from the hashmap using the current perspective id.  The
view ids will then be added/removed from the array list.
* Load and Save opened-views and views-to-not-open with the correct preference
names.
* Added code to save and load the new hashmap
* Aslo included fix for Bug 94357.  Please refer to that bug for details on the
fix.
Darin -
Please apply patch.  Thanks...
Samantha
There is a related problem:

* Debug to a breakpoint in the Java perspective (auto open views, don't switch 
perspective automatically)
* The BPs and Var views open
* Switch to debug perspective
* terminate launch
* Switch back to Java Perspective
&gt; the BP and Var views are still open, but shuold be closed 
Samantha, can we close views we opened in other perspectives?
Bug 57841
Looks like we have no API to close views from other perspective.
Also looked at using DebugUIPlugin.getActiveWorkbenchWindow().getPages(); to 
get all the perspectives and then close the views.  But calling this method 
only returns the current perspective.

If you switch back to the Java Perspective and relaunch, the views will be 
closed when the debug session is terminated.
Comment #5 is a dup of Bug 57842. I opened this bug report solely for the test
case described, because we can handle that case without any new API.
OK. Unfortunate bug. We could track perspectives etc., and manage this 
ourselves, but I'd prefer to wait for the fix to bug 57841. Will track with 
bug 57842.
This bug is worse than bug 57841 and the fix isn't dependant on any other bugs.
Bug 57841 describes a problem where we leave views open that we shouldn't; this
is just a potential inconvenience. This bug is that we end up wrongly closing
views that are critical to debugging; "losing" the Breakpoints view is
potentially a much bigger problem for the user.
I agree, I meant that we will fix this bug, and track 57482.
Applid patch (with minor cosmetic changes). Samantha, I think we should use a 
set in the hashtable (for keeping track of which views are open). It may 
perform better than lists (avoids linear searches). Please provide incremental 
patch.
Created attachment 21298
patch2 to org.eclipse.debug.ui

* Use Hashset instead of ArrayList
* Moved updating of openedViewIds out of the loop to reduce number of updates.
Applied patch with minor changes (removed some unrequired #contains(..) tests 
and replacing the sets back into the hashmap, as they are the same object 
being manipulated).
Please verify my changes, Samantha.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87587" />
    <CreationDate amount="2005-03-09 17:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Debugging views automatically opened before perspective switch</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Enable automatic view management in the Java and Debug perspectives.</Line>
          <Line>2. Open the Debug view in the Java perspective.</Line>
          <Line>2. Debug to a breakpoint.</Line>
          <Line>2a. Debugging views are automatically opened in the Java perspective.</Line>
          <Line>3. When you're prompted to switch perspectives, switch to Debug.</Line>
          <Line>4. Do your debugging in the Debug perspective, terminate the launch, and go back</Line>
          <Line>to Java. The perspective is now cluttered with debugging views from step 2a</Line>
          <Line>("You're welcome.").</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>2. Debug to a breakpoint.</Line>
          <Line>2a. Debugging views are automatically opened in the Java perspective.</Line>
          <Line>3. When you're prompted to switch perspectives, switch to Debug.</Line>
          <Line>4. Do your debugging in the Debug perspective, terminate the launch, and go back</Line>
          <Line>to Java. The perspective is now cluttered with debugging views from step 2a</Line>
          <Line>("You're welcome.").</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Enable automatic view management in the Java and Debug perspectives.
2. Open the Debug view in the Java perspective.
2. Debug to a breakpoint.
  2a. Debugging views are automatically opened in the Java perspective.
3. When you're prompted to switch perspectives, switch to Debug.
4. Do your debugging in the Debug perspective, terminate the launch, and go back
to Java. The perspective is now cluttered with debugging views from step 2a
("You're welcome.").

Automatic view management should not happen until after the perspective
switching code has run.
Created attachment 21479
patch to org.eclipse.debug.ui

* Added a class name PerspectiveSwitchLock in Perspective Manager.  This class
has one boolean field and is used to indicate if the Perspective may swtich
perspective as a result of some events.
* When the Perspective Manager gets a debug event or launch added event, the
manager sets a the perspective switch lock to true.  When the perspective
manager has finished handling the event, it will sets the lock back to false
and will notify all who is waiting on this lock.
* LaunchViewContextListener #contextEnabled(...) method is changed.  The method
now define two jobs.  One for opening context-enabled views on the UI thread. 
Another job for waiting for the perspective manager to finish perspective
switch.  When #contextEnabled(...) is called, the listener checks with the
Perspective Manger to see if it may be switching perspective.  If the
perspective manager may be switching perspective, the listener schedules a job
to wait.  When the perspective manager is done, the listener gets notify and
will schedule an UI job to open context-enabled views.	If the perspective
manager is not switching perspective when #contextEnabled(...) is called, the
listener schedules a job to open views immediately.
* This design requires that the Perspective Manager gets the suspend event
before other event handlers.  (i.e. LaunchViewEventHandler).  Otherwise, the
launch view may enable a context before the perspective manager has a chance to
set up its lock.  In DebugUIPlugin, I am creating the Perspective Manager when
the plugin is created.	This ensures that the manager is the first listener to
debug events and will process the event before everyone else.
Darin -
Please review code and let me know what you think...  Thanks...
Samantha
Created attachment 21515
patch

Samantha, please review this alternative patch. The design is the same but the
implementation hides the lock in the perspective manager. Clients simple
scheule jobs with the perspective manager, to be run after any ongoing
perspective switch. I think it makes the client code simpler and avoids a
public lock.
Relying on the order of the listener registries is scary and making the
listeners so tightly coupled to each other makes this code even more complicated
than it already is.

What about creating one debug event handler that dispatches debug events to the
perspective manager and the context listener in sequence?
The context listener is not actually a debug event/launch listener. The debug 
view explicitly updates the context listener (via the message 
updateForSelection(...)). So, the important thing is that the perspective 
manager is a listener before the debug view. I'm not excited about having the 
debug view register with the perspective manager for events.
Verified that the alternative patch is good.  Thanks for making the 
enhancements.  

Samantha
Released patch. I feel this is the simplest/safest fix for 3.1.
Verified.</WithStack>
    <WithOutStack>1. Enable automatic view management in the Java and Debug perspectives.
2. Open the Debug view in the Java perspective.
2. Debug to a breakpoint.
  2a. Debugging views are automatically opened in the Java perspective.
3. When you're prompted to switch perspectives, switch to Debug.
4. Do your debugging in the Debug perspective, terminate the launch, and go back
to Java. The perspective is now cluttered with debugging views from step 2a
("You're welcome.").

Automatic view management should not happen until after the perspective
switching code has run.
Created attachment 21479
patch to org.eclipse.debug.ui

* Added a class name PerspectiveSwitchLock in Perspective Manager.  This class
has one boolean field and is used to indicate if the Perspective may swtich
perspective as a result of some events.
* When the Perspective Manager gets a debug event or launch added event, the
manager sets a the perspective switch lock to true.  When the perspective
manager has finished handling the event, it will sets the lock back to false
and will notify all who is waiting on this lock.
* LaunchViewContextListener #contextEnabled(...) method is changed.  The method
now define two jobs.  One for opening context-enabled views on the UI thread. 
Another job for waiting for the perspective manager to finish perspective
switch.  When #contextEnabled(...) is called, the listener checks with the
Perspective Manger to see if it may be switching perspective.  If the
perspective manager may be switching perspective, the listener schedules a job
to wait.  When the perspective manager is done, the listener gets notify and
will schedule an UI job to open context-enabled views.	If the perspective
manager is not switching perspective when #contextEnabled(...) is called, the
listener schedules a job to open views immediately.
* This design requires that the Perspective Manager gets the suspend event
before other event handlers.  (i.e. LaunchViewEventHandler).  Otherwise, the
launch view may enable a context before the perspective manager has a chance to
set up its lock.  In DebugUIPlugin, I am creating the Perspective Manager when
the plugin is created.	This ensures that the manager is the first listener to
debug events and will process the event before everyone else.
Darin -
Please review code and let me know what you think...  Thanks...
Samantha
Created attachment 21515
patch

Samantha, please review this alternative patch. The design is the same but the
implementation hides the lock in the perspective manager. Clients simple
scheule jobs with the perspective manager, to be run after any ongoing
perspective switch. I think it makes the client code simpler and avoids a
public lock.
Relying on the order of the listener registries is scary and making the
listeners so tightly coupled to each other makes this code even more complicated
than it already is.

What about creating one debug event handler that dispatches debug events to the
perspective manager and the context listener in sequence?
The context listener is not actually a debug event/launch listener. The debug 
view explicitly updates the context listener (via the message 
updateForSelection(...)). So, the important thing is that the perspective 
manager is a listener before the debug view. I'm not excited about having the 
debug view register with the perspective manager for events.
Verified that the alternative patch is good.  Thanks for making the 
enhancements.  

Samantha
Released patch. I feel this is the simplest/safest fix for 3.1.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87588" />
    <CreationDate amount="2005-03-09 17:52:00 -0500" />
    <DupId amount="66656" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Text in view tabs may be drawn in wrong language</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you have overlapping views, the text in the view tabs may be drawn in the 
wrong language.

This was found during TVT testing of our application, but can be duplicated 
using Eclipse. 

To reproduce, open Eclipse in English to the Java perspective, with 
the "Package Explorer" and "Hierarchy" views occupying the same area on the 
left.  Exit Eclipse, and restart in another language, such as Spanish. Observe 
that the titles are "Explorador de paquetes" and "Hierarchy".  Click 
on "Hierarchy" and it correctly redraws as "Jerarquía".  Switch back to 
English and a similar problem occurs.

The problem was reported to us as occurring on Traditional Chinese.  I suspect 
that the tester never ran in English, but still the English string was used 
initially.


*** This bug has been marked as a duplicate of 66656 ***</WithStack>
    <WithOutStack>When you have overlapping views, the text in the view tabs may be drawn in the 
wrong language.

This was found during TVT testing of our application, but can be duplicated 
using Eclipse. 

To reproduce, open Eclipse in English to the Java perspective, with 
the "Package Explorer" and "Hierarchy" views occupying the same area on the 
left.  Exit Eclipse, and restart in another language, such as Spanish. Observe 
that the titles are "Explorador de paquetes" and "Hierarchy".  Click 
on "Hierarchy" and it correctly redraws as "Jerarquía".  Switch back to 
English and a similar problem occurs.

The problem was reported to us as occurring on Traditional Chinese.  I suspect 
that the tester never ran in English, but still the English string was used 
initially.


*** This bug has been marked as a duplicate of 66656 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87589" />
    <CreationDate amount="2005-03-09 18:04:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.sse" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CommonEditorPreferenceNames should not be so public API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>M3

org.eclipse.wst.sse.ui.preferences.CommonEditorPreferenceNames is currently 
public API and it contains many preference keys that only the sse ui plugin 
should be concerned with or it contains preference keys that the sse ui plugin 
does not even reference (and really content types should handle those 
preference keys)

This class should be reevaluated.
Created attachment 18618
org.eclipse.jst.jsp.ui.patch
Created attachment 18619
org.eclipse.wst.html.ui.patch
Created attachment 18620
org.eclipse.wst.javascript.common.ui.patch
Created attachment 18621
org.eclipse.wst.javascript.ui.patch
Created attachment 18622
org.eclipse.wst.sse.ui.patch
Created attachment 18623
org.eclipse.wst.xml.ui.patch
When these patches are applied, the following statement should be sent out to 
wtp-dev:

Subject: API changes to 
org.eclipse.wst.sse.ui.preferences.CommonEditorPreferenceNames 

The following preference keys have been removed from 
CommonEditorPreferenceNames because they were already deprecated.  In most 
cases, there were removed because the base now provides those preference keys, 
so you should look for your preference keys in the following classes:
org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants
org.eclipse.ui.texteditor.MarkerAnnotationPreferences

Otherwise, look in the previous deprecation javadoc for information on why 
they were being removed and what to do.
BOOKMARK_INDICATION
BOOKMARK_INDICATION_COLOR
BOOKMARK_INDICATION_IN_OVERVIEW_RULER
BROWSER_LIKE_LINKS
BROWSER_LIKE_LINKS_KEY_MODIFIER
CONTENT_ASSIST_SUPPORTED
DOT
EDITOR_ANNOTATION_ROLL_OVER
EDITOR_SHOW_TEXT_HOVER_AFFORDANCE
ERROR_INDICATION
ERROR_INDICATION_COLOR
ERROR_INDICATION_IN_OVERVIEW_RULER
LINK_COLOR
LT
LT_PERCENT
SEARCH_RESULT_INDICATION
SEARCH_RESULT_INDICATION_COLOR
SEARCH_RESULT_INDICATION_IN_OVERVIEW_RULER
SHOW_QUICK_FIXABLES
TASK_INDICATION
TASK_INDICATION_COLOR
TASK_INDICATION_IN_OVERVIEW_RULER
UNKNOWN_INDICATION
UNKNOWN_INDICATION_COLOR
UNKNOWN_INDICATION_IN_OVERVIEW_RULER
WARNING_INDICATION
WARNING_INDICATION_COLOR
WARNING_INDICATION_IN_OVERVIEW_RULER
EMBEDDED_CONTENT_TYPE_PREFERENCES

The following preference keys have been removed from 
CommonEditorPreferenceNames because they are not really StructuredTextEditor 
preference keys, rather they are preference keys that should be supplied by 
each content type.  You can look in the individual content type plugins to see 
if the preference keys are made public there.
AUTO_PROPOSE
AUTO_PROPOSE_CODE
EDITOR_USE_INFERRED_GRAMMAR
TEMPLATES_KEY


The following preference keys have been removed from 
CommonEditorPreferenceNames because they should only be used internally by 
StructuredTextEditor.
MATCHING_BRACKETS
MATCHING_BRACKETS_COLOR
EDITOR_TEXT_HOVER_MODIFIERS
READ_ONLY_FOREGROUND_SCALE

Misc deleted preference related classes (they were already deprecated, look in 
previous deprecation javadoc for information on why they were being removed 
and what to do)
org.eclipse.wst.sse.ui.preferences.ui.NavigationPreferenceTab  (navigation 
preferences are now handled by the base)

org.eclipse.wst.sse.ui.preferences.PreferenceKeyGenerator (content type 
preference keys should be stored in the content type's own preference store)

SSEUIPlugin#initializeDefaultEditorPreferences (method is not longer used 
because preference initializers are now used)

Please see https://bugs.eclipse.org/bugs/show_bug.cgi?id=87589 for more details
assigning to david because i bet he would enjoy applying all these patches and 
checking them into cvs
Thanks Amy, but can you also fix-up and supply patches for unit tests also?
I think there's only a few cases, but results in lots of compile errors. 
(Plus, I'm sure you'll confirm the unit tests still run ok :)

Created attachment 18653
org.eclipse.jst.jsp.ui.tests.patch
Created attachment 18654
org.eclipse.wst.html.ui.tests.patch
Created attachment 18655
org.eclipse.wst.sse.ui.tests.patch
Created attachment 18656
org.eclipse.wst.xml.ui.tests.patch
Okay, unit tests have been fixed and are all passing.

I removed the old PreferencesTest unit test from org.eclipse.jst.jsp.ui.tests 
because that unit test was just completely out of date.

I added new &lt;pluginName&gt;PreferencesTest classes to sse, xml, html, jsp to 
correctly test editor preferences.
Thanks Amy ... and yes, I do really enjoy applying all those patches ... went up
to a fuzz factor of 22 for one of them!?

10 patch files ... we'll keep track for record setting in the Guinness book of
World records :)
Committed to head, and will release for next I-build. 
Changed Version field given new release numbering.

Verifying a number of these on Amy's behalf, since she opened and fixed them on
my behalf :) And ... I did review, apply the patches, and confirmed all was well
at the time. Any new "missing resources", etc., would simply be new bugs. 

mass closing verified bugs I own</WithStack>
    <WithOutStack>M3

org.eclipse.wst.sse.ui.preferences.CommonEditorPreferenceNames is currently 
public API and it contains many preference keys that only the sse ui plugin 
should be concerned with or it contains preference keys that the sse ui plugin 
does not even reference (and really content types should handle those 
preference keys)

This class should be reevaluated.
Created attachment 18618
org.eclipse.jst.jsp.ui.patch
Created attachment 18619
org.eclipse.wst.html.ui.patch
Created attachment 18620
org.eclipse.wst.javascript.common.ui.patch
Created attachment 18621
org.eclipse.wst.javascript.ui.patch
Created attachment 18622
org.eclipse.wst.sse.ui.patch
Created attachment 18623
org.eclipse.wst.xml.ui.patch
When these patches are applied, the following statement should be sent out to 
wtp-dev:

Subject: API changes to 
org.eclipse.wst.sse.ui.preferences.CommonEditorPreferenceNames 

The following preference keys have been removed from 
CommonEditorPreferenceNames because they were already deprecated.  In most 
cases, there were removed because the base now provides those preference keys, 
so you should look for your preference keys in the following classes:
org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants
org.eclipse.ui.texteditor.MarkerAnnotationPreferences

Otherwise, look in the previous deprecation javadoc for information on why 
they were being removed and what to do.
BOOKMARK_INDICATION
BOOKMARK_INDICATION_COLOR
BOOKMARK_INDICATION_IN_OVERVIEW_RULER
BROWSER_LIKE_LINKS
BROWSER_LIKE_LINKS_KEY_MODIFIER
CONTENT_ASSIST_SUPPORTED
DOT
EDITOR_ANNOTATION_ROLL_OVER
EDITOR_SHOW_TEXT_HOVER_AFFORDANCE
ERROR_INDICATION
ERROR_INDICATION_COLOR
ERROR_INDICATION_IN_OVERVIEW_RULER
LINK_COLOR
LT
LT_PERCENT
SEARCH_RESULT_INDICATION
SEARCH_RESULT_INDICATION_COLOR
SEARCH_RESULT_INDICATION_IN_OVERVIEW_RULER
SHOW_QUICK_FIXABLES
TASK_INDICATION
TASK_INDICATION_COLOR
TASK_INDICATION_IN_OVERVIEW_RULER
UNKNOWN_INDICATION
UNKNOWN_INDICATION_COLOR
UNKNOWN_INDICATION_IN_OVERVIEW_RULER
WARNING_INDICATION
WARNING_INDICATION_COLOR
WARNING_INDICATION_IN_OVERVIEW_RULER
EMBEDDED_CONTENT_TYPE_PREFERENCES

The following preference keys have been removed from 
CommonEditorPreferenceNames because they are not really StructuredTextEditor 
preference keys, rather they are preference keys that should be supplied by 
each content type.  You can look in the individual content type plugins to see 
if the preference keys are made public there.
AUTO_PROPOSE
AUTO_PROPOSE_CODE
EDITOR_USE_INFERRED_GRAMMAR
TEMPLATES_KEY


The following preference keys have been removed from 
CommonEditorPreferenceNames because they should only be used internally by 
StructuredTextEditor.
MATCHING_BRACKETS
MATCHING_BRACKETS_COLOR
EDITOR_TEXT_HOVER_MODIFIERS
READ_ONLY_FOREGROUND_SCALE

Misc deleted preference related classes (they were already deprecated, look in 
previous deprecation javadoc for information on why they were being removed 
and what to do)
org.eclipse.wst.sse.ui.preferences.ui.NavigationPreferenceTab  (navigation 
preferences are now handled by the base)

org.eclipse.wst.sse.ui.preferences.PreferenceKeyGenerator (content type 
preference keys should be stored in the content type's own preference store)

SSEUIPlugin#initializeDefaultEditorPreferences (method is not longer used 
because preference initializers are now used)

Please see https://bugs.eclipse.org/bugs/show_bug.cgi?id=87589 for more details
assigning to david because i bet he would enjoy applying all these patches and 
checking them into cvs
Thanks Amy, but can you also fix-up and supply patches for unit tests also?
I think there's only a few cases, but results in lots of compile errors. 
(Plus, I'm sure you'll confirm the unit tests still run ok :)

Created attachment 18653
org.eclipse.jst.jsp.ui.tests.patch
Created attachment 18654
org.eclipse.wst.html.ui.tests.patch
Created attachment 18655
org.eclipse.wst.sse.ui.tests.patch
Created attachment 18656
org.eclipse.wst.xml.ui.tests.patch
Okay, unit tests have been fixed and are all passing.

I removed the old PreferencesTest unit test from org.eclipse.jst.jsp.ui.tests 
because that unit test was just completely out of date.

I added new &lt;pluginName&gt;PreferencesTest classes to sse, xml, html, jsp to 
correctly test editor preferences.
Thanks Amy ... and yes, I do really enjoy applying all those patches ... went up
to a fuzz factor of 22 for one of them!?

10 patch files ... we'll keep track for record setting in the Guinness book of
World records :)
Committed to head, and will release for next I-build. 
Changed Version field given new release numbering.

Verifying a number of these on Amy's behalf, since she opened and fixed them on
my behalf :) And ... I did review, apply the patches, and confirmed all was well
at the time. Any new "missing resources", etc., would simply be new bugs. 

mass closing verified bugs I own</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87590" />
    <CreationDate amount="2005-03-09 18:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to override Object methods in Type Hierarchy [type hierarchy]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Open Type Hierarchy on MyClass, direct subclass of Object. In Members section 
of Type Hierarchy view, open context menu on finalize(). Although there should 
be a "Source -&gt; Override in 'MyClass' " menu choice, nothing is available. In 
fact, context menu is not "method-related" at all. Same problem with other 
Object methods like equals(). Help Contents says this should work. It does 
work with non-Object class overriding. Behavior is correct from Outline view.
the override action will be removed. Better way to override/implement methods is
by the override action or code assist</WithStack>
    <WithOutStack>Open Type Hierarchy on MyClass, direct subclass of Object. In Members section 
of Type Hierarchy view, open context menu on finalize(). Although there should 
be a "Source -&gt; Override in 'MyClass' " menu choice, nothing is available. In 
fact, context menu is not "method-related" at all. Same problem with other 
Object methods like equals(). Help Contents says this should work. It does 
work with non-Object class overriding. Behavior is correct from Outline view.
the override action will be removed. Better way to override/implement methods is
by the override action or code assist</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87591" />
    <CreationDate amount="2005-03-09 18:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>API to push/pop GC state or clone an existing GC</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>a) clones a GC, giving you another GC with copied state, but changes made to</Line>
          <Line>that GC are isolated, or:</Line>
          <Line>b) pushing and poping the state of a GC.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I need to be able to save the state of a GC, make changes to it, and return to 
that saved state.  I need to be able to do this recursively.  How about API 
which:

a) clones a GC, giving you another GC with copied state, but changes made to 
that GC are isolated, or:
b) pushing and poping the state of a GC.

a) is probably limited to the depth of recursion, since multiple GCs would 
have to be in memory.


I think that as a workaround, I may be able to limit the states which can be 
pushed and popped in my application.  For example, if the current transform 
includes a rotational or shearing component, then push() is not supported.  
Similarly, if the current clip definition is non-rectangular (either a Region 
or Path), push() will throw an exception as well.</WithStack>
    <WithOutStack>I need to be able to save the state of a GC, make changes to it, and return to 
that saved state.  I need to be able to do this recursively.  How about API 
which:

a) clones a GC, giving you another GC with copied state, but changes made to 
that GC are isolated, or:
b) pushing and poping the state of a GC.

a) is probably limited to the depth of recursion, since multiple GCs would 
have to be in memory.


I think that as a workaround, I may be able to limit the states which can be 
pushed and popped in my application.  For example, if the current transform 
includes a rotational or shearing component, then push() is not supported.  
Similarly, if the current clip definition is non-rectangular (either a Region 
or Path), push() will throw an exception as well.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87592" />
    <CreationDate amount="2005-03-09 18:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source/UI maximize sash arrows missing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The arrows which were used maximize the source or UI view in the VE editor are
not there. Attached an image of the problem.
Created attachment 18617
NO Sash buttons image
Need to fix for Milestone driver
The problem occurs because VE uses its own CustomSashForm which subclasses the
Eclipse SashForm and draws the arrows during the layout method. In Eclipse 3.0.1
there was a listener added in SashForm's ctor that listened to SWT.Resize and
executed the layout method. This listener was removed in 3.1 and a SashLayout
was added to handle the layout. 
So the layout method in SashForm (and VE's CustomSashForm) never gets called.

To fix this for now, I added the listener to the ctor of CustomSashForm. 
But it doesn't seem like the correct solution since layout seems like it should
be called in the SWT hierarchy. Rich.. maybe you can look at this to see if
something more can done in 1.1M2.

Committed CustomSashForm changes to HEAD (VE 1.1).
Already fixed.
verified in m2 rc1
*** Bug 84970 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The arrows which were used maximize the source or UI view in the VE editor are
not there. Attached an image of the problem.
Created attachment 18617
NO Sash buttons image
Need to fix for Milestone driver
The problem occurs because VE uses its own CustomSashForm which subclasses the
Eclipse SashForm and draws the arrows during the layout method. In Eclipse 3.0.1
there was a listener added in SashForm's ctor that listened to SWT.Resize and
executed the layout method. This listener was removed in 3.1 and a SashLayout
was added to handle the layout. 
So the layout method in SashForm (and VE's CustomSashForm) never gets called.

To fix this for now, I added the listener to the ctor of CustomSashForm. 
But it doesn't seem like the correct solution since layout seems like it should
be called in the SWT hierarchy. Rich.. maybe you can look at this to see if
something more can done in 1.1M2.

Committed CustomSashForm changes to HEAD (VE 1.1).
Already fixed.
verified in m2 rc1
*** Bug 84970 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87593" />
    <CreationDate amount="2005-03-09 18:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>BundleHost.load() uses null framework.permissionAdmin because it assumes the field was initialized during framework initialization</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="183" end="242" />
        <code>framework.permissionAdmin.createPermissionCollection(this);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>- Why are more bundles being installed while you are running ant?  Aren't all</Line>
          <Line>the bundles you need already installed before you start running ant?</Line>
          <Line>- Why does ant need to set the security manager?  Can it be configured to not</Line>
          <Line>do this?  This may become a problem when/if eclipse is launched with a</Line>
          <Line>security manager set.</Line>
          <Line>Ant has a security manager to disallow the ugliness of Ant code calling</Line>
          <Line>System.exit()in the same JRE as Eclipse. The AntSecurityManager handles if</Line>
          <Line>another security manager is already installed..essentially it delegates to the</Line>
          <Line>existing security manager during the Ant build and restores it on completion</Line>
          <Line>of the Ant build.</Line>
          <Line>See org.eclipse.ant.internal.core.AntSecurityManager and</Line>
          <Line>org.eclipse.ant.internal.core.ant.InternalAntRunner.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There appears to be a problem in the BundleHost.load() method.  It attempts to 
use the permissionAdmin field in the following line which is null:

PermissionCollection collection = 
framework.permissionAdmin.createPermissionCollection(this);

It appears to assume it's not null because it expects that the same security 
manager is being used at the time the Framework.intialize() method was called 
and subsequent calls to BundleHost.load().  This isn't always true.  The 
security manger is switched when ant scripts are executed in the same VM as 
Eclipse.  The load() method now finds a security manager...and expects it must 
have also been set when the framework was initialized...so it just attempts to 
use the null field.

Thread [Thread-1] (Suspended (exception NullPointerException))
	BundleHost.load() line: 68
	Framework.installWorkerPrivileged(String, URLConnection) line: 764
	Framework$1.run() line: 635
	AccessController.doPrivileged1(PrivilegedExceptionAction) line: not 
available [native method]
	AccessController.doPrivileged(PrivilegedExceptionAction) line: 351
	Framework.installWorker(String, PrivilegedExceptionAction) line: 715
	Framework.installBundle(String) line: 630
	BundleContextImpl.installBundle(String) line: 198
	ImportServiceImpl.performImport(IImportDataModel, IProgressMonitor) 
line: 211
	ImportAsset.doAntTask(IProgressMonitor) line: 125
	ImportAsset(AbstractAntTask).execute() line: 89
	UnknownElement.execute() line: 275
	UnknownElement(Task).perform() line: 364
	Target.execute() line: 341
	Target.performTasks() line: 369
	Project.executeTarget(String) line: 1214
	InternalAntRunner.run(List) line: 635
	InternalAntRunner.run() line: 412
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 85
	NativeMethodAccessorImpl.invoke(Method, Object, Object[]) line: 58
	DelegatingMethodAccessorImpl.invoke(Method, Object, Object[]) line: 60
	Method.invoke(Object, Object[]) line: 391
	AntRunner.run(IProgressMonitor) line: 350
	AntLaunchDelegate$1.run() line: 182
	Thread.run() line: 567
Fix has been released in HEAD.

I have to ask more about this scenario.  
- Why are more bundles being installed while you are running ant?  Aren't all 
the bundles you need already installed before you start running ant?
- Why does ant need to set the security manager?  Can it be configured to not 
do this?  This may become a problem when/if eclipse is launched with a 
security manager set.
Ant has a security manager to disallow the ugliness of Ant code calling 
System.exit()in the same JRE as Eclipse. The AntSecurityManager handles if 
another security manager is already installed..essentially it delegates to the 
existing security manager during the Ant build and restores it on completion 
of the Ant build.
See org.eclipse.ant.internal.core.AntSecurityManager and 
org.eclipse.ant.internal.core.ant.InternalAntRunner.

Since the Ant runtime classpath is extensible by the user via the Ant 
extension points I believe any number of bundles/plugins could be loaded at 
Ant runtime.
OK, the security manager switching makes sense now ... but.

I'm still not sure why you are installing new bundles.  Is ant launching a 
separate instance of eclipse and installing the bundles into that runtime, or 
is it installing the bundles into an existing eclipse instance (i.e. the one 
running the application)
The Eclipse Ant integration allows users to specify tasks/types that are loaded 
at Ant runtime in the same JRE (instance) of Eclipse.
These tasks and types can reference classes that are in the plugin pre-
requisite chain of the plugin they are contributed from.
right but the detail here is that the supplying bundles are already installed.  
They are just not being used/activated.

(In reply to comment #3)
&gt; OK, the security manager switching makes sense now ... but.
&gt; I'm still not sure why you are installing new bundles.  Is ant launching a 
&gt; separate instance of eclipse and installing the bundles into that runtime, or 
&gt; is it installing the bundles into an existing eclipse instance (i.e. the one 
&gt; running the application)

We provide tooling for the OMG's RAS(Reusable Asset Specification) spec.  Asset 
producers have the ability among many other things to package deployable 
plugins and features in the assets.  When the asset consumer imports the asset 
into Eclipse...the plugins and features are installed and started in the 
running instance of Eclipse.  The asset consumer can do this through a wizard 
or through ant.  There is other higher level tooling that listens for the 
dynamic installations and responds accordingly.</WithStack>
    <WithOutStack>There appears to be a problem in the BundleHost.load() method.  It attempts to 
use the permissionAdmin field in the following line which is null:

PermissionCollection collection = 
framework.permissionAdmin.createPermissionCollection(this);

It appears to assume it's not null because it expects that the same security 
manager is being used at the time the Framework.intialize() method was called 
and subsequent calls to BundleHost.load().  This isn't always true.  The 
security manger is switched when ant scripts are executed in the same VM as 
Eclipse.  The load() method now finds a security manager...and expects it must 
have also been set when the framework was initialized...so it just attempts to 
use the null field.

Thread [Thread-1] (Suspended (exception NullPointerException))
	BundleHost.load() line: 68
	Framework.installWorkerPrivileged(String, URLConnection) line: 764
	Framework$1.run() line: 635
	AccessController.doPrivileged1(PrivilegedExceptionAction) line: not 
available [native method]
	AccessController.doPrivileged(PrivilegedExceptionAction) line: 351
	Framework.installWorker(String, PrivilegedExceptionAction) line: 715
	Framework.installBundle(String) line: 630
	BundleContextImpl.installBundle(String) line: 198
	ImportServiceImpl.performImport(IImportDataModel, IProgressMonitor) 
line: 211
	ImportAsset.doAntTask(IProgressMonitor) line: 125
	ImportAsset(AbstractAntTask).execute() line: 89
	UnknownElement.execute() line: 275
	UnknownElement(Task).perform() line: 364
	Target.execute() line: 341
	Target.performTasks() line: 369
	Project.executeTarget(String) line: 1214
	InternalAntRunner.run(List) line: 635
	InternalAntRunner.run() line: 412
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 85
	NativeMethodAccessorImpl.invoke(Method, Object, Object[]) line: 58
	DelegatingMethodAccessorImpl.invoke(Method, Object, Object[]) line: 60
	Method.invoke(Object, Object[]) line: 391
	AntRunner.run(IProgressMonitor) line: 350
	AntLaunchDelegate$1.run() line: 182
	Thread.run() line: 567
Fix has been released in HEAD.

I have to ask more about this scenario.  
- Why are more bundles being installed while you are running ant?  Aren't all 
the bundles you need already installed before you start running ant?
- Why does ant need to set the security manager?  Can it be configured to not 
do this?  This may become a problem when/if eclipse is launched with a 
security manager set.
Ant has a security manager to disallow the ugliness of Ant code calling 
System.exit()in the same JRE as Eclipse. The AntSecurityManager handles if 
another security manager is already installed..essentially it delegates to the 
existing security manager during the Ant build and restores it on completion 
of the Ant build.
See org.eclipse.ant.internal.core.AntSecurityManager and 
org.eclipse.ant.internal.core.ant.InternalAntRunner.

Since the Ant runtime classpath is extensible by the user via the Ant 
extension points I believe any number of bundles/plugins could be loaded at 
Ant runtime.
OK, the security manager switching makes sense now ... but.

I'm still not sure why you are installing new bundles.  Is ant launching a 
separate instance of eclipse and installing the bundles into that runtime, or 
is it installing the bundles into an existing eclipse instance (i.e. the one 
running the application)
The Eclipse Ant integration allows users to specify tasks/types that are loaded 
at Ant runtime in the same JRE (instance) of Eclipse.
These tasks and types can reference classes that are in the plugin pre-
requisite chain of the plugin they are contributed from.
right but the detail here is that the supplying bundles are already installed.  
They are just not being used/activated.

(In reply to comment #3)
&gt; OK, the security manager switching makes sense now ... but.
&gt; I'm still not sure why you are installing new bundles.  Is ant launching a 
&gt; separate instance of eclipse and installing the bundles into that runtime, or 
&gt; is it installing the bundles into an existing eclipse instance (i.e. the one 
&gt; running the application)

We provide tooling for the OMG's RAS(Reusable Asset Specification) spec.  Asset 
producers have the ability among many other things to package deployable 
plugins and features in the assets.  When the asset consumer imports the asset 
into Eclipse...the plugins and features are installed and started in the 
running instance of Eclipse.  The asset consumer can do this through a wizard 
or through ant.  There is other higher level tooling that listens for the 
dynamic installations and responds accordingly.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87594" />
    <CreationDate amount="2005-03-09 18:35:00 -0500" />
    <DupId amount="79808" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GetResources within Eclispe?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="import">
        <location start="225" end="255" />
        <code>import java.lang.ClassLoader;</code>
      </source_code>
      <source_code type="import">
        <location start="256" end="285" />
        <code>import java.util.Enumeration;</code>
      </source_code>
      <source_code type="class">
        <location start="287" end="313" />
        <code>public class ImplFactory {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="351" end="865" />
        <code>private static int getCountandDisplay(ClassLoader cl, String msg) {
    	int count = 0;
    	System.out.println(msg);
    	System.out.println("ClassLoader: " + cl);
    	try {
    		Enumeration e = cl.getResources("META-INF/impl-factory.xml");
    		for (; e.hasMoreElements(); ) {
    			System.out.println(e.nextElement());
    			count++;
    		}
     	} catch (Exception e) {
    		System.out.println("Caught Exception: " + e);
    	}
     	System.out.println("Count = " + count);
     	return count;
    }</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="882" end="958" />
        <code>// Explicitly use ClassLoader of plugin containing the AppClient</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I wrote a plugin which contained 2 additional .jar files each of which contained
a file called "META-INF/impl-factory.xml". When I ran the following code
snippet, the same file was returned twice instead of 2 distinct files.

import java.lang.ClassLoader;
import java.util.Enumeration;

public class ImplFactory {

    private static int count2;
    
    private static int getCountandDisplay(ClassLoader cl, String msg) {
    	int count = 0;
    	System.out.println(msg);
    	System.out.println("ClassLoader: " + cl);
    	try {
    		Enumeration e = cl.getResources("META-INF/impl-factory.xml");
    		for (; e.hasMoreElements(); ) {
    			System.out.println(e.nextElement());
    			count++;
    		}
     	} catch (Exception e) {
    		System.out.println("Caught Exception: " + e);
    	}
     	System.out.println("Count = " + count);
     	return count;
    }
  
    static {
    	
    	// Explicitly use ClassLoader of plugin containing the AppClient
    	count2 = getCountandDisplay(
    	  ImplFactory.class.getClassLoader(),
		   "**** New Algorithm");
    }

The result of the run is:
**** New Algorithm
ClassLoader: org.eclipse.core.runtime.adaptor.EclipseClassLoader@31bd238e
bundleresource://87/META-INF/impl-factory.xml &lt;= notice, the same file twice
bundleresource://87/META-INF/impl-factory.xml
Count = 2
Yes, this has been fixed for 3.1 M5. 

*** This bug has been marked as a duplicate of 79808 ***</WithStack>
    <WithOutStack>I wrote a plugin which contained 2 additional .jar files each of which contained
a file called "META-INF/impl-factory.xml". When I ran the following code
snippet, the same file was returned twice instead of 2 distinct files.

import java.lang.ClassLoader;
import java.util.Enumeration;

public class ImplFactory {

    private static int count2;
    
    private static int getCountandDisplay(ClassLoader cl, String msg) {
    	int count = 0;
    	System.out.println(msg);
    	System.out.println("ClassLoader: " + cl);
    	try {
    		Enumeration e = cl.getResources("META-INF/impl-factory.xml");
    		for (; e.hasMoreElements(); ) {
    			System.out.println(e.nextElement());
    			count++;
    		}
     	} catch (Exception e) {
    		System.out.println("Caught Exception: " + e);
    	}
     	System.out.println("Count = " + count);
     	return count;
    }
  
    static {
    	
    	// Explicitly use ClassLoader of plugin containing the AppClient
    	count2 = getCountandDisplay(
    	  ImplFactory.class.getClassLoader(),
		   "**** New Algorithm");
    }

The result of the run is:
**** New Algorithm
ClassLoader: org.eclipse.core.runtime.adaptor.EclipseClassLoader@31bd238e
bundleresource://87/META-INF/impl-factory.xml &lt;= notice, the same file twice
bundleresource://87/META-INF/impl-factory.xml
Count = 2
Yes, this has been fixed for 3.1 M5. 

*** This bug has been marked as a duplicate of 79808 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87595" />
    <CreationDate amount="2005-03-09 18:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Shell with null layout and a bunch of controls throw NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Happens everytime. See attachments for source code and stack trace.
Created attachment 18624
.log containing stack trace info
Created attachment 18625
Shell1.java
Using VE Nightly Build N20050311 I can not seem to reproduce this.  Probably has
been fixed by other defects or was due to a bad state.
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>Happens everytime. See attachments for source code and stack trace.
Created attachment 18624
.log containing stack trace info
Created attachment 18625
Shell1.java
Using VE Nightly Build N20050311 I can not seem to reproduce this.  Probably has
been fixed by other defects or was due to a bad state.
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87596" />
    <CreationDate amount="2005-03-09 18:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>.exsd says SQUIGGLIES but the .java code says SQUIGGLES</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The .exsd file for org.eclipse.ui.editors.markerAnnotationSpecification says this:

./plugins/org.eclipse.ui.editors/schema/markerAnnotationSpecification.exsd:267:
                 &lt;enumeration value="SQUIGGLIES"&gt;

But the Java code in Eclipse is looking for a different spelling.

./plugins/org.eclipse.ui.workbench.texteditor/src/org/eclipse/ui/texteditor/AnnotationPreference.java:91:
public static final String STYLE_SQUIGGLES= "SQUIGGLES"; //$NON-NLS-1$

So the XML editor only allows you to enter SQUIGGLIES which then never matches
what the code is looking for; such as at this location for example:
./plugins/org.eclipse.ui.editors/src/org/eclipse/ui/texteditor/MarkerAnnotationPreferences.java:459:
				|| AnnotationPreference.STYLE_SQUIGGLES.equals(s)

The documentation in the PDE Developer Reference (the online Help Contents of
Eclipse) also says SQUIGGLIES.  But presumably it is a generated file(?).
&gt;But presumably it is a generated file(?).
yep.

Fixed in HEAD.
Available in builds &gt; 200503010
*** Bug 90187 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The .exsd file for org.eclipse.ui.editors.markerAnnotationSpecification says this:

./plugins/org.eclipse.ui.editors/schema/markerAnnotationSpecification.exsd:267:
                 &lt;enumeration value="SQUIGGLIES"&gt;

But the Java code in Eclipse is looking for a different spelling.

./plugins/org.eclipse.ui.workbench.texteditor/src/org/eclipse/ui/texteditor/AnnotationPreference.java:91:
public static final String STYLE_SQUIGGLES= "SQUIGGLES"; //$NON-NLS-1$

So the XML editor only allows you to enter SQUIGGLIES which then never matches
what the code is looking for; such as at this location for example:
./plugins/org.eclipse.ui.editors/src/org/eclipse/ui/texteditor/MarkerAnnotationPreferences.java:459:
				|| AnnotationPreference.STYLE_SQUIGGLES.equals(s)

The documentation in the PDE Developer Reference (the online Help Contents of
Eclipse) also says SQUIGGLIES.  But presumably it is a generated file(?).
&gt;But presumably it is a generated file(?).
yep.

Fixed in HEAD.
Available in builds &gt; 200503010
*** Bug 90187 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87597" />
    <CreationDate amount="2005-03-09 18:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Project clean doesn't work correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="10">
      <source_code type="package">
        <location start="203" end="219" />
        <code>package testswt;</code>
      </source_code>
      <source_code type="import">
        <location start="220" end="258" />
        <code>import org.eclipse.swt.widgets.Table;</code>
      </source_code>
      <source_code type="import">
        <location start="259" end="286" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="287" end="330" />
        <code>import org.eclipse.swt.widgets.TableColumn;</code>
      </source_code>
      <source_code type="import">
        <location start="331" end="371" />
        <code>import org.eclipse.swt.layout.RowLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="372" end="413" />
        <code>import org.eclipse.swt.widgets.Composite;</code>
      </source_code>
      <source_code type="import">
        <location start="414" end="452" />
        <code>import org.eclipse.swt.widgets.Button;</code>
      </source_code>
      <source_code type="import">
        <location start="453" end="494" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="495" end="536" />
        <code>import org.eclipse.swt.layout.GridLayout;</code>
      </source_code>
      <source_code type="class">
        <location start="538" end="1734" />
        <code>public class TableExample {

	private org.eclipse.swt.widgets.Shell sShell = null;
	private Table table = null;
	private Composite composite = null;
	private Button button = null;

	/**
	 * This method initializes sShell
	 */
	private void createSShell() {
		sShell = new org.eclipse.swt.widgets.Shell();		   
		createComposite();
		createTable();
		sShell.setText("Shell");
		sShell.setLayout(new GridLayout());
		sShell.setSize(new org.eclipse.swt.graphics.Point(300,200));
	}

	/**
	 * This method initializes table	
	 *
	 */    
	private void createTable() {
		table = new Table(sShell, SWT.NONE);		   
		TableColumn tableColumn1 = new TableColumn(table, SWT.NONE);
		TableColumn tableColumn4 = new TableColumn(table, SWT.NONE);
		tableColumn1.setWidth(35);
		tableColumn1.setText("col 1");
		table.setLinesVisible(true);
		table.setHeaderVisible(true);
		tableColumn4.setWidth(35);
		tableColumn4.setText("col 2");
	}

	/**
	 * This method initializes composite	
	 *
	 */    
	private void createComposite() {
		composite = new Composite(sShell, SWT.NONE);		   
		button = new Button(composite, SWT.NONE);
		button.setText("obey one be there");
		composite.setLayout(new FillLayout());
	}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Did a clean all... restarted the workspace... threw a bunch of exceptions when I
opened the VE. See the attached stack trace. Here's tbe class I opened although
I have experienced it with several apps:

package testswt;

import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.GridLayout;

public class TableExample {

	private org.eclipse.swt.widgets.Shell sShell = null;
	private Table table = null;
	private Composite composite = null;
	private Button button = null;

	/**
	 * This method initializes sShell
	 */
	private void createSShell() {
		sShell = new org.eclipse.swt.widgets.Shell();		   
		createComposite();
		createTable();
		sShell.setText("Shell");
		sShell.setLayout(new GridLayout());
		sShell.setSize(new org.eclipse.swt.graphics.Point(300,200));
	}

	/**
	 * This method initializes table	
	 *
	 */    
	private void createTable() {
		table = new Table(sShell, SWT.NONE);		   
		TableColumn tableColumn1 = new TableColumn(table, SWT.NONE);
		TableColumn tableColumn4 = new TableColumn(table, SWT.NONE);
		tableColumn1.setWidth(35);
		tableColumn1.setText("col 1");
		table.setLinesVisible(true);
		table.setHeaderVisible(true);
		tableColumn4.setWidth(35);
		tableColumn4.setText("col 2");
	}

	/**
	 * This method initializes composite	
	 *
	 */    
	private void createComposite() {
		composite = new Composite(sShell, SWT.NONE);		   
		button = new Button(composite, SWT.NONE);
		button.setText("obey one be there");
		composite.setLayout(new FillLayout());
	}

}
Created attachment 18626
.log file containing stack trace
Here's a more specific scenario:
Using the attached Shell1.java in an SWT project I did a Project clean on that
project only. I checked the file system and the model cache and beaninfo cache
files were deleted in the org.eclipse.core.resources directory. Also the
org.eclipse.jem.beaninfo cache files were deleted. I closed and reopened the
project and opened the editor on Shell1. Again... many override files are
missing. See the attached .log
Created attachment 18647
Shell1.java
Created attachment 18648
.log for Shell1.java
The errors in the log are from not finding the beaninfo cache files and are just
warnings. We need to change the errors to FINEST so that aren't generated in the
log by default.
Updated BeanInfoCacheController to catch Exceptions and to log with Level.INFO
for now. This will keep the log file from filling up with FileNotFoundExceptions.
I also added TODO's in the code as a reminder to back out the change once the
BeanInfo cache is completed such that it can be updated dynamically and the
Project.clean is no longer needed to clear the Beaninfo cache.
Verified with VE Nightly Build N20050310
1.1M1 is out. Time to close.</WithStack>
    <WithOutStack>Did a clean all... restarted the workspace... threw a bunch of exceptions when I
opened the VE. See the attached stack trace. Here's tbe class I opened although
I have experienced it with several apps:

package testswt;

import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.GridLayout;

public class TableExample {

	private org.eclipse.swt.widgets.Shell sShell = null;
	private Table table = null;
	private Composite composite = null;
	private Button button = null;

	/**
	 * This method initializes sShell
	 */
	private void createSShell() {
		sShell = new org.eclipse.swt.widgets.Shell();		   
		createComposite();
		createTable();
		sShell.setText("Shell");
		sShell.setLayout(new GridLayout());
		sShell.setSize(new org.eclipse.swt.graphics.Point(300,200));
	}

	/**
	 * This method initializes table	
	 *
	 */    
	private void createTable() {
		table = new Table(sShell, SWT.NONE);		   
		TableColumn tableColumn1 = new TableColumn(table, SWT.NONE);
		TableColumn tableColumn4 = new TableColumn(table, SWT.NONE);
		tableColumn1.setWidth(35);
		tableColumn1.setText("col 1");
		table.setLinesVisible(true);
		table.setHeaderVisible(true);
		tableColumn4.setWidth(35);
		tableColumn4.setText("col 2");
	}

	/**
	 * This method initializes composite	
	 *
	 */    
	private void createComposite() {
		composite = new Composite(sShell, SWT.NONE);		   
		button = new Button(composite, SWT.NONE);
		button.setText("obey one be there");
		composite.setLayout(new FillLayout());
	}

}
Created attachment 18626
.log file containing stack trace
Here's a more specific scenario:
Using the attached Shell1.java in an SWT project I did a Project clean on that
project only. I checked the file system and the model cache and beaninfo cache
files were deleted in the org.eclipse.core.resources directory. Also the
org.eclipse.jem.beaninfo cache files were deleted. I closed and reopened the
project and opened the editor on Shell1. Again... many override files are
missing. See the attached .log
Created attachment 18647
Shell1.java
Created attachment 18648
.log for Shell1.java
The errors in the log are from not finding the beaninfo cache files and are just
warnings. We need to change the errors to FINEST so that aren't generated in the
log by default.
Updated BeanInfoCacheController to catch Exceptions and to log with Level.INFO
for now. This will keep the log file from filling up with FileNotFoundExceptions.
I also added TODO's in the code as a reminder to back out the change once the
BeanInfo cache is completed such that it can be updated dynamically and the
Project.clean is no longer needed to clear the Beaninfo cache.
Verified with VE Nightly Build N20050310
1.1M1 is out. Time to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87598" />
    <CreationDate amount="2005-03-09 18:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No notification when macrodef attempts to redefine a task</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Ant editor does not warn the user for a macrodef such as:
&lt;macrodef name="ant"&gt;
  &lt;attribute name="target"/&gt;
  &lt;sequential&gt;
     &lt;echo&gt;hey&lt;/echo&gt;
  &lt;/sequential&gt;
&lt;/macrodef&gt;

(ant is a core task)
No plans to address in 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The Ant editor does not warn the user for a macrodef such as:
&lt;macrodef name="ant"&gt;
  &lt;attribute name="target"/&gt;
  &lt;sequential&gt;
     &lt;echo&gt;hey&lt;/echo&gt;
  &lt;/sequential&gt;
&lt;/macrodef&gt;

(ant is a core task)
No plans to address in 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87599" />
    <CreationDate amount="2005-03-09 19:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[jar] Plugin export with dot on the classpath</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. If you are doing a plugin-based product export, then when PDE generate the</Line>
          <Line>fake feature, it inspects the bundle-classpath of plugins.  If the bundle-</Line>
          <Line>classpath is missing or has a dot, we mark the plugin as unpack=false,</Line>
          <Line>otherwise, it is unpack=true.</Line>
          <Line />
          <Line>This will always produce an optimum product that will run and can selfhost</Line>
          <Line>against.</Line>
          <Line />
          <Line>2. If you are exporting a feature-based product, then it's up to the user to</Line>
          <Line>configure the unpack attributes on individual plugins.  So if they want to</Line>
          <Line>leave a 'dotted' plugin flat, they can.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If a user is exporting a plugin that has dot on the classpath, what should happen?
Will the output be flat or a jar?
Will the user have the same choice that it has when exporting features?
A plugin with . on the classpath must never be exported as flat, since it will 
be problematic/unusable from a JDT point of view when dropped in an 
installation.  So it is important for the tooling to not get people into that 
situation.

When PDE/Build encounters such a plugin, it should therefore always JAR it up.
I will use this bug report to clarify the behavior to the user in the wizard 
itself.

Pascal, please open a bug report against PDE/Build if the behavior described 
here is not supported yet.
 
Bluring the distinction between "." and producing a jar is nice from an end user
point of view and it will likely cover most of the cases.
However, we may want to add a preference somewhere leaving the choice to the end
user.
Even though shortcuts like we are talking about here are interesting, what
happens when I have "." and "jar" on my classpath? are fwe orcing people to ship
plugins with jars as directories?

Given all the options available, pde build is not capable of making the proper
decision as to what the shape of a plug-in should be. This would go against PDE
build way of working.

To solve the particular issue I propose that PDE UI generates the proper markup
(unpack="false") in the feature, or create the appropriate
plugins.postProcessingSteps.properties.



sounds good.  PDE/UI make the decision on whether to jar or not and set 
everything up for you in the *.properties files.

just to be clear, PDE should not force users into jaring plugins with . and 
flattening plugins with jars.  We can warn them that they have . on the 
classpath and they are generating a flat structure (similarly that they have a 
jar(s) and they are jar'ing but should not get in the way if that is really 
what they want.  Users should be able to gen these structures even if they are 
not compatible with the tooling.

Perhaps this is a usecase for "I'm feeling lucky"?  Sigh, perhaps then just 
a "don't ask me about this again" on the warning or some such.

Here is how things will work to provide the best workflow for people without 
confusing the heck out of them with a million checkboxes:

1. If you are doing a plugin-based product export, then when PDE generate the 
fake feature, it inspects the bundle-classpath of plugins.  If the bundle-
classpath is missing or has a dot, we mark the plugin as unpack=false, 
otherwise, it is unpack=true.

This will always produce an optimum product that will run and can selfhost 
against.

2. If you are exporting a feature-based product, then it's up to the user to 
configure the unpack attributes on individual plugins.  So if they want to 
leave a 'dotted' plugin flat, they can.</WithStack>
    <WithOutStack>If a user is exporting a plugin that has dot on the classpath, what should happen?
Will the output be flat or a jar?
Will the user have the same choice that it has when exporting features?
A plugin with . on the classpath must never be exported as flat, since it will 
be problematic/unusable from a JDT point of view when dropped in an 
installation.  So it is important for the tooling to not get people into that 
situation.

When PDE/Build encounters such a plugin, it should therefore always JAR it up.
I will use this bug report to clarify the behavior to the user in the wizard 
itself.

Pascal, please open a bug report against PDE/Build if the behavior described 
here is not supported yet.
 
Bluring the distinction between "." and producing a jar is nice from an end user
point of view and it will likely cover most of the cases.
However, we may want to add a preference somewhere leaving the choice to the end
user.
Even though shortcuts like we are talking about here are interesting, what
happens when I have "." and "jar" on my classpath? are fwe orcing people to ship
plugins with jars as directories?

Given all the options available, pde build is not capable of making the proper
decision as to what the shape of a plug-in should be. This would go against PDE
build way of working.

To solve the particular issue I propose that PDE UI generates the proper markup
(unpack="false") in the feature, or create the appropriate
plugins.postProcessingSteps.properties.



sounds good.  PDE/UI make the decision on whether to jar or not and set 
everything up for you in the *.properties files.

just to be clear, PDE should not force users into jaring plugins with . and 
flattening plugins with jars.  We can warn them that they have . on the 
classpath and they are generating a flat structure (similarly that they have a 
jar(s) and they are jar'ing but should not get in the way if that is really 
what they want.  Users should be able to gen these structures even if they are 
not compatible with the tooling.

Perhaps this is a usecase for "I'm feeling lucky"?  Sigh, perhaps then just 
a "don't ask me about this again" on the warning or some such.

Here is how things will work to provide the best workflow for people without 
confusing the heck out of them with a million checkboxes:

1. If you are doing a plugin-based product export, then when PDE generate the 
fake feature, it inspects the bundle-classpath of plugins.  If the bundle-
classpath is missing or has a dot, we mark the plugin as unpack=false, 
otherwise, it is unpack=true.

This will always produce an optimum product that will run and can selfhost 
against.

2. If you are exporting a feature-based product, then it's up to the user to 
configure the unpack attributes on individual plugins.  So if they want to 
leave a 'dotted' plugin flat, they can.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="87600" />
    <CreationDate amount="2005-03-09 19:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No problem annotation from import in buildfile</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>You get a problem indication in the outline but not in the actual editor text 
for the invalid taskdef from the imported file.
&lt;project&gt;
	&lt;import file="simpleToBeImported.xml"/&gt;
&lt;/project&gt;

----simpleToBeImported.xml----
&lt;project name="none"&gt;
	&lt;taskdef name="myTask" classname="my.Task" 
classpathref="findbugs.classpath"/&gt;
&lt;/project&gt;
Fixed in AntModel.
Please verify Jared.
Verified.</WithStack>
    <WithOutStack>You get a problem indication in the outline but not in the actual editor text 
for the invalid taskdef from the imported file.
&lt;project&gt;
	&lt;import file="simpleToBeImported.xml"/&gt;
&lt;/project&gt;

----simpleToBeImported.xml----
&lt;project name="none"&gt;
	&lt;taskdef name="myTask" classname="my.Task" 
classpathref="findbugs.classpath"/&gt;
&lt;/project&gt;
Fixed in AntModel.
Please verify Jared.
Verified.</WithOutStack>
  </Bug>
</infozilla-output>

